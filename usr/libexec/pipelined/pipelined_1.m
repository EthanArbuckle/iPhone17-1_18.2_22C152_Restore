void sub_10009D480(_Unwind_Exception *a1, void *__p, uint64_t a3, uint64_t a4, std::system_error *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__pa, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (__pa) {
    operator delete(__pa);
  }
  std::system_error::~system_error((std::system_error *)&a13);
  _Unwind_Resume(a1);
}

void sub_10009D4A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, std::system_error *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  std::system_error::~system_error((std::system_error *)&a13);
  __cxa_free_exception(v13);
  _Unwind_Resume(a1);
}

void sub_10009D4C0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10009D4D4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = a2;
  *(unsigned char *)a1 = MGGetBoolAnswer();
  return a1;
}

void sub_10009D518(_Unwind_Exception *a1)
{
  if (*(unsigned char *)(v1 + 8)) {
    *(unsigned char *)(v1 + 8) = 0;
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10009D528(uint64_t a1, int a2, char a3)
{
  v6 = (std::__shared_weak_count *)operator new(0x1AD8uLL);
  sub_100098C90((uint64_t)v6);
  *(void *)a1 = off_1004592E0;
  *(void *)(a1 + 8) = v6 + 1;
  *(void *)(a1 + 16) = v6;
  atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  *(void *)a1 = off_1004598A8;
  *(void *)(a1 + 24) = off_1004599E8;
  *(void *)(a1 + 32) = off_100459AC8;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = a2;
  *(unsigned char *)(a1 + 68) = a3;
  v7 = sub_10009C848();
  v8 = v7;
  unsigned __int8 v9 = atomic_load((unsigned __int8 *)v7 + 26);
  if ((v9 & 1) == 0 && !*((unsigned char *)v7 + 16))
  {
    *((_DWORD *)v7 + 5) = sub_100058BC0((uint64_t)v7, (unsigned int *)v7 + 3);
    *((unsigned char *)v8 + 16) = 1;
    atomic_store(1u, (unsigned __int8 *)v8 + 26);
  }
  sub_10009D4D4(a1 + 72, *((int *)v8 + 5));
  return a1;
}

void sub_10009D694(void *a1)
{
}

void sub_10009D6A8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_10009D6BC(_Unwind_Exception *a1)
{
  sub_100158D84(v2);
  sub_100158DE0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10009D6D8(uint64_t a1, int a2, uint64_t *a3, char a4)
{
  sub_10009D528(a1, a2, a4);
  uint64_t v6 = *a3;
  if (*a3)
  {
    v8[0] = a1 + 40;
    v8[1] = v6;
    sub_100158E78((uint64_t)v8, a1);
  }
  return a1;
}

void sub_10009D738(_Unwind_Exception *a1)
{
  sub_100159528(v1);
  _Unwind_Resume(a1);
}

void sub_10009D74C(_Unwind_Exception *a1)
{
  sub_100159528(v1);
  _Unwind_Resume(a1);
}

void sub_10009D760(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  v2[8] = *(void *)(a1 + 8);
  v2[9] = v1;
  if (v1) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v1 + 8), 1uLL, memory_order_relaxed);
  }
  sub_100009540(v2);
}

void sub_10009D83C(_Unwind_Exception *a1)
{
  sub_1000BA884(v1 - 48);
  _Unwind_Resume(a1);
}

void sub_10009D850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000243FC(&a9);
  sub_1000BA884(v9 - 48);
  _Unwind_Resume(a1);
}

uint64_t sub_10009D870(uint64_t a1, long long *a2, long long *a3, long long *a4, char a5, long long *a6, uint64_t a7)
{
  long long v8 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v8;
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *(void *)a2 = 0;
  long long v9 = *a3;
  *(void *)(a1 + 40) = *((void *)a3 + 2);
  *(_OWORD *)(a1 + 24) = v9;
  *((void *)a3 + 1) = 0;
  *((void *)a3 + 2) = 0;
  *(void *)a3 = 0;
  long long v10 = *a4;
  *(void *)(a1 + 64) = *((void *)a4 + 2);
  *(_OWORD *)(a1 + 48) = v10;
  *((void *)a4 + 1) = 0;
  *((void *)a4 + 2) = 0;
  *(void *)a4 = 0;
  *(unsigned char *)(a1 + 72) = a5;
  long long v11 = *a6;
  *(void *)(a1 + 96) = *((void *)a6 + 2);
  *(_OWORD *)(a1 + 80) = v11;
  *((void *)a6 + 1) = 0;
  *((void *)a6 + 2) = 0;
  *(void *)a6 = 0;
  *(unsigned char *)(a1 + 104) = 0;
  sub_10000F988(a1 + 136, a7);
  return a1;
}

void sub_10009D908(_Unwind_Exception *a1)
{
  if (*(unsigned char *)(v1 + 104))
  {
    if (*(char *)(v1 + 135) < 0) {
      operator delete(*(void **)(v1 + 112));
    }
    *(unsigned char *)(v1 + 104) = 0;
  }
  sub_1003A7878(v1, (void **)(v1 + 80), (void **)(v1 + 48), (void **)(v1 + 24));
  _Unwind_Resume(a1);
}

void *sub_10009D948(void *result)
{
  uint64_t v1 = result;
  *result = off_100459430;
  v2 = (std::__shared_weak_count *)result[3];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_10009D9E0()
{
  return 0;
}

uint64_t sub_10009D9E8()
{
  return 0;
}

double sub_10009D9F0@<D0>(unsigned int a1@<W0>, void *a2@<X8>)
{
  v4 = operator new(0xA20uLL);
  v4[1] = 0;
  v4[2] = 0;
  void *v4 = off_10045A290;
  v4[3] = off_10045A2E0;
  *((_DWORD *)v4 + 8) = a1;
  uint64_t v5 = 1;
  for (uint64_t i = 9; i != 632; ++i)
  {
    int v7 = 1812433253 * (a1 ^ (a1 >> 30));
    a1 = v7 + v5;
    *((_DWORD *)v4 + i) = i + v7 - 8;
    ++v5;
  }
  *((_OWORD *)v4 + 158) = 0u;
  v4[318] = 0x3FF0000000000000;
  *((unsigned char *)v4 + 2560) = 0;
  v4[321] = 0;
  v4[322] = 0x3FF0000000000000;
  double result = 0.0078125;
  v4[323] = 0x3F80000000000000;
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

double sub_10009DAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)a3;
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_DWORD *)(a1 + 72) = 1065353216;
  *(unsigned char *)(a1 + 80) = 0;
  return result;
}

uint64_t sub_10009DB0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7)
{
  *(_DWORD *)a1 = a5;
  *(_DWORD *)(a1 + 4) = a6;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)a4;
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  sub_10004D8C8(a1, a3, a2, a7);
  return a1;
}

void sub_10009DB64(_Unwind_Exception *a1)
{
  v3 = *(std::__shared_weak_count **)(v1 + 64);
  if (v3) {
    sub_1003A4A40(v3);
  }
  sub_1003A3DE4(v1, (void **)(v1 + 32), (void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_10009DB90(uint64_t a1)
{
  *(void *)a1 = off_1004671D0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  __asm { FMOV            V0.2S, #1.0 }
  *(void *)(a1 + 16) = _D0;
  *(_OWORD *)(a1 + 24) = xmmword_1003FC910;
  return a1;
}

void sub_10009DBE8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10009DBFC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045F700;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_DWORD *)(a1 + 52) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_WORD *)(a1 + 48) = 0;
  sub_10009DCA0(a1, a2);
  return a1;
}

void sub_10009DC70(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10009DC8C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10009DCA0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 56);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 56))
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 56) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a2 + 56) & 2) == 0)
  {
    goto LABEL_6;
  }
  char v8 = *(unsigned char *)(a2 + 48);
  *(_DWORD *)(a1 + 56) |= 2u;
  *(unsigned char *)(a1 + 48) = v8;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 56) |= 4u;
  *(void *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
LABEL_16:
    uint64_t v11 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 56) |= 0x10u;
    *(void *)(a1 + 40) = v11;
    if ((*(_DWORD *)(a2 + 56) & 0x20) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_10;
  }
LABEL_15:
  uint64_t v10 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 56) |= 8u;
  *(void *)(a1 + 32) = v10;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_9:
  if ((v4 & 0x20) != 0)
  {
LABEL_10:
    char v5 = *(unsigned char *)(a2 + 49);
    *(_DWORD *)(a1 + 56) |= 0x20u;
    *(unsigned char *)(a1 + 49) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10009DDE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10009DDF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10009DE08(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045F650;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_DWORD *)(a1 + 44) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  sub_10009DEAC(a1, a2);
  return a1;
}

void sub_10009DE7C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10009DE98(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10009DEAC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 48);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 48))
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 48) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 48);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_12:
      uint64_t v9 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 48) |= 4u;
      *(void *)(a1 + 24) = v9;
      if ((*(_DWORD *)(a2 + 48) & 8) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_8;
    }
  }
  else if ((*(unsigned char *)(a2 + 48) & 2) == 0)
  {
    goto LABEL_6;
  }
  char v8 = *(unsigned char *)(a2 + 40);
  *(_DWORD *)(a1 + 48) |= 2u;
  *(unsigned char *)(a1 + 40) = v8;
  int v4 = *(_DWORD *)(a2 + 48);
  if ((v4 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_7:
  if ((v4 & 8) != 0)
  {
LABEL_8:
    uint64_t v5 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 48) |= 8u;
    *(void *)(a1 + 32) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10009DFAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10009DFC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10009DFD4(uint64_t a1)
{
  *(void *)a1 = off_10045F4F0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_10009E028(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045F4F0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_DWORD *)(a1 + 52) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(unsigned char *)(a1 + 48) = 0;
  sub_10009E0CC(a1, a2);
  return a1;
}

void sub_10009E09C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10009E0B8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10009E0CC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 56);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 56))
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 56) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a2 + 56) & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 56) |= 2u;
  *(void *)(a1 + 24) = v8;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_14:
    uint64_t v10 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 56) |= 8u;
    *(void *)(a1 + 40) = v10;
    if ((*(_DWORD *)(a2 + 56) & 0x10) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_9;
  }
LABEL_13:
  uint64_t v9 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 56) |= 4u;
  *(void *)(a1 + 32) = v9;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_8:
  if ((v4 & 0x10) != 0)
  {
LABEL_9:
    char v5 = *(unsigned char *)(a2 + 48);
    *(_DWORD *)(a1 + 56) |= 0x10u;
    *(unsigned char *)(a1 + 48) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10009E1EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10009E200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10009E214(uint64_t a1)
{
  *(void *)a1 = off_10045E680;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_10009E268(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045E680;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  sub_10009E308(a1, a2);
  return a1;
}

void sub_10009E2D8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10009E2F4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10009E308(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 76);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 76))
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 76) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 76);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_15;
    }
  }
  else if ((*(unsigned char *)(a2 + 76) & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 76) |= 2u;
  *(void *)(a1 + 24) = v8;
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t v9 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 76) |= 4u;
  *(void *)(a1 + 32) = v9;
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v10 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 76) |= 8u;
  *(void *)(a1 + 40) = v10;
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_18:
    uint64_t v12 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 76) |= 0x20u;
    *(void *)(a1 + 56) = v12;
    if ((*(_DWORD *)(a2 + 76) & 0x40) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_11;
  }
LABEL_17:
  uint64_t v11 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 76) |= 0x10u;
  *(void *)(a1 + 48) = v11;
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x20) != 0) {
    goto LABEL_18;
  }
LABEL_10:
  if ((v4 & 0x40) != 0)
  {
LABEL_11:
    uint64_t v5 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 76) |= 0x40u;
    *(void *)(a1 + 64) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10009E468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10009E47C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10009E490(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    return sub_1000091A4(v4, a2);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10009E4FC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 76);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(a1 + 56) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 16) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(a1 + 64) = 0;
    *(_DWORD *)(a1 + 60) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  double result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 10) = 0;
  *((_DWORD *)result + 17) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10009E53C(uint64_t a1)
{
  *(void *)a1 = off_100456B20;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 40) = 0xFFFFFFFFLL;
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0;
  return a1;
}

void sub_10009E594(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void *sub_10009E5A8(void *a1)
{
  *a1 = off_100458008;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  return a1;
}

void sub_10009E5F0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void *sub_10009E604(void *a1)
{
  *a1 = off_1004580B8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[4] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[5] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[7] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[8] = 0;
  a1[6] = 0;
  a1[9] = 0;
  return a1;
}

void sub_10009E668(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10009E67C(uint64_t a1)
{
  *(void *)a1 = off_100458638;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_10009E6D8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10009E6EC(uint64_t a1)
{
  *(void *)a1 = off_100457F58;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 32) = 0;
  return a1;
}

void sub_10009E73C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10009E750(uint64_t a1)
{
  *(void *)a1 = off_100458588;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  return a1;
}

void sub_10009E79C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

_DWORD *sub_10009E7B0(_DWORD *result, unsigned __int16 a2, unsigned __int16 a3, unsigned __int16 a4)
{
  int v4 = (14 - a3) / 12;
  *double result = 365 * (unsigned __int16)(a2 - v4 + 4800)
          + a4
          + ((unsigned __int16)(a2 - v4 + 4800) >> 2)
          - (unsigned __int16)(a2 - v4 + 4800) / 0x64u
          + (unsigned __int16)(a2 - v4 + 4800) / 0x190u
          - 32045
          + ((858993460 * (unint64_t)(153 * (unsigned __int16)(a3 + 12 * v4 - 3) + 2)) >> 32);
  if (a3 > 0xBu) {
    goto LABEL_14;
  }
  if (((1 << a3) & 0xA50) != 0)
  {
    unsigned __int16 v5 = 30;
    goto LABEL_4;
  }
  if (a3 == 2)
  {
    unsigned __int16 v5 = 28;
    if ((a2 & 3) == 0)
    {
      HIDWORD(v7) = -1030792151 * a2;
      LODWORD(v7) = HIDWORD(v7);
      unsigned int v6 = v7 >> 2;
      LODWORD(v7) = HIDWORD(v7);
      if ((v7 >> 4) < 0xA3D70B || v6 > 0x28F5C28) {
        unsigned __int16 v5 = 29;
      }
      else {
        unsigned __int16 v5 = 28;
      }
    }
  }
  else
  {
LABEL_14:
    unsigned __int16 v5 = 31;
  }
LABEL_4:
  if (v5 < a4)
  {
    sub_1000AE4B0(&v9, "Day of month is not valid for year");
    std::logic_error::logic_error(&v10, &v9);
    v10.__vftable = (std::logic_error_vtbl *)&off_10045D218;
    sub_1001918F4(&v10);
  }
  return result;
}

void sub_10009E940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, std::out_of_range a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10009E96C(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v2 = (char *)operator new(0xD8uLL);
  strcpy(v2, "first");
  *(_OWORD *)(v2 + 6) = *(_OWORD *)__p;
  v2[22] = v28;
  v2[23] = 5;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v2 + 24;
  *(void *)(a1 + 16) = v2 + 216;
  HIBYTE(v28) = 6;
  strcpy((char *)__p, "second");
  if ((unint64_t)(v2 + 24) >= *(void *)(a1 + 16))
  {
    uint64_t v3 = sub_10008CF94((void **)a1, (uint64_t)__p);
    int v4 = SHIBYTE(v28);
    *(void *)(a1 + 8) = v3;
    if (v4 < 0)
    {
      operator delete(__p[0]);
      uint64_t v3 = *(char **)(a1 + 8);
    }
  }
  else
  {
    *(_OWORD *)(v2 + 24) = *(_OWORD *)__p;
    *((void *)v2 + 5) = v28;
    uint64_t v3 = v2 + 48;
    *(void *)(a1 + 8) = v3;
  }
  HIBYTE(v28) = 5;
  strcpy((char *)__p, "third");
  if ((unint64_t)v3 >= *(void *)(a1 + 16))
  {
    unsigned int v6 = sub_10008CF94((void **)a1, (uint64_t)__p);
    int v7 = SHIBYTE(v28);
    *(void *)(a1 + 8) = v6;
    if (v7 < 0)
    {
      operator delete(__p[0]);
      unsigned int v6 = *(char **)(a1 + 8);
    }
  }
  else
  {
    long long v5 = *(_OWORD *)__p;
    *((void *)v3 + 2) = v28;
    *(_OWORD *)uint64_t v3 = v5;
    unsigned int v6 = v3 + 24;
    *(void *)(a1 + 8) = v6;
  }
  HIBYTE(v28) = 6;
  strcpy((char *)__p, "fourth");
  if ((unint64_t)v6 >= *(void *)(a1 + 16))
  {
    std::string v9 = sub_10008CF94((void **)a1, (uint64_t)__p);
    int v10 = SHIBYTE(v28);
    *(void *)(a1 + 8) = v9;
    if (v10 < 0)
    {
      operator delete(__p[0]);
      std::string v9 = *(char **)(a1 + 8);
    }
  }
  else
  {
    long long v8 = *(_OWORD *)__p;
    *((void *)v6 + 2) = v28;
    *(_OWORD *)unsigned int v6 = v8;
    std::string v9 = v6 + 24;
    *(void *)(a1 + 8) = v9;
  }
  HIBYTE(v28) = 5;
  strcpy((char *)__p, "fifth");
  if ((unint64_t)v9 >= *(void *)(a1 + 16))
  {
    uint64_t v12 = sub_10008CF94((void **)a1, (uint64_t)__p);
    int v13 = SHIBYTE(v28);
    *(void *)(a1 + 8) = v12;
    if (v13 < 0)
    {
      operator delete(__p[0]);
      uint64_t v12 = *(char **)(a1 + 8);
    }
  }
  else
  {
    long long v11 = *(_OWORD *)__p;
    *((void *)v9 + 2) = v28;
    *(_OWORD *)std::string v9 = v11;
    uint64_t v12 = v9 + 24;
    *(void *)(a1 + 8) = v12;
  }
  HIBYTE(v28) = 4;
  strcpy((char *)__p, "last");
  if ((unint64_t)v12 >= *(void *)(a1 + 16))
  {
    v15 = sub_10008CF94((void **)a1, (uint64_t)__p);
    int v16 = SHIBYTE(v28);
    *(void *)(a1 + 8) = v15;
    if (v16 < 0)
    {
      operator delete(__p[0]);
      v15 = *(char **)(a1 + 8);
    }
  }
  else
  {
    long long v14 = *(_OWORD *)__p;
    *((void *)v12 + 2) = v28;
    *(_OWORD *)uint64_t v12 = v14;
    v15 = v12 + 24;
    *(void *)(a1 + 8) = v15;
  }
  HIBYTE(v28) = 6;
  strcpy((char *)__p, "before");
  if ((unint64_t)v15 >= *(void *)(a1 + 16))
  {
    v18 = sub_10008CF94((void **)a1, (uint64_t)__p);
    int v19 = SHIBYTE(v28);
    *(void *)(a1 + 8) = v18;
    if (v19 < 0)
    {
      operator delete(__p[0]);
      v18 = *(char **)(a1 + 8);
    }
  }
  else
  {
    long long v17 = *(_OWORD *)__p;
    *((void *)v15 + 2) = v28;
    *(_OWORD *)v15 = v17;
    v18 = v15 + 24;
    *(void *)(a1 + 8) = v18;
  }
  HIBYTE(v28) = 5;
  strcpy((char *)__p, "after");
  if ((unint64_t)v18 >= *(void *)(a1 + 16))
  {
    v21 = sub_10008CF94((void **)a1, (uint64_t)__p);
    int v22 = SHIBYTE(v28);
    *(void *)(a1 + 8) = v21;
    if (v22 < 0)
    {
      operator delete(__p[0]);
      v21 = *(char **)(a1 + 8);
    }
  }
  else
  {
    long long v20 = *(_OWORD *)__p;
    *((void *)v18 + 2) = v28;
    *(_OWORD *)v18 = v20;
    v21 = v18 + 24;
    *(void *)(a1 + 8) = v21;
  }
  HIBYTE(v28) = 2;
  strcpy((char *)__p, "of");
  if ((unint64_t)v21 >= *(void *)(a1 + 16))
  {
    v24 = sub_10008CF94((void **)a1, (uint64_t)__p);
    int v25 = SHIBYTE(v28);
    *(void *)(a1 + 8) = v24;
    if (v25 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    long long v23 = *(_OWORD *)__p;
    *((void *)v21 + 2) = v28;
    *(_OWORD *)v21 = v23;
    *(void *)(a1 + 8) = v21 + 24;
  }
  return a1;
}

void sub_10009ED34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    sub_1000E0AA4(v16);
    _Unwind_Resume(a1);
  }
  sub_1000E0AA4(v16);
  _Unwind_Resume(a1);
}

uint64_t sub_10009ED88(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  if (*(char *)(a2 + 31) < 0)
  {
    sub_1000559FC((unsigned char *)(a1 + 8), *(void **)(a2 + 8), *(void *)(a2 + 16));
    uint64_t v5 = a1 + 32;
    if ((*(char *)(a2 + 55) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = v4;
    uint64_t v5 = a1 + 32;
    if ((*(char *)(a2 + 55) & 0x80000000) == 0)
    {
LABEL_3:
      long long v6 = *(_OWORD *)(a2 + 32);
      *(void *)(v5 + 16) = *(void *)(a2 + 48);
      *(_OWORD *)uint64_t v5 = v6;
      goto LABEL_6;
    }
  }
  sub_1000559FC((unsigned char *)v5, *(void **)(a2 + 32), *(void *)(a2 + 40));
LABEL_6:
  if (*(char *)(a2 + 79) < 0)
  {
    sub_1000559FC((unsigned char *)(a1 + 56), *(void **)(a2 + 56), *(void *)(a2 + 64));
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = v7;
  }
  long long v8 = (unsigned char *)(a1 + 80);
  if (*(char *)(a2 + 103) < 0)
  {
    sub_1000559FC(v8, *(void **)(a2 + 80), *(void *)(a2 + 88));
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(_OWORD *)long long v8 = v9;
  }
  return a1;
}

void sub_10009EEA0(_Unwind_Exception *exception_object)
{
  if (v1[79] < 0)
  {
    operator delete(*v4);
    if ((v1[55] & 0x80000000) == 0)
    {
LABEL_3:
      if ((v1[31] & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((v1[55] & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v3);
  if ((v1[31] & 0x80000000) == 0) {
LABEL_4:
  }
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(*v2);
  _Unwind_Resume(exception_object);
}

void sub_10009EF14(std::locale::facet *this)
{
  this->__vftable = (std::locale::facet_vtbl *)off_10045D240;
  if (SHIBYTE(this[22].__vftable) < 0) {
    operator delete(this[21].__vftable);
  }
  sub_100003CA4(this);

  operator delete();
}

void sub_10009EF88(uint64_t a1)
{
  *(void *)a1 = off_1004593D0;
  if (*(unsigned char *)(a1 + 24))
  {
    (**(void (***)(uint64_t))(a1 + 32))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }

  operator delete();
}

uint64_t sub_10009F020(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v1 = result + 32;
    double result = (**(uint64_t (***)(uint64_t))(result + 32))(result + 32);
    *(unsigned char *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_10009F074(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void sub_10009F0A0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)a1)
  {
    if (*(unsigned char *)a2)
    {
      long long v4 = (uint64_t *)(a2 + 8);
      sub_10029EA48(a1, v4);
    }
    else
    {
      sub_1000748BC((void *)(a1 + 8));
      *(unsigned char *)a1 = 0;
    }
  }
  else if (*(unsigned char *)a2)
  {
    uint64_t v5 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v5;
    if (v5) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
    }
    sub_1000771DC(a1 + 24, a2 + 24);
    uint64_t v6 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = v6;
    if (v6) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
    }
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *(unsigned char *)a1 = 1;
  }
}

void sub_10009F160(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3) {
    sub_1003A3868(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_10009F178(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)a1)
  {
    sub_10029EA48(a1, (uint64_t *)a2);
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)(a1 + 8) = *(void *)a2;
    *(void *)(a1 + 16) = v4;
    if (v4) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
    }
    sub_1000771DC(a1 + 24, a2 + 16);
    uint64_t v5 = *(void *)(a2 + 64);
    *(void *)(a1 + 64) = *(void *)(a2 + 56);
    *(void *)(a1 + 72) = v5;
    if (v5) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
    }
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 72);
    *(unsigned char *)a1 = 1;
  }
}

void sub_10009F214(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3) {
    sub_1003A6B98(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_10009F22C()
{
}

void sub_10009F34C(void *a1)
{
}

void sub_10009F358(_Unwind_Exception *a1)
{
}

uint64_t sub_10009F36C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 48) = 0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  uint64_t v4 = *a1;
  if ((unint64_t)(*a1 - 0x7FFFFFFFFFFFFFFELL) > 2)
  {
    unint64_t v7 = sub_10009698C(v4 / 86400000000);
    int v8 = (14 - WORD1(v7)) / 12;
    int v6 = WORD2(v7)
       + 365 * (unsigned __int16)(v7 - v8 + 4800)
       + ((unsigned __int16)(v7 - v8 + 4800) >> 2)
       - (unsigned __int16)(v7 - v8 + 4800) / 0x64u
       + (unsigned __int16)(v7 - v8 + 4800) / 0x190u
       - 32045
       + ((858993460 * (unint64_t)(153 * (unsigned __int16)(WORD1(v7) + 12 * v8 - 3) + 2)) >> 32);
  }
  else
  {
    if (v4 == 0x8000000000000000) {
      int v5 = 0;
    }
    else {
      int v5 = -2;
    }
    if (v4 == 0x7FFFFFFFFFFFFFFFLL) {
      int v6 = -1;
    }
    else {
      int v6 = v5;
    }
  }
  int v12 = v6;
  uint64_t result = sub_100096788(&v12, a2);
  uint64_t v10 = *a1;
  unint64_t v11 = 0x7FFFFFFFFFFFFFFELL;
  if (*a1 == 0x8000000000000000) {
    unint64_t v11 = 0x8000000000000000;
  }
  if (v10 != 0x7FFFFFFFFFFFFFFFLL) {
    uint64_t v10 = v11;
  }
  if ((unint64_t)(*a1 - 0x7FFFFFFFFFFFFFFELL) > 2) {
    uint64_t v10 = *a1 % 86400000000;
  }
  *(_DWORD *)(a2 + 8) = (int)v10 / -694967296;
  *(_DWORD *)a2 = (int)(v10 / 1000000) % 60;
  *(_DWORD *)(a2 + 4) = (int)(v10 / 60000000) % 60;
  *(_DWORD *)(a2 + 32) = -1;
  return result;
}

long long *sub_10009F58C()
{
  return &xmmword_10047D450;
}

uint64_t sub_10009F598@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = a1;
  a3[1] = -1;
  a3[2] = -1;
  *a3 = -1;
  if (a2)
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  if (*(char *)(a1 + 23) < 0) {
    a1 = *(void *)a1;
  }
  uint64_t result = statfs((const char *)a1, &v9);
  if (result)
  {
    uint64_t result = *__error();
    if (result) {
      return sub_1000ADBDC(result, v4, (uint64_t)a2, (uint64_t)"boost::filesystem::space");
    }
  }
  if (a2)
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  uint64_t f_bsize = v9.f_bsize;
  uint64_t v8 = v9.f_bfree * v9.f_bsize;
  *a3 = v9.f_blocks * v9.f_bsize;
  a3[1] = v8;
  a3[2] = v9.f_bavail * f_bsize;
  return result;
}

void *sub_10009F680()
{
  return &unk_10047D468;
}

void sub_10009F68C(std::string *this)
{
  uint64_t v1 = this;
  std::string::pointer data = this[1].__r_.__value_.__l.__data_;
  if (data[23] < 0) {
    unint64_t v3 = *((void *)data + 1);
  }
  else {
    unint64_t v3 = data[23];
  }
  uint64_t v4 = HIBYTE(v1->__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
  {
    if (v1->__r_.__value_.__l.__size_) {
      goto LABEL_13;
    }
  }
  else if (*((unsigned char *)&v1->__r_.__value_.__s + 23))
  {
    goto LABEL_13;
  }
  std::string::size_type size = v1[1].__r_.__value_.__l.__size_;
  if (size + 1 == v3)
  {
    std::string::pointer v6 = data;
    if (data[23] < 0) {
      std::string::pointer v6 = *(std::string::pointer *)data;
    }
    if (v6[size] == 47)
    {
      v1[1].__r_.__value_.__l.__size_ = v3;
      return;
    }
  }
LABEL_13:
  if ((v4 & 0x80) != 0)
  {
    p_std::string::size_type size = &v1[1].__r_.__value_.__l.__size_;
    std::string::size_type v8 = v1[1].__r_.__value_.__l.__size_ + v1->__r_.__value_.__l.__size_;
    v1[1].__r_.__value_.__l.__size_ = v8;
    if (v8 >= v3)
    {
LABEL_63:
      *v1->__r_.__value_.__l.__data_ = 0;
      v1->__r_.__value_.__l.__size_ = 0;
      return;
    }
  }
  else
  {
    p_std::string::size_type size = &v1[1].__r_.__value_.__l.__size_;
    std::string::size_type v8 = v1[1].__r_.__value_.__l.__size_ + v4;
    v1[1].__r_.__value_.__l.__size_ = v8;
    if (v8 >= v3)
    {
LABEL_15:
      v1->__r_.__value_.__s.__data_[0] = 0;
      *((unsigned char *)&v1->__r_.__value_.__s + 23) = 0;
      return;
    }
  }
  std::string::pointer v9 = data;
  if (data[23] < 0) {
    std::string::pointer v9 = *(std::string::pointer *)data;
  }
  if (v9[v8] == 47)
  {
    unint64_t v21 = 0;
    if (data[23] < 0) {
      std::string::pointer data = *(std::string::pointer *)data;
    }
    unint64_t v10 = sub_100056140(data, v3, &v21);
    std::string::size_type v8 = *p_size;
    if (*p_size == v10)
    {
      if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
      {
        if (v1->__r_.__value_.__l.__size_ == v21)
        {
          v1->__r_.__value_.__l.__size_ = 1;
          uint64_t v1 = (std::string *)v1->__r_.__value_.__r.__words[0];
          goto LABEL_28;
        }
      }
      else if (v21 == HIBYTE(v1->__r_.__value_.__r.__words[2]))
      {
        *((unsigned char *)&v1->__r_.__value_.__s + 23) = 1;
LABEL_28:
        LOWORD(v1->__r_.__value_.__l.__data_) = 47;
        return;
      }
    }
    for (std::string::pointer data = v1[1].__r_.__value_.__l.__data_; v3 != v8; *p_size = ++v8)
    {
      std::string::pointer v11 = data;
      if (data[23] < 0) {
        std::string::pointer v11 = *(std::string::pointer *)data;
      }
      if (v11[v8] != 47) {
        goto LABEL_46;
      }
    }
    unint64_t v12 = v3 - 1 >= v10 ? v10 : v3 - 1;
    std::string::pointer v13 = data[23] >= 0 ? data : *(std::string::pointer *)data;
    std::string::pointer v14 = v13 - 2;
    unint64_t v15 = v3;
    while (1)
    {
      unint64_t v16 = v15 - 1;
      if (v15 - 1 <= v10) {
        break;
      }
      int v17 = v14[v15--];
      if (v17 != 47) {
        goto LABEL_45;
      }
    }
    unint64_t v16 = v12;
LABEL_45:
    std::string::size_type v8 = v3;
    if (v16 != v10)
    {
      v1[1].__r_.__value_.__l.__size_ = v3 - 1;
      if ((SHIBYTE(v1->__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_15;
      }
      goto LABEL_63;
    }
  }
LABEL_46:
  if (data[23] < 0)
  {
    std::string::pointer v18 = *(std::string::pointer *)data;
    std::string::size_type v19 = *((void *)data + 1);
  }
  else
  {
    std::string::pointer v18 = data;
    std::string::size_type v19 = data[23];
  }
  if (v19 <= v8) {
    goto LABEL_53;
  }
  unint64_t v20 = v8;
  while (v18[v20] != 47)
  {
    if (v19 == ++v20) {
      goto LABEL_53;
    }
  }
  if (v19 == v20 || v20 == -1) {
LABEL_53:
  }
    unint64_t v20 = v3;
  if (data[23] < 0) {
    std::string::pointer data = *(std::string::pointer *)data;
  }

  sub_100055EA4(v1, &data[v8], &data[v20], v20 - v8);
}

void sub_10009F934(std::string *a1)
{
  uint64_t v1 = a1;
  std::string::pointer data = a1[1].__r_.__value_.__l.__data_;
  if (data[23] < 0)
  {
    std::string::pointer v4 = data;
    std::string::pointer data = *(std::string::pointer *)data;
    unint64_t v3 = *((void *)v4 + 1);
  }
  else
  {
    unint64_t v3 = data[23];
  }
  unint64_t v31 = 0;
  unint64_t v5 = sub_100056140(data, v3, &v31);
  std::string::size_type size = v1[1].__r_.__value_.__l.__size_;
  if (v5 >= v3 || size != v5)
  {
    if (v3 >= 2 && size == v3)
    {
      std::string::pointer v9 = v1[1].__r_.__value_.__l.__data_;
      unint64_t v10 = v3 - 1;
      std::string::pointer v11 = v9;
      if (v9[23] < 0) {
        std::string::pointer v11 = *(std::string::pointer *)v9;
      }
      if (v11[v10] == 47)
      {
        if (v10 >= v5) {
          unint64_t v12 = v5;
        }
        else {
          unint64_t v12 = v3 - 1;
        }
        if (v9[23] < 0) {
          std::string::pointer v9 = *(std::string::pointer *)v9;
        }
        std::string::pointer v13 = v9 - 2;
        while (1)
        {
          unint64_t v14 = v3 - 1;
          if (v3 - 1 <= v5) {
            break;
          }
          int v15 = v13[v3--];
          if (v15 != 47) {
            goto LABEL_26;
          }
        }
        unint64_t v14 = v12;
LABEL_26:
        if (v14 != v5)
        {
          v1[1].__r_.__value_.__l.__size_ = v10;
          if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
          {
            *v1->__r_.__value_.__l.__data_ = 0;
            v1->__r_.__value_.__l.__size_ = 0;
          }
          else
          {
            v1->__r_.__value_.__s.__data_[0] = 0;
            *((unsigned char *)&v1->__r_.__value_.__s + 23) = 0;
          }
          return;
        }
      }
    }
    unint64_t v16 = v31;
    std::string::size_type v17 = size + 1;
    while (1)
    {
      unint64_t v18 = v17 - 1;
      if (v17 - 1 <= v31) {
        break;
      }
      if (v17 - v5 == 2)
      {
        v1[1].__r_.__value_.__l.__size_ = v5;
        if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
        {
          v1->__r_.__value_.__l.__size_ = 1;
          uint64_t v1 = (std::string *)v1->__r_.__value_.__r.__words[0];
        }
        else
        {
          *((unsigned char *)&v1->__r_.__value_.__s + 23) = 1;
        }
        LOWORD(v1->__r_.__value_.__l.__data_) = 47;
        return;
      }
      std::string::pointer v19 = v1[1].__r_.__value_.__l.__data_;
      std::string::pointer v20 = v19;
      if (v19[23] < 0) {
        std::string::pointer v20 = *(std::string::pointer *)v19;
      }
      int v21 = v20[v17-- - 2];
      if (v21 != 47)
      {
        std::string::pointer v22 = *(std::string::pointer *)v19;
        if (v19[23] >= 0) {
          std::string::pointer v22 = v1[1].__r_.__value_.__l.__data_;
        }
        unint64_t v23 = v18 - 1;
        unint64_t v24 = v18;
        while (1)
        {
          unint64_t v25 = v24;
          if (v23 + 1 <= v31) {
            break;
          }
          int v26 = v22[v23--];
          --v24;
          if (v26 == 47)
          {
            unint64_t v27 = v23 + 2;
            goto LABEL_48;
          }
        }
        unint64_t v27 = v31;
LABEL_48:
        v1[1].__r_.__value_.__l.__size_ = v27;
        if (v19[23] < 0) {
          std::string::pointer v19 = *(std::string::pointer *)v19;
        }
        uint64_t v28 = &v19[v27];
        v30 = &v19[v18];
        if (v16 <= v25) {
          unint64_t v16 = v25;
        }
        std::string::size_type v29 = v18 - v16;
        goto LABEL_42;
      }
    }
  }
  v1[1].__r_.__value_.__l.__size_ = 0;
  uint64_t v28 = v1[1].__r_.__value_.__l.__data_;
  if (v28[23] < 0) {
    uint64_t v28 = *(std::string::value_type **)v28;
  }
  std::string::size_type v29 = v31;
  v30 = &v28[v31];
LABEL_42:

  sub_100055EA4(v1, v28, v30, v29);
}

void sub_10009FB5C()
{
}

void **sub_10009FBAC(void **result, uint64_t a2)
{
  if (**result != a2) {
    operator new();
  }
  return result;
}

void sub_10009FD34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100236690((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10009FD48(uint64_t a1, double a2)
{
  *(void *)a1 = off_100452B78;
  *(double *)(a1 + 8) = a2;
  *(unsigned char *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 400) = 0;
  *(void *)(a1 + 408) = 0;
  *(void *)(a1 + 416) = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)(a1 + 408), 0, 0.0);
  (*(void (**)(uint64_t))(*(void *)a1 + 32))(a1);
  return a1;
}

void sub_10009FDE4(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 400)) {
    cnframework::TimestampedEvent::~TimestampedEvent(v2);
  }
  _Unwind_Resume(exception_object);
}

double sub_10009FE00(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32)) {
    *(unsigned char *)(a1 + 32) = 0;
  }
  if (*(unsigned char *)(a1 + 400))
  {
    cnframework::TimestampedEvent::~TimestampedEvent((cnframework::TimestampedEvent *)(a1 + 40));
    *(unsigned char *)(a1 + 400) = 0;
  }
  long long v3 = 0uLL;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&v3, 0, 0.0);
  double result = *(double *)&v3;
  *(_OWORD *)(a1 + 408) = v3;
  return result;
}

void *sub_10009FE68(void *a1, uint64_t a2)
{
  *a1 = off_100463748;
  sub_1000332D4((uint64_t)(a1 + 1), a2);
  return a1;
}

uint64_t sub_10009FEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100099FB4(a2);
  uint64_t result = sub_10009DBFC(a1, v3);
  *(unsigned char *)(a1 + 64) = 0;
  return result;
}

double sub_10009FEE4(uint64_t a1, unint64_t a2)
{
  unsigned int v2 = *(_DWORD *)(a1 + 48);
  double result = ((double)a2 + *(double *)(a1 + 56) * (double)v2) / ((double)v2 + 1.0);
  *(double *)(a1 + 56) = result;
  *(_DWORD *)(a1 + 48) = v2 + 1;
  return result;
}

void sub_10009FF24(sqlite3 **a1, int a2)
{
  int v4 = sqlite3_extended_result_codes(*a1, a2);
  sub_100088644(v4, *a1);
  if (v4)
  {
    unint64_t v5 = __error();
    sub_100295674(*v5, &v25);
    __cxa_allocate_exception(0x40uLL);
    std::to_string(&v20, a2);
    std::string::pointer v6 = std::string::insert(&v20, 0, "Failed to change state of extended error codes, on=");
    long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
    v21.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v7;
    v6->__r_.__value_.__l.__size_ = 0;
    v6->__r_.__value_.__r.__words[2] = 0;
    v6->__r_.__value_.__r.__words[0] = 0;
    sub_1000AE4B0(v18, " w/ ");
    if ((v19 & 0x80u) == 0) {
      std::string::size_type v8 = (const std::string::value_type *)v18;
    }
    else {
      std::string::size_type v8 = (const std::string::value_type *)v18[0];
    }
    if ((v19 & 0x80u) == 0) {
      std::string::size_type v9 = v19;
    }
    else {
      std::string::size_type v9 = v18[1];
    }
    unint64_t v10 = std::string::append(&v21, v8, v9);
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v22.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v22.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&__dst, v25.__r_.__value_.__l.__data_, v25.__r_.__value_.__l.__size_);
    }
    else {
      std::string __dst = v25;
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_dst = &__dst;
    }
    else {
      p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __dst.__r_.__value_.__l.__size_;
    }
    unint64_t v14 = std::string::append(&v22, (const std::string::value_type *)p_dst, size);
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v23.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v24, &v23);
    v24.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v16);
    sub_100204FC4(&v24, (uint64_t)"void db::resources::handle::set_extended_error_codes(BOOL)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.cpp", 283, (uint64_t)v16);
  }
}

void sub_1000A0228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,void *a62,uint64_t a63)
{
  if (a22 < 0)
  {
    operator delete(__p);
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a35 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a10);
  if ((a35 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a28 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a30);
  if ((a28 & 0x80000000) == 0)
  {
LABEL_5:
    sub_100205504((std::runtime_error *)(v69 - 152));
    v71 = a40;
    if (!a40)
    {
LABEL_12:
      std::runtime_error::~runtime_error((std::runtime_error *)(v69 - 168));
      if (*(char *)(v69 - 169) < 0)
      {
        operator delete(*(void **)(v69 - 192));
        if ((a48 & 0x80000000) == 0)
        {
LABEL_14:
          if ((*(char *)(v69 - 201) & 0x80000000) == 0) {
            goto LABEL_15;
          }
          goto LABEL_22;
        }
      }
      else if ((a48 & 0x80000000) == 0)
      {
        goto LABEL_14;
      }
      operator delete(a43);
      if ((*(char *)(v69 - 201) & 0x80000000) == 0)
      {
LABEL_15:
        if ((a55 & 0x80000000) == 0) {
          goto LABEL_16;
        }
        goto LABEL_23;
      }
LABEL_22:
      operator delete(*(void **)(v69 - 224));
      if ((a55 & 0x80000000) == 0)
      {
LABEL_16:
        if ((a67 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        goto LABEL_24;
      }
LABEL_23:
      operator delete(a50);
      if ((a67 & 0x80000000) == 0)
      {
LABEL_17:
        if (a61 < 0) {
          goto LABEL_18;
        }
        goto LABEL_25;
      }
LABEL_24:
      operator delete(a62);
      if (a61 < 0)
      {
LABEL_18:
        operator delete(a56);
        if ((v68 & 1) == 0)
        {
LABEL_27:
          if (*(char *)(v69 - 65) < 0) {
            operator delete(*(void **)(v69 - 88));
          }
          _Unwind_Resume(a1);
        }
LABEL_26:
        __cxa_free_exception(v67);
        goto LABEL_27;
      }
LABEL_25:
      if (!v68) {
        goto LABEL_27;
      }
      goto LABEL_26;
    }
LABEL_11:
    operator delete(v71);
    goto LABEL_12;
  }
LABEL_10:
  operator delete(a23);
  sub_100205504((std::runtime_error *)(v69 - 152));
  v71 = a40;
  if (!a40) {
    goto LABEL_12;
  }
  goto LABEL_11;
}

uint64_t sub_1000A0440(uint64_t result)
{
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)double result = -1;
  *(void *)(result + 8) = off_10045D938;
  *(unsigned char *)(result + 32) &= 0xFCu;
  return result;
}

uint64_t sub_1000A0478(uint64_t result, __int16 a2)
{
  *(_WORD *)double result = a2;
  *(void *)(result + 8) = 0;
  return result;
}

uint64_t sub_1000A0484(uint64_t result)
{
  *(void *)double result = 0x7FF8000000000000;
  *(void *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 892857142;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void sub_1000A04AC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  [WeakRetained start];
}

void sub_1000A04F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1000A0508(uint64_t a1, uint64_t a2)
{
  sub_1000A1624(&v6, a2);
  uint64_t v3 = operator new(0x108uLL);
  v3[1] = 0;
  v3[2] = 0;
  void *v3 = off_100454870;
  v3[4] = v6;
  sub_1000A3BE8((uint64_t)(v3 + 5), (uint64_t)v7);
  *((_DWORD *)v3 + 6) = 0;
  std::string::size_type v8 = (char *)(v3 + 3);
  std::string::size_type v9 = (std::__shared_weak_count *)v3;
  sub_100045938(a1, (uint64_t)&v8);
  int v4 = v9;
  if (v9 && !atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  return nullsub_37(v7);
}

void sub_1000A05F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000E11EC(v2 - 48);
  nullsub_37((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1000A0610(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  nullsub_37((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1000A0634(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  nullsub_37((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A064C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  *(void *)a1 = *(void *)(a3 + 40);
  *(_DWORD *)(a1 + 8) = a2;
  sub_10001D800(a1 + 16, a4);
  sub_100018854(a1 + 176, a3);
  return a1;
}

uint64_t sub_1000A069C(uint64_t a1, _DWORD *a2, double a3)
{
  *(_DWORD *)a1 = *a2;
  *(unsigned char *)(a1 + 8) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  unint64_t v5 = (double *)operator new(0x28uLL);
  v5[1] = 0.0;
  v5[2] = 0.0;
  *(void *)unint64_t v5 = off_100463020;
  *((void *)v5 + 3) = off_100463070;
  v5[4] = a3;
  *(void *)(a1 + 56) = v5 + 3;
  *(void *)(a1 + 64) = v5;
  *(_DWORD *)(a1 + 72) = 0;
  return a1;
}

uint64_t sub_1000A0730(uint64_t a1)
{
  *(void *)a1 = off_100468808;
  uint64_t v2 = sub_100058E7C();
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_10009C404(v2);
  sub_1000A07A0(a1 + 32, *(unsigned int *)(v3 + 60));
  return a1;
}

void sub_1000A0790(_Unwind_Exception *a1)
{
  if (*(unsigned char *)(v1 + 16)) {
    *(unsigned char *)(v1 + 16) = 0;
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1000A07A0(uint64_t a1, unint64_t a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  if (!a2)
  {
    *(void *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 32) = 0;
    sub_1000AE4B0(v7, "");
    sub_10033DF60("Atempting to initialize with window size of <=0. Most likely the wifi scan parameters weren't set before constructing this class.", &v9);
    sub_10016A2C4((uint64_t)v7, (uint64_t)&v9, 1);
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v9.__r_.__value_.__l.__data_);
      if ((v8 & 0x80000000) == 0) {
        goto LABEL_6;
      }
    }
    else if ((v8 & 0x80000000) == 0)
    {
      goto LABEL_6;
    }
    operator delete(v7[0]);
LABEL_6:
    sub_1000D11E0((uint64_t)&__p);
  }
  if ((a2 & 0x8000000000000000) != 0) {
    sub_1000A9108();
  }
  unint64_t v4 = ((a2 - 1) >> 6) + 1;
  *(void *)a1 = operator new(8 * v4);
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = v4;
  sub_100097628((void *)a1, a2, 0);
  *(void *)(a1 + 24) = *(void *)a1;
  *(_DWORD *)(a1 + 32) = 0;
  return a1;
}

void sub_1000A08D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (*v20) {
    operator delete(*v20);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000A0924(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

uint64_t sub_1000A092C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 19) = a2;
  return result;
}

uint64_t sub_1000A0934(uint64_t result, char a2)
{
  *(unsigned char *)(result + 17) = a2;
  return result;
}

uint64_t sub_1000A093C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 20) = a2;
  return result;
}

uint64_t sub_1000A0944(uint64_t result, char a2)
{
  *(unsigned char *)(result + 18) = a2;
  return result;
}

__n128 sub_1000A094C(__n128 *a1, __n128 *a2, unint64_t a3, unint64_t a4)
{
  __n128 result = *a2;
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  *a1 = result;
  a1[1].n128_u64[0] = a3;
  a1[1].n128_u64[1] = a4;
  a1[2].n128_u32[0] = 0;
  return result;
}

void *sub_1000A0968(void *a1)
{
  uint64_t v2 = (void *)a1[8];
  while (v2)
  {
    uint64_t v3 = v2;
    uint64_t v2 = (void *)*v2;
    unint64_t v4 = (std::__shared_weak_count *)v3[4];
    if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    operator delete(v3);
  }
  unint64_t v5 = (void *)a1[6];
  a1[6] = 0;
  if (v5) {
    operator delete(v5);
  }
  uint64_t v6 = (void *)a1[3];
  while (v6)
  {
    long long v7 = v6;
    uint64_t v6 = (void *)*v6;
    char v8 = (std::__shared_weak_count *)v7[3];
    if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
    operator delete(v7);
  }
  std::string v9 = (void *)a1[1];
  a1[1] = 0;
  if (v9) {
    operator delete(v9);
  }
  return a1;
}

void *sub_1000A0A94(void *result, uint64_t a2, uint64_t *a3)
{
  *__n128 result = off_100460150;
  result[1] = a2;
  uint64_t v3 = *a3;
  *a3 = 0;
  result[2] = v3;
  return result;
}

uint64_t sub_1000A0AC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10009A0E8(a2);
  uint64_t result = sub_10009DE08(a1, v3);
  *(unsigned char *)(a1 + 56) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 224) = 0;
  return result;
}

double sub_1000A0B00(uint64_t a1)
{
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_1004634C8;
  *(void *)(a1 + 8) = a1 + 16;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = a1 + 32;
  *(void *)(a1 + 40) = a1 + 32;
  *(_OWORD *)(a1 + 48) = xmmword_1003F8D40;
  *(_DWORD *)(a1 + 64) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_DWORD *)(a1 + 104) = 1065353216;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_DWORD *)(a1 + 144) = 1065353216;
  return result;
}

uint64_t *sub_1000A0B60(uint64_t *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[6];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = (std::__shared_weak_count *)a1[4];
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v3 = (std::__shared_weak_count *)a1[4];
    if (!v3) {
      goto LABEL_7;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
LABEL_7:
  uint64_t v4 = a1[2];
  a1[2] = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  uint64_t v5 = a1[1];
  a1[1] = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  uint64_t v6 = *a1;
  *a1 = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  return a1;
}

uint64_t sub_1000A0CB4(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)a1 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 8) = *a3;
  sub_100018854(a1 + 16, a2);
  return a1;
}

uint64_t sub_1000A0CF4(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, uint64_t a5, uint64_t a6)
{
  *(void *)a1 = &off_100462B88;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  unint64_t v12 = (void *)(a1 + 40);
  if (!sub_10009A010())
  {
    *unint64_t v12 = 0;
    *(void *)(a1 + 48) = 0;
    uint64_t v14 = a4[1];
    *(void *)(a1 + 56) = *a4;
    *(void *)(a1 + 64) = v14;
    if (!v14) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  std::string::pointer v13 = operator new(0x20uLL);
  *((void *)v13 + 1) = 0;
  *((void *)v13 + 2) = 0;
  *(void *)std::string::pointer v13 = off_100462C18;
  *(void *)(a1 + 40) = sub_100319694((double *)v13 + 3);
  *(void *)(a1 + 48) = v13;
  uint64_t v14 = a4[1];
  *(void *)(a1 + 56) = *a4;
  *(void *)(a1 + 64) = v14;
  if (v14) {
LABEL_5:
  }
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v14 + 8), 1uLL, memory_order_relaxed);
LABEL_6:
  *(unsigned char *)(a1 + 72) = 0;
  uint64_t v15 = a3[1];
  *(void *)(a1 + 280) = *a3;
  *(void *)(a1 + 288) = v15;
  if (v15) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v15 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 296) = a5;
  *(void *)(a1 + 304) = a6;
  *(void *)(a1 + 312) = sub_100031E10(*a3);
  sub_100032E28(*a3, a1 + 320);
  sub_10009A510(*a3, (uint64_t *)(a1 + 360));
  *(void *)(a1 + 376) = 0;
  *(void *)(a1 + 384) = 0;
  *(void *)(a1 + 392) = 0;
  *(_OWORD *)(a1 + 400) = *(_OWORD *)a2;
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  unint64_t v16 = *(void *)(a1 + 408);
  v20.n128_u64[0] = *(void *)(a1 + 400);
  v20.n128_u64[1] = v16;
  if (v16) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v16 + 8), 1uLL, memory_order_relaxed);
  }
  __n128 v17 = sub_1000A094C((__n128 *)(a1 + 416), &v20, *(void *)(a1 + 280), a1 + 296);
  unint64_t v18 = (std::__shared_weak_count *)v20.n128_u64[1];
  if (v20.n128_u64[1] && !atomic_fetch_add((atomic_ullong *volatile)(v20.n128_u64[1] + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *, __n128))v18->__on_zero_shared)(v18, v17);
    std::__shared_weak_count::__release_weak(v18);
  }
  *(void *)(a1 + 456) = -1;
  *(_OWORD *)(a1 + 464) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 496) = 0u;
  *(void *)(a1 + 512) = 0;
  return a1;
}

void sub_1000A0EF4(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v3);
  operator delete(v5);
  sub_100253CC4((uint64_t *)(v1 + 32));
  sub_100253D0C(v2);
  _Unwind_Resume(a1);
}

void sub_1000A0F1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000BA884((uint64_t)&a9);
  sub_1000BA884(v16);
  sub_1000D8DD8(v13);
  sub_1000BA884(v15);
  sub_1000BA884(v14);
  if (*(unsigned char *)(v9 + 72))
  {
    sub_1000A45A0(v9 + 80);
    *(unsigned char *)(v9 + 72) = 0;
  }
  sub_1000BA884(v12);
  sub_1000BA884(v11);
  sub_100253CC4((uint64_t *)(v9 + 32));
  sub_100253D0C(v10);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A0FAC(void *a1, uint64_t a2, void *a3, void **a4)
{
  if (a1[1] == a1[2] || *(_DWORD *)(*a3 + 8) != *(_DWORD *)(a1[45] + 8)) {
    sub_10002FFEC(a1, a2, a3, a4);
  }
  if (qword_10047BED8 == -1)
  {
    char v8 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
      goto LABEL_25;
    }
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_100462BE8);
    char v8 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
      goto LABEL_25;
    }
  }
  uint64_t v9 = qword_10047EE50;
  if (!qword_10047EE50) {
LABEL_11:
  }
    sub_10018E334("map::at:  key not found");
  int v10 = *(_DWORD *)(*a3 + 8);
  while (1)
  {
    while (1)
    {
      int v11 = *(_DWORD *)(v9 + 32);
      if (v10 >= v11) {
        break;
      }
      uint64_t v9 = *(void *)v9;
      if (!v9) {
        goto LABEL_11;
      }
    }
    if (v11 >= v10) {
      break;
    }
    uint64_t v9 = *(void *)(v9 + 8);
    if (!v9) {
      goto LABEL_11;
    }
  }
  uint64_t v12 = *(const char **)(v9 + 40);
  size_t v13 = strlen(v12);
  if (v13 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  uint64_t v14 = (void *)v13;
  if (v13 >= 0x17)
  {
    uint64_t v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v13 | 7) != 0x17) {
      uint64_t v16 = v13 | 7;
    }
    uint64_t v17 = v16 + 1;
    uint64_t v15 = operator new(v16 + 1);
    __p[1] = v14;
    int64_t v34 = v17 | 0x8000000000000000;
    __p[0] = v15;
  }
  else
  {
    HIBYTE(v34) = v13;
    uint64_t v15 = __p;
    if (!v13) {
      goto LABEL_21;
    }
  }
  memmove(v15, v12, (size_t)v14);
LABEL_21:
  *((unsigned char *)v14 + (void)v15) = 0;
  unint64_t v18 = __p;
  if (v34 < 0) {
    unint64_t v18 = (void **)__p[0];
  }
  *(_DWORD *)buf = 136315394;
  *(void *)&buf[4] = v18;
  *(_WORD *)&buf[12] = 2048;
  *(void *)&buf[14] = a2;
  _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "Updating particle filter %s at timestamp %lld", buf, 0x16u);
  if (SHIBYTE(v34) < 0) {
    operator delete(__p[0]);
  }
LABEL_25:
  a1[57] = a2;
  if (a1 + 47 != a4) {
    sub_100097B00((uint64_t)(a1 + 47), *a4, a4[1], ((char *)a4[1] - (char *)*a4) >> 4);
  }
  memset(buf, 0, sizeof(buf));
  int v36 = 1065353216;
  uint64_t v19 = a1[47];
  for (uint64_t i = a1[48]; v19 != i; v19 += 16)
  {
    std::string v21 = (uint64_t ***)(*(uint64_t (**)(void))(**(void **)v19 + 64))();
    sub_10022ACB4((uint64_t)buf, v21, v21);
  }
  uint64_t v22 = a1[1];
  uint64_t v23 = a1[2];
  if (v22 == v23)
  {
    LOBYTE(v24) = 0;
    uint64_t v26 = a1[4];
    if (!v26) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  int v24 = 0;
  do
  {
    uint64_t v25 = sub_100085D38(v22);
    v24 |= sub_10024CD70(v25, buf);
    v22 += 72;
  }
  while (v22 != v23);
  uint64_t v26 = a1[4];
  if (v26)
  {
LABEL_35:
    uint64_t v27 = sub_100085D38(v26);
    sub_10024CD70(v27, buf);
  }
LABEL_36:
  sub_100254808(a1);
  uint64_t v28 = *(void **)&buf[16];
  if (*(void *)&buf[16])
  {
    do
    {
      std::string::size_type v29 = v28;
      uint64_t v28 = (void *)*v28;
      v30 = (std::__shared_weak_count *)v29[3];
      if (v30 && !atomic_fetch_add(&v30->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
        std::__shared_weak_count::__release_weak(v30);
      }
      operator delete(v29);
    }
    while (v28);
  }
  unint64_t v31 = *(void **)buf;
  *(void *)buf = 0;
  if (v31) {
    operator delete(v31);
  }
  return v24 & 1;
}

void sub_1000A1354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_1000D8B48((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1000A1414(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, std::runtime_error a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a15);
  if (a21 < 0) {
    operator delete(a16);
  }
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

void sub_1000A14A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_1000D8B48((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1000A14B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_1000D8B48((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1000A14CC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 152));
  [WeakRetained start];
}

void sub_1000A1514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

double sub_1000A1528(uint64_t a1)
{
  *(void *)a1 = off_10045DA38;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(unsigned char *)(a1 + 56) &= 0xFCu;
  double result = INFINITY;
  *(_OWORD *)(a1 + 40) = xmmword_1003F9070;
  return result;
}

double *sub_1000A156C(double *a1, uint64_t a2)
{
  *a1 = sub_100099F40(a2);
  a1[1] = sub_10009A5C4(a2);
  return a1;
}

void sub_1000A15B4()
{
}

void *sub_1000A1624(void *a1, uint64_t a2)
{
  *a1 = *(void *)(a2 + 16);
  sub_1000A3BE8((uint64_t)(a1 + 1), a2);
  return a1;
}

uint64_t *sub_1000A1658(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  double result = (uint64_t *)(a1 + 24);
  result[1] = v3;
  uint64_t v4 = *(_DWORD **)a2;
  uint64_t v5 = *(_DWORD **)(a2 + 8);
  for (uint64_t i = result; v4 != v5; ++v4)
    double result = sub_10005B970((uint64_t *)&i, v4);
  return result;
}

void sub_1000A16AC(void *a1, uint64_t *a2)
{
  *a1 = off_10046A218;
  uint64_t v2 = *a2;
  a1[1] = *a2;
  uint64_t v3 = a2[1];
  a1[2] = v3;
  if (v3)
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
    uint64_t v2 = a1[1];
  }
  uint64_t v4 = v2;
  operator new();
}

void sub_1000A17B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a9)
  {
    sub_1003A7904();
    sub_1000BA884(v9);
    _Unwind_Resume(a1);
  }
  sub_1000BA884(v9);
  _Unwind_Resume(a1);
}

id sub_1000A1824()
{
  if (qword_10047E340 == -1)
  {
    v0 = (void *)qword_10047E348;
  }
  else
  {
    dispatch_once(&qword_10047E340, &stru_100468B10);
    v0 = (void *)qword_10047E348;
  }
  return v0;
}

void sub_1000A1894(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = a2;
  sub_100058ECC(a1);
}

void sub_1000A189C(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 24);
  if (!v4)
  {
    sub_1000590EC(a1, &v9);
    long long v5 = v9;
    long long v9 = 0uLL;
    uint64_t v6 = *(std::__shared_weak_count **)(a1 + 32);
    *(_OWORD *)(a1 + 24) = v5;
    if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    long long v7 = (std::__shared_weak_count *)*((void *)&v9 + 1);
    if (*((void *)&v9 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v9 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    uint64_t v4 = *(void *)(a1 + 24);
  }
  uint64_t v8 = *(void *)(a1 + 32);
  *a2 = v4;
  a2[1] = v8;
  if (v8) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
  }
}

void sub_1000A199C(uint64_t a1, int a2)
{
  *(_DWORD *)a1 = a2;
  sub_100058ECC(a1);
}

void sub_1000A19A4(uint64_t a1, float a2)
{
  *(float *)(a1 + 16) = a2;
  sub_1000A189C(a1, &v4);
  (*(void (**)(uint64_t, float))(*(void *)v4 + 32))(v4, *(float *)(a1 + 16));
  uint64_t v3 = v5;
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_1000A1A68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1000A1A7C(unsigned int a1)
{
  if (a1 < 5) {
    return a1 + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000A1A88(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)a1 = off_1004531B0;
  uint64_t v5 = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)a2;
  double v6 = *(double *)(a1 + 8) * 1000000000.0;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = (uint64_t)v6;
  sub_1000A0964(a1 + 40, a1 + 8);
  long long v7 = operator new(0x40uLL);
  v7[3] = *(void *)(a1 + 32);
  v7[1] = 0;
  v7[2] = 0;
  void *v7 = off_100453698;
  v7[5] = 0;
  v7[6] = 0;
  v7[4] = 0;
  *((_DWORD *)v7 + 14) = 0;
  *(void *)(a1 + 4304) = v7 + 3;
  *(void *)(a1 + 4312) = v7;
  *(unsigned char *)(a1 + 4320) = 0;
  *(unsigned char *)(a1 + 5528) = 0;
  *(unsigned char *)(a1 + 5552) = 0;
  *(unsigned char *)(a1 + 6664) = 0;
  *(void *)(a1 + 7864) = 850045863;
  *(_OWORD *)(a1 + 7872) = 0u;
  *(_OWORD *)(a1 + 7888) = 0u;
  *(_OWORD *)(a1 + 7904) = 0u;
  *(_OWORD *)(a1 + 7920) = 0u;
  *(_OWORD *)(a1 + 7936) = 0u;
  uint64_t v8 = a3[1];
  *(void *)(a1 + 7952) = *a3;
  *(void *)(a1 + 7960) = v8;
  if (v8) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
  }
  return a1;
}

void sub_1000A1BC0(_Unwind_Exception *a1)
{
  sub_1000CF5B0(v1);
  _Unwind_Resume(a1);
}

double sub_1000A1BD4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = a2;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 1065353216;
  return result;
}

void sub_1000A1BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = operator new(0x78uLL);
  v3[1] = 0;
  v3[2] = 0;
  void *v3 = off_1004640A8;
  sub_1000A2554(v3 + 3, a2);
}

void sub_1000A1C5C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

double sub_1000A1C74(_OWORD *a1)
{
  double result = 0.0;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1000A1C84(uint64_t a1)
{
  *(void *)a1 = &off_100469788;
  if (*(unsigned char *)(a1 + 112))
  {
    if (*(char *)(a1 + 143) < 0) {
      operator delete(*(void **)(a1 + 120));
    }
    *(unsigned char *)(a1 + 112) = 0;
  }
  if (*(char *)(a1 + 111) < 0)
  {
    operator delete(*(void **)(a1 + 88));
    if (!*(unsigned char *)(a1 + 56))
    {
LABEL_7:
      if (!*(unsigned char *)(a1 + 24)) {
        goto LABEL_8;
      }
LABEL_15:
      if (*(char *)(a1 + 55) < 0)
      {
        operator delete(*(void **)(a1 + 32));
        *(unsigned char *)(a1 + 24) = 0;
        uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
        if (!v2) {
          return a1;
        }
      }
      else
      {
        *(unsigned char *)(a1 + 24) = 0;
        uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
        if (!v2) {
          return a1;
        }
      }
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(a1 + 56))
  {
    goto LABEL_7;
  }
  if (*(char *)(a1 + 87) < 0)
  {
    operator delete(*(void **)(a1 + 64));
    *(unsigned char *)(a1 + 56) = 0;
    if (*(unsigned char *)(a1 + 24)) {
      goto LABEL_15;
    }
  }
  else
  {
    *(unsigned char *)(a1 + 56) = 0;
    if (*(unsigned char *)(a1 + 24)) {
      goto LABEL_15;
    }
  }
LABEL_8:
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2) {
    return a1;
  }
LABEL_19:
  if (atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

uint64_t sub_1000A1DBC(uint64_t a1, long long *a2, long long *a3)
{
  char v9 = 0;
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000559FC(&__p, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long __p = *a2;
    uint64_t v11 = *((void *)a2 + 2);
  }
  char v9 = 1;
  if ((*((char *)a3 + 23) & 0x80000000) == 0)
  {
    BOOL v5 = 0;
    long long v7 = *a3;
    uint64_t v8 = *((void *)a3 + 2);
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = &off_100469788;
    *(unsigned char *)(a1 + 24) = 0;
LABEL_6:
    *(_OWORD *)(a1 + 32) = __p;
    *(void *)(a1 + 48) = v11;
    uint64_t v11 = 0;
    long long __p = 0uLL;
    *(unsigned char *)(a1 + 24) = 1;
    goto LABEL_7;
  }
  sub_1000559FC(&v7, *(void **)a3, *((void *)a3 + 1));
  BOOL v5 = v9 == 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = &off_100469788;
  *(unsigned char *)(a1 + 24) = 0;
  if (!v5) {
    goto LABEL_6;
  }
LABEL_7:
  *(_OWORD *)(a1 + 64) = v7;
  *(void *)(a1 + 80) = v8;
  uint64_t v8 = 0;
  long long v7 = 0uLL;
  *(unsigned char *)(a1 + 56) = 1;
  *(_WORD *)(a1 + 111) = 273;
  strcpy((char *)(a1 + 88), "survey_keep_awake");
  *(void *)(a1 + 120) = 6370413;
  *(unsigned char *)(a1 + 143) = 3;
  if (v11 >= 0) {
    BOOL v5 = 1;
  }
  if (!v5) {
    operator delete((void *)__p);
  }
  return a1;
}

void sub_1000A1F84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14)
  {
    if (a20 < 0)
    {
      operator delete(__p);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_1000A1FB4(uint64_t a1, uint64_t *a2)
{
  if (*(void *)(a1 + 8))
  {
    sub_1000AE4B0(v6, "");
    sub_1001F083C("Attempt to set event bus more than once", &__p);
    sub_10016A2C4((uint64_t)v6, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v7 < 0) {
      operator delete(v6[0]);
    }
    sub_1000D11E0((uint64_t)&v5);
  }
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v2;
  if (v4)
  {
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_1000A20E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000A2128(uint64_t result, int a2, int a3, int a4, int a5, float a6, float a7)
{
  *(_DWORD *)double result = a2;
  *(_DWORD *)(result + 4) = a3;
  *(_DWORD *)(result + 8) = a4;
  *(_DWORD *)(result + 12) = a5;
  *(float *)(result + 16) = a6;
  *(float *)(result + 20) = a7;
  return result;
}

uint64_t sub_1000A213C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v10[1] = 0;
  v10[2] = 0;
  v10[0] = off_10045DAB8;
  char v11 = 0;
  sub_100076484((uint64_t)v10, *(double *)(a1 + 24));
  sub_10007647C((uint64_t)v10, *(double *)(a1 + 32));
  *(void *)a2 = off_10045DB78;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = off_10045DAB8;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) &= 0xFCu;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_OWORD *)(a2 + 112) = 0u;
  *(_OWORD *)(a2 + 128) = 0u;
  *(_OWORD *)(a2 + 144) = 0u;
  *(_OWORD *)(a2 + 160) = 0u;
  *(void *)(a2 + 176) = off_10045DB58;
  *(_DWORD *)(a2 + 184) = 0;
  *(unsigned char *)(a2 + 188) &= ~1u;
  char v4 = *(unsigned char *)(a2 + 194);
  *(_WORD *)(a2 + 192) = 0;
  *(unsigned char *)(a2 + 194) = v4 & 0xFC;
  sub_1000A4708(a2, *(double *)(a1 + 72));
  sub_100041EB8(a2, (uint64_t)v10);
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_10047EB60 + 16);
  }
  sub_100041B18(a2, *(void *)(v5 + 40));
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6) {
    uint64_t v6 = *(void *)(qword_10047EB60 + 16);
  }
  sub_100041B20(a2, (uint64_t)((*(double *)(v6 + 16) + 978307200.0) * 1000000000.0));
  sub_1000A4640(a2, *(_DWORD *)(a1 + 116));
  std::to_string(&v9, *(_DWORD *)(a1 + 48));
  sub_1000A46C0(a2, &v9);
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v9.__r_.__value_.__l.__data_);
  }
  sub_1000A4670(a2, *(double *)(a1 + 120));
  sub_1000A465C(a2, *(double *)(a1 + 128));
  sub_1000A462C(a2, *(double *)(a1 + 136));
  sub_1000A4730(a2, *(double *)(a1 + 96));
  sub_1000A46AC(a2, *(double *)(a1 + 104));
  sub_1000A471C(a2, *(double *)(a1 + 80));
  sub_1000A4648(a2, *(double *)(a1 + 88));
  sub_1000A46F4(a2, *(double *)(a1 + 56));
  sub_1000A4610(a2, *(double *)(a1 + 64));
  v9.__r_.__value_.__r.__words[0] = (std::string::size_type)off_10045DB58;
  LODWORD(v9.__r_.__value_.__r.__words[1]) = 0;
  v9.__r_.__value_.__s.__data_[12] = 0;
  uint64_t v7 = *(void *)(a1 + 144);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10047EB60 + 144);
  }
  sub_1000A3A94((uint64_t)&v9, *(_DWORD *)(v7 + 16));
  sub_1000A4684(a2, (uint64_t)&v9);
  nullsub_36(&v9);
  return nullsub_15(v10);
}

void sub_1000A23D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    sub_1000A45A0(v16);
    nullsub_15(&a16);
    _Unwind_Resume(a1);
  }
  sub_1000A45A0(v16);
  nullsub_15(&a16);
  _Unwind_Resume(a1);
}

void sub_1000A2480(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  [WeakRetained start];
}

void sub_1000A24C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000A24DC()
{
}

void sub_1000A2554(void *a1, uint64_t a2)
{
}

void sub_1000A25F4()
{
}

void sub_1000A2620(_Unwind_Exception *a1)
{
  sub_1001F4BB0(v1);
  _Unwind_Resume(a1);
}

void sub_1000A2634(uint64_t a1, int a2)
{
  uint64_t v3 = *(void *)(a1 + 80);
  char v4 = *(uint64_t **)(a1 + 88);
  if (v4)
  {
    sub_100248398((uint64_t)v6, v4);
    sub_100248398((uint64_t)&v7, v4 + 59);
    sub_100248154(v3, a2, v6);
  }
  uint64_t v5 = *(void *)(a1 + 80);

  sub_100007680(v5, a2);
}

void sub_1000A2718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

double sub_1000A272C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  *(void *)a1 = off_10046A408;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 72) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 80) = 1065353216;
  return result;
}

unsigned char *sub_1000A2780(unsigned char *result)
{
  *double result = 0;
  result[96] = 0;
  return result;
}

uint64_t sub_1000A278C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 0;
  sub_100032E28(a2, a1 + 32);
  sub_10009A138(a2, a1 + 72);
  *(_DWORD *)(a1 + 104) = sub_10009A6C8(a2);
  *(void *)(a1 + 112) = sub_100031E10(a2);
  return a1;
}

void sub_1000A27EC(_Unwind_Exception *a1)
{
  if (*(unsigned char *)(v1 + 8)) {
    sub_1003A6694(v1, (unsigned char *)(v1 + 8));
  }
  sub_1003A6644((uint64_t *)v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A2814(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_1000707A8(a2, a3, (uint64_t *)&v18);
  sub_100090110(a2, a3, (uint64_t)v16);
  sub_100060B0C(a1, a2, (uint64_t *)&v18, (uint64_t)v16);
  uint64_t v6 = __p;
  if (__p)
  {
    do
    {
      uint64_t v7 = v6;
      uint64_t v6 = (void *)*v6;
      uint64_t v8 = (std::__shared_weak_count *)v7[3];
      if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
      operator delete(v7);
    }
    while (v6);
  }
  std::string v9 = v16[0];
  v16[0] = 0;
  if (v9) {
    operator delete(v9);
  }
  int v10 = (char *)v18;
  if (v18)
  {
    char v11 = v19;
    uint64_t v12 = v18;
    if (v19 != v18)
    {
      do
      {
        size_t v13 = v11 - 96;
        if (*(v11 - 96)) {
          sub_10006353C((uint64_t)(v11 - 96));
        }
        if (*(v11 - 128))
        {
          uint64_t v14 = (void *)*((void *)v11 - 15);
          if (v14)
          {
            *((void *)v11 - 14) = v14;
            operator delete(v14);
          }
          *(v11 - 128) = 0;
        }
        v11 -= 128;
      }
      while (v13 - 32 != v10);
      uint64_t v12 = v18;
    }
    uint64_t v19 = v10;
    operator delete(v12);
  }
  return a1;
}

void sub_1000A2970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
}

void sub_1000A298C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1002A10E0((void **)va);
  _Unwind_Resume(a1);
}

double sub_1000A29A4(uint64_t a1, int a2)
{
  *(void *)a1 = off_100463D80;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(unsigned char *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 128) = a2;
  return result;
}

uint64_t sub_1000A29D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(**(void **)(a1 + 24) + 16))(*(void *)(a1 + 24), a2, a3, a1 + 48);
  uint64_t result = *(void *)(a1 + 8);
  if (result)
  {
    (*(void (**)(uint64_t, void))(*(void *)result + 24))(result, 0);
    uint64_t v5 = *(uint64_t (**)(void))(**(void **)(a1 + 8) + 24);
    return v5();
  }
  return result;
}

uint64_t sub_1000A2A98(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 24) + 64))();
}

uint64_t sub_1000A2AC0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 24) + 32))();
}

void sub_1000A2AE8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v2 = a2[1];
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  char v4 = *(std::__shared_weak_count **)(a1 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v2;
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_1000A2B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(a1 + 40))
  {
    sub_1000AE4B0(v17, "");
    sub_100234F6C("Universe already initialized.  Localization not stopped?", &__p);
    sub_10016A2C4((uint64_t)v17, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v18 < 0) {
      operator delete(v17[0]);
    }
    sub_1000D11E0((uint64_t)v16);
  }
  if (*(void *)(a1 + 24))
  {
    sub_1000AE4B0(v17, "");
    sub_1002700A4("Localization not stopped?", &__p);
    sub_10016A2C4((uint64_t)v17, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v18 < 0) {
      operator delete(v17[0]);
    }
    sub_1000D11E0((uint64_t)v16);
  }
  sub_10009F178(a1 + 40, a3);
  (*(void (**)(std::string *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 128))(&__p, a1, a2, a3, a4);
  long long v8 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = 0uLL;
  std::string v9 = *(std::__shared_weak_count **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = v8;
  if (v9 && !atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  std::string::size_type size = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
  if (__p.__r_.__value_.__l.__size_
    && !atomic_fetch_add((atomic_ullong *volatile)(__p.__r_.__value_.__l.__size_ + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
    uint64_t v11 = *(void *)(a1 + 8);
    if (!v11) {
      return;
    }
  }
  else
  {
    uint64_t v11 = *(void *)(a1 + 8);
    if (!v11) {
      return;
    }
  }
  uint64_t v13 = *(void *)(a1 + 24);
  std::string::size_type v12 = *(void *)(a1 + 32);
  if (v13) {
    std::string::size_type v14 = v13 + 8;
  }
  else {
    std::string::size_type v14 = 0;
  }
  __p.__r_.__value_.__r.__words[0] = v14;
  __p.__r_.__value_.__l.__size_ = v12;
  if (v12) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v12 + 8), 1uLL, memory_order_relaxed);
  }
  sub_100057964(v11, (std::string::size_type *)&__p);
  uint64_t v15 = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
  if (__p.__r_.__value_.__l.__size_)
  {
    if (!atomic_fetch_add((atomic_ullong *volatile)(__p.__r_.__value_.__l.__size_ + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_1000A2E48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

id sub_1000A2EAC()
{
  return +[CLPlatformInfoPrivate supportsWifi2];
}

uint64_t sub_1000A2EB8()
{
  if (qword_10047E0F8 != -1) {
    dispatch_once(&qword_10047E0F8, &stru_100466720);
  }
  return byte_10047E0EB;
}

void sub_1000A2F08(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  [WeakRetained start];
}

void sub_1000A2F50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void *sub_1000A2F64(void *result, uint64_t a2)
{
  *uint64_t result = a2;
  result[2] = 0;
  return result;
}

void sub_1000A2F70(uint64_t a1, uint64_t **a2)
{
  char v20 = 15;
  strcpy((char *)v19, "LocalizerThread");
  sub_10000D91C((uint64_t)v19);
  if (v20 < 0)
  {
    operator delete(v19[0]);
    int v4 = *(_DWORD *)(a1 + 8);
    if (v4)
    {
LABEL_3:
      if (v4 == 1)
      {
        uint64_t v5 = *(void *)a1;
        if (*a2)
        {
          sub_100248398((uint64_t)v10, *a2);
          sub_100248398((uint64_t)v7, *a2 + 59);
          sub_100247D00(v5, v10, (uint64_t)v7);
          if (v9 < 0) {
            operator delete(v8[37]);
          }
          sub_1000E0C3C(v8);
          sub_1000E1268(v7);
          if (v12 < 0) {
            operator delete(v11[37]);
          }
          sub_1000E0C3C(v11);
          sub_1000E1268(v10);
        }
        else
        {
          sub_10022F454(v5);
        }
      }
      return;
    }
  }
  else
  {
    int v4 = *(_DWORD *)(a1 + 8);
    if (v4) {
      goto LABEL_3;
    }
  }
  uint64_t v6 = *(void *)a1;
  if (*a2)
  {
    sub_100248398((uint64_t)v16, *a2);
    sub_100248398((uint64_t)v13, *a2 + 59);
    sub_100247BB4(v6, (uint64_t)v16, (uint64_t)v13);
    if (v15 < 0) {
      operator delete(v14[37]);
    }
    sub_1000E0C3C(v14);
    sub_1000E1268(v13);
    if (v18 < 0) {
      operator delete(v17[37]);
    }
    sub_1000E0C3C(v17);
    sub_1000E1268(v16);
  }
  else
  {
    sub_1000A3604(v6);
  }
}

void sub_1000A313C(_Unwind_Exception *a1)
{
}

void sub_1000A316C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 - 33) < 0) {
    operator delete(*(void **)(v1 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000A3190(uint64_t result, uint64_t a2)
{
  *(void *)(result + 160) = a2;
  return result;
}

uint64_t sub_1000A3198(uint64_t result, uint64_t a2)
{
  *(void *)(result + 360) = a2;
  *(_WORD *)(result + 400) |= 0x8000u;
  return result;
}

std::string *sub_1000A31AC(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 112), a2);
}

std::string *sub_1000A31B4(std::string *a1, const std::string *a2)
{
  return std::string::operator=(a1 + 8, a2);
}

uint64_t sub_1000A31BC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 352) = a2;
  *(_WORD *)(result + 400) |= 0x4000u;
  return result;
}

std::string *sub_1000A31D0(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 136), a2);
}

uint64_t sub_1000A31D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 368) = a2;
  *(unsigned char *)(result + 402) |= 1u;
  return result;
}

std::string *sub_1000A31EC(uint64_t a1, uint64_t a2)
{
  if (a1 + 288 != a2) {
    sub_10007A09C((uint64_t *)(a1 + 296), *(void **)(a2 + 8), (void *)(a2 + 16));
  }
  uint64_t result = std::string::operator=((std::string *)(a1 + 320), (const std::string *)(a2 + 32));
  *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 348) = *(unsigned char *)(a2 + 60);
  return result;
}

std::string *sub_1000A3248(std::string *a1, const std::string *a2)
{
  return std::string::operator=(a1 + 7, a2);
}

std::string *sub_1000A3250(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 56), a2);
}

std::string *sub_1000A3258(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 32), a2);
}

double sub_1000A3260(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 256) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 16);
  double result = *(double *)(a2 + 24);
  *(double *)(a1 + 272) = result;
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 32);
  return result;
}

uint64_t sub_1000A3284(uint64_t result, int a2)
{
  *(_DWORD *)(result + 80) = a2;
  return result;
}

__n128 sub_1000A328C(__n128 *a1, uint64_t a2)
{
  uint64_t v2 = (uint64_t)(*(double *)(a2 + 24) * 1000000000.0);
  a1->n128_u64[0] = v2;
  uint64_t v3 = (uint64_t)(*(double *)(a2 + 16) * 1000000000.0);
  a1->n128_u64[1] = v3;
  uint64_t v4 = (uint64_t)(*(double *)(a2 + 32) * 1000000000.0);
  uint64_t v5 = v3 + v2 + v4;
  a1[1].n128_u64[0] = v4;
  a1[1].n128_u64[1] = v5;
  __n128 result = *(__n128 *)(a2 + 40);
  a1[2] = result;
  a1[3].n128_u64[0] = v5;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  a1[4].n128_u64[1] = 0;
  a1[5].n128_u32[0] = 0;
  a1[6].n128_u64[0] = 0;
  a1[6].n128_u64[1] = 0;
  a1[5].n128_u64[1] = (unint64_t)off_10045D808;
  a1[7].n128_u8[0] &= 0xF8u;
  a1[6].n128_u32[1] = 3;
  return result;
}

void sub_1000A3320(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  [WeakRetained start];
}

void sub_1000A3368(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000A337C(uint64_t a1, double a2)
{
  if (a2 <= 0.0)
  {
    sub_1000AE4B0(v3, "");
    sub_1002A587C("Convergence dB EPS is usually a small positive number. You can't set it to something non-positive!", &__p);
    sub_10016A2C4((uint64_t)v3, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v4 < 0) {
      operator delete(v3[0]);
    }
    sub_10014B3FC((uint64_t)&v2);
  }
  *(double *)(a1 + 16) = __exp10(a2 / -20.0);
}

void sub_1000A3464(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000A34A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    sub_1000AE4B0(__p, "");
    sub_10016A2C4((uint64_t)__p, 0, 0);
    if (v7 < 0) {
      operator delete(__p[0]);
    }
    sub_100149690((uint64_t)v5);
  }
  *(void *)a1 = a2;
  if (!a3)
  {
    sub_1000AE4B0(__p, "");
    sub_10016A2C4((uint64_t)__p, 0, 0);
    if (v7 < 0) {
      operator delete(__p[0]);
    }
    sub_100149690((uint64_t)v5);
  }
  *(void *)(a1 + 8) = a3;
  *(_WORD *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 850045863;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 1018212795;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  sub_1000099BC((dispatch_queue_t *)(a1 + 144), "Event generator finalization");
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(unsigned char *)(a1 + 176) = 0;
  *(void *)(a1 + 168) = 0;
  return a1;
}

void sub_1000A35E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000A3604(uint64_t a1)
{
  v2[0] = off_100461EB0;
  uint64_t v3 = v2;
  sub_10000B118(a1, (uint64_t)v2);
  uint64_t result = (uint64_t)v3;
  if (v3 == v2) {
    return (*(uint64_t (**)(void *))(v2[0] + 32))(v2);
  }
  if (v3) {
    return (*(uint64_t (**)(void))(*v3 + 40))();
  }
  return result;
}

void sub_1000A36E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100230190((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A36F8(uint64_t result)
{
  uint64_t v1 = result;
  *(void *)uint64_t result = off_10046BDD0;
  if (*(char *)(result + 31) < 0)
  {
    operator delete(*(void **)(result + 8));
    return v1;
  }
  return result;
}

void *sub_1000A3758(void *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  *a1 = off_1004637F0;
  a1[1] = 0;
  int v10 = a1 + 1;
  a1[2] = 0;
  a1[3] = 0;
  uint64_t v11 = (char *)operator new(0x20uLL);
  a1[1] = v11;
  a1[2] = v11;
  a1[3] = v11 + 32;
  uint64_t v12 = *a2;
  *a2 = 0;
  uint64_t v13 = *a3;
  *a3 = 0;
  uint64_t v23 = v13;
  v24[0] = v12;
  uint64_t v14 = *a4;
  *a4 = 0;
  uint64_t v15 = *a5;
  *a5 = 0;
  uint64_t v21 = v15;
  uint64_t v22 = v14;
  sub_1000A393C(v10, v24, &v23, &v22, &v21);
  uint64_t v16 = v21;
  uint64_t v21 = 0;
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
  }
  uint64_t v17 = v22;
  uint64_t v22 = 0;
  if (v17) {
    (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
  }
  uint64_t v18 = v23;
  uint64_t v23 = 0;
  if (v18) {
    (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
  }
  uint64_t v19 = v24[0];
  v24[0] = 0;
  if (v19) {
    (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
  }
  return a1;
}

void sub_1000A38E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _Unwind_Exception *a13)
{
  if (a9) {
    sub_1003A45E4();
  }
  sub_1003A4810(&a10, &a11, &a12);
  uint64_t v14 = a13;
  sub_1001E460C(v13);
  _Unwind_Resume(v14);
}

void sub_1000A3928(_Unwind_Exception *a1)
{
  sub_1001E460C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A393C(void *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  char v9 = (uint64_t *)a1[1];
  if ((unint64_t)v9 >= a1[2])
  {
    uint64_t v11 = sub_1001E469C(a1, a2);
  }
  else
  {
    uint64_t v10 = *a2;
    *a2 = 0;
    *char v9 = v10;
    uint64_t v11 = v9 + 1;
  }
  a1[1] = v11;
  uint64_t v12 = *a3;
  *a3 = 0;
  uint64_t v13 = *a4;
  *a4 = 0;
  uint64_t v19 = v13;
  uint64_t v20 = v12;
  uint64_t v14 = *a5;
  *a5 = 0;
  uint64_t v18 = v14;
  sub_100033AA4(a1, &v20, &v19, &v18);
  uint64_t v15 = v18;
  uint64_t v18 = 0;
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
  }
  uint64_t v16 = v19;
  uint64_t v19 = 0;
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
  }
  uint64_t result = v20;
  uint64_t v20 = 0;
  if (result) {
    return (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
  }
  return result;
}

void sub_1000A3A68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  if (a3) {
    sub_1003A45E4();
  }
  sub_1003A4674((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A3A94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 8) = a2;
  *(unsigned char *)(result + 12) |= 1u;
  return result;
}

uint64_t sub_1000A3AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10009A0AC(a2);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(void *)a1 = off_1004667B0;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_DWORD *)(a1 + 136) = 1065353216;
  return a1;
}

uint64_t sub_1000A3B20(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = a1[8];
  uint64_t v9 = sub_10009BD78(v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v8 + 16))(v8, a3, v9, a4);
  uint64_t v10 = *(uint64_t (**)(void *, uint64_t))(*a1 + 120);

  return v10(a1, a2);
}

void sub_1000A3BD4(uint64_t a1, uint64_t a2)
{
}

void sub_1000A3BDC(uint64_t a1, uint64_t a2)
{
}

__n128 sub_1000A3BE8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045D978;
  *(void *)(a1 + 40) = off_10045D958;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 53) = 0;
  *(unsigned char *)(a1 + 61) &= 0xC0u;
  *(unsigned char *)(a1 + 64) &= 0xE0u;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  __n128 result = *(__n128 *)(a2 + 24);
  *(__n128 *)(a1 + 24) = result;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(unsigned char *)(a1 + 61) = *(unsigned char *)(a2 + 61);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return result;
}

uint64_t sub_1000A3C84(uint64_t result, uint64_t a2)
{
  *(void *)(result + 48) = *(void *)(a2 + 8);
  *(_DWORD *)(result + 56) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(result + 60) = *(unsigned char *)(a2 + 20);
  *(unsigned char *)(result + 61) = *(unsigned char *)(a2 + 21);
  return result;
}

BOOL sub_1000A3CA8(uint64_t a1)
{
  return *(void *)(a1 + 48) == *(void *)(a1 + 56);
}

uint64_t sub_1000A3CB8(uint64_t result, float a2)
{
  return result;
}

uint64_t sub_1000A3CC8(uint64_t a1, _OWORD *a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 16) = 225000000;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 750000000;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 88) = 0;
  char v4 = operator new(0xD8uLL);
  v4[1] = 0;
  v4[2] = 0;
  void *v4 = off_10046BE68;
  *(void *)(a1 + 96) = sub_1000A2780((unsigned char *)v4 + 24);
  *(void *)(a1 + 104) = v4;
  *(_DWORD *)(a1 + 112) = 0;
  *(unsigned char *)(a1 + 120) = 0;
  *(void *)(a1 + 152) = 2;
  *(int64x2_t *)(a1 + 160) = vdupq_n_s64(0x7FF8000000000000uLL);
  char v7 = sub_10009D134();
  uint64_t v8 = v5;
  *(unsigned char *)(a1 + 176) = sub_100059C20((uint64_t)&v7, (unsigned char *)&v8 + 1);
  *(_DWORD *)(a1 + 180) = 3;
  *(_OWORD *)(a1 + 184) = *a2;
  return a1;
}

void sub_1000A3DCC(void *a1)
{
}

void sub_1000A3DE4(_Unwind_Exception *a1)
{
  if (*(unsigned char *)(v1 + 120)) {
    *(unsigned char *)(v1 + 120) = 0;
  }
  sub_1000BA884(v3);
  sub_1003A109C(v2);
  uint64_t v6 = *v4;
  if (*v4)
  {
    *(void *)(v1 + 32) = v6;
    operator delete(v6);
  }
  _Unwind_Resume(a1);
}

void sub_1000A3E40(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1000A3E48@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  if (a2 == 1) {
    uint64_t v6 = 2392070;
  }
  else {
    uint64_t v6 = 3440646;
  }
  char v7 = (std::__shared_weak_count *)operator new(0x20uLL);
  v7->__shared_owners_ = 0;
  v7->__shared_weak_owners_ = 0;
  v7->__vftable = (std::__shared_weak_count_vtbl *)off_1004612E0;
  uint64_t result = sub_10009FF20(&v7[1], a1, v6, 1);
  *a3 = result;
  a3[1] = (uint64_t)v7;
  if (a2)
  {
    if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
    uint64_t v9 = operator new(0x20uLL);
    v9[1] = 0;
    v9[2] = 0;
    *uint64_t v9 = off_1004612E0;
    uint64_t result = sub_10009FF20(v9 + 3, a1, 294918, 0);
    *a3 = result;
    a3[1] = (uint64_t)v9;
  }
  return result;
}

void sub_1000A3F60(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_1000A3F78(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_1000A3F90(uint64_t a1, int a2)
{
  sub_10000C4F8(*(sqlite3 ***)(a1 + 40), a2);
  if (qword_10047BF08 == -1)
  {
    char v4 = qword_10047BF10;
    if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_DEBUG)) {
      return;
    }
  }
  else
  {
    dispatch_once(&qword_10047BF08, &stru_100460658);
    char v4 = qword_10047BF10;
    if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_DEBUG)) {
      return;
    }
  }
  uint64_t v5 = (void *)(a1 + 8);
  if (*(char *)(a1 + 31) < 0) {
    uint64_t v5 = (void *)*v5;
  }
  int v6 = 136315394;
  char v7 = v5;
  __int16 v8 = 1024;
  int v9 = a2;
  _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "user_version in privacy.db @ %s is now %d", (uint8_t *)&v6, 0x12u);
}

uint64_t sub_1000A40A0(uint64_t a1)
{
  uint64_t result = wireless_diagnostics::google::protobuf::MessageLite::SerializeToZeroCopyStream();
  if ((result & 1) == 0)
  {
    if (qword_10047BED8 == -1)
    {
      uint64_t v3 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_FAULT)) {
        goto LABEL_10;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100469E98);
      uint64_t v3 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_FAULT)) {
        goto LABEL_10;
      }
    }
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 16))(__p, a1);
    if (v10 >= 0) {
      char v4 = __p;
    }
    else {
      char v4 = (void **)__p[0];
    }
    *(_DWORD *)buf = 68289795;
    int v12 = 0;
    __int16 v13 = 2082;
    uint64_t v14 = "";
    __int16 v15 = 2081;
    uint64_t v16 = v4;
    __int16 v17 = 2082;
    uint64_t v18 = "assert";
    __int16 v19 = 2081;
    uint64_t v20 = "serialized";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Failed to serialize-append properly\", \"typename\":%{private, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x30u);
    if (v10 < 0) {
      operator delete(__p[0]);
    }
    if (qword_10047BED8 != -1)
    {
      dispatch_once(&qword_10047BED8, &stru_100469E98);
      uint64_t v5 = qword_10047BEE0;
      if (!os_signpost_enabled((os_log_t)qword_10047BEE0)) {
        goto LABEL_17;
      }
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v5 = qword_10047BEE0;
    if (!os_signpost_enabled((os_log_t)qword_10047BEE0)) {
      goto LABEL_17;
    }
LABEL_11:
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 16))(__p, a1);
    if (v10 >= 0) {
      int v6 = __p;
    }
    else {
      int v6 = (void **)__p[0];
    }
    *(_DWORD *)buf = 68289795;
    int v12 = 0;
    __int16 v13 = 2082;
    uint64_t v14 = "";
    __int16 v15 = 2081;
    uint64_t v16 = v6;
    __int16 v17 = 2082;
    uint64_t v18 = "assert";
    __int16 v19 = 2081;
    uint64_t v20 = "serialized";
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v5, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Failed to serialize-append properly", "{\"msg%{public}.0s\":\"Failed to serialize-append properly\", \"typename\":%{private, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x30u);
    if (v10 < 0) {
      operator delete(__p[0]);
    }
    if (qword_10047BED8 != -1)
    {
      dispatch_once(&qword_10047BED8, &stru_100469E98);
      char v7 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        goto LABEL_23;
      }
      goto LABEL_18;
    }
LABEL_17:
    char v7 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
      goto LABEL_23;
    }
LABEL_18:
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 16))(__p, a1);
    if (v10 >= 0) {
      __int16 v8 = __p;
    }
    else {
      __int16 v8 = (void **)__p[0];
    }
    *(_DWORD *)buf = 68289795;
    int v12 = 0;
    __int16 v13 = 2082;
    uint64_t v14 = "";
    __int16 v15 = 2081;
    uint64_t v16 = v8;
    __int16 v17 = 2082;
    uint64_t v18 = "assert";
    __int16 v19 = 2081;
    uint64_t v20 = "serialized";
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Failed to serialize-append properly\", \"typename\":%{private, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x30u);
    if (v10 < 0) {
      operator delete(__p[0]);
    }
LABEL_23:
    abort_report_np();
    __break(1u);
  }
  return result;
}

void sub_1000A4488()
{
}

void sub_1000A44EC()
{
}

uint64_t sub_1000A4510(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10009A588(a2);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(void *)a1 = off_100462D68;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_DWORD *)(a1 + 136) = 1065353216;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_DWORD *)(a1 + 176) = 1065353216;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_DWORD *)(a1 + 216) = 1065353216;
  *(unsigned char *)(a1 + 224) = 0;
  return a1;
}

uint64_t sub_1000A45A0(uint64_t a1)
{
  *(void *)a1 = off_10045DB78;
  if (*(char *)(a1 + 87) < 0)
  {
    operator delete(*(void **)(a1 + 64));
    nullsub_15(a1 + 32);
  }
  else
  {
    nullsub_15(a1 + 32);
  }
  return a1;
}

uint64_t sub_1000A4610(uint64_t a1, double a2)
{
  __int16 v3 = *(_WORD *)(a1 + 192);
  uint64_t result = a1 + 192;
  *(double *)(result - 24) = a2;
  *(unsigned char *)(result + 2) |= 1u;
  *(_WORD *)uint64_t result = v3;
  return result;
}

double *sub_1000A462C(uint64_t a1, double a2)
{
  __int16 v3 = *(_WORD *)(a1 + 192);
  uint64_t result = (double *)(a1 + 192);
  *(result - 6) = a2;
  *(_WORD *)uint64_t result = v3 | 0x2000;
  return result;
}

uint64_t sub_1000A4640(uint64_t result, int a2)
{
  *(_DWORD *)(result + 124) = a2;
  return result;
}

double *sub_1000A4648(uint64_t a1, double a2)
{
  __int16 v3 = *(_WORD *)(a1 + 192);
  uint64_t result = (double *)(a1 + 192);
  *(result - 4) = a2;
  *(_WORD *)uint64_t result = v3 | 0x8000;
  return result;
}

double *sub_1000A465C(uint64_t a1, double a2)
{
  __int16 v3 = *(_WORD *)(a1 + 192);
  uint64_t result = (double *)(a1 + 192);
  *(result - 7) = a2;
  *(_WORD *)uint64_t result = v3 | 0x1000;
  return result;
}

double *sub_1000A4670(uint64_t a1, double a2)
{
  __int16 v3 = *(_WORD *)(a1 + 192);
  uint64_t result = (double *)(a1 + 192);
  *(result - 8) = a2;
  *(_WORD *)uint64_t result = v3 | 0x800;
  return result;
}

uint64_t sub_1000A4684(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a1 + 192);
  uint64_t result = a1 + 192;
  *(_DWORD *)(result - 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(result - 4) = *(unsigned char *)(a2 + 12);
  *(unsigned char *)(result + 2) |= 2u;
  *(_WORD *)uint64_t result = v3;
  return result;
}

double *sub_1000A46AC(uint64_t a1, double a2)
{
  __int16 v3 = *(_WORD *)(a1 + 192);
  uint64_t result = (double *)(a1 + 192);
  *(result - 5) = a2;
  *(_WORD *)uint64_t result = v3 | 0x4000;
  return result;
}

std::string *sub_1000A46C0(uint64_t a1, const std::string *a2)
{
  uint64_t result = std::string::operator=((std::string *)(a1 + 64), a2);
  *(_WORD *)(a1 + 192) |= 0x10u;
  return result;
}

double *sub_1000A46F4(uint64_t a1, double a2)
{
  __int16 v3 = *(_WORD *)(a1 + 192);
  uint64_t result = (double *)(a1 + 192);
  *(result - 13) = a2;
  *(_WORD *)uint64_t result = v3 | 0x20;
  return result;
}

double *sub_1000A4708(uint64_t a1, double a2)
{
  __int16 v3 = *(_WORD *)(a1 + 192);
  uint64_t result = (double *)(a1 + 192);
  *(result - 12) = a2;
  *(_WORD *)uint64_t result = v3 | 0x40;
  return result;
}

double *sub_1000A471C(uint64_t a1, double a2)
{
  __int16 v3 = *(_WORD *)(a1 + 192);
  uint64_t result = (double *)(a1 + 192);
  *(result - 11) = a2;
  *(_WORD *)uint64_t result = v3 | 0x80;
  return result;
}

double *sub_1000A4730(uint64_t a1, double a2)
{
  __int16 v3 = *(_WORD *)(a1 + 192);
  uint64_t result = (double *)(a1 + 192);
  *(result - 10) = a2;
  *(_WORD *)uint64_t result = v3 | 0x100;
  return result;
}

uint64_t sub_1000A4744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8;
  if (*(void *)(a1 + 48))
  {
    sub_1000AE4B0(v7, "");
    sub_10014C790("Unexpected request to record legacy data for ", &v9);
    sub_1000DA214(v4, &v10);
    sub_10016A2C4((uint64_t)v7, (uint64_t)&v9, 2);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v10.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_5:
        if ((v8 & 0x80000000) == 0) {
          goto LABEL_6;
        }
LABEL_9:
        operator delete(v7[0]);
LABEL_6:
        sub_1000D11E0((uint64_t)&__p);
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }
  sub_1000484E8(a1);
  sub_1000162DC(a2, (_DWORD *)(a1 + 80));
  *(unsigned char *)a1 = 1;
  return a1;
}

void sub_1000A4874(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000A492C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8;
  if (*(void *)(a1 + 48))
  {
    sub_1000AE4B0(v7, "");
    sub_10014C790("Unexpected request to record legacy data for ", &v9);
    sub_1000DA214(v4, &v10);
    sub_10016A2C4((uint64_t)v7, (uint64_t)&v9, 2);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v10.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_5:
        if ((v8 & 0x80000000) == 0) {
          goto LABEL_6;
        }
LABEL_9:
        operator delete(v7[0]);
LABEL_6:
        sub_1000D11E0((uint64_t)&__p);
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }
  sub_1000484E8(a1);
  sub_100047324(a2, (_DWORD *)(a1 + 80));
  *(unsigned char *)a1 = 1;
  return a1;
}

void sub_1000A4A5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1000A4B14(void *a1)
{
  *a1 = objc_alloc_init((Class)NSMutableArray);
  return a1;
}

void sub_1000A4B48(uint64_t a1, std::string *a2, uint64_t a3)
{
  sub_100020CC0(a2, (uint64_t)v16);
  sub_10001313C((uint64_t)a2, (uint64_t)v14);
  if (*(char *)(a3 + 23) < 0)
  {
    sub_1000559FC(__dst, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)std::string __dst = *(_OWORD *)a3;
    uint64_t v13 = *(void *)(a3 + 16);
  }
  uint64_t v6 = sub_10009C2B4((uint64_t)a2);
  char v11 = 0;
  LOBYTE(__p) = 0;
  memset(v8, 0, sizeof(v8));
  v7[0] = off_10045A4E8;
  v7[1] = v8;
  v9[0] = 0;
  *(void *)((char *)v9 + 5) = 0;
  sub_10009D944(a1, v16, v14, __dst, v6, &__p, v7);
  sub_100002528((uint64_t)v7);
  if (v11 < 0)
  {
    operator delete(__p);
    if ((SHIBYTE(v13) & 0x80000000) == 0)
    {
LABEL_6:
      if ((v15 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      goto LABEL_11;
    }
  }
  else if ((SHIBYTE(v13) & 0x80000000) == 0)
  {
    goto LABEL_6;
  }
  operator delete(__dst[0]);
  if ((v15 & 0x80000000) == 0)
  {
LABEL_7:
    if ((v17 & 0x80000000) == 0) {
      return;
    }
LABEL_12:
    operator delete(v16[0]);
    return;
  }
LABEL_11:
  operator delete(v14[0]);
  if (v17 < 0) {
    goto LABEL_12;
  }
}

void sub_1000A4C98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (*(char *)(v29 - 57) < 0)
  {
    operator delete(*(void **)(v29 - 80));
    if ((*(char *)(v29 - 33) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v29 - 33) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v29 - 56));
  _Unwind_Resume(exception_object);
}

NSString *sub_1000A4D3C(uint64_t *a1)
{
  uint64_t v1 = a1;
  if (*((char *)a1 + 23) < 0) {
    uint64_t v1 = (uint64_t *)*a1;
  }
  return +[NSString stringWithUTF8String:v1];
}

void sub_1000A52EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000A5570(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000D8B48((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1000A5584(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_objecta, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  if (a15)
  {
    sub_1000748BC(v26);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000A56C4(void *a1)
{
}

void sub_1000A5924()
{
  uint64_t v2 = off_100451C60;
  sub_1003626E4(v1, @"com.apple.locationd", @"mobile", @"pipelined_", 0);
  sub_1000A59E0();
}

void sub_1000A59CC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000A5A8C((id *)va);
  _Unwind_Resume(a1);
}

void sub_1000A59E0()
{
}

void sub_1000A5A40()
{
}

void sub_1000A5A78(_Unwind_Exception *a1)
{
}

id *sub_1000A5A8C(id *a1)
{
  return a1;
}

uint64_t start()
{
  if (qword_10047BEF8 != -1) {
    dispatch_once(&qword_10047BEF8, &stru_100451D00);
  }
  uint64_t v4 = (id)qword_10047BF00;
  uint64_t v5 = (CLIndoorServiceDelegate *)&OBJC_METACLASS___CLPrefetchFloorRequest;
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    id v0 = +[CLIndoorServiceDelegate versionString];
    int v12 = 138543362;
    id v13 = v0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Starting pipelined %{public}@", (uint8_t *)&v12, 0xCu);
  }
  sub_10018E934();
  sub_10009D154();
  if ((v6 & 0xFF00) != 0)
  {
    sub_1003A2DB8();
    __break(1u);
LABEL_11:
    dispatch_once(&qword_10047BEF8, &stru_100451D00);
    std::string v10 = qword_10047BF00;
    if (!os_log_type_enabled((os_log_t)qword_10047BF00, OS_LOG_TYPE_INFO)) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  uint64_t v4 = [objc_alloc((Class)NSURLCache) initWithMemoryCapacity:0 diskCapacity:0 diskPath:0];
  +[NSURLCache setSharedURLCache:v4];
  id v0 = [objc_alloc((Class)NSXPCListener) initWithMachServiceName:@"com.apple.pipelined"];
  id v1 = [objc_alloc((Class)NSXPCListener) initWithMachServiceName:@"com.apple.pipelined.maintenance"];
  xpc_set_event_stream_handler(kNSURLSessionLaunchOnDemandNotificationName, (dispatch_queue_t)&_dispatch_main_q, &stru_100451C30);
  uint64_t v5 = objc_alloc_init(CLIndoorServiceDelegate);
  [v0 setDelegate:v5];
  char v8 = [(CLIndoorServiceDelegate *)v5 q];
  [v0 _setQueue:v8];

  uint64_t v2 = [[CLIndoorMaintenanceDelegate alloc] initWithService:v5];
  [v1 setDelegate:v2];
  std::string v9 = [(CLIndoorMaintenanceDelegate *)v2 q];
  [v1 _setQueue:v9];

  __int16 v3 = [[CLIndoorBackgroundTasks alloc] initWithService:v5];
  [v0 resume];
  [v1 resume];
  CFRunLoopRun();
  if (qword_10047BEF8 != -1) {
    goto LABEL_11;
  }
  std::string v10 = qword_10047BF00;
  if (os_log_type_enabled((os_log_t)qword_10047BF00, OS_LOG_TYPE_INFO))
  {
LABEL_8:
    LOWORD(v12) = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "Shutting down pipelined", (uint8_t *)&v12, 2u);
  }
LABEL_9:

  return 0;
}

void sub_1000A5E60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000A5E70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1000A5ED4()
{
  if (qword_10047BEF8 == -1)
  {
    id v0 = (void *)qword_10047BF00;
  }
  else
  {
    dispatch_once(&qword_10047BEF8, &stru_100451D00);
    id v0 = (void *)qword_10047BF00;
  }
  return v0;
}

void sub_1000A5F44(id a1, OS_xpc_object *a2)
{
  uint64_t v2 = a2;
  string = xpc_dictionary_get_string(v2, kNSURLSessionLaunchOnDemandSessionIdentifierKey);
  uint64_t v4 = +[NSString stringWithUTF8String:string];
  if ([v4 hasPrefix:@"com.apple.pipelined.TilePrefetch"])
  {
    if (qword_10047BEF8 == -1)
    {
      uint64_t v9 = qword_10047BF00;
      if (!os_log_type_enabled((os_log_t)qword_10047BF00, OS_LOG_TYPE_INFO)) {
        goto LABEL_11;
      }
    }
    else
    {
      dispatch_once(&qword_10047BEF8, &stru_100451D00);
      uint64_t v9 = qword_10047BF00;
      if (!os_log_type_enabled((os_log_t)qword_10047BF00, OS_LOG_TYPE_INFO)) {
        goto LABEL_11;
      }
    }
    LOWORD(v13) = 0;
    uint64_t v5 = "Resuming tile prefetch downloads";
    __int16 v6 = v9;
    os_log_type_t v7 = OS_LOG_TYPE_INFO;
    uint32_t v8 = 2;
LABEL_10:
    _os_log_impl((void *)&_mh_execute_header, v6, v7, v5, (uint8_t *)&v13, v8);
    goto LABEL_11;
  }
  if (qword_10047BEF8 == -1)
  {
    uint64_t v11 = qword_10047BF00;
    if (!os_log_type_enabled((os_log_t)qword_10047BF00, OS_LOG_TYPE_ERROR)) {
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  dispatch_once(&qword_10047BEF8, &stru_100451D00);
  uint64_t v11 = qword_10047BF00;
  if (os_log_type_enabled((os_log_t)qword_10047BF00, OS_LOG_TYPE_ERROR))
  {
LABEL_9:
    int v13 = 136380675;
    uint64_t v14 = string;
    uint64_t v5 = "NSURL session launched us, but with a weird identifier: %{private}s";
    __int16 v6 = v11;
    os_log_type_t v7 = OS_LOG_TYPE_ERROR;
    uint32_t v8 = 12;
    goto LABEL_10;
  }
LABEL_11:
}

void sub_1000A60E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000A60FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000A610C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1000A6120@<X0>(void *a1@<X8>)
{
  uint64_t v10 = 0;
  long long v11 = 0uLL;
  int v12 = -1;
  std::bad_alloc::bad_alloc(&v13);
  uint64_t v9 = off_100451D30;
  v13.__vftable = (std::bad_alloc_vtbl *)off_100451D50;
  uint64_t v5 = 0;
  long long v6 = 0uLL;
  int v7 = -1;
  uint64_t v4 = off_100451DE8;
  v8[0].__vftable = (std::bad_alloc_vtbl *)off_100451E18;
  v8[1].__vftable = (std::bad_alloc_vtbl *)&off_100451E58;
  sub_1000A6FDC((uint64_t)&v4, (uint64_t)&v9);
  *(void *)&long long v6 = "exception_ptr boost::exception_detail::get_static_exception_object() [Exception = boost::exception_de"
                   "tail::bad_alloc_]";
  *((void *)&v6 + 1) = "/AppleInternal/Library/BuildRoots/cb09429a-9ee5-11ef-b491-ce2c30f2a3e7/Applications/Xcode.app/C"
                         "ontents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.2.Internal.sdk/usr/loca"
                         "l/include/boost/exception/detail/exception_ptr.hpp";
  int v7 = 174;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10047BF70, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10047BF70))
  {
    operator new();
  }
  uint64_t v2 = *(void *)algn_10047BF68;
  *a1 = qword_10047BF60;
  a1[1] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 + 8), 1u, memory_order_relaxed);
  }
  std::bad_alloc::~bad_alloc(v8);
  uint64_t v4 = (uint64_t (**)())&off_100451DC0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 32))(v5);
  }
  std::bad_alloc::~bad_alloc(&v13);
  uint64_t v9 = (uint64_t (**)())&off_100451DC0;
  uint64_t result = v10;
  if (v10) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v10 + 32))(v10);
  }
  return result;
}

void sub_1000A6408()
{
}

void sub_1000A6458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1000A6DA0((std::bad_alloc *)va);
  _Unwind_Resume(a1);
}

void sub_1000A646C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va1, a4);
  va_start(va, a4);
  v5.__vftable = va_arg(va1, std::bad_alloc_vtbl *);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  sub_1000A71A4((std::bad_alloc *)va);
  sub_1000A6DA0((std::bad_alloc *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A6488(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

uint64_t sub_1000A6530@<X0>(void *a1@<X8>)
{
  uint64_t v10 = 0;
  long long v11 = 0uLL;
  int v12 = -1;
  uint64_t v9 = off_100451F70;
  v13.__vftable = (std::bad_exception_vtbl *)off_100451F90;
  long long v6 = 0uLL;
  int v7 = -1;
  uint64_t v4 = off_100451FF8;
  uint64_t v5 = 0;
  v8[0].__vftable = (std::bad_exception_vtbl *)off_100452028;
  v8[1].__vftable = (std::bad_exception_vtbl *)&off_100452068;
  sub_1000A6FDC((uint64_t)&v4, (uint64_t)&v9);
  *(void *)&long long v6 = "exception_ptr boost::exception_detail::get_static_exception_object() [Exception = boost::exception_de"
                   "tail::bad_exception_]";
  *((void *)&v6 + 1) = "/AppleInternal/Library/BuildRoots/cb09429a-9ee5-11ef-b491-ce2c30f2a3e7/Applications/Xcode.app/C"
                         "ontents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.2.Internal.sdk/usr/loca"
                         "l/include/boost/exception/detail/exception_ptr.hpp";
  int v7 = 174;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10047BF88, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10047BF88))
  {
    operator new();
  }
  uint64_t v2 = unk_10047BF80;
  *a1 = qword_10047BF78;
  a1[1] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v2 + 8), 1u, memory_order_relaxed);
  }
  std::bad_exception::~bad_exception(v8);
  uint64_t v4 = (uint64_t (**)())&off_100451DC0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 32))(v5);
  }
  std::bad_exception::~bad_exception(&v13);
  uint64_t v9 = (uint64_t (**)())&off_100451DC0;
  uint64_t result = v10;
  if (v10) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v10 + 32))(v10);
  }
  return result;
}

void sub_1000A67B8()
{
}

void sub_1000A6808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va1, a4);
  va_start(va, a4);
  v5.__vftable = va_arg(va1, std::bad_exception_vtbl *);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  sub_1000A7DF8((std::bad_exception *)va);
  sub_1000A7BBC((std::bad_exception *)va1);
  _Unwind_Resume(a1);
}

void sub_1000A6824()
{
}

void sub_1000A6838()
{
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "cannot override values in this kind of configuration");
}

void sub_1000A6880(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000A6894()
{
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "cannot override values in this kind of configuration");
}

void sub_1000A68DC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000A68F0()
{
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "cannot override values in this kind of configuration");
}

void sub_1000A6938(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000A6954(void *a1)
{
}

void sub_1000A6968()
{
}

void sub_1000A6980(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_1000A69DC(exception, a1);
}

void sub_1000A69C8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_1000A69DC(std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  return result;
}

void sub_1000A6A10()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  id v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

void sub_1000A6A44(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Daemon");
  uint64_t v2 = (void *)qword_10047BF00;
  qword_10047BF00 = (uint64_t)v1;
}

uint64_t sub_1000A6A88(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 48) = &off_100451ED0;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = &off_100451DC0;
  *(void *)(a1 + 8) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)a1 = off_100451DE8;
  *(void *)(a1 + 40) = off_100451E18;
  *(void *)(a1 + 48) = &off_100451E58;
  return a1;
}

void sub_1000A6B88(void *a1, void *a2)
{
  if (a2) {
    uint64_t v2 = (char *)a2 + *(void *)(*a2 - 24);
  }
  else {
    uint64_t v2 = 0;
  }
  *a1 = v2;
  a1[1] = 0;
  sub_1000A77D4();
}

void sub_1000A6BE8(_Unwind_Exception *exception_object)
{
  __int16 v3 = *v1;
  if (v3 && atomic_fetch_add(v3 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)v3 + 16))(v3);
    if (atomic_fetch_add(v3 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)v3 + 24))(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000A6C78(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

std::bad_alloc *sub_1000A6D20(std::bad_alloc *a1)
{
  std::bad_alloc::~bad_alloc(a1 + 5);
  a1->__vftable = (std::bad_alloc_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  return a1;
}

std::bad_alloc *sub_1000A6DA0(std::bad_alloc *a1)
{
  std::bad_alloc::~bad_alloc(a1 + 5);
  a1->__vftable = (std::bad_alloc_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  return a1;
}

void sub_1000A6E20(std::bad_alloc *a1)
{
  std::bad_alloc::~bad_alloc(a1 + 5);
  a1->__vftable = (std::bad_alloc_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  operator delete();
}

uint64_t sub_1000A6EC0(std::bad_alloc *a1)
{
  std::bad_alloc::~bad_alloc(a1);
  *(void *)(v2 - 40) = &off_100451DC0;
  uint64_t result = *(void *)(v2 - 32);
  if (result)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
    if (result) {
      a1[-4].__vftable = 0;
    }
  }
  return result;
}

void sub_1000A6F3C(std::bad_alloc *a1)
{
  std::bad_alloc::~bad_alloc(a1);
  *(void *)(v2 - 40) = &off_100451DC0;
  uint64_t v3 = *(void *)(v2 - 32);
  if (v3 && (*(unsigned int (**)(uint64_t))(*(void *)v3 + 32))(v3)) {
    a1[-4].__vftable = 0;
  }

  operator delete();
}

uint64_t sub_1000A6FDC(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (!v4)
  {
    uint64_t v5 = 0;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    uint64_t result = *(void *)(a1 + 8);
    if (!result) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  (*(void (**)(uint64_t *__return_ptr))(*(void *)v4 + 40))(&v7);
  uint64_t v5 = v7;
  uint64_t v8 = v7;
  if (v7)
  {
    (*(void (**)(uint64_t))(*(void *)v7 + 24))(v7);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 32))(v7);
    }
  }
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t result = *(void *)(a1 + 8);
  if (result) {
LABEL_8:
  }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
LABEL_9:
  *(void *)(a1 + 8) = v5;
  if (v5)
  {
    (*(void (**)(uint64_t))(*(void *)v5 + 24))(v5);
    return (*(uint64_t (**)(uint64_t))(*(void *)v5 + 32))(v5);
  }
  return result;
}

void sub_1000A715C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

void sub_1000A717C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000A7778((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1000A7190(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000A7778((uint64_t *)va);
  _Unwind_Resume(a1);
}

std::bad_alloc *sub_1000A71A4(std::bad_alloc *a1)
{
  std::bad_alloc::~bad_alloc(a1 + 5);
  a1->__vftable = (std::bad_alloc_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  return a1;
}

void sub_1000A7224(std::bad_alloc *a1)
{
  std::bad_alloc::~bad_alloc(a1 + 5);
  a1->__vftable = (std::bad_alloc_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  operator delete();
}

void sub_1000A72C4()
{
}

void sub_1000A73FC()
{
}

void sub_1000A7430(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x38uLL);
  sub_1000A6A88((uint64_t)exception, a1);
}

void sub_1000A7478(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A748C(std::bad_alloc *a1)
{
  std::bad_alloc::~bad_alloc(a1);
  *(void *)(v2 - 40) = &off_100451DC0;
  uint64_t result = *(void *)(v2 - 32);
  if (result)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
    if (result) {
      a1[-4].__vftable = 0;
    }
  }
  return result;
}

void sub_1000A7508(std::bad_alloc *a1)
{
  std::bad_alloc::~bad_alloc(a1);
  *(void *)(v2 - 40) = &off_100451DC0;
  uint64_t v3 = *(void *)(v2 - 32);
  if (v3 && (*(unsigned int (**)(uint64_t))(*(void *)v3 + 32))(v3)) {
    a1[-4].__vftable = 0;
  }

  operator delete();
}

void sub_1000A75A8()
{
}

void sub_1000A75C4(void *a1)
{
  uint64_t v1 = (uint64_t)a1 + *(void *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x38uLL);
  sub_1000A6A88((uint64_t)exception, v1);
}

void sub_1000A7620(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A7634(void *a1)
{
  uint64_t v1 = (std::bad_alloc *)((char *)a1 + *(void *)(*a1 - 40));
  std::bad_alloc::~bad_alloc(v1 + 5);
  v1->__vftable = (std::bad_alloc_vtbl *)&off_100451DC0;
  uint64_t result = (uint64_t)v1[1].__vftable;
  if (result)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
    if (result) {
      v1[1].__vftable = 0;
    }
  }
  return result;
}

void sub_1000A76C4(void *a1)
{
  uint64_t v1 = (std::bad_alloc *)((char *)a1 + *(void *)(*a1 - 40));
  std::bad_alloc::~bad_alloc(v1 + 5);
  v1->__vftable = (std::bad_alloc_vtbl *)&off_100451DC0;
  uint64_t v2 = v1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2)) {
    v1[1].__vftable = 0;
  }

  operator delete();
}

uint64_t *sub_1000A7778(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *a1 = 0;
  }
  return a1;
}

void sub_1000A77D4()
{
}

void sub_1000A78C0(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    sub_1003A2F30(v1);
  }
  __cxa_rethrow();
}

void sub_1000A78D8(_Unwind_Exception *a1)
{
}

void sub_1000A78F0()
{
}

uint64_t sub_1000A7904(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t sub_1000A7934()
{
  return 0;
}

uint64_t sub_1000A793C()
{
  return 0;
}

uint64_t sub_1000A7944()
{
  return 0;
}

uint64_t sub_1000A794C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 48) = &off_100451ED0;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = &off_100451DC0;
  *(void *)(a1 + 8) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)a1 = off_100451FF8;
  *(void *)(a1 + 40) = off_100452028;
  *(void *)(a1 + 48) = &off_100452068;
  return a1;
}

void sub_1000A7A4C(void *a1, void *a2)
{
  if (a2) {
    uint64_t v2 = (char *)a2 + *(void *)(*a2 - 24);
  }
  else {
    uint64_t v2 = 0;
  }
  *a1 = v2;
  a1[1] = 0;
  sub_1000A83CC();
}

void sub_1000A7AAC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *v1;
  if (v3 && atomic_fetch_add(v3 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)v3 + 16))(v3);
    if (atomic_fetch_add(v3 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)v3 + 24))(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

std::bad_exception *sub_1000A7B3C(std::bad_exception *a1)
{
  std::bad_exception::~bad_exception(a1 + 5);
  a1->__vftable = (std::bad_exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  return a1;
}

std::bad_exception *sub_1000A7BBC(std::bad_exception *a1)
{
  std::bad_exception::~bad_exception(a1 + 5);
  a1->__vftable = (std::bad_exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  return a1;
}

void sub_1000A7C3C(std::bad_exception *a1)
{
  std::bad_exception::~bad_exception(a1 + 5);
  a1->__vftable = (std::bad_exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  operator delete();
}

uint64_t sub_1000A7CDC(std::bad_exception *a1)
{
  std::bad_exception::~bad_exception(a1);
  *(void *)(v2 - 40) = &off_100451DC0;
  uint64_t result = *(void *)(v2 - 32);
  if (result)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
    if (result) {
      a1[-4].__vftable = 0;
    }
  }
  return result;
}

void sub_1000A7D58(std::bad_exception *a1)
{
  std::bad_exception::~bad_exception(a1);
  *(void *)(v2 - 40) = &off_100451DC0;
  uint64_t v3 = *(void *)(v2 - 32);
  if (v3 && (*(unsigned int (**)(uint64_t))(*(void *)v3 + 32))(v3)) {
    a1[-4].__vftable = 0;
  }

  operator delete();
}

std::bad_exception *sub_1000A7DF8(std::bad_exception *a1)
{
  std::bad_exception::~bad_exception(a1 + 5);
  a1->__vftable = (std::bad_exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  return a1;
}

void sub_1000A7E78(std::bad_exception *a1)
{
  std::bad_exception::~bad_exception(a1 + 5);
  a1->__vftable = (std::bad_exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  operator delete();
}

void sub_1000A7F18()
{
}

void sub_1000A8050()
{
}

void sub_1000A8084(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x38uLL);
  sub_1000A794C((uint64_t)exception, a1);
}

void sub_1000A80CC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A80E0(std::bad_exception *a1)
{
  std::bad_exception::~bad_exception(a1);
  *(void *)(v2 - 40) = &off_100451DC0;
  uint64_t result = *(void *)(v2 - 32);
  if (result)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
    if (result) {
      a1[-4].__vftable = 0;
    }
  }
  return result;
}

void sub_1000A815C(std::bad_exception *a1)
{
  std::bad_exception::~bad_exception(a1);
  *(void *)(v2 - 40) = &off_100451DC0;
  uint64_t v3 = *(void *)(v2 - 32);
  if (v3 && (*(unsigned int (**)(uint64_t))(*(void *)v3 + 32))(v3)) {
    a1[-4].__vftable = 0;
  }

  operator delete();
}

void sub_1000A81FC()
{
}

void sub_1000A8218(void *a1)
{
  uint64_t v1 = (uint64_t)a1 + *(void *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x38uLL);
  sub_1000A794C((uint64_t)exception, v1);
}

void sub_1000A8274(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A8288(void *a1)
{
  uint64_t v1 = (std::bad_exception *)((char *)a1 + *(void *)(*a1 - 40));
  std::bad_exception::~bad_exception(v1 + 5);
  v1->__vftable = (std::bad_exception_vtbl *)&off_100451DC0;
  uint64_t result = (uint64_t)v1[1].__vftable;
  if (result)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
    if (result) {
      v1[1].__vftable = 0;
    }
  }
  return result;
}

void sub_1000A8318(void *a1)
{
  uint64_t v1 = (std::bad_exception *)((char *)a1 + *(void *)(*a1 - 40));
  std::bad_exception::~bad_exception(v1 + 5);
  v1->__vftable = (std::bad_exception_vtbl *)&off_100451DC0;
  uint64_t v2 = v1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2)) {
    v1[1].__vftable = 0;
  }

  operator delete();
}

void sub_1000A83CC()
{
}

void sub_1000A84B8(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    sub_1003A2F30(v1);
  }
  __cxa_rethrow();
}

void sub_1000A84D0(_Unwind_Exception *a1)
{
}

void sub_1000A84E8()
{
}

uint64_t sub_1000A84FC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t sub_1000A852C()
{
  return 0;
}

uint64_t sub_1000A8534()
{
  return 0;
}

uint64_t sub_1000A853C()
{
  return 0;
}

uint64_t sub_1000A8544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_DWORD *)(a1 + 40) = 1065353216;
  *(void *)a1 = off_100452130;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 64) = off_100451C60;
  *(void *)(a1 + 72) = off_100469DE0;
  long long v4 = *(_OWORD *)(a3 + 8);
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(_OWORD *)(a1 + 80) = v4;
  uint64_t v5 = *(void *)(a3 + 24);
  *(void *)(a3 + 24) = 0;
  *(void *)(a1 + 96) = v5;
  sub_1003620DC(a1 + 104, a3 + 32);
  return a1;
}

void sub_1000A8600(_Unwind_Exception *a1)
{
  sub_1000A8634((void *)v1);
  _Unwind_Resume(a1);
}

void *sub_1000A8634(void *a1)
{
  *a1 = off_1004521B0;
  uint64_t v2 = (void **)a1[3];
  if (v2)
  {
    do
    {
      uint64_t v5 = (void **)*v2;
      sub_100077BC8((uint64_t)(v2 + 5));
      if (*((char *)v2 + 39) < 0) {
        operator delete(v2[2]);
      }
      operator delete(v2);
      uint64_t v2 = v5;
    }
    while (v5);
  }
  uint64_t v3 = (void *)a1[1];
  a1[1] = 0;
  if (v3) {
    operator delete(v3);
  }
  return a1;
}

void sub_1000A86C8(uint64_t a1)
{
  sub_1000A8BE8(a1);

  operator delete();
}

void sub_1000A8700(uint64_t a1, char *__s, uint64_t a3)
{
  size_t v6 = strlen(__s);
  if (v6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  size_t v7 = v6;
  if (v6 >= 0x17)
  {
    uint64_t v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17) {
      uint64_t v9 = v6 | 7;
    }
    uint64_t v10 = v9 + 1;
    p_dst = (void **)operator new(v9 + 1);
    size_t v15 = v7;
    int64_t v16 = v10 | 0x8000000000000000;
    std::string __dst = (char *)p_dst;
    goto LABEL_8;
  }
  HIBYTE(v16) = v6;
  p_dst = (void **)&__dst;
  if (v6) {
LABEL_8:
  }
    memcpy(p_dst, __s, v7);
  *((unsigned char *)p_dst + v7) = 0;
  std::locale::locale(&v13);
  if (v16 >= 0) {
    uint64_t v11 = (char *)&__dst;
  }
  else {
    uint64_t v11 = __dst;
  }
  size_t v12 = HIBYTE(v16);
  if (v16 < 0) {
    size_t v12 = v15;
  }
  sub_100077AF4(&__p, v11, &v13, &v11[v12]);
  sub_1000A9790(a1 + 8, (uint64_t)&__p, (uint64_t)&__p, a3);
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    std::locale::~locale(&v13);
    if ((SHIBYTE(v16) & 0x80000000) == 0) {
      return;
    }
LABEL_18:
    operator delete(__dst);
    return;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  std::locale::~locale(&v13);
  if (SHIBYTE(v16) < 0) {
    goto LABEL_18;
  }
}

void sub_1000A8858(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0)
  {
    operator delete(__p);
    std::locale::~locale(&a10);
    if ((a16 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(a1);
  }
  else
  {
    std::locale::~locale(&a10);
    if ((a16 & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  operator delete(a11);
  _Unwind_Resume(a1);
}

void sub_1000A88BC(void *a1)
{
  if (a1[4])
  {
    uint64_t v2 = (void **)a1[3];
    if (v2)
    {
      do
      {
        uint64_t v5 = (void **)*v2;
        sub_100077BC8((uint64_t)(v2 + 5));
        if (*((char *)v2 + 39) < 0) {
          operator delete(v2[2]);
        }
        operator delete(v2);
        uint64_t v2 = v5;
      }
      while (v5);
    }
    a1[3] = 0;
    uint64_t v3 = a1[2];
    if (v3)
    {
      for (uint64_t i = 0; i != v3; ++i)
        *(void *)(a1[1] + 8 * i) = 0;
    }
    a1[4] = 0;
  }
}

void sub_1000A894C(uint64_t a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    p_dst = (void **)operator new(v7 + 1);
    size_t v16 = v5;
    int64_t v17 = v8 | 0x8000000000000000;
    std::string __dst = (char *)p_dst;
    goto LABEL_8;
  }
  HIBYTE(v17) = v4;
  p_dst = (void **)&__dst;
  if (v4) {
LABEL_8:
  }
    memcpy(p_dst, __s, v5);
  *((unsigned char *)p_dst + v5) = 0;
  std::locale::locale(&v14);
  if (v17 >= 0) {
    uint64_t v9 = (char *)&__dst;
  }
  else {
    uint64_t v9 = __dst;
  }
  size_t v10 = HIBYTE(v17);
  if (v17 < 0) {
    size_t v10 = v16;
  }
  sub_100077AF4(&v18, v9, &v14, &v9[v10]);
  uint64_t v11 = (void *)(a1 + 8);
  size_t v12 = sub_1000A9C14(v11, (uint64_t)&v18);
  if (v12)
  {
    sub_1000A9E44(v11, v12, (uint64_t)&__p);
    std::locale v13 = (void **)__p;
    std::string __p = 0;
    if (v13)
    {
      if (v20)
      {
        sub_100077BC8((uint64_t)(v13 + 5));
        if (*((char *)v13 + 39) < 0) {
          operator delete(v13[2]);
        }
      }
      operator delete(v13);
    }
  }
  if ((SHIBYTE(v18.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    std::locale::~locale(&v14);
    if ((SHIBYTE(v17) & 0x80000000) == 0) {
      return;
    }
LABEL_24:
    operator delete(__dst);
    return;
  }
  operator delete(v18.__r_.__value_.__l.__data_);
  std::locale::~locale(&v14);
  if (SHIBYTE(v17) < 0) {
    goto LABEL_24;
  }
}

void sub_1000A8AE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
  {
    operator delete(__p);
    std::locale::~locale((std::locale *)&a9);
    if ((a15 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(a1);
  }
  else
  {
    std::locale::~locale((std::locale *)&a9);
    if ((a15 & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  operator delete(a10);
  _Unwind_Resume(a1);
}

void sub_1000A8B48(uint64_t a1, void *a2, void *a3)
{
}

void sub_1000A8B50(uint64_t a1, void *a2)
{
}

uint64_t sub_1000A8B58(uint64_t a1)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2)
  {
    do
    {
      size_t v5 = (void **)*v2;
      sub_100077BC8((uint64_t)(v2 + 5));
      if (*((char *)v2 + 39) < 0) {
        operator delete(v2[2]);
      }
      operator delete(v2);
      uint64_t v2 = v5;
    }
    while (v5);
  }
  uint64_t v3 = *(void **)a1;
  *(void *)a1 = 0;
  if (v3) {
    operator delete(v3);
  }
  return a1;
}

uint64_t sub_1000A8BE8(uint64_t a1)
{
  *(void *)a1 = off_100452130;
  sub_100361FB0(a1 + 104);

  *(void *)a1 = off_1004521B0;
  uint64_t v2 = *(void ***)(a1 + 24);
  if (v2)
  {
    do
    {
      size_t v5 = (void **)*v2;
      sub_100077BC8((uint64_t)(v2 + 5));
      if (*((char *)v2 + 39) < 0) {
        operator delete(v2[2]);
      }
      operator delete(v2);
      uint64_t v2 = v5;
    }
    while (v5);
  }
  uint64_t v3 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = 0;
  if (v3) {
    operator delete(v3);
  }
  return a1;
}

uint64_t sub_1000A8CB8(uint64_t result, uint64_t a2)
{
  uint64_t v2 = (_DWORD *)(result + 8);
  uint64_t v3 = (_DWORD *)(a2 + 8);
  switch(*(_DWORD *)a2 ^ (*(int *)a2 >> 31))
  {
    case 1:
      _DWORD *v2 = *v3;
      break;
    case 2:
      *(void *)uint64_t v2 = *(void *)v3;
      break;
    case 3:
      long long v4 = *(_OWORD *)v3;
      *(void *)(result + 24) = *(void *)(a2 + 24);
      *(_OWORD *)uint64_t v2 = v4;
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + 24) = 0;
      *(void *)uint64_t v3 = 0;
      break;
    case 4:
      *(void *)uint64_t v2 = *(void *)v3;
      break;
    case 5:
      operator new();
    case 6:
      operator new();
    default:
      break;
  }
  *(_DWORD *)uint64_t result = *(_DWORD *)a2 ^ (*(int *)a2 >> 31);
  return result;
}

uint64_t sub_1000A8E40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (_DWORD *)(a1 + 8);
  uint64_t v3 = (_DWORD *)(a2 + 8);
  switch(*(_DWORD *)a2 ^ (*(int *)a2 >> 31))
  {
    case 1:
      _DWORD *v2 = *v3;
      break;
    case 2:
      *(void *)uint64_t v2 = *(void *)v3;
      break;
    case 3:
      if (*(char *)(a2 + 31) < 0)
      {
        sub_1000559FC((unsigned char *)(a1 + 8), *(void **)(a2 + 8), *(void *)(a2 + 16));
      }
      else
      {
        long long v6 = *(_OWORD *)v3;
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(_OWORD *)uint64_t v2 = v6;
      }
      break;
    case 4:
      *(void *)uint64_t v2 = *(void *)v3;
      break;
    case 5:
      operator new();
    case 6:
      sub_1000A9120();
    default:
      break;
  }
  *(_DWORD *)a1 = *(_DWORD *)a2 ^ (*(int *)a2 >> 31);
  return a1;
}

void sub_1000A8F50()
{
}

void *sub_1000A8F90(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    size_t v5 = result;
    if (a4 >> 59) {
      sub_1000A9108();
    }
    uint64_t result = operator new(32 * a4);
    uint64_t v8 = result;
    *size_t v5 = result;
    v5[1] = result;
    v5[2] = &result[4 * a4];
    if (a2 != a3)
    {
      unint64_t v9 = 0;
      do
      {
        uint64_t result = (void *)sub_1000A8E40(&v8[v9 / 8], a2 + v9);
        v9 += 32;
      }
      while (a2 + v9 != a3);
      uint64_t v8 = (void *)((char *)v8 + v9);
    }
    v5[1] = v8;
  }
  return result;
}

void sub_1000A903C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_1000A9050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  for (; v11; v11 -= 32)
    sub_100077BC8(v10 - 32 + v11);
  *(void *)(v9 + 8) = v10;
  sub_1000A9080(&a9);
  _Unwind_Resume(a1);
}

void ***sub_1000A9080(void ***result)
{
  uint64_t v1 = result;
  if (!*((unsigned char *)result + 8))
  {
    uint64_t v2 = *result;
    uint64_t v3 = **result;
    if (v3)
    {
      uint64_t v4 = (uint64_t)v2[1];
      size_t v5 = **result;
      if ((void *)v4 != v3)
      {
        do
        {
          v4 -= 32;
          sub_100077BC8(v4);
        }
        while ((void *)v4 != v3);
        size_t v5 = **v1;
      }
      v2[1] = v3;
      operator delete(v5);
      return v1;
    }
  }
  return result;
}

void sub_1000A9108()
{
}

void sub_1000A9120()
{
}

void sub_1000A9268()
{
  sub_1000A8B58(v0);
  operator delete();
}

uint64_t *sub_1000A9294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  size_t v5 = (unsigned char *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v8 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v8 = v7;
  }
  unint64_t v9 = sub_100077FAC((uint64_t)v42, (uint64_t *)a2, v8);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v3 = v9;
      if (v9 >= v11) {
        unint64_t v3 = v9 % v11;
      }
    }
    else
    {
      unint64_t v3 = (v11 - 1) & v9;
    }
    std::locale v13 = *(uint64_t ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      std::locale v14 = *v13;
      if (*v13)
      {
        char v15 = v5[23];
        if (v15 >= 0) {
          uint64_t v16 = v5[23];
        }
        else {
          uint64_t v16 = *((void *)v5 + 1);
        }
        if (v15 < 0) {
          size_t v5 = *(unsigned char **)v5;
        }
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v21 = v14[1];
            if (v21 == v10)
            {
              uint64_t v22 = *((unsigned __int8 *)v14 + 39);
              if ((v22 & 0x80u) == 0) {
                uint64_t v23 = *((unsigned __int8 *)v14 + 39);
              }
              else {
                uint64_t v23 = v14[3];
              }
              if (v23 == v16)
              {
                if ((v22 & 0x80) != 0)
                {
                  if (!memcmp((const void *)v14[2], v5, v14[3])) {
                    return v14;
                  }
                }
                else
                {
                  if (!*((unsigned char *)v14 + 39)) {
                    return v14;
                  }
                  uint64_t v24 = 0;
                  while (*((unsigned __int8 *)v14 + v24 + 16) == v5[v24])
                  {
                    if (v22 == ++v24) {
                      return v14;
                    }
                  }
                }
              }
            }
            else if ((v21 & (v11 - 1)) != v3)
            {
              goto LABEL_51;
            }
            std::locale v14 = (uint64_t *)*v14;
            if (!v14) {
              goto LABEL_51;
            }
          }
        }
        do
        {
          unint64_t v17 = v14[1];
          if (v17 == v10)
          {
            uint64_t v18 = *((unsigned __int8 *)v14 + 39);
            if ((v18 & 0x80u) == 0) {
              uint64_t v19 = *((unsigned __int8 *)v14 + 39);
            }
            else {
              uint64_t v19 = v14[3];
            }
            if (v19 == v16)
            {
              if ((v18 & 0x80) != 0)
              {
                if (!memcmp((const void *)v14[2], v5, v14[3])) {
                  return v14;
                }
              }
              else
              {
                if (!*((unsigned char *)v14 + 39)) {
                  return v14;
                }
                uint64_t v20 = 0;
                while (*((unsigned __int8 *)v14 + v20 + 16) == v5[v20])
                {
                  if (v18 == ++v20) {
                    return v14;
                  }
                }
              }
            }
          }
          else
          {
            if (v17 >= v11) {
              v17 %= v11;
            }
            if (v17 != v3) {
              break;
            }
          }
          std::locale v14 = (uint64_t *)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_51:
  uint64_t v25 = operator new(0x48uLL);
  uint64_t v26 = v25;
  v42[0] = v25;
  v42[1] = a1 + 16;
  char v43 = 0;
  *uint64_t v25 = 0;
  v25[1] = v10;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_1000559FC((unsigned char *)v25 + 16, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *((_OWORD *)v25 + 1) = *(_OWORD *)a3;
    v25[4] = *(void *)(a3 + 16);
  }
  sub_1000A8E40(v26 + 5, a3 + 24);
  char v43 = 1;
  float v27 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v28 = *(float *)(a1 + 32);
  if (!v11 || (float)(v28 * (float)v11) < v27)
  {
    BOOL v31 = 1;
    if (v11 >= 3) {
      BOOL v31 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v32 = v31 | (2 * v11);
    unint64_t v33 = vcvtps_u32_f32(v27 / v28);
    if (v32 <= v33) {
      size_t prime = v33;
    }
    else {
      size_t prime = v32;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
    }
    int8x8_t v35 = *(int8x8_t *)(a1 + 8);
    if (prime > *(void *)&v35) {
      goto LABEL_68;
    }
    if (prime < *(void *)&v35)
    {
      unint64_t v36 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(void *)&v35 < 3uLL || (uint8x8_t v37 = (uint8x8_t)vcnt_s8(v35), v37.i16[0] = vaddlv_u8(v37), v37.u32[0] > 1uLL))
      {
        unint64_t v36 = std::__next_prime(v36);
      }
      else
      {
        uint64_t v38 = 1 << -(char)__clz(v36 - 1);
        if (v36 >= 2) {
          unint64_t v36 = v38;
        }
      }
      if (prime <= v36) {
        size_t prime = v36;
      }
      if (prime < *(void *)&v35) {
LABEL_68:
      }
        sub_10006338C(a1, prime);
    }
    unint64_t v11 = *(void *)(a1 + 8);
    unint64_t v39 = v11 - 1;
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
      {
        unint64_t v3 = v10 % v11;
        uint64_t v29 = *(void **)(*(void *)a1 + 8 * (v10 % v11));
        v30 = (void *)v42[0];
        if (v29) {
          goto LABEL_57;
        }
      }
      else
      {
        unint64_t v3 = v10;
        uint64_t v29 = *(void **)(*(void *)a1 + 8 * v10);
        v30 = (void *)v42[0];
        if (v29) {
          goto LABEL_57;
        }
      }
    }
    else
    {
      unint64_t v3 = v39 & v10;
      uint64_t v29 = *(void **)(*(void *)a1 + 8 * (v39 & v10));
      v30 = (void *)v42[0];
      if (v29) {
        goto LABEL_57;
      }
    }
LABEL_81:
    void *v30 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v42[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v42[0])
    {
      unint64_t v40 = *(void *)(*(void *)v42[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v40 >= v11) {
          v40 %= v11;
        }
      }
      else
      {
        v40 &= v11 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v40) = v42[0];
    }
    goto LABEL_92;
  }
  uint64_t v29 = *(void **)(*(void *)a1 + 8 * v3);
  v30 = (void *)v42[0];
  if (!v29) {
    goto LABEL_81;
  }
LABEL_57:
  void *v30 = *v29;
  *uint64_t v29 = v42[0];
LABEL_92:
  std::locale v14 = (uint64_t *)v42[0];
  ++*(void *)(a1 + 24);
  return v14;
}

void sub_1000A96E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000A9738((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1000A96FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000A9738((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1000A9710(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  if (*(char *)(v2 + 39) < 0) {
    operator delete(*v3);
  }
  sub_1000A9738((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_1000A9738(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((unsigned char *)a1 + 16))
    {
      sub_100077BC8(v2 + 40);
      if (*(char *)(v2 + 39) < 0) {
        operator delete(*(void **)(v2 + 16));
      }
    }
    operator delete((void *)v2);
  }
  return a1;
}

uint64_t *sub_1000A9790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7 = (unsigned char *)a2;
  unint64_t v9 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v10 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v10 = v9;
  }
  unint64_t v11 = sub_100077FAC((uint64_t)v43, (uint64_t *)a2, v10);
  unint64_t v12 = v11;
  unint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    uint8x8_t v14 = (uint8x8_t)vcnt_s8((int8x8_t)v13);
    v14.i16[0] = vaddlv_u8(v14);
    if (v14.u32[0] > 1uLL)
    {
      unint64_t v4 = v11;
      if (v11 >= v13) {
        unint64_t v4 = v11 % v13;
      }
    }
    else
    {
      unint64_t v4 = (v13 - 1) & v11;
    }
    char v15 = *(uint64_t ***)(*(void *)a1 + 8 * v4);
    if (v15)
    {
      uint64_t v16 = *v15;
      if (*v15)
      {
        char v17 = v7[23];
        if (v17 >= 0) {
          uint64_t v18 = v7[23];
        }
        else {
          uint64_t v18 = *((void *)v7 + 1);
        }
        if (v17 < 0) {
          unint64_t v7 = *(unsigned char **)v7;
        }
        if (v14.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v23 = v16[1];
            if (v23 == v12)
            {
              uint64_t v24 = *((unsigned __int8 *)v16 + 39);
              if ((v24 & 0x80u) == 0) {
                uint64_t v25 = *((unsigned __int8 *)v16 + 39);
              }
              else {
                uint64_t v25 = v16[3];
              }
              if (v25 == v18)
              {
                if ((v24 & 0x80) != 0)
                {
                  if (!memcmp((const void *)v16[2], v7, v16[3])) {
                    return v16;
                  }
                }
                else
                {
                  if (!*((unsigned char *)v16 + 39)) {
                    return v16;
                  }
                  uint64_t v26 = 0;
                  while (*((unsigned __int8 *)v16 + v26 + 16) == v7[v26])
                  {
                    if (v24 == ++v26) {
                      return v16;
                    }
                  }
                }
              }
            }
            else if ((v23 & (v13 - 1)) != v4)
            {
              goto LABEL_51;
            }
            uint64_t v16 = (uint64_t *)*v16;
            if (!v16) {
              goto LABEL_51;
            }
          }
        }
        do
        {
          unint64_t v19 = v16[1];
          if (v19 == v12)
          {
            uint64_t v20 = *((unsigned __int8 *)v16 + 39);
            if ((v20 & 0x80u) == 0) {
              uint64_t v21 = *((unsigned __int8 *)v16 + 39);
            }
            else {
              uint64_t v21 = v16[3];
            }
            if (v21 == v18)
            {
              if ((v20 & 0x80) != 0)
              {
                if (!memcmp((const void *)v16[2], v7, v16[3])) {
                  return v16;
                }
              }
              else
              {
                if (!*((unsigned char *)v16 + 39)) {
                  return v16;
                }
                uint64_t v22 = 0;
                while (*((unsigned __int8 *)v16 + v22 + 16) == v7[v22])
                {
                  if (v20 == ++v22) {
                    return v16;
                  }
                }
              }
            }
          }
          else
          {
            if (v19 >= v13) {
              v19 %= v13;
            }
            if (v19 != v4) {
              break;
            }
          }
          uint64_t v16 = (uint64_t *)*v16;
        }
        while (v16);
      }
    }
  }
LABEL_51:
  float v27 = operator new(0x48uLL);
  v43[0] = v27;
  v43[1] = a1 + 16;
  char v44 = 0;
  *float v27 = 0;
  v27[1] = v12;
  *((_OWORD *)v27 + 1) = *(_OWORD *)a3;
  v27[4] = *(void *)(a3 + 16);
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  sub_1000A8E40((uint64_t)(v27 + 5), a4);
  char v44 = 1;
  float v28 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v29 = *(float *)(a1 + 32);
  if (!v13 || (float)(v29 * (float)v13) < v28)
  {
    BOOL v32 = 1;
    if (v13 >= 3) {
      BOOL v32 = (v13 & (v13 - 1)) != 0;
    }
    unint64_t v33 = v32 | (2 * v13);
    unint64_t v34 = vcvtps_u32_f32(v28 / v29);
    if (v33 <= v34) {
      size_t prime = v34;
    }
    else {
      size_t prime = v33;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
    }
    int8x8_t v36 = *(int8x8_t *)(a1 + 8);
    if (prime > *(void *)&v36) {
      goto LABEL_65;
    }
    if (prime < *(void *)&v36)
    {
      unint64_t v37 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(void *)&v36 < 3uLL || (uint8x8_t v38 = (uint8x8_t)vcnt_s8(v36), v38.i16[0] = vaddlv_u8(v38), v38.u32[0] > 1uLL))
      {
        unint64_t v37 = std::__next_prime(v37);
      }
      else
      {
        uint64_t v39 = 1 << -(char)__clz(v37 - 1);
        if (v37 >= 2) {
          unint64_t v37 = v39;
        }
      }
      if (prime <= v37) {
        size_t prime = v37;
      }
      if (prime < *(void *)&v36) {
LABEL_65:
      }
        sub_10006338C(a1, prime);
    }
    unint64_t v13 = *(void *)(a1 + 8);
    unint64_t v40 = v13 - 1;
    if ((v13 & (v13 - 1)) != 0)
    {
      if (v12 >= v13)
      {
        unint64_t v4 = v12 % v13;
        v30 = *(void **)(*(void *)a1 + 8 * (v12 % v13));
        BOOL v31 = (void *)v43[0];
        if (v30) {
          goto LABEL_54;
        }
      }
      else
      {
        unint64_t v4 = v12;
        v30 = *(void **)(*(void *)a1 + 8 * v12);
        BOOL v31 = (void *)v43[0];
        if (v30) {
          goto LABEL_54;
        }
      }
    }
    else
    {
      unint64_t v4 = v40 & v12;
      v30 = *(void **)(*(void *)a1 + 8 * (v40 & v12));
      BOOL v31 = (void *)v43[0];
      if (v30) {
        goto LABEL_54;
      }
    }
LABEL_78:
    *BOOL v31 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v43[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v43[0])
    {
      unint64_t v41 = *(void *)(*(void *)v43[0] + 8);
      if ((v13 & (v13 - 1)) != 0)
      {
        if (v41 >= v13) {
          v41 %= v13;
        }
      }
      else
      {
        v41 &= v13 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v41) = v43[0];
    }
    goto LABEL_89;
  }
  v30 = *(void **)(*(void *)a1 + 8 * v4);
  BOOL v31 = (void *)v43[0];
  if (!v30) {
    goto LABEL_78;
  }
LABEL_54:
  *BOOL v31 = *v30;
  void *v30 = v43[0];
LABEL_89:
  uint64_t v16 = (uint64_t *)v43[0];
  ++*(void *)(a1 + 24);
  return v16;
}

void sub_1000A9BD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000A9738((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1000A9BEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  if (*(char *)(v2 + 39) < 0) {
    operator delete(*v3);
  }
  sub_1000A9738((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_1000A9C14(void *a1, uint64_t a2)
{
  uint64_t v2 = (unsigned char *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v5 = v4;
  }
  unint64_t v6 = sub_100077FAC((uint64_t)&v25, (uint64_t *)a2, v5);
  int8x8_t v7 = (int8x8_t)a1[1];
  if (!*(void *)&v7) {
    return 0;
  }
  unint64_t v8 = v6;
  uint8x8_t v9 = (uint8x8_t)vcnt_s8(v7);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    unint64_t v10 = v6;
    if (v6 >= *(void *)&v7) {
      unint64_t v10 = v6 % *(void *)&v7;
    }
  }
  else
  {
    unint64_t v10 = (*(void *)&v7 - 1) & v6;
  }
  unint64_t v12 = *(uint64_t ***)(*a1 + 8 * v10);
  if (v12)
  {
    unint64_t v13 = *v12;
    if (*v12)
    {
      char v14 = v2[23];
      if (v14 >= 0) {
        uint64_t v15 = v2[23];
      }
      else {
        uint64_t v15 = *((void *)v2 + 1);
      }
      if (v14 < 0) {
        uint64_t v2 = *(unsigned char **)v2;
      }
      if (v9.u32[0] < 2uLL)
      {
        uint64_t v16 = *(void *)&v7 - 1;
        while (1)
        {
          uint64_t v21 = v13[1];
          if (v21 == v8)
          {
            uint64_t v22 = *((unsigned __int8 *)v13 + 39);
            if ((v22 & 0x80u) == 0) {
              uint64_t v23 = *((unsigned __int8 *)v13 + 39);
            }
            else {
              uint64_t v23 = v13[3];
            }
            if (v23 == v15)
            {
              if ((v22 & 0x80) != 0)
              {
                if (!memcmp((const void *)v13[2], v2, v13[3])) {
                  return v13;
                }
              }
              else
              {
                if (!*((unsigned char *)v13 + 39)) {
                  return v13;
                }
                uint64_t v24 = 0;
                while (*((unsigned __int8 *)v13 + v24 + 16) == v2[v24])
                {
                  if (v22 == ++v24) {
                    return v13;
                  }
                }
              }
            }
          }
          else if ((v21 & v16) != v10)
          {
            return 0;
          }
          uint64_t result = 0;
          unint64_t v13 = (uint64_t *)*v13;
          if (!v13) {
            return result;
          }
        }
      }
      while (1)
      {
        unint64_t v17 = v13[1];
        if (v17 == v8)
        {
          uint64_t v18 = *((unsigned __int8 *)v13 + 39);
          if ((v18 & 0x80u) == 0) {
            uint64_t v19 = *((unsigned __int8 *)v13 + 39);
          }
          else {
            uint64_t v19 = v13[3];
          }
          if (v19 == v15)
          {
            if ((v18 & 0x80) != 0)
            {
              if (!memcmp((const void *)v13[2], v2, v13[3])) {
                return v13;
              }
            }
            else
            {
              if (!*((unsigned char *)v13 + 39)) {
                return v13;
              }
              uint64_t v20 = 0;
              while (*((unsigned __int8 *)v13 + v20 + 16) == v2[v20])
              {
                if (v18 == ++v20) {
                  return v13;
                }
              }
            }
          }
        }
        else
        {
          if (v17 >= *(void *)&v7) {
            v17 %= *(void *)&v7;
          }
          if (v17 != v10) {
            return 0;
          }
        }
        uint64_t result = 0;
        unint64_t v13 = (uint64_t *)*v13;
        if (!v13) {
          return result;
        }
      }
    }
  }
  return 0;
}

void *sub_1000A9E44@<X0>(void *result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int8x8_t v3 = (int8x8_t)result[1];
  unint64_t v4 = a2[1];
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(void *)&v3) {
      v4 %= *(void *)&v3;
    }
  }
  else
  {
    v4 &= *(void *)&v3 - 1;
  }
  unint64_t v6 = *(void **)(*result + 8 * v4);
  do
  {
    int8x8_t v7 = v6;
    unint64_t v6 = (void *)*v6;
  }
  while (v6 != a2);
  if (v7 == result + 2) {
    goto LABEL_18;
  }
  unint64_t v8 = v7[1];
  if (v5.u32[0] > 1uLL)
  {
    if (v8 >= *(void *)&v3) {
      v8 %= *(void *)&v3;
    }
  }
  else
  {
    v8 &= *(void *)&v3 - 1;
  }
  if (v8 != v4)
  {
LABEL_18:
    if (!*a2) {
      goto LABEL_19;
    }
    unint64_t v9 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(void *)&v3) {
        v9 %= *(void *)&v3;
      }
    }
    else
    {
      v9 &= *(void *)&v3 - 1;
    }
    if (v9 != v4) {
LABEL_19:
    }
      *(void *)(*result + 8 * v4) = 0;
  }
  uint64_t v10 = *a2;
  if (*a2)
  {
    unint64_t v11 = *(void *)(v10 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v11 >= *(void *)&v3) {
        v11 %= *(void *)&v3;
      }
    }
    else
    {
      v11 &= *(void *)&v3 - 1;
    }
    if (v11 != v4)
    {
      *(void *)(*result + 8 * v11) = v7;
      uint64_t v10 = *a2;
    }
  }
  void *v7 = v10;
  *a2 = 0;
  --result[3];
  *(void *)a3 = a2;
  *(void *)(a3 + 8) = result + 2;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1000A9FA4()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1000AA01C()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_1000AA094()
{
}

void sub_1000AA0BC(unsigned int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  SInt32 error = 0;
  v19[0] = kCFUserNotificationAlertHeaderKey;
  unint64_t v8 = +[NSString stringWithUTF8String:a2];
  v20[0] = v8;
  v19[1] = kCFUserNotificationAlertMessageKey;
  unint64_t v9 = +[NSString stringWithUTF8String:a3];
  v20[1] = v9;
  v20[2] = @"Collect";
  v19[2] = kCFUserNotificationDefaultButtonTitleKey;
  v19[3] = kCFUserNotificationAlternateButtonTitleKey;
  v20[3] = @"Dismiss";
  CFDictionaryRef v10 = +[NSDictionary dictionaryWithObjects:v20 forKeys:v19 count:4];

  unint64_t v11 = CFUserNotificationCreate(kCFAllocatorDefault, (double)a4 / 1000000000.0, a1, &error, v10);
  RunLoopSource = CFUserNotificationCreateRunLoopSource(kCFAllocatorDefault, v11, (CFUserNotificationCallBack)sub_1000AA3D0, 0);
  if (!RunLoopSource)
  {
    if (qword_10047BF18 == -1)
    {
      uint64_t v15 = qword_10047BF20;
      if (!os_log_type_enabled((os_log_t)qword_10047BF20, OS_LOG_TYPE_ERROR)) {
        goto LABEL_8;
      }
    }
    else
    {
      dispatch_once(&qword_10047BF18, &stru_100452370);
      uint64_t v15 = qword_10047BF20;
      if (!os_log_type_enabled((os_log_t)qword_10047BF20, OS_LOG_TYPE_ERROR))
      {
LABEL_8:
        if (v11) {
          CFRelease(v11);
        }
        goto LABEL_10;
      }
    }
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "Unable to create the notifcation run loop source", buf, 2u);
    goto LABEL_8;
  }
  Main = CFRunLoopGetMain();
  CFRunLoopAddSource(Main, RunLoopSource, kCFRunLoopCommonModes);
  if (qword_10047BF18 != -1)
  {
    dispatch_once(&qword_10047BF18, &stru_100452370);
    char v14 = qword_10047BF20;
    if (!os_log_type_enabled((os_log_t)qword_10047BF20, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_10;
    }
    goto LABEL_4;
  }
  char v14 = qword_10047BF20;
  if (os_log_type_enabled((os_log_t)qword_10047BF20, OS_LOG_TYPE_DEBUG))
  {
LABEL_4:
    *(_DWORD *)buf = 136315138;
    uint64_t v18 = a2;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "UI prompt %s displayed", buf, 0xCu);
  }
LABEL_10:
}

void sub_1000AA37C(_Unwind_Exception *exception_object, int a2)
{
  if (a2) {
    sub_1000A6954(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000AA3D0(const void *a1, char a2)
{
  if (qword_10047BF18 != -1) {
    dispatch_once(&qword_10047BF18, &stru_100452370);
  }
  unint64_t v4 = (id)qword_10047BF20;
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Entered UI prompt handler", buf, 2u);
  }

  uint64_t v5 = a2 & 3;
  if (v5 == 3)
  {
    if (qword_10047BF18 == -1)
    {
      uint64_t v12 = qword_10047BF20;
      if (!os_log_type_enabled((os_log_t)qword_10047BF20, OS_LOG_TYPE_INFO)) {
        goto LABEL_23;
      }
    }
    else
    {
      dispatch_once(&qword_10047BF18, &stru_100452370);
      uint64_t v12 = qword_10047BF20;
      if (!os_log_type_enabled((os_log_t)qword_10047BF20, OS_LOG_TYPE_INFO)) {
        goto LABEL_23;
      }
    }
    *(_WORD *)buf = 0;
    unint64_t v8 = "Notification timed-out";
    unint64_t v9 = v12;
    os_log_type_t v10 = OS_LOG_TYPE_INFO;
    uint32_t v11 = 2;
LABEL_22:
    _os_log_impl((void *)&_mh_execute_header, v9, v10, v8, buf, v11);
    goto LABEL_23;
  }
  if (v5 == 1)
  {
    if (qword_10047BF18 == -1)
    {
      uint64_t v7 = qword_10047BF20;
      if (!os_log_type_enabled((os_log_t)qword_10047BF20, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_23;
      }
    }
    else
    {
      dispatch_once(&qword_10047BF18, &stru_100452370);
      uint64_t v7 = qword_10047BF20;
      if (!os_log_type_enabled((os_log_t)qword_10047BF20, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_23;
      }
    }
    *(_WORD *)buf = 0;
    unint64_t v8 = "Notification dismissed";
    unint64_t v9 = v7;
    os_log_type_t v10 = OS_LOG_TYPE_DEBUG;
    uint32_t v11 = 2;
    goto LABEL_22;
  }
  if ((a2 & 3) == 0)
  {
    if (qword_10047BF18 != -1) {
      dispatch_once(&qword_10047BF18, &stru_100452370);
    }
    unint64_t v6 = (id)qword_10047BF20;
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Collecting logs", buf, 2u);
    }

    *(std::chrono::system_clock::time_point *)buf = std::chrono::system_clock::now();
    sub_10001E6D0((const std::chrono::system_clock::time_point *)buf);
  }
  if (qword_10047BF18 == -1)
  {
    uint64_t v13 = qword_10047BF20;
    if (!os_log_type_enabled((os_log_t)qword_10047BF20, OS_LOG_TYPE_ERROR)) {
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  dispatch_once(&qword_10047BF18, &stru_100452370);
  uint64_t v13 = qword_10047BF20;
  if (os_log_type_enabled((os_log_t)qword_10047BF20, OS_LOG_TYPE_ERROR))
  {
LABEL_21:
    *(_DWORD *)buf = 134217984;
    *(void *)&uint8_t buf[4] = v5;
    unint64_t v8 = "Notification dismissed with unknown button identifier: %lu";
    unint64_t v9 = v13;
    os_log_type_t v10 = OS_LOG_TYPE_ERROR;
    uint32_t v11 = 12;
    goto LABEL_22;
  }
LABEL_23:
  if (a1) {
    CFRelease(a1);
  }
}

void sub_1000AB85C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, _Unwind_Exception *exception_object, uint64_t a12, void *a13, const void *a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,void *a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,uint64_t a51)
{
  if (a31 < 0) {
    operator delete(__p);
  }

  sub_1000ABFD0(&a33);
  if (a44 < 0) {
    operator delete(a39);
  }
  operator delete(a13);
  if (a50 < 0) {
    operator delete(a45);
  }
  sub_1000ABB28(&a14);
  _Unwind_Resume(a1);
}

const void **sub_1000ABB28(const void **a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2) {
    CFRelease(v2);
  }
  return a1;
}

void sub_1000ABB60()
{
  v0[0] = 0;
  v0[1] = v0;
  v0[2] = 0x3812000000;
  v0[3] = sub_10009656C;
  v0[4] = sub_100096540;
  v0[5] = &unk_10042AA3F;
  operator new();
}

void sub_1000ABEE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *__p,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  _Block_object_dispose(&a29, 8);
  if (a40 < 0)
  {
    operator delete(__p);
    _Block_object_dispose((const void *)(v41 - 192), 8);
    if ((*(char *)(v41 - 121) & 0x80000000) == 0)
    {
LABEL_4:
      _Block_object_dispose((const void *)(v41 - 120), 8);
      sub_1000ACDC8(v40);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    _Block_object_dispose((const void *)(v41 - 192), 8);
    if ((*(char *)(v41 - 121) & 0x80000000) == 0) {
      goto LABEL_4;
    }
  }
  operator delete(*(void **)(v41 - 144));
  goto LABEL_4;
}

void **sub_1000ABFD0(void **a1)
{
  uint64_t v2 = (char *)*a1;
  if (*a1)
  {
    int8x8_t v3 = (char *)a1[1];
    unint64_t v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        unint64_t v6 = (atomic_ullong *)*((void *)v3 - 1);
        v3 -= 8;
        uint64_t v5 = v6;
        if (v6 && !atomic_fetch_add(v5 + 1, 0xFFFFFFFFFFFFFFFFLL)) {
          (*(void (**)(atomic_ullong *))(*v5 + 16))(v5);
        }
      }
      while (v3 != v2);
      unint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

const char *sub_1000AC06C()
{
  return "system";
}

uint64_t sub_1000AC078(uint64_t a1, unsigned int a2)
{
  return a2;
}

uint64_t sub_1000AC084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(_DWORD *)a3 != (*(unsigned int (**)(uint64_t))(*(void *)a1 + 8))(a1)) {
    return 0;
  }
  uint64_t v5 = *(void *)(a3 + 8);
  if (!v4)
  {
    if (!v5) {
      return 1;
    }
    uint64_t v9 = *(void *)(v5 + 8);
    return v9 == 0xB2AB117A257EDFD0;
  }
  if (!v5)
  {
    uint64_t v9 = *(void *)(v4 + 8);
    return v9 == 0xB2AB117A257EDFD0;
  }
  uint64_t v6 = *(void *)(v5 + 8);
  BOOL v7 = v5 == v4;
  if (v6) {
    return *(void *)(v4 + 8) == v6;
  }
  else {
    return v7;
  }
}

BOOL sub_1000AC154(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 == 1)
  {
    if (*(void *)(a1 + 8) == 0xB2AB117A257EDFD2) {
      return *(_DWORD *)a2 + 1000 * (*(void *)(a2 + 8) % 0x1FFFF7uLL) == a3;
    }
    return 0;
  }
  if (v3)
  {
    if (*(_DWORD *)a2 == a3)
    {
      uint64_t v6 = *(void *)(a2 + 8);
      uint64_t v7 = *(void *)(v6 + 8);
      BOOL v8 = v6 == a1;
      if (v7) {
        return *(void *)(a1 + 8) == v7;
      }
      else {
        return v8;
      }
    }
    return 0;
  }
  return !a3 && *(void *)(a1 + 8) == 0xB2AB117A257EDFD1;
}

unint64_t sub_1000AC228@<X0>(int __errnum@<W1>, void *a2@<X8>)
{
  uint64_t v3 = strerror(__errnum);
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = "Unknown error";
  }
  unint64_t result = strlen(v4);
  if (result >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  size_t v6 = result;
  if (result >= 0x17)
  {
    uint64_t v7 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17) {
      uint64_t v7 = result | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v9 = operator new(v7 + 1);
    a2[1] = v6;
    a2[2] = v8 | 0x8000000000000000;
    *a2 = v9;
    a2 = v9;
  }
  else
  {
    *((unsigned char *)a2 + 23) = result;
    if (!result)
    {
      *(unsigned char *)a2 = 0;
      return result;
    }
  }
  unint64_t result = (unint64_t)memmove(a2, v4, v6);
  *((unsigned char *)a2 + v6) = 0;
  return result;
}

const char *sub_1000AC2F0(int a1, int __errnum, char *a3, uint64_t a4)
{
  if (!a4) {
    return a3;
  }
  uint64_t v5 = a3;
  size_t v6 = a4 - 1;
  if (a4 == 1)
  {
LABEL_5:
    *uint64_t v5 = 0;
    return a3;
  }
  uint64_t v7 = strerror(__errnum);
  if (v7)
  {
    strncpy(a3, v7, v6);
    uint64_t v5 = &a3[v6];
    goto LABEL_5;
  }
  return "Unknown error";
}

BOOL sub_1000AC364(uint64_t a1, int a2)
{
  return a2 != 0;
}

const char *sub_1000AC370()
{
  return "std:unknown";
}

uint64_t sub_1000AC37C(uint64_t a1, unsigned int a2)
{
  return a2;
}

size_t sub_1000AC38C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = (const char *)(*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t))(*(void *)a1 + 40))(a1, a2, v10, 48);
  size_t result = strlen(v4);
  if (result >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  size_t v6 = result;
  if (result >= 0x17)
  {
    uint64_t v7 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17) {
      uint64_t v7 = result | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v9 = operator new(v7 + 1);
    a3[1] = v6;
    a3[2] = v8 | 0x8000000000000000;
    *a3 = v9;
    a3 = v9;
  }
  else
  {
    *((unsigned char *)a3 + 23) = result;
    if (!result) {
      goto LABEL_9;
    }
  }
  size_t result = (size_t)memmove(a3, v4, v6);
LABEL_9:
  *((unsigned char *)a3 + v6) = 0;
  return result;
}

char *sub_1000AC494(uint64_t a1, char a2, char *a3, size_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return a3;
}

uint64_t sub_1000AC4DC(char *a1, size_t a2, const char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  return vsnprintf(a1, a2, a3, &a9);
}

void sub_1000AC508(id a1, NSFileHandle *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = [(NSFileHandle *)v2 readDataToEndOfFile];
  uint64_t v4 = +[NSString ps_stringWithUTF8Data:v3];
  uint64_t v5 = v4;
  if (v4)
  {
    [v4 ps_STLString];
  }
  else
  {
    __p[0] = 0;
    __p[1] = 0;
    uint64_t v9 = 0;
  }

  [(NSFileHandle *)v2 closeFile];
  if (qword_10047BF18 == -1)
  {
    size_t v6 = qword_10047BF20;
    if (!os_log_type_enabled((os_log_t)qword_10047BF20, OS_LOG_TYPE_INFO)) {
      goto LABEL_9;
    }
  }
  else
  {
    dispatch_once(&qword_10047BF18, &stru_100452370);
    size_t v6 = qword_10047BF20;
    if (!os_log_type_enabled((os_log_t)qword_10047BF20, OS_LOG_TYPE_INFO)) {
      goto LABEL_9;
    }
  }
  uint64_t v7 = __p;
  if (v9 < 0) {
    uint64_t v7 = (void **)__p[0];
  }
  *(_DWORD *)buf = 136315138;
  uint32_t v11 = v7;
  _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Output from collecting wifi logs:\n%s", buf, 0xCu);
LABEL_9:
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
}

void sub_1000AC66C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v18 = v17;

  _Unwind_Resume(a1);
}

char *sub_1000AC6B8(char **a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = v4 - *a1;
  uint64_t v6 = v5 >> 3;
  unint64_t v7 = (v5 >> 3) + 1;
  if (v7 >> 61) {
    sub_1000A9108();
  }
  uint64_t v9 = a1[2] - v3;
  if (v9 >> 2 > v7) {
    unint64_t v7 = v9 >> 2;
  }
  if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8) {
    unint64_t v10 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v10 = v7;
  }
  if (v10)
  {
    if (v10 >> 61) {
      sub_1000A6A10();
    }
    uint32_t v11 = (char *)operator new(8 * v10);
  }
  else
  {
    uint32_t v11 = 0;
  }
  uint64_t v12 = &v11[8 * v6];
  uint64_t v13 = &v11[8 * v10];
  *(void *)uint64_t v12 = *a2;
  char v14 = v12 + 8;
  *a2 = 0;
  if (v4 != v3)
  {
    unint64_t v15 = v4 - v3 - 8;
    if (v15 < 0x78) {
      goto LABEL_35;
    }
    if (&v11[v5 - (v15 & 0xFFFFFFFFFFFFFFF8) - 8] < v4 && &v4[-(v15 & 0xFFFFFFFFFFFFFFF8) - 8] < v12) {
      goto LABEL_35;
    }
    uint64_t v17 = (v15 >> 3) + 1;
    uint64_t v18 = 8 * (v17 & 0x3FFFFFFFFFFFFFFCLL);
    v12 -= v18;
    uint64_t v19 = &v4[-v18];
    uint64_t v20 = v4 - 16;
    uint64_t v21 = &v11[8 * v6 - 16];
    uint64_t v22 = v17 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      long long v23 = *(_OWORD *)v20;
      *((_OWORD *)v21 - 1) = *((_OWORD *)v20 - 1);
      *(_OWORD *)uint64_t v21 = v23;
      *((_OWORD *)v20 - 1) = 0uLL;
      *(_OWORD *)uint64_t v20 = 0uLL;
      v20 -= 32;
      v21 -= 32;
      v22 -= 4;
    }
    while (v22);
    uint64_t v4 = v19;
    if (v17 != (v17 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_35:
      do
      {
        uint64_t v24 = *((void *)v4 - 1);
        v4 -= 8;
        *((void *)v12 - 1) = v24;
        v12 -= 8;
        *(void *)uint64_t v4 = 0;
      }
      while (v4 != v3);
    }
  }
  char v25 = *a1;
  uint64_t v26 = a1[1];
  *a1 = v12;
  a1[1] = v14;
  a1[2] = v13;
  while (v26 != v25)
  {
    float v28 = (atomic_ullong *)*((void *)v26 - 1);
    v26 -= 8;
    float v27 = v28;
    if (v28 && !atomic_fetch_add(v27 + 1, 0xFFFFFFFFFFFFFFFFLL)) {
      (*(void (**)(atomic_ullong *))(*v27 + 16))(v27);
    }
  }
  if (v25) {
    operator delete(v25);
  }
  return v14;
}

__n128 sub_1000AC880(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a1[3] = result;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  a2[3].n128_u64[0] = 0;
  return result;
}

void sub_1000AC89C(uint64_t a1)
{
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
}

__n128 sub_1000AC8B0(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a1[3] = result;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  a2[3].n128_u64[0] = 0;
  return result;
}

void sub_1000AC8CC(uint64_t a1)
{
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
}

void sub_1000AC8E0(void *a1)
{
  uint64_t v18 = 0;
  unint64_t v19 = 0;
  uint64_t v20 = 0;
  if (qword_10047BF18 != -1) {
    dispatch_once(&qword_10047BF18, &stru_100452370);
  }
  uint64_t v2 = (id)qword_10047BF20;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    sub_10009BB3C((unsigned char *)(*(void *)(a1[4] + 8) + 48), &__p);
    uint64_t v3 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
       ? &__p
       : (std::string *)__p.__r_.__value_.__r.__words[0];
    *(_DWORD *)buf = 136315138;
    *(void *)&uint8_t buf[4] = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Collecting %s", buf, 0xCu);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }

  uint64_t v4 = *(void *)(a1[5] + 8);
  uint64_t v5 = (char *)(*(void *)(a1[4] + 8) + 48);
  sub_10009BB3C(v5, buf);
  if (*(char *)(v4 + 71) < 0) {
    sub_1000559FC(&__p, *(void **)(v4 + 48), *(void *)(v4 + 56));
  }
  else {
    std::string __p = *(std::string *)(v4 + 48);
  }
  sub_1000512AC(&__p, (uint64_t)buf);
  sub_1000B0D0C(v5, (uint64_t)&__p, 0, &v18);
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((v22 & 0x80000000) == 0) {
      goto LABEL_14;
    }
LABEL_17:
    operator delete(*(void **)buf);
    uint64_t v6 = v20;
    if ((v20 & 1) == 0) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  if (v22 < 0) {
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v6 = v20;
  if ((v20 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_18:
  if (v6 == 1 && !v18)
  {
LABEL_20:
    if (qword_10047BF18 == -1)
    {
      unint64_t v7 = (id)qword_10047BF20;
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO)) {
        goto LABEL_22;
      }
    }
    else
    {
      dispatch_once(&qword_10047BF18, &stru_100452370);
      unint64_t v7 = (id)qword_10047BF20;
      if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
      {
LABEL_22:
        sub_10009BB3C((unsigned char *)(*(void *)(a1[4] + 8) + 48), &__p);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          p_p = &__p;
        }
        else {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        *(_DWORD *)buf = 136315138;
        *(void *)&uint8_t buf[4] = p_p;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "Collected %s", buf, 0xCu);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
    }

    uint64_t v9 = *(void *)(*(void *)(a1[7] + 8) + 48);
    if (!v9) {
      sub_1000AD034(3u);
    }
    unint64_t v10 = (std::mutex *)(v9 + 24);
    std::mutex::lock((std::mutex *)(v9 + 24));
    if ((*(unsigned char *)(v9 + 136) & 1) != 0
      || (__p.__r_.__value_.__r.__words[0] = 0,
          uint64_t v11 = *(void *)(v9 + 16),
          std::exception_ptr::~exception_ptr((std::exception_ptr *)&__p),
          v11))
    {
      sub_1000AD034(2u);
    }
    char v12 = 1;
    goto LABEL_42;
  }
  if (qword_10047BF18 == -1)
  {
    uint64_t v13 = qword_10047BF20;
    if (os_log_type_enabled((os_log_t)qword_10047BF20, OS_LOG_TYPE_ERROR))
    {
LABEL_33:
      uint64_t v14 = *(void *)(a1[6] + 8);
      unint64_t v15 = (void *)(v14 + 48);
      if (*(char *)(v14 + 71) < 0) {
        unint64_t v15 = (void *)*v15;
      }
      int v16 = v18;
      if (v20 == 1) {
        int v16 = v18 + 1000 * (v19 % 0x1FFFF7);
      }
      LODWORD(__p.__r_.__value_.__l.__data_) = 136315394;
      *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)v15;
      WORD2(__p.__r_.__value_.__r.__words[1]) = 1024;
      *(_DWORD *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = v16;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "Failed to copy %s: %d", (uint8_t *)&__p, 0x12u);
    }
  }
  else
  {
    dispatch_once(&qword_10047BF18, &stru_100452370);
    uint64_t v13 = qword_10047BF20;
    if (os_log_type_enabled((os_log_t)qword_10047BF20, OS_LOG_TYPE_ERROR)) {
      goto LABEL_33;
    }
  }
  uint64_t v9 = *(void *)(*(void *)(a1[7] + 8) + 48);
  if (!v9) {
    sub_1000AD034(3u);
  }
  unint64_t v10 = (std::mutex *)(v9 + 24);
  std::mutex::lock((std::mutex *)(v9 + 24));
  if ((*(unsigned char *)(v9 + 136) & 1) != 0
    || (__p.__r_.__value_.__r.__words[0] = 0,
        uint64_t v17 = *(void *)(v9 + 16),
        std::exception_ptr::~exception_ptr((std::exception_ptr *)&__p),
        v17))
  {
    sub_1000AD034(2u);
  }
  char v12 = 0;
LABEL_42:
  *(unsigned char *)(v9 + 140) = v12;
  *(_DWORD *)(v9 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(v9 + 88));
  std::mutex::unlock(v10);
}

void sub_1000ACD30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  uint64_t v26 = v25;

  _Unwind_Resume(a1);
}

uint64_t *sub_1000ACDC8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (!v2) {
    return a1;
  }
  if ((*(unsigned char *)(v2 + 136) & 1) == 0)
  {
    v8.__ptr_ = 0;
    uint64_t v3 = *(void *)(v2 + 16);
    std::exception_ptr::~exception_ptr(&v8);
    uint64_t v2 = *a1;
    if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
    {
      v9.__cat_ = std::future_category();
      *(void *)&v9.__val_ = 4;
      std::future_error::future_error(&v7, v9);
      exception = (std::logic_error *)__cxa_allocate_exception(0x20uLL);
      uint64_t v6 = std::logic_error::logic_error(exception, &v7);
      v6[1] = (std::logic_error)v7.__ec_;
    }
  }
  if (atomic_fetch_add((atomic_ullong *volatile)(v2 + 8), 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  return a1;
}

void sub_1000ACF24(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);

  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

void sub_1000ACF90(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);

  operator delete();
}

uint64_t sub_1000AD010(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 8))();
}

void sub_1000AD034(unsigned int a1)
{
  exception = (std::future_error *)__cxa_allocate_exception(0x20uLL);
  v3.__cat_ = std::future_category();
  *(void *)&v3.__val_ = a1;
  std::future_error::future_error(exception, v3);
}

void sub_1000AD088(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000AD09C(std::__assoc_sub_state *a1)
{
  __lk.__m_ = &a1->__mut_;
  __lk.__owns_ = 1;
  std::mutex::lock(&a1->__mut_);
  std::__assoc_sub_state::__sub_wait(a1, &__lk);
  ptr = a1->__exception_.__ptr_;
  v5.__ptr_ = 0;
  std::exception_ptr::~exception_ptr(&v5);
  if (ptr)
  {
    std::exception_ptr::exception_ptr(&v4, &a1->__exception_);
    v3.__ptr_ = &v4;
    std::rethrow_exception(v3);
    __break(1u);
  }
  else if (__lk.__owns_)
  {
    std::mutex::unlock(__lk.__m_);
  }
}

void sub_1000AD138(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::mutex *a11, char a12)
{
  if (a12) {
    std::mutex::unlock(a11);
  }
  _Unwind_Resume(a1);
}

void sub_1000AD164(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "CLSensorSurvey");
  uint64_t v2 = (void *)qword_10047BF20;
  qword_10047BF20 = (uint64_t)v1;
}

void sub_1000AD1A8()
{
}

uint64_t boost::filesystem::filesystem_error::filesystem_error(uint64_t a1, const char *a2, uint64_t a3)
{
  std::exception_ptr v4 = (void *)sub_1000AD2B0(a1, a3, a2);
  void *v4 = off_1004523A0;
  v4[5] = 0;
  std::exception_ptr v5 = v4 + 5;
  uint64_t v6 = operator new(0x50uLL);
  v6[3] = 0u;
  v6[4] = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  _OWORD *v6 = 0u;
  std::exception_ptr v8 = v6;
  atomic_fetch_add((atomic_uint *volatile)v6, 1u);
  std::exception_ptr v8 = (_OWORD *)*v5;
  *std::exception_ptr v5 = (uint64_t)v6;
  sub_1000AE614((uint64_t *)&v8);
  return a1;
}

void sub_1000AD274(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  __cxa_begin_catch(a1);
  a10 = *v10;
  *unint64_t v10 = 0;
  sub_1000AE614(&a10);
  __cxa_end_catch();
  JUMPOUT(0x1000AD25CLL);
}

void sub_1000AD294(_Unwind_Exception *a1)
{
  sub_1000AE614(v2);
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000AD2B0(uint64_t a1, uint64_t a2, const char *a3)
{
  sub_1000ADEC4(a3, a2, &v7);
  std::runtime_error::runtime_error((std::runtime_error *)a1, &v7);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }
  *(void *)a1 = &off_1004523F8;
  long long v5 = *(_OWORD *)a2;
  *(void *)(a1 + 32) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 16) = v5;
  return a1;
}

void sub_1000AD334(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t boost::filesystem::filesystem_error::filesystem_error(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::exception_ptr v4 = (void *)sub_1000AD434(a1, a3, a2);
  void *v4 = off_1004523A0;
  v4[5] = 0;
  long long v5 = v4 + 5;
  uint64_t v6 = operator new(0x50uLL);
  v6[3] = 0u;
  v6[4] = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  _OWORD *v6 = 0u;
  std::exception_ptr v8 = v6;
  atomic_fetch_add((atomic_uint *volatile)v6, 1u);
  std::exception_ptr v8 = (_OWORD *)*v5;
  *long long v5 = (uint64_t)v6;
  sub_1000AE614((uint64_t *)&v8);
  return a1;
}

void sub_1000AD3F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  __cxa_begin_catch(a1);
  a10 = *v10;
  *unint64_t v10 = 0;
  sub_1000AE614(&a10);
  __cxa_end_catch();
  JUMPOUT(0x1000AD3E0);
}

void sub_1000AD418(_Unwind_Exception *a1)
{
  sub_1000AE614(v2);
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000AD434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(char *)(a3 + 23) >= 0) {
    long long v5 = (const char *)a3;
  }
  else {
    long long v5 = *(const char **)a3;
  }
  sub_1000ADEC4(v5, a2, &v8);
  std::runtime_error::runtime_error((std::runtime_error *)a1, &v8);
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v8.__r_.__value_.__l.__data_);
  }
  *(void *)a1 = &off_1004523F8;
  long long v6 = *(_OWORD *)a2;
  *(void *)(a1 + 32) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 16) = v6;
  return a1;
}

void sub_1000AD4C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t boost::filesystem::filesystem_error::filesystem_error(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  long long v6 = (void *)sub_1000AD2B0(a1, a4, a2);
  void *v6 = off_1004523A0;
  v6[5] = 0;
  std::string v7 = v6 + 5;
  std::string v8 = (char *)operator new(0x50uLL);
  *(_DWORD *)std::string v8 = 0;
  std::error_code v9 = v8 + 8;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_1000559FC(v9, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)std::error_code v9 = *(_OWORD *)a3;
    *((void *)v8 + 3) = *(void *)(a3 + 16);
  }
  *((_OWORD *)v8 + 3) = 0u;
  *((_OWORD *)v8 + 4) = 0u;
  *((_OWORD *)v8 + 2) = 0u;
  uint64_t v11 = v8;
  atomic_fetch_add((atomic_uint *volatile)v8, 1u);
  uint64_t v11 = (char *)*v7;
  uint64_t *v7 = (uint64_t)v8;
  sub_1000AE614((uint64_t *)&v11);
  return a1;
}

void sub_1000AD5B0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  operator delete(v11);
  __cxa_begin_catch(a1);
  a10 = *v10;
  *unint64_t v10 = 0;
  sub_1000AE614(&a10);
  __cxa_end_catch();
  JUMPOUT(0x1000AD598);
}

void sub_1000AD5E8(_Unwind_Exception *a1)
{
  sub_1000AE614(v2);
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

uint64_t boost::filesystem::filesystem_error::filesystem_error(uint64_t a1, const char *a2, long long *a3, long long *a4, uint64_t a5)
{
  std::string v8 = (void *)sub_1000AD2B0(a1, a5, a2);
  void *v8 = off_1004523A0;
  v8[5] = 0;
  std::error_code v9 = v8 + 5;
  unint64_t v10 = (atomic_uint *)operator new(0x50uLL);
  sub_1000AE564((uint64_t)v10, a3, a4);
  uint64_t v12 = (uint64_t)v10;
  atomic_fetch_add(v10, 1u);
  uint64_t v12 = *v9;
  *std::error_code v9 = (uint64_t)v10;
  sub_1000AE614(&v12);
  return a1;
}

void sub_1000AD6B8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  operator delete(v11);
  __cxa_begin_catch(a1);
  a10 = *v10;
  *unint64_t v10 = 0;
  sub_1000AE614(&a10);
  __cxa_end_catch();
  JUMPOUT(0x1000AD69CLL);
}

void sub_1000AD6F0(_Unwind_Exception *a1)
{
  sub_1000AE614(v2);
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

std::runtime_error *boost::filesystem::filesystem_error::filesystem_error(std::runtime_error *a1, uint64_t a2)
{
  __n128 result = std::runtime_error::runtime_error(a1, (const std::runtime_error *)a2);
  result->__vftable = (std::runtime_error_vtbl *)&off_1004523F8;
  std::runtime_error v4 = *(std::runtime_error *)(a2 + 16);
  result[2].__vftable = *(std::runtime_error_vtbl **)(a2 + 32);
  result[1] = v4;
  result->__vftable = (std::runtime_error_vtbl *)off_1004523A0;
  long long v5 = *(atomic_uint **)(a2 + 40);
  result[2].__imp_.__imp_ = (const char *)v5;
  if (v5) {
    atomic_fetch_add(v5, 1u);
  }
  return result;
}

void boost::filesystem::filesystem_error::~filesystem_error(boost::filesystem::filesystem_error *this)
{
  *(void *)this = off_1004523A0;
  sub_1000AE614((uint64_t *)this + 5);

  std::runtime_error::~runtime_error((std::runtime_error *)this);
}

{
  uint64_t vars8;

  *(void *)this = off_1004523A0;
  sub_1000AE614((uint64_t *)this + 5);

  std::runtime_error::~runtime_error((std::runtime_error *)this);
}

{
  void *v2;
  uint64_t vars8;

  *(void *)this = off_1004523A0;
  sub_1000AE614((uint64_t *)this + 5);
  std::runtime_error::~runtime_error((std::runtime_error *)this);

  operator delete(v2);
}

const char *boost::filesystem::filesystem_error::what(std::runtime_error *this)
{
  imp = this[2].__imp_.__imp_;
  if (imp)
  {
    if (imp[79] < 0)
    {
      if (*((void *)imp + 8)) {
        goto LABEL_28;
      }
    }
    else if (imp[79])
    {
      goto LABEL_28;
    }
    std::exception_ptr v3 = (char *)std::runtime_error::what(this);
    sub_10005575C((std::string *)(this[2].__imp_.__imp_ + 56), v3);
    imp = this[2].__imp_.__imp_;
    if (imp[31] < 0)
    {
      if (!*((void *)imp + 2)) {
        goto LABEL_17;
      }
    }
    else if (!imp[31])
    {
      goto LABEL_17;
    }
    std::string::append((std::string *)(imp + 56), ": \"", 3uLL);
    std::runtime_error v4 = this[2].__imp_.__imp_;
    std::string v7 = (const std::string::value_type *)*((void *)v4 + 1);
    long long v5 = v4 + 8;
    long long v6 = v7;
    int v8 = v5[23];
    if (v8 >= 0) {
      std::error_code v9 = v5;
    }
    else {
      std::error_code v9 = v6;
    }
    if (v8 >= 0) {
      std::string::size_type v10 = *((unsigned __int8 *)v5 + 23);
    }
    else {
      std::string::size_type v10 = *((void *)v5 + 1);
    }
    std::string::append((std::string *)v5 + 2, v9, v10);
    std::string::append((std::string *)(this[2].__imp_.__imp_ + 56), "\"", 1uLL);
    imp = this[2].__imp_.__imp_;
LABEL_17:
    if (imp[55] < 0)
    {
      if (!*((void *)imp + 5)) {
        goto LABEL_28;
      }
    }
    else if (!imp[55])
    {
LABEL_28:
      __n128 result = imp + 56;
      if (imp[79] < 0) {
        return *(const char **)result;
      }
      return result;
    }
    std::string::append((std::string *)(imp + 56), ", \"", 3uLL);
    uint64_t v11 = this[2].__imp_.__imp_;
    uint64_t v14 = (const std::string::value_type *)*((void *)v11 + 4);
    uint64_t v12 = v11 + 32;
    uint64_t v13 = v14;
    int v15 = v12[23];
    if (v15 >= 0) {
      int v16 = v12;
    }
    else {
      int v16 = v13;
    }
    if (v15 >= 0) {
      std::string::size_type v17 = *((unsigned __int8 *)v12 + 23);
    }
    else {
      std::string::size_type v17 = *((void *)v12 + 1);
    }
    std::string::append((std::string *)v12 + 1, v16, v17);
    std::string::append((std::string *)(this[2].__imp_.__imp_ + 56), "\"", 1uLL);
    imp = this[2].__imp_.__imp_;
    goto LABEL_28;
  }

  return std::runtime_error::what(this);
}

uint64_t sub_1000ADA38(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_1000ADA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2)
  {
    exception = __cxa_allocate_exception(0x30uLL);
    v11[0] = 0;
    if ((unint64_t)qword_10047BF98 >> 1 == 0x595588BD12BF6FE8) {
      int v8 = a1 != 0;
    }
    else {
      int v8 = ((uint64_t (*)(uint64_t (***)(), uint64_t))boost::system::detail::system_cat_holder<void>::instance[6])(&boost::system::detail::system_cat_holder<void>::instance, a1);
    }
    uint64_t v9 = 2;
    LODWORD(v11[0]) = a1;
    if (v8) {
      uint64_t v9 = 3;
    }
    v11[1] = &boost::system::detail::system_cat_holder<void>::instance;
    v11[2] = v9;
    boost::filesystem::filesystem_error::filesystem_error(exception, a3, v11);
  }
  if ((unint64_t)qword_10047BF98 >> 1 == 0x595588BD12BF6FE8) {
    uint64_t result = a1 != 0;
  }
  else {
    uint64_t result = ((uint64_t (*)(uint64_t (***)(), uint64_t))boost::system::detail::system_cat_holder<void>::instance[6])(&boost::system::detail::system_cat_holder<void>::instance, a1);
  }
  uint64_t v6 = 2;
  if (result) {
    uint64_t v6 = 3;
  }
  *(_DWORD *)a2 = a1;
  *(_DWORD *)(a2 + 4) = 0;
  *(void *)(a2 + 8) = &boost::system::detail::system_cat_holder<void>::instance;
  *(void *)(a2 + 16) = v6;
  return result;
}

void sub_1000ADBC8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000ADBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3)
  {
    exception = __cxa_allocate_exception(0x30uLL);
    v13[0] = 0;
    if ((unint64_t)qword_10047BF98 >> 1 == 0x595588BD12BF6FE8) {
      int v9 = a1 != 0;
    }
    else {
      int v9 = ((uint64_t (*)(uint64_t (***)(), uint64_t))boost::system::detail::system_cat_holder<void>::instance[6])(&boost::system::detail::system_cat_holder<void>::instance, a1);
    }
    uint64_t v10 = 2;
    LODWORD(v13[0]) = a1;
    if (v9) {
      uint64_t v10 = 3;
    }
    v13[1] = &boost::system::detail::system_cat_holder<void>::instance;
    v13[2] = v10;
    boost::filesystem::filesystem_error::filesystem_error(exception, a4, a2, v13);
  }
  if ((unint64_t)qword_10047BF98 >> 1 == 0x595588BD12BF6FE8) {
    uint64_t result = a1 != 0;
  }
  else {
    uint64_t result = ((uint64_t (*)(uint64_t (***)(), uint64_t))boost::system::detail::system_cat_holder<void>::instance[6])(&boost::system::detail::system_cat_holder<void>::instance, a1);
  }
  uint64_t v7 = 2;
  if (result) {
    uint64_t v7 = 3;
  }
  *(_DWORD *)a3 = a1;
  *(_DWORD *)(a3 + 4) = 0;
  *(void *)(a3 + 8) = &boost::system::detail::system_cat_holder<void>::instance;
  *(void *)(a3 + 16) = v7;
  return result;
}

void sub_1000ADD38(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000ADD4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (!a4)
  {
    exception = __cxa_allocate_exception(0x30uLL);
    v15[0] = 0;
    if ((unint64_t)qword_10047BF98 >> 1 == 0x595588BD12BF6FE8) {
      int v10 = a1 != 0;
    }
    else {
      int v10 = ((uint64_t (*)(uint64_t (***)(), uint64_t))boost::system::detail::system_cat_holder<void>::instance[6])(&boost::system::detail::system_cat_holder<void>::instance, a1);
    }
    uint64_t v11 = 2;
    LODWORD(v15[0]) = a1;
    if (v10) {
      uint64_t v11 = 3;
    }
    v15[1] = &boost::system::detail::system_cat_holder<void>::instance;
    v15[2] = v11;
    boost::filesystem::filesystem_error::filesystem_error(exception, a5, a2, a3, v15);
  }
  if ((unint64_t)qword_10047BF98 >> 1 == 0x595588BD12BF6FE8) {
    uint64_t result = a1 != 0;
  }
  else {
    uint64_t result = ((uint64_t (*)(uint64_t (***)(), uint64_t))boost::system::detail::system_cat_holder<void>::instance[6])(&boost::system::detail::system_cat_holder<void>::instance, a1);
  }
  uint64_t v8 = 2;
  if (result) {
    uint64_t v8 = 3;
  }
  *(_DWORD *)a4 = a1;
  *(_DWORD *)(a4 + 4) = 0;
  *(void *)(a4 + 8) = &boost::system::detail::system_cat_holder<void>::instance;
  *(void *)(a4 + 16) = v8;
  return result;
}

void sub_1000ADEB0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000ADEC4(const char *a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  if (a1)
  {
    size_t v6 = strlen(a1);
    std::string::append(a3, a1, v6);
    std::string::append(a3, ": ", 2uLL);
  }
  sub_1000ADFD4(a2, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  std::string::append(a3, (const std::string::value_type *)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1000ADF70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v15 + 23) < 0) {
    operator delete(*(void **)v15);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000ADFAC(std::runtime_error *a1)
{
  std::runtime_error::~runtime_error(a1);

  operator delete(v1);
}

std::string *sub_1000ADFD4@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  sub_1000AE128((unsigned int *)a1, a2);
  std::string::append(a2, " [", 2uLL);
  sub_1000AE178((int *)a1, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  std::string::append(a2, (const std::string::value_type *)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (*(void *)(a1 + 16) >= 4uLL)
  {
    std::string::append(a2, " at ", 4uLL);
    unint64_t v6 = *(void *)(a1 + 16);
    if (v6 <= 3) {
      uint64_t v7 = off_100452410;
    }
    else {
      uint64_t v7 = (char **)(v6 & 0xFFFFFFFFFFFFFFFELL);
    }
    sub_1000AE344((uint64_t)v7, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v8 = &__p;
    }
    else {
      uint64_t v8 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v9 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v9 = __p.__r_.__value_.__l.__size_;
    }
    std::string::append(a2, (const std::string::value_type *)v8, v9);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return std::string::append(a2, "]", 1uLL);
}

void sub_1000AE0E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v15 + 23) < 0) {
    operator delete(*(void **)v15);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_1000AE128@<X0>(unsigned int *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v2 = *((void *)a1 + 2);
  if (v2)
  {
    if (v2 == 1) {
      return std::error_code::message(a2, (const std::error_code *)a1);
    }
    std::runtime_error v4 = (uint64_t (***)())*((void *)a1 + 1);
  }
  else
  {
    std::runtime_error v4 = &boost::system::detail::system_cat_holder<void>::instance;
  }
  return (std::string *)((uint64_t (*)(uint64_t (***)(), void))(*v4)[4])(v4, *a1);
}

std::string *sub_1000AE178@<X0>(int *a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v4 = *((void *)a1 + 2);
  if (v4)
  {
    if (v4 == 1)
    {
      sub_1000AE4B0(a2, "std:");
      long long v5 = (const char *)(*(uint64_t (**)(void))(**((void **)a1 + 1) + 16))(*((void *)a1 + 1));
      size_t v6 = strlen(v5);
      std::string::append(a2, v5, v6);
      sub_1000AC4DC(__s, 0x20uLL, ":%d", v7, v8, v9, v10, v11, *a1);
      size_t v12 = strlen(__s);
      return std::string::append(a2, __s, v12);
    }
    uint64_t v14 = (uint64_t (***)())*((void *)a1 + 1);
  }
  else
  {
    uint64_t v14 = &boost::system::detail::system_cat_holder<void>::instance;
  }
  uint64_t v15 = (char *)((uint64_t (*)(uint64_t (***)()))**v14)(v14);
  sub_1000AE4B0(a2, v15);
  int v21 = *a1;
  if (*((void *)a1 + 2) == 1) {
    v21 += 1000 * (*((void *)a1 + 1) % 0x1FFFF7uLL);
  }
  sub_1000AC4DC(__s, 0x20uLL, ":%d", v16, v17, v18, v19, v20, v21);
  size_t v22 = strlen(__s);
  return std::string::append(a2, __s, v22);
}

void sub_1000AE324(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000AE344(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  if (*(_DWORD *)(a1 + 16))
  {
    sub_1000AE4B0(a2, *(char **)a1);
    sprintf(__s, ":%ld", *(unsigned int *)(a1 + 16));
    size_t v4 = strlen(__s);
    std::string::append(a2, __s, v4);
    if (*(_DWORD *)(a1 + 20))
    {
      sprintf(__s, ":%ld", *(unsigned int *)(a1 + 20));
      size_t v5 = strlen(__s);
      std::string::append(a2, __s, v5);
    }
    std::string::append(a2, " in function '", 0xEuLL);
    size_t v6 = *(const char **)(a1 + 8);
    size_t v7 = strlen(v6);
    std::string::append(a2, v6, v7);
    std::string::push_back(a2, 39);
  }
  else
  {
    sub_1000AE4B0(a2, "(unknown source location)");
  }
}

void sub_1000AE494(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1000AE4B0(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    size_t v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    size_t v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

uint64_t sub_1000AE564(uint64_t a1, long long *a2, long long *a3)
{
  *(_DWORD *)a1 = 0;
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000559FC((unsigned char *)(a1 + 8), *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *(void *)(a1 + 24) = *((void *)a2 + 2);
    *(_OWORD *)(a1 + 8) = v5;
  }
  size_t v6 = (unsigned char *)(a1 + 32);
  if (*((char *)a3 + 23) < 0)
  {
    sub_1000559FC(v6, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v7 = *a3;
    *(void *)(a1 + 48) = *((void *)a3 + 2);
    *(_OWORD *)size_t v6 = v7;
  }
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  return a1;
}

void sub_1000AE5F8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_1000AE614(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (*a1 && atomic_fetch_add((atomic_uint *volatile)v2, 0xFFFFFFFF) == 1)
  {
    if (*(char *)(v2 + 79) < 0) {
      operator delete(*(void **)(v2 + 56));
    }
    if (*(char *)(v2 + 55) < 0) {
      operator delete(*(void **)(v2 + 32));
    }
    if (*(char *)(v2 + 31) < 0) {
      operator delete(*(void **)(v2 + 8));
    }
    operator delete((void *)v2);
  }
  return a1;
}

int *sub_1000AE688@<X0>(int *result@<X0>, void *a2@<X1>, int *a3@<X8>)
{
  std::exception_ptr v3 = result;
  int v5 = result[8];
  int v6 = result[9];
  if (v5) {
    BOOL v7 = v6 == 0xFFFF;
  }
  else {
    BOOL v7 = 1;
  }
  if (v7)
  {
    uint64_t result = sub_1000B0654((const char *)result, (uint64_t)a2, v8);
    int v5 = v8[0];
    int v6 = v8[1];
    v3[8] = v8[0];
    v3[9] = v6;
  }
  else if (a2)
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    int v5 = result[8];
    int v6 = result[9];
  }
  *a3 = v5;
  a3[1] = v6;
  return result;
}

void *sub_1000AE6F4(void *a1, uint64_t a2, void *a3)
{
  int v4 = a2;
  *a1 = 0;
  a1[1] = 0;
  if (a3[1] >> 1 == 0x595588BD12BF6FE8) {
    int v6 = a2 != 0;
  }
  else {
    int v6 = (*(uint64_t (**)(void *, uint64_t))(*a3 + 48))(a3, a2);
  }
  uint64_t v7 = 2;
  *(_DWORD *)a1 = v4;
  if (v6) {
    uint64_t v7 = 3;
  }
  a1[1] = a3;
  a1[2] = v7;
  return a1;
}

void *sub_1000AE794@<X0>(char *a1@<X0>, void *a2@<X8>)
{
  std::exception_ptr v3 = a1;
  if (a1[23] < 0) {
    std::exception_ptr v3 = *(char **)a1;
  }
  unint64_t v4 = sub_10005587C(a1);

  return sub_10003FCE8(a2, v3, &v3[v4], v4);
}

atomic_uint **sub_1000AE7E8(void ***a1, uint64_t a2, int a3, void *a4)
{
  if (a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
  }
  BOOL v32 = 0;
  sub_100056568((dirent **)&v32, a2, a3, a4);
  if (!a4 || (uint64_t v7 = a4[2], (v7 & 1) == 0) || v7 == 1 && !*(_DWORD *)a4)
  {
    unint64_t v33 = 0;
    if (v32 && *((void *)v32 + 6))
    {
      sub_100056A60((atomic_uint **)&v33);
      BOOL v31 = 0;
      if (a4)
      {
        uint64_t v8 = operator new(0x28uLL, &std::nothrow);
        if (v8)
        {
          *(_DWORD *)uint64_t v8 = 0;
          int v8[2] = 0;
          v8[3] = 0;
          v8[1] = 0;
          *((_DWORD *)v8 + 8) = a3;
          unint64_t v33 = (void **)v8;
          atomic_fetch_add((atomic_uint *volatile)v8, 1u);
          uint64_t v9 = (void **)v8;
          uint64_t v10 = v31;
        }
        else
        {
          uint64_t v10 = 0;
          uint64_t v9 = 0;
        }
        unint64_t v33 = v10;
        BOOL v31 = v9;
        sub_1000AFCEC(&v33);
        size_t v12 = v31;
        if (!v31)
        {
          if ((unint64_t)qword_10047BFC8 >> 1 == 0x595588BD12BF6FE8
            || ((unsigned int (*)(uint64_t (***)(), uint64_t))boost::system::detail::generic_cat_holder<void>::instance[6])(&boost::system::detail::generic_cat_holder<void>::instance, 12))
          {
            uint64_t v30 = 3;
          }
          else
          {
            uint64_t v30 = 2;
          }
          *a4 = 12;
          a4[1] = &boost::system::detail::generic_cat_holder<void>::instance;
          a4[2] = v30;
LABEL_34:
          sub_1000AFCEC(&v31);
          return sub_100056A60(&v32);
        }
      }
      else
      {
        uint64_t v11 = operator new(0x28uLL);
        *(_DWORD *)uint64_t v11 = 0;
        v11[2] = 0;
        void v11[3] = 0;
        v11[1] = 0;
        *((_DWORD *)v11 + 8) = a3;
        unint64_t v33 = (void **)v11;
        atomic_fetch_add((atomic_uint *volatile)v11, 1u);
        unint64_t v33 = v31;
        BOOL v31 = (void **)v11;
        sub_1000AFCEC(&v33);
        size_t v12 = v31;
      }
      uint64_t v13 = v12[3];
      uint64_t v14 = v12[2];
      if (v14 >= (void *)v13)
      {
        uint64_t v17 = v12[1];
        uint64_t v18 = v14 - v17;
        if ((unint64_t)(v18 + 1) >> 61) {
          sub_1000A9108();
        }
        unint64_t v19 = v13 - (unsigned char *)v17;
        unint64_t v20 = (v13 - (unsigned char *)v17) >> 2;
        if (v20 <= v18 + 1) {
          unint64_t v20 = v18 + 1;
        }
        if (v19 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v21 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v21 = v20;
        }
        int8x8_t v36 = v12 + 3;
        if (v21)
        {
          size_t v22 = (char *)sub_1000AFC18((uint64_t)(v12 + 3), v21);
          uint64_t v17 = v12[1];
          uint64_t v14 = v12[2];
        }
        else
        {
          size_t v22 = 0;
        }
        long long v23 = &v22[8 * v18];
        uint64_t v24 = &v22[8 * v21];
        int8x8_t v35 = v24;
        *(void *)long long v23 = v32;
        BOOL v32 = 0;
        *((void *)&v34 + 1) = v23 + 8;
        if (v14 == v17)
        {
          uint64_t v15 = v23 + 8;
        }
        else
        {
          do
          {
            uint64_t v25 = *--v14;
            *((void *)v23 - 1) = v25;
            v23 -= 8;
            *uint64_t v14 = 0;
          }
          while (v14 != v17);
          uint64_t v15 = (void *)*((void *)&v34 + 1);
          uint64_t v24 = v35;
        }
        long long v26 = *(_OWORD *)(v12 + 1);
        v12[1] = v23;
        v12[2] = v15;
        long long v34 = v26;
        float v27 = (char *)v12[3];
        v12[3] = v24;
        int8x8_t v35 = v27;
        unint64_t v33 = (void **)v26;
        sub_1000AFC50((uint64_t)&v33);
        uint64_t v16 = v31;
      }
      else
      {
        *uint64_t v14 = v32;
        uint64_t v15 = v14 + 1;
        BOOL v32 = 0;
        uint64_t v16 = v12;
      }
      v12[2] = v15;
      float v28 = *a1;
      *a1 = v16;
      BOOL v31 = v28;
      goto LABEL_34;
    }
    sub_100056A60((atomic_uint **)&v33);
  }
  return sub_100056A60(&v32);
}

void sub_1000AEABC()
{
}

void sub_1000AEB1C()
{
}

atomic_uint **sub_1000AEB44(uint64_t a1)
{
  for (uint64_t i = *(void *)(a1 + 16); ; uint64_t i = *(void *)(a1 + 16))
  {
    uint64_t result = sub_100056A60((atomic_uint **)(i - 8));
    *(void *)(a1 + 16) = result;
    if (*(atomic_uint ***)(a1 + 8) == result) {
      break;
    }
    unint64_t v4 = (dirent **)(i - 16);
    v7[0] = 0;
    v7[1] = 0;
    uint64_t v8 = 0;
    sub_1000551CC(v4, (uint64_t)v7);
    if ((v8 & 1) != 0 && (v8 != 1 || LODWORD(v7[0]) != 0)) {
      continue;
    }
    int v6 = 0;
    if (*v4 && *(void *)&(*v4)->d_name[27]) {
      return sub_100056A60(&v6);
    }
    sub_100056A60(&v6);
  }
  return result;
}

double sub_1000AEBE4(void ***a1, void *a2)
{
  unint64_t v4 = *a1;
  if (a2)
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  long long v39 = 0uLL;
  uint64_t v40 = 0;
  int v5 = *((_DWORD *)v4 + 8);
  if ((v5 & 0x10) != 0)
  {
    char v14 = 0;
    *((_DWORD *)v4 + 8) = v5 & 0xFFFFFFEF;
    goto LABEL_28;
  }
  if ((v4[4] & 6) == 2)
  {
    int v6 = 0;
  }
  else
  {
    sub_1000AE688((int *)(*((void *)v4[2] - 1) + 8), &v39, (int *)&v42);
    int v6 = v42;
    if (v40)
    {
      char v14 = 0;
      if (v40 != 1 || v39) {
        goto LABEL_28;
      }
    }
    if (((_BYTE)v4[4] & 2) == 0 && v42 == 4)
    {
LABEL_27:
      char v14 = 0;
      goto LABEL_28;
    }
  }
  v7.n128_f64[0] = sub_100056AA4(*((void *)v4[2] - 1) + 8, &v39, (double *)v37);
  if ((v40 & 1) != 0 && (v40 != 1 || v39))
  {
    uint64_t v42 = 2;
    *(void *)&long long v43 = &boost::system::detail::generic_cat_holder<void>::instance;
    if (sub_1000AF1E4((uint64_t *)&v39, (uint64_t)&v42) && v6 == 4 && (~*((_DWORD *)v4 + 8) & 6) == 0)
    {
      char v14 = 0;
      long long v39 = 0uLL;
      uint64_t v40 = 0;
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (LODWORD(v37[0]) != 3) {
    goto LABEL_27;
  }
  uint64_t v8 = (char *)v4[2];
  if ((unint64_t)(((v8 - (unsigned char *)v4[1]) >> 3) - 1) < 0x7FFFFFFF)
  {
    uint64_t v9 = *((void *)v8 - 1) + 8;
    int v10 = *((_DWORD *)v4 + 8);
    uint64_t v41 = 0;
    sub_100056568((dirent **)&v41, v9, v10, &v39);
    if ((v40 & 1) == 0 || v40 == 1 && !v39)
    {
      uint64_t v42 = 0;
      if (v41 && *((void *)v41 + 6))
      {
        sub_100056A60((atomic_uint **)&v42);
        uint64_t v11 = v4[3];
        size_t v12 = v4[2];
        if (v12 >= (void *)v11)
        {
          unint64_t v21 = v4[1];
          uint64_t v22 = v12 - v21;
          if ((unint64_t)(v22 + 1) >> 61) {
            sub_1000A9108();
          }
          unint64_t v23 = v11 - (unsigned char *)v21;
          unint64_t v24 = (v11 - (unsigned char *)v21) >> 2;
          if (v24 <= v22 + 1) {
            unint64_t v24 = v22 + 1;
          }
          if (v23 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v25 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v25 = v24;
          }
          v45 = v4 + 3;
          if (v25)
          {
            long long v26 = (char *)sub_1000AFC18((uint64_t)(v4 + 3), v25);
            unint64_t v21 = v4[1];
            size_t v12 = v4[2];
          }
          else
          {
            long long v26 = 0;
          }
          float v27 = &v26[8 * v22];
          float v28 = &v26[8 * v25];
          char v44 = v28;
          *(void *)float v27 = v41;
          uint64_t v41 = 0;
          *((void *)&v43 + 1) = v27 + 8;
          if (v12 == v21)
          {
            uint64_t v13 = v27 + 8;
          }
          else
          {
            do
            {
              uint64_t v29 = *--v12;
              *((void *)v27 - 1) = v29;
              v27 -= 8;
              *size_t v12 = 0;
            }
            while (v12 != v21);
            uint64_t v13 = (void *)*((void *)&v43 + 1);
            float v28 = v44;
          }
          long long v30 = *(_OWORD *)(v4 + 1);
          v4[1] = v27;
          v4[2] = v13;
          long long v43 = v30;
          BOOL v31 = (char *)v4[3];
          v4[3] = v28;
          char v44 = v31;
          uint64_t v42 = v30;
          sub_1000AFC50((uint64_t)&v42);
        }
        else
        {
          *size_t v12 = v41;
          uint64_t v13 = v12 + 1;
          uint64_t v41 = 0;
        }
        v4[2] = v13;
        unint64_t v20 = &v41;
LABEL_44:
        sub_100056A60(v20);
        return result;
      }
      sub_100056A60((atomic_uint **)&v42);
    }
    sub_100056A60(&v41);
    goto LABEL_27;
  }
  if ((unint64_t)qword_10047BFC8 >> 1 == 0x595588BD12BF6FE8
    || ((unsigned int (*)(uint64_t (***)(), uint64_t, __n128))boost::system::detail::generic_cat_holder<void>::instance[6])(&boost::system::detail::generic_cat_holder<void>::instance, 84, v7))
  {
    uint64_t v33 = 3;
  }
  else
  {
    uint64_t v33 = 2;
  }
  *(void *)&long long v39 = 84;
  *((void *)&v39 + 1) = &boost::system::detail::generic_cat_holder<void>::instance;
  uint64_t v40 = v33;
  char v14 = 2;
LABEL_28:
  if ((v40 & 1) == 0 || v40 == 1 && !v39)
  {
    uint64_t v16 = (atomic_uint **)v4[1];
    uint64_t v15 = (atomic_uint **)v4[2];
    while (1)
    {
      if (v16 == v15)
      {
        v37[0] = *a1;
        *a1 = 0;
        sub_1000AFCEC(v37);
        return result;
      }
      uint64_t v17 = v15 - 1;
      sub_1000551CC((dirent **)v15 - 1, (uint64_t)&v39);
      if ((v40 & 1) != 0 && (v40 != 1 || v39 != 0)) {
        goto LABEL_61;
      }
      v37[0] = 0;
      if (*v17)
      {
        if (*((void *)*v17 + 6)) {
          break;
        }
      }
      sub_100056A60((atomic_uint **)v37);
      uint64_t v15 = sub_100056A60((atomic_uint **)v4[2] - 1);
      v4[2] = v15;
      uint64_t v16 = (atomic_uint **)v4[1];
    }
    unint64_t v20 = (atomic_uint **)v37;
    goto LABEL_44;
  }
LABEL_61:
  if (((_BYTE)v4[4] & 8) == 0) {
    goto LABEL_71;
  }
  if ((v14 & 2) == 0
    || (v37[1] = 0,
        uint64_t v38 = 0,
        v37[0] = 0,
        BOOL v32 = (dirent **)((char *)v4[2] - 8),
        sub_1000551CC(v32, (uint64_t)v37),
        (v38 & 1) != 0)
    && (v38 != 1 || LODWORD(v37[0])))
  {
LABEL_70:
    sub_1000AEB44((uint64_t)v4);
    if (v4[1] != v4[2]) {
      goto LABEL_72;
    }
LABEL_71:
    v37[0] = *a1;
    *a1 = 0;
    sub_1000AFCEC(v37);
    goto LABEL_72;
  }
  uint64_t v41 = 0;
  if (!*v32 || !*(void *)&(*v32)->d_name[27])
  {
    sub_100056A60(&v41);
    goto LABEL_70;
  }
  sub_100056A60(&v41);
LABEL_72:
  if (!a2)
  {
    exception = __cxa_allocate_exception(0x30uLL);
    long long v35 = v39;
    uint64_t v36 = v40;
    boost::filesystem::filesystem_error::filesystem_error(exception, "filesystem::recursive_directory_iterator increment error", &v35);
  }
  double result = *(double *)&v39;
  *(_OWORD *)a2 = v39;
  a2[2] = v40;
  return result;
}

void sub_1000AF0B4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000AF0C8(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, uint64_t (***)());
  uint64_t v14 = va_arg(va1, void);
  sub_100056A60((atomic_uint **)va1);
  if (a2 == 2)
  {
    sub_1003A2FD8(a1, (uint64_t *)va);
    uint64_t v12 = 12;
    uint64_t v13 = &boost::system::detail::generic_cat_holder<void>::instance;
    uint64_t v14 = v8;
    __cxa_end_catch();
    JUMPOUT(0x1000AED70);
  }
  sub_1000A6954(a1);
}

const char *sub_1000AF124()
{
  return "generic";
}

void *sub_1000AF130@<X0>(int __errnum@<W1>, void *a2@<X8>)
{
  std::exception_ptr v3 = strerror(__errnum);
  if (v3) {
    unint64_t v4 = v3;
  }
  else {
    unint64_t v4 = "Unknown error";
  }

  return sub_1000AE4B0(a2, v4);
}

const char *sub_1000AF17C(int a1, int __errnum, char *a3, uint64_t a4)
{
  unint64_t v4 = a3;
  if (a4)
  {
    int v5 = a3;
    size_t v6 = a4 - 1;
    if (a4 != 1)
    {
      __n128 v7 = strerror(__errnum);
      if (!v7) {
        return "Unknown error";
      }
      strncpy(v4, v7, v6);
      int v5 = &v4[v6];
    }
    *int v5 = 0;
  }
  return v4;
}

uint64_t sub_1000AF1E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = a1[2];
  if (v4)
  {
    if (v4 == 1)
    {
      unint64_t v5 = sub_1000AF358(a1);
      uint64_t v7 = v6;
      v15[0] = v5;
      v15[1] = v6;
      uint64_t v13 = sub_1000AF480((unsigned int *)a2);
      uint64_t v14 = v8;
      if (((*(uint64_t (**)(uint64_t, unint64_t, uint64_t *))(*(void *)v7 + 32))(v7, v5, &v13) & 1) == 0) {
        return (*(uint64_t (**)(uint64_t, void *, void))(*(void *)v14 + 40))(v14, v15, v13);
      }
      return 1;
    }
    uint64_t v10 = (uint64_t (***)())a1[1];
  }
  else
  {
    uint64_t v10 = &boost::system::detail::system_cat_holder<void>::instance;
  }
  if (((uint64_t (*)(uint64_t (***)(), void, uint64_t))(*v10)[2])(v10, *(unsigned int *)a1, a2)) {
    return 1;
  }
  if (*(void *)(a2 + 8)) {
    uint64_t v11 = *(uint64_t (****)())(a2 + 8);
  }
  else {
    uint64_t v11 = &boost::system::detail::generic_cat_holder<void>::instance;
  }
  uint64_t v12 = (*v11)[3];

  return v12();
}

unint64_t sub_1000AF358(uint64_t *a1)
{
  uint64_t v1 = a1[2];
  if (v1)
  {
    if (v1 == 1)
    {
      uint64_t v2 = *a1;
      unint64_t v3 = *a1 & 0xFFFFFFFF00000000;
    }
    else
    {
      LODWORD(v2) = *(_DWORD *)a1;
      uint64_t v4 = a1[1];
      uint64_t v5 = *(void *)(v4 + 8);
      if (v5 == 0xB2AB117A257EDFD1)
      {
        std::system_category();
      }
      else if (v5 == 0xB2AB117A257EDFD0)
      {
        std::generic_category();
      }
      else if (!atomic_load_explicit((atomic_ullong *volatile)(v4 + 16), memory_order_acquire))
      {
        uint64_t v6 = operator new(0x10uLL);
        uint64_t v7 = 0;
        void *v6 = &off_100452498;
        v6[1] = v4;
        atomic_compare_exchange_strong((atomic_ullong *volatile)(v4 + 16), (unint64_t *)&v7, (unint64_t)v6);
        if (v7)
        {
          (*(void (**)(void *))(*v6 + 8))(v6);
          unint64_t v3 = 0;
          return v3 | v2;
        }
      }
      unint64_t v3 = 0;
    }
  }
  else
  {
    std::system_category();
    unint64_t v3 = 0;
    LODWORD(v2) = 0;
  }
  return v3 | v2;
}

uint64_t sub_1000AF480(unsigned int *a1)
{
  uint64_t v1 = *((void *)a1 + 1);
  uint64_t v2 = *a1;
  if (!v1) {
    goto LABEL_4;
  }
  uint64_t v3 = *(void *)(v1 + 8);
  if (v3 == 0xB2AB117A257EDFD1)
  {
    std::system_category();
    return v2;
  }
  if (v3 != 0xB2AB117A257EDFD0)
  {
    if (!atomic_load_explicit((atomic_ullong *volatile)(v1 + 16), memory_order_acquire))
    {
      uint64_t v5 = operator new(0x10uLL);
      uint64_t v6 = 0;
      *uint64_t v5 = &off_100452498;
      v5[1] = v1;
      atomic_compare_exchange_strong((atomic_ullong *volatile)(v1 + 16), (unint64_t *)&v6, (unint64_t)v5);
      if (v6) {
        (*(void (**)(void *))(*v5 + 8))(v5);
      }
    }
  }
  else
  {
LABEL_4:
    std::generic_category();
  }
  return v2;
}

void sub_1000AF570(std::error_category *a1)
{
  std::error_category::~error_category(a1);

  operator delete(v1);
}

uint64_t sub_1000AF598(uint64_t a1)
{
  return (***(uint64_t (****)(void))(a1 + 8))(*(void *)(a1 + 8));
}

uint64_t sub_1000AF5C0(uint64_t a1)
{
  v3[0] = (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 8))(*(void *)(a1 + 8));
  v3[1] = v1;
  return sub_1000AF480((unsigned int *)v3);
}

uint64_t sub_1000AF614(std::error_category *a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (const std::error_category *)*((void *)a3 + 1);
  if (v6 == a1)
  {
    uint64_t v9 = (uint64_t (***)())a1[1].__vftable;
    int v17 = *a3;
    uint64_t v18 = v9;
    return ((uint64_t (*)(uint64_t (***)(), uint64_t, int *))(*v9)[2])(v9, a2, &v17);
  }
  if (v6 == std::generic_category()) {
    goto LABEL_14;
  }
  uint64_t v7 = (void *)*((void *)a3 + 1);
  if (qword_10047BFC8 == 0xB2AB117A257EDFD1)
  {
    explicit = std::system_category();
  }
  else if (qword_10047BFC8 == 0xB2AB117A257EDFD0)
  {
    explicit = std::generic_category();
  }
  else
  {
    explicit = (void *)atomic_load_explicit(&qword_10047BFD0, memory_order_acquire);
    if (!explicit)
    {
      explicit = operator new(0x10uLL);
      uint64_t v10 = 0;
      void *explicit = &off_100452498;
      explicit[1] = &boost::system::detail::generic_cat_holder<void>::instance;
      atomic_compare_exchange_strong(&qword_10047BFD0, (unint64_t *)&v10, (unint64_t)explicit);
      if (v10)
      {
        (*(void (**)(void *))(*explicit + 8))(explicit);
        explicit = v10;
      }
    }
  }
  if (v7 == explicit)
  {
LABEL_14:
    int v17 = *a3;
    uint64_t v18 = &boost::system::detail::generic_cat_holder<void>::instance;
    goto LABEL_15;
  }
  if (v11)
  {
    uint64_t v12 = (uint64_t (***)())v11[1];
    int v17 = *a3;
    uint64_t v18 = v12;
LABEL_15:
    uint64_t v9 = (uint64_t (***)())a1[1].__vftable;
    return ((uint64_t (*)(uint64_t (***)(), uint64_t, int *))(*v9)[2])(v9, a2, &v17);
  }
  int v14 = ((uint64_t (*)(std::error_category *, uint64_t))a1->default_error_condition)(a1, a2);
  return *((void *)a3 + 1) == v15 && *a3 == v14;
}

uint64_t sub_1000AF824(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v6 = (const std::error_category *)*((void *)a2 + 1);
  if (v6 == (const std::error_category *)a1)
  {
    uint64_t v9 = *a2;
    uint64_t v10 = *(uint64_t (****)())(a1 + 8);
    uint64_t v29 = 0;
    if ((unint64_t)v10[1] >> 1 == 0x595588BD12BF6FE8)
    {
      int v11 = v9 != 0;
      uint64_t v12 = v10;
    }
    else
    {
      int v11 = ((uint64_t (*)(uint64_t (***)(), uint64_t))(*v10)[6])(v10, v9);
      uint64_t v12 = *(uint64_t (****)())(a1 + 8);
    }
    BOOL v13 = v11 == 0;
    uint64_t v14 = 2;
    if (!v13) {
      uint64_t v14 = 3;
    }
    LODWORD(v29) = v9;
    long long v30 = v10;
    uint64_t v31 = v14;
    return ((uint64_t (*)(uint64_t (***)(), uint64_t *, uint64_t))(*v12)[3])(v12, &v29, a3);
  }
  if (v6 == std::generic_category()) {
    goto LABEL_20;
  }
  uint64_t v7 = (void *)*((void *)a2 + 1);
  if (qword_10047BFC8 == 0xB2AB117A257EDFD1)
  {
    explicit = std::system_category();
  }
  else if (qword_10047BFC8 == 0xB2AB117A257EDFD0)
  {
    explicit = std::generic_category();
  }
  else
  {
    explicit = (void *)atomic_load_explicit(&qword_10047BFD0, memory_order_acquire);
    if (!explicit)
    {
      explicit = operator new(0x10uLL);
      uint64_t v15 = 0;
      void *explicit = &off_100452498;
      explicit[1] = &boost::system::detail::generic_cat_holder<void>::instance;
      atomic_compare_exchange_strong(&qword_10047BFD0, (unint64_t *)&v15, (unint64_t)explicit);
      if (v15)
      {
        (*(void (**)(void *))(*explicit + 8))(explicit);
        explicit = v15;
      }
    }
  }
  if (v7 == explicit)
  {
LABEL_20:
    uint64_t v20 = *a2;
    uint64_t v29 = 0;
    if ((unint64_t)qword_10047BFC8 >> 1 == 0x595588BD12BF6FE8) {
      int v21 = v20 != 0;
    }
    else {
      int v21 = ((uint64_t (*)(uint64_t (***)(), uint64_t))boost::system::detail::generic_cat_holder<void>::instance[6])(&boost::system::detail::generic_cat_holder<void>::instance, v20);
    }
    uint64_t v22 = 2;
    if (v21) {
      uint64_t v22 = 3;
    }
    LODWORD(v29) = v20;
    long long v30 = &boost::system::detail::generic_cat_holder<void>::instance;
    uint64_t v31 = v22;
    goto LABEL_36;
  }
  if (v16)
  {
    uint64_t v17 = *a2;
    uint64_t v18 = (uint64_t (***)())v16[1];
    uint64_t v29 = 0;
    if ((unint64_t)v18[1] >> 1 == 0x595588BD12BF6FE8) {
      int v19 = v17 != 0;
    }
    else {
      int v19 = ((uint64_t (*)(uint64_t (***)(), uint64_t))(*v18)[6])(v18, v17);
    }
    uint64_t v28 = 2;
    if (v19) {
      uint64_t v28 = 3;
    }
    LODWORD(v29) = v17;
    long long v30 = v18;
    uint64_t v31 = v28;
LABEL_36:
    uint64_t v12 = *(uint64_t (****)())(a1 + 8);
    return ((uint64_t (*)(uint64_t (***)(), uint64_t *, uint64_t))(*v12)[3])(v12, &v29, a3);
  }
  unint64_t v23 = *(uint64_t (****)())(a1 + 8);
  BOOL v24 = v23 == &boost::system::detail::generic_cat_holder<void>::instance;
  BOOL v25 = v23[1] == (uint64_t (**)())qword_10047BFC8;
  if (!qword_10047BFC8) {
    BOOL v25 = v24;
  }
  if (!v25) {
    return 0;
  }
  equivalent_0 = (uint64_t (*)(void))std::generic_category()->equivalent_0;

  return equivalent_0();
}

uint64_t sub_1000AFBB0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 32))();
}

uint64_t sub_1000AFBD8()
{
  *__error() = 0;
  uint64_t v0 = pathconf("/", 5);
  if ((unint64_t)v0 <= 0x400) {
    uint64_t v1 = 1024;
  }
  else {
    uint64_t v1 = v0;
  }
  if (v0 >= 0) {
    return v1;
  }
  else {
    return 1024;
  }
}

void *sub_1000AFC18(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_1000A6A10();
  }
  return operator new(8 * a2);
}

uint64_t sub_1000AFC50(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 8;
    sub_100056A60((atomic_uint **)(i - 8));
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_1000AFCA0(uint64_t a1)
{
  sub_10005623C((DIR **)(a1 + 48), (void **)(a1 + 56), v3);
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void ***sub_1000AFCEC(void ***a1)
{
  uint64_t v2 = *a1;
  if (*a1 && atomic_fetch_add((atomic_uint *volatile)v2, 0xFFFFFFFF) == 1)
  {
    uint64_t v4 = v2 + 1;
    sub_1000AFD48(&v4);
    operator delete(v2);
  }
  return a1;
}

void sub_1000AFD48(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (atomic_uint **)**a1;
  if (v2)
  {
    uint64_t v4 = (atomic_uint **)v1[1];
    uint64_t v5 = v2;
    if (v4 != v2)
    {
      do
        uint64_t v4 = sub_100056A60(v4 - 1);
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *sub_1000AFDE8@<X0>(char *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = a1;
  if (a1[23] < 0) {
    uint64_t v3 = *(char **)a1;
  }
  unint64_t v4 = sub_1000B29B4(a1);

  return sub_10003FCE8(a2, v3, &v3[v4], v4);
}

void *sub_1000AFE3C@<X0>(unsigned char *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1;
  unint64_t v4 = sub_1000521C4(a1);
  if ((char)v2[23] < 0) {
    uint64_t v2 = *(unsigned char **)v2;
  }

  return sub_10003FCE8(a2, &v2[v4], &v2[v4 + v5], v5);
}

void *sub_1000AFE90@<X0>(unsigned char *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1;
  unint64_t v4 = sub_10003FD90(a1);
  if ((char)v2[23] < 0) {
    uint64_t v2 = *(unsigned char **)v2;
  }

  return sub_10003FCE8(a2, &v2[v4], &v2[v4 + v5], v5);
}

void sub_1000AFEE4(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unint64_t a4@<X8>)
{
  if (a3)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  if (*(char *)(a1 + 23) < 0) {
    sub_1000559FC(&__dst, *(void **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __dst = *(std::string *)a1;
  }
  sub_1000521C4((unsigned char *)a1);
  if (!v8)
  {
    sub_100051DE0(a1, a2, a3, (uint64_t)&v32);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
    std::string __dst = v32;
    if (a3)
    {
      uint64_t v24 = a3[2];
      if ((v24 & 1) != 0 && (v24 != 1 || *(_DWORD *)a3))
      {
LABEL_107:
        *(void *)a4 = 0;
        *(void *)(a4 + 8) = 0;
        *(void *)(a4 + 16) = 0;
        goto LABEL_108;
      }
    }
  }
  long long v39 = 0uLL;
  uint64_t v40 = 0;
  sub_100056B28((const char *)&__dst, (uint64_t)&v39, &v38);
  if (v38 == 1)
  {
    if ((unint64_t)qword_10047BFC8 >> 1 == 0x595588BD12BF6FE8
      || (uint64_t v9 = 2,
          ((unsigned int (*)(uint64_t (***)(), uint64_t))boost::system::detail::generic_cat_holder<void>::instance[6])(&boost::system::detail::generic_cat_holder<void>::instance, 2)))
    {
      uint64_t v9 = 3;
    }
    *(void *)&long long v39 = 2;
    *((void *)&v39 + 1) = &boost::system::detail::generic_cat_holder<void>::instance;
    uint64_t v40 = v9;
    goto LABEL_105;
  }
  if ((v40 & 1) != 0 && (v40 != 1 || v39)) {
    goto LABEL_105;
  }
  sub_1000B0600((char *)&__dst, &__p);
  uint64_t v10 = sub_10009F58C();
  int v11 = sub_10009F680();
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  int v12 = 40;
  while (2)
  {
    sub_10004014C((unint64_t)&__dst, &v32);
    sub_10009BB18((uint64_t)&__dst, &v28);
    while (1)
    {
      if (v33 == v30 && v34 == v31)
      {
        int v21 = 6;
        goto LABEL_77;
      }
      if (!sub_10003FB24((unint64_t)&v32, (unint64_t)v10)) {
        goto LABEL_75;
      }
      if (!sub_10003FB24((unint64_t)&v32, (unint64_t)v11))
      {
        if (sub_10003FB24(a4, (unint64_t)&__p)) {
          sub_100055820((std::string *)a4);
        }
        goto LABEL_75;
      }
      if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
      {
        if (v32.__r_.__value_.__l.__size_ != 1) {
          goto LABEL_32;
        }
        uint64_t v14 = (std::string *)v32.__r_.__value_.__r.__words[0];
      }
      else
      {
        if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) != 1) {
          goto LABEL_32;
        }
        uint64_t v14 = &v32;
      }
      if (v14->__r_.__value_.__s.__data_[0] == 47)
      {
        std::string::push_back((std::string *)a4, 47);
        goto LABEL_75;
      }
LABEL_32:
      sub_100055F74(a4, &v32);
      sub_1000521C4((unsigned char *)a4);
      if (v15)
      {
        sub_1000B0654((const char *)a4, (uint64_t)a3, (int *)&__str);
        if (a3)
        {
          uint64_t v16 = a3[2];
          if ((v16 & 1) != 0 && (v16 != 1 || *(_DWORD *)a3))
          {
            int v21 = 2;
            goto LABEL_77;
          }
        }
        if (LODWORD(__str.__r_.__value_.__l.__data_) == 4) {
          break;
        }
      }
LABEL_75:
      sub_10009F68C(&v32);
    }
    if (v12)
    {
      sub_1000B08FC(a4, a3, &__str);
      if (a3)
      {
        uint64_t v17 = a3[2];
        if ((v17 & 1) != 0 && (v17 != 1 || *(_DWORD *)a3))
        {
          char v20 = 0;
          int v21 = 2;
          goto LABEL_72;
        }
      }
      sub_100055820((std::string *)a4);
      sub_1000521C4(&__str);
      if (v18)
      {
        while (1)
        {
          sub_10009F68C(&v32);
          if (v33 == v30 && v34 == v31) {
            break;
          }
          if (sub_10003FB24((unint64_t)&v32, (unint64_t)v10)) {
            sub_100055F74((uint64_t)&__str, &v32);
          }
        }
        std::string::operator=(&__dst, &__str);
        sub_1000B0600((char *)&__dst, &v26);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        char v20 = 0;
        std::string __p = v26;
        goto LABEL_71;
      }
      sub_1000B2924(&__str);
      if (sub_10003FB24((unint64_t)&__str, (unint64_t)v10))
      {
        if (*(char *)(a4 + 23) < 0) {
          sub_1000559FC(&v26, *(void **)a4, *(void *)(a4 + 8));
        }
        else {
          std::string v26 = *(std::string *)a4;
        }
        sub_100055F74((uint64_t)&v26, &__str);
        sub_10009F68C(&v32);
        while (v33 != v30 || v34 != v31)
        {
          if (sub_10003FB24((unint64_t)&v32, (unint64_t)v10)) {
            sub_100055F74((uint64_t)&v26, &v32);
          }
          sub_10009F68C(&v32);
        }
        std::string::operator=(&__dst, &v26);
        if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v26.__r_.__value_.__l.__data_);
        }
        char v20 = 0;
LABEL_71:
        int v21 = 15;
      }
      else
      {
        int v21 = 8;
        char v20 = 1;
      }
LABEL_72:
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      --v12;
      if ((v20 & 1) == 0) {
        goto LABEL_77;
      }
      goto LABEL_75;
    }
    if ((qword_10047BFC8 & 0xFFFFFFFFFFFFFFFELL) == 0xB2AB117A257EDFD0
      || ((unsigned int (*)(uint64_t (***)(), uint64_t))boost::system::detail::generic_cat_holder<void>::instance[6])(&boost::system::detail::generic_cat_holder<void>::instance, 62))
    {
      uint64_t v23 = 3;
    }
    else
    {
      uint64_t v23 = 2;
    }
    int v12 = 0;
    *(void *)&long long v39 = 62;
    *((void *)&v39 + 1) = &boost::system::detail::generic_cat_holder<void>::instance;
    int v21 = 3;
    uint64_t v40 = v23;
LABEL_77:
    if (v29 < 0) {
      operator delete(v28);
    }
    if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v32.__r_.__value_.__l.__data_);
    }
    if (v21 == 15)
    {
      if (*(char *)(a4 + 23) < 0)
      {
        **(unsigned char **)a4 = 0;
        *(void *)(a4 + 8) = 0;
      }
      else
      {
        *(unsigned char *)a4 = 0;
        *(unsigned char *)(a4 + 23) = 0;
      }
      continue;
    }
    break;
  }
  if (v21 == 6)
  {
    int v21 = 1;
  }
  else if (*(char *)(a4 + 23) < 0)
  {
    operator delete(*(void **)a4);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v21 == 3)
  {
LABEL_105:
    if (!a3)
    {
      exception = __cxa_allocate_exception(0x30uLL);
      long long v36 = v39;
      uint64_t v37 = v40;
      boost::filesystem::filesystem_error::filesystem_error(exception, "boost::filesystem::canonical", &__dst, &v36);
    }
    *(_OWORD *)a3 = v39;
    a3[2] = v40;
    goto LABEL_107;
  }
  if (v21 == 2) {
    goto LABEL_107;
  }
LABEL_108:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
}

void sub_1000B04EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (a42 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v42 - 105) < 0) {
    operator delete(*(void **)(v42 - 128));
  }
  _Unwind_Resume(exception_object);
}

void *sub_1000B0600@<X0>(char *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = a1;
  if (a1[23] < 0) {
    uint64_t v3 = *(char **)a1;
  }
  unint64_t v4 = sub_1000B29F4(a1);

  return sub_10003FCE8(a2, v3, &v3[v4], v4);
}

int *sub_1000B0654@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, int *a3@<X8>)
{
  unint64_t v4 = a1;
  if (a2)
  {
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(void *)(a2 + 16) = 0;
  }
  if (a1[23] < 0) {
    a1 = *(const char **)a1;
  }
  double result = (int *)lstat(a1, &v17);
  if (result)
  {
    double result = __error();
    uint64_t v7 = *result;
    if (a2)
    {
      if ((unint64_t)qword_10047BF98 >> 1 == 0x595588BD12BF6FE8) {
        double result = (int *)(v7 != 0);
      }
      else {
        double result = (int *)((uint64_t (*)(uint64_t (***)(), uint64_t))boost::system::detail::system_cat_holder<void>::instance[6])(&boost::system::detail::system_cat_holder<void>::instance, v7);
      }
      uint64_t v11 = 2;
      if (result) {
        uint64_t v11 = 3;
      }
      *(_DWORD *)a2 = v7;
      *(_DWORD *)(a2 + 4) = 0;
      *(void *)(a2 + 8) = &boost::system::detail::system_cat_holder<void>::instance;
      *(void *)(a2 + 16) = v11;
      if (v7 == 20) {
        int v12 = 0;
      }
      else {
        int v12 = 0xFFFF;
      }
      int v9 = v7 == 2 || v7 == 20;
      if (v7 == 2) {
        int v8 = 0;
      }
      else {
        int v8 = v12;
      }
    }
    else
    {
      if (v7 != 2 && v7 != 20)
      {
        exception = __cxa_allocate_exception(0x30uLL);
        v16[0] = 0;
        if ((unint64_t)qword_10047BF98 >> 1 == 0x595588BD12BF6FE8) {
          int v14 = v7 != 0;
        }
        else {
          int v14 = ((uint64_t (*)(uint64_t (***)(), uint64_t))boost::system::detail::system_cat_holder<void>::instance[6])(&boost::system::detail::system_cat_holder<void>::instance, v7);
        }
        uint64_t v15 = 2;
        LODWORD(v16[0]) = v7;
        if (v14) {
          uint64_t v15 = 3;
        }
        v16[1] = &boost::system::detail::system_cat_holder<void>::instance;
        v16[2] = v15;
        boost::filesystem::filesystem_error::filesystem_error(exception, "boost::filesystem::symlink_status", v4, v16);
      }
      int v8 = 0;
      int v9 = 1;
    }
  }
  else
  {
    int v8 = 0xFFFF;
    int v9 = 10;
    switch(((v17.st_mode & 0xF000u) - 4096) >> 12)
    {
      case 0u:
        int v8 = v17.st_mode & 0xFFF;
        int v9 = 7;
        break;
      case 1u:
        int v8 = v17.st_mode & 0xFFF;
        int v9 = 6;
        break;
      case 3u:
        int v8 = v17.st_mode & 0xFFF;
        int v9 = 3;
        break;
      case 5u:
        int v8 = v17.st_mode & 0xFFF;
        int v9 = 5;
        break;
      case 7u:
        int v8 = v17.st_mode & 0xFFF;
        int v9 = 2;
        break;
      case 9u:
        int v8 = v17.st_mode & 0xFFF;
        int v9 = 4;
        break;
      case 0xBu:
        int v8 = v17.st_mode & 0xFFF;
        int v9 = 8;
        break;
      default:
        break;
    }
  }
  *a3 = v9;
  a3[1] = v8;
  return result;
}

void sub_1000B08B8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000B08FC(uint64_t a1@<X0>, void *a2@<X1>, std::string *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  if (*(char *)(a1 + 23) >= 0) {
    uint64_t v6 = (const char *)a1;
  }
  else {
    uint64_t v6 = *(const char **)a1;
  }
  std::string::size_type v7 = readlink(v6, v21, 0x400uLL);
  if ((v7 & 0x8000000000000000) != 0)
  {
LABEL_24:
    uint64_t v13 = *__error();
    if (!a2)
    {
      exception = __cxa_allocate_exception(0x30uLL);
      v20[0] = 0;
      if ((unint64_t)qword_10047BF98 >> 1 == 0x595588BD12BF6FE8) {
        int v15 = v13 != 0;
      }
      else {
        int v15 = ((uint64_t (*)(uint64_t (***)(), uint64_t))boost::system::detail::system_cat_holder<void>::instance[6])(&boost::system::detail::system_cat_holder<void>::instance, v13);
      }
      uint64_t v16 = 2;
      LODWORD(v20[0]) = v13;
      if (v15) {
        uint64_t v16 = 3;
      }
      v20[1] = &boost::system::detail::system_cat_holder<void>::instance;
      v20[2] = v16;
      boost::filesystem::filesystem_error::filesystem_error(exception, "boost::filesystem::read_symlink", a1, v20);
    }
    sub_1000B1D98((uint64_t)a2, v13, &boost::system::detail::system_cat_holder<void>::instance);
  }
  else if (v7 >= 0x400)
  {
    for (size_t i = 2048; ; i *= 2)
    {
      int v9 = (char *)operator new[](i);
      std::string::size_type v10 = readlink(v6, v9, i);
      if ((v10 & 0x8000000000000000) != 0)
      {
        operator delete[](v9);
        goto LABEL_24;
      }
      if (v10 < i) {
        break;
      }
      operator delete[](v9);
      if (i > 0x4000)
      {
        if (!a2)
        {
          stat v17 = __cxa_allocate_exception(0x30uLL);
          v19[0] = 0;
          if ((qword_10047BF98 & 0xFFFFFFFFFFFFFFFELL) == 0xB2AB117A257EDFD0
            || ((unsigned int (*)(uint64_t (***)(), uint64_t))boost::system::detail::system_cat_holder<void>::instance[6])(&boost::system::detail::system_cat_holder<void>::instance, 63))
          {
            uint64_t v18 = 3;
          }
          else
          {
            uint64_t v18 = 2;
          }
          LODWORD(v19[0]) = 63;
          v19[1] = &boost::system::detail::system_cat_holder<void>::instance;
          v19[2] = v18;
          boost::filesystem::filesystem_error::filesystem_error(v17, "boost::filesystem::read_symlink", a1, v19);
        }
        if ((qword_10047BF98 & 0xFFFFFFFFFFFFFFFELL) == 0xB2AB117A257EDFD0
          || ((unsigned int (*)(uint64_t (***)(), uint64_t))boost::system::detail::system_cat_holder<void>::instance[6])(&boost::system::detail::system_cat_holder<void>::instance, 63))
        {
          uint64_t v12 = 3;
        }
        else
        {
          uint64_t v12 = 2;
        }
        *a2 = 63;
        a2[1] = &boost::system::detail::system_cat_holder<void>::instance;
        a2[2] = v12;
        return;
      }
    }
    sub_100055EA4(a3, v9, &v9[v10], v10);
    if (a2)
    {
      *a2 = 0;
      a2[1] = 0;
      a2[2] = 0;
    }
    operator delete[](v9);
  }
  else
  {
    sub_100055EA4(a3, v21, &v21[v7], v7);
    if (a2)
    {
      *a2 = 0;
      a2[1] = 0;
      a2[2] = 0;
    }
  }
}

void sub_1000B0CC0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000B0D0C(const char *a1, uint64_t a2, int a3, void *a4)
{
  std::string::size_type v7 = (std::string *)a1;
  if ((a3 & 0x1600) != 0) {
    sub_1000B0654(a1, (uint64_t)a4, (int *)&v35);
  }
  else {
    sub_100056B28(a1, (uint64_t)a4, (int *)&v35);
  }
  if (a4)
  {
    uint64_t v8 = a4[2];
    if ((v8 & 1) != 0 && (v8 != 1 || *(_DWORD *)a4)) {
      return;
    }
  }
  if (LODWORD(v35.__r_.__value_.__l.__data_) <= 1)
  {
    uint64_t v9 = 2;
    goto LABEL_14;
  }
  if (LODWORD(v35.__r_.__value_.__l.__data_) == 2)
  {
    if ((a3 & 0x800) != 0) {
      return;
    }
    if ((a3 & 0x1000) != 0)
    {
      memset(&v35, 0, sizeof(v35));
      sub_1000521C4(v7);
      if (v11) {
        goto LABEL_35;
      }
      sub_100052228(a4, &__dst);
      if (a4 && (uint64_t v20 = a4[2], (v20 & 1) != 0) && (v20 != 1 || *(_DWORD *)a4))
      {
        int v25 = 1;
      }
      else
      {
        sub_1000AE794((char *)v7, &v32);
        sub_100051DE0((uint64_t)&v32, (uint64_t)&__dst, a4, (uint64_t)&__p);
        if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v32.__r_.__value_.__l.__data_);
        }
        if (a4 && (uint64_t v21 = a4[2], (v21 & 1) != 0) && (v21 != 1 || *(_DWORD *)a4))
        {
          int v25 = 1;
        }
        else
        {
          sub_1000AE794((char *)a2, &v32);
          sub_1000521C4(&v32);
          if (!v22)
          {
            sub_100051DE0((uint64_t)&v32, (uint64_t)&__dst, a4, (uint64_t)&v31);
            if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v32.__r_.__value_.__l.__data_);
            }
            std::string v32 = v31;
            if (a4)
            {
              uint64_t v27 = a4[2];
              if ((v27 & 1) != 0 && (v27 != 1 || *(_DWORD *)a4)) {
                goto LABEL_123;
              }
            }
          }
          sub_1000B1658(&__p, &v32, a4, &v31);
          if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v35.__r_.__value_.__l.__data_);
          }
          std::string v35 = v31;
          if (a4 && (uint64_t v23 = a4[2], (v23 & 1) != 0) && (v23 != 1 || *(_DWORD *)a4))
          {
LABEL_123:
            int v25 = 1;
          }
          else
          {
            uint64_t v24 = sub_10009F58C();
            if (sub_10003FB24((unint64_t)&v35, (unint64_t)v24))
            {
              sub_10003FE4C(v7, &v31);
              sub_100055F74((uint64_t)&v35, &v31);
              if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v31.__r_.__value_.__l.__data_);
              }
              int v25 = 0;
            }
            else
            {
              sub_10003FE4C(v7, &v31);
              if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v35.__r_.__value_.__l.__data_);
              }
              int v25 = 0;
              std::string v35 = v31;
            }
            std::string::size_type v7 = &v35;
          }
          if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v32.__r_.__value_.__l.__data_);
          }
        }
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
      if (!v25) {
LABEL_35:
      }
        sub_1000B1898((uint64_t)v7, a2, a4);
      if ((SHIBYTE(v35.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
      std::string v26 = (void *)v35.__r_.__value_.__r.__words[0];
    }
    else
    {
      if ((a3 & 0x2000) != 0)
      {
        sub_1000B1938((uint64_t)v7, a2, a4);
        return;
      }
      memset(&v35, 0, sizeof(v35));
      if ((a3 & 0x1400) != 0) {
        sub_1000B0654((const char *)a2, (uint64_t)&v35, (int *)&__dst);
      }
      else {
        sub_100056B28((const char *)a2, (uint64_t)&v35, (int *)&__dst);
      }
      if (LODWORD(__dst.__r_.__value_.__l.__data_) != 3)
      {
        if (LODWORD(__dst.__r_.__value_.__l.__data_))
        {
          sub_1000B19DC((uint64_t)v7, a2, a3, a4);
          return;
        }
        if (a4) {
          goto LABEL_75;
        }
        exception = __cxa_allocate_exception(0x30uLL);
        std::string v30 = v35;
        boost::filesystem::filesystem_error::filesystem_error(exception, "boost::filesystem::copy", v7, a2, &v30);
        goto LABEL_139;
      }
      sub_10003FE4C(v7, &__p);
      sub_1000B1CF0(a2, &__p, (uint64_t)&__dst);
      sub_1000B19DC((uint64_t)v7, (uint64_t)&__dst, a3, a4);
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return;
      }
      std::string v26 = (void *)__p.__r_.__value_.__r.__words[0];
    }
    operator delete(v26);
    return;
  }
  if (LODWORD(v35.__r_.__value_.__l.__data_) == 3)
  {
    memset(&v35, 0, sizeof(v35));
    if ((a3 & 0x1000) == 0)
    {
      if ((a3 & 0x1400) != 0) {
        sub_1000B0654((const char *)a2, (uint64_t)&v35, (int *)&__dst);
      }
      else {
        sub_100056B28((const char *)a2, (uint64_t)&v35, (int *)&__dst);
      }
      if (LODWORD(__dst.__r_.__value_.__l.__data_) == 1)
      {
        sub_1000099F0(a2, (uint64_t)v7, a4);
        if (a4)
        {
          uint64_t v13 = a4[2];
          if ((v13 & 1) != 0 && (v13 != 1 || *(_DWORD *)a4)) {
            return;
          }
        }
      }
      else if (!LODWORD(__dst.__r_.__value_.__l.__data_))
      {
        if (!a4)
        {
          exception = __cxa_allocate_exception(0x30uLL);
          std::string v28 = v35;
          boost::filesystem::filesystem_error::filesystem_error(exception, "boost::filesystem::copy", v7, a2, &v28);
          goto LABEL_139;
        }
LABEL_75:
        *(std::string *)a4 = v35;
        return;
      }
      if (!a3 || (a3 & 0x100) != 0)
      {
        v32.__r_.__value_.__r.__words[0] = 0;
        sub_100056568((dirent **)&v32, (uint64_t)v7, 0, a4);
        if (!a4 || (uint64_t v14 = a4[2], (v14 & 1) == 0) || v14 == 1 && !*(_DWORD *)a4)
        {
          v31.__r_.__value_.__r.__words[0] = 0;
          std::string::size_type v15 = v32.__r_.__value_.__r.__words[0];
          if (v32.__r_.__value_.__r.__words[0])
          {
            uint64_t v16 = a3 | 0x4000u;
            do
            {
              if (!v15 || !*(void *)(v15 + 48)) {
                break;
              }
              std::string::size_type v17 = v15 + 8;
              sub_10003FE4C((unsigned char *)(v15 + 8), &__p);
              if (*(char *)(a2 + 23) < 0) {
                sub_1000559FC(&__dst, *(void **)a2, *(void *)(a2 + 8));
              }
              else {
                std::string __dst = *(std::string *)a2;
              }
              sub_100055F74((uint64_t)&__dst, &__p);
              sub_1000B0D0C(v17, &__dst, v16, a4);
              if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__dst.__r_.__value_.__l.__data_);
              }
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__p.__r_.__value_.__l.__data_);
              }
              if (a4)
              {
                uint64_t v18 = a4[2];
                if ((v18 & 1) != 0 && (v18 != 1 || *(_DWORD *)a4)) {
                  break;
                }
              }
              sub_1000551CC((dirent **)&v32, (uint64_t)a4);
              if (a4)
              {
                uint64_t v19 = a4[2];
                if ((v19 & 1) != 0 && (v19 != 1 || *(_DWORD *)a4)) {
                  break;
                }
              }
              std::string::size_type v15 = v32.__r_.__value_.__r.__words[0];
            }
            while (v32.__r_.__value_.__r.__words[0] != v31.__r_.__value_.__r.__words[0]);
          }
          sub_100056A60((atomic_uint **)&v31);
        }
        sub_100056A60((atomic_uint **)&v32);
      }
      return;
    }
    if ((unint64_t)qword_10047BFC8 >> 1 == 0x595588BD12BF6FE8
      || ((unsigned int (*)(uint64_t (***)(), uint64_t))boost::system::detail::generic_cat_holder<void>::instance[6])(&boost::system::detail::generic_cat_holder<void>::instance, 21))
    {
      std::string::size_type v10 = 3;
    }
    else
    {
      std::string::size_type v10 = 2;
    }
    v35.__r_.__value_.__r.__words[0] = 21;
    v35.__r_.__value_.__l.__size_ = (std::string::size_type)&boost::system::detail::generic_cat_holder<void>::instance;
    v35.__r_.__value_.__r.__words[2] = v10;
    if (a4) {
      goto LABEL_75;
    }
    exception = __cxa_allocate_exception(0x30uLL);
    std::string v29 = v35;
    boost::filesystem::filesystem_error::filesystem_error(exception, "boost::filesystem::copy", v7, a2, &v29);
LABEL_139:
  }
  if (LODWORD(v35.__r_.__value_.__l.__data_) != 4) {
    goto LABEL_12;
  }
  if ((a3 & 0x400) != 0) {
    return;
  }
  if ((a3 & 0x200) == 0)
  {
LABEL_12:
    uint64_t v9 = 78;
LABEL_14:
    sub_1000ADD4C(v9, (uint64_t)v7, a2, (uint64_t)a4, (uint64_t)"boost::filesystem::copy");
    return;
  }

  sub_1000B15C4((uint64_t)v7, a2, a4);
}

void sub_1000B1484(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a31 < 0) {
    operator delete(__p);
  }
  if (a37 < 0) {
    operator delete(a32);
  }
  if (*(char *)(v37 - 89) < 0) {
    operator delete(*(void **)(v37 - 112));
  }
  if (*(char *)(v37 - 57) < 0) {
    operator delete(*(void **)(v37 - 80));
  }
  _Unwind_Resume(exception_object);
}

void sub_1000B15C4(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1000B08FC(a1, a3, &__p);
  if (!a3 || (uint64_t v5 = a3[2], (v5 & 1) == 0) || v5 == 1 && !*(_DWORD *)a3) {
    sub_1000B1898((uint64_t)&__p, a2, a3);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1000B163C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000B1658(unsigned char *a1@<X0>, unsigned char *a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  if (a3)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  long long v17 = 0uLL;
  uint64_t v18 = 0;
  memset(&__p, 0, sizeof(__p));
  sub_1000521C4(a1);
  if (!v8 || (sub_1000521C4(a2), !v9))
  {
    sub_100052228(&v17, &v15);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    std::string __p = v15;
    if ((v18 & 1) != 0 && (v18 != 1 || v17)) {
      goto LABEL_22;
    }
  }
  sub_1000B1F34((uint64_t)a2, (uint64_t)&__p, (uint64_t)&v17, &v15);
  if ((v18 & 1) == 0 || (int v10 = 2, v18 == 1) && !v17)
  {
    sub_1000B1F34((uint64_t)a1, (uint64_t)&__p, (uint64_t)&v17, &v12);
    if ((v18 & 1) == 0 || (int v10 = 2, v18 == 1) && !v17)
    {
      sub_1000B2C04((unint64_t)&v12, (unint64_t)&v15, (uint64_t)a4);
      int v10 = 1;
    }
    if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v12.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  if (v10 == 2)
  {
LABEL_22:
    if (!a3)
    {
      exception = __cxa_allocate_exception(0x30uLL);
      long long v13 = v17;
      uint64_t v14 = v18;
      boost::filesystem::filesystem_error::filesystem_error(exception, "boost::filesystem::relative", a1, a2, &v13);
    }
    *(_OWORD *)a3 = v17;
    a3[2] = v18;
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1000B1834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  __cxa_free_exception(v30);
  if (a30 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1000B1898(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  if (a3)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  if (*(char *)(a1 + 23) < 0) {
    a1 = *(void *)a1;
  }
  if (*(char *)(a2 + 23) < 0) {
    a2 = *(void *)a2;
  }
  uint64_t result = symlink((const char *)a1, (const char *)a2);
  if ((result & 0x80000000) != 0)
  {
    uint64_t v7 = *__error();
    return sub_1000ADD4C(v7, v5, v4, (uint64_t)a3, (uint64_t)"boost::filesystem::create_symlink");
  }
  return result;
}

uint64_t sub_1000B1938(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  if (*(char *)(a1 + 23) < 0) {
    a1 = *(void *)a1;
  }
  if (*(char *)(a2 + 23) < 0) {
    a2 = *(void *)a2;
  }
  uint64_t result = link((const char *)a1, (const char *)a2);
  if (result && (uint64_t result = *__error(), result))
  {
    return sub_1000ADD4C(result, v5, v4, (uint64_t)a3, (uint64_t)"boost::filesystem::create_hard_link");
  }
  else if (a3)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  return result;
}

uint64_t sub_1000B19DC(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  if (a4)
  {
    *a4 = 0;
    a4[1] = 0;
    a4[2] = 0;
  }
  int v25 = -1;
  int v26 = -1;
  while (1)
  {
    uint64_t v8 = *(char *)(a1 + 23) >= 0 ? (const char *)a1 : *(const char **)a1;
    int v9 = open(v8, 0x1000000);
    int v26 = v9;
    if ((v9 & 0x80000000) == 0) {
      break;
    }
    uint64_t v10 = *__error();
    if (v10 != 4) {
      goto LABEL_33;
    }
  }
  if (fstat(v9, &v24))
  {
LABEL_60:
    uint64_t v10 = *__error();
    goto LABEL_33;
  }
  int st_mode = v24.st_mode;
  if ((v24.st_mode & 0xF000) != 0x8000)
  {
LABEL_61:
    uint64_t v10 = 78;
    goto LABEL_33;
  }
  if ((a3 & 4) != 0)
  {
    while (1)
    {
      std::string v12 = *(char *)(a2 + 23) >= 0 ? (const char *)a2 : *(const char **)a2;
      int v13 = open(v12, 16777217, st_mode | 0x80u);
      int v25 = v13;
      if ((v13 & 0x80000000) == 0) {
        break;
      }
      uint64_t v10 = *__error();
      if (v10 != 4)
      {
        if (v10 != 2) {
          goto LABEL_33;
        }
        goto LABEL_19;
      }
    }
    int v18 = 1;
LABEL_37:
    if (fstat(v13, &v23)) {
      goto LABEL_60;
    }
    int v19 = v23.st_mode;
    if ((v23.st_mode & 0xF000) != 0x8000) {
      goto LABEL_61;
    }
    if (v24.st_dev != v23.st_dev || v24.st_ino != v23.st_ino)
    {
      if (v18)
      {
        if (v24.st_mtimespec.tv_sec < v23.st_mtimespec.tv_sec
          || v24.st_mtimespec.tv_sec == v23.st_mtimespec.tv_sec && v24.st_mtimespec.tv_nsec <= v23.st_mtimespec.tv_nsec)
        {
          goto LABEL_34;
        }
        if (ftruncate(v25, 0)) {
          goto LABEL_60;
        }
      }
      uint64_t v10 = off_10047BFD8();
      if (v10) {
        goto LABEL_33;
      }
      if (v19 == st_mode || !fchmod(v25, st_mode))
      {
        if ((a3 & 0x18) != 0)
        {
          int v20 = v25;
          if ((a3 & 0x10) != 0)
          {
            while (fcntl(v20, 51) < 0)
            {
              uint64_t v10 = *__error();
              if (v10 != 4)
              {
LABEL_56:
                if (v10) {
                  goto LABEL_33;
                }
                break;
              }
            }
          }
          else
          {
            while (fcntl(v20, 51) < 0)
            {
              uint64_t v10 = *__error();
              if (v10 != 4) {
                goto LABEL_56;
              }
            }
          }
        }
        int v21 = close(v25);
        int v25 = -1;
        if ((v21 & 0x80000000) == 0 || (uint64_t v10 = *__error(), (v10 & 0xFFFFFFDF) == 4))
        {
          uint64_t v17 = 1;
          goto LABEL_59;
        }
        goto LABEL_33;
      }
      goto LABEL_60;
    }
LABEL_32:
    uint64_t v10 = 17;
LABEL_33:
    sub_1000ADD4C(v10, a1, a2, (uint64_t)a4, (uint64_t)"boost::filesystem::copy_file");
    goto LABEL_34;
  }
LABEL_19:
  if ((a3 & 4) != 0 || (a3 & 3) == 2) {
    int v15 = 16778753;
  }
  else {
    int v15 = 16780801;
  }
  do
  {
    if (*(char *)(a2 + 23) >= 0) {
      uint64_t v16 = (const char *)a2;
    }
    else {
      uint64_t v16 = *(const char **)a2;
    }
    int v13 = open(v16, v15, st_mode | 0x80u);
    int v25 = v13;
    if ((v13 & 0x80000000) == 0)
    {
      int v18 = 0;
      goto LABEL_37;
    }
    uint64_t v10 = *__error();
  }
  while (v10 == 4);
  if (v10 != 17) {
    goto LABEL_33;
  }
  if ((a3 & 1) == 0) {
    goto LABEL_32;
  }
LABEL_34:
  uint64_t v17 = 0;
LABEL_59:
  sub_1000B1D64(&v25);
  sub_1000B1D64(&v26);
  return v17;
}

void sub_1000B1CB8(_Unwind_Exception *a1)
{
  sub_1000B1D64((int *)(v1 - 72));
  sub_1000B1D64((int *)(v1 - 68));
  _Unwind_Resume(a1);
}

void sub_1000B1CF0(uint64_t a1@<X0>, const std::string *a2@<X1>, uint64_t a3@<X8>)
{
  if (*(char *)(a1 + 23) < 0)
  {
    sub_1000559FC((unsigned char *)a3, *(void **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)a3 = *(_OWORD *)a1;
    *(void *)(a3 + 16) = *(void *)(a1 + 16);
  }
  sub_100055F74(a3, a2);
}

void sub_1000B1D48(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

int *sub_1000B1D64(int *a1)
{
  int v2 = *a1;
  if ((v2 & 0x80000000) == 0) {
    close(v2);
  }
  return a1;
}

uint64_t sub_1000B1D98(uint64_t a1, uint64_t a2, void *a3)
{
  int v4 = a2;
  if (a3[1] >> 1 == 0x595588BD12BF6FE8) {
    uint64_t result = a2 != 0;
  }
  else {
    uint64_t result = (*(uint64_t (**)(void *, uint64_t))(*a3 + 48))(a3, a2);
  }
  uint64_t v7 = 2;
  if (result) {
    uint64_t v7 = 3;
  }
  *(_DWORD *)a1 = v4;
  *(_DWORD *)(a1 + 4) = 0;
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 16) = v7;
  return result;
}

BOOL sub_1000B1E30(void *a1)
{
  unsigned int v2 = *__error();
  if (v2 == 34) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = v2;
  }
  if (v3)
  {
    sub_1000ADA6C(v3, (uint64_t)a1, (uint64_t)"boost::filesystem::current_path");
  }
  else if (a1)
  {
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
  return v3 != 0;
}

uint64_t sub_1000B1E90(uint64_t a1, time_t a2, void *a3)
{
  uint64_t v5 = a1;
  if (a3)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  if (*(char *)(a1 + 23) < 0) {
    a1 = *(void *)a1;
  }
  if (stat((const char *)a1, &v10) < 0
    || ((v9.actime = v10.st_atimespec.tv_sec, v9.modtime = a2, *(char *)(v5 + 23) >= 0)
      ? (uint64_t v6 = (const char *)v5)
      : (uint64_t v6 = *(const char **)v5),
        uint64_t result = utime(v6, &v9),
        (result & 0x80000000) != 0))
  {
    uint64_t v8 = __error();
    return sub_1000ADBDC(*v8, v5, (uint64_t)a3, (uint64_t)"boost::filesystem::last_write_time");
  }
  return result;
}

void sub_1000B1F34(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, std::string *a4@<X8>)
{
  p_p = (std::string *)a1;
  long long v28 = 0uLL;
  uint64_t v29 = 0;
  sub_10009BB18(a1, &v26);
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
    sub_1000559FC(&__dst, v26.__r_.__value_.__l.__data_, v26.__r_.__value_.__l.__size_);
  }
  else {
    std::string __dst = v26;
  }
  long long v25 = v27;
  if (SHIBYTE(p_p->__r_.__value_.__r.__words[2]) < 0) {
    sub_1000559FC(&__p, p_p->__r_.__value_.__l.__data_, p_p->__r_.__value_.__l.__size_);
  }
  else {
    std::string __p = *p_p;
  }
  while (1)
  {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    if (!size) {
      goto LABEL_13;
    }
    sub_100056B28((const char *)&__p, (uint64_t)&v28, (int *)&v20);
    if (LODWORD(v20.__r_.__value_.__l.__data_) != 1) {
      break;
    }
    sub_100055820(&__p);
    sub_10009F934(&__dst);
  }
  if (LODWORD(v20.__r_.__value_.__l.__data_))
  {
LABEL_13:
    utimbuf v9 = sub_10009F58C();
    stat v10 = sub_10009F680();
    BOOL v11 = 0;
    memset(&v20, 0, sizeof(v20));
    while ((void)v25 != (void)v27 || *((void *)&v25 + 1) != *((void *)&v27 + 1))
    {
      sub_100055F74((uint64_t)&v20, &__dst);
      BOOL v11 = v11
         || !sub_10003FB24((unint64_t)&__dst, (unint64_t)v9)
         || !sub_10003FB24((unint64_t)&__dst, (unint64_t)v10);
      sub_10009F68C(&__dst);
    }
    std::string::size_type v13 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v13 = __p.__r_.__value_.__l.__size_;
    }
    if (!v13) {
      goto LABEL_37;
    }
    sub_1000AFEE4((uint64_t)&__p, a2, &v28, (unint64_t)&v19);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    std::string __p = v19;
    if ((v29 & 1) != 0 && (v29 != 1 || v28))
    {
      if (!a3)
      {
        exception = __cxa_allocate_exception(0x30uLL);
        long long v17 = v28;
        uint64_t v18 = v29;
        boost::filesystem::filesystem_error::filesystem_error(exception, "boost::filesystem::weakly_canonical", &__p, &v17);
      }
      *(_OWORD *)a3 = v28;
      *(void *)(a3 + 16) = v29;
    }
    else
    {
      std::string::size_type v14 = HIBYTE(v20.__r_.__value_.__r.__words[2]);
      if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type v14 = v20.__r_.__value_.__l.__size_;
      }
      if (v14)
      {
        sub_100055F74((uint64_t)&__p, &v20);
        if (v11)
        {
          p_p = &__p;
LABEL_37:
          sub_1000B30B0((char *)p_p, (uint64_t)a4);
          goto LABEL_40;
        }
      }
      *a4 = __p;
      a4 = &__p;
    }
    a4->__r_.__value_.__r.__words[0] = 0;
    a4->__r_.__value_.__l.__size_ = 0;
    a4->__r_.__value_.__r.__words[2] = 0;
LABEL_40:
    if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v20.__r_.__value_.__l.__data_);
    }
    goto LABEL_42;
  }
  if (!a3)
  {
    int v15 = __cxa_allocate_exception(0x30uLL);
    long long v21 = v28;
    uint64_t v22 = v29;
    boost::filesystem::filesystem_error::filesystem_error(v15, "boost::filesystem::weakly_canonical", &__p, &v21);
  }
  *(_OWORD *)a3 = v28;
  *(void *)(a3 + 16) = v29;
  a4->__r_.__value_.__l.__size_ = 0;
  a4->__r_.__value_.__r.__words[2] = 0;
  a4->__r_.__value_.__r.__words[0] = 0;
LABEL_42:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v26.__r_.__value_.__l.__data_);
  }
}

void sub_1000B2294(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38)
{
  __cxa_free_exception(v38);
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a31 < 0) {
    operator delete(a26);
  }
  if (a38 < 0) {
    operator delete(a33);
  }
  if (*(char *)(v39 - 121) < 0) {
    operator delete(*(void **)(v39 - 144));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1000B2334(uint64_t a1, void *a2)
{
  if (a2)
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  return sub_1000B2344(a1, a2);
}

uint64_t sub_1000B2344(uint64_t a1, void *a2)
{
  long long v23 = 0uLL;
  uint64_t v24 = 0;
  sub_1000B0654((const char *)a1, (uint64_t)&v23, (int *)&v22);
  uint64_t result = 0;
  int v5 = (int)v22;
  if (v22 != 1)
  {
    if (!v22)
    {
      if (!a2)
      {
        exception = __cxa_allocate_exception(0x30uLL);
        long long v20 = v23;
        uint64_t v21 = v24;
        boost::filesystem::filesystem_error::filesystem_error(exception, "boost::filesystem::remove_all", a1, &v20);
      }
      *(_OWORD *)a2 = v23;
      a2[2] = v24;
      return -1;
    }
    if (v22 == 3)
    {
      *(void *)&long long v23 = 0;
      sub_100056568((dirent **)&v23, a1, 0, a2);
      if (a2)
      {
        uint64_t v6 = a2[2];
        if ((v6 & 1) != 0 && (v6 != 1 || *(_DWORD *)a2))
        {
          sub_100056A60((atomic_uint **)&v23);
          return -1;
        }
      }
      uint64_t v22 = 0;
      uint64_t v7 = v23;
      if ((void)v23)
      {
        uint64_t v8 = 0;
        utimbuf v9 = 0;
        while (v7 && *(void *)(v7 + 48) || v9 && *((void *)v9 + 6))
        {
          v8 += sub_1000B2344(v7 + 8, a2);
          if (a2 && (uint64_t v10 = a2[2], (v10 & 1) != 0) && (v10 != 1 || *(_DWORD *)a2)
            || (sub_1000551CC((dirent **)&v23, (uint64_t)a2), a2)
            && (uint64_t v11 = a2[2], (v11 & 1) != 0)
            && (v11 != 1 || *(_DWORD *)a2))
          {
            char v12 = 0;
            goto LABEL_29;
          }
          utimbuf v9 = v22;
          uint64_t v7 = v23;
          if ((atomic_uint *)v23 == v22) {
            break;
          }
        }
      }
      else
      {
        uint64_t v8 = 0;
      }
      char v12 = 1;
LABEL_29:
      sub_100056A60(&v22);
      sub_100056A60((atomic_uint **)&v23);
      if ((v12 & 1) == 0) {
        return -1;
      }
    }
    else
    {
      uint64_t v8 = 0;
    }
    if (v5 == 1) {
      goto LABEL_39;
    }
    if (v5 == 3)
    {
      if (*(char *)(a1 + 23) >= 0) {
        std::string::size_type v13 = (const char *)a1;
      }
      else {
        std::string::size_type v13 = *(const char **)a1;
      }
      if (rmdir(v13))
      {
LABEL_36:
        std::string::size_type v14 = __error();
        uint64_t v15 = 0;
        uint64_t v16 = *v14;
        if (v16 == 2 || v16 == 20)
        {
LABEL_40:
          if (a2)
          {
LABEL_41:
            uint64_t v17 = a2[2];
            if ((v17 & 1) != 0 && (v17 != 1 || *(_DWORD *)a2)) {
              return -1;
            }
          }
          return v15 + v8;
        }
        sub_1000ADBDC(v16, a1, (uint64_t)a2, (uint64_t)"boost::filesystem::remove");
LABEL_39:
        uint64_t v15 = 0;
        goto LABEL_40;
      }
    }
    else
    {
      if (*(char *)(a1 + 23) >= 0) {
        uint64_t v18 = (const char *)a1;
      }
      else {
        uint64_t v18 = *(const char **)a1;
      }
      if (unlink(v18)) {
        goto LABEL_36;
      }
    }
    uint64_t v15 = 1;
    if (a2) {
      goto LABEL_41;
    }
    return v15 + v8;
  }
  return result;
}

void sub_1000B25B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, int a14, __int16 a15, char a16, char a17)
{
  __cxa_free_exception(v17);
  _Unwind_Resume(a1);
}

void sub_1000B25EC(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (a1)
  {
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
  int v4 = getenv("TMPDIR");
  if (!v4)
  {
    int v4 = getenv("TMP");
    if (!v4)
    {
      int v4 = getenv("TEMP");
      if (!v4) {
        int v4 = getenv("TEMPDIR");
      }
    }
  }
  if (v4) {
    int v5 = v4;
  }
  else {
    int v5 = "/tmp";
  }
  sub_1000AE4B0(__p, v5);
  uint64_t v6 = (void *)HIBYTE(v10);
  if (v10 < 0) {
    uint64_t v6 = __p[1];
  }
  if (!v6) {
    goto LABEL_20;
  }
  sub_100056B28((const char *)__p, (uint64_t)a1, &v8);
  if (!a1 || (uint64_t v7 = a1[2], (v7 & 1) == 0) || v7 == 1 && !*(_DWORD *)a1)
  {
    if (v8 == 3)
    {
LABEL_18:
      *(_OWORD *)a2 = *(_OWORD *)__p;
      *(void *)(a2 + 16) = v10;
      return;
    }
LABEL_20:
    sub_1000ADBDC(20, (uint64_t)__p, (uint64_t)a1, (uint64_t)"boost::filesystem::temp_directory_path");
    goto LABEL_18;
  }
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  if (SHIBYTE(v10) < 0) {
    operator delete(__p[0]);
  }
}

void sub_1000B2710(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

ssize_t sub_1000B2730()
{
  int v0 = __chkstk_darwin();
  int v4 = v3;
  int v5 = v0;
  if (v1 == -1) {
    unint64_t v6 = -1;
  }
  else {
    unint64_t v6 = v1 + 1;
  }
  if (v6 <= v2) {
    unint64_t v6 = v2;
  }
  if (v6 <= 0x2000) {
    unint64_t v6 = 0x2000;
  }
  if (v6 >= 0x40000) {
    LODWORD(v6) = 0x40000;
  }
  unsigned int v7 = (v6 - 1) | ((v6 - 1) >> 1) | (((v6 - 1) | ((v6 - 1) >> 1)) >> 2);
  unsigned int v8 = v7 | (v7 >> 4) | ((v7 | (v7 >> 4)) >> 8);
  size_t v9 = (v8 | HIWORD(v8)) + 1;
  uint64_t v10 = (char *)operator new[](v9, &std::nothrow);
  if (!v10) {
    return sub_1000B286C(v5, v4, v14, 0x2000uLL);
  }
  uint64_t v11 = v10;
  ssize_t v12 = sub_1000B286C(v5, v4, v10, v9);
  operator delete[](v11);
  return v12;
}

void sub_1000B2850(_Unwind_Exception *exception_object)
{
}

ssize_t sub_1000B286C(int a1, int a2, char *a3, size_t a4)
{
  ssize_t result = read(a1, a3, a4);
  if (result)
  {
    ssize_t v9 = result;
    do
    {
      if ((v9 & 0x8000000000000000) == 0)
      {
        ssize_t v10 = 0;
        while (1)
        {
          ssize_t v11 = write(a2, &a3[v10], v9 - v10);
          if (v11 < 0)
          {
            ssize_t result = *__error();
            if (result != 4) {
              return result;
            }
          }
          else
          {
            v10 += v11;
          }
          if (v10 >= v9) {
            goto LABEL_12;
          }
        }
      }
      ssize_t result = *__error();
      if (result != 4) {
        break;
      }
LABEL_12:
      ssize_t result = read(a1, a3, a4);
      ssize_t v9 = result;
    }
    while (result);
  }
  return result;
}

std::string *sub_1000B2924(std::string *this)
{
  uint64_t v2 = HIBYTE(this->__r_.__value_.__r.__words[2]);
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::size_type size = this->__r_.__value_.__l.__size_;
    if (!size) {
      return this;
    }
  }
  else
  {
    if (!*((unsigned char *)&this->__r_.__value_.__s + 23)) {
      return this;
    }
    std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  }
  std::string::size_type v4 = size - 1;
  if ((v2 & 0x80) != 0)
  {
    std::string::size_type v6 = this->__r_.__value_.__r.__words[0];
    if (*(unsigned char *)(this->__r_.__value_.__r.__words[0] + v4) == 47)
    {
      int v5 = (char *)(v6 + this->__r_.__value_.__l.__size_);
      goto LABEL_10;
    }
  }
  else if (this->__r_.__value_.__s.__data_[v4] == 47)
  {
    int v5 = (char *)this + v2;
    std::string::size_type v6 = (std::string::size_type)this;
LABEL_10:
    std::string::erase(this, (std::string::size_type)&v5[~v6], 1uLL);
  }
  return this;
}

unint64_t sub_1000B29B4(unsigned char *a1)
{
  unint64_t v4 = 0;
  if ((char)a1[23] < 0)
  {
    uint64_t v2 = a1;
    a1 = *(unsigned char **)a1;
    unint64_t v1 = *((void *)v2 + 1);
  }
  else
  {
    unint64_t v1 = a1[23];
  }
  sub_100056140(a1, v1, &v4);
  return v4;
}

unint64_t sub_1000B29F4(unsigned char *a1)
{
  unint64_t v1 = a1;
  unint64_t v6 = 0;
  if ((char)a1[23] < 0)
  {
    a1 = *(unsigned char **)a1;
    unint64_t v2 = *((void *)v1 + 1);
  }
  else
  {
    unint64_t v2 = a1[23];
  }
  unint64_t v3 = sub_100056140(a1, v2, &v6);
  if ((char)v1[23] < 0) {
    unint64_t v4 = *((void *)v1 + 1);
  }
  else {
    unint64_t v4 = v1[23];
  }
  if (v3 < v4) {
    return v3 + 1;
  }
  else {
    return v6;
  }
}

std::string *sub_1000B2A60@<X0>(unsigned char *a1@<X0>, unint64_t a2@<X8>)
{
  sub_10009BB3C(a1, (void *)a2);
  ssize_t result = (std::string *)sub_10003FB24(a2, (unint64_t)&xmmword_10047D450);
  if (result)
  {
    ssize_t result = (std::string *)sub_10003FB24(a2, (unint64_t)qword_10047D468);
    if (result)
    {
      uint64_t v4 = *(unsigned __int8 *)(a2 + 23);
      unint64_t v5 = (v4 & 0x80u) == 0 ? a2 : *(void *)a2;
      std::string::size_type v6 = (v4 & 0x80u) == 0 ? *(unsigned __int8 *)(a2 + 23) : *(void *)(a2 + 8);
      if (v6)
      {
        while (v6)
        {
          int v7 = *(unsigned __int8 *)(v5 - 1 + v6--);
          if (v7 == 46)
          {
            if (v6 != -1)
            {
              int v8 = (char)v4;
              uint64_t v9 = a2 + v4;
              if (v8 < 0) {
                uint64_t v9 = *(void *)a2 + *(void *)(a2 + 8);
              }
              return std::string::erase((std::string *)a2, v6, v9 - v5 - v6);
            }
            return result;
          }
        }
      }
    }
  }
  return result;
}

void sub_1000B2B0C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000B2B28(unsigned char *a1@<X0>, void *a2@<X8>)
{
  sub_10009BB3C(a1, __p);
  if (sub_10003FB24((unint64_t)__p, (unint64_t)&xmmword_10047D450)
    && sub_10003FB24((unint64_t)__p, (unint64_t)qword_10047D468))
  {
    unint64_t v3 = v7;
    if ((v7 & 0x80u) == 0) {
      uint64_t v4 = __p;
    }
    else {
      uint64_t v4 = (void **)__p[0];
    }
    if ((v7 & 0x80u) != 0) {
      unint64_t v3 = (unint64_t)__p[1];
    }
    if (v3)
    {
      while (v3)
      {
        int v5 = *((unsigned __int8 *)v4 + --v3);
        if (v5 == 46)
        {
          if (v3 == -1) {
            break;
          }
          sub_1000AE4B0(a2, (char *)v4 + v3);
          goto LABEL_14;
        }
      }
    }
  }
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
LABEL_14:
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1000B2BE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000B2C04(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_10004014C(a1, &v29);
  if (*(char *)(a1 + 23) < 0) {
    unint64_t v6 = *(void *)(a1 + 8);
  }
  else {
    unint64_t v6 = *(unsigned __int8 *)(a1 + 23);
  }
  sub_10004014C(a2, &v27);
  if (*(char *)(a2 + 23) >= 0) {
    unint64_t v7 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    unint64_t v7 = *(void *)(a2 + 8);
  }
  int v8 = SHIBYTE(v29.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
    sub_1000559FC(&__dst, v29.__r_.__value_.__l.__data_, v29.__r_.__value_.__l.__size_);
  }
  else {
    std::string __dst = v29;
  }
  long long v22 = v30;
  int v9 = SHIBYTE(v27.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
    sub_1000559FC(&__p, v27.__r_.__value_.__l.__data_, v27.__r_.__value_.__l.__size_);
  }
  else {
    std::string __p = v27;
  }
  long long v20 = v28;
  while (v22 != __PAIR128__(v6, a1))
  {
    BOOL v10 = (void)v20 == a2 && *((void *)&v20 + 1) == v7;
    if (v10 || sub_10003FB24((unint64_t)&__dst, (unint64_t)&__p)) {
      break;
    }
    sub_10009F68C(&__dst);
    sub_10009F68C(&__p);
  }
  sub_1000B3474((char *)&v23, (long long *)&__dst, (long long *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  if (v24 == v30 && v26 == v28)
  {
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    goto LABEL_68;
  }
  if (v24 == __PAIR128__(v6, a1) && v26 == __PAIR128__(v7, a2))
  {
    if ((byte_10047D467 & 0x80000000) == 0)
    {
      *(_OWORD *)a3 = xmmword_10047D450;
      uint64_t v11 = unk_10047D460;
LABEL_66:
      *(void *)(a3 + 16) = v11;
      goto LABEL_68;
    }
LABEL_67:
    sub_1000559FC((unsigned char *)a3, (void *)xmmword_10047D450, *((unint64_t *)&xmmword_10047D450 + 1));
    goto LABEL_68;
  }
  uint64_t v12 = 0;
  while ((void)v26 != a2 || *((void *)&v26 + 1) != v7)
  {
    if (sub_10003FB24((unint64_t)&v25, (unint64_t)qword_10047D468))
    {
      std::string::size_type size = HIBYTE(v25.__r_.__value_.__r.__words[2]);
      if ((v25.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type size = v25.__r_.__value_.__l.__size_;
      }
      if (size && sub_10003FB24((unint64_t)&v25, (unint64_t)&xmmword_10047D450)) {
        ++v12;
      }
    }
    else
    {
      --v12;
    }
    sub_10009F68C(&v25);
  }
  if (v12 < 0)
  {
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    goto LABEL_68;
  }
  if (v12)
  {
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    uint64_t v15 = v12 + 1;
    *(void *)(a3 + 16) = 0;
    do
    {
      sub_100055F74(a3, (const std::string *)qword_10047D468);
      --v15;
    }
    while (v15 > 1);
  }
  else
  {
    if ((void)v24 == a1 && *((void *)&v24 + 1) == v6) {
      goto LABEL_64;
    }
    std::string::size_type v18 = HIBYTE(v23.__r_.__value_.__r.__words[2]);
    if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v18 = v23.__r_.__value_.__l.__size_;
    }
    if (!v18)
    {
LABEL_64:
      if ((byte_10047D467 & 0x80000000) == 0)
      {
        *(_OWORD *)a3 = xmmword_10047D450;
        uint64_t v11 = unk_10047D460;
        goto LABEL_66;
      }
      goto LABEL_67;
    }
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
  }
  while ((void)v24 != a1 || *((void *)&v24 + 1) != v6)
  {
    sub_100055F74(a3, &v23);
    sub_10009F68C(&v23);
  }
LABEL_68:
  if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v25.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v23.__r_.__value_.__l.__data_);
    if ((v9 & 0x80000000) == 0)
    {
LABEL_72:
      if ((v8 & 0x80000000) == 0) {
        return;
      }
LABEL_76:
      operator delete(v29.__r_.__value_.__l.__data_);
      return;
    }
  }
  else if ((v9 & 0x80000000) == 0)
  {
    goto LABEL_72;
  }
  operator delete(v27.__r_.__value_.__l.__data_);
  if (v8 < 0) {
    goto LABEL_76;
  }
}

void sub_1000B2FB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, char a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  sub_1000B306C((uint64_t)&a30);
  if (v30 < 0) {
    operator delete(*(void **)(v31 - 176));
  }
  if (a11 < 0) {
    operator delete(*(void **)(v31 - 136));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1000B306C(uint64_t a1)
{
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1000B30B0(char *__s@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2 = __s;
  if (__s[23] < 0)
  {
    unint64_t v2 = *(char **)__s;
    unint64_t v4 = *((void *)__s + 1);
  }
  else
  {
    unint64_t v4 = __s[23];
  }
  unint64_t v33 = 0;
  unint64_t v5 = sub_100056140(v2, v4, &v33);
  unint64_t v6 = v33;
  sub_10003FCE8((void *)a2, v2, &v2[v33], v33);
  if (v5 < v4)
  {
    std::string::push_back((std::string *)a2, 47);
    unint64_t v6 = v5 + 1;
  }
  if (v6 >= v4) {
    return;
  }
  unint64_t v7 = v6;
  while (v2[v7] == 47)
  {
    if (v4 == ++v7) {
      return;
    }
  }
  do
  {
    std::string::size_type v14 = &v2[v7];
    std::string::size_type v15 = v4 - v7;
    uint64_t v16 = memchr(&v2[v7], 47, v4 - v7);
    if (v16) {
      std::string::size_type v15 = v16 - v14;
    }
    unint64_t v8 = v15 + v7;
    if (v15 == 2)
    {
      if (*v14 != 46 || v2[v7 + 1] != 46) {
        goto LABEL_56;
      }
      unint64_t v17 = *(unsigned __int8 *)(a2 + 23);
      if (*(char *)(a2 + 23) < 0)
      {
        std::string::size_type v18 = *(void *)(a2 + 8);
        if (v18 <= v6) {
          goto LABEL_56;
        }
      }
      else
      {
        std::string::size_type v18 = *(unsigned __int8 *)(a2 + 23);
        if (v6 >= v17) {
          goto LABEL_56;
        }
      }
      uint64_t v13 = *(void *)a2;
      if (v18 >= v6) {
        std::string::size_type v10 = v6;
      }
      else {
        std::string::size_type v10 = v18;
      }
      if ((v17 & 0x80u) == 0) {
        uint64_t v19 = a2;
      }
      else {
        uint64_t v19 = *(void *)a2;
      }
      uint64_t v20 = v19 - 1;
      unint64_t v21 = v18;
      while (v21 > v6)
      {
        unint64_t v22 = v21 - 1;
        int v23 = *(unsigned __int8 *)(v20 + v21--);
        if (v23 == 47)
        {
          std::string::size_type v10 = v22 + 1;
          break;
        }
      }
      if (v18 - v10 != 2
        || ((v17 & 0x80u) == 0 ? (uint64_t v24 = a2) : (uint64_t v24 = *(void *)a2),
            *(unsigned char *)(v24 + v10) != 46 || *(unsigned char *)(v10 + v24 + 1) != 46))
      {
        if (v10 > v6)
        {
          uint64_t v9 = (v17 & 0x80u) == 0 ? a2 : *(void *)a2;
          if (*(unsigned char *)(v9 + v10 - 1) == 47) {
            --v10;
          }
        }
        int v11 = (char)v17;
        uint64_t v12 = a2 + v17;
        if (v11 >= 0) {
          uint64_t v13 = a2;
        }
        else {
          uint64_t v12 = v13 + *(void *)(a2 + 8);
        }
        std::string::erase((std::string *)a2, v10, v12 - (v13 + v10));
LABEL_57:
        if (v8 == v4) {
          goto LABEL_78;
        }
        goto LABEL_11;
      }
LABEL_56:
      sub_1000561D8(a2);
      std::string::append((std::string *)a2, &v2[v7], v15);
      goto LABEL_57;
    }
    if (v15 != 1 || *v14 != 46) {
      goto LABEL_56;
    }
    if (v8 == v4) {
      break;
    }
LABEL_11:
    if (v8 < v4)
    {
      while (v2[v8] == 47)
      {
        if (++v8 >= v4) {
          goto LABEL_59;
        }
      }
    }
    unint64_t v7 = v8;
  }
  while (v8 != v4);
LABEL_59:
  uint64_t v25 = *(unsigned __int8 *)(a2 + 23);
  int v26 = *(unsigned __int8 *)(a2 + 23);
  if (*(char *)(a2 + 23) < 0)
  {
    uint64_t v27 = *(void *)(a2 + 8);
    if (!v27) {
      goto LABEL_78;
    }
    if (v27 == 1) {
      goto LABEL_77;
    }
LABEL_65:
    uint64_t v28 = v27 - 1;
    if ((v26 & 0x80) != 0)
    {
      if (*(unsigned char *)(*(void *)a2 + v28) != 46) {
        goto LABEL_77;
      }
      uint64_t v29 = *(void *)(a2 + 8);
    }
    else
    {
      if (*(unsigned char *)(a2 + v28) != 46) {
        goto LABEL_77;
      }
      uint64_t v29 = *(unsigned __int8 *)(a2 + 23);
    }
    uint64_t v30 = v29 - 2;
    if ((v26 & 0x80) != 0)
    {
      uint64_t v31 = *(void *)a2;
      if (*(unsigned char *)(*(void *)a2 + v30) != 46) {
        goto LABEL_77;
      }
      uint64_t v25 = *(void *)(a2 + 8);
      if (v25 == 2) {
        goto LABEL_78;
      }
    }
    else
    {
      if (*(unsigned char *)(a2 + v30) != 46) {
        goto LABEL_77;
      }
      if (v26 == 2) {
        goto LABEL_78;
      }
      uint64_t v31 = a2;
    }
    if (*(unsigned char *)(v25 + v31 - 3) != 47) {
      goto LABEL_77;
    }
  }
  else if (*(unsigned char *)(a2 + 23))
  {
    if (v26 != 1)
    {
      uint64_t v27 = *(unsigned __int8 *)(a2 + 23);
      goto LABEL_65;
    }
LABEL_77:
    sub_1000561D8(a2);
  }
LABEL_78:
  uint64_t v32 = *(unsigned __int8 *)(a2 + 23);
  if ((v32 & 0x80u) != 0) {
    uint64_t v32 = *(void *)(a2 + 8);
  }
  if (!v32) {
    std::string::push_back((std::string *)a2, 46);
  }
}

void sub_1000B340C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000B3438(uint64_t a1)
{
  if (qword_10047D480)
  {
    std::locale::~locale((std::locale *)qword_10047D480);
    operator delete(v2);
  }
  qword_10047D480 = 0;
  return a1;
}

char *sub_1000B3474(char *__dst, long long *a2, long long *a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000559FC(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v6 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v6;
  }
  *(_OWORD *)(__dst + 24) = *(long long *)((char *)a2 + 24);
  unint64_t v7 = __dst + 40;
  if (*((char *)a3 + 23) < 0)
  {
    sub_1000559FC(v7, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v8 = *a3;
    *((void *)__dst + 7) = *((void *)a3 + 2);
    *(_OWORD *)unint64_t v7 = v8;
  }
  *((_OWORD *)__dst + 4) = *(long long *)((char *)a3 + 24);
  return __dst;
}

void sub_1000B3508(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000B3524()
{
  __cxa_atexit((void (*)(void *))sub_1000B3438, &unk_10047D448, (void *)&_mh_execute_header);
  sub_1000AE4B0(&xmmword_10047D450, ".");
  __cxa_atexit((void (*)(void *))sub_1000ADA38, &xmmword_10047D450, (void *)&_mh_execute_header);
  sub_1000AE4B0(qword_10047D468, "..");

  return __cxa_atexit((void (*)(void *))sub_1000ADA38, qword_10047D468, (void *)&_mh_execute_header);
}

void sub_1000B3698(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B3728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B3744(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B37D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B37E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B3870(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B3884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B3908(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B3990(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B39A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B3C10(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 32);
  unint64_t v3 = (void *)v2[2];
  id v5 = [v2 _defaultErrHandlerForCaller:@"retrieveLocationRelevancyDuration:"];
  unint64_t v4 = [v3 remoteObjectProxyWithErrorHandler:];
  [v4 retrieveLocationRelevancyDurationWithCompletionHandler:*(void *)(a1 + 40)];
}

void sub_1000B3C94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B3CAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_1000B3CC0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = *(id *)(a2 + 32);
  id result = objc_retainBlock(*(id *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_1000B3CFC(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 32);
}

void sub_1000B3F28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1000B3F60(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) onQueuePrefetch:*(void *)(a1 + 40) callback:a2 when:0];
}

id sub_1000B3F74(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = *(id *)(a2 + 32);
  id result = *(id *)(a2 + 40);
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_1000B3FB0(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 32);
}

void sub_1000B40B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B40DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B42E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1000B431C(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) onQueuePrefetch:*(void *)(a1 + 40) callback:a2 when:1];
}

id sub_1000B4330(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = *(id *)(a2 + 32);
  id result = *(id *)(a2 + 40);
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_1000B436C(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 32);
}

void sub_1000B4580(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3321888768;
  void v3[2] = sub_1000B4634;
  void v3[3] = &unk_100452578;
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = *(id *)(a1 + 32);
  id v4 = v2;
  (*(void (**)(uint64_t, void *))(v1 + 16))(v1, v3);
}

void sub_1000B461C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

intptr_t sub_1000B4634(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_1000B463C(uint64_t a1, uint64_t a2)
{
  id result = *(id *)(a2 + 32);
  *(void *)(a1 + 32) = result;
  return result;
}

void sub_1000B4668(uint64_t a1)
{
}

void sub_1000B4808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

id sub_1000B4820(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) onQueueEraseEverything:a2];
}

id sub_1000B482C(uint64_t a1, uint64_t a2)
{
  id result = *(id *)(a2 + 32);
  *(void *)(a1 + 32) = result;
  return result;
}

void sub_1000B4858(uint64_t a1)
{
}

void sub_1000B4968(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1000B498C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1000B4AC0(uint64_t a1)
{
  return [*(id *)(a1 + 32) onQueueShutdown];
}

id sub_1000B4AC8(uint64_t a1, uint64_t a2)
{
  id result = *(id *)(a2 + 32);
  *(void *)(a1 + 32) = result;
  return result;
}

void sub_1000B4AF4(uint64_t a1)
{
}

void sub_1000B4BF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B4C08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B4D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

id sub_1000B4D9C(uint64_t a1)
{
  return [*(id *)(a1 + 32) onQueueNumFloors:*(void *)(a1 + 40)];
}

id sub_1000B4DA8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = *(id *)(a2 + 32);
  id result = objc_retainBlock(*(id *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_1000B4DE4(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
}

void sub_1000B4F28(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1000B4F4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B4F5C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Client");
  id v2 = (void *)qword_10047BEF0;
  qword_10047BEF0 = (uint64_t)v1;
}

void sub_1000B5108(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B514C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B5250(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B5264(_Unwind_Exception *a1)
{
  unint64_t v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1000B527C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B5378(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B5390(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B567C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);

  _Unwind_Resume(a1);
}

void sub_1000B56A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B56BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B56D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B56E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained withinQueueReinitializeRemoteState];
}

void sub_1000B572C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B5740(uint64_t a1, uint64_t a2)
{
}

void sub_1000B574C(uint64_t a1)
{
}

void sub_1000B59A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, objc_super a10)
{
  a10.super_class = (Class)CLIndoorXPCProvider;
  [(_Unwind_Exception *)&a10 dealloc];
  _Unwind_Resume(a1);
}

id sub_1000B5A00(uint64_t a1)
{
  if (qword_10047BEE8 != -1)
  {
    dispatch_once(&qword_10047BEE8, &stru_100452760);
    id v2 = qword_10047BEF0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_DEBUG)) {
      return [*(id *)(a1 + 32) withinQueueInvalidate];
    }
    goto LABEL_3;
  }
  id v2 = qword_10047BEF0;
  if (os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_DEBUG))
  {
LABEL_3:
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "performing dealloc", v4, 2u);
  }
  return [*(id *)(a1 + 32) withinQueueInvalidate];
}

id sub_1000B5AB0(uint64_t a1, uint64_t a2)
{
  id result = *(id *)(a2 + 32);
  *(void *)(a1 + 32) = result;
  return result;
}

void sub_1000B5ADC(uint64_t a1)
{
}

id sub_1000B5B78(uint64_t a1)
{
  if (qword_10047BEE8 != -1) {
    dispatch_once(&qword_10047BEE8, &stru_100452760);
  }
  id v2 = (id)qword_10047BEF0;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    unint64_t v3 = [*(id *)(a1 + 32) impl];
    id v4 = [v3 endpointName];
    int v6 = 138543362;
    unint64_t v7 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "invalidate %{public}@", (uint8_t *)&v6, 0xCu);
  }
  return [*(id *)(a1 + 32) withinQueueInvalidate];
}

void sub_1000B5C7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B5C90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1000B5CA4(uint64_t a1, uint64_t a2)
{
  id result = *(id *)(a2 + 32);
  *(void *)(a1 + 32) = result;
  return result;
}

void sub_1000B5CD0(uint64_t a1)
{
}

void sub_1000B5E40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B5E54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B5E64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B603C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, id location, uint64_t a12, id a13)
{
}

void sub_1000B606C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id location, id a13)
{
  objc_destroyWeak(&location);
  objc_destroyWeak(&a13);
  _Unwind_Resume(a1);
}

void sub_1000B608C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B60A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B60B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B62C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B6540(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B6554(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B6564(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B668C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B66A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B66B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B6834(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B684C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B6990(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (qword_10047BEE8 != -1) {
    dispatch_once(&qword_10047BEE8, &stru_100452760);
  }
  id v4 = (id)qword_10047BEF0;
  if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    int v6 = [v3 description];
    int v7 = 138543618;
    uint64_t v8 = v5;
    __int16 v9 = 2114;
    std::string::size_type v10 = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "xpc error invoking %{public}@: %{public}@", (uint8_t *)&v7, 0x16u);
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_1000B6AB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1000B6AE0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = *(id *)(a2 + 32);
  id result = objc_retainBlock(*(id *)(a2 + 40));
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_1000B6B1C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
}

void sub_1000B6BBC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Client");
  id v2 = (void *)qword_10047BEF0;
  qword_10047BEF0 = (uint64_t)v1;
}

void sub_1000B6C00(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = WeakRetained[1];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000B6CB0;
    block[3] = &unk_1004527B8;
    uint64_t v5 = WeakRetained;
    dispatch_async(v3, block);
  }
}

void sub_1000B6C9C(uint64_t a1, uint64_t a2)
{
}

void sub_1000B6CA8(uint64_t a1)
{
}

id sub_1000B6CB0(uint64_t a1)
{
  return [*(id *)(a1 + 32) withinQueueInterruptionHandler];
}

void sub_1000B6CB8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = WeakRetained[1];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000B6D68;
    block[3] = &unk_1004527B8;
    uint64_t v5 = WeakRetained;
    dispatch_async(v3, block);
  }
}

void sub_1000B6D54(uint64_t a1, uint64_t a2)
{
}

void sub_1000B6D60(uint64_t a1)
{
}

void sub_1000B6D68(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  if (v2[1])
  {
    id v3 = [v2 impl];
    id v4 = [v3 withinQueuePermanentShutdownReason];

    if (v4)
    {
      if (qword_10047BEE8 != -1) {
        dispatch_once(&qword_10047BEE8, &stru_100452760);
      }
      uint64_t v5 = (id)qword_10047BEF0;
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
      {
        int v6 = [*(id *)(a1 + 32) impl];
        int v7 = [v6 endpointName];
        uint64_t v8 = [v4 description];
        int v12 = 138543618;
        uint64_t v13 = v7;
        __int16 v14 = 2114;
        uint64_t v15 = (uint64_t)v8;
        _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEBUG, "XPC connection invalidated by daemon to %{public}@: %{public}@", (uint8_t *)&v12, 0x16u);
      }
      [*(id *)(a1 + 32) withinQueueInvalidate];
    }
    else
    {
      if (qword_10047BEE8 != -1) {
        dispatch_once(&qword_10047BEE8, &stru_100452760);
      }
      __int16 v9 = (id)qword_10047BEF0;
      if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
      {
        std::string::size_type v10 = [*(id *)(a1 + 32) impl];
        int v11 = [v10 endpointName];
        int v12 = 138543618;
        uint64_t v13 = v11;
        __int16 v14 = 2050;
        uint64_t v15 = 5000;
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Invalidated pipelined XPC connection to %{public}@ - will retry in %{public}lld ms", (uint8_t *)&v12, 0x16u);
      }
      [*(id *)(a1 + 32) withinQueueHandleReconnect:std::chrono::steady_clock::now().__d_.__rep_];
    }
  }
}

void sub_1000B6F80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B6FEC()
{
}

void sub_1000B71D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B71F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B7900(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, void *a11, void *a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, void *a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_1000B7CF4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Client");
  id v2 = (void *)qword_10047BEF0;
  qword_10047BEF0 = (uint64_t)v1;
}

void sub_1000B7D38()
{
}

void sub_1000B800C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B8094(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B81CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B81E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B81F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B820C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B8220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B823C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B8254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_1000B830C(uint64_t a1)
{
  return [*(id *)(a1 + 32) withinQueueSetDelegate:*(void *)(a1 + 40)];
}

void sub_1000B8404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B8454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B846C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B86C4(uint64_t a1)
{
  if (qword_10047BEE8 != -1)
  {
    dispatch_once(&qword_10047BEE8, &stru_1004529D0);
    id v2 = qword_10047BEF0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  id v2 = qword_10047BEF0;
  if (os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_DEBUG))
  {
LABEL_3:
    uint64_t v3 = *(void *)(a1 + 40);
    int v8 = 138412290;
    uint64_t v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "setting up play-back of %@", (uint8_t *)&v8, 0xCu);
  }
LABEL_4:
  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = (void *)v4[2];
  int v6 = [v4 _defaultErrHandlerForCaller:@"playbackDatarun:"];
  int v7 = [v5 remoteObjectProxyWithErrorHandler:v6];
  [v7 playbackDatarun:*(void *)(a1 + 40)];
}

void sub_1000B87FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1000B8820(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = *(id *)(a2 + 32);
  id result = *(id *)(a2 + 40);
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_1000B885C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
}

void sub_1000B8964(uint64_t a1)
{
  if (qword_10047BEE8 == -1)
  {
    id v2 = qword_10047BEF0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  dispatch_once(&qword_10047BEE8, &stru_1004529D0);
  id v2 = qword_10047BEF0;
  if (os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_DEBUG))
  {
LABEL_3:
    uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 16);
    int v22 = 134217984;
    uint64_t v23 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "[CLIndoorPositionProvider startUpdatingLocationAtLocation], _connection = %p", (uint8_t *)&v22, 0xCu);
  }
LABEL_4:
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4)
  {
    uint64_t v5 = [*(id *)(a1 + 32) state];
    [v5 setLastLocation:v4];
  }
  int v6 = [*(id *)(a1 + 32) state];
  unsigned int v7 = [v6 updateLocation];

  if (!v7)
  {
    uint64_t v9 = [*(id *)(a1 + 32) state];
    std::string::size_type v10 = [v9 lastLocation];
    if (v10)
    {
      int v11 = [*(id *)(a1 + 32) state];
      int v12 = [v11 lastLocation];
      unsigned int v13 = [v12 isStaleFix:std::chrono::steady_clock::now().__d_.__rep_];

      if (!v13)
      {
        __int16 v14 = [*(id *)(a1 + 32) state];
        [v14 setUpdateLocation:1];

        uint64_t v15 = [*(id *)(a1 + 32) state];
        [v15 setPausedLocalization:0];

        uint64_t v16 = *(void **)(a1 + 32);
        unint64_t v17 = (void *)v16[2];
        std::string::size_type v18 = [v16 _defaultErrHandlerForCaller:@"startUpdatingLocationAtLocation:"];
        uint64_t v19 = [v17 remoteObjectProxyWithErrorHandler:v18];
        [v19 startUpdatingLocationAtLocation:*(void *)(a1 + 40)];

        return;
      }
    }
    else
    {
    }
    if (qword_10047BEE8 == -1)
    {
      uint64_t v20 = qword_10047BEF0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_INFO))
      {
LABEL_17:
        unint64_t v21 = [*(id *)(a1 + 32) state];
        [v21 setPausedLocalization:1];

        return;
      }
    }
    else
    {
      dispatch_once(&qword_10047BEE8, &stru_1004529D0);
      uint64_t v20 = qword_10047BEF0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_INFO)) {
        goto LABEL_17;
      }
    }
    LOWORD(v22) = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "WARNING: [CLIndoorPositionProvider startUpdatingLocationWithMode], no valid location", (uint8_t *)&v22, 2u);
    goto LABEL_17;
  }
  if (qword_10047BEE8 == -1)
  {
    int v8 = qword_10047BEF0;
    if (os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_ERROR))
    {
LABEL_9:
      LOWORD(v22) = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "[CLIndoorPositionProvider startUpdatingLocationAtLocation], already started", (uint8_t *)&v22, 2u);
    }
  }
  else
  {
    dispatch_once(&qword_10047BEE8, &stru_1004529D0);
    int v8 = qword_10047BEF0;
    if (os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
  }
}

void sub_1000B8CAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1000B8D0C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = *(id *)(a2 + 32);
  id result = *(id *)(a2 + 40);
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_1000B8D48(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
}

void sub_1000B8E24(uint64_t a1)
{
  if (qword_10047BEE8 == -1)
  {
    id v2 = qword_10047BEF0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  dispatch_once(&qword_10047BEE8, &stru_1004529D0);
  id v2 = qword_10047BEF0;
  if (os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_DEBUG))
  {
LABEL_3:
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "[CLIndoorPositionProvider stopUpdatingLocation], stop request", buf, 2u);
  }
LABEL_4:
  uint64_t v3 = [*(id *)(a1 + 32) state];
  [v3 setPausedLocalization:0];

  uint64_t v4 = [*(id *)(a1 + 32) state];
  unsigned __int8 v5 = [v4 updateLocation];

  if (v5)
  {
    int v6 = [*(id *)(a1 + 32) state];
    [v6 setUpdateLocation:0];

    unsigned int v7 = *(void **)(a1 + 32);
    int v8 = (void *)v7[2];
    uint64_t v9 = [v7 _defaultErrHandlerForCaller:@"stopUpdatingLocation"];
    std::string::size_type v10 = [v8 remoteObjectProxyWithErrorHandler:v9];
    [v10 stopUpdatingLocation];

    return;
  }
  if (qword_10047BEE8 == -1)
  {
    int v11 = qword_10047BEF0;
    if (os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_DEBUG))
    {
LABEL_9:
      *(_WORD *)int v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEBUG, "[CLIndoorPositionProvider stopUpdatingLocation], already stopped", v12, 2u);
    }
  }
  else
  {
    dispatch_once(&qword_10047BEE8, &stru_1004529D0);
    int v11 = qword_10047BEF0;
    if (os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_9;
    }
  }
}

void sub_1000B9008(_Unwind_Exception *a1)
{
  uint64_t v3 = v1;

  _Unwind_Resume(a1);
}

void sub_1000B9020(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B9030(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B9040(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B9050(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1000B9060(uint64_t a1, uint64_t a2)
{
  id result = *(id *)(a2 + 32);
  *(void *)(a1 + 32) = result;
  return result;
}

void sub_1000B908C(uint64_t a1)
{
}

void sub_1000B9160(uint64_t a1)
{
  if (qword_10047BEE8 == -1)
  {
    id v2 = qword_10047BEF0;
    if (os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_3;
    }
  }
  else
  {
    dispatch_once(&qword_10047BEE8, &stru_1004529D0);
    id v2 = qword_10047BEF0;
    if (os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_DEBUG))
    {
LABEL_3:
      LOWORD(v21[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "got outdoorLocationAvailabile", (uint8_t *)v21, 2u);
      uint64_t v3 = qword_10047BEE8;
      if (*(void *)(a1 + 40)) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  uint64_t v3 = -1;
  if (*(void *)(a1 + 40))
  {
LABEL_4:
    if (v3 == -1)
    {
      uint64_t v4 = (id)qword_10047BEF0;
      if (!os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_7;
      }
    }
    else
    {
      dispatch_once(&qword_10047BEE8, &stru_1004529D0);
      uint64_t v4 = (id)qword_10047BEF0;
      if (!os_log_type_enabled(v4, OS_LOG_TYPE_DEBUG))
      {
LABEL_7:

        uint64_t v9 = *(void *)(a1 + 40);
        std::string::size_type v10 = [*(id *)(a1 + 32) state];
        [v10 setLastLocation:v9];

        int v11 = *(void **)(a1 + 32);
        int v12 = (void *)v11[2];
        unsigned int v13 = [v11 _defaultErrHandlerForCaller:@"outdoorLocationAvailable"];
        __int16 v14 = [v12 remoteObjectProxyWithErrorHandler:v13];
        [v14 outdoorLocationAvailable:*(void *)(a1 + 40)];

        uint64_t v15 = [*(id *)(a1 + 32) state];
        LODWORD(v14) = [v15 pausedLocalization];

        if (v14)
        {
          uint64_t v16 = [*(id *)(a1 + 32) state];
          [v16 setPausedLocalization:0];

          unint64_t v17 = *(void **)(a1 + 32);
          std::string::size_type v18 = [v17 state];
          uint64_t v19 = [v18 lastLocation];
          [v17 startUpdatingLocationAtLocation:v19];
        }
        return;
      }
    }
    unsigned __int8 v5 = [*(id *)(a1 + 32) state];
    unsigned int v6 = [v5 pausedLocalization];
    unsigned int v7 = [*(id *)(a1 + 32) state];
    unsigned int v8 = [v7 updateLocation];
    v21[0] = 67109376;
    v21[1] = v6;
    __int16 v22 = 1024;
    unsigned int v23 = v8;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "[CLIndoorPositionProvider outdoorLocationAvailabile], state = %d,%d", (uint8_t *)v21, 0xEu);

    goto LABEL_7;
  }
LABEL_11:
  if (v3 == -1)
  {
    uint64_t v20 = qword_10047BEF0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_ERROR)) {
      return;
    }
  }
  else
  {
    dispatch_once(&qword_10047BEE8, &stru_1004529D0);
    uint64_t v20 = qword_10047BEF0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_ERROR)) {
      return;
    }
  }
  LOWORD(v21[0]) = 0;
  _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "[CLIndoorPositionProvider outdoorLocationAvailable], got nil position", (uint8_t *)v21, 2u);
}

void sub_1000B946C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1000B94DC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = *(id *)(a2 + 32);
  id result = *(id *)(a2 + 40);
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_1000B9518(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
}

void sub_1000B9620(uint64_t a1)
{
  if (qword_10047BEE8 != -1)
  {
    dispatch_once(&qword_10047BEE8, &stru_1004529D0);
    id v2 = qword_10047BEF0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  id v2 = qword_10047BEF0;
  if (os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_DEBUG))
  {
LABEL_3:
    *(_WORD *)unsigned int v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "gpsEstimateAvailable", v7, 2u);
  }
LABEL_4:
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v4 = (void *)v3[2];
  unsigned __int8 v5 = [v3 _defaultErrHandlerForCaller:@"gpsEstimateAvailable"];
  unsigned int v6 = [v4 remoteObjectProxyWithErrorHandler:v5];
  [v6 gpsEstimateAvailable:*(void *)(a1 + 40)];
}

void sub_1000B971C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B9730(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1000B9740(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = *(id *)(a2 + 32);
  id result = *(id *)(a2 + 40);
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_1000B977C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
}

void sub_1000B9884(uint64_t a1)
{
  if (qword_10047BEE8 != -1)
  {
    dispatch_once(&qword_10047BEE8, &stru_1004529D0);
    id v2 = qword_10047BEF0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  id v2 = qword_10047BEF0;
  if (os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_DEBUG))
  {
LABEL_3:
    *(_WORD *)unsigned int v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "gpsSignalQualityAvailable", v7, 2u);
  }
LABEL_4:
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v4 = (void *)v3[2];
  unsigned __int8 v5 = [v3 _defaultErrHandlerForCaller:@"gpsSignalQualityAvailable"];
  unsigned int v6 = [v4 remoteObjectProxyWithErrorHandler:v5];
  [v6 gpsSignalQualityAvailable:*(void *)(a1 + 40)];
}

void sub_1000B9980(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B9994(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1000B99A4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = *(id *)(a2 + 32);
  id result = *(id *)(a2 + 40);
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_1000B99E0(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
}

void sub_1000B9AE8(uint64_t a1)
{
  if (qword_10047BEE8 != -1)
  {
    dispatch_once(&qword_10047BEE8, &stru_1004529D0);
    id v2 = qword_10047BEF0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  id v2 = qword_10047BEF0;
  if (os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_DEBUG))
  {
LABEL_3:
    *(_WORD *)unsigned int v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "clVisionNotificationAvailable", v7, 2u);
  }
LABEL_4:
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v4 = (void *)v3[2];
  unsigned __int8 v5 = [v3 _defaultErrHandlerForCaller:@"clVisionNotificationAvailable"];
  unsigned int v6 = [v4 remoteObjectProxyWithErrorHandler:v5];
  [v6 clVisionNotificationAvailable:*(void *)(a1 + 40)];
}

void sub_1000B9BE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B9BF8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1000B9C08(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = *(id *)(a2 + 32);
  id result = *(id *)(a2 + 40);
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_1000B9C44(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
}

void sub_1000B9D4C(uint64_t a1)
{
  if (qword_10047BEE8 != -1)
  {
    dispatch_once(&qword_10047BEE8, &stru_1004529D0);
    id v2 = qword_10047BEF0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  id v2 = qword_10047BEF0;
  if (os_log_type_enabled((os_log_t)qword_10047BEF0, OS_LOG_TYPE_DEBUG))
  {
LABEL_3:
    *(_WORD *)unsigned int v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "clpOutdoorEstimatorLogEntryNotificationAvailable", v7, 2u);
  }
LABEL_4:
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v4 = (void *)v3[2];
  unsigned __int8 v5 = [v3 _defaultErrHandlerForCaller:@"clpOutdoorEstimatorLogEntryNotificationAvailable"];
  unsigned int v6 = [v4 remoteObjectProxyWithErrorHandler:v5];
  [v6 clpOutdoorEstimatorLogEntryNotificationAvailable:*(void *)(a1 + 40)];
}

void sub_1000B9E48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B9E5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1000B9E6C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 32) = *(id *)(a2 + 32);
  id result = *(id *)(a2 + 40);
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_1000B9EA8(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
}

void sub_1000B9F1C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Client");
  id v2 = (void *)qword_10047BEF0;
  qword_10047BEF0 = (uint64_t)v1;
}

void sub_1000B9F60()
{
}

void sub_1000BA0E4()
{
}

id sub_1000BA10C()
{
  if (qword_10047BEE8 == -1)
  {
    int v0 = (void *)qword_10047BEF0;
  }
  else
  {
    dispatch_once(&qword_10047BEE8, &stru_1004529F0);
    int v0 = (void *)qword_10047BEF0;
  }
  return v0;
}

uint64_t sub_1000BA17C()
{
  return usleep(0x30D40u);
}

void sub_1000BA448(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1000BA584(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000BA59C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000BA634(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Client");
  id v2 = (void *)qword_10047BEF0;
  qword_10047BEF0 = (uint64_t)v1;
}

void sub_1000BA6F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5, const char *a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_signpost_emit_with_name_impl(a1, v9, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, a5, a6, &a9, 0x2Cu);
}

void sub_1000BA724(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_impl(a1, v9, OS_LOG_TYPE_INFO, a4, &a9, 0x2Cu);
}

void sub_1000BA744(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0x2Cu);
}

void sub_1000BA764()
{
}

id sub_1000BA78C()
{
  if (qword_10047BEE8 == -1)
  {
    int v0 = (void *)qword_10047BEF0;
  }
  else
  {
    dispatch_once(&qword_10047BEE8, &stru_100452A10);
    int v0 = (void *)qword_10047BEF0;
  }
  return v0;
}

uint64_t sub_1000BA7FC(uint64_t result, long long *a2)
{
  uint64_t v2 = result;
  long long v3 = *a2;
  *(void *)a2 = 0;
  *((void *)a2 + 1) = 0;
  uint64_t v4 = *(std::__shared_weak_count **)(result + 8);
  *(_OWORD *)id result = v3;
  if (v4)
  {
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      return v2;
    }
  }
  return result;
}

uint64_t sub_1000BA884(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 8);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_1000BA900(uint64_t a1)
{
  uint64_t v2 = *(int **)(a1 + 80);
  *(void *)(a1 + 80) = 0;
  if (v2)
  {
    sub_10006D968(v2);
    operator delete();
  }
  if (*(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    uint64_t v3 = *(void *)(a1 + 24);
    *(void *)(a1 + 24) = 0;
    if (!v3) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = 0;
  if (v3) {
LABEL_5:
  }
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
LABEL_6:
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v4 || atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return a1;
}

void sub_1000BAB9C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);

  _Unwind_Resume(a1);
}

void sub_1000BABB8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000BBE00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000BBE74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000BD778()
{
}

uint64_t sub_1000BDB98(uint64_t a1)
{
  uint64_t result = wireless_diagnostics::google::protobuf::MessageLite::SerializeToZeroCopyStream();
  if ((result & 1) == 0)
  {
    uint64_t v3 = sub_1000BDF30();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_FAULT))
    {
      (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 16))(__p, a1);
      uint64_t v4 = v9 >= 0 ? __p : (void **)__p[0];
      *(_DWORD *)buf = 68289795;
      int v11 = 0;
      __int16 v12 = 2082;
      unsigned int v13 = "";
      __int16 v14 = 2081;
      uint64_t v15 = v4;
      __int16 v16 = 2082;
      unint64_t v17 = "assert";
      __int16 v18 = 2081;
      uint64_t v19 = "serialized";
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Failed to serialize-append properly\", \"typename\":%{private, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x30u);
      if (v9 < 0) {
        operator delete(__p[0]);
      }
    }

    unsigned __int8 v5 = sub_1000BDF30();
    if (os_signpost_enabled(v5))
    {
      (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 16))(__p, a1);
      unsigned int v6 = v9 >= 0 ? __p : (void **)__p[0];
      *(_DWORD *)buf = 68289795;
      int v11 = 0;
      __int16 v12 = 2082;
      unsigned int v13 = "";
      __int16 v14 = 2081;
      uint64_t v15 = v6;
      __int16 v16 = 2082;
      unint64_t v17 = "assert";
      __int16 v18 = 2081;
      uint64_t v19 = "serialized";
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v5, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Failed to serialize-append properly", "{\"msg%{public}.0s\":\"Failed to serialize-append properly\", \"typename\":%{private, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x30u);
      if (v9 < 0) {
        operator delete(__p[0]);
      }
    }

    unsigned int v7 = sub_1000BDF30();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
    {
      (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 16))(__p, a1);
      sub_1003A34D4((char *)__p, buf, v7);
    }

    abort_report_np();
    __break(1u);
  }
  return result;
}

void sub_1000BDE50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000BDE78(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Client");
  uint64_t v2 = (void *)qword_10047BEF0;
  qword_10047BEF0 = (uint64_t)v1;
}

void sub_1000BDEBC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100452A40;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1000BDEDC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100452A40;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

id sub_1000BDF30()
{
  if (qword_10047BED8 == -1)
  {
    int v0 = (void *)qword_10047BEE0;
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_100452A80);
    int v0 = (void *)qword_10047BEE0;
  }
  return v0;
}

void sub_1000BDFA0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  uint64_t v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

void sub_1000BDFE4()
{
}

uint64_t sub_1000BE00C(void *a1, uint64_t a2)
{
  return *a1 + (uint64_t)((*(double *)(a2 + 8) + (double)*(uint64_t *)a2) * 1000000000.0);
}

uint64_t sub_1000BE038(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 52) & 0xC) != 0)
  {
    if (qword_10047BED8 != -1)
    {
      dispatch_once(&qword_10047BED8, &stru_100452AC0);
      uint64_t v2 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_FAULT)) {
        return *(void *)(a1 + 40) - (uint64_t)(*(double *)(a1 + 32) * 1000000000.0);
      }
      goto LABEL_4;
    }
    uint64_t v2 = qword_10047BEE0;
    if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_FAULT))
    {
LABEL_4:
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_FAULT, "Can't compute raven time offset to pipelined due to missing info", v4, 2u);
    }
  }
  return *(void *)(a1 + 40) - (uint64_t)(*(double *)(a1 + 32) * 1000000000.0);
}

uint64_t sub_1000BE110(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = a1 + 8;
  sub_1000BEDD0((int64x2_t *)(a1 + 8));
  *(void *)(a1 + 384) = 0;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 376) = off_10045DAB8;
  *(unsigned char *)(a1 + 400) &= 0xFCu;
  *(unsigned char *)(a1 + 424) = 0;
  *(unsigned char *)(a1 + 432) = 0;
  *(unsigned char *)(a1 + 440) = 0;
  *(unsigned char *)(a1 + 448) = 0;
  *(unsigned char *)a1 = 0;
  sub_1000BEF30(v14);
  if (!sub_1000C4EAC(a3, a2, (uint64_t)v14) || !sub_1000BE3AC((uint64_t)v14, v8)) {
    goto LABEL_9;
  }
  *(double *)(a1 + 384) = sub_10014B034(*(double *)(a1 + 216));
  *(double *)(a1 + 392) = sub_10014B034(*(double *)(a1 + 224));
  *(double *)(a1 + 368) = sqrt(*(double *)(a1 + 240) + *(double *)(a1 + 264));
  *(void *)(a1 + 416) = *(void *)(a2 + 40);
  if ((~*(_DWORD *)(a2 + 52) & 0xC) != 0)
  {
    if (qword_10047BED8 == -1)
    {
      char v9 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_FAULT)) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    dispatch_once(&qword_10047BED8, &stru_100452AC0);
    char v9 = qword_10047BEE0;
    if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_FAULT))
    {
LABEL_6:
      LOWORD(v12[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "Can't compute raven time offset to pipelined due to missing info", (uint8_t *)v12, 2u);
    }
  }
LABEL_7:
  *(void *)(a1 + 408) = *(void *)(a2 + 40)
                        - (uint64_t)(*(double *)(a2 + 32) * 1000000000.0)
                        + (uint64_t)((*(double *)(a1 + 24) + (double)*(uint64_t *)(a1 + 16)) * 1000000000.0);
  *(unsigned char *)a1 = 1;
  (*(void (**)(void, uint64_t))(*(void *)*a4 + 16))(*a4, v8);
  (*(void (**)(void *__return_ptr))(*(void *)*a4 + 24))(v12);
  if (v13)
  {
    uint64_t v10 = v12[1];
    *(void *)(a1 + 424) = v12[0];
    *(unsigned char *)(a1 + 432) = 1;
    *(void *)(a1 + 440) = v10;
    *(unsigned char *)(a1 + 448) = 1;
  }
LABEL_9:
  sub_1000C9C38((cnframework::TimestampedEvent *)v14);
  return a1;
}

void sub_1000BE364(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000C9C38((cnframework::TimestampedEvent *)va);
  nullsub_15(v6);
  cnframework::TimestampedEvent::~TimestampedEvent(v5);
  _Unwind_Resume(a1);
}

BOOL sub_1000BE3AC(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)(a1 + 1080)) {
    return 0;
  }
  memset(v40, 0, 360);
  sub_1000BEDD0(v40);
  memcpy((void *)(a2 + 8), &v40[0].u64[1], 0x160uLL);
  cnframework::TimestampedEvent::~TimestampedEvent((cnframework::TimestampedEvent *)v40);
  long long v4 = *(_OWORD *)(a1 + 104);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 120);
  *(_OWORD *)(a2 + 8) = v4;
  long long v5 = *(_OWORD *)(a1 + 136);
  long long v6 = *(_OWORD *)(a1 + 152);
  long long v7 = *(_OWORD *)(a1 + 168);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)(a1 + 184);
  *(_OWORD *)(a2 + 72) = v7;
  *(_OWORD *)(a2 + 56) = v6;
  *(_OWORD *)(a2 + 40) = v5;
  long long v8 = *(_OWORD *)(a1 + 120);
  *(_OWORD *)(a2 + 104) = *(_OWORD *)(a1 + 104);
  *(_OWORD *)(a2 + 120) = v8;
  long long v9 = *(_OWORD *)(a1 + 136);
  long long v10 = *(_OWORD *)(a1 + 152);
  long long v11 = *(_OWORD *)(a1 + 168);
  *(_OWORD *)(a2 + 184) = *(_OWORD *)(a1 + 184);
  *(_OWORD *)(a2 + 168) = v11;
  *(_OWORD *)(a2 + 152) = v10;
  *(_OWORD *)(a2 + 136) = v9;
  *(unsigned char *)(a2 + 200) = 14;
  *(unsigned char *)(a2 + 280) = 1;
  __int16 v12 = *(void **)(a1 + 704);
  *(void *)(a2 + 288) = *v12;
  *(void *)(a2 + 296) = v12[1];
  *(void *)(a2 + 304) = v12[2];
  char v13 = *(void **)(a1 + 880);
  *(void *)(a2 + 312) = *v13;
  *(void *)(a2 + 320) = v13[1];
  *(void *)(a2 + 328) = v13[2];
  int v14 = *(_DWORD *)(a1 + 868);
  *(void *)(a2 + 336) = v13[v14 + 1];
  *(void *)(a2 + 344) = v13[v14 + 2];
  *(void *)(a2 + 352) = v13[2 * v14 + 2];
  double v15 = *(double *)(a1 + 1096);
  if (v15 < 2.0 && v15 > 0.0 && (*(void *)(a1 + 1096) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000) {
    double v18 = *(double *)(a1 + 1096);
  }
  else {
    double v18 = 0.0;
  }
  uint64_t v38 = 0;
  double v39 = 0.0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&v38, 0, 2.0);
  uint64_t v36 = 0;
  double v37 = 0.0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&v36, 0, v18);
  (*(void (**)(uint64_t))(*(void *)a1 + 16))(a1);
  uint64_t v19 = CNTimeSpan::operator-();
  v40[0] = 0uLL;
  unint64_t v21 = (cnprint::CNPrinter *)CNTimeSpan::SetTimeSpan((CNTimeSpan *)v40, 0, fabs(v20 + (double)v19));
  int64x2_t v35 = v40[0];
  if (!v40[0].i64[0] && (v40[0].i64[1] & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    if (v39 < *(double *)&v40[0].i64[1]) {
      goto LABEL_28;
    }
    goto LABEL_31;
  }
  if (!v38)
  {
    double v22 = v39;
    if ((*(void *)&v39 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000) {
      goto LABEL_17;
    }
  }
  if (v40[0].i64[0] == v38)
  {
    double v22 = v39;
LABEL_17:
    if (v22 < *(double *)&v40[0].i64[1])
    {
LABEL_28:
      if (cnprint::CNPrinter::GetLogLevel(v21) <= 1)
      {
        v40[0].i16[0] = 12;
        (*(void (**)(uint64_t))(*(void *)a1 + 16))(a1);
        cnprint::CNPrinter::Print();
      }
      return 0;
    }
    goto LABEL_20;
  }
  if (v40[0].i64[0] > v38) {
    goto LABEL_28;
  }
LABEL_20:
  if (!v40[0].i64[0] && (v40[0].i64[1] & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000) {
    goto LABEL_31;
  }
  if (!v36)
  {
    double v23 = v37;
    if ((*(void *)&v37 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
LABEL_32:
      if (v23 >= *(double *)&v40[0].i64[1]) {
        goto LABEL_40;
      }
      goto LABEL_33;
    }
  }
  if (v40[0].i64[0] == v36)
  {
LABEL_31:
    double v23 = v37;
    goto LABEL_32;
  }
  if (v40[0].i64[0] <= v36) {
    goto LABEL_40;
  }
LABEL_33:
  uint64_t v25 = *(void *)(a1 + 104);
  double v26 = *(double *)(a1 + 112);
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 16))(a1);
  if ((v25 || (*(void *)&v26 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
    && (v27 || (*(void *)&v28 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
    && v25 != v27)
  {
    if (v25 >= v27) {
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v26 < v28)
  {
LABEL_39:
    memset(v40, 0, 96);
    CNTimeSpan::SetTimeSpan((CNTimeSpan *)v40, 0, 0.0);
    v40[1].i8[0] = 0;
    v40[1].i64[1] = 0;
    v40[2].i64[0] = 0;
    CNTimeSpan::SetTimeSpan((CNTimeSpan *)&v40[1].u64[1], 0, 0.0);
    v40[2].i8[8] = 0;
    v40[3] = 0uLL;
    CNTimeSpan::SetTimeSpan((CNTimeSpan *)&v40[3], 0, 0.0);
    v40[4].i8[0] = 0;
    v40[4].i64[1] = 0;
    v40[5].i64[0] = 0;
    CNTimeSpan::SetTimeSpan((CNTimeSpan *)&v40[4].u64[1], 0, 0.0);
    v40[5].i64[1] = 0x7FF8000000000000;
    int64x2_t v29 = v40[3];
    *(int64x2_t *)(a2 + 136) = v40[2];
    *(int64x2_t *)(a2 + 152) = v29;
    int64x2_t v30 = v40[1];
    *(int64x2_t *)(a2 + 104) = v40[0];
    *(int64x2_t *)(a2 + 120) = v30;
    int64x2_t v31 = v40[5];
    *(int64x2_t *)(a2 + 168) = v40[4];
    *(int64x2_t *)(a2 + 184) = v31;
    v40[0] = *(int64x2_t *)(a1 + 104);
    uint64_t v32 = CNTimeSpan::operator+();
    *(void *)(a2 + 104) = v32;
    *(void *)(a2 + 112) = v33;
    *(void *)(a2 + 8) = v32;
    *(void *)(a2 + 16) = v33;
    double v34 = (*(double *)&v35.i64[1] + (double)v35.i64[0]) * 2.5 * ((*(double *)&v35.i64[1] + (double)v35.i64[0]) * 2.5);
    *(double *)(a2 + 312) = *(double *)(a2 + 312) + v34;
    *(double *)(a2 + 336) = *(double *)(a2 + 336) + v34;
    *(double *)(a2 + 352) = v34 + *(double *)(a2 + 352);
  }
LABEL_40:
  if (sub_1000BF27C(a2)) {
    sub_1000BFCD0(a2);
  }
  return (*(unsigned __int8 *)(a2 + 201) | *(unsigned __int8 *)(a2 + 280)) != 0;
}

uint64_t sub_1000BE8B0(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4)
{
  *(unsigned char *)a1 = 0;
  uint64_t v7 = a1 + 8;
  *(void *)(a1 + 8) = &off_100453138;
  memcpy((void *)(a1 + 16), (const void *)(a3 + 8), 0x160uLL);
  *(void *)(a1 + 384) = 0;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 376) = off_10045DAB8;
  *(unsigned char *)(a1 + 400) &= 0xFCu;
  *(unsigned char *)(a1 + 424) = 0;
  *(unsigned char *)(a1 + 432) = 0;
  *(unsigned char *)(a1 + 440) = 0;
  *(unsigned char *)(a1 + 448) = 0;
  *(double *)(a1 + 384) = sub_10014B034(*(double *)(a1 + 216));
  *(double *)(a1 + 392) = sub_10014B034(*(double *)(a1 + 224));
  *(double *)(a1 + 368) = sqrt(*(double *)(a1 + 240) + *(double *)(a1 + 264));
  uint64_t v8 = *a2;
  *(void *)(a1 + 408) = *a2;
  *(void *)(a1 + 416) = v8;
  *(unsigned char *)a1 = 1;
  (*(void (**)(void, uint64_t))(*(void *)*a4 + 16))(*a4, v7);
  (*(void (**)(void *__return_ptr))(*(void *)*a4 + 24))(v11);
  if (v12)
  {
    uint64_t v9 = v11[1];
    *(void *)(a1 + 424) = v11[0];
    *(unsigned char *)(a1 + 432) = 1;
    *(void *)(a1 + 440) = v9;
    *(unsigned char *)(a1 + 448) = 1;
  }
  return a1;
}

void sub_1000BEA1C(_Unwind_Exception *a1)
{
  nullsub_15(v2);
  cnframework::TimestampedEvent::~TimestampedEvent(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000BEA40(unsigned __int8 *a1)
{
  return *a1;
}

void sub_1000BEA48(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = off_10045DEA8;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = off_10045DAB8;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) &= 0xFCu;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_OWORD *)(a2 + 112) = 0u;
  *(void *)(a2 + 128) = 0;
  *(_WORD *)(a2 + 136) &= 0xF800u;
  sub_100041EB8(a2, a1 + 376);
  sub_100041D40(a2, *(double *)(a1 + 368));
  sub_100041B18(a2, *(void *)(a1 + 408));
  sub_100041B20(a2, *(void *)(a1 + 416));
  sub_100041EB0(a2, *(void *)(a1 + 408));
  int v4 = *(unsigned __int8 *)(a1 + 208);
  if (v4 == 14)
  {
    std::to_string(&v5, 0x80u);
    sub_100041D90(a2, &v5);
  }
  else
  {
    if (v4 != 15) {
      return;
    }
    std::to_string(&v5, 0x81u);
    sub_100041D90(a2, &v5);
  }
  if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v5.__r_.__value_.__l.__data_);
  }
}

void sub_1000BEB80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    sub_100041664(v15);
    _Unwind_Resume(a1);
  }
  sub_100041664(v15);
  _Unwind_Resume(a1);
}

void sub_1000BEBC4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = off_10045DB78;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = off_10045DAB8;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) &= 0xFCu;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_OWORD *)(a2 + 112) = 0u;
  *(_OWORD *)(a2 + 128) = 0u;
  *(_OWORD *)(a2 + 144) = 0u;
  *(_OWORD *)(a2 + 160) = 0u;
  *(void *)(a2 + 176) = off_10045DB58;
  *(_DWORD *)(a2 + 184) = 0;
  *(unsigned char *)(a2 + 188) &= ~1u;
  char v4 = *(unsigned char *)(a2 + 194);
  *(_WORD *)(a2 + 192) = 0;
  *(unsigned char *)(a2 + 194) = v4 & 0xFC;
  sub_100041EB8(a2, a1 + 376);
  sub_1000A4708(a2, *(double *)(a1 + 368));
  sub_100041B18(a2, *(void *)(a1 + 408));
  sub_100041B20(a2, *(void *)(a1 + 416));
  sub_100041EB0(a2, *(void *)(a1 + 408));
  if (*(unsigned char *)(a1 + 432)) {
    sub_1000A471C(a2, *(double *)(a1 + 424));
  }
  if (*(unsigned char *)(a1 + 448)) {
    sub_1000A4648(a2, *(double *)(a1 + 440));
  }
  int v5 = *(unsigned __int8 *)(a1 + 208);
  if (v5 == 15)
  {
    std::to_string(&v6, 0x81u);
    sub_1000A46C0(a2, &v6);
  }
  else
  {
    if (v5 != 14) {
      return;
    }
    std::to_string(&v6, 0x80u);
    sub_1000A46C0(a2, &v6);
  }
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
}

void sub_1000BED5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    sub_1000A45A0(v15);
    _Unwind_Resume(a1);
  }
  sub_1000A45A0(v15);
  _Unwind_Resume(a1);
}

void sub_1000BEDA0(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

int64x2_t *sub_1000BEDD0(int64x2_t *a1)
{
  a1->i64[0] = (uint64_t)&off_100453138;
  a1[1].i64[0] = 0;
  a1->i64[1] = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&a1->u64[1], 0, 0.0);
  a1[2].i64[0] = 0;
  a1[1].i8[8] = 0;
  a1[2].i64[1] = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&a1[2], 0, 0.0);
  a1[3].i64[1] = 0;
  a1[3].i8[0] = 0;
  a1[4].i64[0] = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&a1[3].u64[1], 0, 0.0);
  a1[5].i64[0] = 0;
  a1[4].i8[8] = 0;
  a1[5].i64[1] = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&a1[5], 0, 0.0);
  a1[6].i64[1] = 0;
  a1[6].i64[0] = 0x7FF8000000000000;
  a1[7].i64[0] = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&a1[6].u64[1], 0, 0.0);
  a1[8].i64[0] = 0;
  a1[7].i8[8] = 0;
  a1[8].i64[1] = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&a1[8], 0, 0.0);
  a1[9].i64[1] = 0;
  a1[9].i8[0] = 0;
  a1[10].i64[0] = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&a1[9].u64[1], 0, 0.0);
  a1[11].i64[0] = 0;
  a1[10].i8[8] = 0;
  a1[11].i64[1] = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&a1[11], 0, 0.0);
  a1[12].i64[0] = 0x7FF8000000000000;
  a1[12].i16[4] = 0;
  a1[12].i8[10] = 0;
  int64x2_t v2 = vdupq_n_s64(0x7FF8000000000000uLL);
  a1[13] = v2;
  a1[14] = v2;
  a1[15] = v2;
  a1[16] = v2;
  a1[17].i64[0] = 0x7FF8000000000000;
  a1[17].i8[8] = 0;
  a1[18] = v2;
  a1[19] = v2;
  a1[20] = v2;
  a1[21] = v2;
  a1[22].i64[0] = 0x7FF8000000000000;
  return a1;
}

void sub_1000BEF1C(_Unwind_Exception *a1)
{
  cnframework::TimestampedEvent::~TimestampedEvent(v1);
  _Unwind_Resume(a1);
}

int64x2_t *sub_1000BEF30(int64x2_t *a1)
{
  a1->i64[0] = (uint64_t)off_100453108;
  a1[1].i64[0] = 0;
  a1->i64[1] = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&a1->u64[1], 0, 0.0);
  a1[2].i64[0] = 0;
  a1[1].i8[8] = 0;
  a1[2].i64[1] = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&a1[2], 0, 0.0);
  a1[3].i64[1] = 0;
  a1[3].i8[0] = 0;
  a1[4].i64[0] = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&a1[3].u64[1], 0, 0.0);
  a1[5].i64[0] = 0;
  a1[4].i8[8] = 0;
  a1[5].i64[1] = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&a1[5], 0, 0.0);
  a1[6].i64[1] = 0;
  a1[6].i64[0] = 0x7FF8000000000000;
  a1[7].i64[0] = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&a1[6].u64[1], 0, 0.0);
  a1[8].i64[0] = 0;
  a1[7].i8[8] = 0;
  a1[8].i64[1] = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&a1[8], 0, 0.0);
  a1[9].i64[1] = 0;
  a1[9].i8[0] = 0;
  a1[10].i64[0] = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&a1[9].u64[1], 0, 0.0);
  a1[11].i64[0] = 0;
  a1[10].i8[8] = 0;
  a1[11].i64[1] = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&a1[11], 0, 0.0);
  a1[12].i64[0] = 0x7FF8000000000000;
  cntransformation::CNRigidTransformation::CNRigidTransformation((cntransformation::CNRigidTransformation *)&a1[12].u64[1]);
  cntransformation::CNRigidTransformation::CNRigidTransformation((cntransformation::CNRigidTransformation *)&a1[40]);
  a1[67].i8[8] = 0;
  a1[68] = vdupq_n_s64(0x7FF8000000000000uLL);
  return a1;
}

void sub_1000BF074(_Unwind_Exception *a1)
{
  *((void *)v1 + 65) = off_100452B48;
  *((void *)v1 + 51) = off_100452B48;
  *((void *)v1 + 37) = off_100452B48;
  *((void *)v1 + 29) = off_100452B48;
  cnframework::TimestampedEvent::~TimestampedEvent(v1);
  _Unwind_Resume(a1);
}

void sub_1000BF108(_Unwind_Exception *a1)
{
  cnframework::TimestampedEvent::~TimestampedEvent(v1);
  _Unwind_Resume(a1);
}

void *sub_1000BF11C(void *result)
{
  *uint64_t result = off_100452B48;
  return result;
}

void sub_1000BF13C(void *a1)
{
  *a1 = off_100452B48;
  operator delete();
}

uint64_t sub_1000BF16C(uint64_t result)
{
  *(void *)(result + 32) = result + 40;
  return result;
}

void sub_1000BF178(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 8);
  if (v1 >= 2)
  {
    unsigned int v3 = *(_DWORD *)(a1 + 12);
    if (v3 >= 2)
    {
      int v4 = *(_DWORD *)(a1 + 16);
      int v5 = *(_DWORD *)(a1 + 20);
      bzero(v14, v4);
      if (v4 >= 3)
      {
        uint64_t v6 = (v4 - 1);
        uint64_t v7 = *(void *)(a1 + 32);
        uint64_t v8 = 1;
        do
        {
          uint64_t v9 = &v14[v8];
          if (!v14[v8])
          {
            uint64_t v10 = *(void *)(v7 + 8 * v8);
            int v11 = v8;
            do
            {
              int v11 = (int)(v11 * (v3 + v1 - v5)) % (int)v6;
              uint64_t v12 = 8 * v11;
              uint64_t v13 = *(void *)(v7 + v12);
              *(void *)(v7 + v12) = v10;
              *uint64_t v9 = 1;
              uint64_t v9 = &v14[v11];
              uint64_t v10 = v13;
            }
            while (!*v9);
          }
          ++v8;
        }
        while (v8 != v6);
      }
    }
  }
}

BOOL sub_1000BF27C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 280))
  {
    int v1 = 1;
    return v1 != 0;
  }
  int v1 = *(unsigned __int8 *)(a1 + 201);
  if (*(unsigned char *)(a1 + 201))
  {
    int v1 = *(unsigned __int8 *)(a1 + 202);
    if (*(unsigned char *)(a1 + 202))
    {
      long long v163 = 0uLL;
      uint64_t v164 = 0;
      long long v161 = *(_OWORD *)(a1 + 208);
      uint64_t v162 = *(void *)(a1 + 224);
      if (!cnnavigation::LLAToECEF())
      {
        *(_OWORD *)(a1 + 288) = v163;
        *(void *)(a1 + 304) = v164;
        uint64_t v157 = 0x300000003;
        long long __ldb = xmmword_1003E6950;
        v155[9] = off_100452AF0;
        __B = (const double *)v159;
        uint64_t v4 = *(void *)(a1 + 240);
        uint64_t v5 = *(void *)(a1 + 248);
        uint64_t v6 = *(void *)(a1 + 256);
        v159[0] = *(void *)(a1 + 232);
        v159[1] = v4;
        v159[2] = v5;
        v159[3] = v4;
        long long v7 = *(_OWORD *)(a1 + 264);
        v159[4] = v6;
        v159[5] = v7;
        v159[6] = v5;
        long long v160 = v7;
        uint64_t v153 = 0x300000003;
        long long __ldc = xmmword_1003E6950;
        v151[9] = off_100452AF0;
        __A = (double *)v155;
        *(void *)&long long v7 = *(void *)(a1 + 208);
        double v8 = *(double *)(a1 + 216);
        char v146 = 0;
        uint64_t v149 = 0x300000003;
        long long v148 = xmmword_1003E6950;
        v147 = off_100452AF0;
        v150 = v151;
        if (v146)
        {
          *(void *)&long long __ldc = v148;
          uint64_t v9 = (DWORD1(v148) * v148);
          DWORD2(__ldc) = DWORD1(v148) * v148;
          HIDWORD(__ldc) = v148;
          int v10 = DWORD2(v148);
          if (SDWORD2(v148) > 3)
          {
            double v23 = __A;
            uint64_t v24 = v150;
            uint64_t v25 = (DWORD2(v148) - 1) >> 1;
            double v26 = (long long *)v150;
            uint64_t v27 = __A;
            do
            {
              long long v28 = *v26++;
              *(_OWORD *)uint64_t v27 = v28;
              v27 += 2;
              --v25;
            }
            while (v25);
            *(_OWORD *)&v23[v10 - 2] = *(_OWORD *)&v24[v10 - 2];
          }
          else if ((int)v9 >= 1)
          {
            uint64_t v11 = 0;
            uint64_t v12 = v150;
            uint64_t v13 = __A;
            if (v9 < 4) {
              goto LABEL_15;
            }
            if ((unint64_t)((char *)__A - (char *)v150) < 0x20) {
              goto LABEL_15;
            }
            uint64_t v11 = v9 & 0x7FFFFFFC;
            int v14 = (long long *)(v150 + 2);
            uint64_t v15 = __A + 2;
            uint64_t v16 = v9 & 0xFFFFFFFC;
            do
            {
              long long v17 = *v14;
              *((_OWORD *)v15 - 1) = *(v14 - 1);
              *(_OWORD *)uint64_t v15 = v17;
              v14 += 2;
              v15 += 4;
              v16 -= 4;
            }
            while (v16);
            if (v11 != v9)
            {
LABEL_15:
              uint64_t v18 = v9 - v11;
              uint64_t v19 = v11;
              double v20 = &v13[v19];
              unint64_t v21 = &v12[v19];
              do
              {
                uint64_t v22 = *v21++;
                *(void *)v20++ = v22;
                --v18;
              }
              while (v18);
            }
          }
        }
        uint64_t v135 = 0x300000003;
        v131[7] = off_100452AF0;
        int64x2_t v29 = __C;
        v136 = __C;
        uint64_t v30 = __ldc;
        uint64_t v31 = DWORD1(__ldb);
        unint64_t v132 = __PAIR64__(DWORD1(__ldb), __ldc);
        int v133 = DWORD1(__ldb) * __ldc;
        v32.i64[0] = __ldc;
        v32.i64[1] = __ldb;
        int v134 = __ldc;
        uint64_t v33 = __A;
        uint64_t v34 = __ldb;
        if ((int)vmaxvq_u32(v32) > 5)
        {
          cblas_dgemm(CblasColMajor, CblasNoTrans, CblasNoTrans, __ldc, SDWORD1(__ldb), SDWORD1(__ldc), 1.0, __A, __ldc, __B, __ldb, 0.0, __C, __ldc);
          LODWORD(v35) = DWORD1(__ldc);
          LODWORD(v30) = __ldc;
        }
        else
        {
          uint64_t v35 = DWORD1(__ldc);
          if (DWORD1(__ldb)) {
            BOOL v36 = __ldc == 0;
          }
          else {
            BOOL v36 = 1;
          }
          if (!v36)
          {
            if (DWORD1(__ldc))
            {
              double v37 = __B;
              if (DWORD1(__ldc) > 3)
              {
                if (__ldc == 1)
                {
                  unint64_t v71 = DWORD1(__ldc) - (unint64_t)(DWORD1(__ldc) & 0xFFFFFFFC);
                  if (DWORD1(__ldc) == (unint64_t)(DWORD1(__ldc) & 0xFFFFFFFC))
                  {
                    v72 = __B + 2;
                    uint64_t v73 = 8 * __ldb;
                    do
                    {
                      double v74 = 0.0;
                      v75 = (float64x2_t *)(v33 + 2);
                      v76 = (float64x2_t *)v72;
                      uint64_t v77 = v35 & 0xFFFFFFFC;
                      do
                      {
                        float64x2_t v78 = vmulq_f64(v75[-1], v76[-1]);
                        float64x2_t v79 = vmulq_f64(*v75, *v76);
                        double v74 = v74 + v78.f64[0] + v78.f64[1] + v79.f64[0] + v79.f64[1];
                        v76 += 2;
                        v75 += 2;
                        v77 -= 4;
                      }
                      while (v77);
                      __C[v71 * v30] = v74;
                      ++v71;
                      v72 = (const double *)((char *)v72 + v73);
                    }
                    while (v71 != v31);
                  }
                  else
                  {
                    uint64_t v113 = 0;
                    v114 = __B + 2;
                    uint64_t v115 = 8 * __ldb;
                    v116 = __A + 2;
                    v117 = &__B[4 * ((unint64_t)DWORD1(__ldc) >> 2)];
                    v118 = &__A[4 * (DWORD1(__ldc) >> 2) * (unint64_t)__ldc];
                    uint64_t v119 = 8 * __ldc;
                    do
                    {
                      double v120 = 0.0;
                      v121 = (float64x2_t *)v116;
                      v122 = (float64x2_t *)v114;
                      uint64_t v123 = v35 & 0xFFFFFFFC;
                      do
                      {
                        float64x2_t v124 = vmulq_f64(v121[-1], v122[-1]);
                        float64x2_t v125 = vmulq_f64(*v121, *v122);
                        double v120 = v120 + v124.f64[0] + v124.f64[1] + v125.f64[0] + v125.f64[1];
                        v122 += 2;
                        v121 += 2;
                        v123 -= 4;
                      }
                      while (v123);
                      v126 = v118;
                      v127 = (double *)v117;
                      uint64_t v128 = v35 - (v35 & 0xFFFFFFFC);
                      do
                      {
                        double v129 = *v127++;
                        double v120 = v120 + *v126 * v129;
                        v126 = (double *)((char *)v126 + v119);
                        --v128;
                      }
                      while (v128);
                      __C[v113 * v30] = v120;
                      ++v113;
                      v114 = (const double *)((char *)v114 + v115);
                      v117 = (const double *)((char *)v117 + v115);
                    }
                    while (v113 != v31);
                  }
                }
                else
                {
                  uint64_t v97 = 0;
                  do
                  {
                    uint64_t v98 = 0;
                    v99 = v33;
                    do
                    {
                      double v100 = 0.0;
                      v101 = v99;
                      v102 = (double *)v37;
                      uint64_t v103 = v35;
                      do
                      {
                        double v104 = *v102++;
                        double v100 = v100 + *v101 * v104;
                        v101 += v30;
                        --v103;
                      }
                      while (v103);
                      __C[v98 + v97 * v30] = v100;
                      ++v98;
                      ++v99;
                    }
                    while (v98 != v30);
                    ++v97;
                    v37 += v34;
                  }
                  while (v97 != v31);
                }
              }
              else
              {
                uint64_t v38 = 0;
                uint64_t v39 = 8 * __ldc;
                do
                {
                  unint64_t v40 = 0;
                  do
                  {
                    double v41 = v33[v40 / 8] * v37[v38 * v34] + 0.0;
                    if (v35 != 1)
                    {
                      double v41 = v41 + v33[v30 + v40 / 8] * v37[v38 * v34 + 1];
                      if (v35 != 2) {
                        double v41 = v41 + v33[2 * v30 + v40 / 8] * v37[v38 * v34 + 2];
                      }
                    }
                    v29[v40 / 8] = v41;
                    v40 += 8;
                  }
                  while (v39 != v40);
                  ++v38;
                  int64x2_t v29 = (double *)((char *)v29 + v39);
                }
                while (v38 != v31);
              }
            }
            else
            {
              bzero(__C, 8 * __ldc * (unint64_t)DWORD1(__ldb));
              LODWORD(v35) = 0;
            }
          }
        }
        uint64_t v42 = v130;
        if (v35 && v30)
        {
          int v43 = 0;
          int v44 = 0;
          int v45 = HIDWORD(__ldc);
          v46 = __A;
          int v47 = v30 - 1;
          int v48 = v30 & 0xFFFFFFFC;
          do
          {
            if (v30 >= 0xC)
            {
              int v49 = 0;
              if (v35 == 1
                && v44 + v47 >= v44
                && v45 * v44 + v47 >= v45 * v44
                && (unint64_t)((char *)&v130[v44] - (char *)&v46[v45 * v44]) >= 0x20)
              {
                int v50 = 0;
                do
                {
                  v51 = &v46[v43 + v50];
                  long long v52 = *(_OWORD *)v51;
                  long long v53 = *((_OWORD *)v51 + 1);
                  v54 = &v130[v44 + v50];
                  *(_OWORD *)v54 = v52;
                  *((_OWORD *)v54 + 1) = v53;
                  v50 += 4;
                }
                while (v48 != v50);
                int v49 = v30 & 0xFFFFFFFC;
                if (v30 == v48) {
                  goto LABEL_39;
                }
              }
            }
            else
            {
              int v49 = 0;
            }
            int v55 = v44 + v35 * v49;
            do
            {
              v130[v55] = v46[v43 + v49++];
              v55 += v35;
            }
            while (v30 != v49);
LABEL_39:
            ++v44;
            v43 += v45;
          }
          while (v44 != v35);
        }
        uint64_t v142 = 0x300000003;
        *(void *)&__C[9] = off_100452AF0;
        v56 = v144;
        v143 = v144;
        uint64_t v58 = v132;
        unint64_t v57 = HIDWORD(v132);
        int v138 = v132;
        int v139 = v30;
        int v140 = v132 * v30;
        int v141 = v132;
        if (v132 <= HIDWORD(v132)) {
          int v59 = HIDWORD(v132);
        }
        else {
          int v59 = v132;
        }
        if (v35 <= v30) {
          unsigned int v60 = v30;
        }
        else {
          unsigned int v60 = v35;
        }
        if (v59 <= v60) {
          int v59 = v60;
        }
        v61 = v136;
        if (v59 > 5)
        {
          cblas_dgemm(CblasColMajor, CblasNoTrans, CblasNoTrans, v132, v30, SHIDWORD(v132), 1.0, v136, v132, v130, v35, 0.0, v144, v132);
          v56 = v143;
          LODWORD(v58) = v141;
        }
        else if (v30 && v132)
        {
          if (HIDWORD(v132))
          {
            uint64_t v62 = v35;
            if (HIDWORD(v132) > 3)
            {
              if (v132 == 1)
              {
                uint64_t v80 = 0;
                uint64_t v81 = HIDWORD(v132) & 0xFFFFFFFC;
                v82 = (float64x2_t *)v131;
                uint64_t v83 = 8 * v62;
                v84 = &v130[4 * ((unint64_t)HIDWORD(v132) >> 2)];
                do
                {
                  double v85 = 0.0;
                  v86 = (float64x2_t *)(v61 + 2);
                  v87 = v82;
                  uint64_t v88 = v57 & 0xFFFFFFFC;
                  if (v57 == v81)
                  {
                    do
                    {
                      float64x2_t v89 = vmulq_f64(v86[-1], v87[-1]);
                      float64x2_t v90 = vmulq_f64(*v86, *v87);
                      double v85 = v85 + v89.f64[0] + v89.f64[1] + v90.f64[0] + v90.f64[1];
                      v87 += 2;
                      v86 += 2;
                      v88 -= 4;
                    }
                    while (v88);
                  }
                  else
                  {
                    do
                    {
                      float64x2_t v91 = vmulq_f64(v86[-1], v87[-1]);
                      float64x2_t v92 = vmulq_f64(*v86, *v87);
                      double v85 = v85 + v91.f64[0] + v91.f64[1] + v92.f64[0] + v92.f64[1];
                      v87 += 2;
                      v86 += 2;
                      v88 -= 4;
                    }
                    while (v88);
                    v93 = &v61[4 * (v57 >> 2)];
                    v94 = v84;
                    unint64_t v95 = v57 - (v57 & 0xFFFFFFFC);
                    do
                    {
                      double v96 = *v94++;
                      double v85 = v85 + *v93 * v96;
                      v93 += v58;
                      --v95;
                    }
                    while (v95);
                  }
                  v144[v80 * v58] = v85;
                  ++v80;
                  v82 = (float64x2_t *)((char *)v82 + v83);
                  v84 = (double *)((char *)v84 + v83);
                }
                while (v80 != v30);
              }
              else
              {
                uint64_t v105 = 0;
                do
                {
                  uint64_t v106 = 0;
                  v107 = v61;
                  do
                  {
                    double v108 = 0.0;
                    v109 = v107;
                    v110 = v42;
                    unint64_t v111 = v57;
                    do
                    {
                      double v112 = *v110++;
                      double v108 = v108 + *v109 * v112;
                      v109 += v58;
                      --v111;
                    }
                    while (v111);
                    v144[v106 + v105 * v58] = v108;
                    ++v106;
                    ++v107;
                  }
                  while (v106 != v58);
                  ++v105;
                  v42 += v62;
                }
                while (v105 != v30);
              }
            }
            else
            {
              uint64_t v63 = 0;
              uint64_t v64 = 8 * v132;
              v65 = v144;
              do
              {
                unint64_t v66 = 0;
                double v67 = v130[v63 * v62];
                do
                {
                  double v68 = v61[v66 / 8] * v67 + 0.0;
                  if (v57 != 1)
                  {
                    double v68 = v68 + v61[v58 + v66 / 8] * v130[v63 * v62 + 1];
                    if (v57 != 2) {
                      double v68 = v68 + v61[2 * v58 + v66 / 8] * v130[v63 * v62 + 2];
                    }
                  }
                  v65[v66 / 8] = v68;
                  v66 += 8;
                }
                while (v64 != v66);
                ++v63;
                v65 = (double *)((char *)v65 + v64);
              }
              while (v63 != v30);
            }
          }
          else
          {
            bzero(v144, 8 * v30 * (unint64_t)v132);
          }
        }
        *(double *)(a1 + 312) = *v56;
        uint64_t v69 = &v56[(int)v58];
        *(double *)(a1 + 320) = *v69;
        *(double *)(a1 + 328) = v56[2 * (int)v58];
        *(double *)(a1 + 336) = v69[1];
        v70 = &v56[2 * (int)v58];
        *(double *)(a1 + 344) = v70[1];
        *(double *)(a1 + 352) = v70[2];
        *(unsigned char *)(a1 + 280) = 1;
        cnnavigation::ENUToECEFJacobian::~ENUToECEFJacobian((cnnavigation::ENUToECEFJacobian *)&v145);
      }
      int v1 = *(unsigned __int8 *)(a1 + 280);
    }
  }
  return v1 != 0;
}

void sub_1000BFC90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
}

void sub_1000BFCA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
}

void sub_1000BFCB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
}

BOOL sub_1000BFCD0(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 201);
  if (*(unsigned char *)(a1 + 201) && *(unsigned char *)(a1 + 202)) {
    return *(unsigned char *)(a1 + 202) != 0;
  }
  if (!*(unsigned char *)(a1 + 280)) {
    goto LABEL_74;
  }
  long long v162 = *(_OWORD *)(a1 + 288);
  uint64_t v163 = *(void *)(a1 + 304);
  uint64_t v160 = 0;
  long long v161 = 0uLL;
  if (!cnnavigation::ECEFToLLA())
  {
    *(void *)(a1 + 208) = v160;
    *(_OWORD *)(a1 + 216) = v161;
    uint64_t v156 = 0x300000003;
    long long __ldb = xmmword_1003E6950;
    v154[9] = off_100452AF0;
    __B = (const double *)v158;
    uint64_t v4 = *(void *)(a1 + 320);
    uint64_t v5 = *(void *)(a1 + 328);
    uint64_t v6 = *(void *)(a1 + 336);
    v158[0] = *(void *)(a1 + 312);
    v158[1] = v4;
    v158[2] = v5;
    v158[3] = v4;
    long long v7 = *(_OWORD *)(a1 + 344);
    v158[4] = v6;
    v158[5] = v7;
    v158[6] = v5;
    long long v159 = v7;
    uint64_t v152 = 0x300000003;
    long long __ldc = xmmword_1003E6950;
    v150[9] = off_100452AF0;
    __A = (double *)v154;
    char v145 = 0;
    uint64_t v148 = 0x300000003;
    long long v147 = xmmword_1003E6950;
    char v146 = off_100452AF0;
    uint64_t v149 = v150;
    if (v145)
    {
      *(void *)&long long __ldc = v147;
      uint64_t v8 = (DWORD1(v147) * v147);
      DWORD2(__ldc) = DWORD1(v147) * v147;
      HIDWORD(__ldc) = v147;
      int v9 = DWORD2(v147);
      if (SDWORD2(v147) > 3)
      {
        uint64_t v22 = __A;
        double v23 = v149;
        uint64_t v24 = (DWORD2(v147) - 1) >> 1;
        uint64_t v25 = (long long *)v149;
        double v26 = __A;
        do
        {
          long long v27 = *v25++;
          *(_OWORD *)double v26 = v27;
          v26 += 2;
          --v24;
        }
        while (v24);
        *(_OWORD *)&v22[v9 - 2] = *(_OWORD *)&v23[v9 - 2];
      }
      else if ((int)v8 >= 1)
      {
        uint64_t v10 = 0;
        uint64_t v11 = v149;
        uint64_t v12 = __A;
        if (v8 < 4) {
          goto LABEL_15;
        }
        if ((unint64_t)((char *)__A - (char *)v149) < 0x20) {
          goto LABEL_15;
        }
        uint64_t v10 = v8 & 0x7FFFFFFC;
        uint64_t v13 = (long long *)(v149 + 2);
        int v14 = __A + 2;
        uint64_t v15 = v8 & 0xFFFFFFFC;
        do
        {
          long long v16 = *v13;
          *((_OWORD *)v14 - 1) = *(v13 - 1);
          *(_OWORD *)int v14 = v16;
          v13 += 2;
          v14 += 4;
          v15 -= 4;
        }
        while (v15);
        if (v10 != v8)
        {
LABEL_15:
          uint64_t v17 = v8 - v10;
          uint64_t v18 = v10;
          uint64_t v19 = &v12[v18];
          double v20 = &v11[v18];
          do
          {
            uint64_t v21 = *v20++;
            *(void *)v19++ = v21;
            --v17;
          }
          while (v17);
        }
      }
    }
    uint64_t v134 = 0x300000003;
    v130[7] = off_100452AF0;
    long long v28 = __C;
    uint64_t v135 = __C;
    uint64_t v29 = __ldc;
    uint64_t v30 = DWORD1(__ldb);
    unint64_t v131 = __PAIR64__(DWORD1(__ldb), __ldc);
    int v132 = DWORD1(__ldb) * __ldc;
    v31.i64[0] = __ldc;
    v31.i64[1] = __ldb;
    int v133 = __ldc;
    uint32x4_t v32 = __A;
    uint64_t v33 = __ldb;
    if ((int)vmaxvq_u32(v31) > 5)
    {
      cblas_dgemm(CblasColMajor, CblasNoTrans, CblasNoTrans, __ldc, SDWORD1(__ldb), SDWORD1(__ldc), 1.0, __A, __ldc, __B, __ldb, 0.0, __C, __ldc);
      LODWORD(v34) = DWORD1(__ldc);
      LODWORD(v29) = __ldc;
    }
    else
    {
      uint64_t v34 = DWORD1(__ldc);
      if (DWORD1(__ldb)) {
        BOOL v35 = __ldc == 0;
      }
      else {
        BOOL v35 = 1;
      }
      if (!v35)
      {
        if (DWORD1(__ldc))
        {
          BOOL v36 = __B;
          if (DWORD1(__ldc) > 3)
          {
            if (__ldc == 1)
            {
              unint64_t v70 = DWORD1(__ldc) - (unint64_t)(DWORD1(__ldc) & 0xFFFFFFFC);
              if (DWORD1(__ldc) == (unint64_t)(DWORD1(__ldc) & 0xFFFFFFFC))
              {
                unint64_t v71 = __B + 2;
                uint64_t v72 = 8 * __ldb;
                do
                {
                  double v73 = 0.0;
                  double v74 = (float64x2_t *)(v32 + 2);
                  v75 = (float64x2_t *)v71;
                  uint64_t v76 = v34 & 0xFFFFFFFC;
                  do
                  {
                    float64x2_t v77 = vmulq_f64(v74[-1], v75[-1]);
                    float64x2_t v78 = vmulq_f64(*v74, *v75);
                    double v73 = v73 + v77.f64[0] + v77.f64[1] + v78.f64[0] + v78.f64[1];
                    v75 += 2;
                    v74 += 2;
                    v76 -= 4;
                  }
                  while (v76);
                  __C[v70 * v29] = v73;
                  ++v70;
                  unint64_t v71 = (const double *)((char *)v71 + v72);
                }
                while (v70 != v30);
              }
              else
              {
                uint64_t v112 = 0;
                uint64_t v113 = __B + 2;
                uint64_t v114 = 8 * __ldb;
                uint64_t v115 = __A + 2;
                v116 = &__B[4 * ((unint64_t)DWORD1(__ldc) >> 2)];
                v117 = &__A[4 * (DWORD1(__ldc) >> 2) * (unint64_t)__ldc];
                uint64_t v118 = 8 * __ldc;
                do
                {
                  double v119 = 0.0;
                  double v120 = (float64x2_t *)v115;
                  v121 = (float64x2_t *)v113;
                  uint64_t v122 = v34 & 0xFFFFFFFC;
                  do
                  {
                    float64x2_t v123 = vmulq_f64(v120[-1], v121[-1]);
                    float64x2_t v124 = vmulq_f64(*v120, *v121);
                    double v119 = v119 + v123.f64[0] + v123.f64[1] + v124.f64[0] + v124.f64[1];
                    v121 += 2;
                    v120 += 2;
                    v122 -= 4;
                  }
                  while (v122);
                  float64x2_t v125 = v117;
                  v126 = (double *)v116;
                  uint64_t v127 = v34 - (v34 & 0xFFFFFFFC);
                  do
                  {
                    double v128 = *v126++;
                    double v119 = v119 + *v125 * v128;
                    float64x2_t v125 = (double *)((char *)v125 + v118);
                    --v127;
                  }
                  while (v127);
                  __C[v112 * v29] = v119;
                  ++v112;
                  uint64_t v113 = (const double *)((char *)v113 + v114);
                  v116 = (const double *)((char *)v116 + v114);
                }
                while (v112 != v30);
              }
            }
            else
            {
              uint64_t v96 = 0;
              do
              {
                uint64_t v97 = 0;
                uint64_t v98 = v32;
                do
                {
                  double v99 = 0.0;
                  double v100 = v98;
                  v101 = (double *)v36;
                  uint64_t v102 = v34;
                  do
                  {
                    double v103 = *v101++;
                    double v99 = v99 + *v100 * v103;
                    v100 += v29;
                    --v102;
                  }
                  while (v102);
                  __C[v97 + v96 * v29] = v99;
                  ++v97;
                  ++v98;
                }
                while (v97 != v29);
                ++v96;
                v36 += v33;
              }
              while (v96 != v30);
            }
          }
          else
          {
            uint64_t v37 = 0;
            uint64_t v38 = 8 * __ldc;
            do
            {
              unint64_t v39 = 0;
              do
              {
                double v40 = v32[v39 / 8] * v36[v37 * v33] + 0.0;
                if (v34 != 1)
                {
                  double v40 = v40 + v32[v29 + v39 / 8] * v36[v37 * v33 + 1];
                  if (v34 != 2) {
                    double v40 = v40 + v32[2 * v29 + v39 / 8] * v36[v37 * v33 + 2];
                  }
                }
                v28[v39 / 8] = v40;
                v39 += 8;
              }
              while (v38 != v39);
              ++v37;
              long long v28 = (double *)((char *)v28 + v38);
            }
            while (v37 != v30);
          }
        }
        else
        {
          bzero(__C, 8 * __ldc * (unint64_t)DWORD1(__ldb));
          LODWORD(v34) = 0;
        }
      }
    }
    double v41 = v129;
    if (v34 && v29)
    {
      int v42 = 0;
      int v43 = 0;
      int v44 = HIDWORD(__ldc);
      int v45 = __A;
      int v46 = v29 - 1;
      int v47 = v29 & 0xFFFFFFFC;
      do
      {
        if (v29 >= 0xC)
        {
          int v48 = 0;
          if (v34 == 1
            && v43 + v46 >= v43
            && v44 * v43 + v46 >= v44 * v43
            && (unint64_t)((char *)&v129[v43] - (char *)&v45[v44 * v43]) >= 0x20)
          {
            int v49 = 0;
            do
            {
              int v50 = &v45[v42 + v49];
              long long v51 = *(_OWORD *)v50;
              long long v52 = *((_OWORD *)v50 + 1);
              long long v53 = &v129[v43 + v49];
              *(_OWORD *)long long v53 = v51;
              *((_OWORD *)v53 + 1) = v52;
              v49 += 4;
            }
            while (v47 != v49);
            int v48 = v29 & 0xFFFFFFFC;
            if (v29 == v47) {
              goto LABEL_39;
            }
          }
        }
        else
        {
          int v48 = 0;
        }
        int v54 = v43 + v34 * v48;
        do
        {
          v129[v54] = v45[v42 + v48++];
          v54 += v34;
        }
        while (v29 != v48);
LABEL_39:
        ++v43;
        v42 += v44;
      }
      while (v43 != v34);
    }
    uint64_t v141 = 0x300000003;
    *(void *)&__C[9] = off_100452AF0;
    int v55 = v143;
    uint64_t v142 = v143;
    uint64_t v57 = v131;
    unint64_t v56 = HIDWORD(v131);
    int v137 = v131;
    int v138 = v29;
    int v139 = v131 * v29;
    int v140 = v131;
    if (v131 <= HIDWORD(v131)) {
      int v58 = HIDWORD(v131);
    }
    else {
      int v58 = v131;
    }
    if (v34 <= v29) {
      unsigned int v59 = v29;
    }
    else {
      unsigned int v59 = v34;
    }
    if (v58 <= v59) {
      int v58 = v59;
    }
    unsigned int v60 = v135;
    if (v58 > 5)
    {
      cblas_dgemm(CblasColMajor, CblasNoTrans, CblasNoTrans, v131, v29, SHIDWORD(v131), 1.0, v135, v131, v129, v34, 0.0, v143, v131);
      int v55 = v142;
      LODWORD(v57) = v140;
    }
    else if (v29 && v131)
    {
      if (HIDWORD(v131))
      {
        uint64_t v61 = v34;
        if (HIDWORD(v131) > 3)
        {
          if (v131 == 1)
          {
            uint64_t v79 = 0;
            uint64_t v80 = HIDWORD(v131) & 0xFFFFFFFC;
            uint64_t v81 = (float64x2_t *)v130;
            uint64_t v82 = 8 * v61;
            uint64_t v83 = &v129[4 * ((unint64_t)HIDWORD(v131) >> 2)];
            do
            {
              double v84 = 0.0;
              double v85 = (float64x2_t *)(v60 + 2);
              v86 = v81;
              uint64_t v87 = v56 & 0xFFFFFFFC;
              if (v56 == v80)
              {
                do
                {
                  float64x2_t v88 = vmulq_f64(v85[-1], v86[-1]);
                  float64x2_t v89 = vmulq_f64(*v85, *v86);
                  double v84 = v84 + v88.f64[0] + v88.f64[1] + v89.f64[0] + v89.f64[1];
                  v86 += 2;
                  v85 += 2;
                  v87 -= 4;
                }
                while (v87);
              }
              else
              {
                do
                {
                  float64x2_t v90 = vmulq_f64(v85[-1], v86[-1]);
                  float64x2_t v91 = vmulq_f64(*v85, *v86);
                  double v84 = v84 + v90.f64[0] + v90.f64[1] + v91.f64[0] + v91.f64[1];
                  v86 += 2;
                  v85 += 2;
                  v87 -= 4;
                }
                while (v87);
                float64x2_t v92 = &v60[4 * (v56 >> 2)];
                v93 = v83;
                unint64_t v94 = v56 - (v56 & 0xFFFFFFFC);
                do
                {
                  double v95 = *v93++;
                  double v84 = v84 + *v92 * v95;
                  v92 += v57;
                  --v94;
                }
                while (v94);
              }
              v143[v79 * v57] = v84;
              ++v79;
              uint64_t v81 = (float64x2_t *)((char *)v81 + v82);
              uint64_t v83 = (double *)((char *)v83 + v82);
            }
            while (v79 != v29);
          }
          else
          {
            uint64_t v104 = 0;
            do
            {
              uint64_t v105 = 0;
              uint64_t v106 = v60;
              do
              {
                double v107 = 0.0;
                double v108 = v106;
                v109 = v41;
                unint64_t v110 = v56;
                do
                {
                  double v111 = *v109++;
                  double v107 = v107 + *v108 * v111;
                  v108 += v57;
                  --v110;
                }
                while (v110);
                v143[v105 + v104 * v57] = v107;
                ++v105;
                ++v106;
              }
              while (v105 != v57);
              ++v104;
              v41 += v61;
            }
            while (v104 != v29);
          }
        }
        else
        {
          uint64_t v62 = 0;
          uint64_t v63 = 8 * v131;
          uint64_t v64 = v143;
          do
          {
            unint64_t v65 = 0;
            double v66 = v129[v62 * v61];
            do
            {
              double v67 = v60[v65 / 8] * v66 + 0.0;
              if (v56 != 1)
              {
                double v67 = v67 + v60[v57 + v65 / 8] * v129[v62 * v61 + 1];
                if (v56 != 2) {
                  double v67 = v67 + v60[2 * v57 + v65 / 8] * v129[v62 * v61 + 2];
                }
              }
              v64[v65 / 8] = v67;
              v65 += 8;
            }
            while (v63 != v65);
            ++v62;
            uint64_t v64 = (double *)((char *)v64 + v63);
          }
          while (v62 != v29);
        }
      }
      else
      {
        bzero(v143, 8 * v29 * (unint64_t)v131);
      }
    }
    *(double *)(a1 + 232) = *v55;
    double v68 = &v55[(int)v57];
    *(double *)(a1 + 240) = *v68;
    *(double *)(a1 + 248) = v55[2 * (int)v57];
    *(double *)(a1 + 256) = v68[1];
    uint64_t v69 = &v55[2 * (int)v57];
    *(double *)(a1 + 264) = v69[1];
    *(double *)(a1 + 272) = v69[2];
    *(_WORD *)(a1 + 201) = 257;
    cnnavigation::ECEFToENUJacobian::~ECEFToENUJacobian((cnnavigation::ECEFToENUJacobian *)&v144);
    int v2 = *(unsigned __int8 *)(a1 + 201);
LABEL_74:
    if (!v2) {
      return 0;
    }
    return *(unsigned char *)(a1 + 202) != 0;
  }
  if (!*(unsigned char *)(a1 + 201)) {
    return 0;
  }
  return *(unsigned char *)(a1 + 202) != 0;
}

void sub_1000C0708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_1000C071C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

void sub_1000C0730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

uint64_t sub_1000C0748(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 40;
  if (*(unsigned char *)(a1 + 400))
  {
    uint64_t v5 = (uint64_t *)(a1 + 408);
    uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 16))(a2);
    uint64_t v8 = *(void *)(a1 + 408);
    if (v8 || (double v9 = *(double *)(a1 + 416), (*(void *)&v9 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000))
    {
      if (v6) {
        BOOL v10 = 1;
      }
      else {
        BOOL v10 = (*(void *)&v7 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
      }
      if (v10 && v8 != v6)
      {
        if (v8 > v6) {
          goto LABEL_12;
        }
        goto LABEL_16;
      }
      double v9 = *(double *)(a1 + 416);
    }
    if (v9 > v7)
    {
LABEL_12:
      (*(void (**)(uint64_t))(*(void *)a1 + 32))(a1);
      if (*(unsigned char *)(a1 + 400))
      {
        memcpy((void *)(a1 + 48), (const void *)(a2 + 8), 0x160uLL);
      }
      else
      {
        *(void *)(a1 + 40) = &off_100453138;
        memcpy((void *)(a1 + 48), (const void *)(a2 + 8), 0x160uLL);
        *(unsigned char *)(a1 + 400) = 1;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 16))(a2);
      goto LABEL_23;
    }
LABEL_16:
    *(_OWORD *)buf = *(_OWORD *)(a2 + 208);
    v299[0] = *(_OWORD *)(a1 + 248);
    if (sub_10014B314((double *)buf, (double *)v299) < 1.0)
    {
LABEL_17:
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 16))(a2);
LABEL_23:
      *uint64_t v5 = result;
      goto LABEL_24;
    }
    double v13 = *(double *)(a1 + 8);
    *(void *)buf = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 16))(a2);
    *(void *)&buf[8] = v14;
    double v15 = (double)CNTimeSpan::operator-();
    if (v13 < v16 + v15)
    {
      (*(void (**)(uint64_t))(*(void *)a1 + 32))(a1);
      if (*(unsigned char *)(a1 + 400))
      {
        memcpy((void *)(a1 + 48), (const void *)(a2 + 8), 0x160uLL);
      }
      else
      {
        *(void *)(a1 + 40) = &off_100453138;
        memcpy((void *)(a1 + 48), (const void *)(a2 + 8), 0x160uLL);
        *(unsigned char *)(a1 + 400) = 1;
      }
      goto LABEL_17;
    }
    if (!*(unsigned char *)(a1 + 400)) {
      sub_1000C356C();
    }
    if (!*(unsigned char *)(a1 + 320) || !*(unsigned char *)(a2 + 280))
    {
      if (qword_10047BED8 != -1) {
        dispatch_once(&qword_10047BED8, &stru_100452BE8);
      }
      uint64_t v29 = qword_10047BEE0;
      double v30 = 0.0;
      if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_FAULT, "Can't compute course estimation from incomplete position events", buf, 2u);
      }
      char v31 = 0;
      goto LABEL_87;
    }
    *(void *)&double v13 = 0x100000003;
    uint64_t v295 = 0x100000003;
    long long v294 = xmmword_1003E69E0;
    v293 = off_100452C18;
    v296 = v297;
    uint64_t v17 = *(void *)(a1 + 336);
    v297[0] = *(void *)(a1 + 328);
    v297[1] = v17;
    uint64_t v298 = *(void *)(a1 + 344);
    uint64_t v289 = 0x100000003;
    long long v288 = xmmword_1003E69E0;
    v287[9] = off_100452C18;
    v290 = &v291;
    long long v291 = *(_OWORD *)(a2 + 288);
    uint64_t v292 = *(void *)(a2 + 304);
    uint64_t v285 = 0x300000003;
    long long __lda = xmmword_1003E6950;
    v283 = off_100452AF0;
    v286 = v287;
    char v282 = 0;
    memset(v299, 0, 24);
    *(void *)buf = v297[0];
    *(void *)&buf[8] = v17;
    *(void *)&uint8_t buf[16] = v298;
    if (!cnnavigation::ECEFToLLA()) {
      ((void (*)(void (***)(char **), double, double))v281[2])(&v281, *(double *)v299, *((double *)v299 + 1));
    }
    if (!v282)
    {
      if (qword_10047BED8 != -1) {
        dispatch_once(&qword_10047BED8, &stru_100452BE8);
      }
      uint32x4_t v32 = qword_10047BEE0;
      double v30 = 0.0;
      if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO))
      {
        uint64_t v33 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 16))(v4);
        *(_DWORD *)buf = 134283521;
        *(double *)&uint8_t buf[4] = v34 + (double)v33;
        _os_log_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_INFO, "jEcef2Enu computation failed for position event at %{private}.3lf", buf, 0xCu);
      }
      goto LABEL_85;
    }
    uint64_t v277 = 0x300000003;
    v274[0] = off_100452AF0;
    v278 = v279;
    uint64_t __ldc = __lda;
    unint64_t v19 = DWORD1(__lda);
    v274[1] = __lda;
    uint64_t v20 = (DWORD1(__lda) * __lda);
    int v275 = DWORD1(__lda) * __lda;
    int v276 = __lda;
    int v21 = DWORD2(__lda);
    if (SDWORD2(__lda) > 3)
    {
      BOOL v35 = v286;
      uint64_t v36 = (DWORD2(__lda) - 1) >> 1;
      uint64_t v37 = (long long *)v286;
      uint64_t v38 = v279;
      do
      {
        long long v39 = *v37++;
        *(_OWORD *)uint64_t v38 = v39;
        v38 += 2;
        --v36;
      }
      while (v36);
      *(_OWORD *)&v279[v21 - 2] = *(_OWORD *)&v35[v21 - 2];
    }
    else
    {
      if ((int)v20 < 1) {
        goto LABEL_53;
      }
      uint64_t v22 = v286;
      if (v20 < 6 || (unint64_t)((char *)v274 - (char *)v286 + 40) < 0x20)
      {
        uint64_t v23 = 0;
LABEL_36:
        uint64_t v24 = v20 - v23;
        uint64_t v25 = v23;
        double v26 = &v274[v23 + 5];
        long long v27 = &v22[v25];
        do
        {
          uint64_t v28 = *v27++;
          *v26++ = v28;
          --v24;
        }
        while (v24);
        goto LABEL_53;
      }
      uint64_t v23 = v20 & 0x7FFFFFFC;
      v170 = (long long *)(v286 + 2);
      v171 = v280;
      uint64_t v172 = v20 & 0xFFFFFFFC;
      do
      {
        long long v173 = *v170;
        *(v171 - 1) = *(v170 - 1);
        _OWORD *v171 = v173;
        v170 += 2;
        v171 += 2;
        v172 -= 4;
      }
      while (v172);
      if (v23 != v20) {
        goto LABEL_36;
      }
    }
LABEL_53:
    uint64_t v270 = 0x100000003;
    *(void *)&__C[3] = off_100452C18;
    double v40 = __B;
    v271 = __B;
    uint64_t __ldb = v288;
    uint64_t v42 = DWORD1(v288);
    *(void *)&__C[4] = v288;
    uint64_t v43 = (DWORD1(v288) * v288);
    int v268 = v43;
    int v269 = v288;
    if ((int)v43 > 3)
    {
      int v50 = v290;
      long long v51 = v296;
      uint64_t v52 = (v43 - 1) >> 1;
      long long v53 = (float64x2_t *)v290;
      int v54 = (float64x2_t *)v296;
      int v55 = (float64x2_t *)__B;
      do
      {
        float64x2_t v56 = *v53++;
        float64x2_t v57 = v56;
        float64x2_t v58 = *v54++;
        *v55++ = vsubq_f64(v57, v58);
        --v52;
      }
      while (v52);
      *(float64x2_t *)&__B[(v43 - 2)] = vsubq_f64(*(float64x2_t *)((char *)v50 + 8 * (v43 - 2)), *(float64x2_t *)&v51[(v43 - 2)]);
    }
    else if ((int)v43 >= 1)
    {
      int v44 = (double *)v290;
      int v45 = (double *)v296;
      int v46 = __B;
      do
      {
        double v47 = *v44++;
        double v48 = v47;
        double v49 = *v45++;
        *v46++ = v48 - v49;
        --v43;
      }
      while (v43);
    }
    uint64_t v265 = 0x100000003;
    *(void *)&v260[2] = off_100452C18;
    unsigned int v59 = __C;
    v266 = __C;
    int v261 = __ldc;
    int v262 = v42;
    int v263 = v42 * __ldc;
    int v264 = __ldc;
    if (__ldc <= v19) {
      int v60 = v19;
    }
    else {
      int v60 = __ldc;
    }
    if (__ldb <= v42) {
      unsigned int v61 = v42;
    }
    else {
      unsigned int v61 = __ldb;
    }
    if (v60 <= v61) {
      int v60 = v61;
    }
    if (v60 > 5)
    {
      cblas_dgemm(CblasColMajor, CblasNoTrans, CblasNoTrans, __ldc, v42, v19, 1.0, v279, __ldc, __B, __ldb, 0.0, __C, __ldc);
      unsigned int v59 = v266;
    }
    else if (v42 && __ldc)
    {
      if (v19)
      {
        unint64_t v62 = 8 * __ldc;
        if (v19 >= 4)
        {
          uint64_t v174 = 0;
          uint64_t v175 = 8 * __ldb;
          v176 = (float64x2_t *)&v273;
          do
          {
            uint64_t v177 = v174 * __ldc;
            if (__ldc == 1)
            {
              double v178 = 0.0;
              v179 = (float64x2_t *)v280;
              v180 = v176;
              uint64_t v181 = v19 & 0xFFFFFFFC;
              do
              {
                float64x2_t v182 = vmulq_f64(v179[-1], v180[-1]);
                float64x2_t v183 = vmulq_f64(*v179, *v180);
                double v178 = v178 + v182.f64[0] + v182.f64[1] + v183.f64[0] + v183.f64[1];
                v180 += 2;
                v179 += 2 * __ldc;
                v181 -= 4;
              }
              while (v181);
              if ((v19 & 0xFFFFFFFC) != v19)
              {
                v184 = &v279[4 * (v19 >> 2)];
                uint64_t v185 = v19 & 0xFFFFFFFC;
                do
                {
                  double v178 = v178 + *v184 * v40[v185++];
                  v184 = (double *)((char *)v184 + v62);
                }
                while (v19 != v185);
              }
              __C[v177] = v178;
            }
            else
            {
              uint64_t v186 = 0;
              v187 = v279;
              do
              {
                double v188 = 0.0;
                v189 = v187;
                v190 = v40;
                unint64_t v191 = v19;
                do
                {
                  double v192 = *v190++;
                  double v188 = v188 + *v189 * v192;
                  v189 = (double *)((char *)v189 + v62);
                  --v191;
                }
                while (v191);
                __C[v186 + v177] = v188;
                ++v186;
                ++v187;
              }
              while (v186 != __ldc);
            }
            ++v174;
            double v40 = (double *)((char *)v40 + v175);
            v176 = (float64x2_t *)((char *)v176 + v175);
          }
          while (v174 != v42);
        }
        else
        {
          uint64_t v63 = 0;
          uint64_t v64 = __C;
          do
          {
            unint64_t v65 = 0;
            double v66 = __B[v63 * __ldb];
            do
            {
              double v67 = v279[v65 / 8] * v66 + 0.0;
              if (v19 != 1)
              {
                double v67 = v67 + v279[v62 / 8 + v65 / 8] * __B[v63 * __ldb + 1];
                if (v19 != 2) {
                  double v67 = v67 + v279[2 * __ldc + v65 / 8] * __B[v63 * __ldb + 2];
                }
              }
              v64[v65 / 8] = v67;
              v65 += 8;
            }
            while (v62 != v65);
            ++v63;
            uint64_t v64 = (double *)((char *)v64 + v62);
          }
          while (v63 != v42);
        }
      }
      else
      {
        bzero(__C, 8 * __ldc * (unint64_t)v42);
      }
    }
    double v13 = *v59;
    long double v68 = v59[1];
    double v69 = hypot(*v59, v68);
    double v30 = 0.0;
    if (v69 < 1.0 || fabs(v13) <= 0.005 && fabs(v68) <= 0.005)
    {
LABEL_85:
      char v31 = 0;
LABEL_86:
      cnnavigation::ECEFToENUJacobian::~ECEFToENUJacobian((cnnavigation::ECEFToENUJacobian *)&v281);
LABEL_87:
      *(double *)(a1 + 16) = v30;
      *(double *)(a1 + 24) = v13;
      *(unsigned char *)(a1 + 32) = v31;
      if (*(unsigned char *)(a1 + 400))
      {
        memcpy((void *)(a1 + 48), (const void *)(a2 + 8), 0x160uLL);
      }
      else
      {
        *(void *)(a1 + 40) = &off_100453138;
        memcpy((void *)(a1 + 48), (const void *)(a2 + 8), 0x160uLL);
        *(unsigned char *)(a1 + 400) = 1;
      }
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 16))(a2);
      goto LABEL_23;
    }
    double v70 = atan2(v13, v68);
    if (v70 >= 0.0) {
      double v13 = v70;
    }
    else {
      double v13 = v70 + 6.28318531;
    }
    uint64_t v258 = 0x200000001;
    long long __M = xmmword_1003E69F0;
    v256[9] = off_100452C60;
    __A = v260;
    double v71 = 1.0 / (v69 * v69);
    v260[0] = v68 * v71;
    v260[1] = -(*v59 * v71);
    uint64_t v254 = 0x300000003;
    long long v253 = xmmword_1003E6950;
    uint64_t v72 = v256;
    v252[9] = off_100452AF0;
    v255 = v256;
    uint64_t v250 = 0x300000003;
    long long v249 = xmmword_1003E6950;
    v248[9] = off_100452AF0;
    v251 = v252;
    *(void *)buf = &off_100453138;
    memcpy(&buf[8], (const void *)(a1 + 48), 0x160uLL);
    if (!buf[280])
    {
      if (!sub_1000BF27C((uint64_t)buf))
      {
LABEL_98:
        *(void *)&v299[0] = &off_100453138;
        memcpy((char *)v299 + 8, (const void *)(a2 + 8), 0x160uLL);
        if (BYTE8(v299[17]) || sub_1000BF27C((uint64_t)v299))
        {
          long long v249 = xmmword_1003E6950;
          double v73 = v251;
          void *v251 = *((void *)&v299[19] + 1);
          v73[3] = *(void *)&v299[20];
          v73[6] = *((void *)&v299[20] + 1);
          v73[1] = *(void *)&v299[20];
          v73[4] = *(void *)&v299[21];
          v73[7] = *((void *)&v299[21] + 1);
          v73[2] = *((void *)&v299[20] + 1);
          v73[5] = *((void *)&v299[21] + 1);
          v73[8] = *(void *)&v299[22];
        }
        uint64_t v246 = 0x300000003;
        v243[0] = off_100452AF0;
        double v74 = (double *)v248;
        v247 = v248;
        v243[1] = v253;
        uint64_t v75 = (DWORD1(v253) * v253);
        int v244 = v75;
        int v245 = v253;
        if ((int)v75 > 3)
        {
          uint64_t v81 = v255;
          uint64_t v82 = v251;
          uint64_t v83 = (v75 - 1) >> 1;
          double v84 = (float64x2_t *)v255;
          double v85 = (float64x2_t *)v251;
          v86 = (float64x2_t *)v248;
          do
          {
            float64x2_t v87 = *v84++;
            float64x2_t v88 = v87;
            float64x2_t v89 = *v85++;
            *v86++ = vaddq_f64(v88, v89);
            --v83;
          }
          while (v83);
          *(float64x2_t *)&v248[(v75 - 2)] = vaddq_f64(*(float64x2_t *)&v81[(v75 - 2)], *(float64x2_t *)&v82[(v75 - 2)]);
        }
        else if ((int)v75 >= 1)
        {
          uint64_t v76 = (double *)v255;
          float64x2_t v77 = (double *)v251;
          do
          {
            double v78 = *v76++;
            double v79 = v78;
            double v80 = *v77++;
            *v74++ = v79 + v80;
            --v75;
          }
          while (v75);
        }
        uint64_t v240 = 0x300000003;
        long long v239 = xmmword_1003E6950;
        v238 = off_100452AF0;
        v241 = &v242;
        sub_1000C1F44((uint64_t)&v281, (uint64_t)v243, (uint64_t)&v238);
        if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10047D488, memory_order_acquire) & 1) == 0
          && __cxa_guard_acquire(&qword_10047D488))
        {
          uint64_t v228 = 0x200000001;
          v226 = off_100452D30;
          v229 = v230;
          long long v227 = xmmword_1003E69F0;
          *(void *)&v230[0] = &_mh_execute_header;
          sub_1000C24F4((uint64_t)&v226, (uint64_t)&unk_10047D490);
          __cxa_atexit((void (*)(void *))sub_1000C25A4, &unk_10047D490, (void *)&_mh_execute_header);
          __cxa_guard_release(&qword_10047D488);
        }
        sub_1000C2E58((uint64_t)&v226, (uint64_t)&v238, (uint64_t)&unk_10047D490, (uint64_t)&unk_10047D490);
        uint64_t v234 = 0x200000002;
        v231[0] = off_100452DD8;
        uint64_t v91 = v227;
        uint64_t v90 = DWORD1(v227);
        v231[1] = v227;
        uint64_t v92 = (DWORD1(v227) * v227);
        int v232 = DWORD1(v227) * v227;
        int v233 = v227;
        v93 = v236;
        v235 = v236;
        int v94 = DWORD2(v227);
        if (SDWORD2(v227) > 3)
        {
          uint64_t v102 = v229;
          uint64_t v103 = (DWORD2(v227) - 1) >> 1;
          uint64_t v104 = v229;
          uint64_t v105 = v236;
          do
          {
            long long v106 = *(_OWORD *)v104;
            v104 += 2;
            *(_OWORD *)uint64_t v105 = v106;
            v105 += 2;
            --v103;
          }
          while (v103);
          *(_OWORD *)&v236[v94 - 2] = *(_OWORD *)&v102[v94 - 2];
        }
        else
        {
          if ((int)v92 < 1) {
            goto LABEL_121;
          }
          double v95 = v229;
          if (v92 < 6 || (unint64_t)((char *)v231 - (char *)v229 + 40) < 0x20)
          {
            uint64_t v96 = 0;
LABEL_115:
            uint64_t v97 = v92 - v96;
            uint64_t v98 = v96;
            double v99 = &v231[v96 + 5];
            double v100 = &v95[v98];
            do
            {
              uint64_t v101 = *(void *)v100++;
              *v99++ = v101;
              --v97;
            }
            while (v97);
            goto LABEL_121;
          }
          uint64_t v96 = v92 & 0x7FFFFFFC;
          v193 = v229 + 2;
          v194 = v237;
          uint64_t v195 = v92 & 0xFFFFFFFC;
          do
          {
            long long v196 = *(_OWORD *)v193;
            *(v194 - 1) = *((_OWORD *)v193 - 1);
            _OWORD *v194 = v196;
            v193 += 4;
            v194 += 2;
            v195 -= 4;
          }
          while (v195);
          if (v96 != v92) {
            goto LABEL_115;
          }
        }
LABEL_121:
        uint64_t v228 = 0x200000001;
        v226 = off_100452C60;
        double v107 = v230;
        v229 = v230;
        uint64_t v108 = __M;
        unint64_t v109 = DWORD1(__M);
        *(void *)&long long v227 = __PAIR64__(v90, __M);
        DWORD2(v227) = __M * v90;
        HIDWORD(v227) = __M;
        if (__M <= DWORD1(__M)) {
          int v110 = DWORD1(__M);
        }
        else {
          int v110 = __M;
        }
        if (v91 <= v90) {
          unsigned int v111 = v90;
        }
        else {
          unsigned int v111 = v91;
        }
        if (v110 <= v111) {
          int v110 = v111;
        }
        uint64_t v112 = __A;
        if (v110 > 5)
        {
          cblas_dgemm(CblasColMajor, CblasNoTrans, CblasNoTrans, __M, v90, SDWORD1(__M), 1.0, __A, __M, v236, v91, 0.0, v230, __M);
          LODWORD(v109) = DWORD1(__M);
          LODWORD(v108) = __M;
        }
        else if (v90 && __M)
        {
          if (DWORD1(__M))
          {
            if (DWORD1(__M) >= 4)
            {
              uint64_t v197 = 0;
              uint64_t v198 = 8 * v91;
              uint64_t v199 = 8 * __M;
              v200 = (float64x2_t *)v237;
              do
              {
                uint64_t v201 = v197 * v108;
                if (v108 == 1)
                {
                  double v202 = 0.0;
                  v203 = (float64x2_t *)(v112 + 2);
                  v204 = v200;
                  uint64_t v205 = v109 & 0xFFFFFFFC;
                  do
                  {
                    float64x2_t v206 = vmulq_f64(v203[-1], v204[-1]);
                    float64x2_t v207 = vmulq_f64(*v203, *v204);
                    double v202 = v202 + v206.f64[0] + v206.f64[1] + v207.f64[0] + v207.f64[1];
                    v204 += 2;
                    v203 += 2 * v108;
                    v205 -= 4;
                  }
                  while (v205);
                  if ((v109 & 0xFFFFFFFC) != v109)
                  {
                    v208 = &v112[4 * (v109 >> 2)];
                    uint64_t v209 = v109 & 0xFFFFFFFC;
                    do
                    {
                      double v202 = v202 + *v208 * v93[v209++];
                      v208 = (double *)((char *)v208 + v199);
                    }
                    while (v109 != v209);
                  }
                  v230[v201] = v202;
                }
                else
                {
                  uint64_t v210 = 0;
                  v211 = v112;
                  do
                  {
                    double v212 = 0.0;
                    v213 = v211;
                    v214 = v93;
                    unint64_t v215 = v109;
                    do
                    {
                      double v216 = *v214++;
                      double v212 = v212 + *v213 * v216;
                      v213 = (double *)((char *)v213 + v199);
                      --v215;
                    }
                    while (v215);
                    v230[v210 + v201] = v212;
                    ++v210;
                    ++v211;
                  }
                  while (v210 != v108);
                }
                ++v197;
                v93 = (double *)((char *)v93 + v198);
                v200 = (float64x2_t *)((char *)v200 + v198);
              }
              while (v197 != v90);
            }
            else
            {
              uint64_t v113 = 0;
              uint64_t v114 = 8 * __M;
              do
              {
                unint64_t v115 = 0;
                double v116 = v236[v113 * v91];
                do
                {
                  double v117 = v112[v115 / 8] * v116 + 0.0;
                  if (v109 != 1)
                  {
                    double v117 = v117 + v112[v108 + v115 / 8] * v236[v113 * v91 + 1];
                    if (v109 != 2) {
                      double v117 = v117 + v112[2 * v108 + v115 / 8] * v236[v113 * v91 + 2];
                    }
                  }
                  v107[v115 / 8] = v117;
                  v115 += 8;
                }
                while (v114 != v115);
                ++v113;
                double v107 = (double *)((char *)v107 + v114);
              }
              while (v113 != v90);
            }
          }
          else
          {
            bzero(v230, 8 * v90 * (unint64_t)__M);
            LODWORD(v109) = 0;
          }
        }
        if (!v109 || !v108)
        {
LABEL_159:
          uint64_t v223 = 0x100000001;
          v218 = off_100452E08;
          unint64_t v131 = &v225;
          v224 = &v225;
          uint64_t v132 = v227;
          unint64_t v133 = DWORD1(v227);
          int v219 = v227;
          int v220 = v108;
          int v221 = v227 * v108;
          int v222 = v227;
          if (v227 <= DWORD1(v227)) {
            int v134 = DWORD1(v227);
          }
          else {
            int v134 = v227;
          }
          if (v109 <= v108) {
            unsigned int v135 = v108;
          }
          else {
            unsigned int v135 = v109;
          }
          if (v134 <= v135) {
            int v134 = v135;
          }
          v136 = v229;
          if (v134 > 5)
          {
            cblas_dgemm(CblasColMajor, CblasNoTrans, CblasNoTrans, v227, v108, SDWORD1(v227), 1.0, v229, v227, v217, v109, 0.0, &v225, v227);
            unint64_t v131 = v224;
          }
          else if (v108 && v227)
          {
            uint64_t v137 = v108;
            if (DWORD1(v227))
            {
              uint64_t v138 = 0;
              uint64_t v139 = v109;
              uint64_t v140 = DWORD1(v227) & 0xFFFFFFFC;
              uint64_t v141 = 8 * v109;
              unint64_t v142 = 8 * v227;
              v143 = &v218;
              uint64_t v144 = 32 * v227;
              char v145 = &v229[2 * v227];
              char v146 = &v229[v142 / 8];
              long long v147 = &v225;
              uint64_t v148 = v217;
              do
              {
                if (v133 > 3)
                {
                  uint64_t v152 = v138 * v132;
                  if (v132 == 1)
                  {
                    double v153 = 0.0;
                    v154 = (float64x2_t *)(v136 + 2);
                    v155 = (float64x2_t *)v143;
                    uint64_t v156 = v133 & 0xFFFFFFFC;
                    do
                    {
                      float64x2_t v157 = vmulq_f64(v154[-1], v155[-1]);
                      float64x2_t v158 = vmulq_f64(*v154, *v155);
                      double v153 = v153 + v157.f64[0] + v157.f64[1] + v158.f64[0] + v158.f64[1];
                      v155 += 2;
                      v154 = (float64x2_t *)((char *)v154 + v144);
                      v156 -= 4;
                    }
                    while (v156);
                    if (v140 != v133)
                    {
                      long long v159 = &v136[4 * (v133 >> 2)];
                      uint64_t v160 = v133 & 0xFFFFFFFC;
                      do
                      {
                        double v153 = v153 + *v159 * v148[v160++];
                        long long v159 = (double *)((char *)v159 + v142);
                      }
                      while (v133 != v160);
                    }
                    *(&v225 + v152) = v153;
                  }
                  else
                  {
                    uint64_t v161 = 0;
                    long long v162 = v136;
                    do
                    {
                      double v163 = 0.0;
                      uint64_t v164 = v162;
                      v165 = v148;
                      unint64_t v166 = v133;
                      do
                      {
                        double v167 = *v165++;
                        double v163 = v163 + *v164 * v167;
                        uint64_t v164 = (double *)((char *)v164 + v142);
                        --v166;
                      }
                      while (v166);
                      *(&v225 + v161 + v152) = v163;
                      ++v161;
                      ++v162;
                    }
                    while (v161 != v132);
                  }
                }
                else
                {
                  unint64_t v149 = 0;
                  double v150 = v217[v138 * v139];
                  do
                  {
                    double v151 = v136[v149 / 8] * v150 + 0.0;
                    if (v133 != 1)
                    {
                      double v151 = v151 + v146[v149 / 8] * v217[v138 * v139 + 1];
                      if (v133 != 2) {
                        double v151 = v151 + v145[v149 / 8] * v217[v138 * v139 + 2];
                      }
                    }
                    v147[v149 / 8] = v151;
                    v149 += 8;
                  }
                  while (v142 != v149);
                }
                ++v138;
                uint64_t v148 = (double *)((char *)v148 + v141);
                v143 = (uint64_t (***)())((char *)v143 + v141);
                long long v147 = (double *)((char *)v147 + v142);
              }
              while (v138 != v137);
            }
            else
            {
              bzero(&v225, 8 * v108 * (unint64_t)v227);
            }
          }
          char v31 = 0;
          double v168 = *v131;
          double v30 = 0.0;
          if ((*(void *)v131 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL && v168 >= 0.0)
          {
            double v169 = sqrt(v168);
            if (v169 <= 1.57079633)
            {
              double v30 = sub_10014B034(v13);
              double v13 = sub_10014B034(v169);
              char v31 = 1;
            }
            else
            {
              char v31 = 0;
            }
          }
          cnframework::TimestampedEvent::~TimestampedEvent((cnframework::TimestampedEvent *)v299);
          cnframework::TimestampedEvent::~TimestampedEvent((cnframework::TimestampedEvent *)buf);
          goto LABEL_86;
        }
        int v118 = 0;
        int v119 = 0;
        int v120 = HIDWORD(__M);
        v121 = __A;
        int v122 = v108 - 1;
        int v123 = v108 & 0xFFFFFFFC;
        while (1)
        {
          if (v108 >= 0xC)
          {
            int v124 = 0;
            if (v109 == 1
              && v119 + v122 >= v119
              && v120 * v119 + v122 >= v120 * v119
              && (unint64_t)((char *)&v217[v119] - (char *)&v121[v120 * v119]) >= 0x20)
            {
              int v126 = 0;
              do
              {
                uint64_t v127 = &v121[v118 + v126];
                long long v128 = *(_OWORD *)v127;
                long long v129 = *((_OWORD *)v127 + 1);
                v130 = &v217[v119 + v126];
                *(_OWORD *)v130 = v128;
                *((_OWORD *)v130 + 1) = v129;
                v126 += 4;
              }
              while (v123 != v126);
              int v124 = v108 & 0xFFFFFFFC;
              if (v108 == v123) {
                goto LABEL_145;
              }
            }
          }
          else
          {
            int v124 = 0;
          }
          int v125 = v119 + v109 * v124;
          do
          {
            v217[v125] = v121[v118 + v124++];
            v125 += v109;
          }
          while (v108 != v124);
LABEL_145:
          ++v119;
          v118 += v120;
          if (v119 == v109) {
            goto LABEL_159;
          }
        }
      }
      uint64_t v72 = v255;
    }
    long long v253 = xmmword_1003E6950;
    void *v72 = *(void *)&buf[312];
    v72[3] = *(void *)&buf[320];
    v72[6] = *(void *)&buf[328];
    v72[1] = *(void *)&buf[320];
    v72[4] = *(void *)&buf[336];
    v72[7] = *(void *)&buf[344];
    v72[2] = *(void *)&buf[328];
    v72[5] = *(void *)&buf[344];
    v72[8] = *(void *)&buf[352];
    goto LABEL_98;
  }
  *(void *)(a1 + 40) = &off_100453138;
  memcpy((void *)(a1 + 48), (const void *)(a2 + 8), 0x160uLL);
  *(unsigned char *)(a1 + 400) = 1;
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 16))(a2);
  *(void *)(a1 + 408) = result;
LABEL_24:
  *(void *)(a1 + 416) = v12;
  return result;
}

void sub_1000C1DC8(_Unwind_Exception *a1)
{
}

void sub_1000C1E30(_Unwind_Exception *a1)
{
}

void sub_1000C1E44(_Unwind_Exception *a1)
{
}

void sub_1000C1E58(_Unwind_Exception *a1)
{
}

uint64_t sub_1000C1E70(uint64_t a1)
{
  *(void *)a1 = off_100452B78;
  if (*(unsigned char *)(a1 + 400)) {
    cnframework::TimestampedEvent::~TimestampedEvent((cnframework::TimestampedEvent *)(a1 + 40));
  }
  return a1;
}

void sub_1000C1EC0(uint64_t a1)
{
  *(void *)a1 = off_100452B78;
  if (*(unsigned char *)(a1 + 400)) {
    cnframework::TimestampedEvent::~TimestampedEvent((cnframework::TimestampedEvent *)(a1 + 40));
  }

  operator delete();
}

__n128 sub_1000C1F30@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = a1[1];
  *a2 = result;
  a2[1].n128_u64[0] = a1[2].n128_u64[0];
  return result;
}

BOOL sub_1000C1F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v108 = 0x300000003;
    long long v106 = off_100452AF0;
    long long __ldc = xmmword_1003E6950;
    __A = (double *)&v110;
    sub_1000C2808(a1 + 16, a2, (uint64_t)&v106);
    uint64_t v6 = *(unsigned int *)(a1 + 24);
    uint64_t v7 = *(int *)(a1 + 28);
    uint64_t __ldb = *(unsigned int *)(a1 + 28);
    uint64_t v102 = 0x300000003;
    uint64_t v97 = off_100452AF0;
    double v9 = __B;
    uint64_t v103 = __B;
    int v98 = v7;
    int v99 = v6;
    int v100 = v6 * v7;
    int v101 = v7;
    if (v7 && v6)
    {
      int v10 = *(_DWORD *)(a1 + 36);
      uint64_t v11 = *(void *)(a1 + 48);
      if (v6 >= 0xC)
      {
        int v51 = 0;
        int v52 = 0;
        int v53 = v6 - 1;
        int v54 = v6 & 0xFFFFFFFC;
        do
        {
          int v55 = 0;
          if (v7 != 1) {
            goto LABEL_53;
          }
          if (v52 + v53 < v52) {
            goto LABEL_53;
          }
          if (v10 * v52 + v53 < v10 * v52) {
            goto LABEL_53;
          }
          if ((unint64_t)&__B[v52] - v11 + -8 * v10 * v52 < 0x20) {
            goto LABEL_53;
          }
          int v56 = 0;
          do
          {
            float64x2_t v57 = (long long *)(v11 + 8 * (v51 + v56));
            long long v58 = *v57;
            long long v59 = v57[1];
            int v60 = &__B[v52 + v56];
            *(_OWORD *)int v60 = v58;
            *((_OWORD *)v60 + 1) = v59;
            v56 += 4;
          }
          while (v54 != v56);
          int v55 = v6 & 0xFFFFFFFC;
          if (v6 != v54)
          {
LABEL_53:
            int v61 = v52 + __ldb * v55;
            do
            {
              __B[v61] = *(double *)(v11 + 8 * (v51 + v55++));
              v61 += __ldb;
            }
            while (v6 != v55);
          }
          ++v52;
          v51 += v10;
        }
        while (v52 != __ldb);
      }
      else
      {
        int v12 = 0;
        int v13 = 0;
        do
        {
          uint64_t v14 = &__B[v13];
          int v15 = v6;
          double v16 = (uint64_t *)(v11 + 8 * v12);
          do
          {
            uint64_t v17 = *v16++;
            *(void *)uint64_t v14 = v17;
            v14 += v7;
            --v15;
          }
          while (v15);
          ++v13;
          v12 += v10;
        }
        while (v13 != v7);
      }
    }
    uint64_t v116 = 0x300000003;
    unsigned int v111 = off_100452AF0;
    uint64_t v18 = __C;
    double v117 = __C;
    uint64_t v19 = __ldc;
    uint64_t v20 = DWORD1(__ldc);
    int v112 = __ldc;
    int v113 = v6;
    int v114 = __ldc * v6;
    int v115 = __ldc;
    if (__ldc <= DWORD1(__ldc)) {
      unsigned int v21 = DWORD1(__ldc);
    }
    else {
      unsigned int v21 = __ldc;
    }
    if (v7 <= v6) {
      LODWORD(v7) = v6;
    }
    if (v21 > v7) {
      LODWORD(v7) = v21;
    }
    uint64_t v22 = __A;
    if ((int)v7 > 5)
    {
      cblas_dgemm(CblasColMajor, CblasNoTrans, CblasNoTrans, __ldc, v6, SDWORD1(__ldc), 1.0, __A, __ldc, __B, __ldb, 0.0, __C, __ldc);
    }
    else if (v6 && __ldc)
    {
      if (DWORD1(__ldc))
      {
        if (DWORD1(__ldc) > 3)
        {
          if (__ldc == 1)
          {
            uint64_t v62 = DWORD1(__ldc) & 0xFFFFFFFC;
            uint64_t v63 = DWORD1(__ldc) - v62;
            if (DWORD1(__ldc) == v62)
            {
              uint64_t v64 = (float64x2_t *)v105;
              uint64_t v65 = 8 * __ldb;
              do
              {
                double v66 = 0.0;
                double v67 = (float64x2_t *)(v22 + 2);
                long double v68 = v64;
                uint64_t v69 = v20 & 0xFFFFFFFC;
                do
                {
                  float64x2_t v70 = vmulq_f64(v67[-1], v68[-1]);
                  float64x2_t v71 = vmulq_f64(*v67, *v68);
                  double v66 = v66 + v70.f64[0] + v70.f64[1] + v71.f64[0] + v71.f64[1];
                  v68 += 2;
                  v67 += 2 * v19;
                  v69 -= 4;
                }
                while (v69);
                __C[v63 * v19] = v66;
                ++v63;
                uint64_t v64 = (float64x2_t *)((char *)v64 + v65);
              }
              while (v63 != v6);
            }
            else
            {
              uint64_t v81 = 0;
              uint64_t v82 = (float64x2_t *)v105;
              uint64_t v83 = 8 * __ldb;
              double v84 = __A + 2;
              double v85 = &__B[4 * ((unint64_t)DWORD1(__ldc) >> 2)];
              v86 = &__A[4 * (DWORD1(__ldc) >> 2)];
              do
              {
                double v87 = 0.0;
                float64x2_t v88 = (float64x2_t *)v84;
                float64x2_t v89 = v82;
                uint64_t v90 = v62;
                do
                {
                  float64x2_t v91 = vmulq_f64(v88[-1], v89[-1]);
                  float64x2_t v92 = vmulq_f64(*v88, *v89);
                  double v87 = v87 + v91.f64[0] + v91.f64[1] + v92.f64[0] + v92.f64[1];
                  v89 += 2;
                  v88 += 2 * v19;
                  v90 -= 4;
                }
                while (v90);
                v93 = v86;
                int v94 = v85;
                uint64_t v95 = v63;
                do
                {
                  double v96 = *v94++;
                  double v87 = v87 + *v93 * v96;
                  v93 += v19;
                  --v95;
                }
                while (v95);
                __C[v81 * v19] = v87;
                ++v81;
                uint64_t v82 = (float64x2_t *)((char *)v82 + v83);
                double v85 = (double *)((char *)v85 + v83);
              }
              while (v81 != v6);
            }
          }
          else
          {
            uint64_t v72 = 0;
            uint64_t v73 = 8 * __ldb;
            do
            {
              uint64_t v74 = 0;
              uint64_t v75 = v22;
              do
              {
                double v76 = 0.0;
                float64x2_t v77 = v75;
                double v78 = v9;
                uint64_t v79 = v20;
                do
                {
                  double v80 = *v78++;
                  double v76 = v76 + *v77 * v80;
                  v77 += v19;
                  --v79;
                }
                while (v79);
                __C[v74 + v72 * v19] = v76;
                ++v74;
                ++v75;
              }
              while (v74 != v19);
              ++v72;
              double v9 = (double *)((char *)v9 + v73);
            }
            while (v72 != v6);
          }
        }
        else
        {
          uint64_t v23 = 0;
          uint64_t v24 = 8 * __ldc;
          do
          {
            unint64_t v25 = 0;
            double v26 = __B[v23 * __ldb];
            do
            {
              double v27 = v22[v25 / 8] * v26 + 0.0;
              if (v20 != 1)
              {
                double v27 = v27 + v22[v19 + v25 / 8] * __B[v23 * __ldb + 1];
                if (v20 != 2) {
                  double v27 = v27 + v22[2 * v19 + v25 / 8] * __B[v23 * __ldb + 2];
                }
              }
              v18[v25 / 8] = v27;
              v25 += 8;
            }
            while (v24 != v25);
            ++v23;
            uint64_t v18 = (double *)((char *)v18 + v24);
          }
          while (v23 != v6);
        }
      }
      else
      {
        bzero(__C, 8 * v6 * (unint64_t)__ldc);
      }
    }
    if (&v111 != (uint64_t (***)())a3)
    {
      int v29 = v112;
      int v28 = v113;
      *(_DWORD *)(a3 + 8) = v112;
      *(_DWORD *)(a3 + 12) = v28;
      uint64_t v30 = (v28 * v29);
      *(_DWORD *)(a3 + 16) = v30;
      *(_DWORD *)(a3 + 20) = v29;
      if (v114 > 3)
      {
        uint64_t v43 = (v114 - 2);
        int v44 = *(_OWORD **)(a3 + 32);
        int v45 = v117;
        uint64_t v46 = (v114 - 1) >> 1;
        double v47 = v117;
        double v48 = v44;
        do
        {
          long long v49 = *(_OWORD *)v47;
          v47 += 2;
          *v48++ = v49;
          --v46;
        }
        while (v46);
        *(_OWORD *)((char *)v44 + 8 * v43) = *(_OWORD *)&v45[v43];
      }
      else if ((int)v30 >= 1)
      {
        uint64_t v31 = 0;
        uint32x4_t v32 = v117;
        uint64_t v33 = *(void *)(a3 + 32);
        if (v30 < 4) {
          goto LABEL_37;
        }
        if ((unint64_t)(v33 - (void)v117) < 0x20) {
          goto LABEL_37;
        }
        uint64_t v31 = v30 & 0x7FFFFFFC;
        double v34 = (long long *)(v117 + 2);
        BOOL v35 = (_OWORD *)(v33 + 16);
        uint64_t v36 = v30 & 0xFFFFFFFC;
        do
        {
          long long v37 = *v34;
          *(v35 - 1) = *(v34 - 1);
          *BOOL v35 = v37;
          v34 += 2;
          v35 += 2;
          v36 -= 4;
        }
        while (v36);
        if (v31 != v30)
        {
LABEL_37:
          uint64_t v38 = v30 - v31;
          uint64_t v39 = v31;
          double v40 = (void *)(v33 + v39 * 8);
          double v41 = &v32[v39];
          do
          {
            uint64_t v42 = *(void *)v41++;
            *v40++ = v42;
            --v38;
          }
          while (v38);
        }
      }
    }
  }
  return v3 != 0;
}

uint64_t sub_1000C24F4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *(_DWORD *)(result + 8);
  int v2 = *(_DWORD *)(result + 12);
  *(void *)(a2 + 24) = 0x100000002;
  *(void *)a2 = off_100452CA8;
  *(void *)(a2 + 32) = a2 + 40;
  *(_DWORD *)(a2 + 8) = v2;
  *(_DWORD *)(a2 + 12) = v3;
  *(_DWORD *)(a2 + 16) = v3 * v2;
  *(_DWORD *)(a2 + 20) = v2;
  if (v2 && v3)
  {
    int v4 = 0;
    int v5 = 0;
    uint64_t v6 = *(void *)(result + 32);
    int v7 = *(_DWORD *)(result + 20);
    do
    {
      for (int i = 0; i != v3; ++i)
      {
        __n128 result = (v5 + *(_DWORD *)(a2 + 20) * i);
        *(_DWORD *)(a2 + 40 + 4 * (int)result) = *(_DWORD *)(v6 + 4 * (v4 + i));
      }
      ++v5;
      v4 += v7;
    }
    while (v5 != v2);
  }
  return result;
}

void *sub_1000C2584(void *result)
{
  *__n128 result = off_100452D00;
  return result;
}

void *sub_1000C25A4(void *result)
{
  *__n128 result = off_100452D00;
  return result;
}

void *sub_1000C25C4(void *result)
{
  result[16] = off_100452D00;
  result[10] = off_100452D00;
  *__n128 result = off_100452B48;
  return result;
}

void *sub_1000C2624(void *result)
{
  *__n128 result = off_100452B48;
  return result;
}

void *sub_1000C2644(void *result)
{
  *__n128 result = off_100452B48;
  return result;
}

void *sub_1000C2664(void *result)
{
  *__n128 result = off_100452B48;
  return result;
}

void *sub_1000C2684(void *result)
{
  *__n128 result = off_100452B48;
  return result;
}

void *sub_1000C26A4(void *result)
{
  *__n128 result = off_100452B48;
  return result;
}

void sub_1000C26C4(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

void sub_1000C26F4(void *a1)
{
  *a1 = off_100452B48;
  operator delete();
}

uint64_t sub_1000C2724(uint64_t result)
{
  *(void *)(result + 32) = result + 40;
  return result;
}

void sub_1000C2730(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 8);
  if (v1 >= 2)
  {
    unsigned int v3 = *(_DWORD *)(a1 + 12);
    if (v3 >= 2)
    {
      int v4 = *(_DWORD *)(a1 + 16);
      int v5 = *(_DWORD *)(a1 + 20);
      bzero(v14, v4);
      if (v4 >= 3)
      {
        uint64_t v6 = (v4 - 1);
        uint64_t v7 = *(void *)(a1 + 32);
        uint64_t v8 = 1;
        do
        {
          double v9 = &v14[v8];
          if (!v14[v8])
          {
            uint64_t v10 = *(void *)(v7 + 8 * v8);
            int v11 = v8;
            do
            {
              int v11 = (int)(v11 * (v3 + v1 - v5)) % (int)v6;
              uint64_t v12 = 8 * v11;
              uint64_t v13 = *(void *)(v7 + v12);
              *(void *)(v7 + v12) = v10;
              *double v9 = 1;
              double v9 = &v14[v11];
              uint64_t v10 = v13;
            }
            while (!*v9);
          }
          ++v8;
        }
        while (v8 != v6);
      }
    }
  }
}

void sub_1000C2808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t __ldc = *(void *)(a1 + 8);
  uint64_t __ldb = *(void *)(a2 + 8);
  uint64_t v5 = __ldc;
  *(void *)(a3 + 8) = __PAIR64__(HIDWORD(__ldb), __ldc);
  uint64_t v6 = HIDWORD(__ldb);
  *(_DWORD *)(a3 + 16) = HIDWORD(__ldb) * __ldc;
  *(_DWORD *)(a3 + 20) = __ldc;
  v7.i64[0] = __ldc;
  v7.i64[1] = __ldb;
  uint64_t v8 = *(const double **)(a1 + 32);
  if ((int)vmaxvq_u32(v7) > 5)
  {
    cblas_dgemm(CblasColMajor, CblasNoTrans, CblasNoTrans, __ldc, SHIDWORD(__ldb), SHIDWORD(__ldc), 1.0, v8, __ldc, *(const double **)(a2 + 32), __ldb, 0.0, *(double **)(a3 + 32), __ldc);
  }
  else
  {
    if (HIDWORD(__ldb)) {
      BOOL v9 = __ldc == 0;
    }
    else {
      BOOL v9 = 1;
    }
    if (!v9)
    {
      uint64_t v10 = *(double **)(a3 + 32);
      uint64_t v11 = HIDWORD(__ldc);
      if (HIDWORD(__ldc))
      {
        uint64_t v12 = *(double **)(a2 + 32);
        uint64_t v13 = __ldb;
        if (HIDWORD(__ldc) > 3)
        {
          if (__ldc == 1)
          {
            uint64_t v18 = HIDWORD(__ldc) & 0xFFFFFFFC;
            uint64_t v19 = HIDWORD(__ldc) - v18;
            if (HIDWORD(__ldc) == v18)
            {
              uint64_t v20 = 0;
              unsigned int v21 = (float64x2_t *)(v12 + 2);
              do
              {
                double v22 = 0.0;
                uint64_t v23 = (float64x2_t *)(v8 + 2);
                uint64_t v24 = v21;
                uint64_t v25 = v18;
                do
                {
                  float64x2_t v26 = vmulq_f64(v23[-1], v24[-1]);
                  float64x2_t v27 = vmulq_f64(*v23, *v24);
                  double v22 = v22 + v26.f64[0] + v26.f64[1] + v27.f64[0] + v27.f64[1];
                  v24 += 2;
                  v23 += 2 * v5;
                  v25 -= 4;
                }
                while (v25);
                v10[v20 * v5] = v22;
                ++v20;
                unsigned int v21 = (float64x2_t *)((char *)v21 + 8 * v13);
              }
              while (v20 != v6);
            }
            else
            {
              uint64_t v36 = 0;
              long long v37 = (float64x2_t *)(v12 + 2);
              uint64_t v38 = 8 * __ldb;
              uint64_t v39 = (float64x2_t *)(v8 + 2);
              double v40 = &v12[4 * ((unint64_t)HIDWORD(__ldc) >> 2)];
              double v41 = (double *)&v8[4 * (HIDWORD(__ldc) >> 2)];
              do
              {
                double v42 = 0.0;
                uint64_t v43 = v39;
                int v44 = v37;
                uint64_t v45 = v18;
                do
                {
                  float64x2_t v46 = vmulq_f64(v43[-1], v44[-1]);
                  float64x2_t v47 = vmulq_f64(*v43, *v44);
                  double v42 = v42 + v46.f64[0] + v46.f64[1] + v47.f64[0] + v47.f64[1];
                  v44 += 2;
                  v43 += 2 * v5;
                  v45 -= 4;
                }
                while (v45);
                double v48 = v41;
                long long v49 = v40;
                uint64_t v50 = v19;
                do
                {
                  double v51 = *v49++;
                  double v42 = v42 + *v48 * v51;
                  v48 += v5;
                  --v50;
                }
                while (v50);
                v10[v36 * v5] = v42;
                ++v36;
                long long v37 = (float64x2_t *)((char *)v37 + v38);
                double v40 = (double *)((char *)v40 + v38);
              }
              while (v36 != v6);
            }
          }
          else
          {
            uint64_t v28 = 0;
            do
            {
              uint64_t v29 = 0;
              uint64_t v30 = (double *)v8;
              do
              {
                double v31 = 0.0;
                uint64_t v32 = v11;
                uint64_t v33 = v12;
                double v34 = v30;
                do
                {
                  double v35 = *v33++;
                  double v31 = v31 + *v34 * v35;
                  v34 += v5;
                  --v32;
                }
                while (v32);
                v10[v28 * v5 + v29++] = v31;
                ++v30;
              }
              while (v29 != v5);
              ++v28;
              v12 += __ldb;
            }
            while (v28 != HIDWORD(__ldb));
          }
        }
        else
        {
          uint64_t v14 = 0;
          uint64_t v15 = 8 * __ldc;
          do
          {
            unint64_t v16 = 0;
            do
            {
              double v17 = v8[v16 / 8] * v12[v14 * __ldb] + 0.0;
              if (HIDWORD(__ldc) != 1)
              {
                double v17 = v17 + v8[__ldc + v16 / 8] * v12[v14 * __ldb + 1];
                if (HIDWORD(__ldc) != 2) {
                  double v17 = v17 + v8[2 * __ldc + v16 / 8] * v12[v14 * __ldb + 2];
                }
              }
              v10[v16 / 8] = v17;
              v16 += 8;
            }
            while (v15 != v16);
            ++v14;
            uint64_t v10 = (double *)((char *)v10 + v15);
          }
          while (v14 != HIDWORD(__ldb));
        }
      }
      else
      {
        bzero(v10, 8 * __ldc * (unint64_t)HIDWORD(__ldb));
      }
    }
  }
}

void sub_1000C2B1C(void *a1)
{
  *a1 = off_100452B48;
  operator delete();
}

uint64_t sub_1000C2B4C(uint64_t result)
{
  *(void *)(result + 32) = result + 40;
  return result;
}

void sub_1000C2B58(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 8);
  if (v1 >= 2)
  {
    unsigned int v3 = *(_DWORD *)(a1 + 12);
    if (v3 >= 2)
    {
      int v4 = *(_DWORD *)(a1 + 16);
      int v5 = *(_DWORD *)(a1 + 20);
      bzero(v14, v4);
      if (v4 >= 3)
      {
        uint64_t v6 = (v4 - 1);
        uint64_t v7 = *(void *)(a1 + 32);
        uint64_t v8 = 1;
        do
        {
          BOOL v9 = &v14[v8];
          if (!v14[v8])
          {
            uint64_t v10 = *(void *)(v7 + 8 * v8);
            int v11 = v8;
            do
            {
              int v11 = (int)(v11 * (v3 + v1 - v5)) % (int)v6;
              uint64_t v12 = 8 * v11;
              uint64_t v13 = *(void *)(v7 + v12);
              *(void *)(v7 + v12) = v10;
              *BOOL v9 = 1;
              BOOL v9 = &v14[v11];
              uint64_t v10 = v13;
            }
            while (!*v9);
          }
          ++v8;
        }
        while (v8 != v6);
      }
    }
  }
}

void sub_1000C2C30(void *a1)
{
  *a1 = off_100452D00;
  operator delete();
}

uint64_t sub_1000C2C60(uint64_t result)
{
  *(void *)(result + 32) = result + 40;
  return result;
}

void sub_1000C2C6C(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 8);
  if (v1 >= 2)
  {
    unsigned int v3 = *(_DWORD *)(a1 + 12);
    if (v3 >= 2)
    {
      int v4 = *(_DWORD *)(a1 + 16);
      int v5 = *(_DWORD *)(a1 + 20);
      bzero(v14, v4);
      if (v4 >= 3)
      {
        uint64_t v6 = (v4 - 1);
        uint64_t v7 = *(void *)(a1 + 32);
        uint64_t v8 = 1;
        do
        {
          BOOL v9 = &v14[v8];
          if (!v14[v8])
          {
            int v10 = *(_DWORD *)(v7 + 4 * v8);
            int v11 = v8;
            do
            {
              int v11 = (int)(v11 * (v3 + v1 - v5)) % (int)v6;
              uint64_t v12 = 4 * v11;
              int v13 = *(_DWORD *)(v7 + v12);
              *(_DWORD *)(v7 + v12) = v10;
              *BOOL v9 = 1;
              BOOL v9 = &v14[v11];
              int v10 = v13;
            }
            while (!*v9);
          }
          ++v8;
        }
        while (v8 != v6);
      }
    }
  }
}

void sub_1000C2D44(void *a1)
{
  *a1 = off_100452D00;
  operator delete();
}

uint64_t sub_1000C2D74(uint64_t result)
{
  *(void *)(result + 32) = result + 40;
  return result;
}

void sub_1000C2D80(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 8);
  if (v1 >= 2)
  {
    unsigned int v3 = *(_DWORD *)(a1 + 12);
    if (v3 >= 2)
    {
      int v4 = *(_DWORD *)(a1 + 16);
      int v5 = *(_DWORD *)(a1 + 20);
      bzero(v14, v4);
      if (v4 >= 3)
      {
        uint64_t v6 = (v4 - 1);
        uint64_t v7 = *(void *)(a1 + 32);
        uint64_t v8 = 1;
        do
        {
          BOOL v9 = &v14[v8];
          if (!v14[v8])
          {
            int v10 = *(_DWORD *)(v7 + 4 * v8);
            int v11 = v8;
            do
            {
              int v11 = (int)(v11 * (v3 + v1 - v5)) % (int)v6;
              uint64_t v12 = 4 * v11;
              int v13 = *(_DWORD *)(v7 + v12);
              *(_DWORD *)(v7 + v12) = v10;
              *BOOL v9 = 1;
              BOOL v9 = &v14[v11];
              int v10 = v13;
            }
            while (!*v9);
          }
          ++v8;
        }
        while (v8 != v6);
      }
    }
  }
}

uint64_t sub_1000C2E58(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(result + 24) = 0x200000002;
  *(_OWORD *)(result + 8) = xmmword_1003E6A00;
  *(void *)(result + 32) = result + 40;
  *(void *)__n128 result = off_100452D78;
  *(void *)(result + 104) = 0x100000002;
  *(void *)(result + 72) = a2;
  *(void *)(result + 80) = off_100452CA8;
  *(_OWORD *)(result + 88) = xmmword_1003E6A10;
  *(void *)(result + 112) = result + 120;
  *(void *)(result + 152) = 0x100000002;
  *(void *)(result + 128) = off_100452CA8;
  *(_OWORD *)(result + 136) = xmmword_1003E6A10;
  uint64_t v4 = result + 168;
  *(void *)(result + 160) = result + 168;
  if (result + 80 == a3)
  {
    LODWORD(v7) = 2;
    goto LABEL_17;
  }
  int v6 = *(_DWORD *)(a3 + 8);
  int v5 = *(_DWORD *)(a3 + 12);
  *(_DWORD *)(result + 88) = v6;
  *(_DWORD *)(result + 92) = v5;
  uint64_t v7 = (v5 * v6);
  *(_DWORD *)(result + 96) = v7;
  *(_DWORD *)(result + 100) = v6;
  int v8 = *(_DWORD *)(a3 + 16);
  if (v8 > 3)
  {
    uint64_t v16 = (v8 - 1);
    uint64_t v17 = *(void *)(a3 + 32);
    if (v8 >= 9 && (unint64_t)(result - v17 + 120) >= 0x20)
    {
      uint64_t v18 = v16 & 0xFFFFFFF8;
      int v52 = (long long *)(v17 + 16);
      int v53 = (_OWORD *)(result + 136);
      uint64_t v54 = v18;
      do
      {
        long long v55 = *v52;
        *(v53 - 1) = *(v52 - 1);
        *int v53 = v55;
        v52 += 2;
        v53 += 2;
        v54 -= 8;
      }
      while (v54);
      if (v18 == v16) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v18 = 0;
    }
    uint64_t v19 = v16 - v18;
    uint64_t v20 = 4 * v18;
    unsigned int v21 = (_DWORD *)(4 * v18 + result + 120);
    double v22 = (int *)(v17 + v20);
    do
    {
      int v23 = *v22++;
      *v21++ = v23;
      --v19;
    }
    while (v19);
LABEL_16:
    *(_DWORD *)(result + 120 + 4 * v16) = *(_DWORD *)(v17 + 4 * v16);
    goto LABEL_17;
  }
  if ((int)v7 < 1) {
    goto LABEL_17;
  }
  uint64_t v9 = *(void *)(a3 + 32);
  if (v7 < 8 || (unint64_t)(result - v9 + 120) < 0x20)
  {
    uint64_t v10 = 0;
LABEL_7:
    uint64_t v11 = v7 - v10;
    uint64_t v12 = 4 * v10;
    int v13 = (_DWORD *)(4 * v10 + result + 120);
    uint64_t v14 = (int *)(v9 + v12);
    do
    {
      int v15 = *v14++;
      *v13++ = v15;
      --v11;
    }
    while (v11);
    goto LABEL_17;
  }
  uint64_t v10 = v7 & 0x7FFFFFF8;
  int v60 = (long long *)(v9 + 16);
  int v61 = (_OWORD *)(result + 136);
  uint64_t v62 = v7 & 0xFFFFFFF8;
  do
  {
    long long v63 = *v60;
    *(v61 - 1) = *(v60 - 1);
    _OWORD *v61 = v63;
    v60 += 2;
    v61 += 2;
    v62 -= 8;
  }
  while (v62);
  if (v10 != v7) {
    goto LABEL_7;
  }
LABEL_17:
  if (result + 128 == a4)
  {
    LODWORD(v26) = *(_DWORD *)(result + 144);
    goto LABEL_33;
  }
  int v25 = *(_DWORD *)(a4 + 8);
  int v24 = *(_DWORD *)(a4 + 12);
  *(_DWORD *)(result + 136) = v25;
  *(_DWORD *)(result + 140) = v24;
  uint64_t v26 = (v24 * v25);
  *(_DWORD *)(result + 144) = v26;
  *(_DWORD *)(result + 148) = v25;
  int v27 = *(_DWORD *)(a4 + 16);
  if (v27 > 3)
  {
    uint64_t v35 = (v27 - 1);
    uint64_t v36 = *(void *)(a4 + 32);
    if (v27 >= 9 && (unint64_t)(result - v36 + 168) >= 0x20)
    {
      uint64_t v37 = v35 & 0xFFFFFFF8;
      int v56 = (long long *)(v36 + 16);
      float64x2_t v57 = (_OWORD *)(result + 184);
      uint64_t v58 = v37;
      do
      {
        long long v59 = *v56;
        *(v57 - 1) = *(v56 - 1);
        *float64x2_t v57 = v59;
        v56 += 2;
        v57 += 2;
        v58 -= 8;
      }
      while (v58);
      if (v37 == v35) {
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v37 = 0;
    }
    uint64_t v38 = v35 - v37;
    uint64_t v39 = 4 * v37;
    double v40 = (_DWORD *)(4 * v37 + result + 168);
    double v41 = (int *)(v36 + v39);
    do
    {
      int v42 = *v41++;
      *v40++ = v42;
      --v38;
    }
    while (v38);
LABEL_32:
    *(_DWORD *)(v4 + 4 * v35) = *(_DWORD *)(v36 + 4 * v35);
    goto LABEL_33;
  }
  if ((int)v26 < 1) {
    goto LABEL_33;
  }
  uint64_t v28 = *(void *)(a4 + 32);
  if (v26 < 8 || (unint64_t)(result - v28 + 168) < 0x20)
  {
    uint64_t v29 = 0;
LABEL_23:
    uint64_t v30 = v26 - v29;
    uint64_t v31 = 4 * v29;
    uint64_t v32 = (_DWORD *)(4 * v29 + result + 168);
    uint64_t v33 = (int *)(v28 + v31);
    do
    {
      int v34 = *v33++;
      *v32++ = v34;
      --v30;
    }
    while (v30);
    goto LABEL_33;
  }
  uint64_t v29 = v26 & 0x7FFFFFF8;
  uint64_t v64 = (long long *)(v28 + 16);
  uint64_t v65 = (_OWORD *)(result + 184);
  uint64_t v66 = v26 & 0xFFFFFFF8;
  do
  {
    long long v67 = *v64;
    *(v65 - 1) = *(v64 - 1);
    _OWORD *v65 = v67;
    v64 += 2;
    v65 += 2;
    v66 -= 8;
  }
  while (v66);
  if (v29 != v26) {
    goto LABEL_23;
  }
LABEL_33:
  *(_DWORD *)(result + 8) = v7;
  *(_DWORD *)(result + 12) = v26;
  *(_DWORD *)(result + 16) = v26 * v7;
  *(_DWORD *)(result + 20) = v7;
  if (v26 && v7)
  {
    unsigned int v43 = 0;
    uint64_t v44 = 0;
    int v45 = *(_DWORD *)(a2 + 20);
    uint64_t v46 = *(void *)(a2 + 32);
    do
    {
      int v47 = v45 * *(_DWORD *)(v4 + 4 * v44);
      uint64_t v48 = v7;
      long long v49 = (int *)(result + 120);
      unsigned int v50 = v43;
      do
      {
        int v51 = *v49++;
        *(void *)(result + 40 + 8 * v50++) = *(void *)(v46 + 8 * (v47 + v51));
        --v48;
      }
      while (v48);
      ++v44;
      v43 += v7;
    }
    while (v44 != v26);
  }
  return result;
}

void sub_1000C31E0(void *a1)
{
  a1[16] = off_100452D00;
  a1[10] = off_100452D00;
  *a1 = off_100452B48;
  operator delete();
}

uint64_t sub_1000C3250(uint64_t result)
{
  *(void *)(result + 32) = result + 40;
  return result;
}

void sub_1000C325C(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 8);
  if (v1 >= 2)
  {
    unsigned int v3 = *(_DWORD *)(a1 + 12);
    if (v3 >= 2)
    {
      int v4 = *(_DWORD *)(a1 + 16);
      int v5 = *(_DWORD *)(a1 + 20);
      bzero(v14, v4);
      if (v4 >= 3)
      {
        uint64_t v6 = (v4 - 1);
        uint64_t v7 = *(void *)(a1 + 32);
        uint64_t v8 = 1;
        do
        {
          uint64_t v9 = &v14[v8];
          if (!v14[v8])
          {
            uint64_t v10 = *(void *)(v7 + 8 * v8);
            int v11 = v8;
            do
            {
              int v11 = (int)(v11 * (v3 + v1 - v5)) % (int)v6;
              uint64_t v12 = 8 * v11;
              uint64_t v13 = *(void *)(v7 + v12);
              *(void *)(v7 + v12) = v10;
              *uint64_t v9 = 1;
              uint64_t v9 = &v14[v11];
              uint64_t v10 = v13;
            }
            while (!*v9);
          }
          ++v8;
        }
        while (v8 != v6);
      }
    }
  }
}

void sub_1000C3334(void *a1)
{
  *a1 = off_100452B48;
  operator delete();
}

void sub_1000C3364(void *a1)
{
  *a1 = off_100452B48;
  operator delete();
}

uint64_t sub_1000C3394(uint64_t result)
{
  *(void *)(result + 32) = result + 40;
  return result;
}

void sub_1000C33A0(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 8);
  if (v1 >= 2)
  {
    unsigned int v3 = *(_DWORD *)(a1 + 12);
    if (v3 >= 2)
    {
      int v4 = *(_DWORD *)(a1 + 16);
      int v5 = *(_DWORD *)(a1 + 20);
      bzero(&v12, v4);
      if (v4 >= 3)
      {
        uint64_t v6 = (v4 - 1);
        uint64_t v7 = *(void *)(a1 + 32);
        int v8 = v12;
        uint64_t v9 = (void *)(v7 + 8);
        uint64_t v10 = v6 - 1;
        int v11 = v3 + v1 - v5;
        do
        {
          if (!v8)
          {
            *(void *)(v7 + 8 * (v11 % (int)v6)) = *v9;
            int v8 = 1;
          }
          v11 += v3 + v1 - v5;
          ++v9;
          --v10;
        }
        while (v10);
      }
    }
  }
}

void sub_1000C3458(void *a1)
{
  *a1 = off_100452B48;
  operator delete();
}

uint64_t sub_1000C3488(uint64_t result)
{
  *(void *)(result + 32) = result + 40;
  return result;
}

void sub_1000C3494(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 8);
  if (v1 >= 2)
  {
    unsigned int v3 = *(_DWORD *)(a1 + 12);
    if (v3 >= 2)
    {
      int v4 = *(_DWORD *)(a1 + 16);
      int v5 = *(_DWORD *)(a1 + 20);
      bzero(v14, v4);
      if (v4 >= 3)
      {
        uint64_t v6 = (v4 - 1);
        uint64_t v7 = *(void *)(a1 + 32);
        uint64_t v8 = 1;
        do
        {
          uint64_t v9 = &v14[v8];
          if (!v14[v8])
          {
            uint64_t v10 = *(void *)(v7 + 8 * v8);
            int v11 = v8;
            do
            {
              int v11 = (int)(v11 * (v3 + v1 - v5)) % (int)v6;
              uint64_t v12 = 8 * v11;
              uint64_t v13 = *(void *)(v7 + v12);
              *(void *)(v7 + v12) = v10;
              *uint64_t v9 = 1;
              uint64_t v9 = &v14[v11];
              uint64_t v10 = v13;
            }
            while (!*v9);
          }
          ++v8;
        }
        while (v8 != v6);
      }
    }
  }
}

void sub_1000C356C()
{
  exception = __cxa_allocate_exception(8uLL);
}

uint64_t sub_1000C35B8(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a1 + 96) & 4) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 24);
    if (!v4) {
      uint64_t v4 = *(void *)(qword_10047E938 + 24);
    }
    double v5 = *(double *)(v4 + 32);
    long long v16 = 0uLL;
    uint64_t v6 = (cnprint::CNPrinter *)CNTimeSpan::SetTimeSpan((CNTimeSpan *)&v16, 0, v5);
    long long v7 = v16;
    *(_OWORD *)(a2 + 8) = v16;
    *(_OWORD *)(a2 + 104) = v7;
    if ((*(unsigned char *)(a1 + 96) & 2) != 0)
    {
      uint64_t v8 = *(void *)(a1 + 16);
      if (!v8) {
        uint64_t v8 = *(void *)(qword_10047E938 + 16);
      }
      double v9 = *(double *)(v8 + 32);
      long long v16 = 0uLL;
      uint64_t v10 = (cnprint::CNPrinter *)CNTimeSpan::SetTimeSpan((CNTimeSpan *)&v16, 0, v9);
      *(_OWORD *)(a2 + 200) = v16;
      int v11 = *(_DWORD *)(a1 + 96);
      if (v11)
      {
        unsigned int v12 = *(_DWORD *)(a1 + 88) + 1;
        if (v12 >= 6)
        {
          if (cnprint::CNPrinter::GetLogLevel(v10) > 1) {
            return 0;
          }
        }
        else
        {
          *(unsigned char *)(a2 + 296) = v12;
          if ((~v11 & 0x78) != 0)
          {
            if (cnprint::CNPrinter::GetLogLevel(v10) > 1) {
              return 0;
            }
          }
          else
          {
            BOOL v13 = sub_1000C3960(a1, a2 + 104);
            if (v13)
            {
              BOOL v14 = sub_1000C3E0C(a1);
              if (v14)
              {
                *(unsigned char *)(a2 + 1185) = sub_1000C4318(*(void *)(a1 + 64), *(_DWORD *)(a1 + 96));
                uint64_t result = 1;
                *(unsigned char *)(a2 + 1184) = 1;
                return result;
              }
              if (cnprint::CNPrinter::GetLogLevel((cnprint::CNPrinter *)v14) > 1) {
                return 0;
              }
            }
            else if (cnprint::CNPrinter::GetLogLevel((cnprint::CNPrinter *)v13) > 1)
            {
              return 0;
            }
          }
        }
      }
      else if (cnprint::CNPrinter::GetLogLevel(v10) > 1)
      {
        return 0;
      }
    }
    else if (cnprint::CNPrinter::GetLogLevel(v6) > 1)
    {
      return 0;
    }
    LOWORD(v16) = 12;
    (*(void (**)(uint64_t))(*(void *)a2 + 16))(a2);
    goto LABEL_27;
  }
  if (cnprint::CNPrinter::GetLogLevel((cnprint::CNPrinter *)a1) <= 1)
  {
    LOWORD(v16) = 12;
LABEL_27:
    cnprint::CNPrinter::Print();
  }
  return 0;
}

BOOL sub_1000C3960(uint64_t a1, uint64_t a2)
{
  if ((~*(_DWORD *)(a1 + 96) & 0x18) == 0)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if (v3)
    {
      unint64_t v4 = *(void *)(v3 + 16);
      unint64_t v5 = *(unsigned int *)(v3 + 24);
      if (v4 != 8 * v5)
      {
LABEL_25:
        int v16 = 1;
        if (cnprint::CNPrinter::GetLogLevel((cnprint::CNPrinter *)a1) <= 1)
        {
          LOWORD(v47) = 12;
          LOBYTE(v42) = 1;
LABEL_30:
          cnprint::CNPrinter::Print();
          return v16 == 0;
        }
        return v16 == 0;
      }
    }
    else
    {
      uint64_t v3 = *(void *)(qword_10047E938 + 32);
      unint64_t v4 = *(void *)(v3 + 16);
      unint64_t v5 = *(unsigned int *)(v3 + 24);
      if (v4 != 8 * v5) {
        goto LABEL_25;
      }
    }
    int v7 = *(_DWORD *)(v3 + 32);
    int v8 = *(_DWORD *)(v3 + 64);
    if (v8 + v7 + *(_DWORD *)(v3 + 56) + *(_DWORD *)(v3 + 40) + *(_DWORD *)(v3 + 48) != v5) {
      goto LABEL_25;
    }
    if (v4 > 0xA8 || v5 == 0 || v8 != 3 || v7 != 9)
    {
LABEL_28:
      int v16 = 1;
      if (cnprint::CNPrinter::GetLogLevel((cnprint::CNPrinter *)a1) <= 1)
      {
        LOWORD(v47) = 12;
        LOBYTE(v42) = 1;
        goto LABEL_30;
      }
      return v16 == 0;
    }
    unsigned int v12 = *(void **)(a1 + 40);
    if (*((char *)v12 + 23) < 0)
    {
      if (v12[1] != v4) {
        goto LABEL_28;
      }
    }
    else if (*((unsigned __int8 *)v12 + 23) != v4)
    {
      goto LABEL_28;
    }
    unint64_t v13 = *(unsigned int *)(v3 + 28);
    uint64_t v14 = *(unsigned int *)(v3 + 60);
    sub_1000C6E6C(v52, v5);
    if (*((char *)v12 + 23) < 0)
    {
      uint64_t v17 = v12;
      unsigned int v12 = (void *)*v12;
      size_t v15 = v17[1];
    }
    else
    {
      size_t v15 = *((unsigned __int8 *)v12 + 23);
    }
    if (v15) {
      memmove(v52[0], v12, v15);
    }
    uint64_t v49 = 0x300000003;
    long long v48 = xmmword_1003E6950;
    int v47 = off_100452AF0;
    unsigned int v50 = v51;
    if (v13 <= 0xFFFFFFF6)
    {
      int v18 = 0;
      int v19 = 0;
      unint64_t v20 = v13 + 9;
      unsigned int v21 = v52[0];
      do
      {
        v51[3 * v19 + v18] = v21[v13];
        if (v18 == 2)
        {
          ++v19;
          int v18 = 0;
        }
        else
        {
          ++v18;
        }
        ++v13;
      }
      while (v13 < v20);
    }
    sub_1000C6BE0((uint64_t)&v47, (uint64_t)v37);
    sub_1000C6B60((uint64_t)v37, (uint64_t)&v47, (uint64_t)v38);
    uint64_t v28 = 0x300000003;
    uint64_t v26 = off_100452AF0;
    long long v27 = xmmword_1003E6950;
    uint64_t v32 = 0;
    long long v31 = 0u;
    long long v34 = 0u;
    uint64_t v29 = &v30;
    uint64_t v30 = 0x3FF0000000000000;
    uint64_t v33 = 0x3FF0000000000000;
    uint64_t v35 = 0;
    uint64_t v36 = 0x3FF0000000000000;
    sub_1000C7160((uint64_t)v38, (uint64_t)&v26, (uint64_t)v39);
    sub_1000C7094((uint64_t)v39, (uint64_t)v40);
    sub_1000C6F04((uint64_t)v40, (uint64_t)v41);
    sub_1000C6F04((uint64_t)v41, (uint64_t)&v42);
    if (fabs(*v45) <= 0.00001 && fabs(sub_1000C7220((uint64_t)&v47) + -1.0) <= 0.00001)
    {
      sub_1000C8470(&v42, (uint64_t)&v47);
      uint64_t v23 = a2 + 200;
      cnrotation::CNRotation::operator=();
      uint64_t v44 = 0x100000003;
      long long v43 = xmmword_1003E69E0;
      int v42 = off_100452C18;
      int v45 = (double *)v46;
      if (v14 <= 0xFFFFFFFC)
      {
        v46[0] = *((void *)v52[0] + v14);
        if (v14 + 1 < (unint64_t)(v14 + 3))
        {
          v46[1] = *((void *)v52[0] + v14 + 1);
          v46[2] = *((void *)v52[0] + v14 + 2);
        }
      }
      sub_1000C6D80((uint64_t)&v42);
      if ((v25 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
      {
        int v16 = 1;
        if (cnprint::CNPrinter::GetLogLevel(v24) <= 1)
        {
          v41[0] = 12;
          v40[0] = 1;
          cnprint::CNPrinter::Print();
        }
      }
      else
      {
        sub_1000C72C4(v23, (uint64_t)&v42);
        int v16 = 0;
      }
    }
    else
    {
      int v16 = 1;
      if (cnprint::CNPrinter::GetLogLevel(v22) <= 1)
      {
        LOWORD(v42) = 12;
        LOBYTE(v41[0]) = 1;
        cnprint::CNPrinter::Print();
      }
    }
    if (v52[0])
    {
      v52[1] = v52[0];
      operator delete(v52[0]);
    }
    return v16 == 0;
  }
  if (cnprint::CNPrinter::GetLogLevel((cnprint::CNPrinter *)a1) <= 1)
  {
    LOWORD(v47) = 12;
    LOBYTE(v42) = 1;
    cnprint::CNPrinter::Print();
  }
  return 0;
}

void sub_1000C3DC4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)(v1 - 88);
  if (v3)
  {
    *(void *)(v1 - 80) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1000C3E0C(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 96) & 0x60) == 0)
  {
    uint64_t v1 = *(void *)(a1 + 48);
    if (!v1) {
      uint64_t v1 = *(void *)(qword_10047E938 + 48);
    }
    unint64_t v2 = *(void *)(v1 + 16);
    uint64_t v3 = *(unsigned int *)(v1 + 24);
    int v4 = *(_DWORD *)(v1 + 32);
    int v5 = *(_DWORD *)(v1 + 64);
    int v6 = v5 + v4 + *(_DWORD *)(v1 + 48) + *(_DWORD *)(v1 + 40) + *(_DWORD *)(v1 + 56);
    if (v2 != 8 * v3 || v3 != v6 * v6)
    {
      int v8 = 1;
      if (cnprint::CNPrinter::GetLogLevel((cnprint::CNPrinter *)a1) <= 1) {
        goto LABEL_46;
      }
      return v8 == 0;
    }
    if (v2 > 0x708 || v3 == 0 || v5 != 3 || v4 != 3)
    {
LABEL_45:
      int v8 = 1;
      if (cnprint::CNPrinter::GetLogLevel((cnprint::CNPrinter *)a1) <= 1) {
LABEL_46:
      }
        cnprint::CNPrinter::Print();
      return v8 == 0;
    }
    unint64_t v13 = *(void **)(a1 + 56);
    if (*((char *)v13 + 23) < 0)
    {
      if (v13[1] != v2) {
        goto LABEL_45;
      }
    }
    else if (*((unsigned __int8 *)v13 + 23) != v2)
    {
      goto LABEL_45;
    }
    uint64_t v14 = *(unsigned int *)(v1 + 28);
    uint64_t v15 = *(unsigned int *)(v1 + 60);
    size_t v16 = 8 * v3;
    uint64_t v17 = operator new(8 * v3);
    bzero(v17, v16);
    if (*((char *)v13 + 23) < 0)
    {
      double v41 = v13;
      unint64_t v13 = (void *)*v13;
      size_t v18 = v41[1];
      if (!v18) {
        goto LABEL_29;
      }
    }
    else
    {
      size_t v18 = *((unsigned __int8 *)v13 + 23);
      if (!*((unsigned char *)v13 + 23))
      {
LABEL_29:
        unint64_t v19 = (v14 + 3);
        if (v14 <= 0xFFFFFFFC)
        {
          int v20 = v14 * v6;
          double v42 = *((double *)v17 + (v14 + v14 * v6));
          int v21 = v14 + 1;
          if (v14 + 1 < (unint64_t)v19)
          {
            double v22 = *((double *)v17 + (v14 + 2 + v20));
            double v23 = *((double *)v17 + (v14 + v6 * v21));
            double v24 = *((double *)v17 + (v6 * v21 + v21));
            double v45 = *((double *)v17 + (v20 + v21));
            double v46 = v24;
            double v25 = *((double *)v17 + (v14 + 2 + v6 * v21));
            int v26 = (v14 + 2) * v6;
            double v27 = *((double *)v17 + (v14 + v26));
            double v43 = v23;
            double v44 = v27;
            double v47 = *((double *)v17 + (v26 + v21));
            double v48 = v22;
            uint64_t v28 = *((void *)v17 + (v14 + 2 + v26));
            double v49 = v25;
            uint64_t v50 = v28;
          }
        }
        uint64_t v29 = cntransformation::CNRigidTransformation::SetPrr();
        if (v29)
        {
          unint64_t v30 = (v15 + 3);
          if (v15 <= 0xFFFFFFFC)
          {
            int v31 = v15 * v6;
            double v42 = *((double *)v17 + (v15 + v15 * v6));
            int v32 = v15 + 1;
            if (v15 + 1 < (unint64_t)v30)
            {
              double v45 = *((double *)v17 + (v31 + v32));
              double v48 = *((double *)v17 + (v15 + 2 + v31));
              double v43 = *((double *)v17 + (v15 + v6 * v32));
              double v46 = *((double *)v17 + (v6 * v32 + v32));
              double v49 = *((double *)v17 + (v15 + 2 + v6 * v32));
              int v33 = (v15 + 2) * v6;
              double v44 = *((double *)v17 + (v15 + v33));
              double v47 = *((double *)v17 + (v33 + v32));
              uint64_t v50 = *((void *)v17 + (v15 + 2 + v33));
            }
          }
          long long v34 = (cnprint::CNPrinter *)cntransformation::CNRigidTransformation::SetPpp();
          if (v34)
          {
            if (v14 <= 0xFFFFFFFC && v15 <= 0xFFFFFFFC)
            {
              int v35 = v14 * v6;
              double v42 = -*((double *)v17 + (v15 + v14 * v6));
              unint64_t v36 = v15 + 1;
              if (v15 + 1 < v30)
              {
                double v45 = -*((double *)v17 + (v35 + v36));
                double v48 = -*((double *)v17 + (v15 + v35 + 2));
              }
              if (v14 + 1 < v19)
              {
                int v37 = v6 * (v14 + 1);
                double v43 = -*((double *)v17 + (v15 + v37));
                if (v36 >= v30)
                {
                  unsigned int v39 = v15 + (v14 + 2) * v6;
                  uint64_t v40 = 2;
                }
                else
                {
                  double v46 = -*((double *)v17 + (v37 + v36));
                  double v49 = -*((double *)v17 + (v15 + 2 + v37));
                  int v38 = (v14 + 2) * v6;
                  double v44 = -*((double *)v17 + (v15 + v38));
                  double v47 = -*((double *)v17 + (v38 + v36));
                  unsigned int v39 = v15 + 2 + v38;
                  uint64_t v40 = 8;
                }
                *(&v42 + v40) = -*((double *)v17 + v39);
              }
            }
            cntransformation::CNRigidTransformation::SetPrp();
            int v8 = 0;
            goto LABEL_56;
          }
          int v8 = 1;
          if (cnprint::CNPrinter::GetLogLevel(v34) <= 1) {
            goto LABEL_48;
          }
        }
        else
        {
          int v8 = 1;
          if (cnprint::CNPrinter::GetLogLevel((cnprint::CNPrinter *)v29) <= 1) {
LABEL_48:
          }
            cnprint::CNPrinter::Print();
        }
LABEL_56:
        operator delete(v17);
        return v8 == 0;
      }
    }
    memmove(v17, v13, v18);
    goto LABEL_29;
  }
  if (cnprint::CNPrinter::GetLogLevel((cnprint::CNPrinter *)a1) <= 1) {
    cnprint::CNPrinter::Print();
  }
  return 0;
}

void sub_1000C42DC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_1000C42F0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_1000C4304(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000C4318(uint64_t a1, char a2)
{
  if ((a2 & 0x80) == 0) {
    return 1;
  }
  v211[2] = v5;
  v211[3] = v4;
  v211[8] = v2;
  v211[9] = v3;
  if (a1)
  {
    if (*(_DWORD *)(a1 + 24) != 4) {
      return 0;
    }
  }
  else
  {
    a1 = *(void *)(qword_10047E938 + 64);
    if (*(_DWORD *)(a1 + 24) != 4) {
      return 0;
    }
  }
  uint64_t v204 = 0x400000004;
  long long v203 = xmmword_1003E6B90;
  double v202 = off_100452EE0;
  uint64_t v205 = v206;
  int v7 = *(void **)(a1 + 16);
  if (*(_DWORD *)(*v7 + 24) != 4) {
    return 0;
  }
  int v8 = *(float32x2_t **)(*v7 + 16);
  v206[0] = vcvtq_f64_f32(*v8);
  v206[1] = vcvtq_f64_f32(v8[1]);
  uint64_t v9 = v7[1];
  if (*(_DWORD *)(v9 + 24) != 4) {
    return 0;
  }
  uint64_t v10 = *(float32x2_t **)(v9 + 16);
  v206[2] = vcvtq_f64_f32(*v10);
  v206[3] = vcvtq_f64_f32(v10[1]);
  uint64_t v11 = v7[2];
  if (*(_DWORD *)(v11 + 24) != 4) {
    return 0;
  }
  unsigned int v12 = *(float32x2_t **)(v11 + 16);
  v206[4] = vcvtq_f64_f32(*v12);
  v206[5] = vcvtq_f64_f32(v12[1]);
  uint64_t v13 = v7[3];
  if (*(_DWORD *)(v13 + 24) != 4) {
    return 0;
  }
  uint64_t v14 = *(float32x2_t **)(v13 + 16);
  v206[6] = vcvtq_f64_f32(*v14);
  v206[7] = vcvtq_f64_f32(v14[1]);
  double v188 = &_mh_execute_header;
  uint64_t v198 = 0x100000003;
  long long v196 = off_100452E98;
  uint64_t v199 = &v200;
  long long v197 = xmmword_1003E69E0;
  int v201 = 2;
  v200 = &_mh_execute_header;
  sub_1000C79B0((uint64_t)&v184, (uint64_t)&v202, (uint64_t)&v196, (uint64_t)&v196);
  uint64_t v192 = 0x300000003;
  v189[0] = off_100452AF0;
  unint64_t __ldb = __K;
  uint64_t __ldc = DWORD1(__K);
  v189[1] = __K;
  uint64_t v17 = (DWORD1(__K) * __K);
  int v190 = DWORD1(__K) * __K;
  int v191 = __K;
  size_t v18 = __B;
  v193 = __B;
  int v19 = DWORD2(__K);
  if (SDWORD2(__K) > 3)
  {
    double v27 = v187;
    uint64_t v28 = (DWORD2(__K) - 1) >> 1;
    uint64_t v29 = v187;
    unint64_t v30 = __B;
    do
    {
      long long v31 = *(_OWORD *)v29;
      v29 += 2;
      *(_OWORD *)unint64_t v30 = v31;
      v30 += 2;
      --v28;
    }
    while (v28);
    *(_OWORD *)&__B[v19 - 2] = *(_OWORD *)&v27[v19 - 2];
  }
  else
  {
    if ((int)v17 < 1) {
      goto LABEL_22;
    }
    int v20 = v187;
    if (v17 < 6 || (unint64_t)((char *)v189 - (char *)v187 + 40) < 0x20)
    {
      uint64_t v21 = 0;
LABEL_16:
      uint64_t v22 = v17 - v21;
      uint64_t v23 = v21;
      double v24 = &v189[v21 + 5];
      double v25 = &v20[v23];
      do
      {
        uint64_t v26 = (uint64_t)*v25++;
        *v24++ = v26;
        --v22;
      }
      while (v22);
      goto LABEL_22;
    }
    uint64_t v21 = v17 & 0x7FFFFFFC;
    int v126 = (long long *)(v187 + 2);
    uint64_t v127 = v195;
    uint64_t v128 = v17 & 0xFFFFFFFC;
    do
    {
      long long v129 = *v126;
      *(v127 - 1) = *(v126 - 1);
      _OWORD *v127 = v129;
      v126 += 2;
      v127 += 2;
      v128 -= 4;
    }
    while (v128);
    if (v21 != v17) {
      goto LABEL_16;
    }
  }
LABEL_22:
  uint64_t v142 = 0x300000003;
  uint64_t v137 = off_100452AF0;
  v143 = v144;
  int v138 = __ldc;
  int v139 = __ldb;
  int v140 = v17;
  int v141 = __ldc;
  if (__ldc && __ldb)
  {
    int v32 = 0;
    int v33 = 0;
    int v34 = __ldb - 1;
    int v35 = __ldb & 0xFFFFFFFC;
    do
    {
      if (__ldb >= 0xA)
      {
        BOOL v37 = v33 * (int)__ldb + v34 >= v33 * (int)__ldb && __ldc == 1;
        int v36 = 0;
        if (v37 && v33 + v34 >= v33)
        {
          do
          {
            unsigned int v39 = &__B[v32 + v36];
            long long v40 = *(_OWORD *)v39;
            long long v41 = *((_OWORD *)v39 + 1);
            double v42 = &v144[v33 + v36];
            *(_OWORD *)double v42 = v40;
            *((_OWORD *)v42 + 1) = v41;
            v36 += 4;
          }
          while (v35 != v36);
          int v36 = __ldb & 0xFFFFFFFC;
          if (__ldb == v35) {
            goto LABEL_25;
          }
        }
      }
      else
      {
        int v36 = 0;
      }
      int v43 = v33 + __ldc * v36;
      do
      {
        v144[v43] = __B[v32 + v36++];
        v43 += __ldc;
      }
      while (__ldb != v36);
LABEL_25:
      ++v33;
      v32 += __ldb;
    }
    while (v33 != __ldc);
  }
  uint64_t v150 = 0x300000003;
  v145[7] = off_100452AF0;
  double v44 = (cnprint::CNPrinter *)__C;
  double v151 = __C;
  unsigned int v146 = __ldc;
  int v147 = __ldc;
  int v148 = __ldc * __ldc;
  int v149 = __ldc;
  if (__ldc <= __ldb) {
    int v45 = __ldb;
  }
  else {
    int v45 = __ldc;
  }
  if (v45 > 5)
  {
    cblas_dgemm(CblasColMajor, CblasNoTrans, CblasNoTrans, __ldc, __ldc, __ldb, 1.0, v144, __ldc, __B, __ldb, 0.0, __C, __ldc);
    unsigned int v51 = v146;
    LODWORD(__ldc) = v147;
  }
  else if (__ldc)
  {
    if (__ldb)
    {
      unint64_t v46 = 8 * __ldc;
      if (__ldb >= 4)
      {
        uint64_t v107 = 0;
        uint64_t v108 = 8 * __ldb;
        unint64_t v109 = (float64x2_t *)v195;
        do
        {
          uint64_t v110 = v107 * __ldc;
          if (__ldc == 1)
          {
            double v111 = 0.0;
            int v112 = (float64x2_t *)v145;
            int v113 = v109;
            uint64_t v114 = __ldb & 0xFFFFFFFC;
            do
            {
              float64x2_t v115 = vmulq_f64(v112[-1], v113[-1]);
              float64x2_t v116 = vmulq_f64(*v112, *v113);
              double v111 = v111 + v115.f64[0] + v115.f64[1] + v116.f64[0] + v116.f64[1];
              v113 += 2;
              v112 += 2 * __ldc;
              v114 -= 4;
            }
            while (v114);
            if ((__ldb & 0xFFFFFFFC) != __ldb)
            {
              double v117 = &v144[4 * (__ldb >> 2)];
              uint64_t v118 = __ldb & 0xFFFFFFFC;
              do
              {
                double v111 = v111 + *v117 * v18[v118++];
                double v117 = (double *)((char *)v117 + v46);
              }
              while (__ldb != v118);
            }
            __C[v110] = v111;
          }
          else
          {
            uint64_t v119 = 0;
            int v120 = v144;
            do
            {
              double v121 = 0.0;
              int v122 = v120;
              int v123 = v18;
              unint64_t v124 = __ldb;
              do
              {
                double v125 = *v123++;
                double v121 = v121 + *v122 * v125;
                int v122 = (double *)((char *)v122 + v46);
                --v124;
              }
              while (v124);
              __C[v119 + v110] = v121;
              ++v119;
              ++v120;
            }
            while (v119 != __ldc);
          }
          ++v107;
          size_t v18 = (double *)((char *)v18 + v108);
          unint64_t v109 = (float64x2_t *)((char *)v109 + v108);
        }
        while (v107 != __ldc);
      }
      else
      {
        for (uint64_t i = 0; i != __ldc; ++i)
        {
          unint64_t v48 = 0;
          double v49 = __B[i * __ldb];
          do
          {
            double v50 = v144[v48 / 8] * v49 + 0.0;
            if (__ldb != 1)
            {
              double v50 = v50 + v144[v46 / 8 + v48 / 8] * __B[i * __ldb + 1];
              if (__ldb != 2) {
                double v50 = v50 + v144[2 * __ldc + v48 / 8] * __B[i * __ldb + 2];
              }
            }
            *(double *)((char *)v44 + v48) = v50;
            v48 += 8;
          }
          while (v46 != v48);
          double v44 = (cnprint::CNPrinter *)((char *)v44 + v46);
        }
      }
    }
    else
    {
      bzero(__C, 8 * __ldc * (unint64_t)__ldc);
    }
    unsigned int v51 = __ldc;
  }
  else
  {
    unsigned int v51 = 0;
  }
  int v52 = (double *)&v130;
  long long v131 = 0u;
  uint64_t v132 = 0;
  long long v134 = 0u;
  uint64_t v130 = 0x3FF0000000000000;
  uint64_t v133 = 0x3FF0000000000000;
  uint64_t v135 = 0;
  uint64_t v136 = 0x3FF0000000000000;
  uint64_t v158 = 0x300000003;
  double v153 = off_100452AF0;
  int v53 = (double *)v160;
  long long v159 = v160;
  unsigned int v154 = v51;
  int v155 = __ldc;
  uint64_t v54 = __ldc * v51;
  int v156 = v54;
  unsigned int v157 = v51;
  if ((int)v54 > 3)
  {
    int v60 = v151;
    uint64_t v61 = (v54 - 1) >> 1;
    uint64_t v62 = (float64x2_t *)v151;
    long long v63 = (float64x2_t *)&v130;
    uint64_t v64 = (float64x2_t *)v160;
    do
    {
      float64x2_t v65 = *v62++;
      float64x2_t v66 = v65;
      float64x2_t v67 = *v63++;
      *v64++ = vsubq_f64(v66, v67);
      --v61;
    }
    while (v61);
    *(float64x2_t *)&v160[(v54 - 2)] = vsubq_f64(*(float64x2_t *)&v60[(v54 - 2)], *(float64x2_t *)(&v130 + (v54 - 2)));
  }
  else if ((int)v54 >= 1)
  {
    long long v55 = v151;
    uint64_t v56 = __ldc * v51;
    do
    {
      double v57 = *v55++;
      double v58 = v57;
      double v59 = *v52++;
      *v53++ = v58 - v59;
      --v56;
    }
    while (v56);
  }
  uint64_t v167 = 0x300000003;
  long long v162 = off_100452AF0;
  double v168 = v169;
  unsigned int v163 = v51;
  int v164 = __ldc;
  int v165 = __ldc * v51;
  unsigned int v166 = v51;
  if ((int)v54 >= 1)
  {
    if (v54 < 4)
    {
      uint64_t v68 = 0;
LABEL_72:
      uint64_t v73 = v54 - v68;
      uint64_t v74 = 8 * v68 + 40;
      uint64_t v75 = (double *)((char *)&v162 + v74);
      double v76 = (double *)((char *)&v153 + v74);
      do
      {
        double v77 = *v76++;
        *v75++ = fabs(v77);
        --v73;
      }
      while (v73);
      goto LABEL_74;
    }
    uint64_t v68 = v54 & 0x7FFFFFFC;
    uint64_t v69 = (float64x2_t *)&v161;
    float64x2_t v70 = (float64x2_t *)v170;
    uint64_t v71 = v54 & 0xFFFFFFFC;
    do
    {
      float64x2_t v72 = vabsq_f64(*v69);
      v70[-1] = vabsq_f64(v69[-1]);
      float64x2_t *v70 = v72;
      v69 += 2;
      v70 += 2;
      v71 -= 4;
    }
    while (v71);
    if (v68 != v54) {
      goto LABEL_72;
    }
  }
LABEL_74:
  int v172 = 3;
  v170[7] = off_100452AF0;
  long long v173 = v174;
  *(_DWORD *)v171 = 1;
  *(_DWORD *)&v171[4] = __ldc;
  *(_DWORD *)&v171[8] = __ldc;
  *(void *)&v171[12] = 0x300000001;
  if (!__ldc)
  {
    if (v51 != 1)
    {
      LODWORD(__ldc) = 0;
      goto LABEL_100;
    }
    goto LABEL_99;
  }
  if (v51 < 2)
  {
    uint64_t v83 = 0;
    if (__ldc < 4) {
      goto LABEL_90;
    }
    if (v51 != 1) {
      goto LABEL_90;
    }
    uint64_t v83 = __ldc & 0xFFFFFFFC;
    double v84 = (long long *)v170;
    double v85 = v176;
    uint64_t v86 = v83;
    do
    {
      long long v87 = *v84;
      *(v85 - 1) = *(v84 - 1);
      *double v85 = v87;
      v84 += 2;
      v85 += 2;
      v86 -= 4;
    }
    while (v86);
    if (v83 != __ldc)
    {
LABEL_90:
      uint64_t v88 = __ldc - v83;
      float64x2_t v89 = &v174[v83];
      int v90 = v51 * v83;
      do
      {
        *v89++ = v169[v90];
        v90 += v51;
        --v88;
      }
      while (v88);
    }
  }
  else
  {
    uint64_t v78 = 0;
    int v79 = 1;
    do
    {
      double v80 = *(double *)&v169[v51 * v78];
      int v81 = v79;
      uint64_t v82 = v51 - 1;
      do
      {
        if (*(double *)&v169[v81] > v80) {
          double v80 = *(double *)&v169[v81];
        }
        ++v81;
        --v82;
      }
      while (v82);
      *(double *)&v174[v78++] = v80;
      v79 += v51;
    }
    while (v78 != __ldc);
  }
  if (v51 == 1 || __ldc == 1)
  {
    if ((int)__ldc >= 2)
    {
      double v91 = *(double *)v174;
      uint64_t v92 = __ldc - 1;
      v93 = (double *)&v175;
      do
      {
        double v94 = *v93;
        if (*v93 > v91)
        {
          *(double *)uint64_t v174 = *v93;
          double v91 = v94;
        }
        ++v93;
        --v92;
      }
      while (v92);
    }
LABEL_99:
    *(void *)&long long v95 = 0x100000001;
    *((void *)&v95 + 1) = 0x100000001;
    *(_OWORD *)v171 = v95;
    LODWORD(__ldc) = 1;
  }
LABEL_100:
  uint64_t v179 = 0x300000003;
  uint64_t v177 = off_100452AF0;
  v180 = v181;
  if (!__ldc) {
    goto LABEL_112;
  }
  if (__ldc < 4)
  {
    uint64_t v96 = 0;
    do
    {
LABEL_106:
      v181[v96] = v174[v96];
      ++v96;
    }
    while (__ldc != v96);
    goto LABEL_107;
  }
  uint64_t v96 = __ldc & 0xFFFFFFFC;
  uint64_t v97 = (long long *)v176;
  int v98 = &v183;
  uint64_t v99 = v96;
  do
  {
    long long v100 = *v97;
    *((_OWORD *)v98 - 1) = *(v97 - 1);
    *(_OWORD *)int v98 = v100;
    v97 += 2;
    v98 += 4;
    v99 -= 4;
  }
  while (v99);
  if (v96 != __ldc) {
    goto LABEL_106;
  }
LABEL_107:
  if ((int)__ldc >= 2)
  {
    double v101 = *(double *)v181;
    uint64_t v102 = __ldc - 1;
    uint64_t v103 = (double *)&v182;
    do
    {
      double v104 = *v103;
      if (*v103 > v101)
      {
        *(double *)uint64_t v181 = *v103;
        double v101 = v104;
      }
      ++v103;
      --v102;
    }
    while (v102);
  }
LABEL_112:
  *(void *)&long long v105 = 0x100000001;
  *((void *)&v105 + 1) = 0x100000001;
  long long v178 = v105;
  if (fabs(*(double *)v181) > 0.00001) {
    goto LABEL_114;
  }
  uint64_t v209 = 0x100000003;
  long long v208 = xmmword_1003E69E0;
  float64x2_t v207 = off_100452E98;
  uint64_t v210 = v211;
  uint64_t v186 = 0x300000003;
  long long __K = xmmword_1003E6950;
  v184 = off_100452AF0;
  v187 = &v188;
  if (fabs(sub_1000C73A4((uint64_t)v189, (uint64_t)&v207, (uint64_t)&v184) + -1.0) > 0.00001)
  {
LABEL_114:
    if (cnprint::CNPrinter::GetLogLevel(v44) <= 1)
    {
      LOWORD(v184) = 12;
      LOBYTE(v177) = 1;
LABEL_116:
      cnprint::CNPrinter::Print();
    }
    return 0;
  }
  uint64_t v106 = cntransformation::CNRigidTransformation::SetTransformationMatrix();
  if ((v106 & 1) == 0)
  {
    if (cnprint::CNPrinter::GetLogLevel((cnprint::CNPrinter *)v106) > 1) {
      return 0;
    }
    LOWORD(v184) = 12;
    LOBYTE(v177) = 1;
    goto LABEL_116;
  }
  return 1;
}

BOOL sub_1000C4EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((*(unsigned char *)(a2 + 52) & 4) == 0)
  {
    if (cnprint::CNPrinter::GetLogLevel((cnprint::CNPrinter *)a1) <= 1)
    {
      *(_WORD *)v252 = 12;
      LOBYTE(v242) = 1;
LABEL_140:
      cnprint::CNPrinter::Print();
    }
    return 0;
  }
  double v5 = *(double *)(a2 + 32);
  *(void *)&v252[8] = 0;
  *(void *)v252 = 0;
  int v6 = (cnprint::CNPrinter *)CNTimeSpan::SetTimeSpan((CNTimeSpan *)v252, 0, v5);
  *(_OWORD *)(a3 + 8) = *(_OWORD *)v252;
  if ((*(unsigned char *)(a1 + 64) & 1) == 0)
  {
    if (cnprint::CNPrinter::GetLogLevel(v6) > 1) {
      return 0;
    }
LABEL_6:
    *(_WORD *)v252 = 12;
    LOBYTE(v242) = 1;
    (*(void (**)(uint64_t))(*(void *)a3 + 16))(a3);
    goto LABEL_140;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7) {
    uint64_t v7 = *(void *)(qword_10047E990 + 16);
  }
  double v8 = *(double *)(v7 + 32);
  *(void *)&v252[8] = 0;
  *(void *)v252 = 0;
  LogLevel = (cnprint::CNPrinter *)CNTimeSpan::SetTimeSpan((CNTimeSpan *)v252, 0, v8);
  *(_OWORD *)(a3 + 104) = *(_OWORD *)v252;
  int v10 = *(_DWORD *)(a1 + 64);
  if ((v10 & 0x10) == 0 || ((float v11 = *(float *)(a1 + 56), v11 >= 0.0) ? (v12 = v11 > 1.0) : (v12 = 1), v12))
  {
    if (cnprint::CNPrinter::GetLogLevel(LogLevel) > 1) {
      return 0;
    }
    goto LABEL_6;
  }
  *(double *)(a3 + 1088) = v11;
  if ((v10 & 4) == 0) {
    goto LABEL_138;
  }
  uint64_t v13 = *(void *)(a1 + 32);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_10047E990 + 32);
  }
  if (*(_DWORD *)(v13 + 24) != 4) {
    goto LABEL_138;
  }
  uint64_t v244 = 0x400000004;
  long long v243 = xmmword_1003E6B90;
  uint64_t v242 = off_100452EE0;
  int v245 = v246;
  uint64_t v14 = *(void **)(v13 + 16);
  if (*(_DWORD *)(*v14 + 24) != 4) {
    goto LABEL_138;
  }
  uint64_t v15 = *(void **)(*v14 + 16);
  v246[0] = *v15;
  v246[1] = v15[1];
  v246[2] = v15[2];
  v246[3] = v15[3];
  uint64_t v16 = v14[1];
  if (*(_DWORD *)(v16 + 24) != 4) {
    goto LABEL_138;
  }
  uint64_t v17 = *(void **)(v16 + 16);
  v246[4] = *v17;
  v246[5] = v17[1];
  v246[6] = v17[2];
  v246[7] = v17[3];
  uint64_t v18 = v14[2];
  if (*(_DWORD *)(v18 + 24) != 4) {
    goto LABEL_138;
  }
  int v19 = *(void **)(v18 + 16);
  v246[8] = *v19;
  v246[9] = v19[1];
  v246[10] = v19[2];
  v246[11] = v19[3];
  uint64_t v20 = v14[3];
  if (*(_DWORD *)(v20 + 24) != 4) {
    goto LABEL_138;
  }
  uint64_t v21 = *(void **)(v20 + 16);
  v246[12] = *v21;
  v246[13] = v21[1];
  v246[14] = v21[2];
  v246[15] = v21[3];
  v255[0] = &_mh_execute_header;
  uint64_t v238 = 0x100000003;
  v236 = off_100452E98;
  long long v239 = &v240;
  long long v237 = xmmword_1003E69E0;
  int v241 = 2;
  uint64_t v240 = &_mh_execute_header;
  sub_1000C79B0((uint64_t)v252, (uint64_t)&v242, (uint64_t)&v236, (uint64_t)&v236);
  uint64_t v181 = 0x300000003;
  v176 = off_100452AF0;
  unint64_t __ldb = *(unsigned int *)&v252[8];
  uint64_t __ldc = *(unsigned int *)&v252[12];
  int v177 = *(_DWORD *)&v252[8];
  int v178 = *(_DWORD *)&v252[12];
  uint64_t v24 = (*(_DWORD *)&v252[12] * *(_DWORD *)&v252[8]);
  int v179 = *(_DWORD *)&v252[12] * *(_DWORD *)&v252[8];
  int v180 = *(_DWORD *)&v252[8];
  uint64_t v182 = (uint64_t *)__B;
  int v25 = *(_DWORD *)&v252[16];
  if (*(int *)&v252[16] > 3)
  {
    int v33 = v254;
    uint64_t v34 = (*(_DWORD *)&v252[16] - 1) >> 1;
    int v35 = (long long *)v254;
    int v36 = __B;
    do
    {
      long long v37 = *v35++;
      *(_OWORD *)int v36 = v37;
      v36 += 2;
      --v34;
    }
    while (v34);
    *(_OWORD *)&__B[v25 - 2] = *(_OWORD *)&v33[v25 - 2];
  }
  else
  {
    if ((int)v24 < 1) {
      goto LABEL_36;
    }
    uint64_t v26 = v254;
    if (v24 < 6 || (unint64_t)((char *)&v176 - (char *)v254 + 40) < 0x20)
    {
      uint64_t v27 = 0;
LABEL_30:
      uint64_t v28 = v24 - v27;
      uint64_t v29 = v27;
      unint64_t v30 = (uint64_t *)&(&v176)[v27 + 5];
      long long v31 = &v26[v29];
      do
      {
        uint64_t v32 = *v31++;
        *v30++ = v32;
        --v28;
      }
      while (v28);
      goto LABEL_36;
    }
    uint64_t v27 = v24 & 0x7FFFFFFC;
    uint64_t v160 = (long long *)(v254 + 2);
    uint64_t v161 = v184;
    uint64_t v162 = v24 & 0xFFFFFFFC;
    do
    {
      long long v163 = *v160;
      *(v161 - 1) = *(v160 - 1);
      *uint64_t v161 = v163;
      v160 += 2;
      v161 += 2;
      v162 -= 4;
    }
    while (v162);
    if (v27 != v24) {
      goto LABEL_30;
    }
  }
LABEL_36:
  uint64_t v201 = 0x300000003;
  long long v196 = off_100452AF0;
  double v202 = v203;
  int v197 = __ldc;
  int v198 = __ldb;
  int v199 = v24;
  int v200 = __ldc;
  if (__ldc && __ldb)
  {
    int v38 = 0;
    int v39 = 0;
    int v40 = __ldb - 1;
    int v41 = __ldb & 0xFFFFFFFC;
    do
    {
      if (__ldb >= 0xA)
      {
        BOOL v43 = v39 * (int)__ldb + v40 >= v39 * (int)__ldb && __ldc == 1;
        int v42 = 0;
        if (v43 && v39 + v40 >= v39)
        {
          do
          {
            int v45 = &__B[v38 + v42];
            long long v46 = *(_OWORD *)v45;
            long long v47 = *((_OWORD *)v45 + 1);
            unint64_t v48 = &v203[v39 + v42];
            *(_OWORD *)unint64_t v48 = v46;
            *((_OWORD *)v48 + 1) = v47;
            v42 += 4;
          }
          while (v41 != v42);
          int v42 = __ldb & 0xFFFFFFFC;
          if (__ldb == v41) {
            goto LABEL_39;
          }
        }
      }
      else
      {
        int v42 = 0;
      }
      int v49 = v39 + __ldc * v42;
      do
      {
        v203[v49] = __B[v38 + v42++];
        v49 += __ldc;
      }
      while (__ldb != v42);
LABEL_39:
      ++v39;
      v38 += __ldb;
    }
    while (v39 != __ldc);
  }
  uint64_t v208 = 0x300000003;
  *(void *)&long long v205 = off_100452AF0;
  uint64_t v209 = __C;
  DWORD2(v205) = __ldc;
  HIDWORD(v205) = __ldc;
  int v206 = __ldc * __ldc;
  int v207 = __ldc;
  if (__ldc <= __ldb) {
    int v50 = __ldb;
  }
  else {
    int v50 = __ldc;
  }
  if (v50 > 5)
  {
    cblas_dgemm(CblasColMajor, CblasNoTrans, CblasNoTrans, __ldc, __ldc, __ldb, 1.0, v203, __ldc, __B, __ldb, 0.0, __C, __ldc);
    unsigned int v76 = DWORD2(v205);
    LODWORD(__ldc) = HIDWORD(v205);
  }
  else if (__ldc)
  {
    if (__ldb)
    {
      uint64_t v51 = 0;
      uint64_t v52 = 8 * __ldb;
      uint64_t v53 = 8 * __ldc;
      uint64_t v54 = (float64x2_t *)v184;
      long long v55 = __C;
      uint64_t v56 = __B;
      do
      {
        if (__ldb > 3)
        {
          uint64_t v60 = v51 * __ldc;
          if (__ldc == 1)
          {
            double v61 = 0.0;
            uint64_t v62 = (float64x2_t *)&v204;
            long long v63 = v54;
            uint64_t v64 = __ldb & 0xFFFFFFFC;
            do
            {
              float64x2_t v65 = vmulq_f64(v62[-1], v63[-1]);
              float64x2_t v66 = vmulq_f64(*v62, *v63);
              double v61 = v61 + v65.f64[0] + v65.f64[1] + v66.f64[0] + v66.f64[1];
              v63 += 2;
              v62 += 2 * __ldc;
              v64 -= 4;
            }
            while (v64);
            if ((__ldb & 0xFFFFFFFC) != __ldb)
            {
              float64x2_t v67 = &v203[4 * (__ldb >> 2)];
              uint64_t v68 = __ldb & 0xFFFFFFFC;
              do
              {
                double v61 = v61 + *v67 * v56[v68++];
                float64x2_t v67 = (double *)((char *)v67 + v53);
              }
              while (__ldb != v68);
            }
            __C[v60] = v61;
          }
          else
          {
            uint64_t v69 = 0;
            float64x2_t v70 = v203;
            do
            {
              double v71 = 0.0;
              float64x2_t v72 = v70;
              uint64_t v73 = v56;
              unint64_t v74 = __ldb;
              do
              {
                double v75 = *v73++;
                double v71 = v71 + *v72 * v75;
                float64x2_t v72 = (double *)((char *)v72 + v53);
                --v74;
              }
              while (v74);
              __C[v69 + v60] = v71;
              ++v69;
              ++v70;
            }
            while (v69 != __ldc);
          }
        }
        else
        {
          unint64_t v57 = 0;
          double v58 = __B[v51 * __ldb];
          do
          {
            double v59 = v203[v57 / 8] * v58 + 0.0;
            if (__ldb != 1)
            {
              double v59 = v59 + v203[__ldc + v57 / 8] * __B[v51 * __ldb + 1];
              if (__ldb != 2) {
                double v59 = v59 + v203[2 * __ldc + v57 / 8] * __B[v51 * __ldb + 2];
              }
            }
            v55[v57 / 8] = v59;
            v57 += 8;
          }
          while (v53 != v57);
        }
        ++v51;
        uint64_t v56 = (double *)((char *)v56 + v52);
        uint64_t v54 = (float64x2_t *)((char *)v54 + v52);
        long long v55 = (double *)((char *)v55 + v53);
      }
      while (v51 != __ldc);
    }
    else
    {
      bzero(__C, 8 * __ldc * (unint64_t)__ldc);
    }
    unsigned int v76 = __ldc;
  }
  else
  {
    unsigned int v76 = 0;
  }
  uint64_t v187 = 0x300000003;
  uint64_t v185 = off_100452AF0;
  double v77 = (double *)&v189;
  long long v186 = xmmword_1003E6950;
  long long v190 = 0u;
  uint64_t v191 = 0;
  long long v193 = 0u;
  double v188 = &v189;
  uint64_t v189 = 0x3FF0000000000000;
  uint64_t v192 = 0x3FF0000000000000;
  uint64_t v194 = 0;
  uint64_t v195 = 0x3FF0000000000000;
  uint64_t v215 = 0x300000003;
  v211 = off_100452AF0;
  uint64_t v78 = (double *)v217;
  double v216 = v217;
  unint64_t v212 = __PAIR64__(__ldc, v76);
  uint64_t v79 = v76 * __ldc;
  int v213 = v79;
  unsigned int v214 = v76;
  if ((int)v79 > 3)
  {
    double v85 = v209;
    uint64_t v86 = (v79 - 1) >> 1;
    long long v87 = (float64x2_t *)v209;
    uint64_t v88 = (float64x2_t *)&v189;
    float64x2_t v89 = (float64x2_t *)v217;
    do
    {
      float64x2_t v90 = *v87++;
      float64x2_t v91 = v90;
      float64x2_t v92 = *v88++;
      *v89++ = vsubq_f64(v91, v92);
      --v86;
    }
    while (v86);
    *(float64x2_t *)&v217[(v79 - 2)] = vsubq_f64(*(float64x2_t *)&v85[(v79 - 2)], *(float64x2_t *)(&v189 + (v79 - 2)));
  }
  else if ((int)v79 >= 1)
  {
    double v80 = v209;
    uint64_t v81 = v76 * __ldc;
    do
    {
      double v82 = *v80++;
      double v83 = v82;
      double v84 = *v77++;
      *v78++ = v83 - v84;
      --v81;
    }
    while (v81);
  }
  uint64_t v224 = 0x300000003;
  int v219 = off_100452AF0;
  double v225 = v226;
  unsigned int v220 = v76;
  int v221 = __ldc;
  int v222 = v76 * __ldc;
  unsigned int v223 = v76;
  if ((int)v79 >= 1)
  {
    if (v79 < 4)
    {
      uint64_t v93 = 0;
LABEL_99:
      uint64_t v98 = v79 - v93;
      uint64_t v99 = 8 * v93 + 40;
      long long v100 = (double *)((char *)&v219 + v99);
      double v101 = (double *)((char *)&v211 + v99);
      do
      {
        double v102 = *v101++;
        *v100++ = fabs(v102);
        --v98;
      }
      while (v98);
      goto LABEL_101;
    }
    uint64_t v93 = v79 & 0x7FFFFFFC;
    double v94 = (float64x2_t *)&v218;
    long long v95 = (float64x2_t *)v227;
    uint64_t v96 = v79 & 0xFFFFFFFC;
    do
    {
      float64x2_t v97 = vabsq_f64(*v94);
      v95[-1] = vabsq_f64(v94[-1]);
      *long long v95 = v97;
      v94 += 2;
      v95 += 2;
      v96 -= 4;
    }
    while (v96);
    if (v93 != v79) {
      goto LABEL_99;
    }
  }
LABEL_101:
  *(_DWORD *)&v229[20] = 3;
  uint64_t v228 = off_100452AF0;
  v230 = &v231;
  *(_DWORD *)v229 = 1;
  *(_DWORD *)&v229[4] = __ldc;
  *(_DWORD *)&v229[8] = __ldc;
  *(void *)&v229[12] = 0x300000001;
  if (!__ldc)
  {
    if (v76 != 1)
    {
      LODWORD(__ldc) = 0;
      goto LABEL_127;
    }
    goto LABEL_126;
  }
  if (v76 < 2)
  {
    uint64_t v108 = 0;
    if (__ldc < 4) {
      goto LABEL_117;
    }
    if (v76 != 1) {
      goto LABEL_117;
    }
    uint64_t v108 = __ldc & 0xFFFFFFFC;
    unint64_t v109 = (long long *)v227;
    uint64_t v110 = &v232;
    uint64_t v111 = v108;
    do
    {
      long long v112 = *v109;
      *(v110 - 1) = *(v109 - 1);
      long long *v110 = v112;
      v109 += 2;
      v110 += 2;
      v111 -= 4;
    }
    while (v111);
    if (v108 != __ldc)
    {
LABEL_117:
      uint64_t v113 = __ldc - v108;
      uint64_t v114 = (void *)&v231 + v108;
      int v115 = v76 * v108;
      do
      {
        *v114++ = v226[v115];
        v115 += v76;
        --v113;
      }
      while (v113);
    }
  }
  else
  {
    uint64_t v103 = 0;
    int v104 = 1;
    do
    {
      double v105 = *(double *)&v226[v76 * v103];
      int v106 = v104;
      uint64_t v107 = v76 - 1;
      do
      {
        if (*(double *)&v226[v106] > v105) {
          double v105 = *(double *)&v226[v106];
        }
        ++v106;
        --v107;
      }
      while (v107);
      *((double *)&v231 + v103++) = v105;
      v104 += v76;
    }
    while (v103 != __ldc);
  }
  if (__ldc == 1 || v76 == 1)
  {
    if ((int)__ldc >= 2)
    {
      double v116 = *(double *)&v231;
      uint64_t v117 = __ldc - 1;
      uint64_t v118 = (double *)&v231 + 1;
      do
      {
        double v119 = *v118;
        if (*v118 > v116)
        {
          *(double *)&long long v231 = *v118;
          double v116 = v119;
        }
        ++v118;
        --v117;
      }
      while (v117);
    }
LABEL_126:
    *(void *)&long long v120 = 0x100000001;
    *((void *)&v120 + 1) = 0x100000001;
    *(_OWORD *)v229 = v120;
    LODWORD(__ldc) = 1;
  }
LABEL_127:
  uint64_t v172 = 0x300000003;
  double v121 = (cnprint::CNPrinter *)&v174;
  v170 = off_100452AF0;
  long long v173 = &v174;
  if (__ldc)
  {
    double v121 = (cnprint::CNPrinter *)memcpy(&v174, &v231, 8 * __ldc);
    double v122 = v174;
    if ((int)__ldc >= 2)
    {
      uint64_t v123 = __ldc - 1;
      unint64_t v124 = (double *)&v175;
      do
      {
        double v125 = *v124;
        if (*v124 > v122)
        {
          double v174 = *v124;
          double v122 = v125;
        }
        ++v124;
        --v123;
      }
      while (v123);
    }
  }
  else
  {
    double v122 = v174;
  }
  *(void *)&long long v126 = 0x100000001;
  *((void *)&v126 + 1) = 0x100000001;
  long long v171 = v126;
  if (fabs(v122) > 0.00001) {
    goto LABEL_136;
  }
  uint64_t v249 = 0x100000003;
  long long v248 = xmmword_1003E69E0;
  v247 = off_100452E98;
  uint64_t v250 = &v251;
  uint64_t v253 = 0x300000003;
  *(_OWORD *)&v252[8] = xmmword_1003E6950;
  *(void *)v252 = off_100452AF0;
  uint64_t v254 = v255;
  if (fabs(sub_1000C73A4((uint64_t)&v176, (uint64_t)&v247, (uint64_t)v252) + -1.0) > 0.00001)
  {
LABEL_136:
    LogLevel = (cnprint::CNPrinter *)cnprint::CNPrinter::GetLogLevel(v121);
    if (LogLevel <= 1)
    {
      *(_WORD *)v252 = 12;
      LOBYTE(v170) = 1;
      LogLevel = (cnprint::CNPrinter *)cnprint::CNPrinter::Print();
    }
LABEL_138:
    if (cnprint::CNPrinter::GetLogLevel(LogLevel) > 1) {
      return 0;
    }
LABEL_139:
    *(_WORD *)v252 = 12;
    LOBYTE(v242) = 1;
    (*(void (**)(uint64_t))(*(void *)a3 + 16))(a3);
    goto LABEL_140;
  }
  uint64_t v172 = 0x100000001;
  v170 = off_100452F70;
  *(void *)&long long v128 = 0x100000001;
  *((void *)&v128 + 1) = 0x100000001;
  long long v171 = v128;
  long long v173 = &v174;
  LODWORD(v174) = 3;
  sub_1000C7F1C((uint64_t)v252, (uint64_t)&v242, (uint64_t)&v236, (uint64_t)&v170);
  uint64_t v224 = 0x100000003;
  int v219 = off_100452C18;
  unsigned int v220 = *(_DWORD *)&v252[8];
  int v221 = *(_DWORD *)&v252[12];
  uint64_t v129 = (*(_DWORD *)&v252[12] * *(_DWORD *)&v252[8]);
  int v222 = *(_DWORD *)&v252[12] * *(_DWORD *)&v252[8];
  unsigned int v223 = *(_DWORD *)&v252[8];
  double v225 = v226;
  int v130 = *(_DWORD *)&v252[16];
  if (*(int *)&v252[16] > 3)
  {
    int v138 = v254;
    uint64_t v139 = (*(_DWORD *)&v252[16] - 1) >> 1;
    int v140 = (long long *)v254;
    int v141 = v226;
    do
    {
      long long v142 = *v140++;
      *v141++ = v142;
      --v139;
    }
    while (v139);
    *(_OWORD *)&v226[v130 - 2] = *(_OWORD *)&v138[v130 - 2];
  }
  else
  {
    if ((int)v129 < 1) {
      goto LABEL_153;
    }
    long long v131 = v254;
    if (v129 < 6 || (unint64_t)((char *)&v219 - (char *)v254 + 40) < 0x20)
    {
      uint64_t v132 = 0;
LABEL_147:
      uint64_t v133 = v129 - v132;
      uint64_t v134 = v132;
      uint64_t v135 = &(&v219)[v132 + 5];
      uint64_t v136 = (uint64_t (***)())&v131[v134];
      do
      {
        uint64_t v137 = *v136++;
        *v135++ = v137;
        --v133;
      }
      while (v133);
      goto LABEL_153;
    }
    uint64_t v132 = v129 & 0x7FFFFFFC;
    unsigned int v166 = (long long *)(v254 + 2);
    uint64_t v167 = v227;
    uint64_t v168 = v129 & 0xFFFFFFFC;
    do
    {
      long long v169 = *v166;
      *(v167 - 1) = *(v166 - 1);
      *uint64_t v167 = v169;
      v166 += 2;
      v167 += 2;
      v168 -= 4;
    }
    while (v168);
    if (v132 != v129) {
      goto LABEL_147;
    }
  }
LABEL_153:
  uint64_t v172 = 0x100000003;
  v170 = off_100452C18;
  long long v171 = xmmword_1003E69E0;
  long long v173 = &v174;
  uint64_t v253 = 0x100000134;
  *(_OWORD *)&v252[8] = xmmword_1003E6BA0;
  *(void *)v252 = off_100453048;
  uint64_t v254 = v255;
  *(void *)&v229[16] = 0x100000003;
  *(_OWORD *)v229 = xmmword_1003E69E0;
  uint64_t v228 = off_100452C18;
  v230 = &v231;
  sub_1000C8CDC((uint64_t)&v219, (uint64_t)&v170, (uint64_t)v252, (uint64_t)&v228, "2");
  if ((v144 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    LogLevel = (cnprint::CNPrinter *)cnprint::CNPrinter::GetLogLevel(v143);
    if (LogLevel > 1) {
      goto LABEL_138;
    }
    goto LABEL_184;
  }
  uint64_t v145 = cntransformation::CNRigidTransformation::SetTransformationMatrix();
  if ((v145 & 1) == 0)
  {
    LogLevel = (cnprint::CNPrinter *)cnprint::CNPrinter::GetLogLevel((cnprint::CNPrinter *)v145);
    if (LogLevel > 1) {
      goto LABEL_138;
    }
LABEL_184:
    *(_WORD *)v252 = 12;
    LOBYTE(v170) = 1;
    LogLevel = (cnprint::CNPrinter *)cnprint::CNPrinter::Print();
    goto LABEL_138;
  }
  BOOL v146 = sub_1000C6250(*(void *)(a1 + 40), *(_DWORD *)(a1 + 64));
  if (!v146)
  {
    if (cnprint::CNPrinter::GetLogLevel((cnprint::CNPrinter *)v146) > 1) {
      return 0;
    }
    goto LABEL_139;
  }
  sub_1000C6578(a3 + 640, a3 + 200);
  *(void *)&v229[16] = 0x300000003;
  uint64_t v228 = off_100452AF0;
  v230 = &v231;
  *(_OWORD *)v229 = xmmword_1003E6950;
  long long v234 = 0u;
  long long v233 = 0u;
  long long v232 = 0u;
  long long v231 = 0u;
  uint64_t v235 = 0;
  *(void *)&long long v234 = 0xBFF0000000000000;
  *(void *)&long long v233 = 0xBFF0000000000000;
  *(void *)&long long v232 = 0xBFF0000000000000;
  sub_1000C8470(&v205, (uint64_t)&v228);
  cnrotation::CNRotation::CNRotation((cnrotation::CNRotation *)&v196, (const cnrotation::CNRotation *)(a3 + 640));
  cnrotation::Cat((uint64_t *)&v185, (cnrotation *)&v196, (const cnrotation::CNRotation *)&v205, v147);
  cnrotation::CNRotation::operator=();
  cnrotation::CNRotation::drdq((uint64_t *)&v176, (cnrotation::CNRotation *)&v185);
  cnrotation::CNRotation::dqaqdqa((uint64_t *)v252, (cnrotation::CNRotation *)&v205);
  sub_1000C6994((uint64_t)&v176, (uint64_t)v252, (uint64_t)&v242);
  cnrotation::CNRotation::dqdr((uint64_t *)&v170, (cnrotation::CNRotation *)&v196);
  sub_1000C6914((uint64_t)&v242, (uint64_t)&v170, (uint64_t)&v219);
  sub_1000C6A58((uint64_t)v252, a3 + 736);
  sub_1000C6A58((uint64_t)&v242, a3 + 960);
  sub_1000C6B60((uint64_t)&v219, (uint64_t)v252, (uint64_t)&v170);
  sub_1000C6BE0((uint64_t)&v219, (uint64_t)&v211);
  sub_1000C6B60((uint64_t)&v170, (uint64_t)&v211, (uint64_t)&v176);
  cntransformation::CNRigidTransformation::SetPrr();
  sub_1000C6B60((uint64_t)&v219, (uint64_t)&v242, (uint64_t)&v176);
  cntransformation::CNRigidTransformation::SetPrp();
  *(unsigned char *)(a3 + 1080) = 1;
  sub_1000C6A58((uint64_t)&v176, a3 + 848);
  sub_1000C6D80(a3 + 672);
  BOOL v151 = (*v182 < 0 || ((*v182 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 > 0x3FE)
      && (unint64_t)(*v182 - 1) > 0xFFFFFFFFFFFFELL;
  BOOL v159 = !v151
      && ((uint64_t v152 = v182[v180 + 1], v152 >= 0)
        ? (BOOL v153 = ((v152 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 > 0x3FE)
        : (BOOL v153 = 1),
          v153 ? (BOOL v154 = (unint64_t)(v152 - 1) > 0xFFFFFFFFFFFFELL) : (BOOL v154 = 0),
          !v154
       && ((uint64_t v155 = v182[2 * v180 + 2], v155 >= 0)
         ? (BOOL v156 = ((v155 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 > 0x3FE)
         : (BOOL v156 = 1),
           v156 ? (BOOL v157 = (unint64_t)(v155 - 1) > 0xFFFFFFFFFFFFELL) : (BOOL v157 = 0),
           !v157))
      && v149 > 3185504.5
      && (*(void *)&v149 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
  if (!cnprint::CNPrinter::GetLogLevel(v148))
  {
    LOWORD(v247) = 12;
    LOBYTE(v236) = 0;
    (*(void (**)(uint64_t))(*(void *)a3 + 16))(a3);
    uint64_t v164 = *(void *)(a3 + 112);
    v170 = *(uint64_t (***)())(a3 + 104);
    *(void *)&long long v171 = v164;
    v211 = (uint64_t (**)())(*(uint64_t (**)(uint64_t))(*(void *)a3 + 16))(a3);
    unint64_t v212 = v165;
    CNTimeSpan::operator-();
    cnprint::CNPrinter::Print();
  }
  return *(unsigned char *)(a3 + 1080) && v159;
}

BOOL sub_1000C6250(uint64_t a1, char a2)
{
  if ((a2 & 8) == 0) {
    return 0;
  }
  if (a1)
  {
    if (*(_DWORD *)(a1 + 24) != 6) {
      goto LABEL_15;
    }
  }
  else
  {
    a1 = *(void *)(qword_10047E990 + 40);
    if (*(_DWORD *)(a1 + 24) != 6) {
      goto LABEL_15;
    }
  }
  uint64_t v3 = *(void **)(a1 + 16);
  if (*(_DWORD *)(*v3 + 24) == 6
    && *(_DWORD *)(v3[1] + 24) == 6
    && *(_DWORD *)(v3[2] + 24) == 6
    && *(_DWORD *)(v3[3] + 24) == 6
    && *(_DWORD *)(v3[4] + 24) == 6
    && *(_DWORD *)(v3[5] + 24) == 6)
  {
    uint64_t v4 = cntransformation::CNRigidTransformation::SetCovarianceMatrix();
    if (v4)
    {
      int v5 = 0;
    }
    else
    {
      int v5 = 1;
      if (cnprint::CNPrinter::GetLogLevel((cnprint::CNPrinter *)v4) <= 1) {
        cnprint::CNPrinter::Print();
      }
    }
    return v5 == 0;
  }
LABEL_15:
  int v5 = 1;
  return v5 == 0;
}

uint64_t sub_1000C6578(uint64_t a1, uint64_t a2)
{
  cnrotation::CNRotation::operator=();
  if (a1 == a2)
  {
LABEL_50:
    *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
    return a1;
  }
  int v5 = *(_DWORD *)(a2 + 40);
  int v4 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 40) = v5;
  *(_DWORD *)(a1 + 44) = v4;
  uint64_t v6 = (v4 * v5);
  *(_DWORD *)(a1 + 48) = v6;
  *(_DWORD *)(a1 + 52) = v5;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7 > 3)
  {
    uint64_t v20 = (v7 - 2);
    uint64_t v21 = *(_OWORD **)(a1 + 64);
    uint64_t v22 = *(long long **)(a2 + 64);
    uint64_t v23 = (v7 - 1) >> 1;
    uint64_t v24 = v22;
    int v25 = v21;
    do
    {
      long long v26 = *v24++;
      *v25++ = v26;
      --v23;
    }
    while (v23);
    *(_OWORD *)((char *)v21 + 8 * v20) = *(long long *)((char *)v22 + 8 * v20);
  }
  else if ((int)v6 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = *(void *)(a2 + 64);
    uint64_t v10 = *(void *)(a1 + 64);
    if (v6 < 4) {
      goto LABEL_9;
    }
    if ((unint64_t)(v10 - v9) < 0x20) {
      goto LABEL_9;
    }
    uint64_t v8 = v6 & 0x7FFFFFFC;
    float v11 = (long long *)(v9 + 16);
    BOOL v12 = (_OWORD *)(v10 + 16);
    uint64_t v13 = v6 & 0xFFFFFFFC;
    do
    {
      long long v14 = *v11;
      *(v12 - 1) = *(v11 - 1);
      *BOOL v12 = v14;
      v11 += 2;
      v12 += 2;
      v13 -= 4;
    }
    while (v13);
    if (v8 != v6)
    {
LABEL_9:
      uint64_t v15 = v6 - v8;
      uint64_t v16 = 8 * v8;
      uint64_t v17 = (void *)(v10 + v16);
      uint64_t v18 = (uint64_t *)(v9 + v16);
      do
      {
        uint64_t v19 = *v18++;
        *v17++ = v19;
        --v15;
      }
      while (v15);
    }
  }
  int v28 = *(_DWORD *)(a2 + 104);
  int v27 = *(_DWORD *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = v28;
  *(_DWORD *)(a1 + 108) = v27;
  uint64_t v29 = (v27 * v28);
  *(_DWORD *)(a1 + 112) = v29;
  *(_DWORD *)(a1 + 116) = v28;
  int v30 = *(_DWORD *)(a2 + 112);
  if (v30 > 3)
  {
    uint64_t v43 = (v30 - 2);
    double v44 = *(_OWORD **)(a1 + 128);
    int v45 = *(long long **)(a2 + 128);
    uint64_t v46 = (v30 - 1) >> 1;
    long long v47 = v45;
    unint64_t v48 = v44;
    do
    {
      long long v49 = *v47++;
      *v48++ = v49;
      --v46;
    }
    while (v46);
    *(_OWORD *)((char *)v44 + 8 * v43) = *(long long *)((char *)v45 + 8 * v43);
  }
  else if ((int)v29 >= 1)
  {
    uint64_t v31 = 0;
    uint64_t v32 = *(void *)(a2 + 128);
    uint64_t v33 = *(void *)(a1 + 128);
    if (v29 < 4) {
      goto LABEL_22;
    }
    if ((unint64_t)(v33 - v32) < 0x20) {
      goto LABEL_22;
    }
    uint64_t v31 = v29 & 0x7FFFFFFC;
    uint64_t v34 = (long long *)(v32 + 16);
    int v35 = (_OWORD *)(v33 + 16);
    uint64_t v36 = v29 & 0xFFFFFFFC;
    do
    {
      long long v37 = *v34;
      *(v35 - 1) = *(v34 - 1);
      *int v35 = v37;
      v34 += 2;
      v35 += 2;
      v36 -= 4;
    }
    while (v36);
    if (v31 != v29)
    {
LABEL_22:
      uint64_t v38 = v29 - v31;
      uint64_t v39 = 8 * v31;
      int v40 = (void *)(v33 + v39);
      int v41 = (uint64_t *)(v32 + v39);
      do
      {
        uint64_t v42 = *v41++;
        *v40++ = v42;
        --v38;
      }
      while (v38);
    }
  }
  int v51 = *(_DWORD *)(a2 + 216);
  int v50 = *(_DWORD *)(a2 + 220);
  *(_DWORD *)(a1 + 216) = v51;
  *(_DWORD *)(a1 + 220) = v50;
  uint64_t v52 = (v50 * v51);
  *(_DWORD *)(a1 + 224) = v52;
  *(_DWORD *)(a1 + 228) = v51;
  int v53 = *(_DWORD *)(a2 + 224);
  if (v53 > 3)
  {
    uint64_t v66 = (v53 - 2);
    float64x2_t v67 = *(_OWORD **)(a1 + 240);
    uint64_t v68 = *(long long **)(a2 + 240);
    uint64_t v69 = (v53 - 1) >> 1;
    float64x2_t v70 = v68;
    double v71 = v67;
    do
    {
      long long v72 = *v70++;
      *v71++ = v72;
      --v69;
    }
    while (v69);
    *(_OWORD *)((char *)v67 + 8 * v66) = *(long long *)((char *)v68 + 8 * v66);
  }
  else if ((int)v52 >= 1)
  {
    uint64_t v54 = 0;
    uint64_t v55 = *(void *)(a2 + 240);
    uint64_t v56 = *(void *)(a1 + 240);
    if (v52 < 4) {
      goto LABEL_35;
    }
    if ((unint64_t)(v56 - v55) < 0x20) {
      goto LABEL_35;
    }
    uint64_t v54 = v52 & 0x7FFFFFFC;
    unint64_t v57 = (long long *)(v55 + 16);
    double v58 = (_OWORD *)(v56 + 16);
    uint64_t v59 = v52 & 0xFFFFFFFC;
    do
    {
      long long v60 = *v57;
      *(v58 - 1) = *(v57 - 1);
      *double v58 = v60;
      v57 += 2;
      v58 += 2;
      v59 -= 4;
    }
    while (v59);
    if (v54 != v52)
    {
LABEL_35:
      uint64_t v61 = v52 - v54;
      uint64_t v62 = 8 * v54;
      long long v63 = (void *)(v56 + v62);
      uint64_t v64 = (uint64_t *)(v55 + v62);
      do
      {
        uint64_t v65 = *v64++;
        *v63++ = v65;
        --v61;
      }
      while (v61);
    }
  }
  int v73 = *(_DWORD *)(a2 + 328);
  int v74 = *(_DWORD *)(a2 + 332);
  *(_DWORD *)(a1 + 328) = v73;
  *(_DWORD *)(a1 + 332) = v74;
  uint64_t v75 = (v74 * v73);
  *(_DWORD *)(a1 + 336) = v75;
  *(_DWORD *)(a1 + 340) = v73;
  int v76 = *(_DWORD *)(a2 + 336);
  if (v76 <= 3)
  {
    if ((int)v75 >= 1)
    {
      uint64_t v77 = 0;
      uint64_t v78 = *(void *)(a2 + 352);
      uint64_t v79 = *(void *)(a1 + 352);
      if (v75 < 4) {
        goto LABEL_48;
      }
      if ((unint64_t)(v79 - v78) < 0x20) {
        goto LABEL_48;
      }
      uint64_t v77 = v75 & 0x7FFFFFFC;
      double v80 = (long long *)(v78 + 16);
      uint64_t v81 = (_OWORD *)(v79 + 16);
      uint64_t v82 = v75 & 0xFFFFFFFC;
      do
      {
        long long v83 = *v80;
        *(v81 - 1) = *(v80 - 1);
        *uint64_t v81 = v83;
        v80 += 2;
        v81 += 2;
        v82 -= 4;
      }
      while (v82);
      if (v77 != v75)
      {
LABEL_48:
        uint64_t v84 = v75 - v77;
        uint64_t v85 = 8 * v77;
        uint64_t v86 = (void *)(v79 + v85);
        long long v87 = (uint64_t *)(v78 + v85);
        do
        {
          uint64_t v88 = *v87++;
          *v86++ = v88;
          --v84;
        }
        while (v84);
      }
    }
    goto LABEL_50;
  }
  uint64_t v90 = (v76 - 2);
  float64x2_t v91 = *(_OWORD **)(a1 + 352);
  float64x2_t v92 = *(long long **)(a2 + 352);
  uint64_t v93 = (v76 - 1) >> 1;
  double v94 = v92;
  long long v95 = v91;
  do
  {
    long long v96 = *v94++;
    *v95++ = v96;
    --v93;
  }
  while (v93);
  *(_OWORD *)((char *)v91 + 8 * v90) = *(long long *)((char *)v92 + 8 * v90);
  *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
  return a1;
}

void sub_1000C6914(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 24) = 0x300000003;
  *(void *)a3 = off_100452AF0;
  *(_OWORD *)(a3 + 8) = xmmword_1003E6950;
  *(void *)(a3 + 32) = a3 + 40;
  sub_1000C2808(a1, a2, a3);
}

void sub_1000C6974(_Unwind_Exception *a1)
{
  void *v1 = off_100452B48;
  _Unwind_Resume(a1);
}

void sub_1000C6994(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 24) = 0x400000003;
  *(void *)a3 = off_100453090;
  *(_OWORD *)(a3 + 8) = xmmword_1003E6BC0;
  *(void *)(a3 + 32) = a3 + 40;
  sub_1000C2808(a1, a2, a3);
}

void sub_1000C69F8(_Unwind_Exception *a1)
{
  void *v1 = off_100452B48;
  _Unwind_Resume(a1);
}

void *sub_1000C6A18(void *result)
{
  *uint64_t result = off_100452B48;
  return result;
}

void *sub_1000C6A38(void *result)
{
  *uint64_t result = off_100452B48;
  return result;
}

__n128 sub_1000C6A58(uint64_t a1, uint64_t a2)
{
  result.n128_u64[0] = 0x300000003;
  *(void *)(a1 + 24) = 0x300000003;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_100452AF0;
  int v4 = *(_DWORD *)(a2 + 8);
  int v3 = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  uint64_t v5 = (v3 * v4);
  *(_DWORD *)(a1 + 16) = v5;
  *(_DWORD *)(a1 + 20) = v4;
  *(void *)(a1 + 32) = a1 + 40;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6 > 3)
  {
    uint64_t v14 = (v6 - 2);
    uint64_t v15 = *(long long **)(a2 + 32);
    uint64_t v16 = (v6 - 1) >> 1;
    uint64_t v17 = v15;
    uint64_t v18 = (_OWORD *)(a1 + 40);
    do
    {
      long long v19 = *v17++;
      *v18++ = v19;
      --v16;
    }
    while (v16);
    uint64_t v20 = 8 * v14;
    __n128 result = *(__n128 *)((char *)v15 + v20);
    *(__n128 *)(a1 + 40 + v20) = result;
  }
  else
  {
    if ((int)v5 < 1) {
      return result;
    }
    int v7 = *(__n128 **)(a2 + 32);
    if (v5 < 6 || (unint64_t)(a1 - (void)v7 + 40) < 0x20)
    {
      uint64_t v8 = 0;
LABEL_6:
      uint64_t v9 = v5 - v8;
      uint64_t v10 = v8;
      float v11 = (unint64_t *)(8 * v8 + a1 + 40);
      BOOL v12 = &v7->n128_u64[v10];
      do
      {
        unint64_t v13 = *v12++;
        result.n128_u64[0] = v13;
        *v11++ = v13;
        --v9;
      }
      while (v9);
      return result;
    }
    uint64_t v8 = v5 & 0x7FFFFFFC;
    uint64_t v21 = v7 + 1;
    uint64_t v22 = (__n128 *)(a1 + 56);
    uint64_t v23 = v5 & 0xFFFFFFFC;
    do
    {
      __n128 result = v21[-1];
      __n128 v24 = *v21;
      v22[-1] = result;
      *uint64_t v22 = v24;
      v21 += 2;
      v22 += 2;
      v23 -= 4;
    }
    while (v23);
    if (v8 != v5) {
      goto LABEL_6;
    }
  }
  return result;
}

void sub_1000C6B60(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 24) = 0x300000003;
  *(void *)a3 = off_100452AF0;
  *(_OWORD *)(a3 + 8) = xmmword_1003E6950;
  *(void *)(a3 + 32) = a3 + 40;
  sub_1000C2808(a1, a2, a3);
}

void sub_1000C6BC0(_Unwind_Exception *a1)
{
  void *v1 = off_100452B48;
  _Unwind_Resume(a1);
}

double sub_1000C6BE0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v3 = *(_DWORD *)(a1 + 8);
  int v2 = *(_DWORD *)(a1 + 12);
  *(void *)&long long v4 = 0x300000003;
  *(void *)(a2 + 24) = 0x300000003;
  *(void *)a2 = off_100452AF0;
  uint64_t v5 = a2 + 40;
  *(void *)(a2 + 32) = a2 + 40;
  *(_DWORD *)(a2 + 8) = v2;
  *(_DWORD *)(a2 + 12) = v3;
  *(_DWORD *)(a2 + 16) = v3 * v2;
  *(_DWORD *)(a2 + 20) = v2;
  if (v2 && v3)
  {
    int v6 = *(_DWORD *)(a1 + 20);
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = a2 + 40;
    if (v3 > 0xB)
    {
      if (v2 == 1)
      {
        signed int v15 = v3 & 0xFFFFFFFC;
        unint64_t v16 = v8 - v7;
        BOOL v18 = (int)(v3 - 1) < 0 || v16 < 0x20;
        if (v3 == v15)
        {
          if (v18)
          {
            int v19 = 0;
            for (int i = 0; i != v3; ++i)
            {
              *(void *)&long long v4 = *(void *)(v7 + 8 * i);
              *(void *)(v5 + 8 * v19++) = v4;
            }
          }
          else
          {
            long long v26 = (_OWORD *)(a2 + 56);
            int v27 = (long long *)(v7 + 16);
            do
            {
              long long v4 = *(v27 - 1);
              long long v28 = *v27;
              *(v26 - 1) = v4;
              *long long v26 = v28;
              v26 += 2;
              v27 += 2;
              v15 -= 4;
            }
            while (v15);
          }
        }
        else
        {
          if (v18)
          {
            signed int v15 = 0;
          }
          else
          {
            uint64_t v29 = (_OWORD *)(a2 + 56);
            int v30 = (long long *)(v7 + 16);
            unsigned int v31 = v3 & 0xFFFFFFFC;
            do
            {
              long long v32 = *v30;
              *(v29 - 1) = *(v30 - 1);
              *uint64_t v29 = v32;
              v29 += 2;
              v30 += 2;
              v31 -= 4;
            }
            while (v31);
          }
          signed int v33 = v15;
          do
          {
            *(void *)&long long v4 = *(void *)(v7 + 8 * v15);
            *(void *)(v5 + 8 * v33) = v4;
            ++v15;
            ++v33;
          }
          while (v3 != v15);
        }
      }
      else
      {
        int v21 = 0;
        for (int j = 0; j != v2; ++j)
        {
          int v23 = v21;
          int v24 = j;
          unsigned int v25 = v3;
          do
          {
            *(void *)&long long v4 = *(void *)(v7 + 8 * v23);
            *(void *)(v5 + 8 * v24) = v4;
            v24 += v2;
            ++v23;
            --v25;
          }
          while (v25);
          v21 += v6;
        }
      }
    }
    else
    {
      int v9 = 0;
      for (int k = 0; k != v2; ++k)
      {
        float v11 = (void *)(v8 + 8 * k);
        unsigned int v12 = v3;
        unint64_t v13 = (uint64_t *)(v7 + 8 * v9);
        do
        {
          uint64_t v14 = *v13++;
          *(void *)&long long v4 = v14;
          *float v11 = v14;
          v11 += v2;
          --v12;
        }
        while (v12);
        v9 += v6;
      }
    }
  }
  return *(double *)&v4;
}

void sub_1000C6D80(uint64_t a1)
{
  uint64_t v13 = 0x100000003;
  float v11 = off_100452C18;
  long long v12 = xmmword_1003E69E0;
  uint64_t v14 = &v15;
  uint64_t v8 = 0x100000134;
  int v6 = off_100453048;
  long long v7 = xmmword_1003E6BA0;
  int v9 = &v10;
  uint64_t v3 = 0x100000003;
  uint64_t v1 = off_100452C18;
  long long v2 = xmmword_1003E69E0;
  long long v4 = &v5;
  sub_1000C8CDC(a1, (uint64_t)&v11, (uint64_t)&v6, (uint64_t)&v1, "2");
}

void *sub_1000C6E6C(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    if (a2 >> 61) {
      sub_1000A9108();
    }
    uint64_t v4 = 8 * a2;
    uint64_t v5 = (char *)operator new(8 * a2);
    *a1 = v5;
    a1[2] = &v5[8 * a2];
    bzero(v5, 8 * a2);
    a1[1] = &v5[v4];
  }
  return a1;
}

void sub_1000C6EE8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_1000C6F04@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a2 + 28) = 3;
  *(void *)a2 = off_100452AF0;
  long long v2 = (double *)(a2 + 40);
  *(void *)(a2 + 32) = a2 + 40;
  unint64_t v3 = *(unsigned int *)(a1 + 12);
  *(_DWORD *)(a2 + 8) = 1;
  *(_DWORD *)(a2 + 12) = v3;
  *(_DWORD *)(a2 + 16) = v3;
  result.n128_u64[0] = 0x300000001;
  *(void *)(a2 + 20) = 0x300000001;
  if (!v3)
  {
    if (*(_DWORD *)(a1 + 8) != 1) {
      return result;
    }
LABEL_29:
    result.n128_u64[0] = 0x100000001;
    result.n128_u64[1] = 0x100000001;
    *(__n128 *)(a2 + 8) = result;
    return result;
  }
  uint64_t v5 = *(__n128 **)(a1 + 32);
  uint64_t v6 = *(unsigned int *)(a1 + 8);
  if (v6 < 2)
  {
    uint64_t v10 = 0;
    if (v3 >= 8 && v6 == 1)
    {
      if ((unint64_t)(a2 - (void)v5 + 40) >= 0x20)
      {
        uint64_t v10 = v3 & 0xFFFFFFFC;
        float v11 = v5 + 1;
        long long v12 = (__n128 *)(a2 + 56);
        uint64_t v13 = v10;
        do
        {
          __n128 result = v11[-1];
          __n128 v14 = *v11;
          v12[-1] = result;
          *long long v12 = v14;
          v11 += 2;
          v12 += 2;
          v13 -= 4;
        }
        while (v13);
        if (v10 == v3) {
          goto LABEL_21;
        }
      }
      else
      {
        uint64_t v10 = 0;
      }
    }
    uint64_t v15 = v3 - v10;
    unint64_t v16 = (void *)(a2 + 8 * v10 + 40);
    int v17 = v6 * v10;
    do
    {
      result.n128_u64[0] = v5->n128_u64[v17];
      *v16++ = result.n128_u64[0];
      v17 += v6;
      --v15;
    }
    while (v15);
    goto LABEL_21;
  }
  int v7 = 0;
  for (uint64_t i = 0; i != v3; ++i)
  {
    result.n128_u64[0] = v5->n128_u64[(v6 * i)];
    for (uint64_t j = 1; j != v6; ++j)
    {
      if (v5->n128_f64[(v7 + j)] > result.n128_f64[0]) {
        result.n128_u64[0] = v5->n128_u64[(v7 + j)];
      }
    }
    v2[i] = result.n128_f64[0];
    v7 += v6;
  }
LABEL_21:
  if (v3 == 1 || v6 == 1)
  {
    if ((int)v3 >= 2)
    {
      double v18 = *v2;
      uint64_t v19 = 6;
      do
      {
        double v21 = *(double *)(a2 + 8 * v19);
        if (v21 > v18)
        {
          double *v2 = v21;
          double v18 = v21;
        }
        unint64_t v20 = v19 - 4;
        ++v19;
      }
      while (v20 < v3);
    }
    goto LABEL_29;
  }
  return result;
}

float64x2_t sub_1000C7094@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2 = *(_DWORD *)(a1 + 8);
  int v3 = *(_DWORD *)(a1 + 12);
  *(void *)&result.f64[0] = 0x300000003;
  *(void *)(a2 + 24) = 0x300000003;
  *(void *)a2 = off_100452AF0;
  uint64_t v5 = (v3 * v2);
  *(void *)(a2 + 32) = a2 + 40;
  *(_DWORD *)(a2 + 8) = v2;
  *(_DWORD *)(a2 + 12) = v3;
  *(_DWORD *)(a2 + 16) = v5;
  *(_DWORD *)(a2 + 20) = v2;
  if ((int)v5 >= 1)
  {
    uint64_t v6 = *(float64x2_t **)(a1 + 32);
    if (v5 < 6 || (unint64_t)(a2 - (void)v6 + 40) < 0x20)
    {
      uint64_t v7 = 0;
LABEL_5:
      uint64_t v8 = v5 - v7;
      uint64_t v9 = v7;
      uint64_t v10 = (float64_t *)(v9 * 8 + a2 + 40);
      float v11 = &v6->f64[v9];
      do
      {
        double v12 = *v11++;
        result.f64[0] = fabs(v12);
        *v10++ = result.f64[0];
        --v8;
      }
      while (v8);
      return result;
    }
    uint64_t v7 = v5 & 0x7FFFFFFC;
    uint64_t v13 = v6 + 1;
    __n128 v14 = (float64x2_t *)(a2 + 56);
    uint64_t v15 = v5 & 0xFFFFFFFC;
    do
    {
      float64x2_t result = vabsq_f64(v13[-1]);
      float64x2_t v16 = vabsq_f64(*v13);
      v14[-1] = result;
      *__n128 v14 = v16;
      v13 += 2;
      v14 += 2;
      v15 -= 4;
    }
    while (v15);
    if (v7 != v5) {
      goto LABEL_5;
    }
  }
  return result;
}

float64x2_t sub_1000C7160@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&result.f64[0] = 0x300000003;
  *(void *)(a3 + 24) = 0x300000003;
  *(void *)a3 = off_100452AF0;
  uint64_t v4 = (float64_t *)(a3 + 40);
  *(void *)(a3 + 32) = a3 + 40;
  int v6 = *(_DWORD *)(a1 + 8);
  int v5 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a3 + 8) = v6;
  *(_DWORD *)(a3 + 12) = v5;
  uint64_t v7 = (v5 * v6);
  *(_DWORD *)(a3 + 16) = v7;
  *(_DWORD *)(a3 + 20) = v6;
  if ((int)v7 > 3)
  {
    uint64_t v13 = (v7 - 2);
    __n128 v14 = *(float64x2_t **)(a1 + 32);
    uint64_t v15 = *(float64x2_t **)(a2 + 32);
    float64x2_t v16 = (float64x2_t *)((char *)v15 + 8 * v13);
    uint64_t v17 = (v7 - 1) >> 1;
    double v18 = v14;
    uint64_t v19 = (float64x2_t *)v4;
    do
    {
      float64x2_t v20 = *v18++;
      float64x2_t v21 = v20;
      float64x2_t v22 = *v15++;
      *v19++ = vsubq_f64(v21, v22);
      --v17;
    }
    while (v17);
    float64x2_t result = vsubq_f64(*(float64x2_t *)((char *)v14 + 8 * v13), *v16);
    *(float64x2_t *)&v4[v13] = result;
  }
  else if ((int)v7 >= 1)
  {
    uint64_t v8 = *(double **)(a1 + 32);
    uint64_t v9 = *(double **)(a2 + 32);
    do
    {
      double v10 = *v8++;
      double v11 = v10;
      double v12 = *v9++;
      result.f64[0] = v11 - v12;
      *v4++ = result.f64[0];
      --v7;
    }
    while (v7);
  }
  return result;
}

double sub_1000C7220(uint64_t a1)
{
  uint64_t v9 = 0x100000003;
  uint64_t v7 = off_100452E98;
  long long v8 = xmmword_1003E69E0;
  double v10 = &v11;
  uint64_t v4 = 0x300000003;
  int v2 = off_100452AF0;
  long long v3 = xmmword_1003E6950;
  int v5 = &v6;
  return sub_1000C73A4(a1, (uint64_t)&v7, (uint64_t)&v2);
}

__n128 sub_1000C72C4(uint64_t a1, uint64_t a2)
{
  if (a1 + 32 != a2)
  {
    int v3 = *(_DWORD *)(a2 + 8);
    int v2 = *(_DWORD *)(a2 + 12);
    *(_DWORD *)(a1 + 40) = v3;
    *(_DWORD *)(a1 + 44) = v2;
    uint64_t v4 = (v2 * v3);
    *(_DWORD *)(a1 + 48) = v4;
    *(_DWORD *)(a1 + 52) = v3;
    int v5 = *(_DWORD *)(a2 + 16);
    if (v5 > 3)
    {
      uint64_t v19 = (v5 - 2);
      float64x2_t v20 = *(_OWORD **)(a1 + 64);
      float64x2_t v21 = *(long long **)(a2 + 32);
      uint64_t v22 = (v5 - 1) >> 1;
      int v23 = v21;
      int v24 = v20;
      do
      {
        long long v25 = *v23++;
        *v24++ = v25;
        --v22;
      }
      while (v22);
      uint64_t v26 = 8 * v19;
      __n128 result = *(__n128 *)((char *)v21 + v26);
      *(__n128 *)((char *)v20 + v26) = result;
    }
    else if ((int)v4 >= 1)
    {
      uint64_t v6 = 0;
      uint64_t v7 = *(__n128 **)(a2 + 32);
      long long v8 = *(__n128 **)(a1 + 64);
      if (v4 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)((char *)v8 - (char *)v7) < 0x20) {
        goto LABEL_9;
      }
      uint64_t v6 = v4 & 0x7FFFFFFC;
      uint64_t v9 = v7 + 1;
      double v10 = v8 + 1;
      uint64_t v11 = v4 & 0xFFFFFFFC;
      do
      {
        __n128 result = v9[-1];
        __n128 v13 = *v9;
        v10[-1] = result;
        *double v10 = v13;
        v9 += 2;
        v10 += 2;
        v11 -= 4;
      }
      while (v11);
      if (v6 != v4)
      {
LABEL_9:
        uint64_t v14 = v4 - v6;
        uint64_t v15 = v6;
        float64x2_t v16 = &v8->n128_u64[v15];
        uint64_t v17 = &v7->n128_u64[v15];
        do
        {
          unint64_t v18 = *v17++;
          result.n128_u64[0] = v18;
          *v16++ = v18;
          --v14;
        }
        while (v14);
      }
    }
  }
  return result;
}

double sub_1000C73A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != a1)
  {
    int v6 = *(_DWORD *)(a1 + 8);
    int v5 = *(_DWORD *)(a1 + 12);
    *(_DWORD *)(a3 + 8) = v6;
    *(_DWORD *)(a3 + 12) = v5;
    uint64_t v7 = (v5 * v6);
    *(_DWORD *)(a3 + 16) = v7;
    *(_DWORD *)(a3 + 20) = v6;
    int v8 = *(_DWORD *)(a1 + 16);
    if (v8 > 3)
    {
      uint64_t v21 = (v8 - 2);
      uint64_t v22 = *(_OWORD **)(a3 + 32);
      int v23 = *(long long **)(a1 + 32);
      int v24 = (_OWORD *)((char *)v22 + 8 * v21);
      uint64_t v25 = (v8 - 1) >> 1;
      uint64_t v26 = v23;
      do
      {
        long long v27 = *v26++;
        *v22++ = v27;
        --v25;
      }
      while (v25);
      _OWORD *v24 = *(long long *)((char *)v23 + 8 * v21);
    }
    else if ((int)v7 >= 1)
    {
      uint64_t v9 = 0;
      uint64_t v10 = *(void *)(a1 + 32);
      uint64_t v11 = *(void *)(a3 + 32);
      if (v7 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v11 - v10) < 0x20) {
        goto LABEL_9;
      }
      uint64_t v9 = v7 & 0x7FFFFFFC;
      double v12 = (long long *)(v10 + 16);
      __n128 v13 = (_OWORD *)(v11 + 16);
      uint64_t v14 = v7 & 0xFFFFFFFC;
      do
      {
        long long v15 = *v12;
        *(v13 - 1) = *(v12 - 1);
        _OWORD *v13 = v15;
        v12 += 2;
        v13 += 2;
        v14 -= 4;
      }
      while (v14);
      if (v9 != v7)
      {
LABEL_9:
        uint64_t v16 = v7 - v9;
        uint64_t v17 = 8 * v9;
        unint64_t v18 = (void *)(v11 + v17);
        uint64_t v19 = (uint64_t *)(v10 + v17);
        do
        {
          uint64_t v20 = *v19++;
          *v18++ = v20;
          --v16;
        }
        while (v16);
      }
    }
  }
  uint64_t v28 = *(unsigned int *)(a3 + 8);
  unint64_t v29 = *(unsigned int *)(a3 + 12);
  int v30 = *(__CLPK_doublereal **)(a3 + 32);
  __CLPK_integer v31 = *(_DWORD *)(a3 + 20);
  long long v32 = *(void **)(a2 + 32);
  __CLPK_integer __n = *(_DWORD *)(a3 + 12);
  __CLPK_integer __m = v28;
  __CLPK_integer __lda = v31;
  if ((int)v28 >= 1)
  {
    size_t v33 = 4 * v28;
    uint64_t v34 = (__CLPK_integer *)operator new[](4 * v28, &std::nothrow);
    if (v34)
    {
      int v35 = v34;
      __CLPK_integer __info = 0;
      dgetrf_(&__m, &__n, v30, &__lda, v34, &__info);
      memcpy(v32, v35, v33);
      operator delete[]();
    }
  }
  LOWORD(__m) = 4;
  LOBYTE(__n) = 5;
  cnprint::CNPrinter::Print();
  uint64_t v36 = *(double **)(a3 + 32);
  double result = *v36;
  if (v29 >= 2)
  {
    int v38 = v29 - 1;
    int v39 = v29 + 1;
    do
    {
      double result = result * v36[v39];
      v39 += v29 + 1;
      --v38;
    }
    while (v38);
  }
  if ((int)v29 >= 1)
  {
    uint64_t v40 = *(void *)(a2 + 32);
    if (v29 >= 0xC)
    {
      int64x2_t v43 = vdupq_n_s64(v29);
      unint64_t v42 = v29 & 7;
      int64x2_t v44 = vaddq_s64(v43, (int64x2_t)xmmword_1003E6BD0);
      int64x2_t v45 = vaddq_s64(v43, (int64x2_t)xmmword_1003E6BE0);
      unint64_t v46 = v29 - 1;
      int32x4_t v47 = 0uLL;
      int64x2_t v48 = vdupq_n_s64(0xFFFFFFFFFFFFFFFCLL);
      v49.i64[0] = 0x100000001;
      v49.i64[1] = 0x100000001;
      int64x2_t v50 = vdupq_n_s64(0xFFFFFFFFFFFFFFF8);
      uint64_t v51 = v29 & 0xFFFFFFF8;
      int32x4_t v52 = 0uLL;
      do
      {
        uint64_t v53 = v40 + 4 * v46;
        int8x16_t v54 = (int8x16_t)vrev64q_s32(*(int32x4_t *)(v53 - 12));
        int8x16_t v55 = vextq_s8(v54, v54, 8uLL);
        int8x16_t v56 = (int8x16_t)vrev64q_s32(*(int32x4_t *)(v53 - 28));
        int8x16_t v57 = vextq_s8(v56, v56, 8uLL);
        v58.i64[0] = v55.u32[0];
        v58.i64[1] = v55.u32[1];
        int64x2_t v59 = v58;
        v58.i64[0] = v55.u32[2];
        v58.i64[1] = v55.u32[3];
        int64x2_t v60 = v58;
        v58.i64[0] = v57.u32[0];
        v58.i64[1] = v57.u32[1];
        int64x2_t v61 = v58;
        v58.i64[0] = v57.u32[2];
        v58.i64[1] = v57.u32[3];
        int32x4_t v47 = vaddq_s32(v47, (int32x4_t)vbicq_s8(v49, (int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(v45, v59), (int32x4_t)vceqq_s64(v44, v60))));
        int32x4_t v52 = vaddq_s32(v52, (int32x4_t)vbicq_s8(v49, (int8x16_t)vuzp1q_s32((int32x4_t)vceqq_s64(vaddq_s64(v45, v48), v61), (int32x4_t)vceqq_s64(vaddq_s64(v44, v48), v58))));
        int64x2_t v44 = vaddq_s64(v44, v50);
        int64x2_t v45 = vaddq_s64(v45, v50);
        v46 -= 8;
        v51 -= 8;
      }
      while (v51);
      char v41 = vaddvq_s32(vaddq_s32(v52, v47));
      if ((v29 & 0x7FFFFFF8) == v29) {
        goto LABEL_28;
      }
    }
    else
    {
      char v41 = 0;
      unint64_t v42 = v29;
    }
    do
      v41 += v42 != *(unsigned int *)(v40 + 4 * (v42 - 1));
    while (v42-- > 1);
LABEL_28:
    if (v41) {
      return -result;
    }
  }
  return result;
}

void *sub_1000C76DC(void *result)
{
  *double result = off_100452D00;
  return result;
}

void sub_1000C76FC(void *a1)
{
  *a1 = off_100452D00;
  operator delete();
}

uint64_t sub_1000C772C(uint64_t result)
{
  *(void *)(result + 32) = result + 40;
  return result;
}

void sub_1000C7738(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 8);
  if (v1 >= 2)
  {
    unsigned int v3 = *(_DWORD *)(a1 + 12);
    if (v3 >= 2)
    {
      int v4 = *(_DWORD *)(a1 + 16);
      int v5 = *(_DWORD *)(a1 + 20);
      bzero(v14, v4);
      if (v4 >= 3)
      {
        uint64_t v6 = (v4 - 1);
        uint64_t v7 = *(void *)(a1 + 32);
        uint64_t v8 = 1;
        do
        {
          uint64_t v9 = &v14[v8];
          if (!v14[v8])
          {
            int v10 = *(_DWORD *)(v7 + 4 * v8);
            int v11 = v8;
            do
            {
              int v11 = (int)(v11 * (v3 + v1 - v5)) % (int)v6;
              uint64_t v12 = 4 * v11;
              int v13 = *(_DWORD *)(v7 + v12);
              *(_DWORD *)(v7 + v12) = v10;
              *uint64_t v9 = 1;
              uint64_t v9 = &v14[v11];
              int v10 = v13;
            }
            while (!*v9);
          }
          ++v8;
        }
        while (v8 != v6);
      }
    }
  }
}

void *sub_1000C7810(void *result)
{
  result[22] = off_100452D00;
  result[15] = off_100452D00;
  *double result = off_100452B48;
  return result;
}

void sub_1000C7870(void *a1)
{
  *a1 = off_100452B48;
  operator delete();
}

uint64_t sub_1000C78A0(uint64_t result)
{
  *(void *)(result + 32) = result + 40;
  return result;
}

void sub_1000C78AC(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 8);
  if (v1 >= 2)
  {
    unsigned int v3 = *(_DWORD *)(a1 + 12);
    if (v3 >= 2)
    {
      int v4 = *(_DWORD *)(a1 + 16);
      int v5 = *(_DWORD *)(a1 + 20);
      bzero(v14, v4);
      if (v4 >= 3)
      {
        uint64_t v6 = (v4 - 1);
        uint64_t v7 = *(void *)(a1 + 32);
        uint64_t v8 = 1;
        do
        {
          uint64_t v9 = &v14[v8];
          if (!v14[v8])
          {
            uint64_t v10 = *(void *)(v7 + 8 * v8);
            int v11 = v8;
            do
            {
              int v11 = (int)(v11 * (v3 + v1 - v5)) % (int)v6;
              uint64_t v12 = 8 * v11;
              uint64_t v13 = *(void *)(v7 + v12);
              *(void *)(v7 + v12) = v10;
              *uint64_t v9 = 1;
              uint64_t v9 = &v14[v11];
              uint64_t v10 = v13;
            }
            while (!*v9);
          }
          ++v8;
        }
        while (v8 != v6);
      }
    }
  }
}

uint64_t sub_1000C79B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(result + 24) = 0x300000003;
  *(_OWORD *)(result + 8) = xmmword_1003E6950;
  *(void *)(result + 32) = result + 40;
  *(void *)double result = off_100452F28;
  *(void *)(result + 144) = 0x100000003;
  *(void *)(result + 112) = a2;
  *(void *)(result + 120) = off_100452E98;
  *(_OWORD *)(result + 128) = xmmword_1003E69E0;
  *(void *)(result + 152) = result + 160;
  *(void *)(result + 200) = 0x100000003;
  *(void *)(result + 176) = off_100452E98;
  *(_OWORD *)(result + 184) = xmmword_1003E69E0;
  uint64_t v4 = result + 216;
  *(void *)(result + 208) = result + 216;
  if (result + 120 == a3)
  {
    LODWORD(v7) = 3;
    goto LABEL_17;
  }
  int v6 = *(_DWORD *)(a3 + 8);
  int v5 = *(_DWORD *)(a3 + 12);
  *(_DWORD *)(result + 128) = v6;
  *(_DWORD *)(result + 132) = v5;
  uint64_t v7 = (v5 * v6);
  *(_DWORD *)(result + 136) = v7;
  *(_DWORD *)(result + 140) = v6;
  int v8 = *(_DWORD *)(a3 + 16);
  if (v8 > 3)
  {
    uint64_t v16 = (v8 - 1);
    uint64_t v17 = *(void *)(a3 + 32);
    if (v8 >= 9 && (unint64_t)(result - v17 + 160) >= 0x20)
    {
      uint64_t v18 = v16 & 0xFFFFFFF8;
      int32x4_t v52 = (long long *)(v17 + 16);
      uint64_t v53 = v18;
      int8x16_t v54 = (_OWORD *)(result + 176);
      do
      {
        long long v55 = *v52;
        *(v54 - 1) = *(v52 - 1);
        _OWORD *v54 = v55;
        v52 += 2;
        v54 += 2;
        v53 -= 8;
      }
      while (v53);
      if (v18 == v16) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v18 = 0;
    }
    uint64_t v19 = v16 - v18;
    uint64_t v20 = 4 * v18;
    uint64_t v21 = (_DWORD *)(4 * v18 + result + 160);
    uint64_t v22 = (int *)(v17 + v20);
    do
    {
      int v23 = *v22++;
      *v21++ = v23;
      --v19;
    }
    while (v19);
LABEL_16:
    *(_DWORD *)(result + 160 + 4 * v16) = *(_DWORD *)(v17 + 4 * v16);
    goto LABEL_17;
  }
  if ((int)v7 < 1) {
    goto LABEL_17;
  }
  uint64_t v9 = *(void *)(a3 + 32);
  if (v7 < 8 || (unint64_t)(result - v9 + 160) < 0x20)
  {
    uint64_t v10 = 0;
LABEL_7:
    uint64_t v11 = v7 - v10;
    uint64_t v12 = 4 * v10;
    uint64_t v13 = (_DWORD *)(4 * v10 + result + 160);
    uint64_t v14 = (int *)(v9 + v12);
    do
    {
      int v15 = *v14++;
      *v13++ = v15;
      --v11;
    }
    while (v11);
    goto LABEL_17;
  }
  uint64_t v10 = v7 & 0x7FFFFFF8;
  int64x2_t v60 = (long long *)(v9 + 16);
  uint64_t v61 = v7 & 0xFFFFFFF8;
  uint64_t v62 = (_OWORD *)(result + 176);
  do
  {
    long long v63 = *v60;
    *(v62 - 1) = *(v60 - 1);
    *uint64_t v62 = v63;
    v60 += 2;
    v62 += 2;
    v61 -= 8;
  }
  while (v61);
  if (v10 != v7) {
    goto LABEL_7;
  }
LABEL_17:
  if (result + 176 == a4)
  {
    LODWORD(v26) = *(_DWORD *)(result + 192);
    goto LABEL_33;
  }
  int v25 = *(_DWORD *)(a4 + 8);
  int v24 = *(_DWORD *)(a4 + 12);
  *(_DWORD *)(result + 184) = v25;
  *(_DWORD *)(result + 188) = v24;
  uint64_t v26 = (v24 * v25);
  *(_DWORD *)(result + 192) = v26;
  *(_DWORD *)(result + 196) = v25;
  int v27 = *(_DWORD *)(a4 + 16);
  if (v27 > 3)
  {
    uint64_t v35 = (v27 - 1);
    uint64_t v36 = *(void *)(a4 + 32);
    if (v27 >= 9 && (unint64_t)(result - v36 + 216) >= 0x20)
    {
      uint64_t v37 = v35 & 0xFFFFFFF8;
      int8x16_t v56 = (long long *)(v36 + 16);
      int8x16_t v57 = (_OWORD *)(result + 232);
      uint64_t v58 = v37;
      do
      {
        long long v59 = *v56;
        *(v57 - 1) = *(v56 - 1);
        *int8x16_t v57 = v59;
        v56 += 2;
        v57 += 2;
        v58 -= 8;
      }
      while (v58);
      if (v37 == v35) {
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v37 = 0;
    }
    uint64_t v38 = v35 - v37;
    uint64_t v39 = 4 * v37;
    uint64_t v40 = (_DWORD *)(4 * v37 + result + 216);
    char v41 = (int *)(v36 + v39);
    do
    {
      int v42 = *v41++;
      *v40++ = v42;
      --v38;
    }
    while (v38);
LABEL_32:
    *(_DWORD *)(v4 + 4 * v35) = *(_DWORD *)(v36 + 4 * v35);
    goto LABEL_33;
  }
  if ((int)v26 < 1) {
    goto LABEL_33;
  }
  uint64_t v28 = *(void *)(a4 + 32);
  if (v26 < 8 || (unint64_t)(result - v28 + 216) < 0x20)
  {
    uint64_t v29 = 0;
LABEL_23:
    uint64_t v30 = v26 - v29;
    uint64_t v31 = 4 * v29;
    long long v32 = (_DWORD *)(4 * v29 + result + 216);
    size_t v33 = (int *)(v28 + v31);
    do
    {
      int v34 = *v33++;
      *v32++ = v34;
      --v30;
    }
    while (v30);
    goto LABEL_33;
  }
  uint64_t v29 = v26 & 0x7FFFFFF8;
  uint64_t v64 = (long long *)(v28 + 16);
  uint64_t v65 = (_OWORD *)(result + 232);
  uint64_t v66 = v26 & 0xFFFFFFF8;
  do
  {
    long long v67 = *v64;
    *(v65 - 1) = *(v64 - 1);
    _OWORD *v65 = v67;
    v64 += 2;
    v65 += 2;
    v66 -= 8;
  }
  while (v66);
  if (v29 != v26) {
    goto LABEL_23;
  }
LABEL_33:
  *(_DWORD *)(result + 8) = v7;
  *(_DWORD *)(result + 12) = v26;
  *(_DWORD *)(result + 16) = v26 * v7;
  *(_DWORD *)(result + 20) = v7;
  if (v26 && v7)
  {
    unsigned int v43 = 0;
    uint64_t v44 = 0;
    int v45 = *(_DWORD *)(a2 + 20);
    uint64_t v46 = *(void *)(a2 + 32);
    do
    {
      int v47 = v45 * *(_DWORD *)(v4 + 4 * v44);
      uint64_t v48 = v7;
      int8x16_t v49 = (int *)(result + 160);
      unsigned int v50 = v43;
      do
      {
        int v51 = *v49++;
        *(void *)(result + 40 + 8 * v50++) = *(void *)(v46 + 8 * (v47 + v51));
        --v48;
      }
      while (v48);
      ++v44;
      v43 += v7;
    }
    while (v44 != v26);
  }
  return result;
}

void sub_1000C7D38(void *a1)
{
  a1[22] = off_100452D00;
  a1[15] = off_100452D00;
  *a1 = off_100452B48;
  operator delete();
}

void *sub_1000C7DA8(void *result)
{
  result[16] = off_100452D00;
  result[9] = off_100452D00;
  *double result = off_100452B48;
  return result;
}

void *sub_1000C7E08(void *result)
{
  *double result = off_100452D00;
  return result;
}

void sub_1000C7E28(void *a1)
{
  *a1 = off_100452D00;
  operator delete();
}

uint64_t sub_1000C7E58(uint64_t result)
{
  *(void *)(result + 32) = result + 40;
  return result;
}

void sub_1000C7E64(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 8);
  if (v1 >= 2)
  {
    unsigned int v3 = *(_DWORD *)(a1 + 12);
    if (v3 >= 2)
    {
      int v4 = *(_DWORD *)(a1 + 16);
      int v5 = *(_DWORD *)(a1 + 20);
      bzero(&v12, v4);
      if (v4 >= 3)
      {
        uint64_t v6 = (v4 - 1);
        uint64_t v7 = *(void *)(a1 + 32);
        int v8 = v12;
        uint64_t v9 = (_DWORD *)(v7 + 4);
        uint64_t v10 = v6 - 1;
        int v11 = v3 + v1 - v5;
        do
        {
          if (!v8)
          {
            *(_DWORD *)(v7 + 4 * (v11 % (int)v6)) = *v9;
            int v8 = 1;
          }
          v11 += v3 + v1 - v5;
          ++v9;
          --v10;
        }
        while (v10);
      }
    }
  }
}

uint64_t sub_1000C7F1C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(result + 24) = 0x100000003;
  *(_OWORD *)(result + 8) = xmmword_1003E69E0;
  *(void *)(result + 32) = result + 40;
  *(void *)double result = off_100452FB8;
  *(void *)(result + 96) = 0x100000003;
  *(void *)(result + 64) = a2;
  *(void *)(result + 72) = off_100452E98;
  *(_OWORD *)(result + 80) = xmmword_1003E69E0;
  *(void *)(result + 104) = result + 112;
  *(void *)(result + 152) = 0x100000001;
  *(void *)(result + 128) = off_100452F70;
  *(void *)&long long v4 = 0x100000001;
  *((void *)&v4 + 1) = 0x100000001;
  *(_OWORD *)(result + 136) = v4;
  uint64_t v5 = result + 168;
  *(void *)(result + 160) = result + 168;
  if (result + 72 == a3)
  {
    LODWORD(v8) = 3;
    goto LABEL_17;
  }
  int v7 = *(_DWORD *)(a3 + 8);
  int v6 = *(_DWORD *)(a3 + 12);
  *(_DWORD *)(result + 80) = v7;
  *(_DWORD *)(result + 84) = v6;
  uint64_t v8 = (v6 * v7);
  *(_DWORD *)(result + 88) = v8;
  *(_DWORD *)(result + 92) = v7;
  int v9 = *(_DWORD *)(a3 + 16);
  if (v9 > 3)
  {
    uint64_t v17 = (v9 - 1);
    uint64_t v18 = *(void *)(a3 + 32);
    if (v9 >= 9 && (unint64_t)(result - v18 + 112) >= 0x20)
    {
      uint64_t v19 = v17 & 0xFFFFFFF8;
      uint64_t v53 = (long long *)(v18 + 16);
      uint64_t v54 = v19;
      long long v55 = (_OWORD *)(result + 128);
      do
      {
        long long v56 = *v53;
        *(v55 - 1) = *(v53 - 1);
        *long long v55 = v56;
        v53 += 2;
        v55 += 2;
        v54 -= 8;
      }
      while (v54);
      if (v19 == v17) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v19 = 0;
    }
    uint64_t v20 = v17 - v19;
    uint64_t v21 = 4 * v19;
    uint64_t v22 = (_DWORD *)(4 * v19 + result + 112);
    int v23 = (int *)(v18 + v21);
    do
    {
      int v24 = *v23++;
      *v22++ = v24;
      --v20;
    }
    while (v20);
LABEL_16:
    *(_DWORD *)(result + 112 + 4 * v17) = *(_DWORD *)(v18 + 4 * v17);
    goto LABEL_17;
  }
  if ((int)v8 < 1) {
    goto LABEL_17;
  }
  uint64_t v10 = *(void *)(a3 + 32);
  if (v8 < 8 || (unint64_t)(result - v10 + 112) < 0x20)
  {
    uint64_t v11 = 0;
LABEL_7:
    uint64_t v12 = v8 - v11;
    uint64_t v13 = 4 * v11;
    uint64_t v14 = (_DWORD *)(4 * v11 + result + 112);
    int v15 = (int *)(v10 + v13);
    do
    {
      int v16 = *v15++;
      *v14++ = v16;
      --v12;
    }
    while (v12);
    goto LABEL_17;
  }
  uint64_t v11 = v8 & 0x7FFFFFF8;
  uint64_t v61 = (long long *)(v10 + 16);
  uint64_t v62 = v8 & 0xFFFFFFF8;
  long long v63 = (_OWORD *)(result + 128);
  do
  {
    long long v64 = *v61;
    *(v63 - 1) = *(v61 - 1);
    *long long v63 = v64;
    v61 += 2;
    v63 += 2;
    v62 -= 8;
  }
  while (v62);
  if (v11 != v8) {
    goto LABEL_7;
  }
LABEL_17:
  if (result + 128 == a4)
  {
    LODWORD(v27) = *(_DWORD *)(result + 144);
    goto LABEL_33;
  }
  int v26 = *(_DWORD *)(a4 + 8);
  int v25 = *(_DWORD *)(a4 + 12);
  *(_DWORD *)(result + 136) = v26;
  *(_DWORD *)(result + 140) = v25;
  uint64_t v27 = (v25 * v26);
  *(_DWORD *)(result + 144) = v27;
  *(_DWORD *)(result + 148) = v26;
  int v28 = *(_DWORD *)(a4 + 16);
  if (v28 > 3)
  {
    uint64_t v36 = (v28 - 1);
    uint64_t v37 = *(void *)(a4 + 32);
    if (v28 >= 9 && (unint64_t)(result - v37 + 168) >= 0x20)
    {
      uint64_t v38 = v36 & 0xFFFFFFF8;
      int8x16_t v57 = (long long *)(v37 + 16);
      uint64_t v58 = (_OWORD *)(result + 184);
      uint64_t v59 = v38;
      do
      {
        long long v60 = *v57;
        *(v58 - 1) = *(v57 - 1);
        *uint64_t v58 = v60;
        v57 += 2;
        v58 += 2;
        v59 -= 8;
      }
      while (v59);
      if (v38 == v36) {
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v38 = 0;
    }
    uint64_t v39 = v36 - v38;
    uint64_t v40 = 4 * v38;
    char v41 = (_DWORD *)(4 * v38 + result + 168);
    int v42 = (int *)(v37 + v40);
    do
    {
      int v43 = *v42++;
      *v41++ = v43;
      --v39;
    }
    while (v39);
LABEL_32:
    *(_DWORD *)(v5 + 4 * v36) = *(_DWORD *)(v37 + 4 * v36);
    goto LABEL_33;
  }
  if ((int)v27 < 1) {
    goto LABEL_33;
  }
  uint64_t v29 = *(void *)(a4 + 32);
  if (v27 < 8 || (unint64_t)(result - v29 + 168) < 0x20)
  {
    uint64_t v30 = 0;
LABEL_23:
    uint64_t v31 = v27 - v30;
    uint64_t v32 = 4 * v30;
    size_t v33 = (_DWORD *)(4 * v30 + result + 168);
    int v34 = (int *)(v29 + v32);
    do
    {
      int v35 = *v34++;
      *v33++ = v35;
      --v31;
    }
    while (v31);
    goto LABEL_33;
  }
  uint64_t v30 = v27 & 0x7FFFFFF8;
  uint64_t v65 = (long long *)(v29 + 16);
  uint64_t v66 = (_OWORD *)(result + 184);
  uint64_t v67 = v27 & 0xFFFFFFF8;
  do
  {
    long long v68 = *v65;
    *(v66 - 1) = *(v65 - 1);
    *uint64_t v66 = v68;
    v65 += 2;
    v66 += 2;
    v67 -= 8;
  }
  while (v67);
  if (v30 != v27) {
    goto LABEL_23;
  }
LABEL_33:
  *(_DWORD *)(result + 8) = v8;
  *(_DWORD *)(result + 12) = v27;
  *(_DWORD *)(result + 16) = v27 * v8;
  *(_DWORD *)(result + 20) = v8;
  if (v27 && v8)
  {
    unsigned int v44 = 0;
    uint64_t v45 = 0;
    int v46 = *(_DWORD *)(a2 + 20);
    uint64_t v47 = *(void *)(a2 + 32);
    do
    {
      int v48 = v46 * *(_DWORD *)(v5 + 4 * v45);
      uint64_t v49 = v8;
      unsigned int v50 = (int *)(result + 112);
      unsigned int v51 = v44;
      do
      {
        int v52 = *v50++;
        *(void *)(result + 40 + 8 * v51++) = *(void *)(v47 + 8 * (v48 + v52));
        --v49;
      }
      while (v49);
      ++v45;
      v44 += v8;
    }
    while (v45 != v27);
  }
  return result;
}

void sub_1000C82A0(void *a1)
{
  a1[16] = off_100452D00;
  a1[9] = off_100452D00;
  *a1 = off_100452B48;
  operator delete();
}

void *sub_1000C8310(void *result)
{
  *double result = off_100452B48;
  return result;
}

void sub_1000C8330(void *a1)
{
  *a1 = off_100452B48;
  operator delete();
}

uint64_t sub_1000C8360(uint64_t result)
{
  *(void *)(result + 32) = result + 40;
  return result;
}

void sub_1000C836C(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 8);
  if (v1 >= 2)
  {
    unsigned int v3 = *(_DWORD *)(a1 + 12);
    if (v3 >= 2)
    {
      int v4 = *(_DWORD *)(a1 + 16);
      int v5 = *(_DWORD *)(a1 + 20);
      bzero(v14, v4);
      if (v4 >= 3)
      {
        uint64_t v6 = (v4 - 1);
        uint64_t v7 = *(void *)(a1 + 32);
        uint64_t v8 = 1;
        do
        {
          int v9 = &v14[v8];
          if (!v14[v8])
          {
            uint64_t v10 = *(void *)(v7 + 8 * v8);
            int v11 = v8;
            do
            {
              int v11 = (int)(v11 * (v3 + v1 - v5)) % (int)v6;
              uint64_t v12 = 8 * v11;
              uint64_t v13 = *(void *)(v7 + v12);
              *(void *)(v7 + v12) = v10;
              *int v9 = 1;
              int v9 = &v14[v11];
              uint64_t v10 = v13;
            }
            while (!*v9);
          }
          ++v8;
        }
        while (v8 != v6);
      }
    }
  }
}

_OWORD *sub_1000C8470(_OWORD *a1, uint64_t a2)
{
  *a1 = 0u;
  a1[1] = 0u;
  if (*(_DWORD *)(a2 + 8) == 3 && *(_DWORD *)(a2 + 12) == 3)
  {
    uint64_t v4 = *(int *)(a2 + 20);
    int v5 = *(double **)(a2 + 32);
    double v71 = v5[1];
    double v74 = v5[2];
    uint64_t v6 = &v5[v4];
    double v72 = v6[1];
    double v75 = v6[2];
    uint64_t v7 = &v5[2 * v4];
    double v73 = v7[1];
    double v76 = v7[2];
    v77.f64[0] = *v5 * *v5 + 0.0 + v71 * v71 + v74 * v74;
    v77.f64[1] = *v6 * *v5 + 0.0 + v72 * v71 + v75 * v74;
    v78.f64[0] = *v7 * *v5 + 0.0 + v73 * v71 + v76 * v74;
    v78.f64[1] = *v5 * v5[3] + 0.0 + v71 * v5[4] + v74 * v5[5];
    v79.f64[0] = *v6 * v5[3] + 0.0 + v72 * v5[4] + v75 * v5[5];
    v79.f64[1] = *v7 * v5[3] + 0.0 + v73 * v5[4] + v76 * v5[5];
    v80.f64[0] = *v5 * v5[6] + 0.0 + v71 * v5[7] + v74 * v5[8];
    v80.f64[1] = *v6 * v5[6] + 0.0 + v72 * v5[7] + v75 * v5[8];
    double v81 = *v7 * v5[6] + 0.0 + v73 * v5[7] + v76 * v5[8];
    v70.f64[0] = 0.0;
    v70.f64[1] = 1.0;
    uint64_t v84 = 0x300000003;
    uint64_t v82 = off_100452AF0;
    uint64_t v85 = &v86;
    long long v83 = xmmword_1003E6950;
    float64x2_t v86 = vsubq_f64(v77, (float64x2_t)0x3FF0000000000000uLL);
    float64x2_t v87 = vsubq_f64(v78, (float64x2_t)0);
    float64x2_t v88 = vsubq_f64(v79, (float64x2_t)0x3FF0000000000000uLL);
    *(void *)&double v89 = *(_OWORD *)&vsubq_f64(v80, (float64x2_t)0);
    float64x2_t v90 = vsubq_f64(*(float64x2_t *)((char *)&v80 + 8), v70);
    uint64_t v93 = 0x300000003;
    float64x2_t v91 = off_100452AF0;
    double v94 = v95;
    long long v92 = xmmword_1003E6950;
    double v8 = fabs(v86.f64[1]);
    v95[0] = fabs(v86.f64[0]);
    v95[1] = v8;
    double v9 = fabs(v87.f64[0]);
    double v10 = fabs(v87.f64[1]);
    v95[2] = v9;
    v95[3] = v10;
    double v11 = fabs(v88.f64[0]);
    double v12 = fabs(v88.f64[1]);
    v95[4] = v11;
    v95[5] = v12;
    double v13 = fabs(v89);
    double v14 = fabs(v90.f64[0]);
    v95[6] = v13;
    v95[7] = v14;
    double v15 = fabs(v90.f64[1]);
    v95[8] = v15;
    uint64_t v98 = 0x300000003;
    long long v96 = off_100452AF0;
    uint64_t v99 = &v100;
    if (v8 <= v95[0]) {
      double v8 = v95[0];
    }
    if (v9 <= v8) {
      double v9 = v8;
    }
    if (v11 <= v10) {
      double v16 = v10;
    }
    else {
      double v16 = v11;
    }
    if (v12 > v16) {
      double v16 = v12;
    }
    if (v14 <= v13) {
      double v17 = v13;
    }
    else {
      double v17 = v14;
    }
    if (v15 > v17) {
      double v17 = v15;
    }
    double v100 = v9;
    v102[0] = v17;
    if (v16 > v9) {
      double v9 = v16;
    }
    if (v17 > v9) {
      double v9 = v17;
    }
    if (fabs(v9) <= 0.00001)
    {
      uint64_t v93 = 0x100000003;
      long long v92 = xmmword_1003E69E0;
      float64x2_t v91 = off_100452E98;
      double v94 = v95;
      uint64_t v98 = 0x300000003;
      long long v96 = off_100452AF0;
      long long v97 = xmmword_1003E6950;
      uint64_t v99 = &v100;
      if (fabs(sub_1000C73A4(a2, (uint64_t)&v91, (uint64_t)&v96) + -1.0) <= 0.00001)
      {
        uint64_t v98 = 0x300000003;
        long long v96 = off_100452AF0;
        uint64_t v19 = *(unsigned int *)(a2 + 8);
        int v20 = *(_DWORD *)(a2 + 12);
        uint64_t v21 = (int)v19;
        LODWORD(v97) = *(_DWORD *)(a2 + 8);
        DWORD1(v97) = v20;
        uint64_t v22 = (v20 * v19);
        *((void *)&v97 + 1) = __PAIR64__(v19, v22);
        uint64_t v99 = &v100;
        int v23 = *(_DWORD *)(a2 + 16);
        if (v23 > 3)
        {
          uint64_t v31 = *(long long **)(a2 + 32);
          uint64_t v32 = (v23 - 1) >> 1;
          size_t v33 = v31;
          int v34 = &v100;
          do
          {
            long long v35 = *v33++;
            *(_OWORD *)int v34 = v35;
            v34 += 2;
            --v32;
          }
          while (v32);
          *(_OWORD *)(&v100 + (v23 - 2)) = *(long long *)((char *)v31 + 8 * (v23 - 2));
        }
        else
        {
          if ((int)v22 < 1) {
            goto LABEL_36;
          }
          uint64_t v24 = *(void *)(a2 + 32);
          if (v22 < 6 || (unint64_t)&v96 - v24 + 40 < 0x20)
          {
            uint64_t v25 = 0;
LABEL_30:
            uint64_t v26 = v22 - v25;
            uint64_t v27 = 8 * v25;
            int v28 = &(&v96)[v25 + 5];
            uint64_t v29 = (uint64_t (***)())(v24 + v27);
            do
            {
              uint64_t v30 = *v29++;
              *v28++ = v30;
              --v26;
            }
            while (v26);
            goto LABEL_36;
          }
          uint64_t v25 = v22 & 0x7FFFFFFC;
          uint64_t v66 = (long long *)(v24 + 16);
          uint64_t v67 = v102;
          uint64_t v68 = v22 & 0xFFFFFFFC;
          do
          {
            long long v69 = *v66;
            *((_OWORD *)v67 - 1) = *(v66 - 1);
            *(_OWORD *)uint64_t v67 = v69;
            v66 += 2;
            v67 += 4;
            v68 -= 4;
          }
          while (v68);
          if (v25 != v22) {
            goto LABEL_30;
          }
        }
LABEL_36:
        if ((int)v19 <= 0)
        {
          double v41 = v100;
          int v36 = v19 + 1;
          goto LABEL_44;
        }
        int v36 = v19 + 1;
        double v37 = 0.0;
        if (v19 == 1)
        {
          uint64_t v38 = 0;
        }
        else
        {
          uint64_t v38 = 0;
          if (v36 < 0) {
            unsigned int v60 = ~v19;
          }
          else {
            unsigned int v60 = v19 + 1;
          }
          unint64_t v61 = v60 * (unint64_t)(v19 - 1);
          BOOL v62 = (v61 & 0x80000000) != 0;
          if (v36 < 0) {
            BOOL v62 = v61 > 0x80000000;
          }
          BOOL v63 = (v61 & 0xFFFFFFFF00000000) != 0;
          if (!v62 && !v63)
          {
            int v64 = 0;
            uint64_t v38 = v19 & 0xFFFFFFFE;
            uint64_t v65 = v38;
            do
            {
              double v37 = v37 + *(&v100 + v64) + *(&v100 + v36 + v64);
              v64 += 2 * v19 + 2;
              v65 -= 2;
            }
            while (v65);
            if (v38 == v19)
            {
LABEL_41:
              double v41 = v100;
              if (v37 > 0.0)
              {
                int v42 = &v100 + 2 * (int)v21;
                double v43 = sqrt(v100 + 1.0 + *(&v100 + v36) + v42[2]);
                double v44 = (v42[1] - *(&v100 + (int)v21 + 2)) / (v43 + v43);
                double v45 = (v102[0] - *(&v100 + 2 * v21)) / (v43 + v43);
                double v46 = (*(&v100 + v21) - v101) / (v43 + v43);
                double v47 = v43 * 0.5;
LABEL_52:
                cnquaternion::CNQuaternion::CNQuaternion((cnquaternion::CNQuaternion *)&v82, v44, v45, v46, v47);
                cnrotation::CNRotation::Normalize((cnrotation::CNRotation *)&v82, v59);
                goto LABEL_24;
              }
LABEL_44:
              double v48 = *(&v100 + v36);
              int v49 = 2 * v21;
              if (v41 <= v48 || (double v50 = v102[v49], v41 <= v50))
              {
                uint64_t v53 = v49 + 2;
                if (v48 <= v41 || (double v54 = *(&v100 + v53), v48 <= v54))
                {
                  double v58 = sqrt(*(&v100 + v53) + 1.0 - v41 - v48);
                  double v56 = v58 + v58;
                  double v44 = (v102[0] + *(&v100 + v49)) / (v58 + v58);
                  double v45 = (*(double *)((char *)&v100 + ((8 * v49) | 8)) + *(&v100 + (int)v21 + 2)) / (v58 + v58);
                  double v46 = v58 * 0.5;
                  double v57 = *(&v100 + v21) - v101;
                }
                else
                {
                  double v55 = sqrt(v48 + 1.0 - v41 - v54);
                  double v56 = v55 + v55;
                  double v44 = (v101 + *(&v100 + v21)) / (v55 + v55);
                  double v45 = v55 * 0.5;
                  double v46 = (*(double *)((char *)&v100 + ((8 * v49) | 8)) + *(&v100 + (int)v21 + 2)) / v56;
                  double v57 = v102[0] - *(&v100 + 2 * v21);
                }
                double v47 = v57 / v56;
              }
              else
              {
                double v51 = sqrt(v41 + 1.0 - v48 - v50);
                double v44 = v51 * 0.5;
                double v52 = v51 + v51;
                double v45 = (v101 + *(&v100 + v21)) / (v51 + v51);
                double v46 = (v102[0] + *(&v100 + v49)) / v52;
                double v47 = (*(double *)((char *)&v100 + ((16 * v21) | 8)) - *(&v100 + (int)v21 + 2)) / v52;
              }
              goto LABEL_52;
            }
          }
        }
        uint64_t v39 = v19 - v38;
        int v40 = v36 * v38;
        do
        {
          double v37 = v37 + *(&v100 + v40);
          v40 += v36;
          --v39;
        }
        while (v39);
        goto LABEL_41;
      }
    }
  }
  cnquaternion::CNQuaternion::CNQuaternion((cnquaternion::CNQuaternion *)&v96, 0.0, 0.0, 0.0, 1.0);
LABEL_24:
  cnquaternion::CNQuaternion::operator=();
  return a1;
}

void sub_1000C8CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *__s1)
{
  uint64_t v5 = *(unsigned int *)(a1 + 16);
  if (!v5) {
    return;
  }
  uint64_t v11 = *(unsigned int *)(a1 + 8);
  uint64_t v12 = *(unsigned int *)(a1 + 12);
  int v13 = strcmp(__s1, "2");
  if (v11 != 1 && v12 != 1)
  {
    if (!v13)
    {
      sub_1000C95FC(a1, a2, a3, a4);
      return;
    }
    if (strcmp(__s1, "1"))
    {
      if (strcmp(__s1, "inf"))
      {
        if (strcmp(__s1, "fro"))
        {
          __int16 v128 = 4;
          char v127 = 5;
          cnprint::CNPrinter::Print();
          return;
        }
        float64x2_t v87 = *(double **)(a1 + 32);
        double v88 = *v87 * *v87;
        if (v5 >= 2)
        {
          if (v5 == 2)
          {
            uint64_t v89 = 1;
LABEL_127:
            double v116 = &v87[v89];
            uint64_t v117 = v5 - v89;
            do
            {
              double v118 = *v116++;
              double v88 = v88 + v118 * v118;
              --v117;
            }
            while (v117);
            return;
          }
          uint64_t v89 = (v5 - 1) | 1;
          uint64_t v114 = v87 + 2;
          unint64_t v115 = (v5 - 1) & 0xFFFFFFFFFFFFFFFELL;
          do
          {
            double v88 = v88 + *(v114 - 1) * *(v114 - 1) + *v114 * *v114;
            v114 += 2;
            v115 -= 2;
          }
          while (v115);
          if (v5 - 1 != ((v5 - 1) & 0xFFFFFFFFFFFFFFFELL)) {
            goto LABEL_127;
          }
        }
        return;
      }
      if (v11)
      {
        uint64_t v49 = 0;
        double v50 = *(float64x2_t **)(a1 + 32);
        double v51 = *(float64x2_t **)(a2 + 32);
        if (v11 < 4) {
          goto LABEL_61;
        }
        if ((unint64_t)((char *)v51 - (char *)v50) < 0x20) {
          goto LABEL_61;
        }
        uint64_t v49 = v11 & 0xFFFFFFFC;
        double v52 = v50 + 1;
        uint64_t v53 = v51 + 1;
        uint64_t v54 = v49;
        do
        {
          float64x2_t v55 = vabsq_f64(*v52);
          v53[-1] = vabsq_f64(v52[-1]);
          *uint64_t v53 = v55;
          v52 += 2;
          v53 += 2;
          v54 -= 4;
        }
        while (v54);
        if (v49 != v11)
        {
LABEL_61:
          double v56 = &v50->f64[v49];
          double v57 = &v51->f64[v49];
          uint64_t v58 = v11 - v49;
          do
          {
            double v59 = *v56++;
            *v57++ = fabs(v59);
            --v58;
          }
          while (v58);
        }
        if (v12 > 1)
        {
          int v60 = 0;
          uint64_t v61 = *(void *)(a1 + 32);
          BOOL v62 = *(double **)(a2 + 32);
          int v63 = 1;
          unsigned int v64 = v11;
          while (1)
          {
            ++v60;
            if (v11 >= 8)
            {
              uint64_t v65 = 0;
              if (__CFADD__(v11 * v60, v11 - 1) || (unint64_t)(v11 - 1) >> 32) {
                goto LABEL_78;
              }
              uint64_t v66 = 8 * (v11 * v60);
              if ((unint64_t)v62 >= v61 + 8 * v11 + v66 || v61 + v66 >= (unint64_t)&v62[v11])
              {
                unsigned int v68 = v64;
                uint64_t v69 = v11 & 0xFFFFFFFC;
                float64x2_t v70 = (float64x2_t *)(v62 + 2);
                do
                {
                  double v71 = (float64x2_t *)(v61 + 8 * v68);
                  float64x2_t v72 = vaddq_f64(vabsq_f64(v71[1]), *v70);
                  v70[-1] = vaddq_f64(vabsq_f64(*v71), v70[-1]);
                  float64x2_t *v70 = v72;
                  v70 += 2;
                  v68 += 4;
                  v69 -= 4;
                }
                while (v69);
                uint64_t v65 = v11 & 0xFFFFFFFC;
                if (v65 == v11) {
                  goto LABEL_80;
                }
                goto LABEL_78;
              }
            }
            uint64_t v65 = 0;
LABEL_78:
            double v73 = &v62[v65];
            unsigned int v74 = v64 + v65;
            uint64_t v75 = v11 - v65;
            do
            {
              *double v73 = fabs(*(double *)(v61 + 8 * v74)) + *v73;
              ++v73;
              ++v74;
              --v75;
            }
            while (v75);
LABEL_80:
            ++v63;
            v64 += v11;
            if (v63 == v12) {
              goto LABEL_115;
            }
          }
        }
      }
      else if (v12 >= 2)
      {
        return;
      }
      BOOL v62 = *(double **)(a2 + 32);
LABEL_115:
      double v106 = *v62;
      if (v11 >= 2)
      {
        uint64_t v107 = v62 + 1;
        uint64_t v108 = v11 - 1;
        do
        {
          double v109 = *v107++;
          double v110 = v109;
          if (v109 > v106) {
            double v106 = v110;
          }
          --v108;
        }
        while (v108);
      }
      return;
    }
    if (!v12) {
      return;
    }
    uint64_t v22 = *(void *)(a1 + 32);
    int v23 = *(double **)(a2 + 32);
    if (v11 <= 1)
    {
      unsigned int v90 = 0;
      uint64_t v91 = v12;
      long long v92 = *(double **)(a2 + 32);
      do
      {
        *v92++ = fabs(*(double *)(v22 + 8 * v90));
        v90 += v11;
        --v91;
      }
      while (v91);
LABEL_100:
      double v93 = *v23;
      if (v12 >= 2)
      {
        double v94 = v23 + 1;
        uint64_t v95 = v12 - 1;
        do
        {
          double v96 = *v94++;
          double v97 = v96;
          if (v96 > v93) {
            double v93 = v97;
          }
          --v95;
        }
        while (v95);
      }
      return;
    }
    int v24 = 0;
    uint64_t v25 = 0;
    unint64_t v26 = (v11 - 1) & 0xFFFFFFFFFFFFFFFCLL;
    int v27 = 1;
    while (1)
    {
      int v28 = v11 * v25;
      double v29 = fabs(*(double *)(v22 + 8 * (v11 * v25)));
      uint64_t v30 = &v23[v25];
      double *v30 = v29;
      uint64_t v31 = v30 + 1;
      if (v11 >= 0xB
        && (-2 - v28 >= (v11 - 2) ? (BOOL v32 = (unint64_t)(v11 - 2) >> 32 == 0) : (BOOL v32 = 0),
            v32
         && ((uint64_t v33 = 8 * (v28 + 1), (unint64_t)&v23[v25] < v22 + 8 * v11 - 8 + v33)
           ? (BOOL v34 = v22 + v33 >= (unint64_t)v31)
           : (BOOL v34 = 1),
             v34)))
      {
        unint64_t v35 = (v11 - 1) & 0xFFFFFFFFFFFFFFFCLL;
        unsigned int v36 = v27;
        do
        {
          double v37 = (float64x2_t *)(v22 + 8 * v36);
          float64x2_t v38 = vabsq_f64(*v37);
          float64x2_t v39 = vabsq_f64(v37[1]);
          double v29 = v29 + v38.f64[0] + v38.f64[1] + v39.f64[0] + v39.f64[1];
          v36 += 4;
          v35 -= 4;
        }
        while (v35);
        v23[v25] = v29;
        uint64_t v40 = v26 | 1;
        if (v11 - 1 == v26) {
          goto LABEL_47;
        }
      }
      else
      {
        uint64_t v40 = 1;
      }
      unsigned int v41 = v24 + v40;
      uint64_t v42 = v11 - v40;
      do
      {
        double v29 = v29 + fabs(*(double *)(v22 + 8 * v41));
        v23[v25] = v29;
        ++v41;
        --v42;
      }
      while (v42);
LABEL_47:
      ++v25;
      v27 += v11;
      v24 += v11;
      if (v25 == v12) {
        goto LABEL_100;
      }
    }
  }
  if (!v13)
  {
    double v16 = *(double **)(a1 + 32);
    double v17 = *v16 * *v16;
    if (v5 < 2) {
      return;
    }
    if (v5 == 2)
    {
      uint64_t v18 = 1;
    }
    else
    {
      uint64_t v18 = (v5 - 1) | 1;
      double v76 = v16 + 2;
      unint64_t v77 = (v5 - 1) & 0xFFFFFFFFFFFFFFFELL;
      do
      {
        double v17 = v17 + *(v76 - 1) * *(v76 - 1) + *v76 * *v76;
        v76 += 2;
        v77 -= 2;
      }
      while (v77);
      if (v5 - 1 == ((v5 - 1) & 0xFFFFFFFFFFFFFFFELL)) {
        return;
      }
    }
    float64x2_t v78 = &v16[v18];
    uint64_t v79 = v5 - v18;
    do
    {
      double v80 = *v78++;
      double v17 = v17 + v80 * v80;
      --v79;
    }
    while (v79);
    return;
  }
  if (!strcmp(__s1, "1"))
  {
    uint64_t v19 = *(double **)(a1 + 32);
    double v20 = fabs(*v19);
    if (v5 < 2) {
      return;
    }
    if (v5 >= 5)
    {
      unint64_t v98 = (v5 - 1) & 0xFFFFFFFFFFFFFFFCLL;
      uint64_t v21 = v98 | 1;
      uint64_t v99 = (float64x2_t *)(v19 + 3);
      unint64_t v100 = v98;
      do
      {
        float64x2_t v101 = vabsq_f64(v99[-1]);
        float64x2_t v102 = vabsq_f64(*v99);
        double v20 = v20 + v101.f64[0] + v101.f64[1] + v102.f64[0] + v102.f64[1];
        v99 += 2;
        v100 -= 4;
      }
      while (v100);
      if (v5 - 1 == v98) {
        return;
      }
    }
    else
    {
      uint64_t v21 = 1;
    }
    uint64_t v103 = &v19[v21];
    uint64_t v104 = v5 - v21;
    do
    {
      double v105 = *v103++;
      double v20 = v20 + fabs(v105);
      --v104;
    }
    while (v104);
    return;
  }
  if (!strcmp(__s1, "inf"))
  {
    double v43 = *(double **)(a1 + 32);
    double v44 = fabs(*v43);
    if (v5 >= 2)
    {
      double v45 = v43 + 1;
      uint64_t v46 = v5 - 1;
      do
      {
        double v47 = *v45++;
        double v48 = fabs(v47);
        if (v48 > v44) {
          double v44 = v48;
        }
        --v46;
      }
      while (v46);
    }
    return;
  }
  if (!strcmp(__s1, "-inf"))
  {
    double v81 = *(double **)(a1 + 32);
    double v82 = fabs(*v81);
    if (v5 >= 2)
    {
      long long v83 = v81 + 1;
      uint64_t v84 = v5 - 1;
      do
      {
        double v85 = *v83++;
        double v86 = fabs(v85);
        if (v86 < v82) {
          double v82 = v86;
        }
        --v84;
      }
      while (v84);
    }
    return;
  }
  long double v126 = 0.0;
  if (sscanf(__s1, "%lg", &v126) != 1)
  {
    cnprint::CNPrinter::Print();
    return;
  }
  long double v15 = v126;
  if (fabs(v126) >= 2.22044605e-16)
  {
    uint64_t v111 = *(double **)(a1 + 32);
    long double v112 = pow(fabs(*v111), v126);
    if (v5 >= 2)
    {
      if (v5 == 2)
      {
        uint64_t v113 = 1;
      }
      else
      {
        uint64_t v113 = (v5 - 1) | 1;
        double v119 = v111 + 2;
        unint64_t v120 = (v5 - 1) & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          long double v121 = fabs(*v119);
          double v122 = pow(fabs(*(v119 - 1)), v15);
          long double v112 = v112 + v122 + pow(v121, v15);
          v119 += 2;
          v120 -= 2;
        }
        while (v120);
        if (v5 - 1 == ((v5 - 1) & 0xFFFFFFFFFFFFFFFELL)) {
          goto LABEL_135;
        }
      }
      uint64_t v123 = &v111[v113];
      uint64_t v124 = v5 - v113;
      do
      {
        double v125 = *v123++;
        long double v112 = v112 + pow(fabs(v125), v15);
        --v124;
      }
      while (v124);
    }
LABEL_135:
    pow(v112, 1.0 / v15);
  }
}

void *sub_1000C9494(void *result)
{
  *double result = off_100452B48;
  return result;
}

void sub_1000C94B4(void *a1)
{
  *a1 = off_100452B48;
  operator delete();
}

uint64_t sub_1000C94E4(uint64_t result)
{
  *(void *)(result + 32) = result + 40;
  return result;
}

void sub_1000C94F0(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 8);
  if (v1 >= 2)
  {
    unsigned int v3 = *(_DWORD *)(a1 + 12);
    if (v3 >= 2)
    {
      int v4 = *(_DWORD *)(a1 + 16);
      int v5 = *(_DWORD *)(a1 + 20);
      bzero(v14, v4);
      if (v4 >= 3)
      {
        uint64_t v6 = (v4 - 1);
        uint64_t v7 = *(void *)(a1 + 32);
        uint64_t v8 = 1;
        do
        {
          double v9 = &v14[v8];
          if (!v14[v8])
          {
            uint64_t v10 = *(void *)(v7 + 8 * v8);
            int v11 = v8;
            do
            {
              int v11 = (int)(v11 * (v3 + v1 - v5)) % (int)v6;
              uint64_t v12 = 8 * v11;
              uint64_t v13 = *(void *)(v7 + v12);
              *(void *)(v7 + v12) = v10;
              *double v9 = 1;
              double v9 = &v14[v11];
              uint64_t v10 = v13;
            }
            while (!*v9);
          }
          ++v8;
        }
        while (v8 != v6);
      }
    }
  }
}

double sub_1000C95FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v6 = *(_DWORD *)(a1 + 8);
  unsigned int v7 = *(_DWORD *)(a1 + 12);
  unsigned int v8 = *(_DWORD *)(a3 + 28) * *(_DWORD *)(a3 + 24);
  if (a2 != a1)
  {
    *(_DWORD *)(a2 + 8) = v6;
    *(_DWORD *)(a2 + 12) = v7;
    uint64_t v9 = v7 * v6;
    *(_DWORD *)(a2 + 16) = v9;
    *(_DWORD *)(a2 + 20) = v6;
    int v10 = *(_DWORD *)(a1 + 16);
    if (v10 > 3)
    {
      uint64_t v23 = (v10 - 2);
      int v24 = *(_OWORD **)(a2 + 32);
      uint64_t v25 = *(long long **)(a1 + 32);
      unint64_t v26 = (_OWORD *)((char *)v24 + 8 * v23);
      uint64_t v27 = (v10 - 1) >> 1;
      int v28 = v25;
      do
      {
        long long v29 = *v28++;
        *v24++ = v29;
        --v27;
      }
      while (v27);
      *unint64_t v26 = *(long long *)((char *)v25 + 8 * v23);
    }
    else if ((int)v9 >= 1)
    {
      uint64_t v11 = 0;
      uint64_t v12 = *(void *)(a1 + 32);
      uint64_t v13 = *(void *)(a2 + 32);
      if (v9 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v13 - v12) < 0x20) {
        goto LABEL_9;
      }
      uint64_t v11 = v9 & 0x7FFFFFFC;
      double v14 = (long long *)(v12 + 16);
      long double v15 = (_OWORD *)(v13 + 16);
      uint64_t v16 = v9 & 0xFFFFFFFC;
      do
      {
        long long v17 = *v14;
        *(v15 - 1) = *(v14 - 1);
        _OWORD *v15 = v17;
        v14 += 2;
        v15 += 2;
        v16 -= 4;
      }
      while (v16);
      if (v11 != v9)
      {
LABEL_9:
        uint64_t v18 = v9 - v11;
        uint64_t v19 = 8 * v11;
        double v20 = (void *)(v13 + v19);
        uint64_t v21 = (uint64_t *)(v12 + v19);
        do
        {
          uint64_t v22 = *v21++;
          *v20++ = v22;
          --v18;
        }
        while (v18);
      }
    }
  }
  __CLPK_integer v30 = *(_DWORD *)(a2 + 8);
  __CLPK_integer v31 = *(_DWORD *)(a2 + 12);
  BOOL v32 = *(__CLPK_doublereal **)(a2 + 32);
  uint64_t v33 = *(__CLPK_doublereal **)(a4 + 32);
  BOOL v34 = *(__CLPK_doublereal **)(a3 + 32);
  char __jobu = 78;
  char __jobvt = 78;
  __CLPK_integer __n = v31;
  __CLPK_integer __m = v30;
  __CLPK_integer __lda = v30;
  __CLPK_integer __ldvt = 1;
  __CLPK_integer __ldu = 1;
  __CLPK_integer v41 = 0;
  __lworint k = v8;
  uint64_t v35 = dgesvd_(&__jobu, &__jobvt, &__m, &__n, v32, &__lda, v33, 0, &__ldu, 0, &__ldvt, v34, &__lwork, &v41);
  if (v41)
  {
    LOWORD(__m) = 4;
    if (v41 < 0) {
      LOBYTE(__n) = 5;
    }
    else {
      LOBYTE(__n) = 4;
    }
    uint64_t v35 = cnprint::CNPrinter::Print();
  }
  if (v8 < **(double **)(a3 + 32)
    && cnprint::CNPrinter::GetLogLevel((cnprint::CNPrinter *)v35) <= 1)
  {
    LOWORD(__m) = 4;
    LOBYTE(__n) = 1;
    cnprint::CNPrinter::Print();
  }
  if (v7 >= v6) {
    unsigned int v36 = v6;
  }
  else {
    unsigned int v36 = v7;
  }
  int v37 = *(_DWORD *)(a3 + 24);
  int v38 = *(_DWORD *)(a3 + 28);
  *(_DWORD *)(a3 + 8) = v37;
  *(_DWORD *)(a3 + 12) = v38;
  *(_DWORD *)(a3 + 16) = v38 * v37;
  *(_DWORD *)(a3 + 20) = v37;
  int32x4_t v39 = vdupq_lane_s32((int32x2_t)(v36 | 0x100000000), 0);
  v39.i32[1] = 1;
  *(int32x4_t *)(a4 + 8) = v39;
  return *(double *)v39.i64;
}

void sub_1000C9848(void *a1)
{
  *a1 = off_100452B48;
  operator delete();
}

uint64_t sub_1000C9878(uint64_t result)
{
  *(void *)(result + 32) = result + 40;
  return result;
}

void sub_1000C9884(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 8);
  if (v1 >= 2)
  {
    unsigned int v3 = *(_DWORD *)(a1 + 12);
    if (v3 >= 2)
    {
      int v4 = *(_DWORD *)(a1 + 16);
      int v5 = *(_DWORD *)(a1 + 20);
      bzero(v14, v4);
      if (v4 >= 3)
      {
        uint64_t v6 = (v4 - 1);
        uint64_t v7 = *(void *)(a1 + 32);
        uint64_t v8 = 1;
        do
        {
          uint64_t v9 = &v14[v8];
          if (!v14[v8])
          {
            uint64_t v10 = *(void *)(v7 + 8 * v8);
            int v11 = v8;
            do
            {
              int v11 = (int)(v11 * (v3 + v1 - v5)) % (int)v6;
              uint64_t v12 = 8 * v11;
              uint64_t v13 = *(void *)(v7 + v12);
              *(void *)(v7 + v12) = v10;
              *uint64_t v9 = 1;
              uint64_t v9 = &v14[v11];
              uint64_t v10 = v13;
            }
            while (!*v9);
          }
          ++v8;
        }
        while (v8 != v6);
      }
    }
  }
}

void sub_1000C998C(cnframework::TimestampedEvent *a1)
{
  cnframework::TimestampedEvent::~TimestampedEvent(a1);

  operator delete();
}

void sub_1000C99C4(cnframework::TimestampedEvent *a1)
{
  *(void *)a1 = off_1004530D8;
  *((void *)a1 + 133) = off_100452B48;
  *((void *)a1 + 119) = off_100452B48;
  *((void *)a1 + 105) = off_100452B48;
  *((void *)a1 + 97) = off_100452B48;
  *((void *)a1 + 78) = off_100452B48;
  *((void *)a1 + 64) = off_100452B48;
  *((void *)a1 + 50) = off_100452B48;
  *((void *)a1 + 42) = off_100452B48;
  cnframework::TimestampedEvent::~TimestampedEvent(a1);
}

void sub_1000C9AE4(cnframework::TimestampedEvent *a1)
{
  *(void *)a1 = off_1004530D8;
  *((void *)a1 + 133) = off_100452B48;
  *((void *)a1 + 119) = off_100452B48;
  *((void *)a1 + 105) = off_100452B48;
  *((void *)a1 + 97) = off_100452B48;
  *((void *)a1 + 78) = off_100452B48;
  *((void *)a1 + 64) = off_100452B48;
  *((void *)a1 + 50) = off_100452B48;
  *((void *)a1 + 42) = off_100452B48;
  cnframework::TimestampedEvent::~TimestampedEvent(a1);

  operator delete();
}

void sub_1000C9C38(cnframework::TimestampedEvent *a1)
{
  *(void *)a1 = off_100453108;
  *((void *)a1 + 120) = off_100452B48;
  *((void *)a1 + 106) = off_100452B48;
  *((void *)a1 + 92) = off_100452B48;
  *((void *)a1 + 84) = off_100452B48;
  *((void *)a1 + 65) = off_100452B48;
  *((void *)a1 + 51) = off_100452B48;
  *((void *)a1 + 37) = off_100452B48;
  *((void *)a1 + 29) = off_100452B48;
  cnframework::TimestampedEvent::~TimestampedEvent(a1);
}

void sub_1000C9D58(cnframework::TimestampedEvent *a1)
{
  *(void *)a1 = off_100453108;
  *((void *)a1 + 120) = off_100452B48;
  *((void *)a1 + 106) = off_100452B48;
  *((void *)a1 + 92) = off_100452B48;
  *((void *)a1 + 84) = off_100452B48;
  *((void *)a1 + 65) = off_100452B48;
  *((void *)a1 + 51) = off_100452B48;
  *((void *)a1 + 37) = off_100452B48;
  *((void *)a1 + 29) = off_100452B48;
  cnframework::TimestampedEvent::~TimestampedEvent(a1);

  operator delete();
}

uint64_t sub_1000C9EAC(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_1000C9EB8(char *a1@<X8>)
{
  a1[23] = 13;
  strcpy(a1, "PositionEvent");
}

uint64_t sub_1000C9EE0(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_1000C9EEC(char *a1@<X8>)
{
  a1[23] = 16;
  strcpy(a1, "VIOEstimateEvent");
}

uint64_t sub_1000C9F0C(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

void sub_1000C9F18(char *a1@<X8>)
{
  a1[23] = 19;
  strcpy(a1, "VLLocalizationEvent");
}

uint64_t sub_1000C9F44(uint64_t a1)
{
  int v2 = (unsigned char *)(a1 + 5528);
  unsigned int v3 = (unsigned char *)(a1 + 4320);
  sub_1000D3330(a1 + 40);
  int v4 = operator new(0x40uLL);
  v4[1] = 0;
  v4[2] = 0;
  void *v4 = off_100453698;
  uint64_t v5 = *(void *)(a1 + 32);
  v4[5] = 0;
  v4[6] = 0;
  v4[4] = 0;
  *((_DWORD *)v4 + 14) = 0;
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 4312);
  *(void *)(a1 + 4312) = v4;
  v4[3] = v5;
  *(void *)(a1 + 4304) = v4 + 3;
  if (!v6 || atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    if (!*v3) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  if (*v3)
  {
LABEL_4:
    sub_1000C99C4((cnframework::TimestampedEvent *)(a1 + 4336));
    unsigned char *v3 = 0;
  }
LABEL_5:
  uint64_t v7 = (unsigned char *)(a1 + 6664);
  if (*v2) {
    unsigned char *v2 = 0;
  }
  if (v2[24])
  {
    sub_1000C9C38((cnframework::TimestampedEvent *)(a1 + 5560));
    v2[24] = 0;
  }
  if (*v7)
  {
    sub_1000C99C4((cnframework::TimestampedEvent *)(a1 + 6672));
    unsigned char *v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(void))(**(void **)(a1 + 7952) + 32);

  return v8();
}

uint64_t sub_1000CA0B4(uint64_t a1)
{
  int v2 = (unsigned char *)(a1 + 6664);
  *(void *)a1 = off_1004531B0;
  unsigned int v3 = *(std::__shared_weak_count **)(a1 + 7960);
  if (!v3 || atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    int v4 = (unsigned char *)(a1 + 5528);
    uint64_t v5 = *(void **)(a1 + 7928);
    if (!v5) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  int v4 = (unsigned char *)(a1 + 5528);
  uint64_t v5 = *(void **)(a1 + 7928);
  if (v5)
  {
LABEL_4:
    *(void *)(a1 + 7936) = v5;
    operator delete(v5);
  }
LABEL_5:
  std::mutex::~mutex((std::mutex *)(a1 + 7864));
  if (*v2)
  {
    sub_1000C99C4((cnframework::TimestampedEvent *)(a1 + 6672));
    unsigned char *v2 = 0;
  }
  uint64_t v6 = (unsigned char *)(a1 + 4320);
  if (v4[24])
  {
    sub_1000C9C38((cnframework::TimestampedEvent *)(a1 + 5560));
    v4[24] = 0;
  }
  if (*v4) {
    unsigned char *v4 = 0;
  }
  if (*v6)
  {
    sub_1000C99C4((cnframework::TimestampedEvent *)(a1 + 4336));
    unsigned char *v6 = 0;
  }
  uint64_t v7 = *(std::__shared_weak_count **)(a1 + 4312);
  if (v7 && !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  sub_1000CF5B0(a1 + 40);
  return a1;
}

void sub_1000CA23C(uint64_t a1)
{
  sub_1000CA0B4(a1);

  operator delete();
}

void sub_1000CA278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v31 = 0uLL;
  __CLPK_integer v30 = off_1004530D8;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&v31, 0, 0.0);
  LOBYTE(v32) = 0;
  *((void *)&v32 + 1) = 0;
  *(void *)&long long v33 = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)((char *)&v32 + 8), 0, 0.0);
  BYTE8(v33) = 0;
  long long v34 = 0uLL;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)&v34, 0, 0.0);
  LOBYTE(v35) = 0;
  *((void *)&v35 + 1) = 0;
  *(void *)&long long v36 = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)((char *)&v35 + 8), 0, 0.0);
  *((void *)&v36 + 1) = 0x7FF8000000000000;
  sub_1000CF950((uint64_t)v37);
  if ((sub_1000C35B8(a3, (uint64_t)&v30) & 1) == 0)
  {
    if (qword_10047BED8 == -1)
    {
      uint64_t v9 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_50;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100453668);
      uint64_t v9 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_50;
      }
    }
    *(_WORD *)buf = 0;
    uint64_t v10 = "Bad VIO estimate; skip it";
    int v11 = v9;
    os_log_type_t v12 = OS_LOG_TYPE_DEFAULT;
LABEL_18:
    _os_log_impl((void *)&_mh_execute_header, v11, v12, v10, buf, 2u);
    goto LABEL_50;
  }
  if (!(_BYTE)v47)
  {
    if (qword_10047BED8 == -1)
    {
      uint64_t v13 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        goto LABEL_50;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100453668);
      uint64_t v13 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        goto LABEL_50;
      }
    }
    *(_WORD *)buf = 0;
    uint64_t v10 = "Current VIO estimate of IMU pose is not Valid";
    int v11 = v13;
    os_log_type_t v12 = OS_LOG_TYPE_INFO;
    goto LABEL_18;
  }
  if (v44 == 1)
  {
    uint64_t v6 = (unsigned char *)(a1 + 6664);
    if (!*(unsigned char *)(a1 + 6664)) {
      goto LABEL_33;
    }
    uint64_t v7 = *(void *)(a1 + 6776);
    double v8 = *(double *)(a1 + 6784);
    if ((*(void *)&v37[0] || (*((void *)&v37[0] + 1) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
      && (v7 || (*(void *)&v8 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
      && *(void *)&v37[0] != v7)
    {
      if (*(uint64_t *)&v37[0] >= v7) {
        goto LABEL_28;
      }
    }
    else if (*((double *)v37 + 1) >= v8)
    {
      goto LABEL_28;
    }
    if (qword_10047BED8 == -1)
    {
      uint64_t v16 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_27;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100453668);
      uint64_t v16 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
      {
LABEL_27:
        sub_1000C9F44(a1);
        if (!*v6) {
          goto LABEL_33;
        }
LABEL_28:
        *(_OWORD *)buf = v38;
        *(_OWORD *)double v71 = *(_OWORD *)(a1 + 6872);
        uint64_t v18 = CNTimeSpan::operator-();
        if (fabs(v19 + (double)v18) < 2.22044605e-16) {
          goto LABEL_33;
        }
        if (qword_10047BED8 == -1)
        {
          double v20 = qword_10047BEE0;
          if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
          {
LABEL_32:
            sub_1000C9F44(a1);
LABEL_33:
            if (!*v6
              || (sub_1000CAC04(a1 + 6672, (uint64_t)&v30, 1, (uint64_t)buf), !buf[0])
              || (uint64_t v22 = *(void *)&buf[8], *(double *)&buf[8] <= 8.0))
            {
              uint64_t v24 = sub_1000BE038(a2);
              uint64_t v25 = *(uint64_t **)(a1 + 4304);
              *(void *)buf = v24;
              *(void *)&buf[8] = off_1004530D8;
              long long v51 = v33;
              long long v52 = v34;
              long long v53 = v35;
              long long v54 = v36;
              *(_OWORD *)&uint8_t buf[16] = v31;
              long long v50 = v32;
              long long v57 = v37[2];
              long long v58 = v37[3];
              long long v55 = v37[0];
              long long v56 = v37[1];
              long long v61 = v38;
              long long v62 = v39;
              long long v59 = v37[4];
              long long v60 = v37[5];
              char v67 = v44;
              long long v65 = v42;
              long long v66 = v43;
              long long v63 = v40;
              long long v64 = v41;
              sub_1000CFB2C((cnrotation::CNRotation *)&v68, (uint64_t)&v45);
              sub_1000CFB2C((cnrotation::CNRotation *)v69, (uint64_t)&v46);
              v69[220] = v47;
              char v70 = v48;
              sub_1000CB93C(v25, (uint64_t)buf);
              sub_1000C99C4((cnframework::TimestampedEvent *)&buf[8]);
              sub_1000D0B34(a1 + 6664, (uint64_t)&v30);
              sub_1000CBB1C(a1, 0);
              sub_1000CBD48(a1, *(void *)(a2 + 40), (void *)(*(void *)(*(void *)(a1 + 4304) + 16) - 1200));
              goto LABEL_50;
            }
            if (qword_10047BED8 != -1)
            {
              dispatch_once(&qword_10047BED8, &stru_100453668);
              uint64_t v23 = qword_10047BEE0;
              if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
                goto LABEL_50;
              }
              goto LABEL_38;
            }
            uint64_t v23 = qword_10047BEE0;
            if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO))
            {
LABEL_38:
              *(_DWORD *)double v71 = 134283777;
              *(void *)&v71[4] = v22;
              *(_WORD *)&v71[12] = 2049;
              *(void *)&v71[14] = 0x4020000000000000;
              _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_INFO, "Inferred horizontal speed of VIO estimate %{private}.3lf exceeds the threshold %{private}.3lf", v71, 0x16u);
              goto LABEL_50;
            }
            goto LABEL_50;
          }
        }
        else
        {
          dispatch_once(&qword_10047BED8, &stru_100453668);
          double v20 = qword_10047BEE0;
          if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
            goto LABEL_32;
          }
        }
        double v21 = *(double *)(a1 + 6880) + (double)*(uint64_t *)(a1 + 6872);
        *(_DWORD *)buf = 134349568;
        *(double *)&uint8_t buf[4] = v21;
        *(_WORD *)&unsigned char buf[12] = 2050;
        *(double *)&buf[14] = *((double *)&v38 + 1) + (double)(uint64_t)v38;
        *(_WORD *)&buf[22] = 2050;
        *(double *)&buf[24] = *((double *)v37 + 1) + (double)*(uint64_t *)&v37[0];
        _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_ERROR, "VIO estimate session start time changed from %{public}.3lf to %{public}.3lf; change the VIO reference frame at"
          " the event applicable time %{public}.3lf",
          buf,
          0x20u);
        goto LABEL_32;
      }
    }
    double v17 = *(double *)(a1 + 6784) + (double)*(uint64_t *)(a1 + 6776);
    *(_DWORD *)buf = 134349312;
    *(double *)&uint8_t buf[4] = *((double *)v37 + 1) + (double)*(uint64_t *)&v37[0];
    *(_WORD *)&unsigned char buf[12] = 2050;
    *(double *)&buf[14] = v17;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "Current VIO estimate's Time %{public}.3lf is before the previous VIO estimate %{public}.3lf", buf, 0x16u);
    goto LABEL_27;
  }
  if (qword_10047BED8 == -1)
  {
    double v14 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_50;
    }
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_100453668);
    double v14 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_50;
    }
  }
  switch(v44)
  {
    case 1:
      buf[23] = 7;
      *(_DWORD *)buf = 1768779598;
      int v15 = 1818324585;
      goto LABEL_42;
    case 2:
      buf[23] = 12;
      strcpy(buf, "Unacceptable");
      goto LABEL_47;
    case 3:
      int v28 = (char *)operator new(0x19uLL);
      *(void *)buf = v28;
      *(_OWORD *)&buf[8] = xmmword_1003E6DB0;
      qmemcpy(v28, "Unacceptable_FastMotion", 23);
      uint64_t v27 = v28 + 23;
      goto LABEL_45;
    case 4:
      unint64_t v26 = (char *)operator new(0x20uLL);
      *(void *)buf = v26;
      *(_OWORD *)&buf[8] = xmmword_1003E6DA0;
      qmemcpy(v26, "Unacceptable_LowSceneTexture", 28);
      uint64_t v27 = v26 + 28;
LABEL_45:
      *uint64_t v27 = 0;
      long long v29 = *(unsigned char **)buf;
      goto LABEL_48;
    case 5:
      buf[23] = 21;
      strcpy(buf, "Unacceptable_LowLight");
      goto LABEL_47;
    default:
      buf[23] = 7;
      *(_DWORD *)buf = 1852534357;
      int v15 = 1853321070;
LABEL_42:
      *(_DWORD *)&buf[3] = v15;
      buf[7] = 0;
LABEL_47:
      long long v29 = buf;
LABEL_48:
      *(_DWORD *)double v71 = 136446210;
      *(void *)&v71[4] = v29;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "Current VIO estimate is not in Nominal Tracking State [Status: %{public}s]", v71, 0xCu);
      if ((buf[23] & 0x80000000) != 0) {
        operator delete(*(void **)buf);
      }
      break;
  }
LABEL_50:
  sub_1000C99C4((cnframework::TimestampedEvent *)&v30);
}

void sub_1000CAAB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000C99C4((cnframework::TimestampedEvent *)va);
  _Unwind_Resume(a1);
}

void sub_1000CAAC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000C99C4((cnframework::TimestampedEvent *)va);
  _Unwind_Resume(a1);
}

void sub_1000CAAD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000C99C4((cnframework::TimestampedEvent *)va);
  _Unwind_Resume(a1);
}

void sub_1000CAAEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000C99C4(v2);
  sub_1000C99C4((cnframework::TimestampedEvent *)va);
  _Unwind_Resume(a1);
}

void sub_1000CAB08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  STACK[0x728] = (unint64_t)off_100452B48;
  STACK[0x6B8] = (unint64_t)off_100452B48;
  STACK[0x648] = (unint64_t)off_100452B48;
  STACK[0x608] = (unint64_t)off_100452B48;
  cnframework::TimestampedEvent::~TimestampedEvent(v2);
  sub_1000C99C4((cnframework::TimestampedEvent *)va);
  _Unwind_Resume(a1);
}

void sub_1000CABB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000C99C4((cnframework::TimestampedEvent *)va);
  _Unwind_Resume(a1);
}

void sub_1000CABC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000C99C4((cnframework::TimestampedEvent *)va);
  _Unwind_Resume(a1);
}

void sub_1000CABD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  cnframework::TimestampedEvent::~TimestampedEvent((cnframework::TimestampedEvent *)va);
  _Unwind_Resume(a1);
}

void sub_1000CAC04(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W3>, uint64_t a4@<X8>)
{
  double v5 = *(double *)(a2 + 112) + (double)*(uint64_t *)(a2 + 104);
  double v6 = *(double *)(a1 + 112) + (double)*(uint64_t *)(a1 + 104);
  double v7 = vabdd_f64(v5, v6);
  if (v7 < 2.22044605e-16)
  {
    if (qword_10047BED8 == -1)
    {
      double v8 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
      {
LABEL_5:
        *(unsigned char *)a4 = 0;
LABEL_85:
        *(unsigned char *)(a4 + 24) = 0;
        return;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100453668);
      double v8 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_5;
      }
    }
    LOWORD(buf[0]) = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Failed to estimate speed stats from VIO estimates: Time difference is too small", (uint8_t *)buf, 2u);
    goto LABEL_5;
  }
  uint64_t v168 = 0x100000003;
  long long v163 = off_100452C18;
  p_x = &__x;
  long long v169 = &__x;
  int v13 = *(_DWORD *)(a2 + 348);
  int v164 = *(_DWORD *)(a2 + 344);
  int v165 = v13;
  uint64_t v14 = (v13 * v164);
  int v166 = v14;
  int v167 = v164;
  if ((int)v14 > 3)
  {
    uint64_t v23 = (v14 - 2);
    uint64_t v24 = *(float64x2_t **)(a2 + 368);
    unsigned int v25 = v14 - 1;
    unint64_t v26 = *(float64x2_t **)(a1 + 368);
    uint64_t v27 = v25 >> 1;
    int v28 = v24;
    long long v29 = v26;
    __CLPK_integer v30 = (float64x2_t *)&__x;
    do
    {
      float64x2_t v31 = *v28++;
      float64x2_t v32 = v31;
      float64x2_t v33 = *v29++;
      *v30++ = vsubq_f64(v32, v33);
      --v27;
    }
    while (v27);
    *(float64x2_t *)(&__x + v23) = vsubq_f64(*(float64x2_t *)((char *)v24 + 8 * v23), *(float64x2_t *)((char *)v26 + 8 * v23));
    double v21 = hypot(__x, __y);
    double v22 = v21 / v7;
    if (a3)
    {
LABEL_11:
      *(double *)(a4 + 8) = v22;
      *(void *)(a4 + 16) = 0;
LABEL_84:
      *(unsigned char *)a4 = 1;
      goto LABEL_85;
    }
  }
  else
  {
    if ((int)v14 >= 1)
    {
      int v15 = *(double **)(a2 + 368);
      uint64_t v16 = *(double **)(a1 + 368);
      do
      {
        double v17 = *v15++;
        double v18 = v17;
        double v19 = *v16++;
        *p_x++ = v18 - v19;
        --v14;
      }
      while (v14);
    }
    double v21 = hypot(__x, __y);
    double v22 = v21 / v7;
    if (a3) {
      goto LABEL_11;
    }
  }
  double v34 = v21;
  long long v35 = (cntransformation *)(a1 + 304);
  cntransformation::Inv(buf, v35, v20);
  cntransformation::Cat(v159, (cntransformation *)buf, (const cntransformation::CNRigidTransformation *)(a2 + 304), v36);
  cnrotation::CNRotation::RotationMatrix((uint64_t *)&v146, v35);
  uint64_t v178 = 0x300000003;
  *(void *)int v177 = off_100452AF0;
  int v37 = __C;
  int v179 = __C;
  uint64_t v38 = __ldc;
  uint64_t v39 = HIDWORD(__ldb);
  *(void *)&v177[8] = __PAIR64__(HIDWORD(__ldb), __ldc);
  *(_DWORD *)&v177[16] = HIDWORD(__ldb) * __ldc;
  v40.i64[0] = __ldc;
  v40.i64[1] = __ldb;
  *(_DWORD *)&v177[20] = __ldc;
  long long v41 = __A;
  uint64_t v42 = __ldb;
  if ((int)vmaxvq_u32(v40) > 5)
  {
    cblas_dgemm(CblasColMajor, CblasNoTrans, CblasNoTrans, __ldc, SHIDWORD(__ldb), SDWORD1(__ldc), 1.0, __A, __ldc, __B, __ldb, 0.0, __C, __ldc);
  }
  else
  {
    if (HIDWORD(__ldb)) {
      BOOL v43 = __ldc == 0;
    }
    else {
      BOOL v43 = 1;
    }
    if (!v43)
    {
      unint64_t v44 = DWORD1(__ldc);
      if (DWORD1(__ldc))
      {
        uint64_t v45 = __B;
        if (DWORD1(__ldc) >= 4)
        {
          uint64_t v102 = 0;
          uint64_t v103 = DWORD1(__ldc) & 0xFFFFFFFC;
          uint64_t v104 = 8 * __ldb;
          uint64_t v105 = 8 * __ldc;
          unint64_t v106 = 32 * ((unint64_t)DWORD1(__ldc) >> 2);
          do
          {
            uint64_t v107 = v102 * v38;
            if (v38 == 1)
            {
              unint64_t v108 = 0;
              double v109 = 0.0;
              double v110 = (float64x2_t *)(v41 + 2);
              do
              {
                float64x2_t v111 = vmulq_f64(v110[-1], *(float64x2_t *)&v45[v108 / 8]);
                float64x2_t v112 = vmulq_f64(*v110, *(float64x2_t *)&v45[v108 / 8 + 2]);
                double v109 = v109 + v111.f64[0] + v111.f64[1] + v112.f64[0] + v112.f64[1];
                v108 += 32;
                v110 += 2 * v38;
              }
              while (v106 != v108);
              if (v103 != v44)
              {
                uint64_t v113 = &v41[4 * (v44 >> 2)];
                uint64_t v114 = v44 & 0xFFFFFFFC;
                do
                {
                  double v109 = v109 + *v113 * v45[v114++];
                  uint64_t v113 = (double *)((char *)v113 + v105);
                }
                while (v44 != v114);
              }
              __C[v107] = v109;
            }
            else
            {
              uint64_t v115 = 0;
              double v116 = v41;
              do
              {
                double v117 = 0.0;
                double v118 = v116;
                double v119 = v45;
                unint64_t v120 = v44;
                do
                {
                  double v121 = *v119++;
                  double v117 = v117 + *v118 * v121;
                  double v118 = (double *)((char *)v118 + v105);
                  --v120;
                }
                while (v120);
                __C[v115 + v107] = v117;
                ++v115;
                ++v116;
              }
              while (v115 != v38);
            }
            ++v102;
            uint64_t v45 = (double *)((char *)v45 + v104);
          }
          while (v102 != v39);
        }
        else
        {
          uint64_t v46 = 0;
          uint64_t v47 = 8 * __ldc;
          do
          {
            unint64_t v48 = 0;
            do
            {
              double v49 = v41[v48 / 8] * v45[v46 * v42] + 0.0;
              if (v44 != 1)
              {
                double v49 = v49 + v41[v38 + v48 / 8] * v45[v46 * v42 + 1];
                if (v44 != 2) {
                  double v49 = v49 + v41[2 * v38 + v48 / 8] * v45[v46 * v42 + 2];
                }
              }
              v37[v48 / 8] = v49;
              v48 += 8;
            }
            while (v47 != v48);
            ++v46;
            int v37 = (double *)((char *)v37 + v47);
          }
          while (v46 != v39);
        }
      }
      else
      {
        bzero(__C, 8 * __ldc * (unint64_t)HIDWORD(__ldb));
      }
    }
  }
  cnrotation::CNRotation::RotationMatrix((uint64_t *)&v141, v35);
  uint64_t v50 = v142;
  uint64_t v51 = DWORD1(v142);
  uint64_t v173 = 0x300000003;
  *(void *)uint64_t v172 = off_100452AF0;
  long long v52 = v175;
  double v174 = v175;
  *(_DWORD *)&v172[8] = DWORD1(v142);
  *(_DWORD *)&v172[12] = v142;
  *(_DWORD *)&v172[16] = v142 * DWORD1(v142);
  *(_DWORD *)&v172[20] = DWORD1(v142);
  if (DWORD1(v142) && v142)
  {
    int v53 = 0;
    int v54 = 0;
    int v55 = HIDWORD(v142);
    long long v56 = v144;
    int v57 = v142 - 1;
    int v58 = v142 & 0xFFFFFFFC;
    do
    {
      if (v50 >= 0xC)
      {
        int v59 = 0;
        if (v51 == 1
          && v54 + v57 >= v54
          && v55 * v54 + v57 >= v55 * v54
          && (unint64_t)((char *)&v175[v54] - (char *)&v56[v55 * v54]) >= 0x20)
        {
          int v60 = 0;
          do
          {
            long long v61 = &(&v56[v53])[v60];
            long long v62 = *(_OWORD *)v61;
            long long v63 = *((_OWORD *)v61 + 1);
            long long v64 = &v175[v54 + v60];
            *(_OWORD *)long long v64 = v62;
            *((_OWORD *)v64 + 1) = v63;
            v60 += 4;
          }
          while (v58 != v60);
          int v59 = v50 & 0xFFFFFFFC;
          if (v50 == v58) {
            goto LABEL_33;
          }
        }
      }
      else
      {
        int v59 = 0;
      }
      int v65 = v54 + v51 * v59;
      do
      {
        *(void *)&v175[v65] = *(&v56[v53] + v59++);
        v65 += v51;
      }
      while (v50 != v59);
LABEL_33:
      ++v54;
      v53 += v55;
    }
    while (v54 != v51);
  }
  uint64_t v156 = 0x300000003;
  BOOL v151 = off_100452AF0;
  long long v66 = v158;
  BOOL v157 = v158;
  uint64_t v68 = *(unsigned int *)&v177[8];
  unint64_t v67 = *(unsigned int *)&v177[12];
  int v152 = *(_DWORD *)&v177[8];
  int v153 = v50;
  int v154 = *(_DWORD *)&v177[8] * v50;
  int v155 = *(_DWORD *)&v177[8];
  if (*(_DWORD *)&v177[8] <= *(_DWORD *)&v177[12]) {
    int v69 = *(_DWORD *)&v177[12];
  }
  else {
    int v69 = *(_DWORD *)&v177[8];
  }
  if (v51 <= v50) {
    unsigned int v70 = v50;
  }
  else {
    unsigned int v70 = v51;
  }
  if (v69 <= v70) {
    int v69 = v70;
  }
  double v71 = v179;
  if (v69 > 5)
  {
    cblas_dgemm(CblasColMajor, CblasNoTrans, CblasNoTrans, *(const int *)&v177[8], v50, *(const int *)&v177[12], 1.0, v179, *(const int *)&v177[8], v175, v51, 0.0, v158, *(const int *)&v177[8]);
    long long v66 = v157;
    LODWORD(v68) = v155;
  }
  else if (v50 && *(_DWORD *)&v177[8])
  {
    if (*(_DWORD *)&v177[12])
    {
      uint64_t v72 = 8 * *(unsigned int *)&v177[8];
      if (*(_DWORD *)&v177[12] >= 4u)
      {
        uint64_t v122 = 0;
        uint64_t v123 = 8 * v51;
        uint64_t v124 = (float64x2_t *)&v176;
        do
        {
          uint64_t v125 = v122 * v68;
          if (v68 == 1)
          {
            double v126 = 0.0;
            char v127 = (float64x2_t *)(v71 + 2);
            __int16 v128 = v124;
            uint64_t v129 = v67 & 0xFFFFFFFC;
            do
            {
              float64x2_t v130 = vmulq_f64(v127[-1], v128[-1]);
              float64x2_t v131 = vmulq_f64(*v127, *v128);
              double v126 = v126 + v130.f64[0] + v130.f64[1] + v131.f64[0] + v131.f64[1];
              v128 += 2;
              v127 += 2 * v68;
              v129 -= 4;
            }
            while (v129);
            if ((v67 & 0xFFFFFFFC) != v67)
            {
              uint64_t v132 = (double *)&v71[4 * (v67 >> 2)];
              uint64_t v133 = v67 & 0xFFFFFFFC;
              do
              {
                double v126 = v126 + *v132 * v52[v133++];
                uint64_t v132 = (double *)((char *)v132 + v72);
              }
              while (v67 != v133);
            }
            v158[v125] = v126;
          }
          else
          {
            uint64_t v134 = 0;
            uint64_t v135 = (double *)v71;
            do
            {
              double v136 = 0.0;
              uint64_t v137 = v135;
              int v138 = v52;
              unint64_t v139 = v67;
              do
              {
                double v140 = *v138++;
                double v136 = v136 + *v137 * v140;
                uint64_t v137 = (double *)((char *)v137 + v72);
                --v139;
              }
              while (v139);
              v158[v134 + v125] = v136;
              ++v134;
              ++v135;
            }
            while (v134 != v68);
          }
          ++v122;
          long long v52 = (double *)((char *)v52 + v123);
          uint64_t v124 = (float64x2_t *)((char *)v124 + v123);
        }
        while (v122 != v50);
      }
      else
      {
        uint64_t v73 = 0;
        unsigned int v74 = v158;
        do
        {
          unint64_t v75 = 0;
          double v76 = v175[v73 * v51];
          do
          {
            double v77 = v71[v75 / 8] * v76 + 0.0;
            if (v67 != 1)
            {
              double v77 = v77 + v71[(unint64_t)v72 / 8 + v75 / 8] * v175[v73 * v51 + 1];
              if (v67 != 2) {
                double v77 = v77 + v71[2 * v68 + v75 / 8] * v175[v73 * v51 + 2];
              }
            }
            v74[v75 / 8] = v77;
            v75 += 8;
          }
          while (v72 != v75);
          ++v73;
          unsigned int v74 = (double *)((char *)v74 + v72);
        }
        while (v73 != v50);
      }
    }
    else
    {
      bzero(v158, 8 * v50 * (unint64_t)*(unsigned int *)&v177[8]);
    }
  }
  double v78 = v5 - v6;
  double v79 = v66[(int)v68 + 1];
  double v80 = v79 * v79 + *v66 * *v66;
  double v81 = v80 + v80;
  double v82 = v78 * v78;
  if (qword_10047BED8 != -1) {
    dispatch_once(&qword_10047BED8, &stru_100453668);
  }
  long long v83 = qword_10047BEE0;
  double v84 = v81 / v82;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)int v177 = 134349312;
    *(double *)&v177[4] = v22;
    *(_WORD *)&v177[12] = 2050;
    *(double *)&v177[14] = v84;
    _os_log_impl((void *)&_mh_execute_header, v83, OS_LOG_TYPE_DEBUG, "VIO inferred speed, mean, %{public}f, var, %{public}f", v177, 0x16u);
  }
  if (fabs(v34) < 2.22044605e-16)
  {
    if (qword_10047BED8 != -1)
    {
      dispatch_once(&qword_10047BED8, &stru_100453668);
      double v85 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_83;
      }
      goto LABEL_74;
    }
    double v85 = qword_10047BEE0;
    if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
    {
LABEL_74:
      *(_WORD *)int v177 = 0;
      double v86 = "Failed to estimate the course stats from VIO estimates: Distance of travel is too small";
      float64x2_t v87 = v177;
LABEL_82:
      _os_log_impl((void *)&_mh_execute_header, v85, OS_LOG_TYPE_ERROR, v86, v87, 2u);
    }
LABEL_83:
    *(double *)(a4 + 8) = v22;
    *(double *)(a4 + 16) = v84;
    goto LABEL_84;
  }
  double v88 = v169;
  long double v89 = v169[1];
  double v90 = atan2(v89, *v169);
  uint64_t v148 = 0x200000001;
  long long __ldc = xmmword_1003E69F0;
  BOOL v146 = off_100452C60;
  __A = (double *)&v150;
  double v91 = -v89 / (v34 * v34);
  v150.f64[0] = v91;
  double v92 = *v88 / (v34 * v34);
  v150.f64[1] = v92;
  *(void *)&__C[0] = &_mh_execute_header;
  uint64_t v143 = 0x100000002;
  int v141 = off_100452CA8;
  long long v142 = xmmword_1003E6A10;
  uint64_t v144 = &v145;
  uint64_t v145 = &_mh_execute_header;
  uint64_t v178 = 0x200000002;
  *(_OWORD *)&v177[8] = xmmword_1003E6A00;
  *(void *)int v177 = off_100452DD8;
  int v179 = __C;
  __C[0] = v157[(int)v145 + (int)v145 * v155];
  unint64_t v94 = (unint64_t)&_mh_execute_header >> 32;
  if (v90 >= 0.0) {
    double v95 = v90;
  }
  else {
    double v95 = v90 + 6.28318531;
  }
  __C[1] = v157[(((unint64_t)&_mh_execute_header >> 32) + &_mh_execute_header * v155)];
  __C[2] = v157[&_mh_execute_header + v94 * v155];
  __C[3] = v157[(v94 + v94 * v155)];
  uint64_t v173 = 0x200000001;
  *(void *)uint64_t v172 = off_100452C60;
  double v174 = v175;
  *(_OWORD *)&v172[8] = xmmword_1003E69F0;
  double v93 = __C;
  float64x2x2_t v181 = vld2q_f64(v93);
  float64x2_t v96 = vmulq_f64(vmlaq_n_f64(vmlaq_n_f64((float64x2_t)0, v181.val[0], v91), v181.val[1], v92), v150);
  double v97 = v96.f64[0] + 0.0 + v96.f64[1];
  if (v97 < 0.0)
  {
    if (qword_10047BED8 == -1)
    {
      double v85 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_83;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100453668);
      double v85 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_83;
      }
    }
    *(_WORD *)uint64_t v172 = 0;
    double v86 = "Course estimate variance is NEGATIVE; drop it.";
    float64x2_t v87 = v172;
    goto LABEL_82;
  }
  uint64_t v98 = qword_10047BED8;
  *(double *)&uint64_t v99 = 9.8696044;
  if (v97 > 9.8696044)
  {
    if (qword_10047BED8 == -1)
    {
      unint64_t v100 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_92;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100453668);
      unint64_t v100 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_92;
      }
    }
    *(_DWORD *)uint64_t v172 = 134349056;
    *(double *)&v172[4] = v97;
    _os_log_impl((void *)&_mh_execute_header, v100, OS_LOG_TYPE_DEFAULT, "Course estimate variance is too big: %{public}f; flooring it to pi^2",
      v172,
      0xCu);
    uint64_t v98 = qword_10047BED8;
    double v97 = 9.8696044;
  }
  if (v98 != -1)
  {
    dispatch_once(&qword_10047BED8, &stru_100453668);
    float64x2_t v101 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_94;
    }
    goto LABEL_93;
  }
  *(double *)&uint64_t v99 = v97;
LABEL_92:
  double v97 = *(double *)&v99;
  float64x2_t v101 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG))
  {
LABEL_93:
    *(_DWORD *)uint64_t v172 = 134349312;
    *(double *)&v172[4] = v95;
    *(_WORD *)&v172[12] = 2050;
    *(double *)&v172[14] = v97;
    _os_log_impl((void *)&_mh_execute_header, v101, OS_LOG_TYPE_DEBUG, "VIO inferred course, mean, %{public}f, var, %{public}f", v172, 0x16u);
  }
LABEL_94:
  *(double *)(a4 + 8) = v22;
  *(double *)(a4 + 16) = v84;
  *(unsigned char *)a4 = 1;
  *(double *)(a4 + 32) = v95;
  *(double *)(a4 + 40) = v97;
  *(unsigned char *)(a4 + 24) = 1;
}

void sub_1000CB93C(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[2];
  if (v4 >= a1[3])
  {
    uint64_t v19 = sub_1000D020C(a1 + 1, a2);
  }
  else
  {
    *(void *)unint64_t v4 = *(void *)a2;
    *(void *)(v4 + 8) = off_1004530D8;
    long long v5 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v4 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v4 + 32) = v5;
    long long v6 = *(_OWORD *)(a2 + 48);
    long long v7 = *(_OWORD *)(a2 + 64);
    long long v8 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(v4 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(v4 + 96) = v8;
    *(_OWORD *)(v4 + 48) = v6;
    *(_OWORD *)(v4 + 64) = v7;
    long long v9 = *(_OWORD *)(a2 + 176);
    long long v11 = *(_OWORD *)(a2 + 128);
    long long v10 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(v4 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(v4 + 176) = v9;
    *(_OWORD *)(v4 + 128) = v11;
    *(_OWORD *)(v4 + 144) = v10;
    long long v12 = *(_OWORD *)(a2 + 240);
    long long v14 = *(_OWORD *)(a2 + 192);
    long long v13 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(v4 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(v4 + 240) = v12;
    *(_OWORD *)(v4 + 192) = v14;
    *(_OWORD *)(v4 + 208) = v13;
    long long v16 = *(_OWORD *)(a2 + 272);
    long long v15 = *(_OWORD *)(a2 + 288);
    long long v17 = *(_OWORD *)(a2 + 256);
    *(unsigned char *)(v4 + 304) = *(unsigned char *)(a2 + 304);
    *(_OWORD *)(v4 + 272) = v16;
    *(_OWORD *)(v4 + 288) = v15;
    *(_OWORD *)(v4 + 256) = v17;
    *(_OWORD *)(v4 + 112) = *(_OWORD *)(a2 + 112);
    sub_1000CFB2C((cnrotation::CNRotation *)(v4 + 312), a2 + 312);
    sub_1000CFB2C((cnrotation::CNRotation *)(v4 + 752), a2 + 752);
    __int16 v18 = *(_WORD *)(a2 + 1192);
    *(unsigned char *)(v4 + 1194) = *(unsigned char *)(a2 + 1194);
    *(_WORD *)(v4 + 1192) = v18;
    uint64_t v19 = v4 + 1200;
    a1[2] = v4 + 1200;
  }
  a1[2] = v19;
  unint64_t v20 = 0x2FC962FC962FC963 * ((v19 - a1[1]) >> 4) - 1;

  sub_1000D008C((uint64_t)a1, v20);
}

void sub_1000CBA6C(_Unwind_Exception *a1)
{
  v3[79] = off_100452B48;
  v3[65] = off_100452B48;
  v3[51] = off_100452B48;
  v3[43] = off_100452B48;
  cnframework::TimestampedEvent::~TimestampedEvent(v2);
  *(void *)(v1 + 16) = v3;
  _Unwind_Resume(a1);
}

void sub_1000CBB04(_Unwind_Exception *a1)
{
  cnframework::TimestampedEvent::~TimestampedEvent(v2);
  *(void *)(v1 + 16) = v3;
  _Unwind_Resume(a1);
}

uint64_t sub_1000CBB1C(uint64_t result, char a2)
{
  if (*(unsigned char *)(result + 19))
  {
    uint64_t v2 = result;
    if (*(unsigned char *)(result + 5552))
    {
      if (*(void *)(*(void *)(result + 4304) + 8) != *(void *)(*(void *)(result + 4304) + 16))
      {
        if ((a2 & 1) != 0 || (double result = sub_1000D2C00(result + 40), (result & 1) == 0))
        {
          double result = CNTimeSpan::operator-();
          if (fabs(v3 + (double)result) <= 0.5)
          {
            uint64_t v4 = *(void *)(v2 + 4304);
            uint64_t v5 = *(void *)(v4 + 8);
            uint64_t v6 = *(void *)(v4 + 16);
            if (v6 == v5)
            {
              uint64_t v9 = v5;
            }
            else
            {
              uint64_t v7 = *(void *)(v2 + 5664);
              double v8 = *(double *)(v2 + 5672);
              if (v7)
              {
                uint64_t v9 = v5;
                unint64_t v10 = 0x2FC962FC962FC963 * ((v6 - v5) >> 4);
                while (1)
                {
                  unint64_t v11 = v10 >> 1;
                  uint64_t v12 = v9 + 1200 * (v10 >> 1);
                  uint64_t v13 = *(void *)(v12 + 112);
                  if (v13) {
                    BOOL v14 = 1;
                  }
                  else {
                    BOOL v14 = (*(void *)(v12 + 120) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
                  }
                  if (v14 && v13 != v7)
                  {
                    if (v13 >= v7) {
                      goto LABEL_11;
                    }
                  }
                  else if (*(double *)(v12 + 120) >= v8)
                  {
                    goto LABEL_11;
                  }
                  uint64_t v9 = v12 + 1200;
                  unint64_t v11 = v10 + ~v11;
LABEL_11:
                  unint64_t v10 = v11;
                  if (!v11) {
                    goto LABEL_23;
                  }
                }
              }
              if ((*(void *)(v2 + 5672) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
              {
                uint64_t v9 = v5;
                unint64_t v19 = 0x2FC962FC962FC963 * ((v6 - v5) >> 4);
                while (1)
                {
                  unint64_t v20 = v19 >> 1;
                  uint64_t v21 = v9 + 1200 * (v19 >> 1);
                  uint64_t v22 = *(void *)(v21 + 112);
                  if (v22)
                  {
                    if ((v22 & 0x8000000000000000) == 0) {
                      goto LABEL_36;
                    }
                  }
                  else if (*(double *)(v21 + 120) >= v8)
                  {
                    goto LABEL_36;
                  }
                  uint64_t v9 = v21 + 1200;
                  unint64_t v20 = v19 + ~v20;
LABEL_36:
                  unint64_t v19 = v20;
                  if (!v20) {
                    goto LABEL_23;
                  }
                }
              }
              uint64_t v9 = v5;
              unint64_t v23 = 0x2FC962FC962FC963 * ((v6 - v5) >> 4);
              do
              {
                unint64_t v24 = v23 >> 1;
                uint64_t v25 = v9 + 1200 * (v23 >> 1);
                if (*(double *)(v25 + 120) < v8)
                {
                  uint64_t v9 = v25 + 1200;
                  unint64_t v24 = v23 + ~v24;
                }
                unint64_t v23 = v24;
              }
              while (v24);
            }
LABEL_23:
            uint64_t v15 = v5 + 1200 * (int)(-1775253149 * ((v6 - v5) >> 4) - 1);
            uint64_t v16 = v9 - 1200;
            if (v9 == v5) {
              uint64_t v16 = v5;
            }
            else {
              uint64_t v5 = v9;
            }
            BOOL v17 = v9 == v6;
            if (v9 == v6) {
              uint64_t v18 = v15;
            }
            else {
              uint64_t v18 = v16;
            }
            if (v17) {
              uint64_t v5 = v15;
            }
            return sub_1000D2C08(v2 + 40, v2 + 5560, (uint64_t *)(v18 + 112), (uint64_t *)(v5 + 112));
          }
        }
      }
    }
  }
  return result;
}

void sub_1000CBD48(uint64_t a1, uint64_t a2, void *a3)
{
  if (*(unsigned char *)(a1 + 19))
  {
    sub_1000D5A90(a1 + 40, (uint64_t)(a3 + 1), v16);
    if (v17)
    {
      uint64_t v6 = (*(uint64_t (**)(void *))(v16[0] + 16))(v16);
      uint64_t v15 = *a3 + (uint64_t)((v7 + (double)v6) * 1000000000.0);
      if (!v17) {
        sub_1000C356C();
      }
      sub_1000BEA3C((uint64_t)v12, &v15, (uint64_t)v16, (void *)(a1 + 7952));
      if (!sub_1000BEA40(v12)) {
        goto LABEL_11;
      }
      if (qword_10047BED8 == -1)
      {
        double v8 = qword_10047BEE0;
        if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG))
        {
LABEL_8:
          uint64_t v9 = (std::mutex *)(a1 + 7864);
          std::mutex::lock((std::mutex *)(a1 + 7864));
          unint64_t v10 = *(void **)(a1 + 7928);
          for (uint64_t i = *(void **)(a1 + 7936); v10 != i; ++v10)
            (*(void (**)(void, uint64_t, unsigned __int8 *))(*(void *)*v10 + 16))(*v10, a2, v12);
          std::mutex::unlock(v9);
LABEL_11:
          nullsub_15(v14);
          cnframework::TimestampedEvent::~TimestampedEvent((cnframework::TimestampedEvent *)&v13);
          if (v17) {
            cnframework::TimestampedEvent::~TimestampedEvent((cnframework::TimestampedEvent *)v16);
          }
          return;
        }
      }
      else
      {
        dispatch_once(&qword_10047BED8, &stru_100453668);
        double v8 = qword_10047BEE0;
        if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG)) {
          goto LABEL_8;
        }
      }
      *(_DWORD *)buf = 134283777;
      uint64_t v19 = v14[1];
      __int16 v20 = 2049;
      uint64_t v21 = v14[2];
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Raising VIO-based position lat,lng (%{private}.8f, %{private}.8f) from VIO estimate", buf, 0x16u);
      goto LABEL_8;
    }
  }
}

void sub_1000CBF88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  nullsub_15(&a56);
  cnframework::TimestampedEvent::~TimestampedEvent((cnframework::TimestampedEvent *)&a10);
  if (!LOBYTE(STACK[0x338])) {
    _Unwind_Resume(a1);
  }
  cnframework::TimestampedEvent::~TimestampedEvent((cnframework::TimestampedEvent *)&a67);
  _Unwind_Resume(a1);
}

void sub_1000CBFEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000BEF30(v8);
  if (!sub_1000C4EAC(a3, a2, (uint64_t)v8))
  {
    if (qword_10047BED8 == -1)
    {
      uint64_t v6 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_6;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100453668);
      uint64_t v6 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_6;
      }
    }
    *(_WORD *)double v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Bad VL location; skip it", v7, 2u);
    goto LABEL_6;
  }
  sub_1000D0D88(a1 + 5552, (uint64_t)v8);
  sub_1000CBB1C(a1, 1);
LABEL_6:
  sub_1000C9C38((cnframework::TimestampedEvent *)v8);
}

void sub_1000CC0E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000C9C38((cnframework::TimestampedEvent *)va);
  _Unwind_Resume(a1);
}

void sub_1000CC0FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 4304);
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v5 = *(void *)(v3 + 16);
  if (v4 == v5)
  {
    std::string __p = 0;
    char v17 = 0;
    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = *a2;
    uint64_t v8 = (unsigned __int128)((v5 - v4) * (__int128)0x6D3A06D3A06D3A07) >> 64;
    uint64_t v9 = (v8 >> 9) + ((unint64_t)v8 >> 63);
    uint64_t v10 = 16;
    while (1)
    {
      uint64_t v11 = *(void *)(v3 + 8);
      long long v19 = *(_OWORD *)(v11 + v10);
      if (*(void *)v3 >= v7 - sub_1000BE00C((void *)(v11 + v10 - 16), (uint64_t)&v19)) {
        break;
      }
      ++v6;
      *(_DWORD *)(v3 + 32) = 2;
      v10 += 1200;
      if (v9 == v6) {
        goto LABEL_8;
      }
    }
    if (v9 != v6) {
      goto LABEL_9;
    }
LABEL_8:
    *(_DWORD *)(v3 + 32) = 1;
    uint64_t v6 = v9;
LABEL_9:
    sub_1000D0738(v3, v6, &__p);
    uint64_t v12 = (char *)__p;
    if (__p)
    {
      uint64_t v13 = v17;
      BOOL v14 = __p;
      if (v17 != __p)
      {
        do
        {
          uint64_t v15 = v13 - 1200;
          sub_1000C99C4((cnframework::TimestampedEvent *)(v13 - 1192));
          uint64_t v13 = v15;
        }
        while (v15 != v12);
        BOOL v14 = __p;
      }
      char v17 = v12;
      operator delete(v14);
    }
  }
  if (((*(uint64_t (**)(uint64_t))(*(void *)a1 + 256))(a1) & 1) == 0)
  {
    if (*(unsigned char *)(a1 + 4320))
    {
      sub_1000C99C4((cnframework::TimestampedEvent *)(a1 + 4336));
      *(unsigned char *)(a1 + 4320) = 0;
    }
  }
}

void **sub_1000CC27C(void **a1)
{
  uint64_t v2 = (char *)*a1;
  if (*a1)
  {
    uint64_t v3 = (char *)a1[1];
    uint64_t v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        uint64_t v5 = v3 - 1200;
        sub_1000C99C4((cnframework::TimestampedEvent *)(v3 - 1192));
        uint64_t v3 = v5;
      }
      while (v5 != v2);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

BOOL sub_1000CC2E4(uint64_t a1)
{
  return *(_DWORD *)(*(void *)(a1 + 4304) + 32) == 2;
}

void sub_1000CC2F8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (!(*(unsigned int (**)(uint64_t))(*(void *)a1 + 256))(a1))
  {
    *(unsigned char *)a2 = 0;
    return;
  }
  if (!*(unsigned char *)(a1 + 4320)) {
    sub_1000D0F84((unsigned __int8 *)(a1 + 4320), *(void *)(*(void *)(a1 + 4304) + 8));
  }
  uint64_t v6 = *(void *)(*(void *)(a1 + 4304) + 16);
  sub_1000CAC04(a1 + 4336, v6 - 1192, 0, (uint64_t)v31);
  char v7 = v31[0];
  if (v31[0])
  {
    uint64_t v8 = (unsigned char *)(a1 + 5528);
    uint64_t v9 = v32;
    uint64_t v10 = v33;
    if (v34)
    {
      double v11 = v35;
      double v12 = v36;
      BOOL v13 = *v8 == 0;
      if (!*v8)
      {
        int v24 = *v8;
        *(double *)(a1 + 5536) = v35;
        *(double *)(a1 + 5544) = v12;
        if (v24) {
          goto LABEL_23;
        }
        goto LABEL_22;
      }
      double v14 = v35 - *(double *)(a1 + 5536);
      if (v14 >= 0.0) {
        double v15 = v35 - *(double *)(a1 + 5536);
      }
      else {
        double v15 = v14 + 6.28318531;
      }
      double v16 = *(double *)(a1 + 4448) + (double)*(uint64_t *)(a1 + 4440);
      double v17 = *(double *)(v6 - 1080) + (double)*(uint64_t *)(v6 - 1088);
      double v18 = vabdd_f64(v16, v17);
      if (v18 < 2.22044605e-16)
      {
        sub_1000AE4B0(__p, "");
        sub_1000D29B4("VIO-inferred speed is applicable but the interval is zero; something must be wrong!", &buf);
        sub_10016A2C4((uint64_t)__p, (uint64_t)&buf, 1);
        if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(buf.__r_.__value_.__l.__data_);
        }
        if (v30 < 0) {
          operator delete(__p[0]);
        }
        sub_1000D11E0((uint64_t)&v28);
      }
      double v19 = v16 - v17;
      double v20 = v36 + *(double *)(a1 + 5544);
      double v21 = v19 * v19;
      if (qword_10047BED8 != -1) {
        dispatch_once(&qword_10047BED8, &stru_100453668);
      }
      double v3 = v15 / v18;
      uint64_t v22 = qword_10047BEE0;
      double v2 = v20 / v21;
      if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG))
      {
        LODWORD(buf.__r_.__value_.__l.__data_) = 134349312;
        *(double *)((char *)buf.__r_.__value_.__r.__words + 4) = v3;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 2050;
        *(double *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v20 / v21;
        _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEBUG, "VIO inferred angular velocity, mean, %{public}f, var, %{public}f", (uint8_t *)&buf, 0x16u);
      }
      int v23 = *v8;
      *(double *)(a1 + 5536) = v11;
      *(double *)(a1 + 5544) = v12;
      if (!v23) {
LABEL_22:
      }
        unsigned char *v8 = 1;
    }
    else
    {
      if (*v8) {
        unsigned char *v8 = 0;
      }
      BOOL v13 = 1;
    }
LABEL_23:
    sub_1000D0F84((unsigned __int8 *)(a1 + 4320), *(void *)(*(void *)(a1 + 4304) + 16) - 1200);
    uint64_t v25 = *(unsigned __int8 *)(a1 + 16);
    if (v13)
    {
      uint64_t v26 = 0;
    }
    else
    {
      uint64_t v26 = *(unsigned __int8 *)(a1 + 17);
      if (*(unsigned char *)(a1 + 18))
      {
        uint64_t v27 = 1;
LABEL_28:
        *(void *)(a2 + 8) = v9;
        *(void *)(a2 + 16) = v25;
        *(void *)(a2 + 24) = v10;
        *(void *)(a2 + 32) = v26;
        *(double *)(a2 + 40) = v3;
        *(void *)(a2 + 48) = v27;
        char v7 = 1;
        *(double *)(a2 + 56) = v2;
        goto LABEL_29;
      }
    }
    uint64_t v27 = 0;
    goto LABEL_28;
  }
LABEL_29:
  *(unsigned char *)a2 = v7;
}

void sub_1000CC628(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000CC66C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (std::mutex *)(a1 + 7864);
  std::mutex::lock((std::mutex *)(a1 + 7864));
  uint64_t v5 = *(char **)(a1 + 7928);
  uint64_t v6 = *(char **)(a1 + 7936);
  if (v5 != v6)
  {
    while (*(void *)v5 != a2)
    {
      v5 += 8;
      if (v5 == v6)
      {
        uint64_t v5 = *(char **)(a1 + 7936);
        break;
      }
    }
  }
  if (v5 != v6)
  {
    int64_t v7 = v6 - (v5 + 8);
    if (v6 != v5 + 8) {
      memmove(v5, v5 + 8, v6 - (v5 + 8));
    }
    *(void *)(a1 + 7936) = &v5[v7];
  }

  std::mutex::unlock(v4);
}

void sub_1000CC778()
{
  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x48uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003E6DC0;
  strcpy(v1.__r_.__value_.__l.__data_, "Not implemented. You shouldn't be misusing your LocalizerInputEvents.");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_100453630;
  sub_10018E868((uint64_t)v0);
  sub_1000CC8F4(&v2, (uint64_t)"static void LocalizerInputEventReceiver::unimplemented()", (uint64_t)"../../../common/localize/localizer_input_event_receiver.h", 211, (uint64_t)v0);
}

void sub_1000CC854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void sub_1000CC8BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x1000CC8ACLL);
}

void sub_1000CC8E0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000CC8F4(std::runtime_error *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  std::runtime_error::runtime_error(&v12, a1);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  int v17 = -1;
  v12.__vftable = (std::runtime_error_vtbl *)off_1004535E8;
  BOOL v13 = off_100453610;
  sub_1000CEB88((uint64_t)&v18, (uint64_t)&v12);
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  int v21 = a4;
  uint64_t v9 = *(const void **)a5;
  size_t v10 = *(void *)(a5 + 8) - *(void *)a5;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0) {
      sub_1000A9108();
    }
    std::string __p = operator new(v10);
    memcpy(__p, v9, v10);
  }
  sub_1000CCEDC();
}

void sub_1000CCC00(void *a1)
{
  std::runtime_error::~runtime_error(v1);
  sub_1000A6954(a1);
}

void sub_1000CCC14(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    operator delete(__p);
    sub_1000A6954(a1);
  }
  sub_1000A6954(a1);
}

void sub_1000CCC3C(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

uint64_t sub_1000CCCCC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2)->__vftable = (std::runtime_error_vtbl *)&off_100453630;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = off_100453548;
  *(void *)(a1 + 16) = off_100453580;
  *(void *)(a1 + 56) = &off_1004535B8;
  return a1;
}

void sub_1000CCDEC(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void *sub_1000CCE00(void *a1)
{
  *a1 = off_1004533E8;
  std::runtime_error v2 = (void *)a1[1];
  if (v2)
  {
    a1[2] = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_1000CCE50(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_1000CCEDC()
{
}

void sub_1000CD178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CD2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1000CD18C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_1000CD2E0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_1000CD1A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000CD238(uint64_t a1)
{
  std::runtime_error v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

uint64_t sub_1000CD2E0(uint64_t a1)
{
  std::runtime_error v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_1000CD38C()
{
}

void sub_1000CD440()
{
  std::runtime_error v2 = *v1;
  if (*v1)
  {
    *(void *)(v0 + 16) = v2;
    operator delete(v2);
  }
  operator delete();
}

void sub_1000CD474(void *a1)
{
  *a1 = off_1004533E8;
  std::runtime_error v2 = (void *)a1[1];
  if (v2)
  {
    a1[2] = v2;
    operator delete(v2);
  }

  operator delete();
}

void sub_1000CD4E4(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  sub_1000CD728((const char *)((unint64_t)"PN10purpleslam13tag_backtraceE" & 0x7FFFFFFFFFFFFFFFLL), &v13);
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)&v13;
  }
  else {
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)v13.__r_.__value_.__r.__words[0];
  }
  std::string::insert(&v13, v4, 91);
  std::string v14 = v13;
  memset(&v13, 0, sizeof(v13));
  long long v5 = std::string::append(&v14, "] = ");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v15.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v15.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  sub_1000CD824(a1 + 8);
  if ((v12 & 0x80u) == 0) {
    int64_t v7 = __p;
  }
  else {
    int64_t v7 = (void **)__p[0];
  }
  if ((v12 & 0x80u) == 0) {
    std::string::size_type v8 = v12;
  }
  else {
    std::string::size_type v8 = (std::string::size_type)__p[1];
  }
  uint64_t v9 = std::string::append(&v15, (const std::string::value_type *)v7, v8);
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v16.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v16.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  std::string::push_back(&v16, 10);
  *a2 = v16;
  memset(&v16, 0, sizeof(v16));
  if ((char)v12 < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_17;
    }
  }
  else if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v15.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_13:
    if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_18:
    operator delete(v13.__r_.__value_.__l.__data_);
    return;
  }
LABEL_17:
  operator delete(v14.__r_.__value_.__l.__data_);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_18;
  }
}

void sub_1000CD664(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0)
  {
    operator delete(*(void **)(v33 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a33 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_6:
  }
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

void sub_1000CD728(const char *a1@<X0>, void *a2@<X8>)
{
  int status = 0;
  size_t v12 = 0;
  std::string::const_iterator v4 = __cxa_demangle(a1, 0, &v12, &status);
  long long v5 = v4;
  if (v4) {
    long long v6 = v4;
  }
  else {
    long long v6 = a1;
  }
  size_t v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  size_t v8 = v7;
  if (v7 >= 0x17)
  {
    uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v9 = v7 | 7;
    }
    uint64_t v10 = v9 + 1;
    double v11 = operator new(v9 + 1);
    a2[1] = v8;
    a2[2] = v10 | 0x8000000000000000;
    *a2 = v11;
    a2 = v11;
  }
  else
  {
    *((unsigned char *)a2 + 23) = v7;
    if (!v7) {
      goto LABEL_12;
    }
  }
  memmove(a2, v6, v8);
LABEL_12:
  *((unsigned char *)a2 + v8) = 0;
  free(v5);
}

void sub_1000CD810(_Unwind_Exception *a1)
{
  free(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000CD824(uint64_t a1)
{
  sub_1000CD96C((uint64_t)v3);
  sub_10018E894(v3, a1);
  std::stringbuf::str();
  if (v4 < 0) {
    operator delete((void *)v3[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_1000CD958(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000CD96C(uint64_t a1)
{
  *(void *)a1 = v3;
  *(void *)(a1 + *(void *)(v3 - 24)) = v2;
  char v4 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v4, (void *)(a1 + 8));
  v4[1].__vftable = 0;
  v4[1].__fmtflags_ = -1;
  std::streambuf::basic_streambuf();
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_DWORD *)(a1 + 104) = 16;
  return a1;
}

void sub_1000CDADC(_Unwind_Exception *a1)
{
}

void sub_1000CDAFC(_Unwind_Exception *a1)
{
}

uint64_t sub_1000CDB10(uint64_t a1)
{
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  std::ios::~ios();
  return a1;
}

void sub_1000CDC14()
{
}

void sub_1000CDD00(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    sub_1003A3598(v1);
  }
  __cxa_rethrow();
}

void sub_1000CDD18(_Unwind_Exception *a1)
{
}

void sub_1000CDD30()
{
}

uint64_t sub_1000CDD44(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 24))();
  }
  return result;
}

uint64_t sub_1000CDD74()
{
  return 0;
}

uint64_t sub_1000CDD7C()
{
  return 0;
}

uint64_t sub_1000CDD84()
{
  return 0;
}

uint64_t sub_1000CDD8C(uint64_t a1, const char *a2)
{
  if (a2)
  {
    sub_1000CD96C((uint64_t)v16);
    size_t v4 = strlen(a2);
    sub_10002986C(v16, (uint64_t)a2, v4);
    long long v5 = *(void **)(a1 + 8);
    if (v5 != (void *)(a1 + 16))
    {
      do
      {
        (**(void (***)(void **__return_ptr))v5[5])(__p);
        if (v15 >= 0) {
          long long v6 = __p;
        }
        else {
          long long v6 = (void **)__p[0];
        }
        if (v15 >= 0) {
          uint64_t v7 = HIBYTE(v15);
        }
        else {
          uint64_t v7 = (uint64_t)__p[1];
        }
        sub_10002986C(v16, (uint64_t)v6, v7);
        if (SHIBYTE(v15) < 0)
        {
          operator delete(__p[0]);
          size_t v8 = (void *)v5[1];
          if (v8)
          {
            do
            {
LABEL_15:
              uint64_t v9 = v8;
              size_t v8 = (void *)*v8;
            }
            while (v8);
            goto LABEL_4;
          }
        }
        else
        {
          size_t v8 = (void *)v5[1];
          if (v8) {
            goto LABEL_15;
          }
        }
        do
        {
          uint64_t v9 = (void *)v5[2];
          BOOL v10 = *v9 == (void)v5;
          long long v5 = v9;
        }
        while (!v10);
LABEL_4:
        long long v5 = v9;
      }
      while (v9 != (void *)(a1 + 16));
    }
    std::stringbuf::str();
    uint64_t v11 = v15;
    long long v12 = *(_OWORD *)__p;
    *(_OWORD *)std::string __p = *(_OWORD *)(a1 + 32);
    uint64_t v15 = *(void *)(a1 + 48);
    *(_OWORD *)(a1 + 32) = v12;
    *(void *)(a1 + 48) = v11;
    if (SHIBYTE(v15) < 0) {
      operator delete(__p[0]);
    }
    if (v17 < 0) {
      operator delete((void *)v16[9]);
    }
    std::streambuf::~streambuf();
    std::ostream::~ostream();
    std::ios::~ios();
  }
  uint64_t result = a1 + 32;
  if (*(char *)(a1 + 55) < 0) {
    return *(void *)result;
  }
  return result;
}

void sub_1000CDFEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
}

uint64_t sub_1000CE02C@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  size_t v4 = (void *)(result + 16);
  long long v5 = *(void **)(result + 16);
  if (!v5) {
    goto LABEL_15;
  }
  uint64_t v6 = *a2;
  uint64_t v7 = (void *)(result + 16);
  do
  {
    while (1)
    {
      uint64_t v8 = v5[4];
      if (v8 != v6) {
        break;
      }
      uint64_t v7 = v5;
      long long v5 = (void *)*v5;
      if (!v5) {
        goto LABEL_9;
      }
    }
    uint64_t result = strcmp((const char *)(*(void *)(v8 + 8) & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(v6 + 8) & 0x7FFFFFFFFFFFFFFFLL));
    if ((int)result < 0) {
      ++v5;
    }
    else {
      uint64_t v7 = v5;
    }
    long long v5 = (void *)*v5;
  }
  while (v5);
LABEL_9:
  if (v7 == v4
    || (uint64_t v9 = v7[4], v6 != v9)
    && (uint64_t result = strcmp((const char *)(*(void *)(v6 + 8) & 0x7FFFFFFFFFFFFFFFLL), (const char *)(*(void *)(v9 + 8) & 0x7FFFFFFFFFFFFFFFLL)), (result & 0x80000000) != 0))
  {
LABEL_15:
    *a3 = 0;
    a3[1] = 0;
  }
  else
  {
    uint64_t v10 = v7[6];
    *a3 = v7[5];
    a3[1] = v10;
    if (v10) {
      atomic_fetch_add_explicit((atomic_uint *volatile)(v10 + 8), 1u, memory_order_relaxed);
    }
  }
  return result;
}

uint64_t *sub_1000CE114(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v9 = a3;
  uint64_t result = sub_1000CE5E0((uint64_t **)(a1 + 8), (uint64_t **)a3, (uint64_t)&unk_1003FAE80, &v9);
  uint64_t v7 = *a2;
  uint64_t v6 = a2[1];
  if (v6) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v6 + 8), 1u, memory_order_relaxed);
  }
  uint64_t v8 = (atomic_uint *)result[6];
  result[5] = v7;
  result[6] = v6;
  if (v8)
  {
    if (atomic_fetch_add(v8 + 2, 0xFFFFFFFF) == 1)
    {
      uint64_t result = (uint64_t *)(*(uint64_t (**)(atomic_uint *))(*(void *)v8 + 16))(v8);
      if (atomic_fetch_add(v8 + 3, 0xFFFFFFFF) == 1) {
        uint64_t result = (uint64_t *)(*(uint64_t (**)(atomic_uint *))(*(void *)v8 + 24))(v8);
      }
    }
  }
  if (*(char *)(a1 + 55) < 0)
  {
    **(unsigned char **)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  else
  {
    *(unsigned char *)(a1 + 32) = 0;
    *(unsigned char *)(a1 + 55) = 0;
  }
  return result;
}

uint64_t sub_1000CE22C(uint64_t result)
{
  return result;
}

BOOL sub_1000CE23C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 56) - 1;
  *(_DWORD *)(a1 + ++*(_DWORD *)(result + 56) = v1;
  if (a1 && !v1)
  {
    if (*(char *)(a1 + 55) < 0) {
      operator delete(*(void **)(a1 + 32));
    }
    sub_1000CE730(a1 + 8, *(void **)(a1 + 16));
    operator delete();
  }
  return v1 == 0;
}

void sub_1000CE2AC(void *a1@<X8>)
{
  *a1 = 0;
  operator new();
}

void sub_1000CE500(_Unwind_Exception *a1)
{
  sub_1000A7778(v1);
  _Unwind_Resume(a1);
}

void sub_1000CE51C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_1000CE810((uint64_t)va);
  sub_1000CD238((uint64_t)va1);
  sub_1000A7778(v2);
  _Unwind_Resume(a1);
}

void sub_1000CE540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  sub_1000A7778(v14);
  _Unwind_Resume(a1);
}

uint64_t *sub_1000CE5E0(uint64_t **a1, uint64_t **a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v7 = a1 + 1;
  uint64_t v6 = (uint64_t **)a1[1];
  if (v6)
  {
    uint64_t v8 = *a2;
    uint64_t v9 = v6[4];
    if (*a2 == v9)
    {
      return (uint64_t *)v6;
    }
    else
    {
      uint64_t v10 = (const char *)(v8[1] & 0x7FFFFFFFFFFFFFFFLL);
      do
      {
        long long v12 = (const char *)(v9[1] & 0x7FFFFFFFFFFFFFFFLL);
        if (strcmp(v10, v12) < 0)
        {
          uint64_t v11 = *v6;
          uint64_t v7 = v6;
          if (!*v6) {
            goto LABEL_11;
          }
        }
        else
        {
          if ((strcmp(v12, v10) & 0x80000000) == 0) {
            return (uint64_t *)v6;
          }
          uint64_t v11 = v6[1];
          if (!v11)
          {
            uint64_t v7 = v6 + 1;
            goto LABEL_11;
          }
        }
        uint64_t v9 = (uint64_t *)v11[4];
        uint64_t v6 = (uint64_t **)v11;
      }
      while (v8 != v9);
      return v11;
    }
  }
  else
  {
    uint64_t v6 = a1 + 1;
LABEL_11:
    std::string v13 = v6;
    std::string v14 = (uint64_t *)operator new(0x38uLL);
    unsigned char v14[4] = **a4;
    v14[5] = 0;
    v14[6] = 0;
    *std::string v14 = 0;
    v14[1] = 0;
    unsigned char v14[2] = (uint64_t)v13;
    void *v7 = v14;
    uint64_t v15 = (uint64_t *)**a1;
    std::string v16 = v14;
    if (v15)
    {
      *a1 = v15;
      std::string v16 = *v7;
    }
    sub_1000619B8(a1[1], v16);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
    return v14;
  }
}

void sub_1000CE730(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1000CE730(a1, *a2);
    sub_1000CE730(a1, a2[1]);
    uint64_t v4 = (atomic_uint *)a2[6];
    if (v4)
    {
      if (atomic_fetch_add(v4 + 2, 0xFFFFFFFF) == 1)
      {
        (*(void (**)(atomic_uint *))(*(void *)v4 + 16))(v4);
        if (atomic_fetch_add(v4 + 3, 0xFFFFFFFF) == 1) {
          (*(void (**)(atomic_uint *))(*(void *)v4 + 24))(v4);
        }
      }
    }
    operator delete(a2);
  }
}

uint64_t sub_1000CE810(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 16);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_1000CE8B8()
{
}

void sub_1000CE9A4(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    sub_1003A3598(v1);
  }
  __cxa_rethrow();
}

void sub_1000CE9BC(_Unwind_Exception *a1)
{
}

void sub_1000CE9D4()
{
}

uint64_t sub_1000CE9E8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 24))();
  }
  return result;
}

uint64_t sub_1000CEA18()
{
  return 0;
}

uint64_t sub_1000CEA20()
{
  return 0;
}

uint64_t sub_1000CEA28()
{
  return 0;
}

uint64_t *sub_1000CEA30(uint64_t **a1, uint64_t **a2, uint64_t a3)
{
  uint64_t v6 = a1 + 1;
  long long v5 = (uint64_t **)a1[1];
  if (v5)
  {
    uint64_t v7 = *a2;
    uint64_t v8 = v5[4];
    if (*a2 == v8)
    {
      return (uint64_t *)v5;
    }
    else
    {
      uint64_t v9 = (const char *)(v7[1] & 0x7FFFFFFFFFFFFFFFLL);
      do
      {
        uint64_t v11 = (const char *)(v8[1] & 0x7FFFFFFFFFFFFFFFLL);
        if (strcmp(v9, v11) < 0)
        {
          uint64_t v10 = *v5;
          uint64_t v6 = v5;
          if (!*v5) {
            goto LABEL_11;
          }
        }
        else
        {
          if ((strcmp(v11, v9) & 0x80000000) == 0) {
            return (uint64_t *)v5;
          }
          uint64_t v10 = v5[1];
          if (!v10)
          {
            uint64_t v6 = v5 + 1;
            goto LABEL_11;
          }
        }
        uint64_t v8 = (uint64_t *)v10[4];
        long long v5 = (uint64_t **)v10;
      }
      while (v7 != v8);
      return v10;
    }
  }
  else
  {
    long long v5 = a1 + 1;
LABEL_11:
    long long v12 = v5;
    std::string v13 = (char *)operator new(0x38uLL);
    *((void *)v13 + 4) = *(void *)a3;
    *(_OWORD *)(v13 + 40) = *(_OWORD *)(a3 + 8);
    *(_OWORD *)(a3 + 8) = 0u;
    *(_OWORD *)std::string v13 = 0u;
    *((void *)v13 + 2) = v12;
    const char *v6 = (uint64_t *)v13;
    std::string v14 = (uint64_t *)**a1;
    uint64_t v15 = (uint64_t *)v13;
    if (v14)
    {
      *a1 = v14;
      uint64_t v15 = *v6;
    }
    sub_1000619B8(a1[1], v15);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
    return (uint64_t *)v13;
  }
}

uint64_t sub_1000CEB88(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4->__vftable = (std::runtime_error_vtbl *)&off_100453630;
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_100453548;
  *(void *)(a1 + 16) = off_100453580;
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = &off_1004535B8;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_1000CECB4(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_1000CECC8(_Unwind_Exception *a1)
{
  sub_1000CECDC(v1);
  _Unwind_Resume(a1);
}

void sub_1000CECDC(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_1000CED68(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_1000CEE08()
{
}

void sub_1000CEE64()
{
}

void sub_1000CEE88(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_1000CCCCC((uint64_t)exception, a1);
}

void sub_1000CEED0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000CEEE4(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_1000CEF6C(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

void sub_1000CF008()
{
}

void sub_1000CF078()
{
}

void sub_1000CF09C(void *a1)
{
  uint64_t v1 = (uint64_t)a1 + *(void *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x40uLL);
  sub_1000CCCCC((uint64_t)exception, v1);
}

void sub_1000CF0F8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000CF10C(void *a1)
{
  uint64_t v1 = (std::runtime_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(v1);
}

void sub_1000CF1AC(void *a1)
{
  uint64_t v1 = (std::runtime_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(v1);

  operator delete();
}

void sub_1000CF260(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_1000CF300(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_1000CF388(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

void sub_1000CF424(std::runtime_error *a1)
{
  std::runtime_error::~runtime_error(a1);

  operator delete();
}

uint64_t sub_1000CF45C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4->__vftable = (std::runtime_error_vtbl *)&off_100453630;
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_100453548;
  *(void *)(a1 + 16) = off_100453580;
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = &off_1004535B8;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_1000CF588(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_1000CF59C(_Unwind_Exception *a1)
{
  sub_1000CECDC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000CF5B0(uint64_t a1)
{
  *(void *)(a1 + 4128) = off_100452B48;
  *(void *)(a1 + 4064) = off_100452B48;
  *(void *)(a1 + 4000) = off_100452B48;
  *(void *)(a1 + 3880) = off_100452B48;
  *(void *)(a1 + 3768) = off_100452B48;
  *(void *)(a1 + 36++*(_DWORD *)(result + 56) = off_100452B48;
  *(void *)(a1 + 3592) = off_100452B48;
  *(void *)(a1 + 3440) = off_100452B48;
  *(void *)(a1 + 3328) = off_100452B48;
  *(void *)(a1 + 3216) = off_100452B48;
  *(void *)(a1 + 3152) = off_100452B48;
  *(void *)(a1 + 3000) = off_100452B48;
  *(void *)(a1 + 2888) = off_100452B48;
  *(void *)(a1 + 2776) = off_100452B48;
  *(void *)(a1 + 2712) = off_100452B48;
  *(void *)(a1 + 2560) = off_100452B48;
  *(void *)(a1 + 2448) = off_100452B48;
  *(void *)(a1 + 2336) = off_100452B48;
  *(void *)(a1 + 2272) = off_100452B48;
  if (*(unsigned char *)(a1 + 2232))
  {
    *(void *)(a1 + 2104) = off_100452B48;
    *(void *)(a1 + 1992) = off_100452B48;
    *(void *)(a1 + 1880) = off_100452B48;
    *(void *)(a1 + 1816) = off_100452B48;
    *(void *)(a1 + 1664) = off_100452B48;
    *(void *)(a1 + 1552) = off_100452B48;
    *(void *)(a1 + 1440) = off_100452B48;
    *(void *)(a1 + 1376) = off_100452B48;
  }
  if (*(unsigned char *)(a1 + 1136)) {
    sub_1000C9C38((cnframework::TimestampedEvent *)(a1 + 32));
  }
  return a1;
}

uint64_t sub_1000CF950(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)a1, 0, 0.0);
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 24) = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)(a1 + 24), 0, 0.0);
  *(unsigned char *)(a1 + 40) = 0;
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = 0;
  *(void *)(a1 + 48) = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)(a1 + 48), 0, 0.0);
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 72) = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)(a1 + 72), 0, 0.0);
  *(void *)(a1 + 88) = 0x7FF8000000000000;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 96) = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)(a1 + 96), 0, 0.0);
  *(unsigned char *)(a1 + 112) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 120) = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)(a1 + 120), 0, 0.0);
  *(unsigned char *)(a1 + 136) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 144) = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)(a1 + 144), 0, 0.0);
  *(void *)(a1 + 168) = 0;
  *(unsigned char *)(a1 + 160) = 0;
  *(void *)(a1 + 176) = 0;
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)(a1 + 168), 0, 0.0);
  *(void *)(a1 + 184) = 0x7FF8000000000000;
  *(unsigned char *)(a1 + 192) = 0;
  cntransformation::CNRigidTransformation::CNRigidTransformation((cntransformation::CNRigidTransformation *)(a1 + 200));
  cntransformation::CNRigidTransformation::CNRigidTransformation((cntransformation::CNRigidTransformation *)(a1 + 640));
  *(_WORD *)(a1 + 1080) = 0;
  *(unsigned char *)(a1 + 1082) = 0;
  return a1;
}

void sub_1000CFA78(_Unwind_Exception *a1)
{
  v1[65] = off_100452B48;
  v1[51] = off_100452B48;
  v1[37] = off_100452B48;
  v1[29] = off_100452B48;
  _Unwind_Resume(a1);
}

void sub_1000CFAFC(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

__n128 sub_1000CFB2C(cnrotation::CNRotation *a1, uint64_t a2)
{
  uint64_t v3 = cnrotation::CNRotation::CNRotation(a1, (const cnrotation::CNRotation *)a2);
  *(void *)(v3 + ++*(_DWORD *)(result + 56) = 0x100000003;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = 0;
  *(void *)(v3 + 32) = off_100452C18;
  int v6 = *(_DWORD *)(a2 + 40);
  int v5 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(v3 + 40) = v6;
  *(_DWORD *)(v3 + 44) = v5;
  uint64_t v7 = (v5 * v6);
  *(_DWORD *)(v3 + 48) = v7;
  *(_DWORD *)(v3 + 52) = v6;
  *(void *)(v3 + 64) = v3 + 72;
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8 > 3)
  {
    std::string v16 = *(long long **)(a2 + 64);
    uint64_t v17 = (v8 - 1) >> 1;
    std::runtime_error v18 = v16;
    uint64_t v19 = (_OWORD *)(v3 + 72);
    do
    {
      long long v20 = *v18++;
      *v19++ = v20;
      --v17;
    }
    while (v17);
    *(_OWORD *)(v3 + 72 + 8 * (v8 - 2)) = *(long long *)((char *)v16 + 8 * (v8 - 2));
  }
  else
  {
    if ((int)v7 < 1) {
      goto LABEL_12;
    }
    uint64_t v9 = *(void *)(a2 + 64);
    if (v7 < 6 || (unint64_t)(v3 - v9 + 72) < 0x20)
    {
      uint64_t v10 = 0;
LABEL_6:
      uint64_t v11 = v7 - v10;
      uint64_t v12 = 8 * v10;
      std::string v13 = (void *)(8 * v10 + v3 + 72);
      std::string v14 = (uint64_t *)(v9 + v12);
      do
      {
        uint64_t v15 = *v14++;
        *v13++ = v15;
        --v11;
      }
      while (v11);
      goto LABEL_12;
    }
    uint64_t v10 = v7 & 0x7FFFFFFC;
    double v71 = (long long *)(v9 + 16);
    uint64_t v72 = (_OWORD *)(v3 + 88);
    uint64_t v73 = v7 & 0xFFFFFFFC;
    do
    {
      long long v74 = *v71;
      *(v72 - 1) = *(v71 - 1);
      _OWORD *v72 = v74;
      v71 += 2;
      v72 += 2;
      v73 -= 4;
    }
    while (v73);
    if (v10 != v7) {
      goto LABEL_6;
    }
  }
LABEL_12:
  *(void *)(v3 + 120) = 0x300000003;
  *(void *)(v3 + 104) = 0;
  *(void *)(v3 + 112) = 0;
  *(void *)(v3 + 96) = off_100452AF0;
  int v22 = *(_DWORD *)(a2 + 104);
  int v21 = *(_DWORD *)(a2 + 108);
  *(_DWORD *)(v3 + 104) = v22;
  *(_DWORD *)(v3 + 108) = v21;
  uint64_t v23 = (v21 * v22);
  *(_DWORD *)(v3 + 112) = v23;
  *(_DWORD *)(v3 + 116) = v22;
  *(void *)(v3 + 128) = v3 + 136;
  int v24 = *(_DWORD *)(a2 + 112);
  if (v24 > 3)
  {
    uint64_t v32 = *(long long **)(a2 + 128);
    uint64_t v33 = (v24 - 1) >> 1;
    char v34 = v32;
    double v35 = (_OWORD *)(v3 + 136);
    do
    {
      long long v36 = *v34++;
      *v35++ = v36;
      --v33;
    }
    while (v33);
    *(_OWORD *)(v3 + 136 + 8 * (v24 - 2)) = *(long long *)((char *)v32 + 8 * (v24 - 2));
  }
  else
  {
    if ((int)v23 < 1) {
      goto LABEL_23;
    }
    uint64_t v25 = *(void *)(a2 + 128);
    if (v23 < 6 || (unint64_t)(v3 - v25 + 136) < 0x20)
    {
      uint64_t v26 = 0;
LABEL_17:
      uint64_t v27 = v23 - v26;
      uint64_t v28 = 8 * v26;
      long long v29 = (void *)(8 * v26 + v3 + 136);
      char v30 = (uint64_t *)(v25 + v28);
      do
      {
        uint64_t v31 = *v30++;
        *v29++ = v31;
        --v27;
      }
      while (v27);
      goto LABEL_23;
    }
    uint64_t v26 = v23 & 0x7FFFFFFC;
    unint64_t v75 = (long long *)(v25 + 16);
    double v76 = (_OWORD *)(v3 + 152);
    uint64_t v77 = v23 & 0xFFFFFFFC;
    do
    {
      long long v78 = *v75;
      *(v76 - 1) = *(v75 - 1);
      _OWORD *v76 = v78;
      v75 += 2;
      v76 += 2;
      v77 -= 4;
    }
    while (v77);
    if (v26 != v23) {
      goto LABEL_17;
    }
  }
LABEL_23:
  *(void *)(v3 + 232) = 0x300000003;
  *(void *)(v3 + 216) = 0;
  *(void *)(v3 + 224) = 0;
  *(void *)(v3 + 208) = off_100452AF0;
  int v38 = *(_DWORD *)(a2 + 216);
  int v37 = *(_DWORD *)(a2 + 220);
  *(_DWORD *)(v3 + 216) = v38;
  *(_DWORD *)(v3 + 220) = v37;
  uint64_t v39 = (v37 * v38);
  *(_DWORD *)(v3 + 224) = v39;
  *(_DWORD *)(v3 + 228) = v38;
  *(void *)(v3 + 240) = v3 + 248;
  int v40 = *(_DWORD *)(a2 + 224);
  if (v40 > 3)
  {
    unint64_t v48 = *(long long **)(a2 + 240);
    uint64_t v49 = (v40 - 1) >> 1;
    uint64_t v50 = v48;
    uint64_t v51 = (_OWORD *)(v3 + 248);
    do
    {
      long long v52 = *v50++;
      *v51++ = v52;
      --v49;
    }
    while (v49);
    *(_OWORD *)(v3 + 248 + 8 * (v40 - 2)) = *(long long *)((char *)v48 + 8 * (v40 - 2));
  }
  else
  {
    if ((int)v39 < 1) {
      goto LABEL_34;
    }
    uint64_t v41 = *(void *)(a2 + 240);
    if (v39 < 6 || (unint64_t)(v3 - v41 + 248) < 0x20)
    {
      uint64_t v42 = 0;
LABEL_28:
      uint64_t v43 = v39 - v42;
      uint64_t v44 = 8 * v42;
      uint64_t v45 = (void *)(8 * v42 + v3 + 248);
      uint64_t v46 = (uint64_t *)(v41 + v44);
      do
      {
        uint64_t v47 = *v46++;
        *v45++ = v47;
        --v43;
      }
      while (v43);
      goto LABEL_34;
    }
    uint64_t v42 = v39 & 0x7FFFFFFC;
    double v79 = (long long *)(v41 + 16);
    uint64_t v80 = v39 & 0xFFFFFFFC;
    double v81 = (_OWORD *)(v3 + 264);
    do
    {
      long long v82 = *v79;
      *(v81 - 1) = *(v79 - 1);
      *double v81 = v82;
      v79 += 2;
      v81 += 2;
      v80 -= 4;
    }
    while (v80);
    if (v42 != v39) {
      goto LABEL_28;
    }
  }
LABEL_34:
  result.n128_u64[0] = 0x300000003;
  *(void *)(v3 + 344) = 0x300000003;
  *(void *)(v3 + 328) = 0;
  *(void *)(v3 + 336) = 0;
  *(void *)(v3 + 320) = off_100452AF0;
  int v53 = *(_DWORD *)(a2 + 328);
  int v54 = *(_DWORD *)(a2 + 332);
  *(_DWORD *)(v3 + 328) = v53;
  *(_DWORD *)(v3 + 332) = v54;
  uint64_t v55 = (v54 * v53);
  *(_DWORD *)(v3 + 336) = v55;
  *(_DWORD *)(v3 + 340) = v53;
  uint64_t v56 = v3 + 360;
  *(void *)(v3 + 352) = v3 + 360;
  int v57 = *(_DWORD *)(a2 + 336);
  if (v57 <= 3)
  {
    if ((int)v55 >= 1)
    {
      int v58 = *(__n128 **)(a2 + 352);
      if (v55 >= 6 && (unint64_t)(v3 - (void)v58 + 360) >= 0x20)
      {
        uint64_t v59 = v55 & 0x7FFFFFFC;
        long long v83 = v58 + 1;
        uint64_t v84 = v55 & 0xFFFFFFFC;
        do
        {
          __n128 result = v83[-1];
          __n128 v85 = *v83;
          *(__n128 *)uint64_t v56 = result;
          *(__n128 *)(v56 + 16) = v85;
          v56 += 32;
          v83 += 2;
          v84 -= 4;
        }
        while (v84);
        if (v59 == v55) {
          goto LABEL_41;
        }
      }
      else
      {
        uint64_t v59 = 0;
      }
      uint64_t v60 = v55 - v59;
      uint64_t v61 = v59;
      long long v62 = (unint64_t *)(v61 * 8 + v3 + 360);
      long long v63 = &v58->n128_u64[v61];
      do
      {
        unint64_t v64 = *v63++;
        result.n128_u64[0] = v64;
        *v62++ = v64;
        --v60;
      }
      while (v60);
    }
LABEL_41:
    *(unsigned char *)(v3 + 432) = *(unsigned char *)(a2 + 432);
    return result;
  }
  int v65 = *(long long **)(a2 + 352);
  uint64_t v66 = (v57 - 1) >> 1;
  unint64_t v67 = v65;
  uint64_t v68 = (_OWORD *)(v3 + 360);
  do
  {
    long long v69 = *v67++;
    *v68++ = v69;
    --v66;
  }
  while (v66);
  uint64_t v70 = 8 * (v57 - 2);
  __n128 result = *(__n128 *)((char *)v65 + v70);
  *(__n128 *)(v56 + v70) = result;
  *(unsigned char *)(v3 + 432) = *(unsigned char *)(a2 + 432);
  return result;
}

void sub_1000CFF94(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100453698;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1000CFFB4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100453698;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_1000D0008(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (v1)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = *(void **)(a1 + 32);
    if (v3 != v1)
    {
      do
      {
        uint64_t v5 = v3 - 1200;
        sub_1000C99C4((cnframework::TimestampedEvent *)(v3 - 1192));
        uint64_t v3 = v5;
      }
      while (v5 != v1);
      uint64_t v4 = *(void **)(a1 + 32);
    }
    *(void *)(a1 + 40) = v1;
    operator delete(v4);
  }
}

void sub_1000D008C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16) - v3;
  if (v4 == 1200)
  {
    *(_DWORD *)(a1 + 32) = 1;
  }
  else
  {
    unint64_t v5 = a2;
    if (0x2FC962FC962FC963 * (v4 >> 4) <= a2)
    {
      uint64_t v6 = 0;
    }
    else
    {
      uint64_t v6 = 0;
      do
      {
        uint64_t v7 = v3 + 1200 * v5;
        long long v18 = *(_OWORD *)(v7 + 16);
        uint64_t v8 = sub_1000BE00C((void *)v7, (uint64_t)&v18);
        if (v6 != v5)
        {
          uint64_t v9 = v8;
          uint64_t v10 = 1200 * v6;
          while (1)
          {
            uint64_t v11 = *(void *)(a1 + 8) + v10;
            long long v18 = *(_OWORD *)(v11 + 16);
            if (*(void *)a1 >= v9 - sub_1000BE00C((void *)v11, (uint64_t)&v18)) {
              break;
            }
            ++v6;
            *(_DWORD *)(a1 + 32) = 2;
            v10 += 1200;
            if (v5 == v6) {
              goto LABEL_5;
            }
          }
        }
        if (v6 == v5)
        {
LABEL_5:
          *(_DWORD *)(a1 + 32) = 1;
          uint64_t v6 = v5;
        }
        ++v5;
        uint64_t v3 = *(void *)(a1 + 8);
      }
      while (v5 < 0x2FC962FC962FC963 * ((*(void *)(a1 + 16) - v3) >> 4));
    }
    sub_1000D0738(a1, v6, &__p);
    uint64_t v12 = (char *)__p;
    if (__p)
    {
      std::string v13 = v17;
      std::string v14 = __p;
      if (v17 != __p)
      {
        do
        {
          uint64_t v15 = v13 - 1200;
          sub_1000C99C4((cnframework::TimestampedEvent *)(v13 - 1192));
          std::string v13 = v15;
        }
        while (v15 != v12);
        std::string v14 = __p;
      }
      uint64_t v17 = v12;
      operator delete(v14);
    }
  }
}

uint64_t sub_1000D020C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = 0x2FC962FC962FC963 * ((a1[1] - *a1) >> 4);
  unint64_t v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) > 0x369D0369D0369DLL) {
    sub_1000A9108();
  }
  if (0x5F92C5F92C5F92C6 * ((a1[2] - *a1) >> 4) > v4) {
    unint64_t v4 = 0x5F92C5F92C5F92C6 * ((a1[2] - *a1) >> 4);
  }
  if ((unint64_t)(0x2FC962FC962FC963 * ((a1[2] - *a1) >> 4)) >= 0x1B4E81B4E81B4ELL) {
    unint64_t v6 = 0x369D0369D0369DLL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0x369D0369D0369DLL) {
      sub_1000A6A10();
    }
    uint64_t v7 = operator new(1200 * v6);
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v22 = (uint64_t)v7 + 1200 * v3;
  *(void *)uint64_t v22 = *(void *)a2;
  *(void *)(v22 + 8) = off_1004530D8;
  long long v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v22 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v22 + 64) = v8;
  long long v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v22 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v22 + 96) = v9;
  long long v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v22 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v22 + 32) = v10;
  long long v11 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(v22 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v22 + 160) = v11;
  long long v12 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v22 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v22 + 128) = v12;
  long long v13 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(v22 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(v22 + 224) = v13;
  long long v14 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(v22 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(v22 + 192) = v14;
  *(unsigned char *)(v22 + 304) = *(unsigned char *)(a2 + 304);
  long long v15 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(v22 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(v22 + 288) = v15;
  long long v16 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(v22 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(v22 + 2++*(_DWORD *)(result + 56) = v16;
  sub_1000CFB2C((cnrotation::CNRotation *)(v22 + 312), a2 + 312);
  sub_1000CFB2C((cnrotation::CNRotation *)(v22 + 752), a2 + 752);
  *(_WORD *)(v22 + 1192) = *(_WORD *)(a2 + 1192);
  *(unsigned char *)(v22 + 1194) = *(unsigned char *)(a2 + 1194);
  sub_1000D0540((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, v22, v22);
  long long v18 = (char *)*a1;
  uint64_t v17 = (char *)a1[1];
  *a1 = v19;
  a1[1] = v22 + 1200;
  a1[2] = (uint64_t)v7 + 1200 * v6;
  if (v17 != v18)
  {
    do
    {
      long long v20 = v17 - 1200;
      sub_1000C99C4((cnframework::TimestampedEvent *)(v17 - 1192));
      uint64_t v17 = v20;
    }
    while (v20 != v18);
  }
  if (v18) {
    operator delete(v18);
  }
  return (uint64_t)v7 + 1200 * v3 + 1200;
}

void sub_1000D0414(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000D04E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1000D0428(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  long long v14 = (void *)(v11 + 1200 * v12);
  v14[79] = off_100452B48;
  v14[65] = off_100452B48;
  v14[51] = off_100452B48;
  v14[43] = off_100452B48;
  cnframework::TimestampedEvent::~TimestampedEvent(v10);
  sub_1000D04E8((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_1000D04CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  cnframework::TimestampedEvent::~TimestampedEvent(v10);
  sub_1000D04E8((uint64_t)&a10);
  _Unwind_Resume(a1);
}

uint64_t sub_1000D04E8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 1200;
    sub_1000C99C4((cnframework::TimestampedEvent *)(i - 1192));
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_1000D0540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a3 != a5)
  {
    uint64_t v11 = 0;
    do
    {
      *(void *)(a7 + v11 - 1200) = *(void *)(a3 + v11 - 1200);
      *(void *)(a7 + v11 - 1192) = off_1004530D8;
      uint64_t v12 = (_OWORD *)(a7 + v11 - 1184);
      long long v13 = *(_OWORD *)(a3 + v11 - 1168);
      *uint64_t v12 = *(_OWORD *)(a3 + v11 - 1184);
      v12[1] = v13;
      long long v14 = *(_OWORD *)(a3 + v11 - 1152);
      long long v15 = *(_OWORD *)(a3 + v11 - 1136);
      long long v16 = *(_OWORD *)(a3 + v11 - 1104);
      v12[4] = *(_OWORD *)(a3 + v11 - 1120);
      v12[5] = v16;
      void v12[2] = v14;
      v12[3] = v15;
      uint64_t v17 = a7 + v11 - 1088;
      long long v18 = *(_OWORD *)(a3 + v11 - 1024);
      long long v20 = *(_OWORD *)(a3 + v11 - 1072);
      long long v19 = *(_OWORD *)(a3 + v11 - 1056);
      *(_OWORD *)(v17 + 48) = *(_OWORD *)(a3 + v11 - 1040);
      *(_OWORD *)(v17 + 64) = v18;
      *(_OWORD *)(v17 + 16) = v20;
      *(_OWORD *)(v17 + 32) = v19;
      long long v21 = *(_OWORD *)(a3 + v11 - 960);
      long long v23 = *(_OWORD *)(a3 + v11 - 1008);
      long long v22 = *(_OWORD *)(a3 + v11 - 992);
      *(_OWORD *)(v17 + 112) = *(_OWORD *)(a3 + v11 - 976);
      *(_OWORD *)(v17 + 128) = v21;
      *(_OWORD *)(v17 + 80) = v23;
      *(_OWORD *)(v17 + 96) = v22;
      long long v25 = *(_OWORD *)(a3 + v11 - 928);
      long long v24 = *(_OWORD *)(a3 + v11 - 912);
      long long v26 = *(_OWORD *)(a3 + v11 - 944);
      *(unsigned char *)(v17 + 192) = *(unsigned char *)(a3 + v11 - 896);
      *(_OWORD *)(v17 + 160) = v25;
      *(_OWORD *)(v17 + 176) = v24;
      *(_OWORD *)(v17 + 144) = v26;
      *(_OWORD *)uint64_t v17 = *(_OWORD *)(a3 + v11 - 1088);
      sub_1000CFB2C((cnrotation::CNRotation *)(a7 + v11 - 888), a3 + v11 - 888);
      sub_1000CFB2C((cnrotation::CNRotation *)(a7 + v11 - 448), a3 + v11 - 448);
      uint64_t v27 = a7 + v11;
      __int16 v28 = *(_WORD *)(a3 + v11 - 8);
      *(unsigned char *)(v27 - 6) = *(unsigned char *)(a3 + v11 - 6);
      *(_WORD *)(v27 - 8) = v28;
      v11 -= 1200;
    }
    while (a3 + v11 != a5);
  }
  return a6;
}

void sub_1000D067C(_Unwind_Exception *a1)
{
  *(void *)(v1 + v2 - 568) = off_100452B48;
  *(void *)(v1 + v2 - 680) = off_100452B48;
  *(void *)(v1 + v2 - 792) = off_100452B48;
  *(void *)(v1 + v2 - 8++*(_DWORD *)(result + 56) = off_100452B48;
  cnframework::TimestampedEvent::~TimestampedEvent((cnframework::TimestampedEvent *)(v1 + v2 - 1192));
  if (v2)
  {
    uint64_t v4 = v1 + 8;
    do
    {
      sub_1000C99C4((cnframework::TimestampedEvent *)(v4 + v2));
      v2 += 1200;
    }
    while (v2);
  }
  _Unwind_Resume(a1);
}

void sub_1000D0738(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  sub_1000D0884(a3, v5, v5 + 1200 * a2);
  if (a2)
  {
    uint64_t v6 = v5 + 1200 * a2;
    uint64_t v7 = *(void *)(a1 + 16);
    if (v6 != v7)
    {
      uint64_t v8 = 1200 * a2;
      do
      {
        *(void *)uint64_t v5 = *(void *)(v5 + v8);
        long long v9 = *(_OWORD *)(v5 + v8 + 32);
        *(_OWORD *)(v5 + 16) = *(_OWORD *)(v5 + v8 + 16);
        *(_OWORD *)(v5 + 32) = v9;
        long long v10 = *(_OWORD *)(v5 + v8 + 48);
        long long v11 = *(_OWORD *)(v5 + v8 + 64);
        long long v12 = *(_OWORD *)(v5 + v8 + 96);
        *(_OWORD *)(v5 + 80) = *(_OWORD *)(v5 + v8 + 80);
        *(_OWORD *)(v5 + 96) = v12;
        *(_OWORD *)(v5 + 48) = v10;
        *(_OWORD *)(v5 + 64) = v11;
        long long v13 = *(_OWORD *)(v5 + v8 + 176);
        long long v15 = *(_OWORD *)(v5 + v8 + 128);
        long long v14 = *(_OWORD *)(v5 + v8 + 144);
        *(_OWORD *)(v5 + 160) = *(_OWORD *)(v5 + v8 + 160);
        *(_OWORD *)(v5 + 176) = v13;
        *(_OWORD *)(v5 + 128) = v15;
        *(_OWORD *)(v5 + 144) = v14;
        long long v16 = *(_OWORD *)(v5 + v8 + 240);
        long long v18 = *(_OWORD *)(v5 + v8 + 192);
        long long v17 = *(_OWORD *)(v5 + v8 + 208);
        *(_OWORD *)(v5 + 224) = *(_OWORD *)(v5 + v8 + 224);
        *(_OWORD *)(v5 + 240) = v16;
        *(_OWORD *)(v5 + 192) = v18;
        *(_OWORD *)(v5 + 208) = v17;
        long long v19 = *(_OWORD *)(v5 + v8 + 256);
        long long v20 = *(_OWORD *)(v5 + v8 + 272);
        long long v21 = *(_OWORD *)(v5 + v8 + 288);
        *(unsigned char *)(v5 + 304) = *(unsigned char *)(v5 + v8 + 304);
        *(_OWORD *)(v5 + 272) = v20;
        *(_OWORD *)(v5 + 288) = v21;
        *(_OWORD *)(v5 + 2++*(_DWORD *)(result + 56) = v19;
        *(_OWORD *)(v5 + 112) = *(_OWORD *)(v5 + v8 + 112);
        sub_1000C6578(v5 + 312, v5 + v8 + 312);
        sub_1000C6578(v5 + 752, v5 + 752 + v8);
        __int16 v22 = *(_WORD *)(v5 + v8 + 1192);
        *(unsigned char *)(v5 + 1194) = *(unsigned char *)(v5 + v8 + 1194);
        *(_WORD *)(v5 + 1192) = v22;
        v5 += 1200;
      }
      while (v5 + v8 != v7);
      uint64_t v6 = *(void *)(a1 + 16);
    }
    if (v6 != v5)
    {
      do
      {
        uint64_t v23 = v6 - 1200;
        sub_1000C99C4((cnframework::TimestampedEvent *)(v6 - 1192));
        uint64_t v6 = v23;
      }
      while (v23 != v5);
    }
    *(void *)(a1 + 16) = v5;
  }
}

void sub_1000D0870(_Unwind_Exception *a1)
{
  sub_1000CC27C(v1);
  _Unwind_Resume(a1);
}

void *sub_1000D0884(void *a1, uint64_t a2, uint64_t a3)
{
  a1[2] = 0;
  uint64_t v4 = (uint64_t)(a1 + 2);
  *a1 = 0;
  a1[1] = 0;
  int64_t v5 = a3 - a2;
  if (a3 != a2)
  {
    unint64_t v6 = 0x2FC962FC962FC963 * (v5 >> 4);
    if (v6 >= 0x369D0369D0369ELL) {
      sub_1000A9108();
    }
    long long v9 = (char *)operator new(v5);
    *a1 = v9;
    a1[1] = v9;
    a1[2] = &v9[1200 * v6];
    a1[1] = sub_1000D096C(v4, a2, a3, (uint64_t)v9);
  }
  return a1;
}

void sub_1000D0940(_Unwind_Exception *exception_object)
{
  *(void *)(v1 + 8) = v2;
  if (*(void *)v1) {
    sub_1003A35BC((void **)(v1 + 8), *(char **)v1, (void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000D096C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = a4 + v7;
      uint64_t v9 = a2 + v7;
      *(void *)uint64_t v8 = *(void *)(a2 + v7);
      *(void *)(v8 + 8) = off_1004530D8;
      long long v10 = *(_OWORD *)(a2 + v7 + 32);
      *(_OWORD *)(v8 + 16) = *(_OWORD *)(a2 + v7 + 16);
      *(_OWORD *)(v8 + 32) = v10;
      long long v11 = *(_OWORD *)(a2 + v7 + 48);
      long long v12 = *(_OWORD *)(a2 + v7 + 64);
      long long v13 = *(_OWORD *)(a2 + v7 + 96);
      *(_OWORD *)(v8 + 80) = *(_OWORD *)(a2 + v7 + 80);
      *(_OWORD *)(v8 + 96) = v13;
      *(_OWORD *)(v8 + 48) = v11;
      *(_OWORD *)(v8 + 64) = v12;
      long long v14 = *(_OWORD *)(a2 + v7 + 176);
      long long v16 = *(_OWORD *)(a2 + v7 + 128);
      long long v15 = *(_OWORD *)(a2 + v7 + 144);
      *(_OWORD *)(v8 + 160) = *(_OWORD *)(a2 + v7 + 160);
      *(_OWORD *)(v8 + 176) = v14;
      *(_OWORD *)(v8 + 128) = v16;
      *(_OWORD *)(v8 + 144) = v15;
      long long v17 = *(_OWORD *)(a2 + v7 + 240);
      long long v19 = *(_OWORD *)(a2 + v7 + 192);
      long long v18 = *(_OWORD *)(a2 + v7 + 208);
      *(_OWORD *)(v8 + 224) = *(_OWORD *)(a2 + v7 + 224);
      *(_OWORD *)(v8 + 240) = v17;
      *(_OWORD *)(v8 + 192) = v19;
      *(_OWORD *)(v8 + 208) = v18;
      long long v21 = *(_OWORD *)(a2 + v7 + 272);
      long long v20 = *(_OWORD *)(a2 + v7 + 288);
      long long v22 = *(_OWORD *)(a2 + v7 + 256);
      *(unsigned char *)(v8 + 304) = *(unsigned char *)(a2 + v7 + 304);
      *(_OWORD *)(v8 + 272) = v21;
      *(_OWORD *)(v8 + 288) = v20;
      *(_OWORD *)(v8 + 2++*(_DWORD *)(result + 56) = v22;
      *(_OWORD *)(v8 + 112) = *(_OWORD *)(a2 + v7 + 112);
      sub_1000CFB2C((cnrotation::CNRotation *)(a4 + v7 + 312), a2 + v7 + 312);
      sub_1000CFB2C((cnrotation::CNRotation *)(a4 + v7 + 752), a2 + v7 + 752);
      uint64_t v23 = a4 + v7;
      __int16 v24 = *(_WORD *)(a2 + v7 + 1192);
      *(unsigned char *)(v23 + 1194) = *(unsigned char *)(a2 + v7 + 1194);
      *(_WORD *)(v23 + 1192) = v24;
      v7 += 1200;
    }
    while (v9 + 1200 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_1000D0A78(_Unwind_Exception *a1)
{
  uint64_t v4 = (void *)(v1 + v2);
  v4[79] = off_100452B48;
  v4[65] = off_100452B48;
  v4[51] = off_100452B48;
  v4[43] = off_100452B48;
  cnframework::TimestampedEvent::~TimestampedEvent((cnframework::TimestampedEvent *)(v1 + v2 + 8));
  if (v2)
  {
    uint64_t v5 = v1 - 1192;
    do
    {
      sub_1000C99C4((cnframework::TimestampedEvent *)(v5 + v2));
      v2 -= 1200;
    }
    while (v2);
  }
  _Unwind_Resume(a1);
}

void sub_1000D0B34(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)a1)
  {
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 32) = v4;
    long long v5 = *(_OWORD *)(a2 + 40);
    long long v6 = *(_OWORD *)(a2 + 56);
    long long v7 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 96) = v7;
    *(_OWORD *)(a1 + 48) = v5;
    *(_OWORD *)(a1 + 64) = v6;
    long long v8 = *(_OWORD *)(a2 + 136);
    long long v9 = *(_OWORD *)(a2 + 168);
    long long v10 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 176) = v9;
    *(_OWORD *)(a1 + 128) = v10;
    *(_OWORD *)(a1 + 144) = v8;
    long long v11 = *(_OWORD *)(a2 + 200);
    long long v12 = *(_OWORD *)(a2 + 232);
    long long v13 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 240) = v12;
    *(_OWORD *)(a1 + 192) = v13;
    *(_OWORD *)(a1 + 208) = v11;
    long long v14 = *(_OWORD *)(a2 + 264);
    long long v15 = *(_OWORD *)(a2 + 280);
    long long v16 = *(_OWORD *)(a2 + 248);
    *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 296);
    *(_OWORD *)(a1 + 272) = v14;
    *(_OWORD *)(a1 + 288) = v15;
    *(_OWORD *)(a1 + 2++*(_DWORD *)(result + 56) = v16;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 104);
    sub_1000C6578(a1 + 312, a2 + 304);
    sub_1000C6578(a1 + 752, a2 + 744);
    char v17 = *(unsigned char *)(a2 + 1186);
    *(_WORD *)(a1 + 1192) = *(_WORD *)(a2 + 1184);
    *(unsigned char *)(a1 + 1194) = v17;
  }
  else
  {
    *(void *)(a1 + 8) = off_1004530D8;
    long long v18 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 32) = v18;
    long long v19 = *(_OWORD *)(a2 + 40);
    long long v20 = *(_OWORD *)(a2 + 56);
    long long v21 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 96) = v21;
    *(_OWORD *)(a1 + 48) = v19;
    *(_OWORD *)(a1 + 64) = v20;
    long long v22 = *(_OWORD *)(a2 + 136);
    long long v23 = *(_OWORD *)(a2 + 168);
    long long v24 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 176) = v23;
    *(_OWORD *)(a1 + 128) = v24;
    *(_OWORD *)(a1 + 144) = v22;
    long long v25 = *(_OWORD *)(a2 + 200);
    long long v26 = *(_OWORD *)(a2 + 232);
    long long v27 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 240) = v26;
    *(_OWORD *)(a1 + 192) = v27;
    *(_OWORD *)(a1 + 208) = v25;
    long long v28 = *(_OWORD *)(a2 + 264);
    long long v29 = *(_OWORD *)(a2 + 280);
    long long v30 = *(_OWORD *)(a2 + 248);
    *(unsigned char *)(a1 + 304) = *(unsigned char *)(a2 + 296);
    *(_OWORD *)(a1 + 272) = v28;
    *(_OWORD *)(a1 + 288) = v29;
    *(_OWORD *)(a1 + 2++*(_DWORD *)(result + 56) = v30;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 104);
    sub_1000CFB2C((cnrotation::CNRotation *)(a1 + 312), a2 + 304);
    sub_1000CFB2C((cnrotation::CNRotation *)(a1 + 752), a2 + 744);
    __int16 v31 = *(_WORD *)(a2 + 1184);
    *(unsigned char *)(a1 + 1194) = *(unsigned char *)(a2 + 1186);
    *(_WORD *)(a1 + 1192) = v31;
    *(unsigned char *)a1 = 1;
  }
}

void sub_1000D0CE0(_Unwind_Exception *a1)
{
  v1[79] = off_100452B48;
  v1[65] = off_100452B48;
  v1[51] = off_100452B48;
  v1[43] = off_100452B48;
  cnframework::TimestampedEvent::~TimestampedEvent(v2);
  _Unwind_Resume(a1);
}

void sub_1000D0D74(_Unwind_Exception *a1)
{
  cnframework::TimestampedEvent::~TimestampedEvent(v1);
  _Unwind_Resume(a1);
}

__n128 sub_1000D0D88(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)a1)
  {
    long long v4 = *(_OWORD *)(a2 + 8);
    long long v5 = *(_OWORD *)(a2 + 24);
    long long v6 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 64) = v6;
    *(_OWORD *)(a1 + 16) = v4;
    *(_OWORD *)(a1 + 32) = v5;
    long long v7 = *(_OWORD *)(a2 + 72);
    long long v8 = *(_OWORD *)(a2 + 88);
    long long v9 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 128) = v9;
    *(_OWORD *)(a1 + 80) = v7;
    *(_OWORD *)(a1 + 96) = v8;
    long long v10 = *(_OWORD *)(a2 + 136);
    long long v11 = *(_OWORD *)(a2 + 152);
    long long v12 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 192) = v12;
    *(_OWORD *)(a1 + 144) = v10;
    *(_OWORD *)(a1 + 160) = v11;
    sub_1000C6578(a1 + 208, a2 + 200);
    sub_1000C6578(a1 + 648, a2 + 640);
    uint64_t v13 = *(void *)(a2 + 1096);
    __n128 result = *(__n128 *)(a2 + 1080);
    *(__n128 *)(a1 + 1088) = result;
    *(void *)(a1 + 1104) = v13;
  }
  else
  {
    *(void *)(a1 + 8) = off_100453108;
    long long v15 = *(_OWORD *)(a2 + 8);
    long long v16 = *(_OWORD *)(a2 + 24);
    long long v17 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 64) = v17;
    *(_OWORD *)(a1 + 16) = v15;
    *(_OWORD *)(a1 + 32) = v16;
    long long v18 = *(_OWORD *)(a2 + 72);
    long long v19 = *(_OWORD *)(a2 + 88);
    long long v20 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 128) = v20;
    *(_OWORD *)(a1 + 80) = v18;
    *(_OWORD *)(a1 + 96) = v19;
    long long v21 = *(_OWORD *)(a2 + 136);
    long long v22 = *(_OWORD *)(a2 + 152);
    long long v23 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 192) = v23;
    *(_OWORD *)(a1 + 144) = v21;
    *(_OWORD *)(a1 + 160) = v22;
    sub_1000CFB2C((cnrotation::CNRotation *)(a1 + 208), a2 + 200);
    sub_1000CFB2C((cnrotation::CNRotation *)(a1 + 648), a2 + 640);
    __n128 result = *(__n128 *)(a2 + 1080);
    *(void *)(a1 + 1104) = *(void *)(a2 + 1096);
    *(__n128 *)(a1 + 1088) = result;
    *(unsigned char *)a1 = 1;
  }
  return result;
}

void sub_1000D0EDC(_Unwind_Exception *a1)
{
  v1[66] = off_100452B48;
  v1[52] = off_100452B48;
  v1[38] = off_100452B48;
  v1[30] = off_100452B48;
  cnframework::TimestampedEvent::~TimestampedEvent(v2);
  _Unwind_Resume(a1);
}

void sub_1000D0F70(_Unwind_Exception *a1)
{
  cnframework::TimestampedEvent::~TimestampedEvent(v1);
  _Unwind_Resume(a1);
}

void sub_1000D0F84(unsigned __int8 *a1, uint64_t a2)
{
  int v4 = *a1;
  *((void *)a1 + 1) = *(void *)a2;
  if (v4)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 24) = v5;
    long long v6 = *(_OWORD *)(a2 + 48);
    long long v7 = *(_OWORD *)(a2 + 64);
    long long v8 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 88) = v8;
    *(_OWORD *)(a1 + 72) = v7;
    *(_OWORD *)(a1 + ++*(_DWORD *)(result + 56) = v6;
    long long v9 = *(_OWORD *)(a2 + 160);
    long long v10 = *(_OWORD *)(a2 + 176);
    long long v11 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 184) = v10;
    *(_OWORD *)(a1 + 168) = v9;
    *(_OWORD *)(a1 + 152) = v11;
    long long v12 = *(_OWORD *)(a2 + 224);
    long long v13 = *(_OWORD *)(a2 + 240);
    long long v14 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 248) = v13;
    *(_OWORD *)(a1 + 232) = v12;
    *(_OWORD *)(a1 + 216) = v14;
    long long v16 = *(_OWORD *)(a2 + 272);
    long long v15 = *(_OWORD *)(a2 + 288);
    long long v17 = *(_OWORD *)(a2 + 256);
    a1[312] = *(unsigned char *)(a2 + 304);
    *(_OWORD *)(a1 + 280) = v16;
    *(_OWORD *)(a1 + 296) = v15;
    *(_OWORD *)(a1 + 264) = v17;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 112);
    sub_1000C6578((uint64_t)(a1 + 320), a2 + 312);
    sub_1000C6578((uint64_t)(a1 + 760), a2 + 752);
    unsigned __int8 v18 = *(unsigned char *)(a2 + 1194);
    *((_WORD *)a1 + 600) = *(_WORD *)(a2 + 1192);
    a1[1202] = v18;
  }
  else
  {
    *((void *)a1 + 2) = off_1004530D8;
    long long v19 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 24) = v19;
    long long v20 = *(_OWORD *)(a2 + 48);
    long long v21 = *(_OWORD *)(a2 + 64);
    long long v22 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 88) = v22;
    *(_OWORD *)(a1 + 72) = v21;
    *(_OWORD *)(a1 + ++*(_DWORD *)(result + 56) = v20;
    long long v23 = *(_OWORD *)(a2 + 160);
    long long v24 = *(_OWORD *)(a2 + 176);
    long long v25 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 184) = v24;
    *(_OWORD *)(a1 + 168) = v23;
    *(_OWORD *)(a1 + 152) = v25;
    long long v26 = *(_OWORD *)(a2 + 224);
    long long v27 = *(_OWORD *)(a2 + 240);
    long long v28 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 248) = v27;
    *(_OWORD *)(a1 + 232) = v26;
    *(_OWORD *)(a1 + 216) = v28;
    long long v30 = *(_OWORD *)(a2 + 272);
    long long v29 = *(_OWORD *)(a2 + 288);
    long long v31 = *(_OWORD *)(a2 + 256);
    a1[312] = *(unsigned char *)(a2 + 304);
    *(_OWORD *)(a1 + 280) = v30;
    *(_OWORD *)(a1 + 296) = v29;
    *(_OWORD *)(a1 + 264) = v31;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 112);
    sub_1000CFB2C((cnrotation::CNRotation *)(a1 + 320), a2 + 312);
    sub_1000CFB2C((cnrotation::CNRotation *)(a1 + 760), a2 + 752);
    __int16 v32 = *(_WORD *)(a2 + 1192);
    a1[1202] = *(unsigned char *)(a2 + 1194);
    *((_WORD *)a1 + 600) = v32;
    *a1 = 1;
  }
}

void sub_1000D1138(_Unwind_Exception *a1)
{
  v1[80] = off_100452B48;
  v1[66] = off_100452B48;
  v1[52] = off_100452B48;
  v1[44] = off_100452B48;
  cnframework::TimestampedEvent::~TimestampedEvent(v2);
  _Unwind_Resume(a1);
}

void sub_1000D11CC(_Unwind_Exception *a1)
{
  cnframework::TimestampedEvent::~TimestampedEvent(v1);
  _Unwind_Resume(a1);
}

void sub_1000D11E0(uint64_t a1)
{
  char v25 = 0;
  buf[0] = 0;
  if (*(char *)(a1 + 23) < 0) {
    sub_1000559FC(&__p, *(void **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __p = *(std::string *)a1;
  }
  sub_10016A2C4((uint64_t)buf, (uint64_t)&__p, 1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v25 < 0) {
    operator delete(*(void **)buf);
  }
  int v1 = rand();
  if (qword_10047BED8 == -1)
  {
    uint64_t v2 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
      goto LABEL_11;
    }
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_100453668);
    uint64_t v2 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
    {
LABEL_11:
      if (sub_10016A1C0())
      {
        if (qword_10047BED8 == -1)
        {
          uint64_t v3 = qword_10047BEE0;
          if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
            goto LABEL_22;
          }
        }
        else
        {
          dispatch_once(&qword_10047BED8, &stru_100453668);
          uint64_t v3 = qword_10047BEE0;
          if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
            goto LABEL_22;
          }
        }
        sub_1001664D8(0);
        int v4 = v18;
        if (v19 < 0) {
          int v4 = (void *)v18[0];
        }
        if (v25 >= 0) {
          long long v5 = buf;
        }
        else {
          long long v5 = *(unsigned char **)buf;
        }
        LODWORD(__p.__r_.__value_.__l.__data_) = 136381187;
        *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)v4;
        WORD2(__p.__r_.__value_.__r.__words[1]) = 2080;
        *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v5;
        HIWORD(__p.__r_.__value_.__r.__words[2]) = 1024;
        int v21 = v1;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Precondition failure: %{private}s\n %s \n trace link nonce = %d", (uint8_t *)&__p, 0x1Cu);
        if (v25 < 0) {
          operator delete(*(void **)buf);
        }
      }
      if (qword_10047BED8 != -1)
      {
        dispatch_once(&qword_10047BED8, &stru_100453668);
        long long v6 = qword_10047BEE0;
        if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
          goto LABEL_30;
        }
        goto LABEL_23;
      }
LABEL_22:
      long long v6 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_30;
      }
LABEL_23:
      int v7 = v19;
      long long v8 = (void *)v18[0];
      sub_1001664D8(0);
      long long v9 = v18;
      if (v7 < 0) {
        long long v9 = v8;
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)std::string buf = 136380931;
      *(void *)&uint8_t buf[4] = v9;
      __int16 v23 = 2080;
      long long v24 = p_p;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Precondition failure: %{private}s\n %s \n", buf, 0x16u);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
LABEL_30:
      __cxa_allocate_exception(0x40uLL);
      if (v19 >= 0) {
        long long v11 = (const char *)v18;
      }
      else {
        long long v11 = (const char *)v18[0];
      }
      size_t v12 = strlen(v11);
      if (v12 >= 0x7FFFFFFFFFFFFFF8) {
        sub_1000A6968();
      }
      std::string::size_type v13 = v12;
      if (v12 >= 0x17)
      {
        uint64_t v15 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v12 | 7) != 0x17) {
          uint64_t v15 = v12 | 7;
        }
        uint64_t v16 = v15 + 1;
        long long v14 = (std::string *)operator new(v15 + 1);
        __p.__r_.__value_.__l.__size_ = v13;
        __p.__r_.__value_.__r.__words[2] = v16 | 0x8000000000000000;
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v14;
      }
      else
      {
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = v12;
        long long v14 = &__p;
        if (!v12)
        {
LABEL_42:
          v14->__r_.__value_.__s.__data_[v13] = 0;
          std::runtime_error::runtime_error((std::runtime_error *)buf, &__p);
          *(void *)std::string buf = &off_100453860;
          sub_10018E868((uint64_t)v17);
          sub_1000D1698((std::runtime_error *)buf, (uint64_t)"void Preconditions::details::checkFailed(const Args &...) [E = std::illegal_state_error, Args = <std::string>]", (uint64_t)"../../../common/util/preconditions.h", 88, (uint64_t)v17);
        }
      }
      memmove(v14, v11, v13);
      goto LABEL_42;
    }
  }
  LODWORD(__p.__r_.__value_.__l.__data_) = 67109120;
  HIDWORD(__p.__r_.__value_.__r.__words[0]) = v1;
  _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "Precondition failure. log link nonce = %d", (uint8_t *)&__p, 8u);
  goto LABEL_11;
}

void sub_1000D15D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,std::runtime_error a25,int a26,__int16 a27,char a28,char a29)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a25);
  if (a23 < 0) {
    operator delete(a18);
  }
  if ((a17 & 0x80000000) == 0) {
    _Unwind_Resume(a1);
  }
  operator delete(a12);
  _Unwind_Resume(a1);
}

void sub_1000D1698(std::runtime_error *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  std::runtime_error::runtime_error(&v12, a1);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  int v17 = -1;
  v12.__vftable = (std::runtime_error_vtbl *)off_100453818;
  std::string::size_type v13 = off_100453840;
  sub_1000D1F8C((uint64_t)&v18, (uint64_t)&v12);
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  int v21 = a4;
  long long v9 = *(const void **)a5;
  size_t v10 = *(void *)(a5 + 8) - *(void *)a5;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0) {
      sub_1000A9108();
    }
    std::string __p = operator new(v10);
    memcpy(__p, v9, v10);
  }
  sub_1000D1C30();
}

void sub_1000D19A4(void *a1)
{
  std::runtime_error::~runtime_error(v1);
  sub_1000A6954(a1);
}

void sub_1000D19B8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    operator delete(__p);
    sub_1000A6954(a1);
  }
  sub_1000A6954(a1);
}

void sub_1000D19E0(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

uint64_t sub_1000D1A70(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2)->__vftable = (std::runtime_error_vtbl *)&off_100453860;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = off_100453778;
  *(void *)(a1 + 16) = off_1004537B0;
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = &off_1004537E8;
  return a1;
}

void sub_1000D1B90(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_1000D1BA4(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_1000D1C30()
{
}

void sub_1000D1ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CD2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1000D1EE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_1000CD2E0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_1000D1EFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000D1F8C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4->__vftable = (std::runtime_error_vtbl *)&off_100453860;
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_100453778;
  *(void *)(a1 + 16) = off_1004537B0;
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = &off_1004537E8;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_1000D20B8(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_1000D20CC(_Unwind_Exception *a1)
{
  sub_1000D20E0(v1);
  _Unwind_Resume(a1);
}

void sub_1000D20E0(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_1000D216C(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_1000D220C()
{
}

void sub_1000D2268()
{
}

void sub_1000D228C(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_1000D1A70((uint64_t)exception, a1);
}

void sub_1000D22D4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000D22E8(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_1000D2370(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

void sub_1000D240C()
{
}

void sub_1000D247C()
{
}

void sub_1000D24A0(void *a1)
{
  uint64_t v1 = (uint64_t)a1 + *(void *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x40uLL);
  sub_1000D1A70((uint64_t)exception, v1);
}

void sub_1000D24FC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000D2510(void *a1)
{
  uint64_t v1 = (std::runtime_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(v1);
}

void sub_1000D25B0(void *a1)
{
  uint64_t v1 = (std::runtime_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(v1);

  operator delete();
}

void sub_1000D2664(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_1000D2704(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_1000D278C(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

void sub_1000D2828(std::runtime_error *a1)
{
  std::runtime_error::~runtime_error(a1);

  operator delete();
}

uint64_t sub_1000D2860(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4->__vftable = (std::runtime_error_vtbl *)&off_100453860;
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_100453778;
  *(void *)(a1 + 16) = off_1004537B0;
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = &off_1004537E8;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_1000D298C(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_1000D29A0(_Unwind_Exception *a1)
{
  sub_1000D20E0(v1);
  _Unwind_Resume(a1);
}

std::string *sub_1000D29B4@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1000D29E8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000D2A04()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1000D2A7C()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_1000D2AF4(uint64_t result)
{
  if (*(unsigned char *)(result + 1088))
  {
    *(void *)(result + 960) = off_100452B48;
    *(void *)(result + 848) = off_100452B48;
    *(void *)(result + 736) = off_100452B48;
    *(void *)(result + 672) = off_100452B48;
    *(void *)(result + 520) = off_100452B48;
    *(void *)(result + 408) = off_100452B48;
    *(void *)(result + 296) = off_100452B48;
    *(void *)(result + 232) = off_100452B48;
  }
  return result;
}

uint64_t sub_1000D2C00(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 28);
}

uint64_t sub_1000D2C08(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  sub_1000D3330(a1);
  sub_1000D3534(a1 + 32, a2);
  long long v68 = *((_OWORD *)a3 + 6);
  long long v51 = *((_OWORD *)a4 + 6);
  uint64_t v8 = CNTimeSpan::operator-();
  double v10 = v9 + (double)v8;
  memset(buf, 0, sizeof(buf));
  CNTimeSpan::SetTimeSpan((CNTimeSpan *)buf, 0, 0.0);
  if (v10 != *(double *)&buf[8] + (double)*(uint64_t *)buf)
  {
    if (qword_10047BED8 == -1)
    {
      long long v27 = qword_10047BEE0;
      uint64_t result = os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR);
      if (!result) {
        return result;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100453898);
      long long v27 = qword_10047BEE0;
      uint64_t result = os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR);
      if (!result) {
        return result;
      }
    }
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_ERROR, "Attempted VL synchronization with two VIO estimates from different sessions", buf, 2u);
    return 0;
  }
  sub_1000CF950((uint64_t)buf);
  sub_1000CF950((uint64_t)&v68);
  uint64_t v11 = *a3;
  double v12 = *((double *)a3 + 1);
  uint64_t v13 = *a4;
  double v14 = *((double *)a4 + 1);
  if ((*a3 || (*(void *)&v12 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
    && (v13 || (*(void *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
    && v11 != v13)
  {
    if (v11 < v13) {
      goto LABEL_8;
    }
  }
  else if (v12 < v14)
  {
LABEL_8:
    long long v15 = *((_OWORD *)a3 + 11);
    long long v94 = *((_OWORD *)a3 + 10);
    long long v95 = v15;
    char v96 = *((unsigned char *)a3 + 192);
    long long v16 = *((_OWORD *)a3 + 7);
    long long v90 = *((_OWORD *)a3 + 6);
    long long v91 = v16;
    long long v17 = *((_OWORD *)a3 + 8);
    long long v93 = *((_OWORD *)a3 + 9);
    long long v92 = v17;
    long long v18 = *((_OWORD *)a3 + 3);
    long long v86 = *((_OWORD *)a3 + 2);
    long long v87 = v18;
    long long v19 = *((_OWORD *)a3 + 4);
    long long v89 = *((_OWORD *)a3 + 5);
    long long v88 = v19;
    long long v20 = *(_OWORD *)a3;
    long long v85 = *((_OWORD *)a3 + 1);
    *(_OWORD *)std::string buf = v20;
    sub_1000C6578((uint64_t)v97, (uint64_t)(a3 + 25));
    sub_1000C6578((uint64_t)v98, (uint64_t)(a3 + 80));
    __int16 v99 = *((_WORD *)a3 + 540);
    char v100 = *((unsigned char *)a3 + 1082);
    long long v21 = *((_OWORD *)a4 + 11);
    long long v78 = *((_OWORD *)a4 + 10);
    long long v79 = v21;
    char v80 = *((unsigned char *)a4 + 192);
    long long v22 = *((_OWORD *)a4 + 7);
    long long v74 = *((_OWORD *)a4 + 6);
    long long v75 = v22;
    long long v23 = *((_OWORD *)a4 + 8);
    long long v77 = *((_OWORD *)a4 + 9);
    long long v76 = v23;
    long long v24 = *((_OWORD *)a4 + 3);
    long long v70 = *((_OWORD *)a4 + 2);
    long long v71 = v24;
    long long v25 = *((_OWORD *)a4 + 4);
    long long v73 = *((_OWORD *)a4 + 5);
    long long v72 = v25;
    long long v26 = *(_OWORD *)a4;
    long long v69 = *((_OWORD *)a4 + 1);
    long long v68 = v26;
    sub_1000C6578((uint64_t)v81, (uint64_t)(a4 + 25));
    sub_1000C6578((uint64_t)v82, (uint64_t)(a4 + 80));
    goto LABEL_15;
  }
  long long v29 = *((_OWORD *)a4 + 11);
  long long v94 = *((_OWORD *)a4 + 10);
  long long v95 = v29;
  char v96 = *((unsigned char *)a4 + 192);
  long long v30 = *((_OWORD *)a4 + 7);
  long long v90 = *((_OWORD *)a4 + 6);
  long long v91 = v30;
  long long v31 = *((_OWORD *)a4 + 8);
  long long v93 = *((_OWORD *)a4 + 9);
  long long v92 = v31;
  long long v32 = *((_OWORD *)a4 + 3);
  long long v86 = *((_OWORD *)a4 + 2);
  long long v87 = v32;
  long long v33 = *((_OWORD *)a4 + 4);
  long long v89 = *((_OWORD *)a4 + 5);
  long long v88 = v33;
  long long v34 = *(_OWORD *)a4;
  long long v85 = *((_OWORD *)a4 + 1);
  *(_OWORD *)std::string buf = v34;
  sub_1000C6578((uint64_t)v97, (uint64_t)(a4 + 25));
  sub_1000C6578((uint64_t)v98, (uint64_t)(a4 + 80));
  __int16 v99 = *((_WORD *)a4 + 540);
  char v100 = *((unsigned char *)a4 + 1082);
  long long v35 = *((_OWORD *)a3 + 11);
  long long v78 = *((_OWORD *)a3 + 10);
  long long v79 = v35;
  char v80 = *((unsigned char *)a3 + 192);
  long long v36 = *((_OWORD *)a3 + 7);
  long long v74 = *((_OWORD *)a3 + 6);
  long long v75 = v36;
  long long v37 = *((_OWORD *)a3 + 8);
  long long v77 = *((_OWORD *)a3 + 9);
  long long v76 = v37;
  long long v38 = *((_OWORD *)a3 + 3);
  long long v70 = *((_OWORD *)a3 + 2);
  long long v71 = v38;
  long long v39 = *((_OWORD *)a3 + 4);
  long long v73 = *((_OWORD *)a3 + 5);
  long long v72 = v39;
  long long v40 = *(_OWORD *)a3;
  long long v69 = *((_OWORD *)a3 + 1);
  long long v68 = v40;
  sub_1000C6578((uint64_t)v81, (uint64_t)(a3 + 25));
  sub_1000C6578((uint64_t)v82, (uint64_t)(a3 + 80));
  a4 = a3;
LABEL_15:
  v82[220] = *((_WORD *)a4 + 540);
  char v83 = *((unsigned char *)a4 + 1082);
  long long v67 = *(_OWORD *)(a2 + 104);
  sub_1000CF950((uint64_t)&v51);
  long long v101 = *(_OWORD *)buf;
  uint64_t v41 = CNTimeSpan::operator-();
  if (fabs(v42 + (double)v41) <= 0.001)
  {
    uint64_t result = sub_1000D3760((uint64_t)buf);
    if (!result) {
      return result;
    }
    long long v61 = v94;
    long long v62 = v95;
    char v63 = v96;
    long long v57 = v90;
    long long v58 = v91;
    long long v59 = v92;
    long long v60 = v93;
    long long v53 = v86;
    long long v54 = v87;
    long long v55 = v88;
    long long v56 = v89;
    long long v51 = *(_OWORD *)buf;
    long long v52 = v85;
    sub_1000C6578((uint64_t)v64, (uint64_t)v97);
    sub_1000C6578((uint64_t)v65, (uint64_t)v98);
    uint64_t v46 = buf;
LABEL_28:
    uint64_t v47 = v46 + 1080;
    v65[220] = *(_WORD *)v47;
    char v66 = v47[2];
LABEL_29:
    long long v105 = 0u;
    long long v106 = 0u;
    long long v103 = 0u;
    long long v104 = 0u;
    long long v101 = 0u;
    long long v102 = 0u;
    CNTimeSpan::SetTimeSpan((CNTimeSpan *)&v101, 0, 0.0);
    LOBYTE(v102) = 0;
    *((void *)&v102 + 1) = 0;
    *(void *)&long long v103 = 0;
    CNTimeSpan::SetTimeSpan((CNTimeSpan *)((char *)&v102 + 8), 0, 0.0);
    BYTE8(v103) = 0;
    long long v104 = 0uLL;
    CNTimeSpan::SetTimeSpan((CNTimeSpan *)&v104, 0, 0.0);
    LOBYTE(v105) = 0;
    *((void *)&v105 + 1) = 0;
    *(void *)&long long v106 = 0;
    CNTimeSpan::SetTimeSpan((CNTimeSpan *)((char *)&v105 + 8), 0, 0.0);
    *((void *)&v106 + 1) = 0x7FF8000000000000;
    long long v54 = v104;
    long long v55 = v105;
    long long v52 = v102;
    long long v56 = v106;
    long long v53 = v103;
    long long v51 = v67;
    char v66 = 1;
    return sub_1000D4E90(a1, (uint64_t)&v51, a2);
  }
  long long v101 = v68;
  uint64_t v43 = CNTimeSpan::operator-();
  if (fabs(v44 + (double)v43) <= 0.001)
  {
    uint64_t result = sub_1000D3760((uint64_t)&v68);
    if (!result) {
      return result;
    }
    long long v61 = v78;
    long long v62 = v79;
    char v63 = v80;
    long long v57 = v74;
    long long v58 = v75;
    long long v59 = v76;
    long long v60 = v77;
    long long v53 = v70;
    long long v54 = v71;
    long long v55 = v72;
    long long v56 = v73;
    long long v51 = v68;
    long long v52 = v69;
    sub_1000C6578((uint64_t)v64, (uint64_t)v81);
    sub_1000C6578((uint64_t)v65, (uint64_t)v82);
    uint64_t v46 = (uint8_t *)&v68;
    goto LABEL_28;
  }
  if ((void)v67
    || (double v45 = *((double *)&v67 + 1), (*((void *)&v67 + 1) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000))
  {
    if ((*(void *)buf || (*(void *)&buf[8] & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
      && (void)v67 != *(void *)buf)
    {
      if ((uint64_t)v67 < *(uint64_t *)buf) {
        return 0;
      }
    }
    else if (*((double *)&v67 + 1) < *(double *)&buf[8])
    {
      return 0;
    }
    double v49 = *((double *)&v68 + 1);
    uint64_t v48 = v68;
    if (!(void)v67)
    {
      double v45 = *((double *)&v67 + 1);
      if ((*((void *)&v67 + 1) & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000) {
        goto LABEL_41;
      }
    }
  }
  else
  {
    if (*((double *)&v67 + 1) < *(double *)&buf[8]) {
      return 0;
    }
    double v49 = *((double *)&v68 + 1);
    uint64_t v48 = v68;
    if ((*((void *)&v67 + 1) & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000) {
      goto LABEL_41;
    }
  }
  if (!v48 && (*(void *)&v49 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000
    || (BOOL v50 = (uint64_t)v67 <= v48, (void)v67 == v48))
  {
    double v45 = *((double *)&v67 + 1);
LABEL_41:
    BOOL v50 = v45 <= v49;
  }
  if (!v50) {
    return 0;
  }
  uint64_t result = sub_1000D3760((uint64_t)buf);
  if (result)
  {
    uint64_t result = sub_1000D3760((uint64_t)&v68);
    if (result)
    {
      if (sub_1000D3FF8((uint64_t)&v67, (uint64_t)buf, (uint64_t)&v68, (uint64_t)&v51)) {
        goto LABEL_29;
      }
      return 0;
    }
  }
  return result;
}

void sub_1000D32D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1000D3330(uint64_t a1)
{
  *(unsigned char *)(a1 + 28) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  if (*(unsigned char *)(a1 + 1136))
  {
    sub_1000C9C38((cnframework::TimestampedEvent *)(a1 + 32));
    *(unsigned char *)(a1 + 1136) = 0;
  }
  if (*(unsigned char *)(a1 + 2232))
  {
    *(void *)(a1 + 2104) = off_100452B48;
    *(void *)(a1 + 1992) = off_100452B48;
    *(void *)(a1 + 1880) = off_100452B48;
    *(void *)(a1 + 1816) = off_100452B48;
    *(void *)(a1 + 1664) = off_100452B48;
    *(void *)(a1 + 1552) = off_100452B48;
    *(void *)(a1 + 1440) = off_100452B48;
    *(void *)(a1 + 1376) = off_100452B48;
    *(unsigned char *)(a1 + 2232) = 0;
  }
  sub_1000D5F8C(a1 + 2240);
  sub_1000D5F8C(a1 + 2680);
  sub_1000D5F8C(a1 + 3120);
  sub_1000D5F8C(a1 + 3560);
  *(_OWORD *)(a1 + 4008) = xmmword_1003E69E0;
  uint64_t v2 = *(void *)(a1 + 4032);
  *(void *)uint64_t v2 = 0;
  *(_OWORD *)(v2 + 8) = 0u;
  *(_OWORD *)(a1 + 4072) = xmmword_1003E69E0;
  uint64_t v3 = *(void *)(a1 + 4096);
  *(void *)uint64_t v3 = 0;
  *(_OWORD *)(v3 + 8) = 0u;
  *(_OWORD *)(a1 + 4136) = xmmword_1003E6950;
  uint64_t v4 = *(_OWORD **)(a1 + 4160);
  _OWORD *v4 = 0u;
  v4[1] = 0u;
  v4[2] = 0u;
  v4[3] = 0uLL;
  *(_OWORD *)((char *)v4 + ++*(_DWORD *)(result + 56) = 0uLL;
  if (*(unsigned char *)(a1 + 4256)) {
    *(unsigned char *)(a1 + 42++*(_DWORD *)(result + 56) = 0;
  }
}

uint64_t sub_1000D3534(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 1104))
  {
    long long v4 = *(_OWORD *)(a2 + 8);
    long long v5 = *(_OWORD *)(a2 + 24);
    long long v6 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + ++*(_DWORD *)(result + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = v6;
    *(_OWORD *)(a1 + 24) = v5;
    *(_OWORD *)(a1 + 8) = v4;
    long long v7 = *(_OWORD *)(a2 + 72);
    long long v8 = *(_OWORD *)(a2 + 88);
    long long v9 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = v9;
    *(_OWORD *)(a1 + 88) = v8;
    *(_OWORD *)(a1 + 72) = v7;
    long long v10 = *(_OWORD *)(a2 + 136);
    long long v11 = *(_OWORD *)(a2 + 152);
    long long v12 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = v12;
    *(_OWORD *)(a1 + 152) = v11;
    *(_OWORD *)(a1 + 136) = v10;
    sub_1000C6578(a1 + 200, a2 + 200);
    sub_1000C6578(a1 + 640, a2 + 640);
    uint64_t v13 = *(void *)(a2 + 1096);
    *(_OWORD *)(a1 + 1080) = *(_OWORD *)(a2 + 1080);
    *(void *)(a1 + 1096) = v13;
  }
  else
  {
    *(void *)a1 = off_100453108;
    long long v15 = *(_OWORD *)(a2 + 8);
    long long v16 = *(_OWORD *)(a2 + 24);
    long long v17 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + ++*(_DWORD *)(result + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = v17;
    *(_OWORD *)(a1 + 24) = v16;
    *(_OWORD *)(a1 + 8) = v15;
    long long v18 = *(_OWORD *)(a2 + 72);
    long long v19 = *(_OWORD *)(a2 + 88);
    long long v20 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = v20;
    *(_OWORD *)(a1 + 88) = v19;
    *(_OWORD *)(a1 + 72) = v18;
    long long v21 = *(_OWORD *)(a2 + 136);
    long long v22 = *(_OWORD *)(a2 + 152);
    long long v23 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = v23;
    *(_OWORD *)(a1 + 152) = v22;
    *(_OWORD *)(a1 + 136) = v21;
    sub_1000CFB2C((cnrotation::CNRotation *)(a1 + 200), a2 + 200);
    sub_1000CFB2C((cnrotation::CNRotation *)(a1 + 640), a2 + 640);
    long long v24 = *(_OWORD *)(a2 + 1080);
    *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
    *(_OWORD *)(a1 + 1080) = v24;
    *(unsigned char *)(a1 + 1104) = 1;
  }
  return a1;
}

void sub_1000D36B8(_Unwind_Exception *a1)
{
  *((void *)v1 + 65) = off_100452B48;
  *((void *)v1 + 51) = off_100452B48;
  *((void *)v1 + 37) = off_100452B48;
  *((void *)v1 + 29) = off_100452B48;
  cnframework::TimestampedEvent::~TimestampedEvent(v1);
  _Unwind_Resume(a1);
}

void sub_1000D374C(_Unwind_Exception *a1)
{
  cnframework::TimestampedEvent::~TimestampedEvent(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000D3760(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 1082)) {
    return 1;
  }
  uint64_t v123 = 0x300000003;
  double v118 = off_100452AF0;
  uint64_t v3 = *(unsigned int *)(a1 + 416);
  int v4 = *(_DWORD *)(a1 + 420);
  int v119 = v3;
  int v120 = v4;
  uint64_t v5 = (v4 * v3);
  int v121 = v4 * v3;
  int v122 = v3;
  uint64_t v124 = v125;
  int v6 = *(_DWORD *)(a1 + 424);
  if (v6 > 3)
  {
    double v14 = *(long long **)(a1 + 440);
    uint64_t v15 = (v6 - 1) >> 1;
    long long v16 = v14;
    long long v17 = v125;
    do
    {
      long long v18 = *v16++;
      *v17++ = v18;
      --v15;
    }
    while (v15);
    *(_OWORD *)&v125[v6 - 2] = *(long long *)((char *)v14 + 8 * (v6 - 2));
  }
  else
  {
    if ((int)v5 < 1) {
      goto LABEL_15;
    }
    uint64_t v7 = *(void *)(a1 + 440);
    if (v5 < 6 || (unint64_t)&v118 - v7 + 40 < 0x20)
    {
      uint64_t v8 = 0;
LABEL_9:
      uint64_t v9 = v5 - v8;
      uint64_t v10 = 8 * v8;
      long long v11 = &(&v118)[v8 + 5];
      long long v12 = (uint64_t (***)())(v7 + v10);
      do
      {
        uint64_t v13 = *v12++;
        *v11++ = v13;
        --v9;
      }
      while (v9);
      goto LABEL_15;
    }
    uint64_t v8 = v5 & 0x7FFFFFFC;
    long long v93 = (long long *)(v7 + 16);
    long long v94 = v126;
    uint64_t v95 = v5 & 0xFFFFFFFC;
    do
    {
      long long v96 = *v93;
      *(v94 - 1) = *(v93 - 1);
      _OWORD *v94 = v96;
      v93 += 2;
      v94 += 2;
      v95 -= 4;
    }
    while (v95);
    if (v8 != v5) {
      goto LABEL_9;
    }
  }
LABEL_15:
  if ((int)v3 < 1)
  {
    double v20 = 0.0;
    double v24 = 1.0;
    if (fabs(0.0) >= 2.22044605e-16) {
LABEL_21:
    }
      double v24 = v24 / v20;
  }
  else
  {
    int v19 = v3 + 1;
    double v20 = 0.0;
    uint64_t v21 = 0;
    if (v3 == 1) {
      goto LABEL_17;
    }
    if (v19 < 0) {
      unsigned int v27 = ~v3;
    }
    else {
      unsigned int v27 = v3 + 1;
    }
    unint64_t v28 = v27 * (unint64_t)(v3 - 1);
    BOOL v29 = (v28 & 0x80000000) != 0;
    if (v19 < 0) {
      BOOL v29 = v28 > 0x80000000;
    }
    BOOL v30 = (v28 & 0xFFFFFFFF00000000) != 0;
    if (v29) {
      goto LABEL_17;
    }
    if (v30) {
      goto LABEL_17;
    }
    int v31 = 0;
    uint64_t v21 = v3 & 0xFFFFFFFE;
    uint64_t v32 = v21;
    do
    {
      double v20 = v20 + *(double *)&v125[v31] + *(double *)&v125[v19 + v31];
      v31 += 2 * v3 + 2;
      v32 -= 2;
    }
    while (v32);
    if (v21 != v3)
    {
LABEL_17:
      uint64_t v22 = v3 - v21;
      int v23 = v19 * v21;
      do
      {
        double v20 = v20 + *(double *)&v125[v23];
        v23 += v19;
        --v22;
      }
      while (v22);
    }
    double v24 = 1.0;
    if (v20 < 1.0)
    {
      double v24 = 1.0;
      if (fabs(v20) >= 2.22044605e-16) {
        goto LABEL_21;
      }
    }
  }
  uint64_t v114 = 0x300000003;
  double v109 = off_100452AF0;
  if ((int)v5 <= 0)
  {
    int v119 = v3;
    int v120 = v4;
    int v121 = v4 * v3;
    int v122 = v3;
    uint64_t result = cntransformation::CNRigidTransformation::SetPpp();
    if (!result) {
      return result;
    }
    goto LABEL_55;
  }
  double v25 = v24 * 4.0;
  if (v5 >= 4)
  {
    uint64_t v26 = v5 & 0x7FFFFFFC;
    long long v33 = (float64x2_t *)v126;
    long long v34 = (float64x2_t *)v117;
    uint64_t v35 = v5 & 0xFFFFFFFC;
    do
    {
      float64x2_t v36 = vmulq_n_f64(*v33, v25);
      v34[-1] = vmulq_n_f64(v33[-1], v25);
      *long long v34 = v36;
      v33 += 2;
      v34 += 2;
      v35 -= 4;
    }
    while (v35);
    if (v26 == v5) {
      goto LABEL_45;
    }
  }
  else
  {
    uint64_t v26 = 0;
  }
  uint64_t v37 = v5 - v26;
  uint64_t v38 = 8 * v26 + 40;
  long long v39 = (double *)((char *)&v109 + v38);
  long long v40 = (double *)((char *)&v118 + v38);
  do
  {
    double v41 = *v40++;
    *v39++ = v25 * v41;
    --v37;
  }
  while (v37);
LABEL_45:
  if ((int)v5 > 3)
  {
    uint64_t v42 = (v5 - 1) >> 1;
    uint64_t v43 = (float64x2_t *)v125;
    double v44 = (float64x2_t *)v116;
    do
    {
      float64x2_t v45 = *v43++;
      *v44++ = vmulq_n_f64(v45, v25);
      --v42;
    }
    while (v42);
    *(float64x2_t *)&v116[(v5 - 2)] = vmulq_n_f64(*(float64x2_t *)&v125[(v5 - 2)], v25);
  }
  else
  {
    uint64_t v46 = (v4 * v3);
    uint64_t v47 = (double *)v116;
    uint64_t v48 = (double *)v125;
    do
    {
      double v49 = *v48++;
      *v47++ = v25 * v49;
      --v46;
    }
    while (v46);
  }
  int v119 = v3;
  int v120 = v4;
  int v121 = v4 * v3;
  int v122 = v3;
  if ((int)v5 > 3)
  {
    int v50 = v5 - 2;
    memcpy(v125, v116, 16 * ((v5 - 1) >> 1));
    *(_OWORD *)&v125[v50] = *(_OWORD *)&v116[v50];
    uint64_t result = cntransformation::CNRigidTransformation::SetPpp();
    if (!result) {
      return result;
    }
  }
  else
  {
    memcpy(v125, v116, 8 * v5);
    uint64_t result = cntransformation::CNRigidTransformation::SetPpp();
    if (!result) {
      return result;
    }
  }
LABEL_55:
  uint64_t v114 = 0x300000003;
  double v109 = off_100452AF0;
  uint64_t v51 = *(unsigned int *)(a1 + 304);
  int v52 = *(_DWORD *)(a1 + 308);
  int v110 = v51;
  int v111 = v52;
  uint64_t v53 = (v52 * v51);
  int v112 = v52 * v51;
  int v113 = v51;
  uint64_t v115 = v116;
  int v54 = *(_DWORD *)(a1 + 312);
  if (v54 > 3)
  {
    long long v62 = *(long long **)(a1 + 328);
    uint64_t v63 = (v54 - 1) >> 1;
    unint64_t v64 = v62;
    int v65 = v116;
    do
    {
      long long v66 = *v64++;
      *v65++ = v66;
      --v63;
    }
    while (v63);
    *(_OWORD *)&v116[v54 - 2] = *(long long *)((char *)v62 + 8 * (v54 - 2));
  }
  else
  {
    if ((int)v53 < 1) {
      goto LABEL_66;
    }
    uint64_t v55 = *(void *)(a1 + 328);
    if (v53 < 6 || (unint64_t)&v109 - v55 + 40 < 0x20)
    {
      uint64_t v56 = 0;
LABEL_60:
      uint64_t v57 = v53 - v56;
      uint64_t v58 = 8 * v56;
      long long v59 = &(&v109)[v56 + 5];
      long long v60 = (uint64_t (***)())(v55 + v58);
      do
      {
        long long v61 = *v60++;
        *v59++ = v61;
        --v57;
      }
      while (v57);
      goto LABEL_66;
    }
    uint64_t v56 = v53 & 0x7FFFFFFC;
    long long v102 = (long long *)(v55 + 16);
    long long v103 = v117;
    uint64_t v104 = v53 & 0xFFFFFFFC;
    do
    {
      long long v105 = *v102;
      *(v103 - 1) = *(v102 - 1);
      *long long v103 = v105;
      v102 += 2;
      v103 += 2;
      v104 -= 4;
    }
    while (v104);
    if (v56 != v53) {
      goto LABEL_60;
    }
  }
LABEL_66:
  if ((int)v51 < 1)
  {
    double v68 = 0.0;
    double v72 = 16.0;
    if (fabs(0.0) >= 2.22044605e-16) {
LABEL_72:
    }
      double v72 = 0.00121846968 / v68 * 16.0;
  }
  else
  {
    int v67 = v51 + 1;
    double v68 = 0.0;
    uint64_t v69 = 0;
    if (v51 == 1) {
      goto LABEL_68;
    }
    if (v67 < 0) {
      unsigned int v74 = ~v51;
    }
    else {
      unsigned int v74 = v51 + 1;
    }
    unint64_t v75 = v74 * (unint64_t)(v51 - 1);
    BOOL v76 = (v75 & 0x80000000) != 0;
    if (v67 < 0) {
      BOOL v76 = v75 > 0x80000000;
    }
    BOOL v77 = (v75 & 0xFFFFFFFF00000000) != 0;
    if (v76) {
      goto LABEL_68;
    }
    if (v77) {
      goto LABEL_68;
    }
    int v78 = 0;
    uint64_t v69 = v51 & 0xFFFFFFFE;
    uint64_t v79 = v69;
    do
    {
      double v68 = v68 + *(double *)&v116[v78] + *(double *)&v116[v67 + v78];
      v78 += 2 * v51 + 2;
      v79 -= 2;
    }
    while (v79);
    if (v69 != v51)
    {
LABEL_68:
      uint64_t v70 = v51 - v69;
      int v71 = v67 * v69;
      do
      {
        double v68 = v68 + *(double *)&v116[v71];
        v71 += v67;
        --v70;
      }
      while (v70);
    }
    double v72 = 16.0;
    if (v68 < 0.00121846968)
    {
      double v72 = 16.0;
      if (fabs(v68) >= 2.22044605e-16) {
        goto LABEL_72;
      }
    }
  }
  v106[3] = 0x300000003;
  v106[0] = off_100452AF0;
  if ((int)v53 <= 0)
  {
    int v110 = v51;
    int v111 = v52;
    int v112 = v52 * v51;
    int v113 = v51;
    uint64_t result = cntransformation::CNRigidTransformation::SetPrr();
    if (!result) {
      return result;
    }
    goto LABEL_110;
  }
  if (v53 >= 4)
  {
    uint64_t v73 = v53 & 0x7FFFFFFC;
    char v80 = (float64x2_t *)v117;
    double v81 = (float64x2_t *)&v108;
    uint64_t v82 = v53 & 0xFFFFFFFC;
    do
    {
      float64x2_t v83 = vmulq_n_f64(*v80, v72);
      v81[-1] = vmulq_n_f64(v80[-1], v72);
      *double v81 = v83;
      v80 += 2;
      v81 += 2;
      v82 -= 4;
    }
    while (v82);
    if (v73 == v53) {
      goto LABEL_96;
    }
  }
  else
  {
    uint64_t v73 = 0;
  }
  uint64_t v84 = v53 - v73;
  uint64_t v85 = 8 * v73 + 40;
  long long v86 = (double *)((char *)v106 + v85);
  long long v87 = (double *)((char *)&v109 + v85);
  do
  {
    double v88 = *v87++;
    *v86++ = v72 * v88;
    --v84;
  }
  while (v84);
LABEL_96:
  if ((int)v53 > 3)
  {
    uint64_t v89 = (v53 - 1) >> 1;
    long long v90 = (float64x2_t *)v116;
    long long v91 = (float64x2_t *)v107;
    do
    {
      float64x2_t v92 = *v90++;
      *v91++ = vmulq_n_f64(v92, v72);
      --v89;
    }
    while (v89);
    *(float64x2_t *)&v107[(v53 - 2)] = vmulq_n_f64(*(float64x2_t *)&v116[(v53 - 2)], v72);
  }
  else
  {
    uint64_t v97 = (v52 * v51);
    uint64_t v98 = (double *)v107;
    __int16 v99 = (double *)v116;
    do
    {
      double v100 = *v99++;
      *v98++ = v72 * v100;
      --v97;
    }
    while (v97);
  }
  int v110 = v51;
  int v111 = v52;
  int v112 = v52 * v51;
  int v113 = v51;
  if ((int)v53 > 3)
  {
    int v101 = v53 - 2;
    memcpy(v116, v107, 16 * ((v53 - 1) >> 1));
    *(_OWORD *)&v116[v101] = *(_OWORD *)&v107[v101];
    uint64_t result = cntransformation::CNRigidTransformation::SetPrr();
    if (!result) {
      return result;
    }
LABEL_110:
    *(unsigned char *)(a1 + 1082) = 1;
    return result;
  }
  memcpy(v116, v107, 8 * v53);
  uint64_t result = cntransformation::CNRigidTransformation::SetPrr();
  if (result) {
    goto LABEL_110;
  }
  return result;
}

BOOL sub_1000D3FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(uint64_t (***)())a2;
  double v8 = *(double *)(a2 + 8);
  uint64_t v9 = *(uint64_t (***)())a1;
  if (*(void *)a1 || (double v10 = *(double *)(a1 + 8), (*(void *)&v10 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000))
  {
    if (v7) {
      BOOL v11 = 1;
    }
    else {
      BOOL v11 = (*(void *)&v8 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
    }
    if (v11 && v9 != v7)
    {
      if ((uint64_t)v9 < (uint64_t)v7) {
        return 0;
      }
    }
    else if (*(double *)(a1 + 8) < v8)
    {
      return 0;
    }
    long long v12 = *(uint64_t (***)())a3;
    double v13 = *(double *)(a3 + 8);
    if (v9 || (double v10 = *(double *)(a1 + 8), (*(void *)&v10 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000))
    {
LABEL_14:
      if (v12 || (*(void *)&v13 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
      {
        BOOL v14 = (uint64_t)v9 <= (uint64_t)v12;
        if (v9 == v12)
        {
          BOOL v14 = *(double *)(a1 + 8) <= v13;
          long long v12 = *(uint64_t (***)())a1;
        }
        if (!v14) {
          return 0;
        }
        goto LABEL_26;
      }
      if (*(double *)(a1 + 8) <= v13)
      {
        long long v12 = 0;
        goto LABEL_26;
      }
      return 0;
    }
  }
  else
  {
    if (v10 < v8) {
      return 0;
    }
    long long v12 = *(uint64_t (***)())a3;
    double v13 = *(double *)(a3 + 8);
    if ((*(void *)&v10 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000) {
      goto LABEL_14;
    }
  }
  if (v10 > v13) {
    return 0;
  }
LABEL_26:
  *(void *)uint64_t v189 = v12;
  *(double *)&v189[8] = v13;
  v184 = v7;
  *(double *)&long long v185 = v8;
  uint64_t v15 = CNTimeSpan::operator-();
  double v17 = v16 + (double)v15;
  if (fabs(v17) < 2.22044605e-16) {
    return 0;
  }
  uint64_t v18 = *(void *)(a3 + 8);
  *(void *)uint64_t v189 = *(void *)a3;
  *(void *)&v189[8] = v18;
  uint64_t v19 = CNTimeSpan::operator-();
  v21.f64[0] = (v20 + (double)v19) / v17;
  float64x2_t v170 = v21;
  *(_OWORD *)uint64_t v189 = *(_OWORD *)a2;
  uint64_t v22 = CNTimeSpan::operator-();
  uint64_t v190 = 0x100000003;
  *(void *)uint64_t v189 = off_100452C18;
  double v25 = v192;
  uint64_t v191 = v192;
  int v26 = *(_DWORD *)(a2 + 240);
  int v27 = *(_DWORD *)(a2 + 244);
  *(_DWORD *)&v189[8] = v26;
  *(_DWORD *)&v189[12] = v27;
  uint64_t v28 = (v27 * v26);
  *(_DWORD *)&v189[16] = v28;
  *(_DWORD *)&v189[20] = v26;
  if ((int)v28 > 3)
  {
    long long v33 = *(float64x2_t **)(a2 + 264);
    uint64_t v34 = (v28 - 1) >> 1;
    uint64_t v35 = v33;
    float64x2_t v36 = (float64x2_t *)v192;
    do
    {
      float64x2_t v37 = *v35++;
      *v36++ = vmulq_n_f64(v37, v170.f64[0]);
      --v34;
    }
    while (v34);
    *(float64x2_t *)&v192[(v28 - 2)] = vmulq_n_f64(*(float64x2_t *)((char *)v33 + 8 * (v28 - 2)), v170.f64[0]);
  }
  else if ((int)v28 >= 1)
  {
    BOOL v29 = *(double **)(a2 + 264);
    BOOL v30 = v192;
    uint64_t v31 = (v27 * v26);
    do
    {
      double v32 = *v29++;
      *v30++ = v170.f64[0] * v32;
      --v31;
    }
    while (v31);
  }
  uint64_t v186 = 0x100000003;
  v24.f64[0] = (v23 + (double)v22) / v17;
  float64x2_t v171 = v24;
  v184 = off_100452C18;
  uint64_t v38 = __C;
  uint64_t v187 = __C;
  int v39 = *(_DWORD *)(a3 + 244);
  LODWORD(v185) = *(_DWORD *)(a3 + 240);
  DWORD1(v185) = v39;
  uint64_t v40 = (v39 * v185);
  *((void *)&v185 + 1) = __PAIR64__(v185, v40);
  if ((int)v40 > 3)
  {
    uint64_t v44 = (v40 - 2);
    float64x2_t v45 = *(float64x2_t **)(a3 + 264);
    uint64_t v46 = (v40 - 1) >> 1;
    uint64_t v47 = v45;
    uint64_t v48 = (float64x2_t *)__C;
    do
    {
      float64x2_t v49 = *v47++;
      *v48++ = vmulq_n_f64(v49, v24.f64[0]);
      --v46;
    }
    while (v46);
    *(float64x2_t *)&__C[v44] = vmulq_n_f64(*(float64x2_t *)((char *)v45 + 8 * v44), v24.f64[0]);
  }
  else if ((int)v40 >= 1)
  {
    double v41 = *(double **)(a3 + 264);
    uint64_t v42 = __C;
    do
    {
      double v43 = *v41++;
      *v42++ = v24.f64[0] * v43;
      --v40;
    }
    while (v40);
  }
  uint64_t v200 = 0x100000003;
  uint64_t v195 = off_100452C18;
  int v50 = v202;
  uint64_t v201 = v202;
  int v196 = v26;
  int v197 = v27;
  int v198 = v27 * v26;
  int v199 = v26;
  if ((int)v28 > 3)
  {
    uint64_t v56 = (v28 - 1) >> 1;
    uint64_t v57 = v192;
    uint64_t v58 = (float64x2_t *)__C;
    long long v59 = (float64x2_t *)v202;
    do
    {
      float64x2_t v60 = *(float64x2_t *)v57;
      v57 += 2;
      float64x2_t v61 = v60;
      float64x2_t v62 = *v58++;
      *v59++ = vaddq_f64(v61, v62);
      --v56;
    }
    while (v56);
    *(float64x2_t *)&v202[(v28 - 2)] = vaddq_f64(*(float64x2_t *)&v192[(v28 - 2)], *(float64x2_t *)&__C[(v28 - 2)]);
  }
  else if ((int)v28 >= 1)
  {
    uint64_t v51 = (double *)v202;
    uint64_t v52 = (v27 * v26);
    do
    {
      double v53 = *v25++;
      double v54 = v53;
      double v55 = *v38++;
      *v51++ = v54 + v55;
      --v52;
    }
    while (v52);
  }
  if ((uint64_t (***)())(a4 + 232) != &v195)
  {
    *(_DWORD *)(a4 + 240) = v26;
    *(_DWORD *)(a4 + 244) = v27;
    *(_DWORD *)(a4 + 248) = v28;
    *(_DWORD *)(a4 + 252) = v26;
    if ((int)v28 > 3)
    {
      int v65 = *(_OWORD **)(a4 + 264);
      uint64_t v66 = (v28 - 1) >> 1;
      int v67 = (long long *)v202;
      double v68 = v65;
      do
      {
        long long v69 = *v67++;
        *v68++ = v69;
        --v66;
      }
      while (v66);
      *(_OWORD *)((char *)v65 + 8 * (v28 - 2)) = *(_OWORD *)&v202[(v28 - 2)];
    }
    else if ((int)v28 >= 1)
    {
      uint64_t v63 = *(void **)(a4 + 264);
      do
      {
        uint64_t v64 = *v50++;
        *v63++ = v64;
        --v28;
      }
      while (v28);
    }
  }
  cnrotation::CNRotation::CNRotation((cnrotation::CNRotation *)v194);
  if (cnrotation::Slerp((cnrotation *)(a2 + 200), (const cnrotation::CNRotation *)(a3 + 200), (const cnrotation::CNRotation *)v194, v171.f64[0], (cnrotation::CNRotation *)8, v70))return 0; {
  cnrotation::CNRotation::operator=();
  }
  cnrotation::Inv((uint64_t *)v189, (cnrotation *)(a2 + 200), v71);
  cnrotation::Cat(v193, (cnrotation *)(a4 + 200), (const cnrotation::CNRotation *)v189, v72);
  cnrotation::CNRotation::RotationMatrix(&v181, (cnrotation::CNRotation *)v193);
  uint64_t v186 = 0x300000003;
  v184 = off_100452AF0;
  unsigned int v74 = __C;
  uint64_t v187 = __C;
  uint64_t __ldb = *(void *)(a2 + 304);
  uint64_t v76 = __ldc;
  uint64_t v77 = HIDWORD(__ldb);
  *(void *)&long long v185 = __PAIR64__(HIDWORD(__ldb), __ldc);
  DWORD2(v185) = HIDWORD(__ldb) * __ldc;
  v78.i64[0] = __ldc;
  v78.i64[1] = __ldb;
  HIDWORD(v185) = __ldc;
  uint64_t v79 = __A;
  uint64_t v80 = __ldb;
  if ((int)vmaxvq_u32(v78) > 5)
  {
    cblas_dgemm(CblasColMajor, CblasNoTrans, CblasNoTrans, __ldc, SHIDWORD(__ldb), SHIDWORD(__ldc), 1.0, __A, __ldc, *(const double **)(a2 + 328), __ldb, 0.0, __C, __ldc);
  }
  else if (HIDWORD(__ldb) && __ldc)
  {
    unint64_t v81 = HIDWORD(__ldc);
    if (HIDWORD(__ldc))
    {
      uint64_t v82 = *(double **)(a2 + 328);
      uint64_t v83 = 8 * __ldc;
      if (HIDWORD(__ldc) >= 4)
      {
        uint64_t v114 = 0;
        uint64_t v115 = HIDWORD(__ldc) & 0xFFFFFFFC;
        uint64_t v116 = 8 * __ldb;
        unint64_t v117 = 32 * ((unint64_t)HIDWORD(__ldc) >> 2);
        do
        {
          uint64_t v73 = (const cnrotation::CNRotation *)(v114 * v76);
          if (v76 == 1)
          {
            unint64_t v118 = 0;
            double v119 = 0.0;
            int v120 = (float64x2_t *)(v79 + 2);
            do
            {
              float64x2_t v121 = vmulq_f64(v120[-1], *(float64x2_t *)&v82[v118 / 8]);
              float64x2_t v122 = vmulq_f64(*v120, *(float64x2_t *)&v82[v118 / 8 + 2]);
              double v119 = v119 + v121.f64[0] + v121.f64[1] + v122.f64[0] + v122.f64[1];
              v118 += 32;
              v120 += 2 * v76;
            }
            while (v117 != v118);
            if (v115 != v81)
            {
              uint64_t v123 = &v79[4 * (v81 >> 2)];
              uint64_t v124 = v81 & 0xFFFFFFFC;
              do
              {
                double v119 = v119 + *v123 * v82[v124++];
                uint64_t v123 = (double *)((char *)v123 + v83);
              }
              while (v81 != v124);
            }
            __C[(void)v73] = v119;
          }
          else
          {
            uint64_t v125 = 0;
            double v126 = v79;
            do
            {
              double v127 = 0.0;
              __int16 v128 = v126;
              uint64_t v129 = v82;
              unint64_t v130 = v81;
              do
              {
                double v131 = *v129++;
                double v127 = v127 + *v128 * v131;
                __int16 v128 = (double *)((char *)v128 + v83);
                --v130;
              }
              while (v130);
              __C[(void)v73 + v125++] = v127;
              ++v126;
            }
            while (v125 != v76);
          }
          ++v114;
          uint64_t v82 = (double *)((char *)v82 + v116);
        }
        while (v114 != v77);
      }
      else
      {
        uint64_t v84 = 0;
        do
        {
          unint64_t v85 = 0;
          uint64_t v73 = (const cnrotation::CNRotation *)(v84 * v80 + 2);
          do
          {
            double v86 = v79[v85 / 8] * v82[v84 * v80] + 0.0;
            if (v81 != 1)
            {
              double v86 = v86 + v79[(unint64_t)v83 / 8 + v85 / 8] * v82[v84 * v80 + 1];
              if (v81 != 2) {
                double v86 = v86 + v79[2 * v76 + v85 / 8] * v82[(void)v73];
              }
            }
            v74[v85 / 8] = v86;
            v85 += 8;
          }
          while (v83 != v85);
          ++v84;
          unsigned int v74 = (double *)((char *)v74 + v83);
        }
        while (v84 != v77);
      }
    }
    else
    {
      bzero(__C, 8 * __ldc * (unint64_t)HIDWORD(__ldb));
    }
  }
  cnrotation::Inv(v174, (cnrotation *)v193, v73);
  cnrotation::CNRotation::RotationMatrix((uint64_t *)&v175, (cnrotation::CNRotation *)v174);
  uint64_t v190 = 0x300000003;
  *(void *)uint64_t v189 = off_100452AF0;
  long long v87 = v192;
  uint64_t v191 = v192;
  uint64_t v88 = v185;
  uint64_t v89 = DWORD1(v176);
  *(void *)&v189[8] = __PAIR64__(DWORD1(v176), v185);
  *(_DWORD *)&v189[16] = DWORD1(v176) * v185;
  v90.i64[0] = v185;
  v90.i64[1] = v176;
  *(_DWORD *)&v189[20] = v185;
  long long v91 = v187;
  uint64_t v92 = v176;
  if ((int)vmaxvq_u32(v90) > 5)
  {
    cblas_dgemm(CblasColMajor, CblasNoTrans, CblasNoTrans, v185, SDWORD1(v176), SDWORD1(v185), 1.0, v187, v185, __B, v176, 0.0, v192, v185);
  }
  else if (DWORD1(v176) && v185)
  {
    unint64_t v93 = DWORD1(v185);
    if (DWORD1(v185))
    {
      long long v94 = __B;
      uint64_t v95 = 8 * v185;
      if (DWORD1(v185) >= 4)
      {
        uint64_t v132 = 0;
        uint64_t v133 = DWORD1(v185) & 0xFFFFFFFC;
        uint64_t v134 = 8 * v176;
        unint64_t v135 = 32 * ((unint64_t)DWORD1(v185) >> 2);
        do
        {
          uint64_t v136 = v132 * v88;
          if (v88 == 1)
          {
            unint64_t v137 = 0;
            double v138 = 0.0;
            unint64_t v139 = (float64x2_t *)(v91 + 2);
            do
            {
              float64x2_t v140 = vmulq_f64(v139[-1], *(float64x2_t *)&v94[v137 / 8]);
              float64x2_t v141 = vmulq_f64(*v139, *(float64x2_t *)&v94[v137 / 8 + 2]);
              double v138 = v138 + v140.f64[0] + v140.f64[1] + v141.f64[0] + v141.f64[1];
              v137 += 32;
              v139 += 2 * v88;
            }
            while (v135 != v137);
            if (v133 != v93)
            {
              long long v142 = &v91[4 * (v93 >> 2)];
              uint64_t v143 = v93 & 0xFFFFFFFC;
              do
              {
                double v138 = v138 + *v142 * v94[v143++];
                long long v142 = (double *)((char *)v142 + v95);
              }
              while (v93 != v143);
            }
            v192[v136] = v138;
          }
          else
          {
            uint64_t v144 = 0;
            uint64_t v145 = v91;
            do
            {
              double v146 = 0.0;
              int v147 = v145;
              uint64_t v148 = v94;
              unint64_t v149 = v93;
              do
              {
                double v150 = *v148++;
                double v146 = v146 + *v147 * v150;
                int v147 = (double *)((char *)v147 + v95);
                --v149;
              }
              while (v149);
              v192[v144 + v136] = v146;
              ++v144;
              ++v145;
            }
            while (v144 != v88);
          }
          ++v132;
          long long v94 = (double *)((char *)v94 + v134);
        }
        while (v132 != v89);
      }
      else
      {
        uint64_t v96 = 0;
        do
        {
          unint64_t v97 = 0;
          do
          {
            double v98 = v91[v97 / 8] * v94[v96 * v92] + 0.0;
            if (v93 != 1)
            {
              double v98 = v98 + v91[(unint64_t)v95 / 8 + v97 / 8] * v94[v96 * v92 + 1];
              if (v93 != 2) {
                double v98 = v98 + v91[2 * v88 + v97 / 8] * v94[v96 * v92 + 2];
              }
            }
            v87[v97 / 8] = v98;
            v97 += 8;
          }
          while (v95 != v97);
          ++v96;
          long long v87 = (double *)((char *)v87 + v95);
        }
        while (v96 != v89);
      }
    }
    else
    {
      bzero(v192, 8 * v185 * (unint64_t)DWORD1(v176));
    }
  }
  if ((cntransformation::CNRigidTransformation::SetPrr() & 1) == 0) {
    return 0;
  }
  cnrotation::CNRotation::RotationMatrix((uint64_t *)&v184, (cnrotation::CNRotation *)v193);
  uint64_t v190 = 0x300000003;
  *(void *)uint64_t v189 = off_100452AF0;
  __int16 v99 = v192;
  uint64_t v191 = v192;
  uint64_t v100 = *(void *)(a2 + 528);
  uint64_t v101 = v185;
  uint64_t v102 = HIDWORD(v100);
  *(void *)&v189[8] = __PAIR64__(HIDWORD(v100), v185);
  *(_DWORD *)&v189[16] = HIDWORD(v100) * v185;
  v103.i64[0] = v185;
  v103.i64[1] = v100;
  *(_DWORD *)&v189[20] = v185;
  uint64_t v104 = v187;
  uint64_t v105 = v100;
  if ((int)vmaxvq_u32(v103) > 5)
  {
    cblas_dgemm(CblasColMajor, CblasNoTrans, CblasNoTrans, v185, SHIDWORD(v100), SDWORD1(v185), 1.0, v187, v185, *(const double **)(a2 + 552), v100, 0.0, v192, v185);
  }
  else if (HIDWORD(v100) && v185)
  {
    unint64_t v106 = DWORD1(v185);
    if (DWORD1(v185))
    {
      uint64_t v107 = *(double **)(a2 + 552);
      uint64_t v108 = 8 * v185;
      if (DWORD1(v185) >= 4)
      {
        uint64_t v151 = 0;
        uint64_t v152 = DWORD1(v185) & 0xFFFFFFFC;
        uint64_t v153 = 8 * v100;
        unint64_t v154 = 32 * ((unint64_t)DWORD1(v185) >> 2);
        do
        {
          uint64_t v155 = v151 * v101;
          if (v101 == 1)
          {
            unint64_t v156 = 0;
            double v157 = 0.0;
            uint64_t v158 = (float64x2_t *)(v104 + 2);
            do
            {
              float64x2_t v159 = vmulq_f64(v158[-1], *(float64x2_t *)&v107[v156 / 8]);
              float64x2_t v160 = vmulq_f64(*v158, *(float64x2_t *)&v107[v156 / 8 + 2]);
              double v157 = v157 + v159.f64[0] + v159.f64[1] + v160.f64[0] + v160.f64[1];
              v156 += 32;
              v158 += 2 * v101;
            }
            while (v154 != v156);
            if (v152 != v106)
            {
              uint64_t v161 = &v104[4 * (v106 >> 2)];
              uint64_t v162 = v106 & 0xFFFFFFFC;
              do
              {
                double v157 = v157 + *v161 * v107[v162++];
                uint64_t v161 = (double *)((char *)v161 + v108);
              }
              while (v106 != v162);
            }
            v192[v155] = v157;
          }
          else
          {
            uint64_t v163 = 0;
            int v164 = v104;
            do
            {
              double v165 = 0.0;
              int v166 = v164;
              int v167 = v107;
              unint64_t v168 = v106;
              do
              {
                double v169 = *v167++;
                double v165 = v165 + *v166 * v169;
                int v166 = (double *)((char *)v166 + v108);
                --v168;
              }
              while (v168);
              v192[v163 + v155] = v165;
              ++v163;
              ++v164;
            }
            while (v163 != v101);
          }
          ++v151;
          uint64_t v107 = (double *)((char *)v107 + v153);
        }
        while (v151 != v102);
      }
      else
      {
        uint64_t v109 = 0;
        do
        {
          unint64_t v110 = 0;
          do
          {
            double v111 = v104[v110 / 8] * v107[v109 * v105] + 0.0;
            if (v106 != 1)
            {
              double v111 = v111 + v104[(unint64_t)v108 / 8 + v110 / 8] * v107[v109 * v105 + 1];
              if (v106 != 2) {
                double v111 = v111 + v104[2 * v101 + v110 / 8] * v107[v109 * v105 + 2];
              }
            }
            v99[v110 / 8] = v111;
            v110 += 8;
          }
          while (v108 != v110);
          ++v109;
          __int16 v99 = (double *)((char *)v99 + v108);
        }
        while (v109 != v102);
      }
    }
    else
    {
      bzero(v192, 8 * v185 * (unint64_t)HIDWORD(v100));
    }
  }
  cntransformation::CNRigidTransformation::SetPrp();
  uint64_t v190 = 0x300000003;
  *(void *)uint64_t v189 = off_100452AF0;
  uint64_t v191 = v192;
  *(_OWORD *)&v189[8] = xmmword_1003E6950;
  memset(v192, 0, sizeof(v192));
  if (!sub_1000D6200(a2 + 408, (uint64_t)v189)) {
    return 0;
  }
  uint64_t v186 = 0x300000003;
  v184 = off_100452AF0;
  uint64_t v187 = __C;
  long long v185 = xmmword_1003E6950;
  memset(__C, 0, sizeof(__C));
  if (!sub_1000D6200(a3 + 408, (uint64_t)&v184)) {
    return 0;
  }
  sub_1000D6480((uint64_t)v189, (uint64_t)&v175, v170);
  sub_1000D6480((uint64_t)&v184, (uint64_t)v174, v171);
  sub_1000D63C0((uint64_t)&v175, (uint64_t)v174, (uint64_t)&v181);
  uint64_t v177 = 0x300000003;
  uint64_t v175 = off_100452AF0;
  __B = (double *)v179;
  long long v176 = xmmword_1003E6950;
  memset(v179, 0, sizeof(v179));
  uint64_t v180 = 0;
  BOOL result = sub_1000D6200((uint64_t)&v181, (uint64_t)&v175);
  if (!result) {
    return result;
  }
  if ((cntransformation::CNRigidTransformation::SetPpp() & 1) == 0) {
    return 0;
  }
  BOOL result = 1;
  if (*(unsigned char *)(a2 + 1081) && *(unsigned char *)(a3 + 1081))
  {
    sub_1000D6154(a2 + 672, (uint64_t)v173, v170);
    sub_1000D6154(a3 + 672, (uint64_t)v172, v171);
    sub_1000D6090((uint64_t)v173, (uint64_t)v172, (uint64_t)v174);
    sub_1000C72C4(a4 + 640, (uint64_t)v174);
    cnrotation::CNRotation::CNRotation((cnrotation::CNRotation *)v173);
    if (!cnrotation::Slerp((cnrotation *)(a2 + 640), (const cnrotation::CNRotation *)(a3 + 640), (const cnrotation::CNRotation *)v173, v171.f64[0], (cnrotation::CNRotation *)8, v113))
    {
      cnrotation::CNRotation::operator=();
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL sub_1000D4E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a2 + 640;
  uint64_t v7 = (cntransformation *)(a2 + 200);
  cntransformation::Cat(v171, (cntransformation *)(a2 + 640), (const cntransformation::CNRigidTransformation *)(a2 + 200), (const cntransformation::CNRigidTransformation *)a3);
  cntransformation::CNRigidTransformation::CNRigidTransformation((cntransformation::CNRigidTransformation *)v170);
  uint64_t v163 = 0x300000003;
  uint64_t v161 = off_100452AF0;
  int v164 = v165;
  long long v162 = xmmword_1003E6950;
  v165[0] = 0;
  uint64_t v167 = 0;
  *(_OWORD *)&v168[8] = 0u;
  long long v166 = 0u;
  uint64_t v169 = 0;
  v165[1] = 0x3FF0000000000000;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)unint64_t v168 = _Q0;
  sub_1000C8470(&v160, (uint64_t)&v161);
  cnrotation::CNRotation::operator=();
  cntransformation::Cat(v159, (cntransformation *)(a3 + 200), (const cntransformation::CNRigidTransformation *)v170, v13);
  cntransformation::Cat((uint64_t *)buf, (cntransformation *)v159, (const cntransformation::CNRigidTransformation *)v171, v14);
  sub_1000C6578(a1 + 2240, (uint64_t)buf);
  *(unsigned char *)(a1 + 26) = 1;
  sub_1000CFB2C((cnrotation::CNRotation *)buf, v6);
  cntransformation::Inv((uint64_t *)&v172, (cntransformation *)buf, v15);
  if ((_DWORD **)(a1 + 4064) != &v176)
  {
    int v17 = v177[0];
    int v18 = v177[1];
    *(_DWORD *)(a1 + 4072) = v177[0];
    *(_DWORD *)(a1 + 4076) = v18;
    uint64_t v19 = (v18 * v17);
    *(_DWORD *)(a1 + 4080) = v19;
    *(_DWORD *)(a1 + 4084) = v17;
    if (v178 > 3)
    {
      uint64_t v32 = (v178 - 2);
      long long v33 = *(_OWORD **)(a1 + 4096);
      uint64_t v34 = v179;
      uint64_t v35 = (v178 - 1) >> 1;
      float64x2_t v36 = v179;
      float64x2_t v37 = v33;
      do
      {
        long long v38 = *v36++;
        *v37++ = v38;
        --v35;
      }
      while (v35);
      *(_OWORD *)((char *)v33 + 8 * v32) = *(_OWORD *)((char *)v34 + 8 * v32);
    }
    else if ((int)v19 >= 1)
    {
      uint64_t v20 = 0;
      float64x2_t v21 = v179;
      uint64_t v22 = *(void *)(a1 + 4096);
      if (v19 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v22 - (void)v179) < 0x20) {
        goto LABEL_9;
      }
      uint64_t v20 = v19 & 0x7FFFFFFC;
      double v23 = v179 + 1;
      float64x2_t v24 = (_OWORD *)(v22 + 16);
      uint64_t v25 = v19 & 0xFFFFFFFC;
      do
      {
        long long v26 = *v23;
        *(v24 - 1) = *(v23 - 1);
        _OWORD *v24 = v26;
        v23 += 2;
        v24 += 2;
        v25 -= 4;
      }
      while (v25);
      if (v20 != v19)
      {
LABEL_9:
        uint64_t v27 = v19 - v20;
        uint64_t v28 = 8 * v20;
        BOOL v29 = (void *)(v22 + v28);
        BOOL v30 = (uint64_t *)((char *)v21 + v28);
        do
        {
          uint64_t v31 = *v30++;
          *v29++ = v31;
          --v27;
        }
        while (v27);
      }
    }
  }
  uint64_t v154 = 0x100000003;
  uint64_t v152 = off_100452C18;
  uint64_t v155 = &v156;
  long long v153 = xmmword_1003E69E0;
  uint64_t v158 = 0;
  uint64_t v156 = 0;
  uint64_t v157 = 0;
  long long v183 = xmmword_1003E69E0;
  int v39 = v184;
  void *v184 = 0;
  v39[1] = v157;
  v39[2] = v158;
  cntransformation::Cat((uint64_t *)&v145, (cntransformation *)v159, (const cntransformation::CNRigidTransformation *)buf, v16);
  sub_1000C6578(a1 + 3120, (uint64_t)&v145);
  *(unsigned char *)(a1 + 28) = 1;
  int v40 = *(_DWORD *)(a1 + 2280);
  int v41 = *(_DWORD *)(a1 + 2284);
  *(_DWORD *)(a1 + 4008) = v40;
  *(_DWORD *)(a1 + 4012) = v41;
  uint64_t v42 = (v41 * v40);
  *(_DWORD *)(a1 + 4016) = v42;
  *(_DWORD *)(a1 + 4020) = v40;
  int v43 = *(_DWORD *)(a1 + 2288);
  if (v43 > 3)
  {
    uint64_t v56 = (v43 - 2);
    uint64_t v57 = *(_OWORD **)(a1 + 4032);
    uint64_t v58 = *(long long **)(a1 + 2304);
    uint64_t v59 = (v43 - 1) >> 1;
    float64x2_t v60 = v58;
    float64x2_t v61 = v57;
    do
    {
      long long v62 = *v60++;
      *v61++ = v62;
      --v59;
    }
    while (v59);
    *(_OWORD *)((char *)v57 + 8 * v++*(_DWORD *)(result + 56) = *(long long *)((char *)v58 + 8 * v56);
  }
  else if ((int)v42 >= 1)
  {
    uint64_t v44 = 0;
    uint64_t v45 = *(void *)(a1 + 2304);
    uint64_t v46 = *(void *)(a1 + 4032);
    if (v42 < 4) {
      goto LABEL_22;
    }
    if ((unint64_t)(v46 - v45) < 0x20) {
      goto LABEL_22;
    }
    uint64_t v44 = v42 & 0x7FFFFFFC;
    uint64_t v47 = (long long *)(v45 + 16);
    uint64_t v48 = (_OWORD *)(v46 + 16);
    uint64_t v49 = v42 & 0xFFFFFFFC;
    do
    {
      long long v50 = *v47;
      *(v48 - 1) = *(v47 - 1);
      *uint64_t v48 = v50;
      v47 += 2;
      v48 += 2;
      v49 -= 4;
    }
    while (v49);
    if (v44 != v42)
    {
LABEL_22:
      uint64_t v51 = v42 - v44;
      uint64_t v52 = 8 * v44;
      double v53 = (void *)(v46 + v52);
      double v54 = (uint64_t *)(v45 + v52);
      do
      {
        uint64_t v55 = *v54++;
        *v53++ = v55;
        --v51;
      }
      while (v51);
    }
  }
  *(unsigned char *)(a1 + 24) = 1;
  uint64_t v63 = *(long long **)(a1 + 2304);
  uint64_t v64 = *((void *)v63 + 2);
  uint64_t v149 = 0x300000003;
  int v147 = off_100452AF0;
  long long v148 = xmmword_1003E6950;
  double v150 = &v151;
  unsigned __int8 v146 = 0;
  long long v65 = *v63;
  double v173 = 0.0;
  double v172 = 0.0;
  unint64_t v174 = 0;
  *(_OWORD *)std::string buf = v65;
  *(void *)&uint8_t buf[16] = v64;
  if (!cnnavigation::ECEFToLLA()) {
    ((void (*)(void (***)(char **), double, double))v145[2])(&v145, v172, v173);
  }
  int v66 = v146;
  if (v146)
  {
    if (&v147 != (uint64_t (***)())(a1 + 4128))
    {
      int v68 = v148;
      int v67 = DWORD1(v148);
      *(_DWORD *)(a1 + 4136) = v148;
      *(_DWORD *)(a1 + 4140) = v67;
      uint64_t v69 = (v67 * v68);
      *(_DWORD *)(a1 + 4144) = v69;
      *(_DWORD *)(a1 + 4148) = v68;
      int v70 = DWORD2(v148);
      if (SDWORD2(v148) > 3)
      {
        long long v87 = *(_OWORD **)(a1 + 4160);
        uint64_t v88 = v150;
        uint64_t v89 = (DWORD2(v148) - 1) >> 1;
        uint32x4_t v90 = (long long *)v150;
        long long v91 = v87;
        do
        {
          long long v92 = *v90++;
          *v91++ = v92;
          --v89;
        }
        while (v89);
        *(_OWORD *)((char *)v87 + 8 * (v70 - 2)) = *(_OWORD *)&v88[v70 - 2];
      }
      else if ((int)v69 >= 1)
      {
        uint64_t v71 = 0;
        double v72 = v150;
        uint64_t v73 = *(void *)(a1 + 4160);
        if (v69 < 4) {
          goto LABEL_39;
        }
        if ((unint64_t)(v73 - (void)v150) < 0x20) {
          goto LABEL_39;
        }
        uint64_t v71 = v69 & 0x7FFFFFFC;
        unsigned int v74 = (long long *)(v150 + 2);
        unint64_t v75 = (_OWORD *)(v73 + 16);
        uint64_t v76 = v69 & 0xFFFFFFFC;
        do
        {
          long long v77 = *v74;
          *(v75 - 1) = *(v74 - 1);
          _OWORD *v75 = v77;
          v74 += 2;
          v75 += 2;
          v76 -= 4;
        }
        while (v76);
        if (v71 != v69)
        {
LABEL_39:
          uint64_t v78 = v69 - v71;
          uint64_t v79 = v71;
          uint64_t v80 = (void *)(v73 + v79 * 8);
          unint64_t v81 = &v72[v79];
          do
          {
            uint64_t v82 = *v81++;
            *v80++ = v82;
            --v78;
          }
          while (v78);
        }
      }
    }
    *(unsigned char *)(a1 + 25) = 1;
    uint64_t v154 = 0x100000003;
    long long v153 = xmmword_1003E69E0;
    uint64_t v152 = off_100452C18;
    uint64_t v155 = &v156;
    sub_1000C2808(a1 + 4128, a1 + 2272, (uint64_t)&v152);
    sub_1000C8470(&v144, a1 + 4128);
    cntransformation::CNRigidTransformation::CNRigidTransformation((cntransformation::CNRigidTransformation *)buf);
    cnrotation::CNRotation::operator=();
    uint64_t v141 = 0x100000003;
    unint64_t v139 = off_100452C18;
    long long v140 = xmmword_1003E69E0;
    long long v142 = &v143;
    sub_1000C2808(a1 + 4128, a1 + 2272, (uint64_t)&v139);
    uint64_t v175 = 0x100000003;
    long long v94 = (uint64_t *)v177;
    long long v176 = v177;
    unsigned int v95 = v153;
    unsigned int v96 = DWORD1(v153);
    double v173 = *(double *)&v153;
    uint64_t v97 = (DWORD1(v153) * v153);
    unint64_t v174 = __PAIR64__(v153, v97);
    if ((int)v97 > 3)
    {
      uint64_t v107 = v155;
      uint64_t v108 = v142;
      uint64_t v109 = (v97 - 1) >> 1;
      unint64_t v110 = (float64x2_t *)v155;
      double v111 = (float64x2_t *)v142;
      int v112 = (float64x2_t *)v177;
      do
      {
        float64x2_t v113 = *v110++;
        float64x2_t v114 = v113;
        float64x2_t v115 = *v111++;
        *v112++ = vsubq_f64(v114, v115);
        --v109;
      }
      while (v109);
      *(float64x2_t *)&v177[2 * (v97 - 2)] = vsubq_f64(*(float64x2_t *)&v107[(v97 - 2)], *(float64x2_t *)&v108[(v97 - 2)]);
      *(void *)&long long v183 = __PAIR64__(v96, v95);
      *((void *)&v183 + 1) = __PAIR64__(v95, v97);
      uint64_t v116 = v184;
      uint64_t v117 = (v97 - 1) >> 1;
      unint64_t v118 = (long long *)v177;
      double v119 = v184;
      do
      {
        long long v120 = *v118++;
        *v119++ = v120;
        --v117;
      }
      while (v117);
      *(_OWORD *)&v116[(v97 - 2)] = *(_OWORD *)&v177[2 * (v97 - 2)];
    }
    else if ((int)v97 <= 0)
    {
      *(void *)&long long v183 = v153;
      *((void *)&v183 + 1) = __PAIR64__(v153, v97);
    }
    else
    {
      double v98 = (double *)v155;
      __int16 v99 = (double *)v142;
      uint64_t v100 = (double *)v177;
      uint64_t v101 = (DWORD1(v153) * v153);
      do
      {
        double v102 = *v98++;
        double v103 = v102;
        double v104 = *v99++;
        *v100++ = v103 - v104;
        --v101;
      }
      while (v101);
      *(void *)&long long v183 = __PAIR64__(v96, v95);
      *((void *)&v183 + 1) = __PAIR64__(v95, v97);
      uint64_t v105 = v184;
      do
      {
        uint64_t v106 = *v94++;
        *v105++ = v106;
        --v97;
      }
      while (v97);
    }
    cntransformation::Cat((uint64_t *)&v172, (cntransformation *)buf, (const cntransformation::CNRigidTransformation *)(a1 + 2240), v93);
    sub_1000C6578(a1 + 2680, (uint64_t)&v172);
    *(unsigned char *)(a1 + 27) = 1;
    cnnavigation::ECEFToENUJacobian::~ECEFToENUJacobian((cnnavigation::ECEFToENUJacobian *)&v145);
    float64x2_t v122 = (unsigned char *)(a2 + 232);
    uint64_t v181 = 0x100000003;
    uint64_t v123 = &v183;
    uint64_t v182 = &v183;
    int v124 = *(_DWORD *)(a2 + 240);
    int v125 = *(_DWORD *)(a2 + 244);
    *(_DWORD *)&buf[8] = v124;
    *(_DWORD *)&unsigned char buf[12] = v125;
    uint64_t v126 = (v125 * v124);
    *(_DWORD *)&uint8_t buf[16] = v126;
    *(_DWORD *)&buf[20] = v124;
    if ((int)v126 > 3)
    {
      uint64_t v130 = 0;
      __int16 v128 = *(void **)(a2 + 264);
      uint64_t v131 = *(void *)(a1 + 4096);
      do
      {
        *(&v183 + v130) = (__int128)vsubq_f64(*(float64x2_t *)&v128[2 * v130], *(float64x2_t *)(v131 + 16 * v130));
        ++v130;
      }
      while ((v126 - 1) >> 1 != v130);
      *(long long *)((char *)&v183 + 8 * (v126 - 2)) = (__int128)vsubq_f64(*(float64x2_t *)&v128[(v126 - 2)], *(float64x2_t *)(v131+ 8* (v126 - 2)));
      if (v122 == buf) {
        goto LABEL_79;
      }
    }
    else
    {
      if ((int)v126 < 1)
      {
        if (v122 != buf)
        {
          *(_DWORD *)(a2 + 240) = v124;
          *(_DWORD *)(a2 + 244) = v125;
          *(_DWORD *)(a2 + 248) = v126;
          *(_DWORD *)(a2 + 252) = v124;
        }
        goto LABEL_79;
      }
      uint64_t v127 = 0;
      __int16 v128 = *(void **)(a2 + 264);
      uint64_t v129 = *(void *)(a1 + 4096);
      do
      {
        *(double *)((char *)&v183 + v127 * 8) = *(double *)&v128[v127] - *(double *)(v129 + v127 * 8);
        ++v127;
      }
      while (v125 * v124 != v127);
      if (v122 == buf)
      {
LABEL_79:
        cntransformation::Inv((uint64_t *)buf, v7, v121);
        cntransformation::Cat((uint64_t *)&v172, (cntransformation *)(a1 + 2680), (const cntransformation::CNRigidTransformation *)buf, v137);
        sub_1000C6578(a1 + 3560, (uint64_t)&v172);
        return v66 != 0;
      }
    }
    *(_DWORD *)(a2 + 240) = v124;
    *(_DWORD *)(a2 + 244) = v125;
    *(_DWORD *)(a2 + 248) = v126;
    *(_DWORD *)(a2 + 252) = v124;
    if ((int)v126 > 3)
    {
      uint64_t v133 = (v126 - 1) >> 1;
      uint64_t v134 = &v183;
      unint64_t v135 = v128;
      do
      {
        long long v136 = *v134++;
        *v135++ = v136;
        --v133;
      }
      while (v133);
      *(_OWORD *)&v128[(v126 - 2)] = *(long long *)((char *)&v183 + 8 * (v126 - 2));
    }
    else
    {
      do
      {
        uint64_t v132 = *(void *)v123;
        uint64_t v123 = (long long *)((char *)v123 + 8);
        *v128++ = v132;
        --v126;
      }
      while (v126);
    }
    goto LABEL_79;
  }
  if (qword_10047BED8 != -1)
  {
    dispatch_once(&qword_10047BED8, &stru_100453898);
    uint64_t v83 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  uint64_t v83 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG))
  {
LABEL_44:
    uint64_t v84 = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 16))(a3);
    double v85 = *(double *)(a3 + 112) + (double)*(uint64_t *)(a3 + 104);
    *(_DWORD *)std::string buf = 134349312;
    *(double *)&uint8_t buf[4] = v86 + (double)v84;
    *(_WORD *)&unsigned char buf[12] = 2050;
    *(double *)&buf[14] = v85;
    _os_log_impl((void *)&_mh_execute_header, v83, OS_LOG_TYPE_DEBUG, "vio-vl-sync, vl_evt_t, %{public}.3lf, vl_app_t, %{public}.3lf, VLF position Jecef2enu computation failed.", buf, 0x16u);
  }
LABEL_45:
  cnnavigation::ECEFToENUJacobian::~ECEFToENUJacobian((cnnavigation::ECEFToENUJacobian *)&v145);
  return v66 != 0;
}

void sub_1000D58B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_1000D58D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_1000D58E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_1000D58F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_1000D590C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_1000D5920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_1000D5934(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_1000D5948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void sub_1000D5974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
}

void *sub_1000D598C(void *result)
{
  result[120] = off_100452B48;
  result[106] = off_100452B48;
  result[92] = off_100452B48;
  result[84] = off_100452B48;
  result[65] = off_100452B48;
  result[51] = off_100452B48;
  result[37] = off_100452B48;
  result[29] = off_100452B48;
  return result;
}

void sub_1000D5A90(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (!*(unsigned char *)(a1 + 28)) {
    goto LABEL_15;
  }
  if (*(unsigned char *)(a1 + 1136))
  {
    *(void *)&long long v50 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 16))(a2);
    *((void *)&v50 + 1) = v6;
    if (!*(unsigned char *)(a1 + 1136)) {
      sub_1000C356C();
    }
    uint64_t v39 = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
    unint64_t v40 = v7;
    uint64_t v8 = CNTimeSpan::operator-();
    if (v9 + (double)v8 < *(double *)(a1 + 16)) {
      goto LABEL_15;
    }
  }
  long long v10 = *(_OWORD *)(a2 + 248);
  char v62 = *(unsigned char *)(a2 + 296);
  long long v11 = *(_OWORD *)(a2 + 184);
  long long v12 = *(_OWORD *)(a2 + 216);
  long long v56 = *(_OWORD *)(a2 + 200);
  long long v57 = v12;
  long long v58 = *(_OWORD *)(a2 + 232);
  long long v59 = v10;
  long long v13 = *(_OWORD *)(a2 + 120);
  long long v14 = *(_OWORD *)(a2 + 152);
  long long v52 = *(_OWORD *)(a2 + 136);
  long long v53 = v14;
  long long v54 = *(_OWORD *)(a2 + 168);
  long long v55 = v11;
  long long v50 = *(_OWORD *)(a2 + 104);
  long long v51 = v13;
  long long v15 = *(_OWORD *)(a2 + 280);
  long long v60 = *(_OWORD *)(a2 + 264);
  long long v61 = v15;
  sub_1000CFB2C((cnrotation::CNRotation *)v63, a2 + 304);
  sub_1000CFB2C((cnrotation::CNRotation *)v68, a2 + 744);
  v68[220] = *(_WORD *)(a2 + 1184);
  char v69 = *(unsigned char *)(a2 + 1186);
  long long v49 = v50;
  double v16 = (unsigned char *)(a1 + 4256);
  if (*(unsigned char *)(a1 + 4256))
  {
    uint64_t v17 = CNTimeSpan::operator-();
    if (v18 + (double)v17 + (v18 + (double)v17) * 0.05 <= *(double *)(a1 + 16)) {
      goto LABEL_15;
    }
  }
  if ((sub_1000D3760((uint64_t)&v50) & 1) == 0)
  {
LABEL_15:
    *a3 = 0;
    a3[360] = 0;
  }
  else
  {
    uint64_t v43 = 0x100000003;
    uint64_t v20 = (uint64_t *)v45;
    uint64_t v44 = v45;
    unsigned int v21 = v64;
    unsigned int v22 = HIDWORD(v64);
    unint64_t v40 = v64;
    uint64_t v23 = (HIDWORD(v64) * v64);
    int v41 = v23;
    int v42 = v64;
    if ((int)v23 > 3)
    {
      uint64_t v28 = 0;
      BOOL v29 = v67;
      uint64_t v30 = *(void *)(a1 + 4096);
      do
      {
        *(float64x2_t *)&v45[16 * v28] = vsubq_f64((float64x2_t)v29[v28], *(float64x2_t *)(v30 + 16 * v28));
        ++v28;
      }
      while ((v23 - 1) >> 1 != v28);
      *(float64x2_t *)&v45[8 * (v23 - 2)] = vsubq_f64(*(float64x2_t *)((char *)v29 + 8 * (v23 - 2)), *(float64x2_t *)(v30 + 8 * (v23 - 2)));
      unint64_t v64 = __PAIR64__(v22, v21);
      int v65 = v23;
      int v66 = v21;
      uint64_t v31 = (v23 - 1) >> 1;
      uint64_t v32 = (long long *)v45;
      long long v33 = v29;
      do
      {
        long long v34 = *v32++;
        *v33++ = v34;
        --v31;
      }
      while (v31);
      *(_OWORD *)((char *)v29 + 8 * (v23 - 2)) = *(_OWORD *)&v45[8 * (v23 - 2)];
    }
    else if ((int)v23 <= 0)
    {
      int v65 = HIDWORD(v64) * v64;
      int v66 = v64;
    }
    else
    {
      uint64_t v24 = 0;
      uint64_t v25 = v67;
      uint64_t v26 = *(void *)(a1 + 4096);
      do
      {
        *(double *)&v45[v24 * 8] = *(double *)&v25[v24] - *(double *)(v26 + v24 * 8);
        ++v24;
      }
      while (v23 != v24);
      unint64_t v64 = __PAIR64__(v22, v21);
      int v65 = v23;
      int v66 = v21;
      do
      {
        uint64_t v27 = *v20++;
        *v25++ = v27;
        --v23;
      }
      while (v23);
    }
    cntransformation::Cat(&v39, (cntransformation *)(a1 + 3120), (const cntransformation::CNRigidTransformation *)v63, v19);
    memset(v38, 0, sizeof(v38));
    sub_1000BEDD0((int64x2_t *)v38);
    *(_OWORD *)&v38[88] = v55;
    *(_OWORD *)&v38[72] = v54;
    *(_OWORD *)&v38[56] = v53;
    *(_OWORD *)&v38[40] = v52;
    *(_OWORD *)&v38[8] = v50;
    *(_OWORD *)&v38[24] = v51;
    *(_OWORD *)&v38[184] = v55;
    *(_OWORD *)&v38[168] = v54;
    *(_OWORD *)&v38[152] = v53;
    *(_OWORD *)&v38[136] = v52;
    *(_OWORD *)&v38[104] = v50;
    *(_OWORD *)&v38[120] = v51;
    v38[200] = 15;
    *(_OWORD *)&v38[288] = *(_OWORD *)v46;
    *(void *)&v38[304] = *(void *)(v46 + 16);
    *(void *)&v38[312] = *v48;
    uint64_t v35 = &v48[v47];
    *(void *)&v38[320] = *v35;
    *(void *)&v38[328] = v48[2 * v47];
    *(void *)&v38[336] = v35[1];
    float64x2_t v36 = &v48[2 * v47];
    *(void *)&v38[344] = v36[1];
    *(void *)&v38[352] = v36[2];
    v38[280] = 1;
    if (sub_1000BF27C((uint64_t)v38)) {
      sub_1000BFCD0((uint64_t)v38);
    }
    int v37 = *v16;
    *(_OWORD *)(a1 + 4240) = v49;
    if (!v37) {
      *double v16 = 1;
    }
    *(void *)a3 = &off_100453138;
    memcpy(a3 + 8, &v38[8], 0x160uLL);
    a3[360] = 1;
    cnframework::TimestampedEvent::~TimestampedEvent((cnframework::TimestampedEvent *)v38);
  }
}

void sub_1000D5F20(_Unwind_Exception *a1)
{
}

void sub_1000D5F34(_Unwind_Exception *a1)
{
}

void sub_1000D5F48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1000D5F64(_Unwind_Exception *a1)
{
}

void sub_1000D5F78(_Unwind_Exception *a1)
{
}

double sub_1000D5F8C(uint64_t a1)
{
  cnrotation::CNRotation::CNRotation((cnrotation::CNRotation *)v10);
  cnrotation::CNRotation::operator=();
  *(_OWORD *)(a1 + 40) = xmmword_1003E69E0;
  uint64_t v2 = *(void *)(a1 + 64);
  *(void *)uint64_t v2 = 0;
  *(_OWORD *)(v2 + 8) = 0u;
  memset(v10, 0, 24);
  *(_OWORD *)(a1 + 104) = xmmword_1003E6950;
  uint64_t v3 = *(_OWORD **)(a1 + 128);
  _OWORD *v3 = 0u;
  v3[1] = 0u;
  long long v4 = v10[0];
  void v3[2] = 0u;
  void v3[3] = v4;
  *(_OWORD *)((char *)v3 + ++*(_DWORD *)(result + 56) = *(_OWORD *)((char *)v10 + 8);
  memset(v10, 0, 24);
  *(_OWORD *)(a1 + 216) = xmmword_1003E6950;
  uint64_t v5 = *(_OWORD **)(a1 + 240);
  *uint64_t v5 = 0u;
  v5[1] = 0u;
  long long v6 = v10[0];
  v5[2] = 0u;
  v5[3] = v6;
  *(_OWORD *)((char *)v5 + ++*(_DWORD *)(result + 56) = *(_OWORD *)((char *)v10 + 8);
  memset(v10, 0, 24);
  *(_OWORD *)(a1 + 328) = xmmword_1003E6950;
  unint64_t v7 = *(_OWORD **)(a1 + 352);
  _OWORD *v7 = 0u;
  v7[1] = 0u;
  long long v8 = v10[0];
  void v7[2] = 0u;
  v7[3] = v8;
  double result = *((double *)v10 + 1);
  *(_OWORD *)((char *)v7 + ++*(_DWORD *)(result + 56) = *(_OWORD *)((char *)v10 + 8);
  *(unsigned char *)(a1 + 432) = 0;
  return result;
}

float64x2_t sub_1000D6090@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&result.f64[0] = 0x100000003;
  *(void *)(a3 + 24) = 0x100000003;
  *(void *)a3 = off_100452C18;
  long long v4 = (float64_t *)(a3 + 40);
  *(void *)(a3 + 32) = a3 + 40;
  int v6 = *(_DWORD *)(a1 + 8);
  int v5 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a3 + 8) = v6;
  *(_DWORD *)(a3 + 12) = v5;
  uint64_t v7 = (v5 * v6);
  *(_DWORD *)(a3 + 16) = v7;
  *(_DWORD *)(a3 + 20) = v6;
  if ((int)v7 > 3)
  {
    uint64_t v13 = (v7 - 2);
    long long v14 = *(float64x2_t **)(a1 + 32);
    long long v15 = *(float64x2_t **)(a2 + 32);
    double v16 = (float64x2_t *)((char *)v15 + 8 * v13);
    uint64_t v17 = (v7 - 1) >> 1;
    double v18 = v14;
    uint64_t v19 = (float64x2_t *)v4;
    do
    {
      float64x2_t v20 = *v18++;
      float64x2_t v21 = v20;
      float64x2_t v22 = *v15++;
      *v19++ = vaddq_f64(v21, v22);
      --v17;
    }
    while (v17);
    float64x2_t result = vaddq_f64(*(float64x2_t *)((char *)v14 + 8 * v13), *v16);
    *(float64x2_t *)&v4[v13] = result;
  }
  else if ((int)v7 >= 1)
  {
    long long v8 = *(double **)(a1 + 32);
    double v9 = *(double **)(a2 + 32);
    do
    {
      double v10 = *v8++;
      double v11 = v10;
      double v12 = *v9++;
      result.f64[0] = v11 + v12;
      *v4++ = result.f64[0];
      --v7;
    }
    while (v7);
  }
  return result;
}

float64x2_t sub_1000D6154@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>, float64x2_t result@<Q0>)
{
  *(void *)(a2 + 24) = 0x100000003;
  *(void *)a2 = off_100452C18;
  uint64_t v3 = (double *)(a2 + 40);
  *(void *)(a2 + 32) = a2 + 40;
  int v5 = *(_DWORD *)(a1 + 8);
  int v4 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a2 + 8) = v5;
  *(_DWORD *)(a2 + 12) = v4;
  uint64_t v6 = (v4 * v5);
  *(_DWORD *)(a2 + 16) = v6;
  *(_DWORD *)(a2 + 20) = v5;
  if ((int)v6 > 3)
  {
    uint64_t v9 = (v6 - 2);
    double v10 = *(float64x2_t **)(a1 + 32);
    double v11 = (float64x2_t *)((char *)v10 + 8 * v9);
    uint64_t v12 = (v6 - 1) >> 1;
    uint64_t v13 = (float64x2_t *)v3;
    do
    {
      float64x2_t v14 = *v10++;
      *v13++ = vmulq_n_f64(v14, result.f64[0]);
      --v12;
    }
    while (v12);
    float64x2_t result = vmulq_n_f64(*v11, result.f64[0]);
    *(float64x2_t *)&v3[v9] = result;
  }
  else if ((int)v6 >= 1)
  {
    uint64_t v7 = *(double **)(a1 + 32);
    do
    {
      double v8 = *v7++;
      *v3++ = v8 * result.f64[0];
      --v6;
    }
    while (v6);
  }
  return result;
}

BOOL sub_1000D6200(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 8) == 3 && *(_DWORD *)(a1 + 12) == 3)
  {
    *(_OWORD *)(a2 + 8) = xmmword_1003E6950;
    int v5 = *(double **)(a1 + 32);
    double v6 = sqrt(*v5);
    uint64_t v7 = *(double **)(a2 + 32);
    double *v7 = v6;
    int v8 = *(_DWORD *)(a1 + 20);
    double v9 = sqrt(v5[v8 + 1]);
    v7[4] = v9;
    double v10 = sqrt(v5[2 * v8 + 2]);
    v7[8] = v10;
    if (fabs(v6 * v9) >= 2.22044605e-16)
    {
      double v11 = v5[1] / (v6 * v9);
      v7[1] = v11;
      double v12 = v6 * v10;
      if (fabs(v12) >= 2.22044605e-16)
      {
        double v13 = v5[2] / v12;
        void v7[2] = v13;
        double v14 = v9 * v10;
        if (fabs(v14) >= 2.22044605e-16)
        {
          double v15 = v5[v8 + 2];
          v7[3] = v11;
          double v16 = v15 / v14;
          v7[5] = v16;
          v7[6] = v13;
          v7[7] = v16;
          return 1;
        }
        else
        {
          return 0;
        }
      }
      else
      {
        return 0;
      }
    }
    else
    {
      return 0;
    }
  }
  else
  {
    if (qword_10047BED8 == -1)
    {
      uint64_t v3 = qword_10047BEE0;
      BOOL result = os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR);
      if (!result) {
        return result;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100453898);
      uint64_t v3 = qword_10047BEE0;
      BOOL result = os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR);
      if (!result) {
        return result;
      }
    }
    *(_WORD *)uint64_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Input variance-covariance matrix has wrong dimensions, expected 3x3", v17, 2u);
    return 0;
  }
}

float64x2_t sub_1000D63C0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&result.f64[0] = 0x300000003;
  *(void *)(a3 + 24) = 0x300000003;
  *(void *)a3 = off_100452AF0;
  int v4 = (float64_t *)(a3 + 40);
  *(void *)(a3 + 32) = a3 + 40;
  int v6 = *(_DWORD *)(a1 + 8);
  int v5 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a3 + 8) = v6;
  *(_DWORD *)(a3 + 12) = v5;
  uint64_t v7 = (v5 * v6);
  *(_DWORD *)(a3 + 16) = v7;
  *(_DWORD *)(a3 + 20) = v6;
  if ((int)v7 > 3)
  {
    uint64_t v13 = (v7 - 2);
    double v14 = *(float64x2_t **)(a1 + 32);
    double v15 = *(float64x2_t **)(a2 + 32);
    double v16 = (float64x2_t *)((char *)v15 + 8 * v13);
    uint64_t v17 = (v7 - 1) >> 1;
    double v18 = v14;
    uint64_t v19 = (float64x2_t *)v4;
    do
    {
      float64x2_t v20 = *v18++;
      float64x2_t v21 = v20;
      float64x2_t v22 = *v15++;
      *v19++ = vaddq_f64(v21, v22);
      --v17;
    }
    while (v17);
    float64x2_t result = vaddq_f64(*(float64x2_t *)((char *)v14 + 8 * v13), *v16);
    *(float64x2_t *)&v4[v13] = result;
  }
  else if ((int)v7 >= 1)
  {
    int v8 = *(double **)(a1 + 32);
    double v9 = *(double **)(a2 + 32);
    do
    {
      double v10 = *v8++;
      double v11 = v10;
      double v12 = *v9++;
      result.f64[0] = v11 + v12;
      *v4++ = result.f64[0];
      --v7;
    }
    while (v7);
  }
  return result;
}

float64x2_t sub_1000D6480@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>, float64x2_t result@<Q0>)
{
  *(void *)(a2 + 24) = 0x300000003;
  *(void *)a2 = off_100452AF0;
  uint64_t v3 = (double *)(a2 + 40);
  *(void *)(a2 + 32) = a2 + 40;
  int v5 = *(_DWORD *)(a1 + 8);
  int v4 = *(_DWORD *)(a1 + 12);
  *(_DWORD *)(a2 + 8) = v5;
  *(_DWORD *)(a2 + 12) = v4;
  uint64_t v6 = (v4 * v5);
  *(_DWORD *)(a2 + 16) = v6;
  *(_DWORD *)(a2 + 20) = v5;
  if ((int)v6 > 3)
  {
    uint64_t v9 = (v6 - 2);
    double v10 = *(float64x2_t **)(a1 + 32);
    double v11 = (float64x2_t *)((char *)v10 + 8 * v9);
    uint64_t v12 = (v6 - 1) >> 1;
    uint64_t v13 = (float64x2_t *)v3;
    do
    {
      float64x2_t v14 = *v10++;
      *v13++ = vmulq_n_f64(v14, result.f64[0]);
      --v12;
    }
    while (v12);
    float64x2_t result = vmulq_n_f64(*v11, result.f64[0]);
    *(float64x2_t *)&v3[v9] = result;
  }
  else if ((int)v6 >= 1)
  {
    uint64_t v7 = *(double **)(a1 + 32);
    do
    {
      double v8 = *v7++;
      *v3++ = v8 * result.f64[0];
      --v6;
    }
    while (v6);
  }
  return result;
}

void sub_1000D6528(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

uint64_t sub_1000D6558(uint64_t a1)
{
  *(void *)a1 = off_1004538C8;
  uint64_t v2 = *(void **)(a1 + 160);
  if (v2)
  {
    *(void *)(a1 + 168) = v2;
    operator delete(v2);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 96));
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 88);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    int v4 = *(std::__shared_weak_count **)(a1 + 72);
    if (!v4) {
      return a1;
    }
  }
  else
  {
    int v4 = *(std::__shared_weak_count **)(a1 + 72);
    if (!v4) {
      return a1;
    }
  }
  if (atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return a1;
}

void sub_1000D6660(uint64_t a1)
{
  sub_1000D6558(a1);

  operator delete();
}

uint64_t sub_1000D6698(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 64) + 200))();
}

uint64_t sub_1000D66C0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 64) + 208))();
}

void sub_1000D66E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(**(void **)(a1 + 64) + 216))(*(void *)(a1 + 64));
  if (*(unsigned char *)(a1 + 40))
  {
    sub_1000BE8AC((uint64_t)v9, a2, a3, (void *)(a1 + 80));
    if (sub_1000BEA40(v9))
    {
      uint64_t v6 = (std::mutex *)(a1 + 96);
      std::mutex::lock((std::mutex *)(a1 + 96));
      double v8 = *(void **)(a1 + 160);
      for (uint64_t i = *(void **)(a1 + 168); v8 != i; ++v8)
        (*(void (**)(void, void, unsigned __int8 *))(*(void *)*v8 + 16))(*v8, *(void *)(a2 + 40), v9);
      std::mutex::unlock(v6);
    }
    nullsub_15(&v11);
    cnframework::TimestampedEvent::~TimestampedEvent((cnframework::TimestampedEvent *)&v10);
  }
}

void sub_1000D67E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
}

uint64_t sub_1000D681C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 64) + 248))();
}

double sub_1000D6844@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)a2 = 0;
  (*(void (**)(uint64_t *__return_ptr))(**(void **)(a1 + 64) + 264))(&v4);
  if ((_BYTE)v4)
  {
    *(_OWORD *)(a2 + 8) = v5;
    *(_OWORD *)(a2 + 24) = v6;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 40) = v7;
    *(void *)(a2 + ++*(_DWORD *)(result + 56) = v8;
    *(unsigned char *)a2 = 1;
  }
  return result;
}

void sub_1000D6904(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (std::mutex *)(a1 + 96);
  std::mutex::lock((std::mutex *)(a1 + 96));
  (*(void (**)(void, uint64_t))(**(void **)(a1 + 64) + 280))(*(void *)(a1 + 64), a2);
  long long v6 = *(char **)(a1 + 160);
  long long v5 = *(char **)(a1 + 168);
  if (v6 != v5)
  {
    while (*(void *)v6 != a2)
    {
      v6 += 8;
      if (v6 == v5)
      {
        long long v6 = *(char **)(a1 + 168);
        break;
      }
    }
  }
  if (v6 != v5)
  {
    int64_t v7 = v5 - (v6 + 8);
    if (v5 != v6 + 8) {
      memmove(v6, v6 + 8, v5 - (v6 + 8));
    }
    *(void *)(a1 + 168) = &v6[v7];
  }

  std::mutex::unlock(v4);
}

void sub_1000D69D4(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_1000D69E8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1004539E8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1000D6A08(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1004539E8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1000D6A5C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1000D6A84(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100453A38;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1000D6AA4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100453A38;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1000D6AF8(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1000D6B24()
{
}

void sub_1000D6B3C(unsigned char *a1@<X8>)
{
  *a1 = 0;
  a1[16] = 0;
}

void sub_1000D6B4C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100453AD8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1000D6B6C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100453AD8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1000D6BC0(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1000D6BE8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100453B28;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1000D6C08(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100453B28;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1000D6C5C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1000D6C88()
{
}

uint64_t sub_1000D6CAC()
{
  return 0;
}

void sub_1000D6CB4(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void sub_1000D6CC4()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1000D6D3C()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t *sub_1000D6DB4(uint64_t *result)
{
  uint64_t v1 = *result;
  *double result = 0;
  if (v1)
  {
    if (*(unsigned char *)(v1 + 104)) {
      *(unsigned char *)(v1 + 104) = 0;
    }
    uint64_t v2 = *(void **)(v1 + 72);
    if (v2)
    {
      *(void *)(v1 + 80) = v2;
      operator delete(v2);
    }
    uint64_t v3 = *(void **)(v1 + 32);
    if (v3)
    {
      *(void *)(v1 + 40) = v3;
      operator delete(v3);
    }
    operator delete();
  }
  return result;
}

void sub_1000D6E28(uint64_t *a1, uint64_t a2, float a3, float a4, float a5)
{
  float v6 = sqrtf(1.0 / (float)((float)((float)(a4 * a4) + (float)(a3 * a3)) + (float)(a5 * a5)));
  sub_1000D6FF0(*a1, a2, a3 * v6, a4 * v6, a5 * v6);
  uint64_t v7 = *a1;
  if (*(_DWORD *)(*a1 + 56) != 2 || *(_DWORD *)(v7 + 96) != 2) {
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)(v7 + 32);
  uint64_t v8 = *(void *)(v7 + 40);
  if (v9 == v8)
  {
    double v14 = NAN;
    uint64_t v15 = *(void *)(v7 + 72);
    uint64_t v16 = *(void *)(v7 + 80);
    if (v15 != v16) {
      goto LABEL_13;
    }
LABEL_7:
    double v17 = 0.0;
    goto LABEL_19;
  }
  uint64_t v10 = v8 - v9;
  unint64_t v11 = v8 - v9 - 16;
  if (v11 < 0x10)
  {
    double v12 = 0.0;
    uint64_t v13 = *(void *)(v7 + 32);
    do
    {
LABEL_11:
      double v12 = v12 + *(double *)(v13 + 8);
      v13 += 16;
    }
    while (v13 != v8);
    goto LABEL_12;
  }
  uint64_t v18 = (v11 >> 4) + 1;
  uint64_t v13 = v9 + 16 * (v18 & 0x1FFFFFFFFFFFFFFELL);
  uint64_t v19 = (double *)(v9 + 24);
  double v12 = 0.0;
  uint64_t v20 = v18 & 0x1FFFFFFFFFFFFFFELL;
  do
  {
    double v21 = *(v19 - 2);
    double v22 = *v19;
    v19 += 4;
    double v12 = v12 + v21 + v22;
    v20 -= 2;
  }
  while (v20);
  if (v18 != (v18 & 0x1FFFFFFFFFFFFFFELL)) {
    goto LABEL_11;
  }
LABEL_12:
  double v14 = v12 / (double)(unint64_t)(v10 >> 4);
  uint64_t v15 = *(void *)(v7 + 72);
  uint64_t v16 = *(void *)(v7 + 80);
  if (v15 == v16) {
    goto LABEL_7;
  }
LABEL_13:
  unint64_t v23 = v16 - v15 - 16;
  if (v23 < 0x10)
  {
    double v17 = 0.0;
    uint64_t v24 = v15;
    do
    {
LABEL_18:
      double v17 = v17 + *(double *)(v24 + 8);
      v24 += 16;
    }
    while (v24 != v16);
    goto LABEL_19;
  }
  uint64_t v25 = (v23 >> 4) + 1;
  uint64_t v24 = v15 + 16 * (v25 & 0x1FFFFFFFFFFFFFFELL);
  uint64_t v26 = (double *)(v15 + 24);
  double v17 = 0.0;
  uint64_t v27 = v25 & 0x1FFFFFFFFFFFFFFELL;
  do
  {
    double v28 = *(v26 - 2);
    double v29 = *v26;
    v26 += 4;
    double v17 = v17 + v28 + v29;
    v27 -= 2;
  }
  while (v27);
  if (v25 != (v25 & 0x1FFFFFFFFFFFFFFELL)) {
    goto LABEL_18;
  }
LABEL_19:
  if (fabs(v14) - fabs(v17 / (double)(unint64_t)((v16 - v15) >> 4)) > *(float *)(v7 + 16))
  {
LABEL_20:
    *(void *)(v7 + 136) = 0;
    return;
  }
  ++*(void *)(v7 + 136);
}

void sub_1000D6FF0(uint64_t a1, uint64_t a2, float a3, float a4, float a5)
{
  sub_1000D7294((void *)a1, a2);
  if (!*(unsigned char *)(a1 + 104)) {
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(a1 + 112);
  uint64_t v11 = a2 - v10;
  if (a2 == v10
    || ((double v12 = sqrt((float)(a4 - *(float *)(a1 + 124)) * (float)(a4 - *(float *)(a1 + 124))+ (float)(a3 - *(float *)(a1 + 120)) * (float)(a3 - *(float *)(a1 + 120))+ (float)(a5 - *(float *)(a1 + 128)) * (float)(a5 - *(float *)(a1 + 128))), v12 <= 1.0)? (v14 = asin(v12), v13 = v14 + v14): (v13 = 3.14159265), *(void *)&v15 = a2, *((double *)&v15 + 1) = v13 / ((double)v11 * 0.000000001), sub_1000D7328((void *)(a1 + 24), &v15), *(unsigned char *)(a1 + 104)))
  {
    *(void *)(a1 + 112) = a2;
    *(float *)(a1 + 120) = a3;
    *(float *)(a1 + 124) = a4;
    *(float *)(a1 + 128) = a5;
  }
  else
  {
LABEL_8:
    *(void *)(a1 + 112) = a2;
    *(float *)(a1 + 120) = a3;
    *(float *)(a1 + 124) = a4;
    *(float *)(a1 + 128) = a5;
    *(unsigned char *)(a1 + 104) = 1;
  }
}

uint64_t sub_1000D70FC(void **a1, uint64_t a2)
{
  sub_1000D7294(*a1, a2);
  uint64_t v3 = (uint64_t)*a1;
  if (*((_DWORD *)*a1 + 14) != 2 || *(_DWORD *)(v3 + 96) != 2) {
    return 2;
  }
  uint64_t v5 = *(void *)(v3 + 32);
  uint64_t v4 = *(void *)(v3 + 40);
  if (v5 != v4)
  {
    uint64_t v6 = v4 - v5;
    unint64_t v7 = v4 - v5 - 16;
    if (v7 >= 0x10)
    {
      uint64_t v15 = (v7 >> 4) + 1;
      uint64_t v9 = v5 + 16 * (v15 & 0x1FFFFFFFFFFFFFFELL);
      uint64_t v16 = (double *)(v5 + 24);
      double v8 = 0.0;
      uint64_t v17 = v15 & 0x1FFFFFFFFFFFFFFELL;
      do
      {
        double v18 = *(v16 - 2);
        double v19 = *v16;
        v16 += 4;
        double v8 = v8 + v18 + v19;
        v17 -= 2;
      }
      while (v17);
      if (v15 == (v15 & 0x1FFFFFFFFFFFFFFELL))
      {
LABEL_13:
        double v11 = v8 / (double)(unint64_t)(v6 >> 4);
        uint64_t v12 = *(void *)(v3 + 72);
        uint64_t v13 = *(void *)(v3 + 80);
        if (v12 != v13) {
          goto LABEL_14;
        }
LABEL_8:
        double v14 = 0.0;
        return fabs(v11) - fabs(v14 / (double)(unint64_t)((v13 - v12) >> 4)) > *(float *)(v3 + 16);
      }
    }
    else
    {
      double v8 = 0.0;
      uint64_t v9 = *(void *)(v3 + 32);
    }
    do
    {
      double v8 = v8 + *(double *)(v9 + 8);
      v9 += 16;
    }
    while (v9 != v4);
    goto LABEL_13;
  }
  double v11 = NAN;
  uint64_t v12 = *(void *)(v3 + 72);
  uint64_t v13 = *(void *)(v3 + 80);
  if (v12 == v13) {
    goto LABEL_8;
  }
LABEL_14:
  unint64_t v20 = v13 - v12 - 16;
  if (v20 >= 0x10)
  {
    uint64_t v22 = (v20 >> 4) + 1;
    uint64_t v21 = v12 + 16 * (v22 & 0x1FFFFFFFFFFFFFFELL);
    unint64_t v23 = (double *)(v12 + 24);
    double v14 = 0.0;
    uint64_t v24 = v22 & 0x1FFFFFFFFFFFFFFELL;
    do
    {
      double v25 = *(v23 - 2);
      double v26 = *v23;
      v23 += 4;
      double v14 = v14 + v25 + v26;
      v24 -= 2;
    }
    while (v24);
    if (v22 == (v22 & 0x1FFFFFFFFFFFFFFELL)) {
      return fabs(v11) - fabs(v14 / (double)(unint64_t)((v13 - v12) >> 4)) > *(float *)(v3 + 16);
    }
  }
  else
  {
    double v14 = 0.0;
    uint64_t v21 = v12;
  }
  do
  {
    double v14 = v14 + *(double *)(v21 + 8);
    v21 += 16;
  }
  while (v21 != v13);
  return fabs(v11) - fabs(v14 / (double)(unint64_t)((v13 - v12) >> 4)) > *(float *)(v3 + 16);
}

void sub_1000D7294(void *a1, uint64_t a2)
{
  sub_1000D7588(a1 + 3, a2, &__p);
  uint64_t v4 = a1[9];
  uint64_t v3 = a1[10];
  sub_1000D76C4((uint64_t)(a1 + 9), v3, (char *)__p, v6, (v6 - (unsigned char *)__p) >> 4);
  sub_1000D745C(a1 + 8, (v3 - v4) >> 4);
  if (__p)
  {
    uint64_t v6 = (char *)__p;
    operator delete(__p);
  }
}

void sub_1000D730C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1000D7328(void *a1, _OWORD *a2)
{
  uint64_t v5 = (_OWORD *)a1[2];
  unint64_t v4 = a1[3];
  if ((unint64_t)v5 >= v4)
  {
    unint64_t v7 = (_OWORD **)(a1 + 1);
    double v8 = (_OWORD *)a1[1];
    uint64_t v9 = v5 - v8;
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 60) {
      sub_1000A9108();
    }
    uint64_t v11 = v4 - (void)v8;
    if (v11 >> 3 > v10) {
      unint64_t v10 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12)
    {
      if (v12 >> 60) {
        sub_1000A6A10();
      }
      uint64_t v13 = (char *)operator new(16 * v12);
    }
    else
    {
      uint64_t v13 = 0;
    }
    double v14 = &v13[16 * v9];
    *(_OWORD *)double v14 = *a2;
    uint64_t v6 = v14 + 16;
    if (v5 != v8)
    {
      do
      {
        *((_OWORD *)v14 - 1) = *(v5 - 1);
        v14 -= 16;
        --v5;
      }
      while (v5 != v8);
      uint64_t v5 = *v7;
    }
    a1[1] = v14;
    a1[2] = v6;
    a1[3] = &v13[16 * v12];
    if (v5) {
      operator delete(v5);
    }
  }
  else
  {
    *uint64_t v5 = *a2;
    uint64_t v6 = v5 + 1;
  }
  a1[2] = v6;
  unint64_t v15 = (((uint64_t)v6 - a1[1]) >> 4) - 1;

  return sub_1000D745C(a1, v15);
}

void *sub_1000D745C(void *result, unint64_t a2)
{
  uint64_t v2 = result;
  unint64_t v4 = (void *)result[1];
  uint64_t v3 = (unsigned char *)result[2];
  uint64_t v5 = v3 - (unsigned char *)v4;
  if (v3 - (unsigned char *)v4 == 16)
  {
    *((_DWORD *)result + 8) = 1;
  }
  else
  {
    uint64_t v6 = v5 >> 4;
    if (v5 >> 4 > a2)
    {
      unint64_t v7 = 0;
      do
      {
        if (v7 != a2)
        {
          uint64_t v8 = v4[2 * a2];
          uint64_t v9 = *result;
          unint64_t v10 = &v4[2 * v7];
          while (1)
          {
            uint64_t v11 = *v10;
            v10 += 2;
            if (v9 >= v8 - v11) {
              break;
            }
            ++v7;
            *((_DWORD *)result + 8) = 2;
            if (a2 == v7) {
              goto LABEL_6;
            }
          }
        }
        if (v7 == a2)
        {
LABEL_6:
          *((_DWORD *)result + 8) = 1;
          unint64_t v7 = a2;
        }
        ++a2;
      }
      while (a2 != v6);
      if (v7)
      {
        if ((v7 & 0x8000000000000000) != 0) {
          sub_1000A9108();
        }
        unint64_t v12 = (char *)&v4[2 * v7];
        uint64_t v13 = v3 - v12;
        if (v3 != v12) {
          double result = memmove(v4, v12, v3 - v12);
        }
        v2[2] = (char *)v4 + v13;
      }
    }
  }
  return result;
}

void sub_1000D756C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1000D7588@<X0>(void *result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v4 = (char *)result[1];
  uint64_t v5 = (char *)result[2];
  if (v4 == v5)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  else
  {
    uint64_t v6 = result;
    uint64_t v7 = 0;
    uint64_t v8 = (v5 - v4) >> 4;
    uint64_t v9 = *result;
    unint64_t v10 = (uint64_t *)result[1];
    while (1)
    {
      uint64_t v11 = *v10;
      v10 += 2;
      if (v9 >= a2 - v11) {
        break;
      }
      ++v7;
      *((_DWORD *)result + 8) = 2;
      if (v8 == v7) {
        goto LABEL_9;
      }
    }
    if (v8 != v7) {
      goto LABEL_10;
    }
LABEL_9:
    *((_DWORD *)result + 8) = 1;
    uint64_t v7 = (v5 - v4) >> 4;
LABEL_10:
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    if (v7)
    {
      if (v7 < 0) {
        sub_1000A9108();
      }
      size_t v12 = 16 * v7;
      uint64_t v13 = (char *)operator new(16 * v7);
      double v14 = &v4[16 * v7];
      *a3 = v13;
      unint64_t v15 = &v13[16 * v7];
      a3[2] = v15;
      double result = memmove(v13, v4, v12);
      a3[1] = v15;
      if (v5 != v14) {
        double result = memmove(v4, &v4[v12], v5 - v14);
      }
      v6[2] = &v4[v5 - v14];
    }
  }
  return result;
}

void sub_1000D76A8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1000D76C4(uint64_t a1, uint64_t a2, char *__src, char *a4, uint64_t a5)
{
  uint64_t v5 = *(char **)a1;
  uint64_t v6 = a2 - *(void *)a1;
  uint64_t v7 = (char *)(*(void *)a1 + (v6 & 0xFFFFFFFFFFFFFFF0));
  if (a5 < 1) {
    return v7;
  }
  uint64_t v9 = __src;
  size_t v12 = *(long long **)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  if (a5 > (v11 - (uint64_t)v12) >> 4)
  {
    unint64_t v13 = a5 + (((char *)v12 - v5) >> 4);
    if (v13 >> 60) {
      sub_1000A9108();
    }
    uint64_t v14 = v11 - (void)v5;
    uint64_t v15 = v14 >> 3;
    if (v14 >> 3 <= v13) {
      uint64_t v15 = v13;
    }
    if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v16 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v16 = v15;
    }
    if (v16)
    {
      if (v16 >> 60) {
        sub_1000A6A10();
      }
      uint64_t v17 = (char *)operator new(16 * v16);
    }
    else
    {
      uint64_t v17 = 0;
    }
    double v26 = &v17[16 * (v6 >> 4)];
    uint64_t v27 = 16 * a5;
    double v28 = &v26[16 * a5];
    double v29 = v26;
    do
    {
      long long v30 = *(_OWORD *)v9;
      v9 += 16;
      *(_OWORD *)double v29 = v30;
      v29 += 16;
      v27 -= 16;
    }
    while (v27);
    uint64_t v31 = *(char **)a1;
    if (*(char **)a1 == v7)
    {
      long long v33 = v26;
      uint64_t v35 = &v17[16 * v16];
      size_t v36 = (char *)v12 - v7;
      if (v12 == (long long *)v7) {
        goto LABEL_33;
      }
    }
    else
    {
      uint64_t v32 = v7;
      long long v33 = v26;
      do
      {
        *((_OWORD *)v33 - 1) = *((_OWORD *)v32 - 1);
        v33 -= 16;
        v32 -= 16;
      }
      while (v32 != v31);
      long long v34 = *(unsigned char **)(a1 + 8);
      uint64_t v35 = &v17[16 * v16];
      size_t v36 = v34 - v7;
      if (v34 == v7) {
        goto LABEL_33;
      }
    }
    memmove(v28, v7, v36);
LABEL_33:
    int v37 = *(char **)a1;
    *(void *)a1 = v33;
    *(void *)(a1 + 8) = &v28[v36];
    *(void *)(a1 + 16) = v35;
    if (v37) {
      operator delete(v37);
    }
    return v26;
  }
  uint64_t v18 = ((char *)v12 - v7) >> 4;
  if (v18 >= a5)
  {
    double v19 = &__src[16 * a5];
    uint64_t v21 = *(char **)(a1 + 8);
    uint64_t v22 = &v7[16 * a5];
    unint64_t v23 = &v12[-a5];
    uint64_t v24 = v21;
    if (v23 >= v12)
    {
LABEL_21:
      *(void *)(a1 + 8) = v24;
      if (v21 != v22) {
        memmove(&v21[-16 * ((v21 - v22) >> 4)], v7, v21 - v22);
      }
      if (v19 != v9) {
        memmove(v7, v9, v19 - v9);
      }
      return v7;
    }
LABEL_19:
    uint64_t v24 = v21;
    do
    {
      long long v25 = *v23++;
      *(_OWORD *)uint64_t v24 = v25;
      v24 += 16;
    }
    while (v23 < v12);
    goto LABEL_21;
  }
  double v19 = &__src[16 * v18];
  int64_t v20 = a4 - v19;
  if (a4 != v19) {
    memmove(*(void **)(a1 + 8), &__src[16 * v18], a4 - v19);
  }
  uint64_t v21 = (char *)v12 + v20;
  *(void *)(a1 + 8) = (char *)v12 + v20;
  if ((char *)v12 - v7 >= 1)
  {
    uint64_t v22 = &v7[16 * a5];
    unint64_t v23 = (long long *)&v21[-16 * a5];
    uint64_t v24 = (char *)v12 + v20;
    if (v23 >= v12) {
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  return v7;
}

BOOL sub_1000D78F8(uint64_t a1)
{
  return *(double *)(a1 + 8) >= 0.5;
}

long double sub_1000D790C(double a1, double a2)
{
  return atan(a1 / (a2 * -0.67418914 + a2 * -0.67418914)) / 3.14159265 + 0.5;
}

uint64_t *sub_1000D794C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2) {
    operator delete();
  }
  return a1;
}

float sub_1000D7990(uint64_t *a1, double a2, float a3, float a4, float a5)
{
  float v7 = a3;
  uint64_t v8 = *a1;
  uint64_t v9 = *(void *)(*a1 + 56);
  if (v9)
  {
    double v10 = *(double *)(v8 + 16);
    double v11 = a2 - *(double *)(v8 + 32);
    *(double *)(v8 + 32) = a2;
    *(double *)(v8 + 16) = a2;
    float v12 = *(float *)v8;
    if (*(void *)(v8 + 64))
    {
      float v13 = (a2 - v10) * *(float *)(v8 + 52);
      __float2 v14 = __sincosf_stret(v13);
      float v16 = *(float *)(v8 + 44);
      float v15 = *(float *)(v8 + 48);
      float v18 = *(float *)(v8 + 4);
      float v17 = *(float *)(v8 + 8);
      float v19 = *(float *)(v8 + 40);
      float v20 = (float)(v15 * v12) - (float)(v19 * v17);
      float v21 = (float)(v19 * v18) - (float)(v16 * v12);
      float v22 = (float)(1.0 - v14.__cosval) * (float)((float)((float)(v16 * v18) + (float)(v19 * v12)) + (float)(v15 * v17));
      float v12 = (float)(v14.__cosval * v12)
          + (float)((float)(v19 * v22) + (float)((float)((float)(v16 * v17) - (float)(v15 * v18)) * v14.__sinval));
      float v23 = (float)(v18 * v14.__cosval) + (float)((float)(v16 * v22) + (float)(v20 * v14.__sinval));
      float v24 = (float)(v17 * v14.__cosval) + (float)((float)(v15 * v22) + (float)(v21 * v14.__sinval));
    }
    else
    {
      float v23 = *(float *)(v8 + 4);
      float v24 = *(float *)(v8 + 8);
    }
    float v26 = exp(v11 / -5.0);
    float v27 = 1.0 - v26;
    float v7 = v12 + (float)(v27 * (float)(v7 - v12));
    *(float *)uint64_t v8 = v7;
    *(float *)(v8 + 4) = v23 + (float)(v27 * (float)(a4 - v23));
    *(float *)(v8 + 8) = v24 + (float)(v27 * (float)(a5 - v24));
    uint64_t v25 = v9 + 1;
  }
  else
  {
    *(double *)(v8 + 32) = a2;
    *(float *)uint64_t v8 = a3;
    *(float *)(v8 + 4) = a4;
    *(float *)(v8 + 8) = a5;
    uint64_t v25 = 1;
    *(double *)(v8 + 16) = a2;
  }
  *(void *)(v8 + ++*(_DWORD *)(result + 56) = v25;
  return v7;
}

void sub_1000D7AF4(uint64_t *a1, double a2, float a3, float a4, float a5)
{
  uint64_t v10 = *a1;
  if (*(void *)(*a1 + 56))
  {
    if (*(void *)(v10 + 64))
    {
      double v11 = a2 - *(double *)(v10 + 24);
      double v12 = a2 - *(double *)(v10 + 16);
      double v13 = v11 * 0.5;
      if (v11 * 0.5 >= v12)
      {
        float v63 = sqrtf((float)((float)(a4 * a4) + (float)(a3 * a3)) + (float)(a5 * a5));
        *(float *)(v10 + 52) = v63;
        float v64 = 0.0;
        float v65 = 0.0;
        float v66 = 0.0;
        if (v63 > 0.0)
        {
          float v64 = -(float)(a3 * (float)(1.0 / v63));
          float v65 = -(float)(a4 * (float)(1.0 / v63));
          float v66 = -(float)(a5 * (float)(1.0 / v63));
        }
        *(float *)(v10 + 40) = v64;
        *(float *)(v10 + 44) = v65;
        *(float *)(v10 + 48) = v66;
        uint64_t v28 = *a1;
        float v67 = v12 * *(float *)(*a1 + 52);
        __float2 v68 = __sincosf_stret(v67);
        float sinval = v68.__sinval;
        float v70 = *(float *)(v28 + 4);
        float v69 = *(float *)(v28 + 8);
        float v71 = *(float *)(v28 + 44);
        float v34 = *(float *)(v28 + 48);
        float v72 = *(float *)(v28 + 40);
        float v73 = (float)(v34 * *(float *)v28) - (float)(v72 * v69);
        float v38 = (float)(v72 * v70) - (float)(v71 * *(float *)v28);
        float v39 = (float)(1.0 - v68.__cosval)
            * (float)((float)((float)(v71 * v70) + (float)(v72 * *(float *)v28)) + (float)(v34 * v69));
        float v40 = v69 * v68.__cosval;
        *(float *)uint64_t v28 = (float)(v68.__cosval * *(float *)v28)
                      + (float)((float)(v72 * v39)
                              + (float)((float)((float)(v71 * v69) - (float)(v34 * v70)) * v68.__sinval));
        float v41 = (float)(v70 * v68.__cosval) + (float)((float)(v71 * v39) + (float)(v73 * v68.__sinval));
      }
      else
      {
        float v14 = (v12 - v13) * *(float *)(v10 + 52);
        __float2 v15 = __sincosf_stret(v14);
        float v17 = *(float *)(v10 + 4);
        float v16 = *(float *)(v10 + 8);
        float v19 = *(float *)(v10 + 44);
        float v18 = *(float *)(v10 + 48);
        float v20 = *(float *)(v10 + 40);
        float v21 = (float)(v18 * *(float *)v10) - (float)(v20 * v16);
        float v22 = (float)(v20 * v17) - (float)(v19 * *(float *)v10);
        float v23 = (float)(1.0 - v15.__cosval)
            * (float)((float)((float)(v19 * v17) + (float)(v20 * *(float *)v10)) + (float)(v18 * v16));
        *(float *)uint64_t v10 = (float)(v15.__cosval * *(float *)v10)
                      + (float)((float)(v20 * v23)
                              + (float)((float)((float)(v19 * v16) - (float)(v18 * v17)) * v15.__sinval));
        *(float *)(v10 + 4) = (float)(v17 * v15.__cosval) + (float)((float)(v19 * v23) + (float)(v21 * v15.__sinval));
        *(float *)(v10 + 8) = (float)(v16 * v15.__cosval) + (float)((float)(v18 * v23) + (float)(v22 * v15.__sinval));
        float v24 = sqrtf((float)((float)(a4 * a4) + (float)(a3 * a3)) + (float)(a5 * a5));
        float v25 = 0.0;
        float v26 = -(float)(a3 * (float)(1.0 / v24));
        float v27 = -(float)(a4 * (float)(1.0 / v24));
        if (v24 > 0.0)
        {
          float v25 = -(float)(a5 * (float)(1.0 / v24));
        }
        else
        {
          float v26 = 0.0;
          float v27 = 0.0;
        }
        *(float *)(v10 + 40) = v26;
        *(float *)(v10 + 44) = v27;
        *(float *)(v10 + 48) = v25;
        *(float *)(v10 + 52) = v24;
        uint64_t v28 = *a1;
        float v29 = v13 * *(float *)(v28 + 52);
        __float2 v30 = __sincosf_stret(v29);
        float sinval = v30.__sinval;
        float v33 = *(float *)(v28 + 4);
        float v32 = *(float *)(v28 + 8);
        float v35 = *(float *)(v28 + 44);
        float v34 = *(float *)(v28 + 48);
        float v36 = *(float *)(v28 + 40);
        float v37 = (float)(v35 * v32) - (float)(v34 * v33);
        float v38 = (float)(v36 * v33) - (float)(v35 * *(float *)v28);
        float v39 = (float)(1.0 - v30.__cosval)
            * (float)((float)((float)(v35 * v33) + (float)(v36 * *(float *)v28)) + (float)(v34 * v32));
        float v40 = v32 * v30.__cosval;
        float v41 = (float)(v33 * v30.__cosval)
            + (float)((float)(v35 * v39)
                    + (float)((float)((float)(v34 * *(float *)v28) - (float)(v36 * v32)) * v30.__sinval));
        *(float *)uint64_t v28 = (float)(v30.__cosval * *(float *)v28)
                      + (float)((float)(v36 * v39) + (float)(v37 * v30.__sinval));
      }
      *(float *)(v28 + 4) = v41;
      *(float *)(v28 + 8) = v40 + (float)((float)(v34 * v39) + (float)(v38 * sinval));
      *(double *)(v28 + 16) = a2;
      *(double *)(v28 + 24) = a2;
      uint64_t v62 = *(void *)(v28 + 64) + 1;
    }
    else
    {
      double v47 = a2 - *(double *)(v10 + 16);
      float v48 = sqrtf((float)((float)(a4 * a4) + (float)(a3 * a3)) + (float)(a5 * a5));
      *(float *)(v10 + 52) = v48;
      float v49 = 0.0;
      float v50 = 0.0;
      float v51 = 0.0;
      if (v48 > 0.0)
      {
        float v49 = -(float)(a3 * (float)(1.0 / v48));
        float v50 = -(float)(a4 * (float)(1.0 / v48));
        float v51 = -(float)(a5 * (float)(1.0 / v48));
      }
      *(float *)(v10 + 40) = v49;
      *(float *)(v10 + 44) = v50;
      *(float *)(v10 + 48) = v51;
      uint64_t v28 = *a1;
      float v52 = v47 * *(float *)(*a1 + 52);
      __float2 v53 = __sincosf_stret(v52);
      float v55 = *(float *)(v28 + 4);
      float v54 = *(float *)(v28 + 8);
      float v57 = *(float *)(v28 + 44);
      float v56 = *(float *)(v28 + 48);
      float v58 = *(float *)(v28 + 40);
      float v59 = (float)(v56 * *(float *)v28) - (float)(v58 * v54);
      float v60 = (float)(v58 * v55) - (float)(v57 * *(float *)v28);
      float v61 = (float)(1.0 - v53.__cosval)
          * (float)((float)((float)(v57 * v55) + (float)(v58 * *(float *)v28)) + (float)(v56 * v54));
      *(float *)uint64_t v28 = (float)(v53.__cosval * *(float *)v28)
                    + (float)((float)(v58 * v61)
                            + (float)((float)((float)(v57 * v54) - (float)(v56 * v55)) * v53.__sinval));
      *(float *)(v28 + 4) = (float)(v55 * v53.__cosval) + (float)((float)(v57 * v61) + (float)(v59 * v53.__sinval));
      *(float *)(v28 + 8) = (float)(v54 * v53.__cosval) + (float)((float)(v56 * v61) + (float)(v60 * v53.__sinval));
      *(double *)(v28 + 16) = a2;
      *(double *)(v28 + 24) = a2;
      uint64_t v62 = 1;
    }
    *(void *)(v28 + 64) = v62;
  }
  else
  {
    float v42 = sqrtf((float)((float)(a4 * a4) + (float)(a3 * a3)) + (float)(a5 * a5));
    *(float *)(v10 + 52) = v42;
    float v43 = 0.0;
    float v44 = 0.0;
    float v45 = 0.0;
    if (v42 > 0.0)
    {
      float v43 = -(float)(a3 * (float)(1.0 / v42));
      float v44 = -(float)(a4 * (float)(1.0 / v42));
      float v45 = -(float)(a5 * (float)(1.0 / v42));
    }
    *(float *)(v10 + 40) = v43;
    *(float *)(v10 + 44) = v44;
    *(float *)(v10 + 48) = v45;
    uint64_t v46 = *a1;
    *(double *)(v46 + 24) = a2;
    ++*(void *)(v46 + 64);
  }
}

uint64_t sub_1000D7EFC(uint64_t a1)
{
  return *(void *)(*(void *)a1 + 56);
}

BOOL sub_1000D7F08(uint64_t a1)
{
  return *(void *)(*(void *)a1 + 56) != 0;
}

void sub_1000D7FC4()
{
}

void *sub_1000D7FEC(void *__dst, uint64_t a2, uint64_t a3)
{
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1000559FC(__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a2;
    uint64_t v9 = *(void *)(a2 + 16);
  }
  sub_1000DF570((uint64_t)__dst, (long long *)__p);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  __dst[3] = *(void *)a3;
  uint64_t v6 = *(void *)(a3 + 8);
  __dst[4] = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  *((_DWORD *)__dst + 10) = *(_DWORD *)(a3 + 16);
  sub_100056B28((const char *)a2, 0, (int *)&v13);
  if (LODWORD(v13.__r_.__value_.__l.__data_) != 3)
  {
    sub_1000AE4B0(v11, "");
    sub_1000DA214(a2, &v13);
    sub_1000DB8E8(" isn't a valid directory", &v14);
    sub_10016A2C4((uint64_t)v11, (uint64_t)&v13, 2);
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v14.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_12:
        if ((v12 & 0x80000000) == 0) {
          goto LABEL_13;
        }
LABEL_16:
        operator delete(v11[0]);
LABEL_13:
        sub_1000D11E0((uint64_t)&v10);
      }
    }
    else if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete(v13.__r_.__value_.__l.__data_);
    if ((v12 & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_16;
  }
  return __dst;
}

void sub_1000D8184(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  sub_1000BA884(v33);
  if (*(char *)(v32 + 23) < 0) {
    operator delete(*(void **)v32);
  }
  _Unwind_Resume(a1);
}

void *sub_1000D8214(void *__dst, uint64_t a2, void *a3, int a4)
{
  uint64_t v5 = (std::__shared_weak_count *)a3[1];
  v7[0] = *a3;
  v7[1] = v5;
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  int v8 = a4;
  sub_1000D7FEC(__dst, a2, (uint64_t)v7);
  if (!v5 || atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return __dst;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  return __dst;
}

void sub_1000D82C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000BA884((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1000D82D4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = off_10045A508;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + ++*(_DWORD *)(result + 56) = 0u;
  *(_OWORD *)(a2 + 68) = 0u;
  *(_OWORD *)(a2 + 88) = 0u;
  *(_OWORD *)(a2 + 104) = 0u;
  *(_OWORD *)(a2 + 120) = 0u;
  *(_OWORD *)(a2 + 136) = 0u;
  *(_OWORD *)(a2 + 152) = 0u;
  *(_OWORD *)(a2 + 168) = 0u;
  *(_OWORD *)(a2 + 184) = 0u;
  *(_OWORD *)(a2 + 200) = 0u;
  *(_OWORD *)(a2 + 216) = 0u;
  *(_OWORD *)(a2 + 225) = 0u;
  *(void *)(a2 + 248) = off_10045A4C8;
  *(void *)(a2 + 2++*(_DWORD *)(result + 56) = 0;
  *(_DWORD *)(a2 + 264) = 0;
  *(void *)(a2 + 272) = 0;
  *(unsigned char *)(a2 + 280) &= 0xF0u;
  unint64_t v4 = (void *)(a2 + 304);
  void *v4 = 0;
  *(void *)(a2 + 312) = 0;
  *(void *)(a2 + 288) = off_10045A4E8;
  *(void *)(a2 + 296) = v4;
  *(void *)(a2 + 328) = 0;
  *(void *)(a2 + 336) = 0;
  *(_DWORD *)(a2 + 344) = 0;
  *(void *)(a2 + 320) = 0;
  *(unsigned char *)(a2 + 348) &= 0xF8u;
  *(void *)(a2 + 384) = 0;
  *(void *)(a2 + 392) = 0;
  *(void *)(a2 + 376) = 0;
  *(_DWORD *)(a2 + 368) = 0;
  *(void *)(a2 + 352) = 0;
  *(void *)(a2 + 360) = 0;
  LOBYTE(v4) = *(unsigned char *)(a2 + 402);
  *(_WORD *)(a2 + 400) = 0;
  *(unsigned char *)(a2 + 402) = ((v4 >> 2 << 18) | 0x10000u) >> 16;
  HIBYTE(__p[2]) = 20;
  strcpy((char *)__p, "datarun_metadata.bin");
  sub_1000DF5CC(a1, (uint64_t)__p, &v19);
  if (SHIBYTE(__p[2]) < 0) {
    operator delete(__p[0]);
  }
  sub_100056B28((const char *)&v19, 0, (int *)__p);
  if (LODWORD(__p[0]) >= 2) {
    sub_1000D86E4((uint64_t)__p);
  }
  (*(void (**)(void **__return_ptr))(**(void **)(a1 + 24) + 16))(__p);
  uint64_t v5 = (void **)(a2 + 192);
  if (*(char *)(a2 + 215) < 0) {
    operator delete(*v5);
  }
  *(_OWORD *)uint64_t v5 = *(_OWORD *)__p;
  *(void **)(a2 + 208) = __p[2];
  char v14 = 1;
  LOWORD(v13) = 10;
  sub_100319634((char *)&v13, (uint64_t)__p);
  (*(void (**)(void **__return_ptr))(**(void **)(a1 + 24) + 24))(&v11);
  float v20 = 0;
  float v21 = (uint64_t **)v12;
  sub_1000DE804((uint64_t)__p, &v21, &v20);
  uint64_t v6 = (void **)(a2 + 32);
  if (*(char *)(a2 + 55) < 0) {
    operator delete(*v6);
  }
  *(_OWORD *)uint64_t v6 = v15;
  *(void *)(a2 + 48) = v16;
  HIBYTE(v16) = 0;
  LOBYTE(v15) = 0;
  float v7 = v12;
  if (v12)
  {
    do
    {
      int v8 = v7;
      float v7 = (void *)*v7;
      uint64_t v9 = (std::__shared_weak_count *)v8[3];
      if (v9 && !atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
      operator delete(v8);
    }
    while (v7);
  }
  uint64_t v10 = v11;
  double v11 = 0;
  if (v10) {
    operator delete(v10);
  }
  if (v18 < 0)
  {
    operator delete(__p[3]);
    if ((SHIBYTE(__p[2]) & 0x80000000) == 0)
    {
LABEL_19:
      if ((v14 & 0x80000000) == 0) {
        goto LABEL_20;
      }
      goto LABEL_24;
    }
  }
  else if ((SHIBYTE(__p[2]) & 0x80000000) == 0)
  {
    goto LABEL_19;
  }
  operator delete(__p[0]);
  if ((v14 & 0x80000000) == 0)
  {
LABEL_20:
    *(_DWORD *)(a2 + 80) = *(_DWORD *)(a1 + 40);
    if ((SHIBYTE(v19.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_25:
    operator delete(v19.__r_.__value_.__l.__data_);
    return;
  }
LABEL_24:
  operator delete(v13);
  *(_DWORD *)(a2 + 80) = *(_DWORD *)(a1 + 40);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_25;
  }
}

void sub_1000D865C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  sub_1000A318C(&a24);
  if (*(char *)(v25 - 81) < 0) {
    operator delete(*(void **)(v25 - 104));
  }
  sub_1000A318C(v24);
  _Unwind_Resume(a1);
}

void sub_1000D86D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a26 < 0) {
    JUMPOUT(0x1000D86BCLL);
  }
  JUMPOUT(0x1000D86C0);
}

void sub_1000D86E4(uint64_t a1)
{
  *(void *)a1 = off_10045A508;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + ++*(_DWORD *)(result + 56) = 0u;
  *(_OWORD *)(a1 + 68) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 225) = 0u;
  *(void *)(a1 + 248) = off_10045A4C8;
  *(void *)(a1 + 2++*(_DWORD *)(result + 56) = 0;
  *(_DWORD *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  *(unsigned char *)(a1 + 280) &= 0xF0u;
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 288) = off_10045A4E8;
  *(void *)(a1 + 296) = a1 + 304;
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 336) = 0;
  *(_DWORD *)(a1 + 344) = 0;
  *(void *)(a1 + 320) = 0;
  *(unsigned char *)(a1 + 348) &= 0xF8u;
  *(void *)(a1 + 384) = 0;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 376) = 0;
  *(_DWORD *)(a1 + 368) = 0;
  unsigned __int8 v1 = *(unsigned char *)(a1 + 402);
  *(void *)(a1 + 352) = 0;
  *(void *)(a1 + 360) = 0;
  *(_WORD *)(a1 + 400) = 0;
  *(unsigned char *)(a1 + 402) = ((v1 >> 2 << 18) | 0x10000u) >> 16;
  sub_100170CDC(7, &v2);
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  sub_1000DBAD0();
}

void sub_1000D8AE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1000DB9E0((uint64_t)va);
  sub_1000DB938(v5 - 48);
  sub_1000BA884(v5 - 32);
  sub_1000A318C(v4);
  _Unwind_Resume(a1);
}

void sub_1000D8B34(_Unwind_Exception *a1)
{
  sub_1000A318C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000D8B48(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  while (v2)
  {
    uint64_t v3 = v2;
    uint64_t v2 = (void *)*v2;
    uint64_t v4 = (std::__shared_weak_count *)v3[3];
    if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    operator delete(v3);
  }
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = 0;
  if (v5) {
    operator delete(v5);
  }
  return a1;
}

uint64_t sub_1000D8BF8(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0)
  {
    operator delete(*(void **)(a1 + 24));
    if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
      return a1;
    }
  }
  else if ((*(char *)(a1 + 23) & 0x80000000) == 0)
  {
    return a1;
  }
  operator delete(*(void **)a1);
  return a1;
}

int *sub_1000D8C54@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_100170200(a1, &v5);
  wireless_diagnostics::google::protobuf::io::FileInputStream::FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)v4, v5, -1);
  sub_100011394(a2);
  sub_1000DEB4C((uint64_t)a2);
  wireless_diagnostics::google::protobuf::io::FileInputStream::~FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)v4);
  return sub_100052AEC(&v5);
}

void sub_1000D8CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000243FC(v9);
  wireless_diagnostics::google::protobuf::io::FileInputStream::~FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)&a9);
  sub_100052AEC((int *)(v10 - 20));
  _Unwind_Resume(a1);
}

void sub_1000D8CE4(_Unwind_Exception *a1)
{
  sub_100052AEC((int *)(v1 - 20));
  _Unwind_Resume(a1);
}

void sub_1000D8CF8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  std::string __p = 0;
  int v8 = 0;
  uint64_t v9 = 0;
  sub_100306D24(a3, &__p, a1, *(void *)(a2 + 8), 0xFFFFFFFFLL);
  uint64_t v3 = (char *)__p;
  if (__p)
  {
    uint64_t v4 = v8;
    int v5 = __p;
    if (v8 != __p)
    {
      do
      {
        uint64_t v6 = (std::__shared_weak_count *)*((void *)v4 - 1);
        if (v6)
        {
          if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
        }
        v4 -= 16;
      }
      while (v4 != v3);
      int v5 = __p;
    }
    int v8 = v3;
    operator delete(v5);
  }
}

void sub_1000D8DC4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000D8DD8((void **)va);
  _Unwind_Resume(a1);
}

void **sub_1000D8DD8(void **a1)
{
  uint64_t v2 = (char *)*a1;
  if (*a1)
  {
    uint64_t v3 = (char *)a1[1];
    uint64_t v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        int v5 = (std::__shared_weak_count *)*((void *)v3 - 1);
        if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_1000D8E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100308AA4(a2, a1);
}

uint64_t sub_1000D8E98(uint64_t a1)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2)
  {
    do
    {
      int v5 = (void **)*v2;
      if (*((char *)v2 + 39) < 0) {
        operator delete(v2[2]);
      }
      operator delete(v2);
      uint64_t v2 = v5;
    }
    while (v5);
  }
  uint64_t v3 = *(void **)a1;
  *(void *)a1 = 0;
  if (v3) {
    operator delete(v3);
  }
  return a1;
}

void sub_1000D8F04(std::logic_error *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  std::logic_error::logic_error(&v12, a1);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  int v17 = -1;
  v12.__vftable = (std::logic_error_vtbl *)off_100453DD8;
  std::string v13 = &off_100453E00;
  sub_1000D97F4((uint64_t)&v18, (uint64_t)&v12);
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  int v21 = a4;
  uint64_t v9 = *(const void **)a5;
  size_t v10 = *(void *)(a5 + 8) - *(void *)a5;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0) {
      sub_1000A9108();
    }
    std::string __p = operator new(v10);
    memcpy(__p, v9, v10);
  }
  sub_1000D9498();
}

void sub_1000D9210(void *a1)
{
  std::invalid_argument::~invalid_argument(v1);
  sub_1000A6954(a1);
}

void sub_1000D9224(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    operator delete(__p);
    sub_1000A6954(a1);
  }
  sub_1000A6954(a1);
}

void sub_1000D924C(std::invalid_argument *this)
{
  this[1].__vftable = (std::invalid_argument_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::invalid_argument::~invalid_argument(this);
}

uint64_t sub_1000D92D8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = &off_100451ED0;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = off_100453D38;
  *(void *)(a1 + 16) = off_100453D70;
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = &off_100453DA8;
  return a1;
}

void sub_1000D93F8(_Unwind_Exception *a1)
{
  std::invalid_argument::~invalid_argument(v1);
  _Unwind_Resume(a1);
}

void sub_1000D940C(std::invalid_argument *this)
{
  this[1].__vftable = (std::invalid_argument_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::invalid_argument::~invalid_argument(this);
}

void sub_1000D9498()
{
}

void sub_1000D9734(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CD2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1000D9748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_1000CD2E0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_1000D9764(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000D97F4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = &off_100451ED0;
  uint64_t v4 = std::logic_error::logic_error((std::logic_error *)a1, (const std::logic_error *)a2);
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_100453D38;
  *(void *)(a1 + 16) = off_100453D70;
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = &off_100453DA8;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_1000D9920(_Unwind_Exception *a1)
{
  std::invalid_argument::~invalid_argument(v1);
  _Unwind_Resume(a1);
}

void sub_1000D9934(_Unwind_Exception *a1)
{
  sub_1000D9948(v1);
  _Unwind_Resume(a1);
}

void sub_1000D9948(std::invalid_argument *this)
{
  this[1].__vftable = (std::invalid_argument_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::invalid_argument::~invalid_argument(this);
}

void sub_1000D99D4(std::invalid_argument *this)
{
  this[1].__vftable = (std::invalid_argument_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::invalid_argument::~invalid_argument(this);

  operator delete();
}

void sub_1000D9A74()
{
}

void sub_1000D9AD0()
{
}

void sub_1000D9AF4(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_1000D92D8((uint64_t)exception, a1);
}

void sub_1000D9B3C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000D9B50(std::invalid_argument *a1)
{
  a1->__vftable = (std::invalid_argument_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::invalid_argument::~invalid_argument(a1 - 1);
}

void sub_1000D9BD8(std::invalid_argument *a1)
{
  a1->__vftable = (std::invalid_argument_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::invalid_argument::~invalid_argument(a1 - 1);

  operator delete();
}

void sub_1000D9C74()
{
}

void sub_1000D9CE4()
{
}

void sub_1000D9D08(void *a1)
{
  uint64_t v1 = (uint64_t)a1 + *(void *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x40uLL);
  sub_1000D92D8((uint64_t)exception, v1);
}

void sub_1000D9D64(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000D9D78(void *a1)
{
  uint64_t v1 = (std::invalid_argument *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::invalid_argument_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }

  std::invalid_argument::~invalid_argument(v1);
}

void sub_1000D9E18(void *a1)
{
  uint64_t v1 = (std::invalid_argument *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::invalid_argument_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }
  std::invalid_argument::~invalid_argument(v1);

  operator delete();
}

void sub_1000D9ECC(std::invalid_argument *this)
{
  this[1].__vftable = (std::invalid_argument_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::invalid_argument::~invalid_argument(this);

  operator delete();
}

void sub_1000D9F6C(std::invalid_argument *a1)
{
  a1->__vftable = (std::invalid_argument_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::invalid_argument::~invalid_argument(a1 - 1);
}

void sub_1000D9FF4(std::invalid_argument *a1)
{
  a1->__vftable = (std::invalid_argument_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::invalid_argument::~invalid_argument(a1 - 1);

  operator delete();
}

uint64_t sub_1000DA090(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = &off_100451ED0;
  uint64_t v4 = std::logic_error::logic_error((std::logic_error *)a1, (const std::logic_error *)a2);
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_100453D38;
  *(void *)(a1 + 16) = off_100453D70;
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = &off_100453DA8;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_1000DA1BC(_Unwind_Exception *a1)
{
  std::invalid_argument::~invalid_argument(v1);
  _Unwind_Resume(a1);
}

void sub_1000DA1D0(_Unwind_Exception *a1)
{
  sub_1000D9948(v1);
  _Unwind_Resume(a1);
}

void sub_1000DA1E4(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

uint64_t sub_1000DA214@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  uint64_t result = sub_1000DA2C4(a1, a2);
  if ((result & 1) == 0)
  {
    std::bad_cast::bad_cast(&v3);
    v3.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v3);
  }
  return result;
}

void sub_1000DA298(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
  std::bad_cast::~bad_cast(&a10);
  if (*(char *)(v10 + 23) < 0) {
    operator delete(*(void **)v10);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1000DA2C4(uint64_t a1, std::string *a2)
{
  long long v23 = 0u;
  long long v24 = 0u;
  memset(v22, 0, sizeof(v22));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v26 = 0u;
  uint64_t v27 = 24;
  *(void *)&long long v23 = 0;
  v22[0].n128_u64[0] = (unint64_t)off_100453E60;
  std::ios_base::init(&v29, v22);
  uint64_t v30 = 0;
  int v31 = -1;
  uint64_t v33 = (char *)&v32;
  float v34 = (char *)&v32 + 2;
  sub_1000DA7EC(v22, a1);
  uint64_t v5 = v4;
  if (v4)
  {
    long long v7 = v33;
    uint64_t v6 = v34;
    unint64_t v8 = v34 - v33;
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v12 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v11 = (v12 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v11 >= v8)
      {
        unint64_t v13 = HIBYTE(v12);
LABEL_9:
        if ((v13 & 0x80u) == 0) {
          uint64_t v9 = a2;
        }
        else {
          uint64_t v9 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_12:
        if (v7 == v6)
        {
          uint64_t v14 = v9;
        }
        else
        {
          if (v8 < 0x20 || (unint64_t)((char *)v9 - v7) < 0x20)
          {
            uint64_t v14 = v9;
            uint64_t v15 = v7;
          }
          else
          {
            uint64_t v14 = (std::string *)((char *)v9 + (v8 & 0xFFFFFFFFFFFFFFE0));
            uint64_t v15 = &v7[v8 & 0xFFFFFFFFFFFFFFE0];
            uint64_t v16 = (long long *)(v7 + 16);
            int v17 = &v9->__r_.__value_.__r.__words[2];
            unint64_t v18 = v8 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              long long v19 = *v16;
              *((_OWORD *)v17 - 1) = *(v16 - 1);
              *(_OWORD *)int v17 = v19;
              v16 += 2;
              v17 += 4;
              v18 -= 32;
            }
            while (v18);
            if (v8 == (v8 & 0xFFFFFFFFFFFFFFE0)) {
              goto LABEL_22;
            }
          }
          do
          {
            std::string::value_type v20 = *v15++;
            v14->__r_.__value_.__s.__data_[0] = v20;
            uint64_t v14 = (std::string *)((char *)v14 + 1);
          }
          while (v15 != v6);
        }
LABEL_22:
        v14->__r_.__value_.__s.__data_[0] = 0;
        if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
          a2->__r_.__value_.__l.__size_ = v8;
        }
        else {
          *((unsigned char *)&a2->__r_.__value_.__s + 23) = v8 & 0x7F;
        }
        goto LABEL_25;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      uint64_t v9 = a2;
      if (v8 <= 0x16) {
        goto LABEL_12;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v11 = 22;
    }
    std::string::__grow_by(a2, v11, v8 - v11, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v13) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_9;
  }
LABEL_25:
  std::ostream::~ostream();
  if (SBYTE7(v26) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v5;
}

void sub_1000DA528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1000DA53C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1000DA550(void *a1)
{
}

uint64_t sub_1000DA568(uint64_t a1)
{
  std::ostream::~ostream();
  if (*(char *)(a1 + 87) < 0)
  {
    operator delete(*(void **)(a1 + 64));
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return std::streambuf::~streambuf();
}

uint64_t sub_1000DA5F0(uint64_t a1)
{
  if (*(char *)(a1 + 87) < 0)
  {
    operator delete(*(void **)(a1 + 64));
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  return std::streambuf::~streambuf();
}

void sub_1000DA670(uint64_t a1)
{
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
  std::streambuf::~streambuf();

  operator delete();
}

void *sub_1000DA6E4(void *result, uint64_t a2, uint64_t a3)
{
  result[2] = a2;
  result[3] = a2;
  result[4] = a2 + a3;
  return result;
}

double sub_1000DA6F4@<D0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  if ((a4 & 0x10) != 0)
  {
    uint64_t v7 = -1;
    goto LABEL_19;
  }
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[4] - v5;
  if (!a3)
  {
    uint64_t v7 = -1;
    if (a2 < 0 || v6 < a2) {
      goto LABEL_19;
    }
    uint64_t v9 = v5 + a2;
LABEL_15:
    uint64_t v8 = a1[4];
    goto LABEL_16;
  }
  if (a3 == 1)
  {
    uint64_t v7 = -1;
    uint64_t v10 = a1[3] - v5 + a2;
    if (v10 < 0 || v10 > v6) {
      goto LABEL_19;
    }
    uint64_t v9 = a1[3] + a2;
    goto LABEL_15;
  }
  if (a3 != 2)
  {
    uint64_t v9 = a1[3];
    goto LABEL_18;
  }
  uint64_t v7 = -1;
  if ((a2 & 0x8000000000000000) == 0 && v6 >= a2)
  {
    uint64_t v8 = a1[4];
    uint64_t v9 = v8 - a2;
LABEL_16:
    a1[3] = v9;
    a1[4] = v8;
LABEL_18:
    uint64_t v7 = v9 - v5;
  }
LABEL_19:
  double result = 0.0;
  *(_OWORD *)(a5 + 96) = 0u;
  *(_OWORD *)(a5 + 112) = 0u;
  *(_OWORD *)(a5 + 64) = 0u;
  *(_OWORD *)(a5 + 80) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)(a5 + 48) = 0u;
  *(_OWORD *)a5 = 0u;
  *(_OWORD *)(a5 + 16) = 0u;
  *(void *)(a5 + 128) = v7;
  return result;
}

double sub_1000DA7A4@<D0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  if ((a3 & 0x10) == 0)
  {
    uint64_t v4 = a1[2];
    uint64_t v5 = *(void *)(a2 + 128);
    if (v5 <= a1[4] - v4)
    {
      uint64_t v6 = v4 + v5;
      uint64_t v7 = a1[4];
      a1[3] = v6;
      a1[4] = v7;
    }
  }
  double result = 0.0;
  *(_OWORD *)(a4 + 96) = 0u;
  *(_OWORD *)(a4 + 112) = 0u;
  *(_OWORD *)(a4 + 64) = 0u;
  *(_OWORD *)(a4 + 80) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  *(void *)(a4 + 128) = -1;
  return result;
}

__n128 sub_1000DA7EC(__n128 *a1, uint64_t a2)
{
  uint64_t v4 = &a1[6].n128_u64[1];
  uint64_t v5 = (std::ios_base *)&a1[6].n128_i8[*(void *)(a1[6].n128_u64[1] - 24) + 8];
  v5->__exceptions_ = 1;
  std::ios_base::clear(v5, v5->__rdstate_);
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1000559FC(__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a2;
    uint64_t v8 = *(void *)(a2 + 16);
  }
  sub_1000DA93C(v4, (unsigned __int8 *)__p, 0x26u, 0x22u);
  if (SHIBYTE(v8) < 0) {
    operator delete(__p[0]);
  }
  __n128 result = *(__n128 *)(*(unint64_t *)((char *)v4 + *(void *)(a1[6].n128_u64[1] - 24) + 40) + 40);
  a1[17] = result;
  return result;
}

uint64_t sub_1000DA8E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  if (a2 != 1) {
    _Unwind_Resume(exception_object);
  }
  __cxa_begin_catch(exception_object);
  __cxa_end_catch();
  return 0;
}

void *sub_1000DA93C(void *a1, unsigned __int8 *a2, unsigned int a3, unsigned int a4)
{
  std::ostream::sentry::sentry();
  if (!v39) {
    goto LABEL_30;
  }
  if ((char)a2[23] < 0)
  {
    std::string::size_type v11 = a2;
    a2 = *(unsigned __int8 **)a2;
    unint64_t v8 = *((void *)v11 + 1);
    if (v8) {
      goto LABEL_4;
    }
LABEL_7:
    unint64_t v9 = 2;
    goto LABEL_18;
  }
  unint64_t v8 = a2[23];
  if (!a2[23]) {
    goto LABEL_7;
  }
LABEL_4:
  if (v8 < 4)
  {
    unint64_t v9 = 2;
    uint64_t v10 = a2;
    do
    {
LABEL_11:
      int v26 = *v10++;
      int v25 = v26;
      if (v26 == a4 || v25 == a3) {
        uint64_t v28 = 2;
      }
      else {
        uint64_t v28 = 1;
      }
      v9 += v28;
    }
    while (v10 != &a2[v8]);
    goto LABEL_18;
  }
  uint64_t v10 = &a2[v8 & 0xFFFFFFFFFFFFFFFCLL];
  int64x2_t v12 = (int64x2_t)xmmword_1003E70F0;
  unint64_t v13 = a2 + 2;
  int64x2_t v14 = 0uLL;
  int32x2_t v15 = (int32x2_t)vand_s8((int8x8_t)vdup_n_s32(a3), (int8x8_t)0xFF000000FFLL);
  int32x2_t v16 = (int32x2_t)vand_s8((int8x8_t)vdup_n_s32(a4), (int8x8_t)0xFF000000FFLL);
  int8x16_t v17 = (int8x16_t)vdupq_n_s64(2uLL);
  unint64_t v18 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v19.i32[0] = *(v13 - 2);
    v19.i32[1] = *(v13 - 1);
    v20.i32[0] = *v13;
    v20.i32[1] = v13[1];
    int8x8_t v21 = vorr_s8((int8x8_t)vceq_s32(v19, v15), (int8x8_t)vceq_s32(v19, v16));
    v22.i64[0] = v21.i32[0];
    v22.i64[1] = v21.i32[1];
    int8x16_t v23 = v22;
    int8x8_t v24 = vorr_s8((int8x8_t)vceq_s32(v20, v15), (int8x8_t)vceq_s32(v20, v16));
    v22.i64[0] = v24.i32[0];
    v22.i64[1] = v24.i32[1];
    int64x2_t v12 = vaddq_s64(vsubq_s64((int64x2_t)vandq_s8(v23, v17), (int64x2_t)vmvnq_s8(v23)), v12);
    int64x2_t v14 = vaddq_s64(vsubq_s64((int64x2_t)vandq_s8(v22, v17), (int64x2_t)vmvnq_s8(v22)), v14);
    v13 += 4;
    v18 -= 4;
  }
  while (v18);
  unint64_t v9 = vaddvq_s64(vaddq_s64(v14, v12));
  if (v8 != (v8 & 0xFFFFFFFFFFFFFFFCLL)) {
    goto LABEL_11;
  }
LABEL_18:
  std::ios_base v29 = (char *)a1 + *(void *)(*a1 - 24);
  uint64_t v30 = (void *)*((void *)v29 + 5);
  unint64_t v31 = *((void *)v29 + 3);
  unint64_t v32 = v31 - v9;
  if (v31 <= v9)
  {
    if (!sub_1000DAE54(*((void **)v29 + 5), a2, v8, v9, a3, a4)) {
      goto LABEL_37;
    }
  }
  else if ((*((_DWORD *)v29 + 2) & 0xB0) == 0x20)
  {
    if (!sub_1000DAE54(*((void **)v29 + 5), a2, v8, v9, a3, a4)) {
      goto LABEL_37;
    }
    uint64_t v33 = (char *)a1 + *(void *)(*a1 - 24);
    int v34 = *((_DWORD *)v33 + 36);
    if (v34 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)));
      float v35 = std::locale::use_facet(&v40, &std::ctype<char>::id);
      int v34 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v35->__vftable[2].~facet_0)(v35, 32);
      std::locale::~locale(&v40);
      *((_DWORD *)v33 + 36) = v34;
    }
    v40.__locale_ = (std::locale::__imp *)(0x101010101010101 * v34);
    if (v32 >= 9)
    {
      while ((*(uint64_t (**)(void *, std::locale *, uint64_t))(*v30 + 96))(v30, &v40, 8) == 8)
      {
        v32 -= 8;
        if (v32 <= 8) {
          goto LABEL_26;
        }
      }
      goto LABEL_37;
    }
LABEL_26:
    if ((*(uint64_t (**)(void *, std::locale *, unint64_t))(*v30 + 96))(v30, &v40, v32) != v32)
    {
LABEL_37:
      std::ostream::sentry::~sentry();
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 1);
      return a1;
    }
  }
  else
  {
    if (*((_DWORD *)v29 + 36) == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)));
      float v37 = std::locale::use_facet(&v40, &std::ctype<char>::id);
      int v38 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v37->__vftable[2].~facet_0)(v37, 32);
      std::locale::~locale(&v40);
      *((_DWORD *)v29 + 36) = v38;
      v40.__locale_ = (std::locale::__imp *)(0x101010101010101 * v38);
      if (v32 >= 9)
      {
LABEL_33:
        while ((*(uint64_t (**)(void *, std::locale *, uint64_t))(*v30 + 96))(v30, &v40, 8) == 8)
        {
          v32 -= 8;
          if (v32 <= 8) {
            goto LABEL_35;
          }
        }
        goto LABEL_37;
      }
    }
    else
    {
      v40.__locale_ = (std::locale::__imp *)(0x101010101010101 * *((_DWORD *)v29 + 36));
      if (v32 >= 9) {
        goto LABEL_33;
      }
    }
LABEL_35:
    if ((*(uint64_t (**)(void *, std::locale *, unint64_t))(*v30 + 96))(v30, &v40, v32) != v32
      || !sub_1000DAE54(v30, a2, v8, v9, a3, a4))
    {
      goto LABEL_37;
    }
  }
  *(void *)((char *)a1 + *(void *)(*a1 - 24) + 24) = 0;
LABEL_30:
  std::ostream::sentry::~sentry();
  return a1;
}

void sub_1000DADFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, std::locale a13)
{
}

BOOL sub_1000DAE54(void *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, unsigned __int8 a6)
{
  int v12 = a6;
  unint64_t v13 = (unsigned __int8 *)a1[6];
  if (v13 == (unsigned __int8 *)a1[7])
  {
    if ((*(unsigned int (**)(void *, void))(*a1 + 104))(a1, a6) == -1) {
      return 0;
    }
  }
  else
  {
    a1[6] = v13 + 1;
    unsigned __int8 *v13 = a6;
  }
  if (a3 == a4)
  {
    if ((*(uint64_t (**)(void *, unsigned __int8 *, uint64_t))(*a1 + 96))(a1, a2, a3) != a3) {
      return 0;
    }
  }
  else
  {
    for (; a3; --a3)
    {
      uint64_t v15 = *a2;
      if (v15 == a5 || v15 == v12)
      {
        int8x16_t v17 = (unsigned __int8 *)a1[6];
        if (v17 == (unsigned __int8 *)a1[7])
        {
          if ((*(unsigned int (**)(void *, void))(*a1 + 104))(a1, a5) == -1) {
            return 0;
          }
        }
        else
        {
          a1[6] = v17 + 1;
          *int8x16_t v17 = a5;
        }
      }
      int64x2_t v14 = (unsigned char *)a1[6];
      if (v14 == (unsigned char *)a1[7])
      {
        if ((*(unsigned int (**)(void *, uint64_t))(*a1 + 104))(a1, v15) == -1) {
          return 0;
        }
      }
      else
      {
        a1[6] = v14 + 1;
        *int64x2_t v14 = v15;
      }
      ++a2;
    }
  }
  int32x2_t v19 = (unsigned char *)a1[6];
  if (v19 == (unsigned char *)a1[7]) {
    return (*(unsigned int (**)(void *, void))(*a1 + 104))(a1, a6) != -1;
  }
  a1[6] = v19 + 1;
  *int32x2_t v19 = v12;
  return 1;
}

void *sub_1000DB084(void *a1)
{
  if (*a1) {
    std::ios_base::clear((std::ios_base *)(*a1 + *(void *)(*(void *)*a1 - 24)), *(_DWORD *)(*a1 + *(void *)(*(void *)*a1 - 24) + 32) | 1);
  }
  return a1;
}

void sub_1000DB0D4(uint64_t a1)
{
  exception = (__n128 *)__cxa_allocate_exception(0x48uLL);
  sub_1000DB134(exception, a1);
}

void sub_1000DB11C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

__n128 sub_1000DB134(__n128 *a1, uint64_t a2)
{
  a1->n128_u64[0] = (unint64_t)&off_100451ED0;
  a1->n128_u64[1] = (unint64_t)&off_100454020;
  __n128 result = *(__n128 *)(a2 + 8);
  a1[1] = result;
  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u32[0] = -1;
  a1->n128_u64[0] = (unint64_t)&off_100453FA8;
  a1->n128_u64[1] = (unint64_t)off_100453FD8;
  a1[2].n128_u64[0] = (unint64_t)off_100454000;
  a1[2].n128_u64[1] = 0;
  return result;
}

std::bad_cast *sub_1000DB1E0(std::bad_cast *a1)
{
  a1[4].__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[5].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    a1[5].__vftable = 0;
  }
  std::bad_cast::~bad_cast(a1 + 1);
  return a1;
}

void sub_1000DB264()
{
}

void sub_1000DB3AC()
{
  std::bad_cast::~bad_cast(v0);
  operator delete();
}

void sub_1000DB3D8(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_1000DB40C(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x48uLL);
  sub_1000DB7B0((uint64_t)exception, a1);
}

void sub_1000DB454(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000DB468(std::bad_cast *a1)
{
  a1[4].__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[5].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    a1[5].__vftable = 0;
  }
  std::bad_cast::~bad_cast(a1 + 1);

  operator delete();
}

void sub_1000DB50C(std::bad_cast *this)
{
  this[3].__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = this[4].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    this[4].__vftable = 0;
  }

  std::bad_cast::~bad_cast(this);
}

void sub_1000DB598(std::bad_cast *this)
{
  this[3].__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = this[4].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    this[4].__vftable = 0;
  }
  std::bad_cast::~bad_cast(this);

  operator delete();
}

const char *sub_1000DB640()
{
  return "bad lexical cast: source type value could not be interpreted as target";
}

void sub_1000DB64C(std::bad_cast *a1)
{
  a1->__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  std::bad_cast::~bad_cast(a1 - 3);
}

void sub_1000DB6D4(std::bad_cast *a1)
{
  a1->__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  std::bad_cast::~bad_cast(a1 - 3);

  operator delete();
}

void sub_1000DB778(std::bad_cast *a1)
{
  std::bad_cast::~bad_cast(a1);

  operator delete();
}

uint64_t sub_1000DB7B0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  *(void *)(a1 + 8) = &off_100454020;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = &off_100451DC0;
  *(void *)(a1 + 40) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)a1 = &off_100453FA8;
  *(void *)(a1 + 8) = off_100453FD8;
  *(void *)(a1 + 32) = off_100454000;
  return a1;
}

void sub_1000DB8D4(_Unwind_Exception *a1)
{
  std::bad_cast::~bad_cast(v1);
  _Unwind_Resume(a1);
}

std::string *sub_1000DB8E8@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1000DB91C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000DB938(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

uint64_t sub_1000DB9E0(uint64_t a1)
{
  *(void *)a1 = off_1004541C8;
  uint64_t v2 = *(void **)(a1 + 56);
  if (v2)
  {
    free(v2);
    *(_DWORD *)(a1 + 64) = 0;
  }
  *(void *)a1 = off_100454688;
  std::bad_cast v3 = *(atomic_uint **)(a1 + 16);
  if (v3)
  {
    if (atomic_fetch_add(v3 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v3 + 16))(v3);
      if (atomic_fetch_add(v3 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v3 + 24))(v3);
      }
    }
  }
  return a1;
}

void sub_1000DBAD0()
{
}

void sub_1000DBBF0(void *a1)
{
}

void sub_1000DBBFC(_Unwind_Exception *a1)
{
}

uint64_t sub_1000DBC10(uint64_t a1)
{
  *(void *)a1 = off_100454048;
  if (*(unsigned char *)(a1 + 24))
  {
    (**(void (***)(uint64_t))(a1 + 32))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1000DBC88(uint64_t a1)
{
  *(void *)a1 = off_100454048;
  if (*(unsigned char *)(a1 + 24))
  {
    (**(void (***)(uint64_t))(a1 + 32))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }

  operator delete();
}

uint64_t sub_1000DBD20(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v1 = result + 32;
    __n128 result = (**(uint64_t (***)(uint64_t))(result + 32))(result + 32);
    *(unsigned char *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_1000DBD74(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterIN6apache6thrift9transport21TInputStreamTransportEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterIN6apache6thrift9transport21TInputStreamTransportEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterIN6apache6thrift9transport21TInputStreamTransportEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterIN6apache6thrift9transport21TInputStreamTransportEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_1000DBDE4()
{
  return 0;
}

uint64_t sub_1000DBDEC(uint64_t a1)
{
  return a1 + 24;
}

void *sub_1000DBDF4(void *result)
{
  uint64_t v1 = result;
  *__n128 result = off_1004540A8;
  uint64_t v2 = (std::__shared_weak_count *)result[3];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_1000DBE8C(void *a1)
{
  *a1 = off_1004540A8;
  uint64_t v1 = (std::__shared_weak_count *)a1[3];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  operator delete();
}

uint64_t sub_1000DBF34()
{
  return 0;
}

uint64_t sub_1000DBF3C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 16))();
}

void sub_1000DBF60()
{
  exception = __cxa_allocate_exception(0x28uLL);
  uint64_t v1 = (char *)operator new(0x20uLL);
  strcpy(v1, "Cannot open base TTransport.");
  *(void *)exception = off_100454188;
  sub_1000559FC(exception + 8, v1, 0x1CuLL);
  *(void *)exception = off_10046A768;
  *((_DWORD *)exception + 8) = 1;
}

void sub_1000DC01C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_1000DC030(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  operator delete(v2);
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000DC054(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000DC068(uint64_t a1)
{
  uint64_t v1 = *(const void **)(a1 + 8);
  if (v1)
  {
    if (v2)
    {
      unint64_t v3 = v2;
      if (!std::filebuf::close())
      {
        uint64_t v4 = (std::ios_base *)((char *)v3 + *(void *)(*v3 - 24));
        std::ios_base::iostate v5 = v4->__rdstate_ | 4;
        std::ios_base::clear(v4, v5);
      }
    }
  }
}

uint64_t sub_1000DC11C(uint64_t a1)
{
  return *(unsigned int *)(*(void *)(a1 + 8) + 8);
}

uint64_t sub_1000DC154()
{
  return 0;
}

uint64_t sub_1000DC160()
{
  return 0;
}

uint64_t sub_1000DC16C()
{
  return 0;
}

void sub_1000DC178(char *a1@<X8>)
{
  a1[23] = 7;
  strcpy(a1, "Unknown");
}

void sub_1000DC1A0()
{
  exception = __cxa_allocate_exception(0x28uLL);
  uint64_t v1 = (char *)operator new(0x20uLL);
  strcpy(v1, "Base TTransport cannot consume.");
  *(void *)exception = off_100454188;
  sub_1000559FC(exception + 8, v1, 0x1FuLL);
  *(void *)exception = off_10046A768;
  *((_DWORD *)exception + 8) = 1;
}

void sub_1000DC25C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_1000DC270(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  operator delete(v2);
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000DC294(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DC2A8(uint64_t a1, int a2, long long *a3)
{
  *(void *)a1 = off_100454188;
  uint64_t v5 = a1 + 8;
  if (*((char *)a3 + 23) < 0)
  {
    sub_1000559FC((unsigned char *)v5, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v6 = *a3;
    *(void *)(v5 + 16) = *((void *)a3 + 2);
    *(_OWORD *)uint64_t v5 = v6;
  }
  *(void *)a1 = off_10046A768;
  *(_DWORD *)(a1 + 32) = a2;
  return a1;
}

void sub_1000DC330(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000DC344(std::exception *this)
{
  uint64_t v1 = this;
  this->__vftable = (std::exception_vtbl *)off_100454188;
  if (SHIBYTE(this[3].__vftable) < 0)
  {
    operator delete(this[1].__vftable);
    this = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  std::exception::~exception(this);
}

void sub_1000DC3C4(std::exception *this)
{
  uint64_t v1 = this;
  this->__vftable = (std::exception_vtbl *)off_100454188;
  if (SHIBYTE(this[3].__vftable) < 0)
  {
    operator delete(this[1].__vftable);
    this = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  std::exception::~exception(this);
}

void sub_1000DC444(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)off_100454188;
  if (SHIBYTE(this[3].__vftable) < 0) {
    operator delete(this[1].__vftable);
  }
  std::exception::~exception(this);

  operator delete();
}

const char *sub_1000DC4B8(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0)
  {
    if (*(void *)(a1 + 16)) {
      return *(const char **)(a1 + 8);
    }
    else {
      return "Default TException.";
    }
  }
  else if (*(unsigned char *)(a1 + 31))
  {
    return (const char *)(a1 + 8);
  }
  else
  {
    return "Default TException.";
  }
}

uint64_t sub_1000DC4F4(uint64_t a1, uint64_t a2, unsigned int a3)
{
  if (!a3) {
    return 0;
  }
  LODWORD(v5) = 0;
  do
  {
    std::istream::read();
    int v6 = *(_DWORD *)(*(void *)(a1 + 8) + 8);
    if (!v6)
    {
      exception = __cxa_allocate_exception(0x28uLL);
      sub_1000AE4B0(&v9, "No more data to read.");
      sub_1000DC2A8((uint64_t)exception, 3, &v9);
    }
    uint64_t v5 = (v5 + v6);
  }
  while (v5 < a3);
  return v5;
}

void sub_1000DC5D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

void sub_1000DC60C()
{
  exception = __cxa_allocate_exception(0x28uLL);
  uint64_t v1 = (char *)operator new(0x20uLL);
  strcpy(v1, "Can't write to input stream");
  *(void *)exception = off_100454188;
  sub_1000559FC(exception + 8, v1, 0x1BuLL);
  *(void *)exception = off_10046A768;
  *((_DWORD *)exception + 8) = 1;
}

void sub_1000DC6C8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_1000DC6DC(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  operator delete(v2);
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1000DC700(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DC714(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = a2[1];
  uint64_t v7 = *a2;
  unint64_t v8 = (atomic_uint *)v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v4 + 8), 1u, memory_order_relaxed);
  }
  sub_1000DC83C((void *)a1, &v7);
  uint64_t v5 = v8;
  if (v8)
  {
    if (atomic_fetch_add(v8 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v5 + 16))(v5);
      if (atomic_fetch_add(v5 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v5 + 24))(v5);
      }
    }
  }
  *(void *)a1 = off_1004541C8;
  *(void *)(a1 + 32) = *a2;
  *(void *)(a1 + 40) = 0;
  *(_WORD *)(a1 + 48) = 256;
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_1000DC828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_1000DC83C(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = (atomic_uint *)a2[1];
  if (v4)
  {
    atomic_fetch_add_explicit(v4 + 2, 1u, memory_order_relaxed);
    atomic_fetch_add_explicit(v4 + 2, 1u, memory_order_relaxed);
  }
  *a1 = off_100454688;
  a1[1] = v3;
  a1[2] = v4;
  if (v4)
  {
    atomic_fetch_add_explicit(v4 + 2, 1u, memory_order_relaxed);
    a1[3] = 0x4000000000;
    if (atomic_fetch_add(v4 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v4 + 16))(v4);
      if (atomic_fetch_add(v4 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v4 + 24))(v4);
      }
    }
    *a1 = off_100454510;
    if (atomic_fetch_add(v4 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v4 + 16))(v4);
      if (atomic_fetch_add(v4 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v4 + 24))(v4);
      }
    }
  }
  else
  {
    a1[3] = 0x4000000000;
  }
  *a1 = off_100454398;
  return a1;
}

uint64_t sub_1000DC9F0(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_1000DCA98(uint64_t a1)
{
  *(void *)a1 = off_1004541C8;
  uint64_t v2 = *(void **)(a1 + 56);
  if (v2)
  {
    free(v2);
    *(_DWORD *)(a1 + 64) = 0;
  }
  *(void *)a1 = off_100454688;
  uint64_t v3 = *(atomic_uint **)(a1 + 16);
  if (v3)
  {
    if (atomic_fetch_add(v3 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v3 + 16))(v3);
      if (atomic_fetch_add(v3 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v3 + 24))(v3);
      }
    }
  }

  operator delete();
}

uint64_t sub_1000DCBAC()
{
  return 0;
}

uint64_t sub_1000DCBB4()
{
  return 0;
}

uint64_t sub_1000DCBBC()
{
  return 0;
}

void sub_1000DCBC4()
{
}

void sub_1000DCBF4()
{
}

uint64_t sub_1000DCC10()
{
  return 3;
}

uint64_t sub_1000DCC24()
{
  return 0;
}

void sub_1000DCC2C()
{
}

uint64_t sub_1000DCC50()
{
  return 1;
}

void sub_1000DCC60()
{
}

void sub_1000DCC98()
{
}

void sub_1000DCCAC()
{
}

uint64_t sub_1000DCCC4()
{
  return 6;
}

uint64_t sub_1000DCCDC()
{
  return 0;
}

void sub_1000DCCE4()
{
}

void sub_1000DCD14()
{
}

uint64_t sub_1000DCD2C()
{
  return 5;
}

uint64_t sub_1000DCD40()
{
  return 0;
}

void sub_1000DCD48()
{
}

void sub_1000DCD78()
{
}

uint64_t sub_1000DCD90()
{
  return 5;
}

uint64_t sub_1000DCDA4()
{
  return 0;
}

void sub_1000DCDAC()
{
}

uint64_t sub_1000DCDD0()
{
  return 1;
}

void sub_1000DCDE0()
{
}

uint64_t sub_1000DCE04()
{
  return 1;
}

void sub_1000DCE14()
{
}

uint64_t sub_1000DCE40()
{
  return 2;
}

void sub_1000DCE50()
{
}

uint64_t sub_1000DCE78()
{
  return 4;
}

void sub_1000DCE88()
{
}

uint64_t sub_1000DCEB0()
{
  return 8;
}

void sub_1000DCEC0()
{
}

uint64_t sub_1000DCEEC()
{
  return 8;
}

void sub_1000DCEFC(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0)
  {
    if (*(void *)(a2 + 8) >> 31)
    {
      exception = __cxa_allocate_exception(0x28uLL);
      exception[2] = 0;
      exception[3] = 0;
      void *exception = off_100454818;
      exception[1] = 0;
      *((_DWORD *)exception + 8) = 3;
    }
  }
  sub_1000DC60C();
}

void sub_1000DCFD4(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0)
  {
    if (*(void *)(a2 + 8) >> 31)
    {
      exception = __cxa_allocate_exception(0x28uLL);
      exception[2] = 0;
      exception[3] = 0;
      void *exception = off_100454818;
      exception[1] = 0;
      *((_DWORD *)exception + 8) = 3;
    }
  }
  sub_1000DC60C();
}

uint64_t sub_1000DD0B0()
{
  return 0;
}

uint64_t sub_1000DD0B8(int a1, std::string *this)
{
  return 0;
}

uint64_t sub_1000DD0E0()
{
  return 0;
}

uint64_t sub_1000DD0E8(uint64_t a1, uint64_t a2, _DWORD *a3, _WORD *a4)
{
  uint64_t v7 = 1;
  sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v10, 1u);
  unsigned int v8 = v10;
  *a3 = v10;
  if (v8)
  {
    sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v11, 2u);
    unsigned int v8 = bswap32(v11) >> 16;
    uint64_t v7 = 3;
  }
  *a4 = v8;
  return v7;
}

uint64_t sub_1000DD168()
{
  return 0;
}

uint64_t sub_1000DD174()
{
  return 0;
}

uint64_t sub_1000DD180()
{
  return 0;
}

uint64_t sub_1000DD18C()
{
  return 0;
}

uint64_t sub_1000DD194(uint64_t a1, BOOL *a2)
{
  sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v4, 1u);
  *a2 = v4 != 0;
  return 1;
}

uint64_t sub_1000DD1E0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v7, 1u);
  if (v7) {
    uint64_t v5 = *a2 | a3;
  }
  else {
    uint64_t v5 = *a2 & ~a3;
  }
  *a2 = v5;
  return 1;
}

uint64_t sub_1000DD254(uint64_t a1, unsigned char *a2)
{
  sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v4, 1u);
  *a2 = v4;
  return 1;
}

uint64_t sub_1000DD298(uint64_t a1, _WORD *a2)
{
  sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v4, 2u);
  *a2 = bswap32(v4) >> 16;
  return 2;
}

uint64_t sub_1000DD2E4(uint64_t a1, _DWORD *a2)
{
  sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v4, 4u);
  *a2 = bswap32(v4);
  return 4;
}

uint64_t sub_1000DD32C(uint64_t a1, void *a2)
{
  sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v4, 8u);
  *a2 = bswap64(v4);
  return 8;
}

uint64_t sub_1000DD374(uint64_t a1, void *a2)
{
  sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v4, 8u);
  *a2 = bswap64(v4);
  return 8;
}

uint64_t sub_1000DD3BC(uint64_t a1, std::string *a2)
{
  sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v5, 4u);
  return sub_1000DE164(a1, a2, bswap32(v5)) + 4;
}

uint64_t sub_1000DD410(uint64_t a1, std::string *a2)
{
  sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v5, 4u);
  return sub_1000DE164(a1, a2, bswap32(v5)) + 4;
}

void *sub_1000DD468(void *a1)
{
  *a1 = off_100454688;
  uint64_t v2 = (atomic_uint *)a1[2];
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_1000DD52C(void *a1)
{
  *a1 = off_100454688;
  uint64_t v1 = (atomic_uint *)a1[2];
  if (v1)
  {
    if (atomic_fetch_add(v1 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v1 + 16))(v1);
      if (atomic_fetch_add(v1 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v1 + 24))(v1);
      }
    }
  }

  operator delete();
}

uint64_t sub_1000DD614(uint64_t a1, int a2)
{
  uint64_t v2 = 0;
  switch(a2)
  {
    case 2:
      LOBYTE(__p) = 0;
      return (*(uint64_t (**)(uint64_t, void **))(*(void *)a1 + 280))(a1, &__p);
    case 3:
      LOBYTE(__p) = 0;
      return (*(uint64_t (**)(uint64_t, void **))(*(void *)a1 + 296))(a1, &__p);
    case 4:
      std::string __p = 0;
      return (*(uint64_t (**)(uint64_t, void **))(*(void *)a1 + 328))(a1, &__p);
    case 6:
      LOWORD(__p) = 0;
      return (*(uint64_t (**)(uint64_t, void **))(*(void *)a1 + 304))(a1, &__p);
    case 8:
      LODWORD(__p) = 0;
      return (*(uint64_t (**)(uint64_t, void **))(*(void *)a1 + 312))(a1, &__p);
    case 10:
      std::string __p = 0;
      return (*(uint64_t (**)(uint64_t, void **))(*(void *)a1 + 320))(a1, &__p);
    case 11:
      std::string __p = 0;
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      uint64_t v2 = (*(uint64_t (**)(uint64_t, void **))(*(void *)a1 + 344))(a1, &__p);
      if (SHIBYTE(v17) < 0) {
        goto LABEL_28;
      }
      goto LABEL_14;
    case 12:
      std::string __p = 0;
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      LOWORD(v14) = 0;
      HIDWORD(v14) = 0;
      for (int i = (*(uint64_t (**)(uint64_t, void **))(*(void *)a1 + 200))(a1, &__p);
            ;
            int i = v10 + v9 + (*(uint64_t (**)(uint64_t))(*(void *)a1 + 224))(a1))
      {
        int v9 = (*(uint64_t (**)(uint64_t, void **, char *, uint64_t *))(*(void *)a1 + 216))(a1, &__p, (char *)&v14 + 4, &v14)+ i;
        if (!HIDWORD(v14)) {
          break;
        }
        int v10 = sub_1000DD614(a1, HIDWORD(v14));
      }
      uint64_t v2 = (*(unsigned int (**)(uint64_t))(*(void *)a1 + 208))(a1) + v9;
      if ((SHIBYTE(v17) & 0x80000000) == 0) {
        goto LABEL_14;
      }
LABEL_28:
      operator delete(__p);
      uint64_t result = v2;
      break;
    case 13:
      LODWORD(__p) = 0;
      uint64_t v14 = 0;
      int v5 = (*(uint64_t (**)(uint64_t, void **, char *, uint64_t *))(*(void *)a1 + 232))(a1, &__p, (char *)&v14 + 4, &v14);
      if (v14)
      {
        unsigned int v11 = 0;
        do
        {
          int v12 = sub_1000DD614(a1, __p) + v5;
          int v5 = v12 + sub_1000DD614(a1, HIDWORD(v14));
          ++v11;
        }
        while (v11 < v14);
      }
      int v7 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 240))(a1);
      goto LABEL_26;
    case 14:
      HIDWORD(v14) = 0;
      LODWORD(__p) = 0;
      int v5 = (*(uint64_t (**)(uint64_t, void **, char *))(*(void *)a1 + 264))(a1, &__p, (char *)&v14 + 4);
      if (HIDWORD(v14))
      {
        unsigned int v13 = 0;
        do
        {
          v5 += sub_1000DD614(a1, __p);
          ++v13;
        }
        while (v13 < HIDWORD(v14));
      }
      int v7 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 272))(a1);
      goto LABEL_26;
    case 15:
      HIDWORD(v14) = 0;
      LODWORD(__p) = 0;
      int v5 = (*(uint64_t (**)(uint64_t, void **, char *))(*(void *)a1 + 248))(a1, &__p, (char *)&v14 + 4);
      if (HIDWORD(v14))
      {
        unsigned int v6 = 0;
        do
        {
          v5 += sub_1000DD614(a1, __p);
          ++v6;
        }
        while (v6 < HIDWORD(v14));
      }
      int v7 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 256))(a1);
LABEL_26:
      uint64_t result = (v7 + v5);
      break;
    default:
LABEL_14:
      uint64_t result = v2;
      break;
  }
  return result;
}

void sub_1000DDB54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000DDBB0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 49)) {
    sub_1000DC60C();
  }
  if (*(char *)(a2 + 23) < 0)
  {
    if (*(void *)(a2 + 8) >> 31)
    {
      exception = __cxa_allocate_exception(0x28uLL);
      exception[2] = 0;
      exception[3] = 0;
      void *exception = off_100454818;
      exception[1] = 0;
      *((_DWORD *)exception + 8) = 3;
    }
  }
  sub_1000DC60C();
}

void sub_1000DDD74(std::exception *this)
{
  uint64_t v1 = this;
  this->__vftable = (std::exception_vtbl *)off_100454188;
  if (SHIBYTE(this[3].__vftable) < 0)
  {
    operator delete(this[1].__vftable);
    this = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  std::exception::~exception(this);
}

void sub_1000DDDF4(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)off_100454188;
  if (SHIBYTE(this[3].__vftable) < 0) {
    operator delete(this[1].__vftable);
  }
  std::exception::~exception(this);

  operator delete();
}

const char *sub_1000DDE68(uint64_t a1)
{
  uint64_t result = (const char *)(a1 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    if (*(void *)(a1 + 16)) {
      return *(const char **)result;
    }
  }
  else if (*(unsigned char *)(a1 + 31))
  {
    return result;
  }
  uint64_t v3 = *(int *)(a1 + 32);
  if (v3 > 5) {
    return "TProtocolException: (Invalid exception type)";
  }
  else {
    return off_100454830[v3];
  }
}

uint64_t sub_1000DDEBC(uint64_t a1, std::string *a2, _DWORD *a3, _DWORD *a4)
{
  sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v14, 4u);
  std::string::size_type v8 = bswap32(v14);
  if ((v8 & 0x80000000) != 0)
  {
    if (WORD1(v8) != 32769)
    {
      exception = __cxa_allocate_exception(0x28uLL);
      sub_1000AE4B0(&v14, "Bad version identifier");
      sub_1000DE0C8((uint64_t)exception, 4, &v14);
    }
    *a3 = v8;
    sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v14, 4u);
    int v11 = sub_1000DE164(a1, a2, bswap32(v14));
    sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v14, 4u);
    *a4 = bswap32(v14);
    return (v11 + 12);
  }
  else
  {
    if (*(unsigned char *)(a1 + 48))
    {
      int v12 = __cxa_allocate_exception(0x28uLL);
      sub_1000AE4B0(&v14, "No version identifier... old protocol client in strict mode?");
      sub_1000DE0C8((uint64_t)v12, 4, &v14);
    }
    int v9 = sub_1000DE164(a1, a2, v8);
    sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v14, 1u);
    *a3 = (char)v14;
    sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v14, 4u);
    *a4 = bswap32(v14);
    return (v9 + 9);
  }
}

void sub_1000DE084(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (v16) {
    __cxa_free_exception(v15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000DE0C8(uint64_t a1, int a2, long long *a3)
{
  *(void *)a1 = off_100454188;
  uint64_t v5 = a1 + 8;
  if (*((char *)a3 + 23) < 0)
  {
    sub_1000559FC((unsigned char *)v5, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v6 = *a3;
    *(void *)(v5 + 16) = *((void *)a3 + 2);
    *(_OWORD *)uint64_t v5 = v6;
  }
  *(void *)a1 = off_100454818;
  *(_DWORD *)(a1 + 32) = a2;
  return a1;
}

void sub_1000DE150(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

std::string::size_type sub_1000DE164(uint64_t a1, std::string *this, std::string::size_type __n)
{
  if ((__n & 0x80000000) != 0)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 2;
  }
  int v5 = *(_DWORD *)(a1 + 40);
  if (v5 >= 1 && v5 < (int)__n)
  {
    int v11 = __cxa_allocate_exception(0x28uLL);
    void v11[2] = 0;
    void v11[3] = 0;
    *int v11 = off_100454818;
    v11[1] = 0;
    *((_DWORD *)v11 + 8) = 3;
  }
  if (__n)
  {
    std::string::resize(this, __n, 0);
    if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v8 = this;
    }
    else {
      std::string::size_type v8 = (std::string *)this->__r_.__value_.__r.__words[0];
    }
    sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)v8, __n);
    return __n;
  }
  else
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
    {
      *this->__r_.__value_.__l.__data_ = 0;
      this->__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      this->__r_.__value_.__s.__data_[0] = 0;
      *((unsigned char *)&this->__r_.__value_.__s + 23) = 0;
    }
    return __n;
  }
}

uint64_t sub_1000DE2B8(uint64_t a1, _DWORD *a2, _DWORD *a3, signed int *a4)
{
  sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v13, 1u);
  *a2 = v13;
  sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v14, 1u);
  *a3 = v14;
  sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v15, 4u);
  signed int v8 = bswap32(v15);
  if (v8 < 0)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 2;
  }
  signed int v9 = *(_DWORD *)(a1 + 44);
  if (v9 && v8 > v9)
  {
    int v12 = __cxa_allocate_exception(0x28uLL);
    void v12[2] = 0;
    v12[3] = 0;
    *int v12 = off_100454818;
    v12[1] = 0;
    *((_DWORD *)v12 + 8) = 3;
  }
  *a4 = v8;
  return 6;
}

uint64_t sub_1000DE3F0(uint64_t a1, _DWORD *a2, signed int *a3)
{
  sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v12, 1u);
  *a2 = v12;
  sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v13, 4u);
  signed int v6 = bswap32(v13);
  if (v6 < 0)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 2;
  }
  signed int v7 = *(_DWORD *)(a1 + 44);
  if (v7) {
    BOOL v8 = v6 <= v7;
  }
  else {
    BOOL v8 = 1;
  }
  if (!v8)
  {
    int v11 = __cxa_allocate_exception(0x28uLL);
    void v11[2] = 0;
    void v11[3] = 0;
    *int v11 = off_100454818;
    v11[1] = 0;
    *((_DWORD *)v11 + 8) = 3;
  }
  *a3 = v6;
  return 5;
}

uint64_t sub_1000DE50C(uint64_t a1, int a2)
{
  uint64_t v2 = 0;
  switch(a2)
  {
    case 2:
    case 3:
      sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v15, 1u);
      return 1;
    case 4:
    case 10:
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = 8;
      unsigned int v7 = 8;
      goto LABEL_6;
    case 6:
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = 2;
      unsigned int v7 = 2;
      goto LABEL_6;
    case 8:
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = 4;
      unsigned int v7 = 4;
LABEL_6:
      sub_1000DC4F4(v5, (uint64_t)&v15, v7);
      return v6;
    case 11:
      memset(&v15, 0, sizeof(v15));
      sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v16, 4u);
      uint64_t v2 = sub_1000DE164(a1, &v15, bswap32(v16)) + 4;
      if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_8;
      }
      goto LABEL_25;
    case 12:
      memset(&v15, 0, sizeof(v15));
      std::string::assign(&v15, "");
      for (int i = 0; ; i += sub_1000DE50C(a1, v10) + 3)
      {
        sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v16, 1u);
        uint64_t v10 = (char)v16;
        if (!(_BYTE)v16) {
          break;
        }
        sub_1000DC4F4(*(void *)(a1 + 32), (uint64_t)&v16, 2u);
      }
      uint64_t v2 = (i + 1);
      if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_8;
      }
LABEL_25:
      operator delete(v15.__r_.__value_.__l.__data_);
      uint64_t result = v2;
      break;
    case 13:
      unsigned int v14 = 0;
      LODWORD(v15.__r_.__value_.__l.__data_) = 0;
      unsigned int v16 = 0;
      uint64_t v2 = sub_1000DE2B8(a1, &v15, &v16, (signed int *)&v14);
      if (v14)
      {
        for (unsigned int j = 0; j < v14; ++j)
        {
          int v12 = sub_1000DE50C(a1, LODWORD(v15.__r_.__value_.__l.__data_)) + v2;
          uint64_t v2 = v12 + sub_1000DE50C(a1, v16);
        }
      }
      goto LABEL_8;
    case 14:
      LODWORD(v15.__r_.__value_.__l.__data_) = 0;
      unsigned int v16 = 0;
      uint64_t v2 = sub_1000DE3F0(a1, &v15, (signed int *)&v16);
      if (v16)
      {
        for (unsigned int k = 0; k < v16; ++k)
          uint64_t v2 = sub_1000DE50C(a1, LODWORD(v15.__r_.__value_.__l.__data_)) + v2;
      }
      goto LABEL_8;
    case 15:
      LODWORD(v15.__r_.__value_.__l.__data_) = 0;
      unsigned int v16 = 0;
      uint64_t v2 = sub_1000DE3F0(a1, &v15, (signed int *)&v16);
      if (v16)
      {
        for (unsigned int m = 0; m < v16; ++m)
          uint64_t v2 = sub_1000DE50C(a1, LODWORD(v15.__r_.__value_.__l.__data_)) + v2;
      }
      goto LABEL_8;
    default:
LABEL_8:
      uint64_t result = v2;
      break;
  }
  return result;
}

void sub_1000DE7A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000DE804(uint64_t a1, uint64_t ***a2, uint64_t **a3)
{
  sub_10000C898((uint64_t)v12);
  uint64_t v6 = *a2;
  if (*a3 != (uint64_t *)*a2)
  {
    sub_100029C00(v13, v6 + 2);
    while (1)
    {
      uint64_t v6 = (uint64_t **)*v6;
      if (v6 == (uint64_t **)*a3) {
        break;
      }
      int v7 = *(char *)(a1 + 23);
      if (v7 >= 0) {
        uint64_t v8 = a1;
      }
      else {
        uint64_t v8 = *(void *)a1;
      }
      if (v7 >= 0) {
        uint64_t v9 = *(unsigned __int8 *)(a1 + 23);
      }
      else {
        uint64_t v9 = *(void *)(a1 + 8);
      }
      sub_10002986C(v13, v8, v9);
      sub_100029C00(v13, v6 + 2);
    }
  }
  std::stringbuf::str();
  *(void *)((char *)v12
  v13[0] = v10;
  if (v14 < 0) {
    operator delete((void *)v13[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return std::ios::~ios();
}

void sub_1000DE9D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DEA14((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1000DE9EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DEA14((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1000DEA00(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DEA14((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DEA14(uint64_t a1)
{
  *(void *)(a1 + 16) = v3;
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  std::ios::~ios();
  return a1;
}

uint64_t sub_1000DEB4C(uint64_t a1)
{
  uint64_t result = wireless_diagnostics::google::protobuf::MessageLite::ParseFromZeroCopyStream();
  if ((result & 1) == 0)
  {
    if (qword_10047BED8 == -1)
    {
      uint64_t v3 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_FAULT)) {
        goto LABEL_10;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100453E30);
      uint64_t v3 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_FAULT)) {
        goto LABEL_10;
      }
    }
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 16))(__p, a1);
    if (v10 >= 0) {
      unint64_t v4 = __p;
    }
    else {
      unint64_t v4 = (void **)__p[0];
    }
    *(_DWORD *)std::string buf = 68289795;
    int v12 = 0;
    __int16 v13 = 2082;
    char v14 = "";
    __int16 v15 = 2081;
    unsigned int v16 = v4;
    __int16 v17 = 2082;
    unint64_t v18 = "assert";
    __int16 v19 = 2081;
    int32x2_t v20 = "parsed";
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"Failed to deserialize-next properly\", \"typename\":%{private, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x30u);
    if (v10 < 0) {
      operator delete(__p[0]);
    }
    if (qword_10047BED8 != -1)
    {
      dispatch_once(&qword_10047BED8, &stru_100453E30);
      uint64_t v5 = qword_10047BEE0;
      if (!os_signpost_enabled((os_log_t)qword_10047BEE0)) {
        goto LABEL_17;
      }
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v5 = qword_10047BEE0;
    if (!os_signpost_enabled((os_log_t)qword_10047BEE0)) {
      goto LABEL_17;
    }
LABEL_11:
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 16))(__p, a1);
    if (v10 >= 0) {
      uint64_t v6 = __p;
    }
    else {
      uint64_t v6 = (void **)__p[0];
    }
    *(_DWORD *)std::string buf = 68289795;
    int v12 = 0;
    __int16 v13 = 2082;
    char v14 = "";
    __int16 v15 = 2081;
    unsigned int v16 = v6;
    __int16 v17 = 2082;
    unint64_t v18 = "assert";
    __int16 v19 = 2081;
    int32x2_t v20 = "parsed";
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v5, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "Failed to deserialize-next properly", "{\"msg%{public}.0s\":\"Failed to deserialize-next properly\", \"typename\":%{private, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x30u);
    if (v10 < 0) {
      operator delete(__p[0]);
    }
    if (qword_10047BED8 != -1)
    {
      dispatch_once(&qword_10047BED8, &stru_100453E30);
      int v7 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        goto LABEL_23;
      }
      goto LABEL_18;
    }
LABEL_17:
    int v7 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
      goto LABEL_23;
    }
LABEL_18:
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 16))(__p, a1);
    if (v10 >= 0) {
      uint64_t v8 = __p;
    }
    else {
      uint64_t v8 = (void **)__p[0];
    }
    *(_DWORD *)std::string buf = 68289795;
    int v12 = 0;
    __int16 v13 = 2082;
    char v14 = "";
    __int16 v15 = 2081;
    unsigned int v16 = v8;
    __int16 v17 = 2082;
    unint64_t v18 = "assert";
    __int16 v19 = 2081;
    int32x2_t v20 = "parsed";
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "{\"msg%{public}.0s\":\"Failed to deserialize-next properly\", \"typename\":%{private, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x30u);
    if (v10 < 0) {
      operator delete(__p[0]);
    }
LABEL_23:
    abort_report_np();
    __break(1u);
  }
  return result;
}

uint64_t *sub_1000DEF30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (unsigned char *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v8 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v8 = v7;
  }
  unint64_t v9 = sub_100077FAC((uint64_t)v42, (uint64_t *)a2, v8);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v3 = v9;
      if (v9 >= v11) {
        unint64_t v3 = v9 % v11;
      }
    }
    else
    {
      unint64_t v3 = (v11 - 1) & v9;
    }
    __int16 v13 = *(uint64_t ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      char v14 = *v13;
      if (*v13)
      {
        char v15 = v5[23];
        if (v15 >= 0) {
          uint64_t v16 = v5[23];
        }
        else {
          uint64_t v16 = *((void *)v5 + 1);
        }
        if (v15 < 0) {
          uint64_t v5 = *(unsigned char **)v5;
        }
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v21 = v14[1];
            if (v21 == v10)
            {
              uint64_t v22 = *((unsigned __int8 *)v14 + 39);
              if ((v22 & 0x80u) == 0) {
                uint64_t v23 = *((unsigned __int8 *)v14 + 39);
              }
              else {
                uint64_t v23 = v14[3];
              }
              if (v23 == v16)
              {
                if ((v22 & 0x80) != 0)
                {
                  if (!memcmp((const void *)v14[2], v5, v14[3])) {
                    return v14;
                  }
                }
                else
                {
                  if (!*((unsigned char *)v14 + 39)) {
                    return v14;
                  }
                  uint64_t v24 = 0;
                  while (*((unsigned __int8 *)v14 + v24 + 16) == v5[v24])
                  {
                    if (v22 == ++v24) {
                      return v14;
                    }
                  }
                }
              }
            }
            else if ((v21 & (v11 - 1)) != v3)
            {
              goto LABEL_51;
            }
            char v14 = (uint64_t *)*v14;
            if (!v14) {
              goto LABEL_51;
            }
          }
        }
        do
        {
          unint64_t v17 = v14[1];
          if (v17 == v10)
          {
            uint64_t v18 = *((unsigned __int8 *)v14 + 39);
            if ((v18 & 0x80u) == 0) {
              uint64_t v19 = *((unsigned __int8 *)v14 + 39);
            }
            else {
              uint64_t v19 = v14[3];
            }
            if (v19 == v16)
            {
              if ((v18 & 0x80) != 0)
              {
                if (!memcmp((const void *)v14[2], v5, v14[3])) {
                  return v14;
                }
              }
              else
              {
                if (!*((unsigned char *)v14 + 39)) {
                  return v14;
                }
                uint64_t v20 = 0;
                while (*((unsigned __int8 *)v14 + v20 + 16) == v5[v20])
                {
                  if (v18 == ++v20) {
                    return v14;
                  }
                }
              }
            }
          }
          else
          {
            if (v17 >= v11) {
              v17 %= v11;
            }
            if (v17 != v3) {
              break;
            }
          }
          char v14 = (uint64_t *)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_51:
  int v25 = operator new(0x28uLL);
  v42[0] = v25;
  v42[1] = a1 + 16;
  char v43 = 0;
  *int v25 = 0;
  v25[1] = v10;
  int v26 = v25 + 2;
  if (*(char *)(a3 + 23) < 0)
  {
    sub_1000559FC(v26, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)int v26 = *(_OWORD *)a3;
    v26[2] = *(void *)(a3 + 16);
  }
  char v43 = 1;
  float v27 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v28 = *(float *)(a1 + 32);
  if (!v11 || (float)(v28 * (float)v11) < v27)
  {
    BOOL v31 = 1;
    if (v11 >= 3) {
      BOOL v31 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v32 = v31 | (2 * v11);
    unint64_t v33 = vcvtps_u32_f32(v27 / v28);
    if (v32 <= v33) {
      size_t prime = v33;
    }
    else {
      size_t prime = v32;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
    }
    int8x8_t v35 = *(int8x8_t *)(a1 + 8);
    if (prime > *(void *)&v35) {
      goto LABEL_68;
    }
    if (prime < *(void *)&v35)
    {
      unint64_t v36 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(void *)&v35 < 3uLL || (uint8x8_t v37 = (uint8x8_t)vcnt_s8(v35), v37.i16[0] = vaddlv_u8(v37), v37.u32[0] > 1uLL))
      {
        unint64_t v36 = std::__next_prime(v36);
      }
      else
      {
        uint64_t v38 = 1 << -(char)__clz(v36 - 1);
        if (v36 >= 2) {
          unint64_t v36 = v38;
        }
      }
      if (prime <= v36) {
        size_t prime = v36;
      }
      if (prime < *(void *)&v35) {
LABEL_68:
      }
        sub_10006338C(a1, prime);
    }
    unint64_t v11 = *(void *)(a1 + 8);
    unint64_t v39 = v11 - 1;
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
      {
        unint64_t v3 = v10 % v11;
        std::ios_base v29 = *(void **)(*(void *)a1 + 8 * (v10 % v11));
        uint64_t v30 = (void *)v42[0];
        if (v29) {
          goto LABEL_57;
        }
      }
      else
      {
        unint64_t v3 = v10;
        std::ios_base v29 = *(void **)(*(void *)a1 + 8 * v10);
        uint64_t v30 = (void *)v42[0];
        if (v29) {
          goto LABEL_57;
        }
      }
    }
    else
    {
      unint64_t v3 = v39 & v10;
      std::ios_base v29 = *(void **)(*(void *)a1 + 8 * (v39 & v10));
      uint64_t v30 = (void *)v42[0];
      if (v29) {
        goto LABEL_57;
      }
    }
LABEL_81:
    void *v30 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v42[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v42[0])
    {
      unint64_t v40 = *(void *)(*(void *)v42[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v40 >= v11) {
          v40 %= v11;
        }
      }
      else
      {
        v40 &= v11 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v40) = v42[0];
    }
    goto LABEL_92;
  }
  std::ios_base v29 = *(void **)(*(void *)a1 + 8 * v3);
  uint64_t v30 = (void *)v42[0];
  if (!v29) {
    goto LABEL_81;
  }
LABEL_57:
  void *v30 = *v29;
  *std::ios_base v29 = v42[0];
LABEL_92:
  char v14 = (uint64_t *)v42[0];
  ++*(void *)(a1 + 24);
  return v14;
}

void sub_1000DF36C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DF398((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1000DF380(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DF398((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_1000DF398(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((unsigned char *)a1 + 16) && *(char *)(v2 + 39) < 0) {
      operator delete(*(void **)(v2 + 16));
    }
    operator delete((void *)v2);
  }
  return a1;
}

void ***sub_1000DF3E8(void ***result)
{
  uint64_t v1 = result;
  if (!*((unsigned char *)result + 8))
  {
    uint64_t v2 = *result;
    unint64_t v3 = (void **)**result;
    if (v3)
    {
      unint64_t v4 = (void **)v2[1];
      uint64_t v5 = **result;
      if (v4 != v3)
      {
        do
        {
          if (*((char *)v4 - 1) < 0) {
            operator delete(*(v4 - 3));
          }
          v4 -= 3;
        }
        while (v4 != v3);
        uint64_t v5 = **v1;
      }
      v2[1] = v3;
      operator delete(v5);
      return v1;
    }
  }
  return result;
}

void sub_1000DF480()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1000DF4F8()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_1000DF570(uint64_t __dst, long long *a2)
{
  uint64_t v2 = __dst;
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000559FC((unsigned char *)__dst, *(void **)a2, *((void *)a2 + 1));
    return v2;
  }
  else
  {
    long long v3 = *a2;
    *(void *)(__dst + 16) = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v3;
  }
  return __dst;
}

void sub_1000DF5CC(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1000559FC(__p, *(void **)a2, *(void *)(a2 + 8));
    if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a2;
    uint64_t v6 = *(void *)(a2 + 16);
    if ((*(char *)(a1 + 23) & 0x80000000) == 0)
    {
LABEL_3:
      *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
      a3->__r_.__value_.__r.__words[2] = *(void *)(a1 + 16);
      goto LABEL_6;
    }
  }
  sub_1000559FC(a3, *(void **)a1, *(void *)(a1 + 8));
LABEL_6:
  sub_1000512AC(a3, (uint64_t)__p);
  if (SHIBYTE(v6) < 0) {
    operator delete(__p[0]);
  }
}

void sub_1000DF67C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if ((a14 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_1000DF6C8(uint64_t a1)
{
  if (*(char *)(a1 + 463) < 0) {
    operator delete(*(void **)(a1 + 440));
  }
  sub_1000E0C3C((void *)(a1 + 144));

  return sub_1000E1268((uint64_t *)a1);
}

void sub_1000DF714(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000E15EC(a1, &v7);
  sub_1000E16D8(a1, &v6);
  sub_1000E17D8(a1, &__p);
  sub_100056B28((const char *)&v7, 0, (int *)&v4);
  if (LODWORD(v4.__r_.__value_.__l.__data_) >= 2)
  {
    if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&v4, v7.__r_.__value_.__l.__data_, v7.__r_.__value_.__l.__size_);
    }
    else {
      std::string v4 = v7;
    }
    *(std::string *)(a2 + 8) = v4;
    *(_DWORD *)(a2 + 32) = 0;
LABEL_12:
    *(unsigned char *)a2 = 1;
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  sub_100056B28((const char *)&v6, 0, (int *)&v4);
  if (LODWORD(v4.__r_.__value_.__l.__data_) < 2)
  {
    sub_100056B28((const char *)&__p, 0, (int *)&v4);
    if (LODWORD(v4.__r_.__value_.__l.__data_) < 2)
    {
      *(unsigned char *)a2 = 0;
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&v4, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    }
    else {
      std::string v4 = __p;
    }
    *(std::string *)(a2 + 8) = v4;
    *(_DWORD *)(a2 + 32) = 2;
    goto LABEL_12;
  }
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    sub_1000559FC(&v4, v6.__r_.__value_.__l.__data_, v6.__r_.__value_.__l.__size_);
  }
  else {
    std::string v4 = v6;
  }
  *(std::string *)(a2 + 8) = v4;
  *(_DWORD *)(a2 + 32) = 1;
  *(unsigned char *)a2 = 1;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
LABEL_18:
  }
    operator delete(__p.__r_.__value_.__l.__data_);
LABEL_19:
  if ((SHIBYTE(v6.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v7.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_23:
    operator delete(v7.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(v6.__r_.__value_.__l.__data_);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_23;
  }
}

void sub_1000DF8E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a19 < 0)
  {
    operator delete(__p);
    if ((a25 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v25 - 17) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a25 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a20);
  if ((*(char *)(v25 - 17) & 0x80000000) == 0) {
LABEL_4:
  }
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(*(void **)(v25 - 40));
  _Unwind_Resume(exception_object);
}

void sub_1000DF964(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000E18C0(a1, &v6);
  sub_1000E19C0(a1, &__p);
  sub_100056B28((const char *)&v6, 0, (int *)&v4);
  if (LODWORD(v4.__r_.__value_.__l.__data_) < 2)
  {
    sub_100056B28((const char *)&__p, 0, (int *)&v4);
    if (LODWORD(v4.__r_.__value_.__l.__data_) < 2)
    {
      *(unsigned char *)a2 = 0;
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&v4, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    }
    else {
      std::string v4 = __p;
    }
    *(std::string *)(a2 + 8) = v4;
    *(_DWORD *)(a2 + 32) = 0;
    *(unsigned char *)a2 = 1;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
LABEL_11:
    }
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&v4, v6.__r_.__value_.__l.__data_, v6.__r_.__value_.__l.__size_);
    }
    else {
      std::string v4 = v6;
    }
    *(std::string *)(a2 + 8) = v4;
    *(_DWORD *)(a2 + 32) = 1;
    *(unsigned char *)a2 = 1;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_11;
    }
  }
LABEL_12:
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
}

void sub_1000DFAB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
  {
    operator delete(__p);
    if ((*(char *)(v18 - 17) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v18 - 17) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v18 - 40));
  _Unwind_Resume(exception_object);
}

void sub_1000DFB04(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  char v4 = 19;
  strcpy(__p, "pedometer.thriftbin");
  if (*(char *)(a1 + 23) < 0)
  {
    sub_1000559FC(a2, *(void **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    a2->__r_.__value_.__r.__words[2] = *(void *)(a1 + 16);
  }
  sub_1000512AC(a2, (uint64_t)__p);
  if (v4 < 0) {
    operator delete(*(void **)__p);
  }
}

void sub_1000DFBA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if ((a14 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1000DFBF4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v5 = 11;
  strcpy((char *)__p, "ar_state.pb");
  if (*(char *)(a1 + 23) < 0) {
    sub_1000559FC(&__dst, *(void **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __dst = *(std::string *)a1;
  }
  sub_1000512AC(&__dst, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
  sub_100056B28((const char *)&__dst, 0, (int *)__p);
  if (LODWORD(__p[0]) < 2)
  {
    *(unsigned char *)a2 = 0;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
LABEL_13:
    }
      operator delete(__dst.__r_.__value_.__l.__data_);
  }
  else
  {
    *(unsigned char *)a2 = 0;
    long long v3 = (unsigned char *)(a2 + 8);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_1000559FC(v3, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
    }
    else
    {
      *(_OWORD *)long long v3 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
      *(void *)(a2 + 24) = *((void *)&__dst.__r_.__value_.__l + 2);
    }
    *(unsigned char *)a2 = 1;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_13;
    }
  }
}

void sub_1000DFD08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000DFD50(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v5 = 17;
  strcpy(__p, "vio_estimation.pb");
  if (*(char *)(a1 + 23) < 0) {
    sub_1000559FC(&__dst, *(void **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __dst = *(std::string *)a1;
  }
  sub_1000512AC(&__dst, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(*(void **)__p);
  }
  sub_100056B28((const char *)&__dst, 0, (int *)__p);
  if (*(_DWORD *)__p < 2u)
  {
    *(unsigned char *)a2 = 0;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
LABEL_13:
    }
      operator delete(__dst.__r_.__value_.__l.__data_);
  }
  else
  {
    *(unsigned char *)a2 = 0;
    long long v3 = (unsigned char *)(a2 + 8);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_1000559FC(v3, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
    }
    else
    {
      *(_OWORD *)long long v3 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
      *(void *)(a2 + 24) = *((void *)&__dst.__r_.__value_.__l + 2);
    }
    *(unsigned char *)a2 = 1;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_13;
    }
  }
}

void sub_1000DFE5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000DFEA4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string __p = operator new(0x20uLL);
  long long v6 = xmmword_1003E7210;
  strcpy((char *)__p, "vl_localization_result.pb");
  if (*(char *)(a1 + 23) < 0) {
    sub_1000559FC(&__dst, *(void **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __dst = *(std::string *)a1;
  }
  sub_1000512AC(&__dst, (uint64_t)&__p);
  if (SHIBYTE(v6) < 0) {
    operator delete(__p);
  }
  sub_100056B28((const char *)&__dst, 0, (int *)&__p);
  if (__p < 2)
  {
    *(unsigned char *)a2 = 0;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
LABEL_13:
    }
      operator delete(__dst.__r_.__value_.__l.__data_);
  }
  else
  {
    *(unsigned char *)a2 = 0;
    char v4 = (unsigned char *)(a2 + 8);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_1000559FC(v4, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
    }
    else
    {
      *(_OWORD *)char v4 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
      *(void *)(a2 + 24) = *((void *)&__dst.__r_.__value_.__l + 2);
    }
    *(unsigned char *)a2 = 1;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_13;
    }
  }
}

void sub_1000DFFC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000E0010(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v5 = 20;
  strcpy(__p, "provider_position.pb");
  if (*(char *)(a1 + 23) < 0) {
    sub_1000559FC(&__dst, *(void **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __dst = *(std::string *)a1;
  }
  sub_1000512AC(&__dst, (uint64_t)__p);
  if (v5 < 0) {
    operator delete(*(void **)__p);
  }
  sub_100056B28((const char *)&__dst, 0, (int *)__p);
  if (*(_DWORD *)__p < 2u)
  {
    *(unsigned char *)a2 = 0;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
LABEL_13:
    }
      operator delete(__dst.__r_.__value_.__l.__data_);
  }
  else
  {
    *(unsigned char *)a2 = 0;
    long long v3 = (unsigned char *)(a2 + 8);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_1000559FC(v3, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
    }
    else
    {
      *(_OWORD *)long long v3 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
      *(void *)(a2 + 24) = *((void *)&__dst.__r_.__value_.__l + 2);
    }
    *(unsigned char *)a2 = 1;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_13;
    }
  }
}

void sub_1000E0124(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000E016C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::string __p = operator new(0x20uLL);
  long long v6 = xmmword_1003E7220;
  strcpy((char *)__p, "outdoor_estimator_log_entry.pb");
  if (*(char *)(a1 + 23) < 0) {
    sub_1000559FC(&__dst, *(void **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __dst = *(std::string *)a1;
  }
  sub_1000512AC(&__dst, (uint64_t)&__p);
  if (SHIBYTE(v6) < 0) {
    operator delete(__p);
  }
  sub_100056B28((const char *)&__dst, 0, (int *)&__p);
  if (__p < 2)
  {
    *(unsigned char *)a2 = 0;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
LABEL_13:
    }
      operator delete(__dst.__r_.__value_.__l.__data_);
  }
  else
  {
    *(unsigned char *)a2 = 0;
    char v4 = (unsigned char *)(a2 + 8);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_1000559FC(v4, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
    }
    else
    {
      *(_OWORD *)char v4 = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
      *(void *)(a2 + 24) = *((void *)&__dst.__r_.__value_.__l + 2);
    }
    *(unsigned char *)a2 = 1;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_13;
    }
  }
}

void sub_1000E0290(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000E02D8(uint64_t a1)
{
  *((unsigned char *)&v6.__r_.__value_.__s + 23) = 19;
  strcpy((char *)&v6, "datarun_metadata.pb");
  sub_1000DF5CC(a1, (uint64_t)&v6, &v9);
  sub_100056B28((const char *)&v9, 0, (int *)&v6);
  if (LODWORD(v6.__r_.__value_.__l.__data_) < 2)
  {
    *((unsigned char *)&v6.__r_.__value_.__s + 23) = 20;
    strcpy((char *)&v6, "datarun_metadata.bin");
    sub_1000DF5CC(a1, (uint64_t)&v6, &v8);
    sub_100056B28((const char *)&v8, 0, (int *)&v6);
    if (LODWORD(v6.__r_.__value_.__l.__data_) >= 2) {
      sub_1000E05C4((uint64_t)&v6);
    }
    __cxa_allocate_exception(0x40uLL);
    std::operator+<char>();
    std::logic_error::logic_error(&v5, &v6);
    sub_10018E868((uint64_t)v4);
    sub_1000D8F04(&v5, (uint64_t)"std::chrono::nanoseconds UnprocessedDatarun::getStartTimeNanos() const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/unprocessed_datarun.cpp", 171, (uint64_t)v4);
  }
  sub_1000D8C54((uint64_t)&v9, &v6);
  if (v7)
  {
    uint64_t v2 = *(void *)(v7 + 40);
    sub_1000243FC(&v6);
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
    {
LABEL_4:
      operator delete(v9.__r_.__value_.__l.__data_);
      return v2;
    }
  }
  else
  {
    uint64_t v2 = *(void *)(*(void *)(qword_10047EAF8 + 40) + 40);
    sub_1000243FC(&v6);
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_4;
    }
  }
  return v2;
}

void sub_1000E04F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, std::invalid_argument a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (__p) {
    operator delete(__p);
  }
  std::invalid_argument::~invalid_argument(&a13);
  if (a19 < 0) {
    operator delete(a14);
  }
  if (*(char *)(v19 - 57) < 0)
  {
    operator delete(*(void **)(v19 - 80));
    if (*(char *)(v19 - 33) < 0)
    {
LABEL_9:
      operator delete(*(void **)(v19 - 56));
      _Unwind_Resume(a1);
    }
  }
  else if (*(char *)(v19 - 33) < 0)
  {
    goto LABEL_9;
  }
  _Unwind_Resume(a1);
}

void sub_1000E05C4(uint64_t a1)
{
  *(void *)a1 = off_10045A508;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + ++*(_DWORD *)(result + 56) = 0u;
  *(_OWORD *)(a1 + 68) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 225) = 0u;
  *(void *)(a1 + 248) = off_10045A4C8;
  *(void *)(a1 + 2++*(_DWORD *)(result + 56) = 0;
  *(_DWORD *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  *(unsigned char *)(a1 + 280) &= 0xF0u;
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 288) = off_10045A4E8;
  *(void *)(a1 + 296) = a1 + 304;
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 336) = 0;
  *(_DWORD *)(a1 + 344) = 0;
  *(void *)(a1 + 320) = 0;
  *(unsigned char *)(a1 + 348) &= 0xF8u;
  *(void *)(a1 + 384) = 0;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 376) = 0;
  *(_DWORD *)(a1 + 368) = 0;
  unsigned __int8 v1 = *(unsigned char *)(a1 + 402);
  *(void *)(a1 + 352) = 0;
  *(void *)(a1 + 360) = 0;
  *(_WORD *)(a1 + 400) = 0;
  *(unsigned char *)(a1 + 402) = ((v1 >> 2 << 18) | 0x10000u) >> 16;
  sub_100170CDC(7, &v2);
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  sub_1000DBAD0();
}

void sub_1000E09C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1000DB9E0((uint64_t)va);
  sub_1000DB938(v5 - 48);
  sub_1000BA884(v5 - 32);
  sub_1000A318C(v4);
  _Unwind_Resume(a1);
}

void sub_1000E0A14(_Unwind_Exception *a1)
{
  sub_1000A318C(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_1000E0A28(uint64_t *result)
{
  uint64_t v1 = *result;
  if (*result && atomic_fetch_add((atomic_uint *volatile)v1, 0xFFFFFFFF) == 1)
  {
    sub_10005623C((DIR **)(v1 + 48), (void **)(v1 + 56), v2);
    if (*(char *)(v1 + 31) < 0) {
      operator delete(*(void **)(v1 + 8));
    }
    operator delete();
  }
  return result;
}

void **sub_1000E0AA4(void **a1)
{
  uint64_t v2 = (void **)*a1;
  if (*a1)
  {
    uint64_t v3 = (void **)a1[1];
    uint64_t v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        if (*((char *)v3 - 1) < 0) {
          operator delete(*(v3 - 3));
        }
        v3 -= 3;
      }
      while (v3 != v2);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t *sub_1000E0B18(uint64_t *result)
{
  uint64_t v1 = result[1];
  if (v1 && atomic_fetch_add((atomic_uint *volatile)v1, 0xFFFFFFFF) == 1)
  {
    sub_10005623C((DIR **)(v1 + 48), (void **)(v1 + 56), v3);
    if (*(char *)(v1 + 31) < 0) {
      operator delete(*(void **)(v1 + 8));
    }
    operator delete();
  }
  uint64_t v2 = *result;
  if (*result && atomic_fetch_add((atomic_uint *volatile)v2, 0xFFFFFFFF) == 1)
  {
    sub_10005623C((DIR **)(v2 + 48), (void **)(v2 + 56), v3);
    if (*(char *)(v2 + 31) < 0) {
      operator delete(*(void **)(v2 + 8));
    }
    operator delete();
  }
  return result;
}

void *sub_1000E0C3C(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[35];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = (std::__shared_weak_count *)a1[33];
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v3 = (std::__shared_weak_count *)a1[33];
    if (!v3) {
      goto LABEL_7;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
LABEL_7:
  uint64_t v4 = (std::__shared_weak_count *)a1[31];
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    uint64_t v5 = (std::__shared_weak_count *)a1[29];
    if (!v5) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v5 = (std::__shared_weak_count *)a1[29];
    if (!v5) {
      goto LABEL_13;
    }
  }
  if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_13:
  std::string v6 = (std::__shared_weak_count *)a1[27];
  if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    uint64_t v7 = (std::__shared_weak_count *)a1[25];
    if (!v7) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v7 = (std::__shared_weak_count *)a1[25];
    if (!v7) {
      goto LABEL_19;
    }
  }
  if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
LABEL_19:
  std::string v8 = (std::__shared_weak_count *)a1[23];
  if (v8 && !atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
    std::string v9 = (std::__shared_weak_count *)a1[21];
    if (!v9) {
      goto LABEL_25;
    }
  }
  else
  {
    std::string v9 = (std::__shared_weak_count *)a1[21];
    if (!v9) {
      goto LABEL_25;
    }
  }
  if (!atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
LABEL_25:
  unint64_t v10 = (std::__shared_weak_count *)a1[19];
  if (v10 && !atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
    unint64_t v11 = (std::__shared_weak_count *)a1[17];
    if (!v11) {
      goto LABEL_31;
    }
  }
  else
  {
    unint64_t v11 = (std::__shared_weak_count *)a1[17];
    if (!v11) {
      goto LABEL_31;
    }
  }
  if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
LABEL_31:
  uint8x8_t v12 = (std::__shared_weak_count *)a1[15];
  if (v12 && !atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
    __int16 v13 = (std::__shared_weak_count *)a1[13];
    if (!v13) {
      goto LABEL_37;
    }
  }
  else
  {
    __int16 v13 = (std::__shared_weak_count *)a1[13];
    if (!v13) {
      goto LABEL_37;
    }
  }
  if (!atomic_fetch_add(&v13->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
LABEL_37:
  char v14 = (std::__shared_weak_count *)a1[11];
  if (v14 && !atomic_fetch_add(&v14->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
    char v15 = (std::__shared_weak_count *)a1[9];
    if (!v15) {
      goto LABEL_43;
    }
  }
  else
  {
    char v15 = (std::__shared_weak_count *)a1[9];
    if (!v15) {
      goto LABEL_43;
    }
  }
  if (!atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
  }
LABEL_43:
  uint64_t v16 = (std::__shared_weak_count *)a1[7];
  if (v16 && !atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    unint64_t v17 = (std::__shared_weak_count *)a1[5];
    if (!v17) {
      goto LABEL_49;
    }
  }
  else
  {
    unint64_t v17 = (std::__shared_weak_count *)a1[5];
    if (!v17) {
      goto LABEL_49;
    }
  }
  if (!atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
    std::__shared_weak_count::__release_weak(v17);
  }
LABEL_49:
  uint64_t v18 = (std::__shared_weak_count *)a1[3];
  if (v18 && !atomic_fetch_add(&v18->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
    std::__shared_weak_count::__release_weak(v18);
    uint64_t v19 = (std::__shared_weak_count *)a1[1];
    if (!v19) {
      return a1;
    }
  }
  else
  {
    uint64_t v19 = (std::__shared_weak_count *)a1[1];
    if (!v19) {
      return a1;
    }
  }
  if (atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
  std::__shared_weak_count::__release_weak(v19);
  return a1;
}

uint64_t sub_1000E11EC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 8);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t *sub_1000E1268(uint64_t *a1)
{
  uint64_t v2 = a1[17];
  a1[17] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = a1[16];
  a1[16] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = a1[15];
  a1[15] = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  uint64_t v5 = a1[14];
  a1[14] = 0;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
  }
  uint64_t v6 = a1[13];
  a1[13] = 0;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
  }
  uint64_t v7 = a1[12];
  a1[12] = 0;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
  uint64_t v8 = a1[11];
  a1[11] = 0;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  uint64_t v9 = a1[10];
  a1[10] = 0;
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
  }
  uint64_t v10 = a1[9];
  a1[9] = 0;
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
  }
  uint64_t v11 = a1[8];
  a1[8] = 0;
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
  }
  uint64_t v12 = a1[7];
  a1[7] = 0;
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
  }
  uint64_t v13 = a1[6];
  a1[6] = 0;
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
  }
  uint64_t v14 = a1[5];
  a1[5] = 0;
  if (v14) {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
  }
  uint64_t v15 = a1[4];
  a1[4] = 0;
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
  }
  uint64_t v16 = a1[3];
  a1[3] = 0;
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
  }
  uint64_t v17 = a1[2];
  a1[2] = 0;
  if (v17) {
    (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
  }
  uint64_t v18 = a1[1];
  a1[1] = 0;
  if (v18) {
    (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
  }
  uint64_t v19 = *a1;
  *a1 = 0;
  if (v19) {
    (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
  }
  return a1;
}

void sub_1000E15EC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  char v4 = 15;
  strcpy((char *)__p, "accel.thriftbin");
  if (*(char *)(a1 + 23) < 0)
  {
    sub_1000559FC(a2, *(void **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    a2->__r_.__value_.__r.__words[2] = *(void *)(a1 + 16);
  }
  sub_1000512AC(a2, (uint64_t)__p);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1000E168C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if ((a15 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1000E16D8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string __p = operator new(0x20uLL);
  long long v5 = xmmword_1003E7220;
  strcpy((char *)__p, "process_output/accel.thriftbin");
  if (*(char *)(a1 + 23) < 0)
  {
    sub_1000559FC(a2, *(void **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    a2->__r_.__value_.__r.__words[2] = *(void *)(a1 + 16);
  }
  sub_1000512AC(a2, (uint64_t)&__p);
  if (SHIBYTE(v5) < 0) {
    operator delete(__p);
  }
}

void sub_1000E178C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if ((a15 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1000E17D8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  char v4 = 9;
  strcpy((char *)__p, "accel.dat");
  if (*(char *)(a1 + 23) < 0)
  {
    sub_1000559FC(a2, *(void **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    a2->__r_.__value_.__r.__words[2] = *(void *)(a1 + 16);
  }
  sub_1000512AC(a2, (uint64_t)__p);
  if (v4 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1000E1874(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if ((a15 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1000E18C0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string __p = operator new(0x28uLL);
  long long v5 = xmmword_1003E7230;
  strcpy((char *)__p, "process_output/rotationRate.thriftbin");
  if (*(char *)(a1 + 23) < 0)
  {
    sub_1000559FC(a2, *(void **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    a2->__r_.__value_.__r.__words[2] = *(void *)(a1 + 16);
  }
  sub_1000512AC(a2, (uint64_t)&__p);
  if (SHIBYTE(v5) < 0) {
    operator delete(__p);
  }
}

void sub_1000E1974(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if ((a15 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_1000E19C0(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string __p = operator new(0x20uLL);
  long long v5 = xmmword_1003E7240;
  strcpy((char *)__p, "corrected_gyro.thriftbin");
  if (*(char *)(a1 + 23) < 0)
  {
    sub_1000559FC(a2, *(void **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    a2->__r_.__value_.__r.__words[2] = *(void *)(a1 + 16);
  }
  sub_1000512AC(a2, (uint64_t)&__p);
  if (SHIBYTE(v5) < 0) {
    operator delete(__p);
  }
}

void sub_1000E1A74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if ((a15 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000E1AC0(unint64_t a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  long long v5 = (void *)v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = (void **)operator new(v7 + 1);
    __dst[1] = v5;
    unint64_t v12 = v8 | 0x8000000000000000;
    __dst[0] = v6;
    goto LABEL_8;
  }
  HIBYTE(v12) = v4;
  uint64_t v6 = __dst;
  if (v4) {
LABEL_8:
  }
    memcpy(v6, __s, (size_t)v5);
  *((unsigned char *)v5 + (void)v6) = 0;
  uint64_t v9 = sub_10004008C(a1, (unint64_t)__dst);
  if (SHIBYTE(v12) < 0) {
    operator delete(__dst[0]);
  }
  return v9;
}

std::string *sub_1000E1B9C@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1000E1BD0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_1000E1BEC@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1000E1C20(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000E1C3C(void *a1, uint64_t a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[1] - *a1) >> 5);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x2AAAAAAAAAAAAAALL) {
    sub_1000A9108();
  }
  if (0x5555555555555556 * ((uint64_t)(a1[2] - *a1) >> 5) > v4) {
    unint64_t v4 = 0x5555555555555556 * ((uint64_t)(a1[2] - *a1) >> 5);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a1[2] - *a1) >> 5) >= 0x155555555555555) {
    unint64_t v6 = 0x2AAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0x2AAAAAAAAAAAAAALL) {
      sub_1000A6A10();
    }
    uint64_t v7 = (char *)operator new(96 * v6);
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v19 = (uint64_t)&v7[96 * v3];
  *((void *)&v20 + 1) = &v7[96 * v6];
  sub_1000458C4(v19, a2);
  uint64_t v8 = 0;
  uint64_t v10 = (char *)*a1;
  for (uint64_t i = a1[1]; (char *)(i + v8) != v10; sub_1000458C4(v8 + v19, v8 + i))
    v8 -= 96;
  unint64_t v12 = (char *)*a1;
  uint64_t v11 = (char *)a1[1];
  *a1 = v19 + v8;
  *(void *)&long long v20 = v19 + 96;
  *(_OWORD *)(a1 + 1) = v20;
  if (v11 != v12)
  {
    uint64_t v13 = v11 - 96;
    uint64_t v14 = v11 - 96;
    uint64_t v15 = v11 - 96;
    do
    {
      uint64_t v16 = *(void (***)(char *))v15;
      v15 -= 96;
      (*v16)(v14);
      v13 -= 96;
      BOOL v17 = v14 == v12;
      uint64_t v14 = v15;
    }
    while (!v17);
  }
  if (v12) {
    operator delete(v12);
  }
  return v19 + 96;
}

void sub_1000E1DD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1000E1E10((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E1E10(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    unint64_t v4 = *(void (***)(void))(i - 96);
    *(void *)(a1 + 16) = i - 96;
    (*v4)();
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1000E1E80(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100454870;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1000E1EA0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100454870;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_1000E1EF4(uint64_t a1)
{
}

void sub_1000E1F00(uint64_t a1)
{
  int v4 = *(_DWORD *)a1;
  uint64_t v2 = (uint64_t *)(a1 + 8);
  int v3 = v4;
  switch(v4 ^ (v4 >> 31))
  {
    case 1:
      if ((v3 & 0x80000000) == 0)
      {
        nullsub_96(v2);
        return;
      }
      uint64_t v18 = (void *)*v2;
      if (!v18) {
        return;
      }
      nullsub_96(v18);
      goto LABEL_112;
    case 2:
      return;
    case 3:
    case 8:
      if ((v3 & 0x80000000) == 0)
      {
        nullsub_9(v2);
        return;
      }
      uint64_t v16 = *v2;
      if (!v16) {
        return;
      }
      nullsub_9(v16);
      goto LABEL_112;
    case 4:
      if ((v3 & 0x80000000) == 0)
      {
        sub_1001AB75C(v2);
        return;
      }
      if (!*v2) {
        return;
      }
      ((void (*)(void))sub_1001AB75C)();
      goto LABEL_107;
    case 5:
      if ((v3 & 0x80000000) == 0)
      {
        sub_1001B7860(v2);
        return;
      }
      uint64_t v19 = (void *)*v2;
      if (!v19) {
        return;
      }
      sub_1001B7860(v19);
      goto LABEL_135;
    case 6:
      if ((v3 & 0x80000000) == 0)
      {
        sub_1001A3CC4(v2);
        return;
      }
      uint64_t v20 = *v2;
      if (!v20) {
        return;
      }
      sub_1001A3CC4(v20);
      goto LABEL_122;
    case 7:
      if ((v3 & 0x80000000) == 0)
      {
        sub_1000A45A0((uint64_t)v2);
        return;
      }
      uint64_t v21 = *v2;
      if (!v21) {
        return;
      }
      sub_1000A45A0(v21);
      goto LABEL_107;
    case 9:
      if ((v3 & 0x80000000) == 0)
      {
        sub_100041664((uint64_t)v2);
        return;
      }
      uint64_t v22 = *v2;
      if (!v22) {
        return;
      }
      sub_100041664(v22);
LABEL_107:
      goto LABEL_109;
    case 0xA:
      if ((v3 & 0x80000000) == 0)
      {
        nullsub_95(v2);
        return;
      }
      uint64_t v23 = *v2;
      if (!v23) {
        return;
      }
      nullsub_95(v23);
      goto LABEL_112;
    case 0xB:
      sub_1000748BC((void *)(a1 + 24));
      return;
    case 0xC:
      if (v3 < 0)
      {
        uint64_t v24 = *v2;
        if (!*v2) {
          return;
        }
        nullsub_15(v24 + 24);
        uint64_t v25 = *(std::__shared_weak_count **)(v24 + 16);
        if (v25 && !atomic_fetch_add(&v25->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
          std::__shared_weak_count::__release_weak(v25);
        }
LABEL_135:
LABEL_109:
        operator delete();
      }
      nullsub_15(a1 + 32);
LABEL_87:
      BOOL v17 = *(std::__shared_weak_count **)(a1 + 24);
      if (v17 && !atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
      return;
    case 0xD:
      long long v5 = *(const void **)(a1 + 24);
      if (v5) {
        CFRelease(v5);
      }
      return;
    case 0xE:
      unint64_t v6 = *(char **)(a1 + 32);
      if (v6)
      {
        for (uint64_t i = *(char **)(a1 + 40); i != v6; i -= 88)
        {
          if (*(i - 48)) {
            *(i - 48) = 0;
          }
        }
        *(void *)(a1 + 40) = v6;
        operator delete(v6);
      }
      goto LABEL_87;
    case 0xF:
      if ((v3 & 0x80000000) == 0)
      {
        sub_1001B0164(v2);
        return;
      }
      if (!*v2) {
        return;
      }
      ((void (*)(void))sub_1001B0164)();
LABEL_122:
      goto LABEL_109;
    case 0x10:
      uint64_t v8 = *(void (****)(void))(a1 + 16);
      if (v8)
      {
        uint64_t v9 = *(void (****)(void))(a1 + 24);
        uint64_t v10 = *(void **)(a1 + 16);
        if (v9 != v8)
        {
          uint64_t v11 = v9 - 11;
          unint64_t v12 = v9 - 11;
          uint64_t v13 = v9 - 11;
          do
          {
            uint64_t v14 = *v13;
            v13 -= 11;
            (*v14)(v12);
            v11 -= 11;
            BOOL v15 = v12 == v8;
            unint64_t v12 = v13;
          }
          while (!v15);
          uint64_t v10 = *(void **)(a1 + 16);
        }
        *(void *)(a1 + 24) = v8;
        operator delete(v10);
      }
      return;
    case 0x11:
      if ((v3 & 0x80000000) == 0)
      {
        sub_1000428B0(a1 + 24);
        return;
      }
      if (!*v2) {
        return;
      }
      sub_1000428B0(*v2 + 16);
      goto LABEL_135;
    case 0x12:
      if ((v3 & 0x80000000) == 0)
      {
        sub_1000428B0(a1 + 120);
        sub_1000EF770((void *)(a1 + 16));
        return;
      }
      uint64_t v26 = *v2;
      if (!*v2) {
        return;
      }
      sub_1000428B0(v26 + 112);
      sub_1000EF770((void *)(v26 + 8));
      goto LABEL_135;
    case 0x13:
      if ((v3 & 0x80000000) == 0)
      {
        sub_1000428B0(a1 + 88);
        sub_1000FA868(a1 + 16);
        return;
      }
      uint64_t v27 = *v2;
      if (!*v2) {
        return;
      }
      sub_1000428B0(v27 + 80);
      sub_1000FA868(v27 + 8);
      goto LABEL_135;
    case 0x14:
      if ((v3 & 0x80000000) == 0)
      {
        sub_1000428B0(a1 + 184);
        sub_100042F7C((void *)(a1 + 24));
        return;
      }
      uint64_t v28 = *v2;
      if (!*v2) {
        return;
      }
      sub_1000428B0(v28 + 176);
      sub_100042F7C((void *)(v28 + 16));
      goto LABEL_135;
    case 0x15:
      if ((v3 & 0x80000000) == 0)
      {
        sub_1000428B0(a1 + 112);
        sub_1000FE82C((void *)(a1 + 16));
        return;
      }
      uint64_t v29 = *v2;
      if (!*v2) {
        return;
      }
      sub_1000428B0(v29 + 104);
      sub_1000FE82C((void *)(v29 + 8));
      goto LABEL_135;
    default:
      if ((v3 & 0x80000000) == 0)
      {
        nullsub_37(a1 + 16);
        return;
      }
      if (!*v2) {
        return;
      }
      nullsub_37(*v2 + 8);
LABEL_112:
      goto LABEL_109;
  }
}

char *sub_1000E2670(char **a1, uint64_t a2)
{
  int v3 = *a1;
  int v4 = a1[1];
  unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3);
  unint64_t v6 = v5 + 1;
  if (v5 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_1000A9108();
  }
  if (0x5555555555555556 * ((a1[2] - v3) >> 3) > v6) {
    unint64_t v6 = 0x5555555555555556 * ((a1[2] - v3) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3) >= 0x555555555555555) {
    unint64_t v8 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v8)
  {
    if (v8 > 0xAAAAAAAAAAAAAAALL) {
      sub_1000A6A10();
    }
    uint64_t v9 = (char *)operator new(24 * v8);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = &v9[24 * v5];
  uint64_t v16 = v10;
  BOOL v17 = v10;
  uint64_t v18 = &v9[24 * v8];
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1000559FC(v10, *(void **)a2, *(void *)(a2 + 8));
    int v3 = *a1;
    int v4 = a1[1];
    uint64_t v10 = v16;
    uint64_t v11 = v17 + 24;
    if (v4 == *a1)
    {
LABEL_17:
      uint64_t v13 = v3;
      goto LABEL_18;
    }
  }
  else
  {
    *(_OWORD *)uint64_t v10 = *(_OWORD *)a2;
    *((void *)v10 + 2) = *(void *)(a2 + 16);
    uint64_t v11 = v10 + 24;
    if (v4 == v3) {
      goto LABEL_17;
    }
  }
  do
  {
    long long v12 = *(_OWORD *)(v4 - 24);
    *((void *)v10 - 1) = *((void *)v4 - 1);
    *(_OWORD *)(v10 - 24) = v12;
    v10 -= 24;
    *((void *)v4 - 2) = 0;
    *((void *)v4 - 1) = 0;
    *((void *)v4 - 3) = 0;
    v4 -= 24;
  }
  while (v4 != v3);
  uint64_t v13 = *a1;
  int v3 = a1[1];
LABEL_18:
  *a1 = v10;
  a1[1] = v11;
  a1[2] = v18;
  if (v3 != v13)
  {
    uint64_t v14 = (void **)(v3 - 24);
    do
    {
      if (*((char *)v14 + 23) < 0) {
        operator delete(*v14);
      }
      v14 -= 3;
    }
    while (v14 + 3 != (void **)v13);
    int v3 = v13;
  }
  if (v3) {
    operator delete(v3);
  }
  return v11;
}

void sub_1000E2834(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000E2848((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E2848(uint64_t a1)
{
  int v3 = *(void ***)(a1 + 8);
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      unint64_t v5 = v2 - 3;
      *(void *)(a1 + 16) = v2 - 3;
      if (*((char *)v2 - 1) < 0)
      {
        operator delete(*v5);
        unint64_t v5 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != v3);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1000E28B0()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1000E2928()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_1000E29A0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  sub_1000E2B58(a1, a2, a3, a4);
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v4);
  std::string __p = operator new(0x19uLL);
  long long v7 = xmmword_1003E6DB0;
  strcpy((char *)__p, "protobuf/gen/uuid.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  operator delete(__p);
  if (!FileByName)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  }
  qword_10047D4D0 = *(void *)(FileByName + 80);
  operator new();
}

void sub_1000E2AF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E2B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E2B18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000E2B58(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10047D4C0 & 1) == 0)
  {
    byte_10047D4C0 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/uuid.pb.cc", a4);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n\x17protobuf/gen/uuid.proto\x12\bproto.id\"E\n\x04UUID\x12\x1E\n\x16least_significant_bits\x18\x01 \x02(\x12\x12\x1D\n\x15most_significant_bits\x18\x02 \x02(\x12B\x1B\n\x19com.apple.indoor.proto.id", (const void *)0x87, v4);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_1000E2C48()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000E2C70()
{
  if (qword_10047E8E0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E8E0 + 8))(qword_10047E8E0);
  }
  uint64_t result = qword_10047D4D8;
  if (qword_10047D4D8)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10047D4D8 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_1000E2CF8()
{
  uint64_t v0 = qword_10047D4E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E29A0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  if (!qword_10047E8E0) {
    sub_1000E2B58();
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_1000E2DB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_1000E2DCC(void *a1)
{
  *a1 = off_1004548C0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_1000E2E18(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E2E2C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(void *)(a1 + 24) = v6;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000E2EE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E2EF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E2F0C(uint64_t a1)
{
  *(void *)a1 = off_1004548C0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000E2F60(uint64_t a1)
{
  *(void *)a1 = off_1004548C0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000E2FC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

uint64_t sub_1000E2FD0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047E8E0;
  if (!qword_10047E8E0)
  {
    sub_1000E2B58(0, a2, a3, a4);
    return qword_10047E8E0;
  }
  return result;
}

void sub_1000E300C()
{
}

void sub_1000E3070()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000E3098(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 36))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1000E30B8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      long long v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacunsigned int k = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_17;
      }
      unint64_t v18 = 0;
      long long v12 = (char *)*((void *)this + 1);
      unint64_t v10 = *((void *)this + 2);
      if ((unint64_t)v12 >= v10 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v18);
        if (!result) {
          return result;
        }
        unint64_t v13 = v18;
        uint64_t v14 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
      }
      else
      {
        unint64_t v13 = *v12;
        uint64_t v14 = v12 + 1;
        *((void *)this + 1) = v14;
      }
      *(void *)(a1 + 16) = -(uint64_t)(v13 & 1) ^ (v13 >> 1);
      *(_DWORD *)(a1 + 36) |= 1u;
      if ((unint64_t)v14 < v10 && *v14 == 16)
      {
        uint64_t v11 = v14 + 1;
        *((void *)this + 1) = v11;
        unint64_t v18 = 0;
        if ((unint64_t)v11 >= v10) {
          goto LABEL_27;
        }
LABEL_25:
        if ((char)*v11 < 0)
        {
LABEL_27:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v18);
          if (!result) {
            return result;
          }
          unint64_t v15 = v18;
          uint64_t v16 = (char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
          goto LABEL_29;
        }
        unint64_t v15 = *v11;
        uint64_t v16 = (char *)(v11 + 1);
        *((void *)this + 1) = v16;
LABEL_29:
        *(void *)(a1 + 24) = -(uint64_t)(v15 & 1) ^ (v15 >> 1);
        *(_DWORD *)(a1 + 36) |= 2u;
        if (v16 == (char *)v10 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v11 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        unint64_t v18 = 0;
        if ((unint64_t)v11 >= v10) {
          goto LABEL_27;
        }
        goto LABEL_25;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_17:
    if (v9 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1000E32B4(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 16), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 36) & 2) == 0)
    {
LABEL_3:
      int v9 = *(void **)(v5 + 8);
      unint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
      long long v7 = v9;
      if (!v9) {
        return result;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 24), (uint64_t)a2, a4);
  unint64_t v10 = *(void **)(v5 + 8);
  unint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  long long v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_7:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000E3350(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 9);
  if (v4)
  {
    uint64_t v8 = *((void *)this + 2);
    *(unsigned char *)a2 = 8;
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v8) ^ (v8 >> 63)), (unint64_t)a2 + 1, a3);
    if ((*((_DWORD *)this + 9) & 2) == 0)
    {
LABEL_3:
      long long v7 = (void *)*((void *)this + 1);
      int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      uint64_t v5 = v7;
      if (!v7) {
        return a2;
      }
      goto LABEL_7;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v9 = *((void *)this + 3);
  *(unsigned char *)a2 = 16;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v9) ^ (v9 >> 63)), (unint64_t)a2 + 1, a3);
  unint64_t v10 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v10;
  if (!v10) {
    return a2;
  }
LABEL_7:
  if (*v5 == v5[1]) {
    return a2;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, a2, a3);
}

uint64_t sub_1000E3400(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 36))
  {
    if ((*(unsigned char *)(a1 + 36) & 1) == 0)
    {
      uint64_t v3 = 0;
      if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *(void *)(a1 + 16)) ^ (*(uint64_t *)(a1 + 16) >> 63)), (unint64_t)a2)+ 1;
    if ((*(_DWORD *)(a1 + 36) & 2) != 0) {
LABEL_7:
    }
      uint64_t v3 = v3
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *(void *)(a1 + 24)) ^ (*(uint64_t *)(a1 + 24) >> 63)), (unint64_t)a2)+ 1;
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_8:
  int v4 = *(void **)(a1 + 8);
  if (v4 && *v4 != v4[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 32) = v3;
  return v3;
}

uint64_t sub_1000E349C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000E2E2C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000E357C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E3590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E35A4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

BOOL sub_1000E3630(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 36) & 3) == 0;
}

uint64_t sub_1000E3644()
{
  uint64_t v0 = qword_10047D4E0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E29A0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D4D0;
}

void sub_1000E36D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E36E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000E36F0(uint64_t a1)
{
  (*(void (**)(uint64_t))(*(void *)a1 + 152))(a1);
  return v1;
}

void sub_1000E3730(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  sub_1000E38E8(a1, a2, a3, a4);
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v4);
  std::string __p = operator new(0x20uLL);
  long long v7 = xmmword_1003E74B0;
  strcpy((char *)__p, "CLPPipelinedLogEntry.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  operator delete(__p);
  if (!FileByName)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  }
  qword_10047D4F8 = *(void *)(FileByName + 80);
  operator new();
}

void sub_1000E3880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E3894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E38A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000E38E8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10047D4E8 & 1) == 0)
  {
    byte_10047D4E8 = 1;
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/protobuf/clpsensorsurvey/Proto/CLPPipelinedLogEntry.pb.cc", a4);
    sub_100116F6C(v4, v5, v6, v7);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n\x1ACLPPipelinedLogEntry.proto\x12\x1Cproto.CLP.LogEntry.Pipelined\x1A\x18CLPPipelinedOutput.proto\"S\n\bLogEntry\x12G\n\x10pipelined_output\x18\x01 \x01(\v2-.proto.CLP.LogEntry.Pipelined.PipelinedOutput", (const void *)0xA9, v8);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_1000E39E0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000E3A08()
{
  if (qword_10047E8E8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E8E8 + 8))(qword_10047E8E8);
  }
  uint64_t result = qword_10047D500;
  if (qword_10047D500)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10047D500 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_1000E3A90()
{
  uint64_t v0 = qword_10047D508;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E3730;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  if (!qword_10047E8E8) {
    sub_1000E38E8();
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_1000E3B50(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_1000E3B64(void *a1)
{
  *a1 = off_100454988;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  return a1;
}

void sub_1000E3BAC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E3BC0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
    if ((*(unsigned char *)(a2 + 28) & 1) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else if ((*(unsigned char *)(a2 + 28) & 1) == 0)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  *(_DWORD *)(a1 + 28) |= 1u;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    operator new();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_10047E8E8 + 16);
  }
  sub_10011AD28(v4, v5);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000E3CB8()
{
}

void sub_1000E3CDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E3CF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E3D04(void *a1)
{
  *a1 = off_100454988;
  if ((void *)qword_10047E8E8 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000E3D98(void *a1)
{
  *a1 = off_100454988;
  if ((void *)qword_10047E8E8 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000E3E40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

uint64_t sub_1000E3E48(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047E8E8;
  if (!qword_10047E8E8)
  {
    sub_1000E38E8(0, a2, a3, a4);
    return qword_10047E8E8;
  }
  return result;
}

void sub_1000E3E84()
{
}

void sub_1000E3EE4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000E3F0C(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 28))
  {
    this = *(void *)(this + 16);
    if (this) {
      this = sub_10011B170(this);
    }
  }
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v2 + 5) = 0;
  if (v3)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v2);
  }
  return this;
}

uint64_t sub_1000E3F6C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      long long v7 = (unsigned __int8 *)*((void *)this + 1);
      if ((unint64_t)v7 < *((void *)this + 2) && ((char)*v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (TagFallback != 10) {
        goto LABEL_5;
      }
LABEL_10:
      *(_DWORD *)(a1 + 28) |= 1u;
      uint64_t v9 = *(void *)(a1 + 16);
      if (!v9) {
        operator new();
      }
      unsigned int v20 = 0;
      unint64_t v10 = (char *)*((void *)this + 1);
      if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20))return 0; {
      }
        }
      else
      {
        unsigned int v20 = *v10;
        *((void *)this + 1) = v10 + 1;
      }
      int v11 = *((_DWORD *)this + 14);
      int v12 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v11 + 1;
      if (v11 >= v12) {
        return 0;
      }
      int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v20);
      if (!sub_10011B288(v9, this, v14, v15) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
      int v16 = *((_DWORD *)this + 14);
      BOOL v17 = __OFSUB__(v16, 1);
      int v18 = v16 - 1;
      if (v18 < 0 == v17) {
        *((_DWORD *)this + 14) = v18;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    TagFallbacunsigned int k = *v7;
    *((_DWORD *)this + 8) = TagFallback;
    *((void *)this + 1) = v7 + 1;
    if (TagFallback == 10) {
      goto LABEL_10;
    }
LABEL_5:
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_1000E4148()
{
}

uint64_t sub_1000E416C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 28))
  {
    uint64_t v6 = *(void *)(result + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047E8E8 + 16);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  uint64_t v9 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  long long v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000E41F0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  if (*((unsigned char *)this + 28))
  {
    uint64_t v5 = (unsigned int *)*((void *)this + 2);
    if (v5)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v6 = a2 + 1;
      long long v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v5[14];
      if (v7 <= 0x7F)
      {
LABEL_4:
        *((unsigned char *)a2 + 1) = (_BYTE)v7;
        int v8 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
LABEL_7:
        a2 = sub_10011B81C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v5, v8, a3, a4);
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v5 = *(unsigned int **)(qword_10047E8E8 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v6 = a2 + 1;
      long long v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v5[14];
      if (v7 <= 0x7F) {
        goto LABEL_4;
      }
    }
    int v8 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, v6, a3);
    goto LABEL_7;
  }
LABEL_8:
  int v11 = (void *)*((void *)this + 1);
  unint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v9 = v11;
  if (!v11 || *v9 == v9[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, a2, a3);
}

uint64_t sub_1000E42B8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v7 = *(void *)(a1 + 16);
    if (v7)
    {
      int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10011B9F0(v7, a2);
      if (v8 < 0x80) {
        goto LABEL_6;
      }
    }
    else
    {
      int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10011B9F0(*(void *)(qword_10047E8E8 + 16), a2);
      if (v8 < 0x80)
      {
LABEL_6:
        uint64_t v3 = (v8 + 2);
        uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        uint64_t v5 = *(void **)(a1 + 8);
        if (!v5) {
          goto LABEL_3;
        }
        goto LABEL_10;
      }
    }
    uint64_t v3 = v8
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2)+ 1;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v5 = *(void **)(a1 + 8);
    if (!v5) {
      goto LABEL_3;
    }
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  if (!v5)
  {
LABEL_3:
    *(_DWORD *)(a1 + 24) = v3;
    return v3;
  }
LABEL_10:
  if (*v5 == v5[1]) {
    goto LABEL_3;
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v4, a2)
     + v3;
  *(_DWORD *)(a1 + 24) = v9;
  return v9;
}

uint64_t sub_1000E438C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000E3BC0((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000E446C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E4480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E4494(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000E4520()
{
  return 1;
}

uint64_t sub_1000E4528()
{
  uint64_t v0 = qword_10047D508;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E3730;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D4F8;
}

void sub_1000E45B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E45CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

void sub_1000E45D8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  sub_1000E4790(a1, a2, a3, a4);
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v4);
  std::string __p = operator new(0x20uLL);
  long long v7 = xmmword_1003E74F0;
  strcpy((char *)__p, "CLPPrivateDataCapture.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  operator delete(__p);
  if (!FileByName)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  }
  qword_10047D520 = *(void *)(FileByName + 80);
  operator new();
}

void sub_1000E4728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E473C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E4750(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000E4790(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10047D510 & 1) == 0)
  {
    byte_10047D510 = 1;
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/protobuf/clpsensorsurvey/Proto/CLPPrivateDataCapture.pb.cc", a4);
    sub_10010B9D8(v4, v5, v6, v7);
    sub_1000E38E8(v8, v9, v10, v11);
    sub_100115BB4(v12, v13, v14, v15);
    sub_10011EAFC(v16, v17, v18, v19);
    sub_1000FCEAC(v20, v21, v22, v23);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n\x1BCLPPrivateDataCapture.proto\x12\x1Eproto.CLP.LogEntry.PrivateData\x1A\x1ACLPPrivateDataShared.proto\x1A\x1ACLPPipelinedLogEntry.proto\x1A\x17CLPVisionLogEntry.proto\x1A\x1DCLPSensorSurveyLogEntry.proto\x1A!CLPOutdoorEstimatorLogEntry.proto\"\xF3\x03\x0A\x12PrivateDataCapture\x124\n\x05accel\x18\x01 \x01(\v2%.proto.CLP.LogEntry.PrivateData.Accel\x122\n\x04gyro\x18\x02 \x01(\v2$.proto.CLP.LogEntry.PrivateData.Gyro\x12K\n\x11wifi_notification\x18\x16 \x01(\v20.proto.CLP.LogEntry.PrivateData.WifiNotification\x12>\n\x10vision_log_entry\x18\xEF\x07\x20\x01(\v2#.proto.CLP.LogEntry.Vision.LogEntry\x12K\n\x17sensor_survey_log_entry\x18\xF1\x07\x20\x01(\v2).proto.CLP.LogEntry.SensorSurvey.LogEntry\x12D\n\x13pipelined_log_entry\x18\xF3\x07\x20\x01(\v2&.proto.CLP.LogEntry.Pipelined.LogEntry\x12S\n"
                                                                "\x1Boutdoor_estimator_log_entry\x18\xF4\x07\x20\x01(\v2-"
                                                                ".proto.CLP.LogEntry.OutdoorEstimator.LogEntry",
      (const void *)0x2C6,
      v24);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_1000E48D0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000E48F8()
{
  if (qword_10047E8F0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E8F0 + 8))(qword_10047E8F0);
  }
  uint64_t result = qword_10047D528;
  if (qword_10047D528)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10047D528 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_1000E4980()
{
  uint64_t v0 = qword_10047D530;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E45D8;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  if (!qword_10047E8F0) {
    sub_1000E4790();
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_1000E4A40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E4A54(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
    LOBYTE(v4) = *(unsigned char *)(a2 + 76);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 76);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 76) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047E8F0 + 16);
    }
    sub_10010DFA8(v5, v6);
    int v4 = *(_DWORD *)(a2 + 76);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 76) |= 2u;
    uint64_t v7 = *(void *)(a1 + 24);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10047E8F0 + 24);
    }
    sub_10010FBB0(v7, v8);
    int v4 = *(_DWORD *)(a2 + 76);
  }
  if ((v4 & 4) != 0)
  {
    *(_DWORD *)(a1 + 76) |= 4u;
    uint64_t v9 = *(void *)(a1 + 32);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = *(void *)(a2 + 32);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_10047E8F0 + 32);
    }
    sub_100113814(v9, v10);
    int v4 = *(_DWORD *)(a2 + 76);
  }
  if ((v4 & 8) != 0)
  {
    *(_DWORD *)(a1 + 76) |= 8u;
    uint64_t v11 = *(void *)(a1 + 40);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 40);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_10047E8F0 + 40);
    }
    sub_100115E50(v11, v12);
    int v4 = *(_DWORD *)(a2 + 76);
  }
  if ((v4 & 0x10) != 0)
  {
    *(_DWORD *)(a1 + 76) |= 0x10u;
    uint64_t v13 = *(void *)(a1 + 48);
    if (!v13) {
      operator new();
    }
    uint64_t v14 = *(void *)(a2 + 48);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_10047E8F0 + 48);
    }
    sub_10011EDBC(v13, v14);
    int v4 = *(_DWORD *)(a2 + 76);
  }
  if ((v4 & 0x20) != 0)
  {
    *(_DWORD *)(a1 + 76) |= 0x20u;
    uint64_t v15 = *(void *)(a1 + 56);
    if (!v15) {
      operator new();
    }
    uint64_t v16 = *(void *)(a2 + 56);
    if (!v16) {
      uint64_t v16 = *(void *)(qword_10047E8F0 + 56);
    }
    sub_1000E3BC0(v15, v16);
    int v4 = *(_DWORD *)(a2 + 76);
  }
  if ((v4 & 0x40) != 0)
  {
    *(_DWORD *)(a1 + 76) |= 0x40u;
    uint64_t v17 = *(void *)(a1 + 64);
    if (!v17) {
      operator new();
    }
    uint64_t v18 = *(void *)(a2 + 64);
    if (!v18) {
      uint64_t v18 = *(void *)(qword_10047E8F0 + 64);
    }
    sub_1000FDED8(v17, v18);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000E4DC0()
{
}

void sub_1000E4DE4()
{
}

void sub_1000E4E08()
{
}

void sub_1000E4E2C()
{
}

void sub_1000E4E50()
{
}

void sub_1000E4E74()
{
}

void sub_1000E4E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E4EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E4EC4(void *a1)
{
  *a1 = off_100454A50;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_1000245A0(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1000E4F24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 72) = a2;
  return result;
}

uint64_t sub_1000E4F2C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047E8F0;
  if (!qword_10047E8F0)
  {
    sub_1000E4790(0, a2, a3, a4);
    return qword_10047E8F0;
  }
  return result;
}

void sub_1000E4F68()
{
}

void sub_1000E4FD0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000E4FF8(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 76);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 76))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        this = sub_10010E348(this);
        int v2 = *(_DWORD *)(v1 + 76);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this)
      {
        this = sub_10010FF50(this);
        int v2 = *(_DWORD *)(v1 + 76);
      }
    }
    if ((v2 & 4) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        this = sub_100113EC8(this);
        int v2 = *(_DWORD *)(v1 + 76);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this)
      {
        this = sub_100116294(this);
        int v2 = *(_DWORD *)(v1 + 76);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      this = *(void *)(v1 + 48);
      if (this)
      {
        this = sub_10011F410(this);
        int v2 = *(_DWORD *)(v1 + 76);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      this = *(void *)(v1 + 56);
      if (this)
      {
        this = sub_1000E3F0C(this);
        int v2 = *(_DWORD *)(v1 + 76);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      this = *(void *)(v1 + 64);
      if (this) {
        this = sub_1000FE9D8(this);
      }
    }
  }
  uint64_t v4 = *(void *)(v1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 17) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_1000E50D4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacunsigned int k = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 > 0x3EE)
        {
          switch(v9)
          {
            case 0x3EFu:
              int v10 = TagFallback & 7;
              if (v10 != 2) {
                goto LABEL_38;
              }
              *(_DWORD *)(a1 + 76) |= 8u;
              uint64_t v11 = *(void *)(a1 + 40);
              if (!v11) {
                goto LABEL_11;
              }
              goto LABEL_76;
            case 0x3F1u:
              int v10 = TagFallback & 7;
              if (v10 != 2) {
                goto LABEL_38;
              }
              *(_DWORD *)(a1 + 76) |= 0x10u;
              uint64_t v13 = *(void *)(a1 + 48);
              if (!v13) {
                goto LABEL_20;
              }
              goto LABEL_89;
            case 0x3F3u:
              int v10 = TagFallback & 7;
              if (v10 != 2) {
                goto LABEL_38;
              }
              *(_DWORD *)(a1 + 76) |= 0x20u;
              uint64_t v14 = *(void *)(a1 + 56);
              if (!v14) {
                goto LABEL_23;
              }
              goto LABEL_102;
            case 0x3F4u:
              int v10 = TagFallback & 7;
              if (v10 != 2) {
                goto LABEL_38;
              }
              *(_DWORD *)(a1 + 76) |= 0x40u;
              uint64_t v15 = *(void *)(a1 + 64);
              if (!v15) {
                goto LABEL_26;
              }
              goto LABEL_115;
            default:
              goto LABEL_37;
          }
        }
        if (v9 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 76) |= 1u;
        uint64_t v16 = *(void *)(a1 + 16);
        if (!v16) {
          operator new();
        }
        unsigned int v82 = 0;
        uint64_t v17 = (char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v82))return 0; {
        }
          }
        else
        {
          unsigned int v82 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0;
        }
        int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v82);
        if (!sub_10010E414(v16, this, v23, v24) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        int v25 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v25, 1);
        int v27 = v25 - 1;
        if (v27 < 0 == v26) {
          *((_DWORD *)this + 14) = v27;
        }
        uint64_t v28 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v28 < *((void *)this + 2) && *v28 == 18)
        {
          *((void *)this + 1) = v28 + 1;
          *(_DWORD *)(a1 + 76) |= 2u;
          uint64_t v18 = *(void *)(a1 + 24);
          if (!v18) {
LABEL_50:
          }
            operator new();
          goto LABEL_35;
        }
      }
      if (v9 != 2) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 2) {
        goto LABEL_38;
      }
      *(_DWORD *)(a1 + 76) |= 2u;
      uint64_t v18 = *(void *)(a1 + 24);
      if (!v18) {
        goto LABEL_50;
      }
LABEL_35:
      unsigned int v82 = 0;
      uint64_t v19 = (char *)*((void *)this + 1);
      if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v82))return 0; {
      }
        }
      else
      {
        unsigned int v82 = *v19;
        *((void *)this + 1) = v19 + 1;
      }
      int v29 = *((_DWORD *)this + 14);
      int v30 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v29 + 1;
      if (v29 >= v30) {
        return 0;
      }
      int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v82);
      if (!sub_10011001C(v18, this, v32, v33) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
      int v34 = *((_DWORD *)this + 14);
      BOOL v26 = __OFSUB__(v34, 1);
      int v35 = v34 - 1;
      if (v35 < 0 == v26) {
        *((_DWORD *)this + 14) = v35;
      }
      unint64_t v36 = (unsigned __int8 *)*((void *)this + 1);
      if (*((_DWORD *)this + 4) - (int)v36 > 1 && *v36 == 178 && v36[1] == 1)
      {
        *((void *)this + 1) = v36 + 2;
        *(_DWORD *)(a1 + 76) |= 4u;
        uint64_t v12 = *(void *)(a1 + 32);
        if (!v12) {
LABEL_17:
        }
          operator new();
LABEL_63:
        unsigned int v82 = 0;
        uint8x8_t v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v82))return 0; {
        }
          }
        else
        {
          unsigned int v82 = *v37;
          *((void *)this + 1) = v37 + 1;
        }
        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v82);
        if (!sub_100114030(v12, this, v41, v42) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v43 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v43, 1);
        int v44 = v43 - 1;
        if (v44 < 0 == v26) {
          *((_DWORD *)this + 14) = v44;
        }
        float v45 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v45 > 1 && *v45 == 250 && v45[1] == 62)
        {
          *((void *)this + 1) = v45 + 2;
          *(_DWORD *)(a1 + 76) |= 8u;
          uint64_t v11 = *(void *)(a1 + 40);
          if (!v11) {
LABEL_11:
          }
            operator new();
LABEL_76:
          unsigned int v82 = 0;
          uint64_t v46 = (char *)*((void *)this + 1);
          if ((unint64_t)v46 >= *((void *)this + 2) || *v46 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v82))return 0; {
          }
            }
          else
          {
            unsigned int v82 = *v46;
            *((void *)this + 1) = v46 + 1;
          }
          int v47 = *((_DWORD *)this + 14);
          int v48 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v47 + 1;
          if (v47 >= v48) {
            return 0;
          }
          int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v82);
          if (!sub_100116328(v11, this, v50, v51) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
          int v52 = *((_DWORD *)this + 14);
          BOOL v26 = __OFSUB__(v52, 1);
          int v53 = v52 - 1;
          if (v53 < 0 == v26) {
            *((_DWORD *)this + 14) = v53;
          }
          float v54 = (unsigned __int8 *)*((void *)this + 1);
          if (*((_DWORD *)this + 4) - (int)v54 > 1 && *v54 == 138 && v54[1] == 63)
          {
            *((void *)this + 1) = v54 + 2;
            *(_DWORD *)(a1 + 76) |= 0x10u;
            uint64_t v13 = *(void *)(a1 + 48);
            if (!v13) {
LABEL_20:
            }
              operator new();
LABEL_89:
            unsigned int v82 = 0;
            float v55 = (char *)*((void *)this + 1);
            if ((unint64_t)v55 >= *((void *)this + 2) || *v55 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v82))return 0; {
            }
              }
            else
            {
              unsigned int v82 = *v55;
              *((void *)this + 1) = v55 + 1;
            }
            int v56 = *((_DWORD *)this + 14);
            int v57 = *((_DWORD *)this + 15);
            *((_DWORD *)this + 14) = v56 + 1;
            if (v56 >= v57) {
              return 0;
            }
            int v58 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v82);
            if (!sub_10011F500(v13, this, v59, v60) || !*((unsigned char *)this + 36)) {
              return 0;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v58);
            int v61 = *((_DWORD *)this + 14);
            BOOL v26 = __OFSUB__(v61, 1);
            int v62 = v61 - 1;
            if (v62 < 0 == v26) {
              *((_DWORD *)this + 14) = v62;
            }
            float v63 = (unsigned __int8 *)*((void *)this + 1);
            if (*((_DWORD *)this + 4) - (int)v63 > 1 && *v63 == 154 && v63[1] == 63)
            {
              *((void *)this + 1) = v63 + 2;
              *(_DWORD *)(a1 + 76) |= 0x20u;
              uint64_t v14 = *(void *)(a1 + 56);
              if (!v14) {
LABEL_23:
              }
                operator new();
LABEL_102:
              unsigned int v82 = 0;
              float v64 = (char *)*((void *)this + 1);
              if ((unint64_t)v64 >= *((void *)this + 2) || *v64 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v82))return 0; {
              }
                }
              else
              {
                unsigned int v82 = *v64;
                *((void *)this + 1) = v64 + 1;
              }
              int v65 = *((_DWORD *)this + 14);
              int v66 = *((_DWORD *)this + 15);
              *((_DWORD *)this + 14) = v65 + 1;
              if (v65 >= v66) {
                return 0;
              }
              int v67 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v82);
              if (!sub_1000E3F6C(v14, this, v68, v69) || !*((unsigned char *)this + 36)) {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v67);
              int v70 = *((_DWORD *)this + 14);
              BOOL v26 = __OFSUB__(v70, 1);
              int v71 = v70 - 1;
              if (v71 < 0 == v26) {
                *((_DWORD *)this + 14) = v71;
              }
              float v72 = (unsigned __int8 *)*((void *)this + 1);
              if (*((_DWORD *)this + 4) - (int)v72 > 1 && *v72 == 162 && v72[1] == 63)
              {
                *((void *)this + 1) = v72 + 2;
                *(_DWORD *)(a1 + 76) |= 0x40u;
                uint64_t v15 = *(void *)(a1 + 64);
                if (!v15) {
LABEL_26:
                }
                  operator new();
LABEL_115:
                unsigned int v82 = 0;
                float v73 = (char *)*((void *)this + 1);
                if ((unint64_t)v73 >= *((void *)this + 2) || *v73 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v82))return 0; {
                }
                  }
                else
                {
                  unsigned int v82 = *v73;
                  *((void *)this + 1) = v73 + 1;
                }
                int v74 = *((_DWORD *)this + 14);
                int v75 = *((_DWORD *)this + 15);
                *((_DWORD *)this + 14) = v74 + 1;
                if (v74 >= v75) {
                  return 0;
                }
                int v76 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v82);
                if (!sub_1000FF364(v15, this, v77, v78) || !*((unsigned char *)this + 36)) {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v76);
                int v79 = *((_DWORD *)this + 14);
                BOOL v26 = __OFSUB__(v79, 1);
                int v80 = v79 - 1;
                if (v80 < 0 == v26) {
                  *((_DWORD *)this + 14) = v80;
                }
                if (*((void *)this + 1) == *((void *)this + 2)
                  && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                {
                  *((_DWORD *)this + 8) = 0;
                  uint64_t result = 1;
                  *((unsigned char *)this + 36) = 1;
                  return result;
                }
              }
            }
          }
        }
      }
    }
    if (v9 == 22)
    {
      int v10 = TagFallback & 7;
      if (v10 == 2)
      {
        *(_DWORD *)(a1 + 76) |= 4u;
        uint64_t v12 = *(void *)(a1 + 32);
        if (!v12) {
          goto LABEL_17;
        }
        goto LABEL_63;
      }
    }
    else
    {
LABEL_37:
      int v10 = TagFallback & 7;
    }
LABEL_38:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_1000E59D8()
{
}

uint64_t sub_1000E5ACC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 76);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_14:
    uint64_t v11 = *(void *)(v5 + 24);
    if (v11)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v11, a2, a4);
      int v6 = *(_DWORD *)(v5 + 76);
      if ((v6 & 4) != 0) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(qword_10047E8F0 + 24), a2, a4);
      int v6 = *(_DWORD *)(v5 + 76);
      if ((v6 & 4) != 0) {
        goto LABEL_18;
      }
    }
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_22:
    uint64_t v13 = *(void *)(v5 + 40);
    if (v13)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3EF, v13, a2, a4);
      int v6 = *(_DWORD *)(v5 + 76);
      if ((v6 & 0x10) != 0) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3EF, *(void *)(qword_10047E8F0 + 40), a2, a4);
      int v6 = *(_DWORD *)(v5 + 76);
      if ((v6 & 0x10) != 0) {
        goto LABEL_26;
      }
    }
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_30:
    uint64_t v15 = *(void *)(v5 + 56);
    if (v15)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F3, v15, a2, a4);
      if ((*(_DWORD *)(v5 + 76) & 0x40) != 0) {
        goto LABEL_34;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F3, *(void *)(qword_10047E8F0 + 56), a2, a4);
      if ((*(_DWORD *)(v5 + 76) & 0x40) != 0) {
        goto LABEL_34;
      }
    }
LABEL_8:
    unsigned int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_38;
  }
  uint64_t v10 = *(void *)(result + 16);
  if (v10)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
    int v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 2) != 0) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047E8F0 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 2) != 0) {
      goto LABEL_14;
    }
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    goto LABEL_4;
  }
LABEL_18:
  uint64_t v12 = *(void *)(v5 + 32);
  if (v12)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, v12, a2, a4);
    int v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 8) != 0) {
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(void *)(qword_10047E8F0 + 32), a2, a4);
    int v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 8) != 0) {
      goto LABEL_22;
    }
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_26:
  uint64_t v14 = *(void *)(v5 + 48);
  if (v14)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F1, v14, a2, a4);
    int v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 0x20) != 0) {
      goto LABEL_30;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F1, *(void *)(qword_10047E8F0 + 48), a2, a4);
    int v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 0x20) != 0) {
      goto LABEL_30;
    }
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    goto LABEL_8;
  }
LABEL_34:
  uint64_t v16 = *(void *)(v5 + 64);
  if (v16)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F4, v16, a2, a4);
    uint64_t v17 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v17;
    if (!v17) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F4, *(void *)(qword_10047E8F0 + 64), a2, a4);
    uint64_t v18 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v18;
    if (!v18) {
      return result;
    }
  }
LABEL_38:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_1000E5D0C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000E4A54((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000E5DEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E5E00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E5E14(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000E5EA0()
{
  return 1;
}

uint64_t sub_1000E5EA8()
{
  uint64_t v0 = qword_10047D530;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E45D8;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D520;
}

void sub_1000E5F38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E5F4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

void sub_1000E5F58()
{
  uint64_t v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_1000E6AE4();
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  char v3 = 20;
  strcpy(__p, "CLPVisionEvent.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  if (!FileByName)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
  }
  qword_10047D548 = *(void *)(FileByName + 80);
  operator new();
}

void sub_1000E6A30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E6A44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E6A58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000E6AE4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10047D538 & 1) == 0)
  {
    byte_10047D538 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/protobuf/clpsensorsurvey/Proto/CLPVisionEvent.pb.cc", a4);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)&unk_1003E769C, (const void *)0x124D, v4);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_1000E753C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000E7568()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000E7594()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000E7760(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  operator delete();
  _Unwind_Resume(a1);
}

void sub_1000E778C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000E77B4()
{
  if (qword_10047E8F8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E8F8 + 8))(qword_10047E8F8);
  }
  if (qword_10047D550) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D550 + 8))(qword_10047D550);
  }
  if (qword_10047E900) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E900 + 8))(qword_10047E900);
  }
  if (qword_10047D560) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D560 + 8))(qword_10047D560);
  }
  if (qword_10047E908) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E908 + 8))(qword_10047E908);
  }
  if (qword_10047D570) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D570 + 8))(qword_10047D570);
  }
  if (qword_10047E910) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E910 + 8))(qword_10047E910);
  }
  if (qword_10047D580) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D580 + 8))(qword_10047D580);
  }
  if (qword_10047E918) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E918 + 8))(qword_10047E918);
  }
  if (qword_10047D590) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D590 + 8))(qword_10047D590);
  }
  if (qword_10047E920) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E920 + 8))(qword_10047E920);
  }
  if (qword_10047D5A0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D5A0 + 8))(qword_10047D5A0);
  }
  if (qword_10047E928) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E928 + 8))(qword_10047E928);
  }
  if (qword_10047D5B0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D5B0 + 8))(qword_10047D5B0);
  }
  if (qword_10047E930) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E930 + 8))(qword_10047E930);
  }
  if (qword_10047D5C0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D5C0 + 8))(qword_10047D5C0);
  }
  if (qword_10047E938) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E938 + 8))(qword_10047E938);
  }
  if (qword_10047D5D0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D5D0 + 8))(qword_10047D5D0);
  }
  if (qword_10047E940) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E940 + 8))(qword_10047E940);
  }
  if (qword_10047D5E0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D5E0 + 8))(qword_10047D5E0);
  }
  if (qword_10047E948) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E948 + 8))(qword_10047E948);
  }
  if (qword_10047D5F0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D5F0 + 8))(qword_10047D5F0);
  }
  if (qword_10047E950) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E950 + 8))(qword_10047E950);
  }
  if (qword_10047D600) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D600 + 8))(qword_10047D600);
  }
  if (qword_10047E958) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E958 + 8))(qword_10047E958);
  }
  if (qword_10047D610) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D610 + 8))(qword_10047D610);
  }
  if (qword_10047E960) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E960 + 8))(qword_10047E960);
  }
  if (qword_10047D620) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D620 + 8))(qword_10047D620);
  }
  if (qword_10047E968) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E968 + 8))(qword_10047E968);
  }
  if (qword_10047D630) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D630 + 8))(qword_10047D630);
  }
  if (qword_10047E970) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E970 + 8))(qword_10047E970);
  }
  if (qword_10047D640) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D640 + 8))(qword_10047D640);
  }
  if (qword_10047E978) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E978 + 8))(qword_10047E978);
  }
  if (qword_10047D650) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D650 + 8))(qword_10047D650);
  }
  if (qword_10047E980) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E980 + 8))(qword_10047E980);
  }
  if (qword_10047D660) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D660 + 8))(qword_10047D660);
  }
  if (qword_10047E988) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E988 + 8))(qword_10047E988);
  }
  if (qword_10047D670) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D670 + 8))(qword_10047D670);
  }
  if (qword_10047E990) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E990 + 8))(qword_10047E990);
  }
  uint64_t result = qword_10047D680;
  if (qword_10047D680)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10047D680 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_1000E7F5C()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v21[1] = sub_1000E5F58;
    char v22 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v21);
  }
  if (!qword_10047E8F8) {
    ((void (*)(void))sub_1000E6AE4)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E900) {
    sub_1000E6AE4(v1);
  }
  uint64_t v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E908) {
    sub_1000E6AE4(v2);
  }
  uint64_t v3 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E910) {
    sub_1000E6AE4(v3);
  }
  uint64_t v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E918) {
    sub_1000E6AE4(v4);
  }
  uint64_t v5 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E920) {
    sub_1000E6AE4(v5);
  }
  uint64_t v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E928) {
    sub_1000E6AE4(v6);
  }
  uint64_t v7 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E930) {
    sub_1000E6AE4(v7);
  }
  uint64_t v8 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E938) {
    sub_1000E6AE4(v8);
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E940) {
    sub_1000E6AE4(v9);
  }
  uint64_t v10 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E948) {
    sub_1000E6AE4(v10);
  }
  uint64_t v11 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E950) {
    sub_1000E6AE4(v11);
  }
  uint64_t v12 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E958) {
    sub_1000E6AE4(v12);
  }
  uint64_t v13 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E960) {
    sub_1000E6AE4(v13);
  }
  uint64_t v14 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E968) {
    sub_1000E6AE4(v14);
  }
  uint64_t v15 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E970) {
    sub_1000E6AE4(v15);
  }
  uint64_t v16 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E978) {
    sub_1000E6AE4(v16);
  }
  uint64_t v17 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E980) {
    sub_1000E6AE4(v17);
  }
  uint64_t v18 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E988) {
    sub_1000E6AE4(v18);
  }
  uint64_t v19 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E990) {
    sub_1000E6AE4(v19);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_1000E82C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_1000E82DC(void *a1)
{
  *a1 = off_100454C78;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_1000E8328(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E833C(uint64_t a1)
{
  *(void *)a1 = off_100455098;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 88) = 0xFFFFFFFFLL;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_DWORD *)(a1 + 96) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 64) = 0;
  return a1;
}

void sub_1000E83A8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E83BC(uint64_t a1)
{
  *(void *)a1 = off_1004554B8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(_OWORD *)(a1 + 40) = xmmword_1003E7560;
  return a1;
}

void sub_1000E8414(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void *sub_1000E8428(void *a1)
{
  *a1 = off_100455568;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_1000E8474(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E8488(uint64_t a1)
{
  *(void *)a1 = off_100455828;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_DWORD *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_1000E84DC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

BOOL sub_1000E84F0(int a1)
{
  return (a1 + 1) < 4;
}

uint64_t sub_1000E8500(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((*(unsigned char *)(a2 + 44) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    uint64_t v8 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(void *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 44) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 44) |= 1u;
  *(void *)(a1 + 16) = v7;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
LABEL_7:
    uint64_t v5 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(void *)(a1 + 32) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000E85E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E85F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E8608(uint64_t a1)
{
  *(void *)a1 = off_100454B18;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000E865C(uint64_t a1)
{
  *(void *)a1 = off_100454B18;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000E86C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1000E86CC()
{
}

void sub_1000E8730()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000E8758(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1000E877C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacunsigned int k = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_28;
        }
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_19;
        }
      }
      if (v9 == 2) {
        break;
      }
      if (v9 == 3)
      {
        int v10 = TagFallback & 7;
        if (v10 == 1)
        {
          unint64_t v14 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
            return 0;
          }
          goto LABEL_23;
        }
      }
      else
      {
        int v10 = TagFallback & 7;
      }
LABEL_28:
      if (v10 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v10 = TagFallback & 7;
    if (v10 != 1) {
      goto LABEL_28;
    }
LABEL_19:
    unint64_t v14 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 24) = v14;
    *(_DWORD *)(a1 + 44) |= 2u;
    uint64_t v12 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v12 < *((void *)this + 2) && *v12 == 25)
    {
      *((void *)this + 1) = v12 + 1;
      unint64_t v14 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
        return 0;
      }
LABEL_23:
      *(void *)(a1 + 32) = v14;
      *(_DWORD *)(a1 + 44) |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1000E8988(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 44);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    int v5 = *(_DWORD *)(v4 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  if ((*(_DWORD *)(v4 + 44) & 4) == 0)
  {
LABEL_4:
    uint64_t v8 = *(void **)(v4 + 8);
    uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    unsigned int v6 = v8;
    if (!v8) {
      return result;
    }
    goto LABEL_9;
  }
LABEL_8:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
  unsigned int v9 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_9:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_1000E8A40(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 44);
  if (v3)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v7;
    a2 += 9;
    int v3 = *(_DWORD *)(a1 + 44);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t v9 = *(void *)(a1 + 32);
      *(unsigned char *)a2 = 25;
      *(void *)(a2 + 1) = v9;
      a2 += 9;
      int v10 = *(void **)(a1 + 8);
      uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v5 = v10;
      if (!v10) {
        return a2;
      }
      goto LABEL_9;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(a1 + 24);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v8;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 44) & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  unsigned int v6 = *(void **)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_9:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_1000E8B70(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 44);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if ((v3 & 4) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 44)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

uint64_t sub_1000E8BE4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000E8500((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000E8CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E8CD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E8CEC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000E8D78()
{
  return 1;
}

uint64_t sub_1000E8D80()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E5F58;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D548;
}

void sub_1000E8E10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E8E24(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = *(_DWORD *)(a1 + 24);
    int v6 = *(_DWORD *)(a1 + 28);
    int v7 = v5 + v4;
    if (v6 < v7)
    {
      int v8 = 2 * v6;
      if (2 * v6 <= v7) {
        int v8 = v7;
      }
      if (v8 <= 4) {
        int v8 = 4;
      }
      *(_DWORD *)(a1 + 28) = v8;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 16) + 4 * v5), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000E8F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E8F74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E8F88(void *a1)
{
  *a1 = off_100454BC8;
  if (a1[2]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000E8FFC(void *a1)
{
  *a1 = off_100454BC8;
  if (a1[2]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000E9084(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_1000E908C()
{
}

void sub_1000E90F0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000E9118(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1000E9130(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (uint64_t *)(a1 + 16);
  unsigned int v7 = a1 + 8;
  do
  {
    while (1)
    {
      int v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacunsigned int k = *v8;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v8 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      int v10 = TagFallback & 7;
      if ((TagFallback & 0xFFFFFFF8) == 8) {
        break;
      }
LABEL_10:
      if (v10 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
    }
      }
    if (v10 != 2)
    {
      if (v10 != 5) {
        goto LABEL_10;
      }
      goto LABEL_15;
    }
    uint64_t result = sub_1000E93D0(this, v6);
    if (!result) {
      return result;
    }
    while (1)
    {
      BOOL v26 = (unsigned char *)*((void *)this + 1);
      int v27 = (unsigned char *)*((void *)this + 2);
      if (v26 >= v27 || *v26 != 13) {
        break;
      }
      *((void *)this + 1) = v26 + 1;
LABEL_15:
      unsigned int v28 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v28) & 1) == 0) {
        return 0;
      }
      unsigned int v12 = v28;
      int v13 = *(_DWORD *)(a1 + 24);
      uint64_t v14 = *(void *)(a1 + 16);
      if (v13 == *(_DWORD *)(a1 + 28))
      {
        if (2 * v13 <= v13 + 1) {
          int v15 = v13 + 1;
        }
        else {
          int v15 = 2 * v13;
        }
        if (v15 <= 4) {
          int v15 = 4;
        }
        *(_DWORD *)(a1 + 28) = v15;
        operator new[]();
      }
      int v16 = v13 + 1;
      *(_DWORD *)(a1 + 24) = v13 + 1;
      *(_DWORD *)(v14 + 4 * v13) = v12;
      uint64_t v17 = *((void *)this + 1);
      int v18 = *((_DWORD *)this + 4) - v17;
      if (v18 >= 1)
      {
        signed int v19 = *(_DWORD *)(a1 + 28) - v16;
        signed int v20 = v18 / 5u;
        if ((int)(v18 / 5u) >= v19) {
          signed int v20 = *(_DWORD *)(a1 + 28) - v16;
        }
        if (v20 >= 1)
        {
          uint64_t v21 = 0;
          int v22 = v13 + 2;
          uint64_t v23 = v14 + 4 * v16;
          uint64_t v24 = ((*((_DWORD *)this + 4) - v17) * (unsigned __int128)0x3333333333333334uLL) >> 64;
          if (v24 >= v19) {
            LODWORD(v24) = v19;
          }
          while (*(unsigned char *)v17 == 13)
          {
            int v25 = *(_DWORD *)(v17 + 1);
            *(_DWORD *)(a1 + 24) = v22 + v21;
            *(_DWORD *)(v23 + 4 * v21++) = v25;
            v17 += 5;
            if (v24 == v21) {
              goto LABEL_31;
            }
          }
          signed int v20 = v21;
          if (v21)
          {
LABEL_31:
            wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v20);
            continue;
          }
        }
      }
    }
  }
  while (v26 != v27 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1000E93D0(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t *a2)
{
  unsigned int v12 = 0;
  int v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
    if (!result) {
      return result;
    }
    unsigned int v5 = v12;
  }
  else
  {
    unsigned int v5 = *v4;
    unsigned int v12 = v5;
    *((void *)this + 1) = v4 + 1;
  }
  int v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) < 1)
  {
LABEL_17:
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
    return 1;
  }
  else
  {
    while (1)
    {
      unsigned int v13 = 0;
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v13);
      if (!result) {
        break;
      }
      unsigned int v9 = v13;
      int v10 = *((_DWORD *)a2 + 2);
      if (v10 == *((_DWORD *)a2 + 3))
      {
        if (2 * v10 <= v10 + 1) {
          int v11 = v10 + 1;
        }
        else {
          int v11 = 2 * v10;
        }
        if (v11 <= 4) {
          int v11 = 4;
        }
        *((_DWORD *)a2 + 3) = v11;
        operator new[]();
      }
      uint64_t v8 = *a2;
      *((_DWORD *)a2 + 2) = v10 + 1;
      *(_DWORD *)(v8 + 4 * v10) = v9;
      if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) <= 0) {
        goto LABEL_17;
      }
    }
  }
  return result;
}

uint64_t sub_1000E9544(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(*(void *)(v4 + 16) + 4 * v5++), a3);
    while (v5 < *(int *)(v4 + 24));
  }
  uint64_t v8 = *(void **)(v4 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_1000E95E0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  if (*(int *)(a1 + 24) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 16) + 4 * v3);
      *(unsigned char *)a2 = 13;
      *(_DWORD *)(a2 + 1) = v4;
      a2 += 5;
      ++v3;
    }
    while (v3 < *(int *)(a1 + 24));
  }
  int v7 = *(void **)(a1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_1000E9650(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v5 = *(void **)(a1 + 8);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v4 = v5;
  uint64_t v6 = (5 * *((_DWORD *)v3 + 4));
  if (v5 && *v4 != v4[1]) {
    uint64_t v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v3, a2)
  }
       + v6;
  *(_DWORD *)(a1 + 32) = v6;
  return v6;
}

uint64_t sub_1000E969C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000E8E24((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000E977C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E9790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E97A4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000E9830()
{
  return 1;
}

uint64_t sub_1000E9838()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E5F58;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D558;
}

void sub_1000E98C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000E98DC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = *(_DWORD *)(a1 + 24);
    int v6 = *(_DWORD *)(a1 + 28);
    int v7 = v5 + v4;
    if (v6 < v7)
    {
      int v8 = 2 * v6;
      if (2 * v6 <= v7) {
        int v8 = v7;
      }
      if (v8 <= 4) {
        int v8 = 4;
      }
      *(_DWORD *)(a1 + 28) = v8;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 16) + 8 * v5), *(const void **)(a2 + 16), 8 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000E9A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E9A2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000E9A40(void *a1)
{
  *a1 = off_100454C78;
  if (a1[2]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000E9AB4(void *a1)
{
  *a1 = off_100454C78;
  if (a1[2]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000E9B3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

uint64_t sub_1000E9B44(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047E908;
  if (!qword_10047E908)
  {
    sub_1000E6AE4(0, a2, a3, a4);
    return qword_10047E908;
  }
  return result;
}

void sub_1000E9B80()
{
}

void sub_1000E9BE4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000E9C0C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1000E9C24(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (uint64_t *)(a1 + 16);
  unsigned int v7 = a1 + 8;
  while (1)
  {
LABEL_2:
    int v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacunsigned int k = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    int v10 = TagFallback & 7;
    if ((TagFallback & 0xFFFFFFF8) == 8)
    {
      if (v10 == 1)
      {
        while (1)
        {
          unint64_t v28 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v28) & 1) == 0) {
            return 0;
          }
          unint64_t v12 = v28;
          int v13 = *(_DWORD *)(a1 + 24);
          uint64_t v14 = *(void *)(a1 + 16);
          if (v13 == *(_DWORD *)(a1 + 28))
          {
            if (2 * v13 <= v13 + 1) {
              int v15 = v13 + 1;
            }
            else {
              int v15 = 2 * v13;
            }
            if (v15 <= 4) {
              int v15 = 4;
            }
            *(_DWORD *)(a1 + 28) = v15;
            operator new[]();
          }
          int v16 = v13 + 1;
          *(_DWORD *)(a1 + 24) = v13 + 1;
          *(void *)(v14 + 8 * v13) = v12;
          uint64_t v17 = *((void *)this + 1);
          int v18 = *((_DWORD *)this + 4) - v17;
          if (v18 >= 1)
          {
            signed int v19 = *(_DWORD *)(a1 + 28) - v16;
            signed int v20 = v18 / 9u;
            if ((int)(v18 / 9u) >= v19) {
              signed int v20 = *(_DWORD *)(a1 + 28) - v16;
            }
            if (v20 >= 1)
            {
              uint64_t v21 = 0;
              int v22 = v13 + 2;
              uint64_t v23 = v14 + 8 * v16;
              uint64_t v24 = ((*((_DWORD *)this + 4) - v17) * (unsigned __int128)0x1C71C71C71C71C72uLL) >> 64;
              if (v24 >= v19) {
                LODWORD(v24) = v19;
              }
              while (*(unsigned char *)v17 == 9)
              {
                uint64_t v25 = *(void *)(v17 + 1);
                *(_DWORD *)(a1 + 24) = v22 + v21;
                *(void *)(v23 + 8 * v21++) = v25;
                v17 += 9;
                if (v24 == v21) {
                  goto LABEL_31;
                }
              }
              signed int v20 = v21;
              if (v21) {
LABEL_31:
              }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v20);
            }
          }
LABEL_32:
          BOOL v26 = (unsigned char *)*((void *)this + 1);
          int v27 = (unsigned char *)*((void *)this + 2);
          if (v26 >= v27 || *v26 != 9)
          {
            if (v26 == v27 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
            goto LABEL_2;
          }
          *((void *)this + 1) = v26 + 1;
        }
      }
      if (v10 == 2) {
        break;
      }
    }
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
  uint64_t result = sub_1000E9ECC(this, v6);
  if (result) {
    goto LABEL_32;
  }
  return result;
}

uint64_t sub_1000E9ECC(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t *a2)
{
  unsigned int v12 = 0;
  int v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
    if (!result) {
      return result;
    }
    unsigned int v5 = v12;
  }
  else
  {
    unsigned int v5 = *v4;
    unsigned int v12 = v5;
    *((void *)this + 1) = v4 + 1;
  }
  int v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) < 1)
  {
LABEL_17:
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
    return 1;
  }
  else
  {
    while (1)
    {
      unint64_t v13 = 0;
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v13);
      if (!result) {
        break;
      }
      unint64_t v9 = v13;
      int v10 = *((_DWORD *)a2 + 2);
      if (v10 == *((_DWORD *)a2 + 3))
      {
        if (2 * v10 <= v10 + 1) {
          int v11 = v10 + 1;
        }
        else {
          int v11 = 2 * v10;
        }
        if (v11 <= 4) {
          int v11 = 4;
        }
        *((_DWORD *)a2 + 3) = v11;
        operator new[]();
      }
      uint64_t v8 = *a2;
      *((_DWORD *)a2 + 2) = v10 + 1;
      *(void *)(v8 + 8 * v10) = v9;
      if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) <= 0) {
        goto LABEL_17;
      }
    }
  }
  return result;
}

uint64_t sub_1000EA040(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(*(void *)(v4 + 16) + 8 * v5++), a3);
    while (v5 < *(int *)(v4 + 24));
  }
  uint64_t v8 = *(void **)(v4 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_1000EA0DC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  if (*(int *)(a1 + 24) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v3);
      *(unsigned char *)a2 = 9;
      *(void *)(a2 + 1) = v4;
      a2 += 9;
      ++v3;
    }
    while (v3 < *(int *)(a1 + 24));
  }
  int v7 = *(void **)(a1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_1000EA16C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v5 = *(void **)(a1 + 8);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v4 = v5;
  uint64_t v6 = (9 * *((_DWORD *)v3 + 4));
  if (v5 && *v4 != v4[1]) {
    uint64_t v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v3, a2)
  }
       + v6;
  *(_DWORD *)(a1 + 32) = v6;
  return v6;
}

uint64_t sub_1000EA1B8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000E98DC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000EA298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000EA2AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000EA2C0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000EA34C()
{
  return 1;
}

uint64_t sub_1000EA354()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E5F58;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D568;
}

void sub_1000EA3E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000EA3F8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  sub_1000FC0A8((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), a2 + 16);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000EA480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000EA494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000EA4A8(uint64_t a1)
{
  *(void *)a1 = off_100454D28;
  int v2 = *(_DWORD *)(a1 + 28);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *(_DWORD *)(a1 + 28);
      }
    }
  }
  if (*(void *)(a1 + 16)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000EA574(uint64_t a1)
{
  *(void *)a1 = off_100454D28;
  int v2 = *(_DWORD *)(a1 + 28);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *(_DWORD *)(a1 + 28);
      }
    }
  }
  if (*(void *)(a1 + 16)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000EA654(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1000EA65C()
{
}

void sub_1000EA6C4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000EA6EC(uint64_t this)
{
  uint64_t v1 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t v3 = *(void *)(*(void *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 4) = 0;
  *((_DWORD *)v4 + 9) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_1000EA788(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  unsigned int v7 = a1 + 8;
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (TagFallback == 10) {
        goto LABEL_12;
      }
    }
    else
    {
      TagFallbacunsigned int k = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (TagFallback == 10)
      {
        while (1)
        {
LABEL_12:
          int v10 = a1[7];
          uint64_t v11 = a1[6];
          if ((int)v11 >= v10)
          {
            if (v10 == a1[8])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v10 + 1);
              int v10 = a1[7];
            }
            a1[7] = v10 + 1;
            operator new();
          }
          uint64_t v12 = *((void *)a1 + 2);
          a1[6] = v11 + 1;
          uint64_t v13 = *(void *)(v12 + 8 * v11);
          unsigned int v26 = 0;
          uint64_t v14 = (char *)*((void *)this + 1);
          if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26))return 0; {
          }
            }
          else
          {
            unsigned int v26 = *v14;
            *((void *)this + 1) = v14 + 1;
          }
          int v15 = *((_DWORD *)this + 14);
          int v16 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v15 + 1;
          if (v15 >= v16) {
            return 0;
          }
          int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
          if (!sub_1000E9130(v13, this, v18, v19) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
          int v20 = *((_DWORD *)this + 14);
          BOOL v21 = __OFSUB__(v20, 1);
          int v22 = v20 - 1;
          if (v22 < 0 == v21) {
            *((_DWORD *)this + 14) = v22;
          }
          uint64_t v23 = (unsigned char *)*((void *)this + 1);
          uint64_t v24 = (unsigned char *)*((void *)this + 2);
          if (v23 >= v24 || *v23 != 10)
          {
            if (v23 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
            goto LABEL_2;
          }
          *((void *)this + 1) = v23 + 1;
        }
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_1000EA9F0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000EAA18(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  unint64_t v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000EAAB4(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((int *)this + 6) >= 1)
  {
    for (uint64_t i = 0; i < *((int *)this + 6); ++i)
    {
      uint64_t v6 = *(void *)(*((void *)this + 2) + 8 * i);
      *(unsigned char *)a2 = 10;
      unsigned int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 32);
      if (v7 > 0x7F)
      {
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)a2 + 1, a3);
        if (*(int *)(v6 + 24) >= 1)
        {
LABEL_8:
          uint64_t v8 = 0;
          do
          {
            int v9 = *(_DWORD *)(*(void *)(v6 + 16) + 4 * v8);
            *(unsigned char *)a2 = 13;
            *(_DWORD *)((char *)a2 + 1) = v9;
            a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 5);
            ++v8;
          }
          while (v8 < *(int *)(v6 + 24));
        }
      }
      else
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v7;
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        if (*(int *)(v6 + 24) >= 1) {
          goto LABEL_8;
        }
      }
      uint64_t v12 = *(void **)(v6 + 8);
      uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v6 + 8);
      int v10 = v12;
      if (v12 && *v10 != v10[1]) {
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v11, a2, a3);
      }
    }
  }
  int v15 = (void *)*((void *)this + 1);
  uint64_t v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, a2, a3);
}

uint64_t sub_1000EAC08(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 24);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v6 = *(_DWORD **)(*(void *)(a1 + 16) + 8 * v4);
      unint64_t v7 = (5 * v6[6]);
      uint64_t v8 = (void *)*((void *)v6 + 1);
      if (v8 && *v8 != v8[1]) {
        unint64_t v7 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v6 + 2), a2)+ v7;
      }
      v6[8] = v7;
      if (v7 >= 0x80) {
        int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7, a2);
      }
      else {
        int v5 = 1;
      }
      uint64_t v3 = (v7 + v3 + v5);
      ++v4;
    }
    while (v4 < *(int *)(a1 + 24));
  }
  int v9 = *(void **)(a1 + 8);
  if (v9 && *v9 != v9[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_1000EACD8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000EA3F8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000EADB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000EADCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000EADE0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000EAE6C()
{
  return 1;
}

uint64_t sub_1000EAE74()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E5F58;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D578;
}

void sub_1000EAF04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000EAF18(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  sub_1000FC1EC((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), a2 + 16);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000EAFA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000EAFB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000EAFC8(uint64_t a1)
{
  *(void *)a1 = off_100454DD8;
  int v2 = *(_DWORD *)(a1 + 28);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *(_DWORD *)(a1 + 28);
      }
    }
  }
  if (*(void *)(a1 + 16)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000EB094(uint64_t a1)
{
  *(void *)a1 = off_100454DD8;
  int v2 = *(_DWORD *)(a1 + 28);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *(_DWORD *)(a1 + 28);
      }
    }
  }
  if (*(void *)(a1 + 16)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000EB174(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1000EB17C()
{
}

void sub_1000EB1E4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000EB20C(uint64_t this)
{
  uint64_t v1 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t v3 = *(void *)(*(void *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 4) = 0;
  *((_DWORD *)v4 + 9) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_1000EB2A8(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  unsigned int v7 = a1 + 8;
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (TagFallback == 10) {
        goto LABEL_12;
      }
    }
    else
    {
      TagFallbacunsigned int k = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (TagFallback == 10)
      {
        while (1)
        {
LABEL_12:
          int v10 = a1[7];
          uint64_t v11 = a1[6];
          if ((int)v11 >= v10)
          {
            if (v10 == a1[8])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v10 + 1);
              int v10 = a1[7];
            }
            a1[7] = v10 + 1;
            operator new();
          }
          uint64_t v12 = *((void *)a1 + 2);
          a1[6] = v11 + 1;
          uint64_t v13 = *(void *)(v12 + 8 * v11);
          unsigned int v26 = 0;
          uint64_t v14 = (char *)*((void *)this + 1);
          if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26))return 0; {
          }
            }
          else
          {
            unsigned int v26 = *v14;
            *((void *)this + 1) = v14 + 1;
          }
          int v15 = *((_DWORD *)this + 14);
          int v16 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v15 + 1;
          if (v15 >= v16) {
            return 0;
          }
          int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
          if (!sub_1000E9C24(v13, this, v18, v19) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
          int v20 = *((_DWORD *)this + 14);
          BOOL v21 = __OFSUB__(v20, 1);
          int v22 = v20 - 1;
          if (v22 < 0 == v21) {
            *((_DWORD *)this + 14) = v22;
          }
          uint64_t v23 = (unsigned char *)*((void *)this + 1);
          uint64_t v24 = (unsigned char *)*((void *)this + 2);
          if (v23 >= v24 || *v23 != 10)
          {
            if (v23 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
            goto LABEL_2;
          }
          *((void *)this + 1) = v23 + 1;
        }
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_1000EB510()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000EB538(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000EB5D4(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((int *)this + 6) >= 1)
  {
    for (uint64_t i = 0; i < *((int *)this + 6); ++i)
    {
      uint64_t v6 = *(void *)(*((void *)this + 2) + 8 * i);
      *(unsigned char *)a2 = 10;
      unsigned int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 32);
      if (v7 > 0x7F)
      {
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)a2 + 1, a3);
        if (*(int *)(v6 + 24) >= 1)
        {
LABEL_8:
          uint64_t v8 = 0;
          do
          {
            uint64_t v9 = *(void *)(*(void *)(v6 + 16) + 8 * v8);
            *(unsigned char *)a2 = 9;
            *(void *)((char *)a2 + 1) = v9;
            a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
            ++v8;
          }
          while (v8 < *(int *)(v6 + 24));
        }
      }
      else
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v7;
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        if (*(int *)(v6 + 24) >= 1) {
          goto LABEL_8;
        }
      }
      uint64_t v12 = *(void **)(v6 + 8);
      uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v6 + 8);
      int v10 = v12;
      if (v12 && *v10 != v10[1]) {
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v11, a2, a3);
      }
    }
  }
  int v15 = (void *)*((void *)this + 1);
  uint64_t v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, a2, a3);
}

uint64_t sub_1000EB748(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 24);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v6 = *(_DWORD **)(*(void *)(a1 + 16) + 8 * v4);
      unint64_t v7 = (9 * v6[6]);
      uint64_t v8 = (void *)*((void *)v6 + 1);
      if (v8 && *v8 != v8[1]) {
        unint64_t v7 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v6 + 2), a2)+ v7;
      }
      v6[8] = v7;
      if (v7 >= 0x80) {
        int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7, a2);
      }
      else {
        int v5 = 1;
      }
      uint64_t v3 = (v7 + v3 + v5);
      ++v4;
    }
    while (v4 < *(int *)(a1 + 24));
  }
  uint64_t v9 = *(void **)(a1 + 8);
  if (v9 && *v9 != v9[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_1000EB818(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000EAF18((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000EB8F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000EB90C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000EB920(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000EB9AC()
{
  return 1;
}

uint64_t sub_1000EB9B4()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E5F58;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D588;
}

void sub_1000EBA44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000EBA58(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(void *)(a1 + 24) = v6;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000EBB10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000EBB24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000EBB38(uint64_t a1)
{
  *(void *)a1 = off_100454E88;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000EBB8C(uint64_t a1)
{
  *(void *)a1 = off_100454E88;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000EBBF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_1000EBBFC()
{
}

void sub_1000EBC60()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000EBC88(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 36))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1000EBCA8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      unint64_t v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacunsigned int k = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v9 = TagFallback & 7;
        if (v9 == 1)
        {
          unint64_t v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
            return 0;
          }
          goto LABEL_17;
        }
      }
      else
      {
        int v9 = TagFallback & 7;
      }
LABEL_22:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v9 = TagFallback & 7;
    if (v9 != 1) {
      goto LABEL_22;
    }
    unint64_t v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 16) = v12;
    *(_DWORD *)(a1 + 36) |= 1u;
    int v10 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 17)
    {
      *((void *)this + 1) = v10 + 1;
      unint64_t v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
        return 0;
      }
LABEL_17:
      *(void *)(a1 + 24) = v12;
      *(_DWORD *)(a1 + 36) |= 2u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1000EBE54(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 36);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 2) == 0)
    {
LABEL_3:
      uint64_t v8 = *(void **)(v4 + 8);
      unint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      unsigned int v6 = v8;
      if (!v8) {
        return result;
      }
      goto LABEL_7;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  int v9 = *(void **)(v4 + 8);
  unint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_7:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_1000EBEF0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = *(void *)(a1 + 24);
    *(unsigned char *)a2 = 17;
    *(void *)(a2 + 1) = v8;
    a2 += 9;
    int v9 = *(void **)(a1 + 8);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v5 = v9;
    if (!v9) {
      return a2;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  *(unsigned char *)a2 = 9;
  *(void *)(a2 + 1) = v7;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 36) & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  unsigned int v6 = *(void **)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_7:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_1000EBFC8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 36);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 36)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

uint64_t sub_1000EC030(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000EBA58((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000EC110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000EC124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000EC138(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000EC1C4()
{
  return 1;
}

uint64_t sub_1000EC1CC()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E5F58;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D598;
}

void sub_1000EC25C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000EC270(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  int v4 = *(_DWORD *)(a2 + 72);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v8 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 72) |= 1u;
    *(void *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v9 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 72) |= 2u;
  *(_DWORD *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v10 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 72) |= 4u;
  *(_DWORD *)(a1 + 28) = v10;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v11 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 72) |= 8u;
  *(_DWORD *)(a1 + 32) = v11;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_25:
    int v13 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 72) |= 0x20u;
    *(_DWORD *)(a1 + 40) = v13;
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_24:
  int v12 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 72) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v12;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x20) != 0) {
    goto LABEL_25;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_26:
  int v14 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 72) |= 0x40u;
  *(_DWORD *)(a1 + 44) = v14;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 72) |= 0x80u;
    *(_DWORD *)(a1 + 48) = v5;
    int v4 = *(_DWORD *)(a2 + 72);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 0x100) != 0)
  {
    int v15 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 72) |= 0x100u;
    *(_DWORD *)(a1 + 52) = v15;
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
LABEL_30:
      int v17 = *(_DWORD *)(a2 + 60);
      *(_DWORD *)(a1 + 72) |= 0x400u;
      *(_DWORD *)(a1 + 60) = v17;
      if ((*(_DWORD *)(a2 + 72) & 0x800) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v16 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) |= 0x200u;
  *(_DWORD *)(a1 + ++*(_DWORD *)(result + 56) = v16;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x400) != 0) {
    goto LABEL_30;
  }
LABEL_17:
  if ((v4 & 0x800) != 0)
  {
LABEL_18:
    int v6 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 72) |= 0x800u;
    *(_DWORD *)(a1 + 64) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000EC47C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000EC490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000EC4A4(uint64_t a1)
{
  *(void *)a1 = off_100454F38;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000EC4F8(uint64_t a1)
{
  *(void *)a1 = off_100454F38;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000EC560(uint64_t result, int a2)
{
  *(_DWORD *)(result + 68) = a2;
  return result;
}

void sub_1000EC568()
{
}

void sub_1000EC5D4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000EC5FC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 72);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(a1 + 60) = 0;
    *(void *)(a1 + 52) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 16) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1000EC638(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  float v45 = (unint64_t *)(a1 + 16);
  uint64_t v46 = (unsigned int *)(a1 + 24);
  int v47 = (unsigned int *)(a1 + 28);
  int v48 = (unsigned int *)(a1 + 32);
  int v49 = (unsigned int *)(a1 + 36);
  int v6 = (unsigned int *)(a1 + 40);
  uint64_t v7 = (unsigned int *)(a1 + 44);
  uint64_t v8 = (unsigned int *)(a1 + 48);
  int v9 = (unsigned int *)(a1 + 52);
  int v10 = (unsigned int *)(a1 + 56);
  int v11 = (unsigned int *)(a1 + 60);
  int v12 = (unsigned int *)(a1 + 64);
  unsigned int v13 = a1 + 8;
  while (1)
  {
    int v14 = (char *)*((void *)this + 1);
    if ((unint64_t)v14 < *((void *)this + 2) && (*v14 & 0x80000000) == 0)
    {
      TagFallbacunsigned int k = *v14;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v14 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v45);
          if (!result) {
            return result;
          }
          signed int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 1u;
          if ((unint64_t)v19 >= v17) {
            continue;
          }
        }
        else
        {
          *float v45 = *v18;
          signed int v19 = v18 + 1;
          *((void *)this + 1) = v19;
          *(_DWORD *)(a1 + 72) |= 1u;
          if ((unint64_t)v19 >= v17) {
            continue;
          }
        }
        if (*v19 != 16) {
          continue;
        }
        int v20 = v19 + 1;
        *((void *)this + 1) = v20;
        if ((unint64_t)v20 >= v17) {
          goto LABEL_51;
        }
        goto LABEL_48;
      case 2u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v20 >= v17) {
          goto LABEL_51;
        }
LABEL_48:
        if (*v20 < 0)
        {
LABEL_51:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46);
          if (!result) {
            return result;
          }
          int v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 2u;
          if ((unint64_t)v31 >= v17) {
            continue;
          }
        }
        else
        {
          unsigned int *v46 = *v20;
          int v31 = v20 + 1;
          *((void *)this + 1) = v31;
          *(_DWORD *)(a1 + 72) |= 2u;
          if ((unint64_t)v31 >= v17) {
            continue;
          }
        }
        if (*v31 != 24) {
          continue;
        }
        BOOL v21 = v31 + 1;
        *((void *)this + 1) = v21;
        if ((unint64_t)v21 >= v17) {
          goto LABEL_58;
        }
LABEL_55:
        if (*v21 < 0)
        {
LABEL_58:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v47);
          if (!result) {
            return result;
          }
          uint64_t v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 4u;
          if ((unint64_t)v32 >= v17) {
            continue;
          }
        }
        else
        {
          *int v47 = *v21;
          uint64_t v32 = v21 + 1;
          *((void *)this + 1) = v32;
          *(_DWORD *)(a1 + 72) |= 4u;
          if ((unint64_t)v32 >= v17) {
            continue;
          }
        }
        if (*v32 != 32) {
          continue;
        }
        int v22 = v32 + 1;
        *((void *)this + 1) = v22;
        if ((unint64_t)v22 >= v17) {
          goto LABEL_65;
        }
LABEL_62:
        if (*v22 < 0)
        {
LABEL_65:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v48);
          if (!result) {
            return result;
          }
          unint64_t v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 8u;
          if ((unint64_t)v33 >= v17) {
            continue;
          }
        }
        else
        {
          *int v48 = *v22;
          unint64_t v33 = v22 + 1;
          *((void *)this + 1) = v33;
          *(_DWORD *)(a1 + 72) |= 8u;
          if ((unint64_t)v33 >= v17) {
            continue;
          }
        }
        if (*v33 != 40) {
          continue;
        }
        uint64_t v23 = v33 + 1;
        *((void *)this + 1) = v23;
        if ((unint64_t)v23 >= v17) {
          goto LABEL_72;
        }
LABEL_69:
        if (*v23 < 0)
        {
LABEL_72:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v49);
          if (!result) {
            return result;
          }
          int v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 0x10u;
          if ((unint64_t)v34 >= v17) {
            continue;
          }
        }
        else
        {
          *int v49 = *v23;
          int v34 = v23 + 1;
          *((void *)this + 1) = v34;
          *(_DWORD *)(a1 + 72) |= 0x10u;
          if ((unint64_t)v34 >= v17) {
            continue;
          }
        }
        if (*v34 != 48) {
          continue;
        }
        uint64_t v24 = v34 + 1;
        *((void *)this + 1) = v24;
        if ((unint64_t)v24 >= v17) {
          goto LABEL_79;
        }
LABEL_76:
        if (*v24 < 0)
        {
LABEL_79:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 0x20u;
          if ((unint64_t)v35 >= v17) {
            continue;
          }
        }
        else
        {
          unsigned int *v6 = *v24;
          int v35 = v24 + 1;
          *((void *)this + 1) = v35;
          *(_DWORD *)(a1 + 72) |= 0x20u;
          if ((unint64_t)v35 >= v17) {
            continue;
          }
        }
        if (*v35 != 56) {
          continue;
        }
        uint64_t v25 = v35 + 1;
        *((void *)this + 1) = v25;
LABEL_83:
        if ((unint64_t)v25 >= v17 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unint64_t v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 0x40u;
          if ((unint64_t)v36 >= v17) {
            continue;
          }
        }
        else
        {
          unsigned int *v7 = *v25;
          unint64_t v36 = v25 + 1;
          *((void *)this + 1) = v36;
          *(_DWORD *)(a1 + 72) |= 0x40u;
          if ((unint64_t)v36 >= v17) {
            continue;
          }
        }
        if (*v36 != 64) {
          continue;
        }
        unsigned int v26 = v36 + 1;
        *((void *)this + 1) = v26;
LABEL_91:
        if ((unint64_t)v26 >= v17 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          uint8x8_t v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 0x80u;
          if ((unint64_t)v37 >= v17) {
            continue;
          }
        }
        else
        {
          unsigned int *v8 = *v26;
          uint8x8_t v37 = v26 + 1;
          *((void *)this + 1) = v37;
          *(_DWORD *)(a1 + 72) |= 0x80u;
          if ((unint64_t)v37 >= v17) {
            continue;
          }
        }
        if (*v37 != 72) {
          continue;
        }
        int v27 = v37 + 1;
        *((void *)this + 1) = v27;
LABEL_99:
        if ((unint64_t)v27 >= v17 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          int v38 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 0x100u;
          if ((unint64_t)v38 >= v17) {
            continue;
          }
        }
        else
        {
          *int v9 = *v27;
          int v38 = v27 + 1;
          *((void *)this + 1) = v38;
          *(_DWORD *)(a1 + 72) |= 0x100u;
          if ((unint64_t)v38 >= v17) {
            continue;
          }
        }
        if (*v38 != 80) {
          continue;
        }
        unint64_t v28 = v38 + 1;
        *((void *)this + 1) = v28;
LABEL_107:
        if ((unint64_t)v28 >= v17 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          int v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 0x200u;
          if ((unint64_t)v39 >= v17) {
            continue;
          }
        }
        else
        {
          *int v10 = *v28;
          int v39 = v28 + 1;
          *((void *)this + 1) = v39;
          *(_DWORD *)(a1 + 72) |= 0x200u;
          if ((unint64_t)v39 >= v17) {
            continue;
          }
        }
        if (*v39 != 88) {
          continue;
        }
        int v29 = v39 + 1;
        *((void *)this + 1) = v29;
LABEL_115:
        if ((unint64_t)v29 >= v17 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          int v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 0x400u;
          if ((unint64_t)v40 >= v17) {
            continue;
          }
        }
        else
        {
          *int v11 = *v29;
          int v40 = v29 + 1;
          *((void *)this + 1) = v40;
          *(_DWORD *)(a1 + 72) |= 0x400u;
          if ((unint64_t)v40 >= v17) {
            continue;
          }
        }
        if (*v40 != 96) {
          continue;
        }
        int v30 = v40 + 1;
        *((void *)this + 1) = v30;
LABEL_123:
        if ((unint64_t)v30 >= v17 || *v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v12);
          if (!result) {
            return result;
          }
          uint64_t v43 = *((void *)this + 1);
          uint64_t v42 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 0x800u;
          if (v43 != v42) {
            continue;
          }
        }
        else
        {
          *int v12 = *v30;
          uint64_t v41 = (unsigned __int8 *)(v30 + 1);
          *((void *)this + 1) = v41;
          *(_DWORD *)(a1 + 72) |= 0x800u;
          if (v41 != (unsigned __int8 *)v17) {
            continue;
          }
        }
        if (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        BOOL v21 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v21 >= v17) {
          goto LABEL_58;
        }
        goto LABEL_55;
      case 4u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v22 >= v17) {
          goto LABEL_65;
        }
        goto LABEL_62;
      case 5u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        uint64_t v23 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v23 >= v17) {
          goto LABEL_72;
        }
        goto LABEL_69;
      case 6u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        uint64_t v24 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v24 >= v17) {
          goto LABEL_79;
        }
        goto LABEL_76;
      case 7u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        uint64_t v25 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_83;
      case 8u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        unsigned int v26 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_91;
      case 9u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v27 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_99;
      case 0xAu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        unint64_t v28 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_107;
      case 0xBu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v29 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_115;
      case 0xCu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v30 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_123;
      default:
        int v16 = TagFallback & 7;
LABEL_40:
        if (v16 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v13, a4))continue; {
        return 0;
        }
    }
  }
}

uint64_t sub_1000ECE10(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 72);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 16), (unint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 32), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 36), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 40), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 44), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 48), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 52), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 56), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 60), a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x800) == 0)
  {
LABEL_13:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_DWORD *)(v5 + 64), a2, a4);
  int v10 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_27:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000ECFC4(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 18);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_19:
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(unsigned char *)uint64_t v3 = 16;
    if (v11 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
      if ((*((unsigned char *)this + 72) & 4) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v11;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if ((*((unsigned char *)this + 72) & 4) != 0) {
        goto LABEL_23;
      }
    }
LABEL_4:
    if ((*((unsigned char *)this + 72) & 8) == 0) {
      goto LABEL_5;
    }
LABEL_27:
    unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    *(unsigned char *)uint64_t v3 = 32;
    if (v13 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)v3 + 1, a3);
      if ((*((unsigned char *)this + 72) & 0x10) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v13;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if ((*((unsigned char *)this + 72) & 0x10) != 0) {
        goto LABEL_31;
      }
    }
LABEL_6:
    if ((*((unsigned char *)this + 72) & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_35:
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    *(unsigned char *)uint64_t v3 = 48;
    if (v15 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)v3 + 1, a3);
      if ((*((unsigned char *)this + 72) & 0x40) != 0) {
        goto LABEL_39;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v15;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if ((*((unsigned char *)this + 72) & 0x40) != 0) {
        goto LABEL_39;
      }
    }
LABEL_8:
    if ((*((unsigned char *)this + 72) & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_43:
    unint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    *(unsigned char *)uint64_t v3 = 64;
    if (v17 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)v3 + 1, a3);
      if (*((unsigned char *)this + 73)) {
        goto LABEL_47;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v17;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if (*((unsigned char *)this + 73)) {
        goto LABEL_47;
      }
    }
LABEL_10:
    if ((*((unsigned char *)this + 73) & 2) == 0) {
      goto LABEL_11;
    }
LABEL_51:
    signed int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    *(unsigned char *)uint64_t v3 = 80;
    if (v19 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)v3 + 1, a3);
      if ((*((unsigned char *)this + 73) & 4) != 0) {
        goto LABEL_55;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v19;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if ((*((unsigned char *)this + 73) & 4) != 0) {
        goto LABEL_55;
      }
    }
LABEL_12:
    if ((*((unsigned char *)this + 73) & 8) == 0) {
      goto LABEL_13;
    }
LABEL_59:
    BOOL v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    *(unsigned char *)uint64_t v3 = 96;
    if (v21 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (int)v3 + 1, a3);
      uint64_t v23 = (void *)*((void *)this + 1);
      uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      int v6 = v23;
      if (!v23) {
        return v3;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v21;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      int v22 = (void *)*((void *)this + 1);
      uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      int v6 = v22;
      if (!v22) {
        return v3;
      }
    }
    goto LABEL_14;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
  *(unsigned char *)a2 = 8;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v10, (unint64_t)a2 + 1, a3);
  if ((*((_DWORD *)this + 18) & 2) != 0) {
    goto LABEL_19;
  }
LABEL_3:
  if ((*((unsigned char *)this + 72) & 4) == 0) {
    goto LABEL_4;
  }
LABEL_23:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  *(unsigned char *)uint64_t v3 = 24;
  if (v12 > 0x7F)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v3 + 1, a3);
    if ((*((unsigned char *)this + 72) & 8) != 0) {
      goto LABEL_27;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v12;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((unsigned char *)this + 72) & 8) != 0) {
      goto LABEL_27;
    }
  }
LABEL_5:
  if ((*((unsigned char *)this + 72) & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_31:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  *(unsigned char *)uint64_t v3 = 40;
  if (v14 > 0x7F)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v3 + 1, a3);
    if ((*((unsigned char *)this + 72) & 0x20) != 0) {
      goto LABEL_35;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v14;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((unsigned char *)this + 72) & 0x20) != 0) {
      goto LABEL_35;
    }
  }
LABEL_7:
  if ((*((unsigned char *)this + 72) & 0x40) == 0) {
    goto LABEL_8;
  }
LABEL_39:
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  *(unsigned char *)uint64_t v3 = 56;
  if (v16 > 0x7F)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)v3 + 1, a3);
    if ((*((unsigned char *)this + 72) & 0x80) != 0) {
      goto LABEL_43;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v16;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((unsigned char *)this + 72) & 0x80) != 0) {
      goto LABEL_43;
    }
  }
LABEL_9:
  if ((*((unsigned char *)this + 73) & 1) == 0) {
    goto LABEL_10;
  }
LABEL_47:
  uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  *(unsigned char *)uint64_t v3 = 72;
  if (v18 > 0x7F)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)v3 + 1, a3);
    if ((*((unsigned char *)this + 73) & 2) != 0) {
      goto LABEL_51;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v18;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((unsigned char *)this + 73) & 2) != 0) {
      goto LABEL_51;
    }
  }
LABEL_11:
  if ((*((unsigned char *)this + 73) & 4) == 0) {
    goto LABEL_12;
  }
LABEL_55:
  int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  *(unsigned char *)uint64_t v3 = 88;
  if (v20 > 0x7F)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, (int)v3 + 1, a3);
    if ((*((unsigned char *)this + 73) & 8) != 0) {
      goto LABEL_59;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v20;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((unsigned char *)this + 73) & 8) != 0) {
      goto LABEL_59;
    }
  }
LABEL_13:
  uint64_t v8 = (void *)*((void *)this + 1);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v6 = v8;
  if (!v8) {
    return v3;
  }
LABEL_14:
  if (*v6 == v6[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v7, v3, a3);
}

uint64_t sub_1000ED334(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 72);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    if ((v3 & 0xFF00) == 0) {
      goto LABEL_48;
    }
    goto LABEL_44;
  }
  if (v3)
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 72);
    if ((v3 & 2) == 0) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_12;
    }
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v4 + v6 + 1);
LABEL_12:
  if ((v3 & 4) != 0)
  {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *(_DWORD *)(a1 + 72);
      uint64_t v4 = (v4 + v8 + 1);
      if ((v3 & 8) != 0) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      if ((v3 & 8) != 0) {
        goto LABEL_24;
      }
    }
LABEL_14:
    if ((v3 & 0x10) == 0) {
      goto LABEL_15;
    }
LABEL_28:
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      int v3 = *(_DWORD *)(a1 + 72);
      uint64_t v4 = (v4 + v12 + 1);
      if ((v3 & 0x20) != 0) {
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      if ((v3 & 0x20) != 0) {
        goto LABEL_32;
      }
    }
LABEL_16:
    if ((v3 & 0x40) == 0) {
      goto LABEL_17;
    }
LABEL_36:
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
    if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
      int v3 = *(_DWORD *)(a1 + 72);
      uint64_t v4 = (v16 + 1 + v4);
      if ((v3 & 0x80) != 0) {
        goto LABEL_40;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      if ((v3 & 0x80) != 0) {
        goto LABEL_40;
      }
    }
LABEL_18:
    if ((v3 & 0xFF00) == 0) {
      goto LABEL_48;
    }
LABEL_44:
    if ((v3 & 0x100) == 0)
    {
      if ((v3 & 0x200) == 0) {
        goto LABEL_46;
      }
LABEL_54:
      uint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
      if (v24 >= 0x80)
      {
        int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2);
        int v3 = *(_DWORD *)(a1 + 72);
        uint64_t v4 = (v25 + 1 + v4);
        if ((v3 & 0x400) != 0) {
          goto LABEL_58;
        }
      }
      else
      {
        uint64_t v4 = (v4 + 2);
        if ((v3 & 0x400) != 0) {
          goto LABEL_58;
        }
      }
LABEL_47:
      if ((v3 & 0x800) == 0) {
        goto LABEL_48;
      }
      goto LABEL_62;
    }
    int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
    if (v22 >= 0x80)
    {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
      int v3 = *(_DWORD *)(a1 + 72);
      uint64_t v4 = (v23 + 1 + v4);
      if ((v3 & 0x200) != 0) {
        goto LABEL_54;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      if ((v3 & 0x200) != 0) {
        goto LABEL_54;
      }
    }
LABEL_46:
    if ((v3 & 0x400) == 0) {
      goto LABEL_47;
    }
LABEL_58:
    unsigned int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if (v26 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2)+ 1+ v4;
      if ((*(_DWORD *)(a1 + 72) & 0x800) == 0) {
        goto LABEL_48;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      if ((v3 & 0x800) == 0) {
        goto LABEL_48;
      }
    }
LABEL_62:
    int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if (v27 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2)+ 1+ v4;
      signed int v19 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v20 = *(void **)(a1 + 8);
      if (!v20) {
        goto LABEL_49;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      signed int v19 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v20 = *(void **)(a1 + 8);
      if (!v20) {
        goto LABEL_49;
      }
    }
    goto LABEL_66;
  }
  if ((v3 & 8) == 0) {
    goto LABEL_14;
  }
LABEL_24:
  int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    int v3 = *(_DWORD *)(a1 + 72);
    uint64_t v4 = (v4 + v10 + 1);
    if ((v3 & 0x10) != 0) {
      goto LABEL_28;
    }
  }
  else
  {
    uint64_t v4 = (v4 + 2);
    if ((v3 & 0x10) != 0) {
      goto LABEL_28;
    }
  }
LABEL_15:
  if ((v3 & 0x20) == 0) {
    goto LABEL_16;
  }
LABEL_32:
  unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    int v3 = *(_DWORD *)(a1 + 72);
    uint64_t v4 = (v14 + 1 + v4);
    if ((v3 & 0x40) != 0) {
      goto LABEL_36;
    }
  }
  else
  {
    uint64_t v4 = (v4 + 2);
    if ((v3 & 0x40) != 0) {
      goto LABEL_36;
    }
  }
LABEL_17:
  if ((v3 & 0x80) == 0) {
    goto LABEL_18;
  }
LABEL_40:
  unint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
    int v3 = *(_DWORD *)(a1 + 72);
    uint64_t v4 = (v18 + 1 + v4);
    if ((v3 & 0xFF00) == 0) {
      goto LABEL_48;
    }
    goto LABEL_44;
  }
  uint64_t v4 = (v4 + 2);
  if ((v3 & 0xFF00) != 0) {
    goto LABEL_44;
  }
LABEL_48:
  signed int v19 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v20 = *(void **)(a1 + 8);
  if (!v20)
  {
LABEL_49:
    *(_DWORD *)(a1 + 68) = v4;
    return v4;
  }
LABEL_66:
  if (*v20 == v20[1]) {
    goto LABEL_49;
  }
  uint64_t v28 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v19, a2)
      + v4;
  *(_DWORD *)(a1 + 68) = v28;
  return v28;
}

uint64_t sub_1000ED628(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000EC270((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000ED708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000ED71C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000ED730(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000ED7BC()
{
  return 1;
}

uint64_t sub_1000ED7C4()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E5F58;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D5A8;
}

void sub_1000ED854(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000ED868(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  int v4 = *(_DWORD *)(a2 + 72);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v8 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 72) |= 1u;
    *(void *)(a1 + 16) = v8;
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v9 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 72) |= 2u;
  *(_DWORD *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v10 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 72) |= 4u;
  *(_DWORD *)(a1 + 28) = v10;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v11 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 72) |= 8u;
  *(_DWORD *)(a1 + 32) = v11;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_25:
    int v13 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 72) |= 0x20u;
    *(_DWORD *)(a1 + 40) = v13;
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_24:
  int v12 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 72) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v12;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x20) != 0) {
    goto LABEL_25;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_26:
  int v14 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 72) |= 0x40u;
  *(_DWORD *)(a1 + 44) = v14;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 72) |= 0x80u;
    *(_DWORD *)(a1 + 48) = v5;
    int v4 = *(_DWORD *)(a2 + 72);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 0x100) != 0)
  {
    int v15 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 72) |= 0x100u;
    *(_DWORD *)(a1 + 52) = v15;
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
LABEL_30:
      int v17 = *(_DWORD *)(a2 + 60);
      *(_DWORD *)(a1 + 72) |= 0x400u;
      *(_DWORD *)(a1 + 60) = v17;
      if ((*(_DWORD *)(a2 + 72) & 0x800) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v16 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) |= 0x200u;
  *(_DWORD *)(a1 + ++*(_DWORD *)(result + 56) = v16;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x400) != 0) {
    goto LABEL_30;
  }
LABEL_17:
  if ((v4 & 0x800) != 0)
  {
LABEL_18:
    int v6 = *(_DWORD *)(a2 + 64);
    *(_DWORD *)(a1 + 72) |= 0x800u;
    *(_DWORD *)(a1 + 64) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000EDA74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000EDA88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000EDA9C(uint64_t a1)
{
  *(void *)a1 = off_100454FE8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000EDAF0(uint64_t a1)
{
  *(void *)a1 = off_100454FE8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000EDB58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 68) = a2;
  return result;
}

void sub_1000EDB60()
{
}

void sub_1000EDBCC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000EDBF4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 72);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(a1 + 60) = 0;
    *(void *)(a1 + 52) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 16) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1000EDC30(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  float v45 = (unint64_t *)(a1 + 16);
  uint64_t v46 = (unsigned int *)(a1 + 24);
  int v47 = (unsigned int *)(a1 + 28);
  int v48 = (unsigned int *)(a1 + 32);
  int v49 = (unsigned int *)(a1 + 36);
  int v6 = (unsigned int *)(a1 + 40);
  uint64_t v7 = (unsigned int *)(a1 + 44);
  uint64_t v8 = (unsigned int *)(a1 + 48);
  int v9 = (unsigned int *)(a1 + 52);
  int v10 = (unsigned int *)(a1 + 56);
  int v11 = (unsigned int *)(a1 + 60);
  int v12 = (unsigned int *)(a1 + 64);
  unsigned int v13 = a1 + 8;
  while (1)
  {
    int v14 = (char *)*((void *)this + 1);
    if ((unint64_t)v14 < *((void *)this + 2) && (*v14 & 0x80000000) == 0)
    {
      TagFallbacunsigned int k = *v14;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v14 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v45);
          if (!result) {
            return result;
          }
          signed int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 1u;
          if ((unint64_t)v19 >= v17) {
            continue;
          }
        }
        else
        {
          *float v45 = *v18;
          signed int v19 = v18 + 1;
          *((void *)this + 1) = v19;
          *(_DWORD *)(a1 + 72) |= 1u;
          if ((unint64_t)v19 >= v17) {
            continue;
          }
        }
        if (*v19 != 16) {
          continue;
        }
        int v20 = v19 + 1;
        *((void *)this + 1) = v20;
        if ((unint64_t)v20 >= v17) {
          goto LABEL_51;
        }
        goto LABEL_48;
      case 2u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v20 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v20 >= v17) {
          goto LABEL_51;
        }
LABEL_48:
        if (*v20 < 0)
        {
LABEL_51:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46);
          if (!result) {
            return result;
          }
          int v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 2u;
          if ((unint64_t)v31 >= v17) {
            continue;
          }
        }
        else
        {
          unsigned int *v46 = *v20;
          int v31 = v20 + 1;
          *((void *)this + 1) = v31;
          *(_DWORD *)(a1 + 72) |= 2u;
          if ((unint64_t)v31 >= v17) {
            continue;
          }
        }
        if (*v31 != 24) {
          continue;
        }
        BOOL v21 = v31 + 1;
        *((void *)this + 1) = v21;
        if ((unint64_t)v21 >= v17) {
          goto LABEL_58;
        }
LABEL_55:
        if (*v21 < 0)
        {
LABEL_58:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v47);
          if (!result) {
            return result;
          }
          uint64_t v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 4u;
          if ((unint64_t)v32 >= v17) {
            continue;
          }
        }
        else
        {
          *int v47 = *v21;
          uint64_t v32 = v21 + 1;
          *((void *)this + 1) = v32;
          *(_DWORD *)(a1 + 72) |= 4u;
          if ((unint64_t)v32 >= v17) {
            continue;
          }
        }
        if (*v32 != 32) {
          continue;
        }
        int v22 = v32 + 1;
        *((void *)this + 1) = v22;
        if ((unint64_t)v22 >= v17) {
          goto LABEL_65;
        }
LABEL_62:
        if (*v22 < 0)
        {
LABEL_65:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v48);
          if (!result) {
            return result;
          }
          unint64_t v33 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 8u;
          if ((unint64_t)v33 >= v17) {
            continue;
          }
        }
        else
        {
          *int v48 = *v22;
          unint64_t v33 = v22 + 1;
          *((void *)this + 1) = v33;
          *(_DWORD *)(a1 + 72) |= 8u;
          if ((unint64_t)v33 >= v17) {
            continue;
          }
        }
        if (*v33 != 40) {
          continue;
        }
        int v23 = v33 + 1;
        *((void *)this + 1) = v23;
        if ((unint64_t)v23 >= v17) {
          goto LABEL_72;
        }
LABEL_69:
        if (*v23 < 0)
        {
LABEL_72:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v49);
          if (!result) {
            return result;
          }
          int v34 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 0x10u;
          if ((unint64_t)v34 >= v17) {
            continue;
          }
        }
        else
        {
          *int v49 = *v23;
          int v34 = v23 + 1;
          *((void *)this + 1) = v34;
          *(_DWORD *)(a1 + 72) |= 0x10u;
          if ((unint64_t)v34 >= v17) {
            continue;
          }
        }
        if (*v34 != 48) {
          continue;
        }
        uint64_t v24 = v34 + 1;
        *((void *)this + 1) = v24;
        if ((unint64_t)v24 >= v17) {
          goto LABEL_79;
        }
LABEL_76:
        if (*v24 < 0)
        {
LABEL_79:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 0x20u;
          if ((unint64_t)v35 >= v17) {
            continue;
          }
        }
        else
        {
          unsigned int *v6 = *v24;
          int v35 = v24 + 1;
          *((void *)this + 1) = v35;
          *(_DWORD *)(a1 + 72) |= 0x20u;
          if ((unint64_t)v35 >= v17) {
            continue;
          }
        }
        if (*v35 != 56) {
          continue;
        }
        int v25 = v35 + 1;
        *((void *)this + 1) = v25;
LABEL_83:
        if ((unint64_t)v25 >= v17 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unint64_t v36 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 0x40u;
          if ((unint64_t)v36 >= v17) {
            continue;
          }
        }
        else
        {
          unsigned int *v7 = *v25;
          unint64_t v36 = v25 + 1;
          *((void *)this + 1) = v36;
          *(_DWORD *)(a1 + 72) |= 0x40u;
          if ((unint64_t)v36 >= v17) {
            continue;
          }
        }
        if (*v36 != 64) {
          continue;
        }
        unsigned int v26 = v36 + 1;
        *((void *)this + 1) = v26;
LABEL_91:
        if ((unint64_t)v26 >= v17 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          uint8x8_t v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 0x80u;
          if ((unint64_t)v37 >= v17) {
            continue;
          }
        }
        else
        {
          unsigned int *v8 = *v26;
          uint8x8_t v37 = v26 + 1;
          *((void *)this + 1) = v37;
          *(_DWORD *)(a1 + 72) |= 0x80u;
          if ((unint64_t)v37 >= v17) {
            continue;
          }
        }
        if (*v37 != 72) {
          continue;
        }
        int v27 = v37 + 1;
        *((void *)this + 1) = v27;
LABEL_99:
        if ((unint64_t)v27 >= v17 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          int v38 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 0x100u;
          if ((unint64_t)v38 >= v17) {
            continue;
          }
        }
        else
        {
          *int v9 = *v27;
          int v38 = v27 + 1;
          *((void *)this + 1) = v38;
          *(_DWORD *)(a1 + 72) |= 0x100u;
          if ((unint64_t)v38 >= v17) {
            continue;
          }
        }
        if (*v38 != 80) {
          continue;
        }
        uint64_t v28 = v38 + 1;
        *((void *)this + 1) = v28;
LABEL_107:
        if ((unint64_t)v28 >= v17 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
          if (!result) {
            return result;
          }
          int v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 0x200u;
          if ((unint64_t)v39 >= v17) {
            continue;
          }
        }
        else
        {
          *int v10 = *v28;
          int v39 = v28 + 1;
          *((void *)this + 1) = v39;
          *(_DWORD *)(a1 + 72) |= 0x200u;
          if ((unint64_t)v39 >= v17) {
            continue;
          }
        }
        if (*v39 != 88) {
          continue;
        }
        int v29 = v39 + 1;
        *((void *)this + 1) = v29;
LABEL_115:
        if ((unint64_t)v29 >= v17 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
          if (!result) {
            return result;
          }
          int v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 0x400u;
          if ((unint64_t)v40 >= v17) {
            continue;
          }
        }
        else
        {
          *int v11 = *v29;
          int v40 = v29 + 1;
          *((void *)this + 1) = v40;
          *(_DWORD *)(a1 + 72) |= 0x400u;
          if ((unint64_t)v40 >= v17) {
            continue;
          }
        }
        if (*v40 != 96) {
          continue;
        }
        int v30 = v40 + 1;
        *((void *)this + 1) = v30;
LABEL_123:
        if ((unint64_t)v30 >= v17 || *v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v12);
          if (!result) {
            return result;
          }
          uint64_t v43 = *((void *)this + 1);
          uint64_t v42 = *((void *)this + 2);
          *(_DWORD *)(a1 + 72) |= 0x800u;
          if (v43 != v42) {
            continue;
          }
        }
        else
        {
          *int v12 = *v30;
          uint64_t v41 = (unsigned __int8 *)(v30 + 1);
          *((void *)this + 1) = v41;
          *(_DWORD *)(a1 + 72) |= 0x800u;
          if (v41 != (unsigned __int8 *)v17) {
            continue;
          }
        }
        if (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        BOOL v21 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v21 >= v17) {
          goto LABEL_58;
        }
        goto LABEL_55;
      case 4u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v22 >= v17) {
          goto LABEL_65;
        }
        goto LABEL_62;
      case 5u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v23 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v23 >= v17) {
          goto LABEL_72;
        }
        goto LABEL_69;
      case 6u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        uint64_t v24 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v24 >= v17) {
          goto LABEL_79;
        }
        goto LABEL_76;
      case 7u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v25 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_83;
      case 8u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        unsigned int v26 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_91;
      case 9u:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v27 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_99;
      case 0xAu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        uint64_t v28 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_107;
      case 0xBu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v29 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_115;
      case 0xCu:
        int v16 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v30 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_123;
      default:
        int v16 = TagFallback & 7;
LABEL_40:
        if (v16 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v13, a4))continue; {
        return 0;
        }
    }
  }
}

uint64_t sub_1000EE408(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 72);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 16), (unint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 32), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 36), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 40), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 44), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 48), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 52), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 56), a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 60), a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x800) == 0)
  {
LABEL_13:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_DWORD *)(v5 + 64), a2, a4);
  int v10 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_27:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000EE5BC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 18);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_19:
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    *(unsigned char *)uint64_t v3 = 16;
    if (v11 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
      if ((*((unsigned char *)this + 72) & 4) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v11;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if ((*((unsigned char *)this + 72) & 4) != 0) {
        goto LABEL_23;
      }
    }
LABEL_4:
    if ((*((unsigned char *)this + 72) & 8) == 0) {
      goto LABEL_5;
    }
LABEL_27:
    unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    *(unsigned char *)uint64_t v3 = 32;
    if (v13 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)v3 + 1, a3);
      if ((*((unsigned char *)this + 72) & 0x10) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v13;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if ((*((unsigned char *)this + 72) & 0x10) != 0) {
        goto LABEL_31;
      }
    }
LABEL_6:
    if ((*((unsigned char *)this + 72) & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_35:
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    *(unsigned char *)uint64_t v3 = 48;
    if (v15 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)v3 + 1, a3);
      if ((*((unsigned char *)this + 72) & 0x40) != 0) {
        goto LABEL_39;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v15;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if ((*((unsigned char *)this + 72) & 0x40) != 0) {
        goto LABEL_39;
      }
    }
LABEL_8:
    if ((*((unsigned char *)this + 72) & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_43:
    unint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    *(unsigned char *)uint64_t v3 = 64;
    if (v17 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)v3 + 1, a3);
      if (*((unsigned char *)this + 73)) {
        goto LABEL_47;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v17;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if (*((unsigned char *)this + 73)) {
        goto LABEL_47;
      }
    }
LABEL_10:
    if ((*((unsigned char *)this + 73) & 2) == 0) {
      goto LABEL_11;
    }
LABEL_51:
    signed int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    *(unsigned char *)uint64_t v3 = 80;
    if (v19 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)v3 + 1, a3);
      if ((*((unsigned char *)this + 73) & 4) != 0) {
        goto LABEL_55;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v19;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if ((*((unsigned char *)this + 73) & 4) != 0) {
        goto LABEL_55;
      }
    }
LABEL_12:
    if ((*((unsigned char *)this + 73) & 8) == 0) {
      goto LABEL_13;
    }
LABEL_59:
    BOOL v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    *(unsigned char *)uint64_t v3 = 96;
    if (v21 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (int)v3 + 1, a3);
      int v23 = (void *)*((void *)this + 1);
      uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      int v6 = v23;
      if (!v23) {
        return v3;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v21;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      int v22 = (void *)*((void *)this + 1);
      uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      int v6 = v22;
      if (!v22) {
        return v3;
      }
    }
    goto LABEL_14;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
  *(unsigned char *)a2 = 8;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v10, (unint64_t)a2 + 1, a3);
  if ((*((_DWORD *)this + 18) & 2) != 0) {
    goto LABEL_19;
  }
LABEL_3:
  if ((*((unsigned char *)this + 72) & 4) == 0) {
    goto LABEL_4;
  }
LABEL_23:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  *(unsigned char *)uint64_t v3 = 24;
  if (v12 > 0x7F)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v3 + 1, a3);
    if ((*((unsigned char *)this + 72) & 8) != 0) {
      goto LABEL_27;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v12;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((unsigned char *)this + 72) & 8) != 0) {
      goto LABEL_27;
    }
  }
LABEL_5:
  if ((*((unsigned char *)this + 72) & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_31:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  *(unsigned char *)uint64_t v3 = 40;
  if (v14 > 0x7F)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v3 + 1, a3);
    if ((*((unsigned char *)this + 72) & 0x20) != 0) {
      goto LABEL_35;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v14;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((unsigned char *)this + 72) & 0x20) != 0) {
      goto LABEL_35;
    }
  }
LABEL_7:
  if ((*((unsigned char *)this + 72) & 0x40) == 0) {
    goto LABEL_8;
  }
LABEL_39:
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
  *(unsigned char *)uint64_t v3 = 56;
  if (v16 > 0x7F)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)v3 + 1, a3);
    if ((*((unsigned char *)this + 72) & 0x80) != 0) {
      goto LABEL_43;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v16;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((unsigned char *)this + 72) & 0x80) != 0) {
      goto LABEL_43;
    }
  }
LABEL_9:
  if ((*((unsigned char *)this + 73) & 1) == 0) {
    goto LABEL_10;
  }
LABEL_47:
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  *(unsigned char *)uint64_t v3 = 72;
  if (v18 > 0x7F)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)v3 + 1, a3);
    if ((*((unsigned char *)this + 73) & 2) != 0) {
      goto LABEL_51;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v18;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((unsigned char *)this + 73) & 2) != 0) {
      goto LABEL_51;
    }
  }
LABEL_11:
  if ((*((unsigned char *)this + 73) & 4) == 0) {
    goto LABEL_12;
  }
LABEL_55:
  int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  *(unsigned char *)uint64_t v3 = 88;
  if (v20 > 0x7F)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, (int)v3 + 1, a3);
    if ((*((unsigned char *)this + 73) & 8) != 0) {
      goto LABEL_59;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v20;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((unsigned char *)this + 73) & 8) != 0) {
      goto LABEL_59;
    }
  }
LABEL_13:
  uint64_t v8 = (void *)*((void *)this + 1);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v6 = v8;
  if (!v8) {
    return v3;
  }
LABEL_14:
  if (*v6 == v6[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v7, v3, a3);
}

uint64_t sub_1000EE92C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 72);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    if ((v3 & 0xFF00) == 0) {
      goto LABEL_48;
    }
    goto LABEL_44;
  }
  if (v3)
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 72);
    if ((v3 & 2) == 0) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_12;
    }
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
    int v3 = *(_DWORD *)(a1 + 72);
  }
  else
  {
    int v6 = 1;
  }
  uint64_t v4 = (v4 + v6 + 1);
LABEL_12:
  if ((v3 & 4) != 0)
  {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *(_DWORD *)(a1 + 72);
      uint64_t v4 = (v4 + v8 + 1);
      if ((v3 & 8) != 0) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      if ((v3 & 8) != 0) {
        goto LABEL_24;
      }
    }
LABEL_14:
    if ((v3 & 0x10) == 0) {
      goto LABEL_15;
    }
LABEL_28:
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      int v3 = *(_DWORD *)(a1 + 72);
      uint64_t v4 = (v4 + v12 + 1);
      if ((v3 & 0x20) != 0) {
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      if ((v3 & 0x20) != 0) {
        goto LABEL_32;
      }
    }
LABEL_16:
    if ((v3 & 0x40) == 0) {
      goto LABEL_17;
    }
LABEL_36:
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
    if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
      int v3 = *(_DWORD *)(a1 + 72);
      uint64_t v4 = (v16 + 1 + v4);
      if ((v3 & 0x80) != 0) {
        goto LABEL_40;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      if ((v3 & 0x80) != 0) {
        goto LABEL_40;
      }
    }
LABEL_18:
    if ((v3 & 0xFF00) == 0) {
      goto LABEL_48;
    }
LABEL_44:
    if ((v3 & 0x100) == 0)
    {
      if ((v3 & 0x200) == 0) {
        goto LABEL_46;
      }
LABEL_54:
      uint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
      if (v24 >= 0x80)
      {
        int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2);
        int v3 = *(_DWORD *)(a1 + 72);
        uint64_t v4 = (v25 + 1 + v4);
        if ((v3 & 0x400) != 0) {
          goto LABEL_58;
        }
      }
      else
      {
        uint64_t v4 = (v4 + 2);
        if ((v3 & 0x400) != 0) {
          goto LABEL_58;
        }
      }
LABEL_47:
      if ((v3 & 0x800) == 0) {
        goto LABEL_48;
      }
      goto LABEL_62;
    }
    int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
    if (v22 >= 0x80)
    {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
      int v3 = *(_DWORD *)(a1 + 72);
      uint64_t v4 = (v23 + 1 + v4);
      if ((v3 & 0x200) != 0) {
        goto LABEL_54;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      if ((v3 & 0x200) != 0) {
        goto LABEL_54;
      }
    }
LABEL_46:
    if ((v3 & 0x400) == 0) {
      goto LABEL_47;
    }
LABEL_58:
    unsigned int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if (v26 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2)+ 1+ v4;
      if ((*(_DWORD *)(a1 + 72) & 0x800) == 0) {
        goto LABEL_48;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      if ((v3 & 0x800) == 0) {
        goto LABEL_48;
      }
    }
LABEL_62:
    int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if (v27 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2)+ 1+ v4;
      signed int v19 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v20 = *(void **)(a1 + 8);
      if (!v20) {
        goto LABEL_49;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      signed int v19 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v20 = *(void **)(a1 + 8);
      if (!v20) {
        goto LABEL_49;
      }
    }
    goto LABEL_66;
  }
  if ((v3 & 8) == 0) {
    goto LABEL_14;
  }
LABEL_24:
  int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    int v3 = *(_DWORD *)(a1 + 72);
    uint64_t v4 = (v4 + v10 + 1);
    if ((v3 & 0x10) != 0) {
      goto LABEL_28;
    }
  }
  else
  {
    uint64_t v4 = (v4 + 2);
    if ((v3 & 0x10) != 0) {
      goto LABEL_28;
    }
  }
LABEL_15:
  if ((v3 & 0x20) == 0) {
    goto LABEL_16;
  }
LABEL_32:
  unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    int v3 = *(_DWORD *)(a1 + 72);
    uint64_t v4 = (v14 + 1 + v4);
    if ((v3 & 0x40) != 0) {
      goto LABEL_36;
    }
  }
  else
  {
    uint64_t v4 = (v4 + 2);
    if ((v3 & 0x40) != 0) {
      goto LABEL_36;
    }
  }
LABEL_17:
  if ((v3 & 0x80) == 0) {
    goto LABEL_18;
  }
LABEL_40:
  unint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
    int v3 = *(_DWORD *)(a1 + 72);
    uint64_t v4 = (v18 + 1 + v4);
    if ((v3 & 0xFF00) == 0) {
      goto LABEL_48;
    }
    goto LABEL_44;
  }
  uint64_t v4 = (v4 + 2);
  if ((v3 & 0xFF00) != 0) {
    goto LABEL_44;
  }
LABEL_48:
  signed int v19 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v20 = *(void **)(a1 + 8);
  if (!v20)
  {
LABEL_49:
    *(_DWORD *)(a1 + 68) = v4;
    return v4;
  }
LABEL_66:
  if (*v20 == v20[1]) {
    goto LABEL_49;
  }
  uint64_t v28 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v19, a2)
      + v4;
  *(_DWORD *)(a1 + 68) = v28;
  return v28;
}

uint64_t sub_1000EEC20(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000ED868((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000EED00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000EED14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000EED28(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000EEDB4()
{
  return 1;
}

uint64_t sub_1000EEDBC()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E5F58;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D5B8;
}

void sub_1000EEE4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000EEE60(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v25);
    int v4 = *(_DWORD *)(a2 + 96);
    if (!(_BYTE)v4) {
      goto LABEL_40;
    }
  }
  else
  {
    int v4 = *(_DWORD *)(a2 + 96);
    if (!(_BYTE)v4) {
      goto LABEL_40;
    }
  }
  if (v4)
  {
    int v5 = *(_DWORD *)(a2 + 88);
    *(_DWORD *)(a1 + 96) |= 1u;
    *(_DWORD *)(a1 + 88) = v5;
    int v4 = *(_DWORD *)(a2 + 96);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 96) |= 2u;
    uint64_t v6 = *(void *)(a1 + 16);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_10047E938 + 16);
    }
    sub_1000E8500(v6, v7);
    int v4 = *(_DWORD *)(a2 + 96);
  }
  if ((v4 & 4) != 0)
  {
    *(_DWORD *)(a1 + 96) |= 4u;
    uint64_t v8 = *(void *)(a1 + 24);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = *(void *)(a2 + 24);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10047E938 + 24);
    }
    sub_1000E8500(v8, v9);
    int v4 = *(_DWORD *)(a2 + 96);
  }
  if ((v4 & 8) != 0)
  {
    *(_DWORD *)(a1 + 96) |= 8u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 32);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_10047E938 + 32);
    }
    sub_1000EC270(v10, v11);
    int v4 = *(_DWORD *)(a2 + 96);
  }
  if ((v4 & 0x10) != 0)
  {
    int v12 = *(const std::string **)(a2 + 40);
    *(_DWORD *)(a1 + 96) |= 0x10u;
    unsigned int v13 = *(std::string **)(a1 + 40);
    if (v13 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v13, v12);
    int v4 = *(_DWORD *)(a2 + 96);
  }
  if ((v4 & 0x20) != 0)
  {
    *(_DWORD *)(a1 + 96) |= 0x20u;
    uint64_t v14 = *(void *)(a1 + 48);
    if (!v14) {
      operator new();
    }
    uint64_t v15 = *(void *)(a2 + 48);
    if (!v15) {
      uint64_t v15 = *(void *)(qword_10047E938 + 48);
    }
    sub_1000ED868(v14, v15);
    int v4 = *(_DWORD *)(a2 + 96);
  }
  if ((v4 & 0x40) != 0)
  {
    int v16 = *(const std::string **)(a2 + 56);
    *(_DWORD *)(a1 + 96) |= 0x40u;
    unint64_t v17 = *(std::string **)(a1 + 56);
    if (v17 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v17, v16);
    int v4 = *(_DWORD *)(a2 + 96);
  }
  if ((v4 & 0x80) != 0)
  {
    *(_DWORD *)(a1 + 96) |= 0x80u;
    uint64_t v18 = *(void *)(a1 + 64);
    if (!v18) {
      operator new();
    }
    uint64_t v19 = *(void *)(a2 + 64);
    if (!v19) {
      uint64_t v19 = *(void *)(qword_10047E938 + 64);
    }
    sub_1000EA3F8(v18, v19);
    int v4 = *(_DWORD *)(a2 + 96);
  }
LABEL_40:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 0x100u;
      uint64_t v20 = *(void *)(a1 + 72);
      if (!v20) {
        operator new();
      }
      uint64_t v21 = *(void *)(a2 + 72);
      if (!v21) {
        uint64_t v21 = *(void *)(qword_10047E938 + 72);
      }
      sub_1000EA3F8(v20, v21);
      int v4 = *(_DWORD *)(a2 + 96);
    }
    if ((v4 & 0x200) != 0)
    {
      *(_DWORD *)(a1 + 96) |= 0x200u;
      uint64_t v22 = *(void *)(a1 + 80);
      if (!v22) {
        operator new();
      }
      uint64_t v23 = *(void *)(a2 + 80);
      if (!v23) {
        uint64_t v23 = *(void *)(qword_10047E938 + 80);
      }
      sub_1000EBA58(v22, v23);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000EF3BC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000EF3E4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000EF410()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000EF43C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000EF468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000EF47C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000EF490(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_100455098;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 88) = 0xFFFFFFFFLL;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_DWORD *)(a1 + 96) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 64) = 0;
  sub_1000EEE60(a1, a2);
  return a1;
}

void sub_1000EF51C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_1000EF538(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void *sub_1000EF54C(void *result)
{
  int v1 = result;
  uint64_t v2 = result[5];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  uint64_t v4 = result[7];
  if ((_UNKNOWN *)v4 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    operator delete();
  }
  if ((void *)qword_10047E938 != result)
  {
    uint64_t v6 = result[2];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[3];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = v1[4];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = v1[6];
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = v1[8];
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = v1[9];
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t result = (void *)v1[10];
    if (result)
    {
      int v12 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v12();
    }
  }
  return result;
}

void sub_1000EF770(void *a1)
{
  *a1 = off_100455098;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_1000EF54C(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000EF7D0(void *a1)
{
  *a1 = off_100455098;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_1000EF54C(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000EF844(uint64_t result, int a2)
{
  *(_DWORD *)(result + 92) = a2;
  return result;
}

uint64_t sub_1000EF84C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047E938;
  if (!qword_10047E938)
  {
    sub_1000E6AE4(0, a2, a3, a4);
    return qword_10047E938;
  }
  return result;
}

void sub_1000EF888()
{
}

void sub_1000EF90C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000EF934(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 96);
  if (!v2) {
    goto LABEL_47;
  }
  *(_DWORD *)(this + 88) = -1;
  if ((v2 & 2) != 0)
  {
    this = *(void *)(this + 16);
    if (this)
    {
      if (*(unsigned char *)(this + 44))
      {
        *(void *)(this + 16) = 0;
        *(void *)(this + 24) = 0;
        *(void *)(this + 32) = 0;
      }
      uint64_t v3 = *(void *)(this + 8);
      this += 8;
      *(_DWORD *)(this + 36) = 0;
      if (v3) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  if ((*(unsigned char *)(v1 + 96) & 4) != 0)
  {
    this = *(void *)(v1 + 24);
    if (this)
    {
      if (*(unsigned char *)(this + 44))
      {
        *(void *)(this + 16) = 0;
        *(void *)(this + 24) = 0;
        *(void *)(this + 32) = 0;
      }
      uint64_t v4 = *(void *)(this + 8);
      this += 8;
      *(_DWORD *)(this + 36) = 0;
      if (v4) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  if ((*(unsigned char *)(v1 + 96) & 8) != 0)
  {
    this = *(void *)(v1 + 32);
    if (this)
    {
      int v5 = *(_DWORD *)(this + 72);
      if ((_BYTE)v5)
      {
        *(_DWORD *)(this + 48) = 0;
        *(_OWORD *)(this + 16) = 0u;
        *(_OWORD *)(this + 32) = 0u;
      }
      if ((v5 & 0xFF00) != 0)
      {
        *(void *)(this + 60) = 0;
        *(void *)(this + 52) = 0;
      }
      uint64_t v6 = *(void *)(this + 8);
      this += 8;
      *(_DWORD *)(this + 64) = 0;
      if (v6) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  if ((*(unsigned char *)(v1 + 96) & 0x10) == 0
    || (uint64_t v7 = *(void *)(v1 + 40), (_UNKNOWN *)v7 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
  {
LABEL_26:
    if ((*(unsigned char *)(v1 + 96) & 0x20) == 0) {
      goto LABEL_35;
    }
    goto LABEL_27;
  }
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    goto LABEL_26;
  }
  **(unsigned char **)uint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((*(unsigned char *)(v1 + 96) & 0x20) == 0) {
    goto LABEL_35;
  }
LABEL_27:
  this = *(void *)(v1 + 48);
  if (this)
  {
    int v8 = *(_DWORD *)(this + 72);
    if ((_BYTE)v8)
    {
      *(_DWORD *)(this + 48) = 0;
      *(_OWORD *)(this + 16) = 0u;
      *(_OWORD *)(this + 32) = 0u;
    }
    if ((v8 & 0xFF00) != 0)
    {
      *(void *)(this + 60) = 0;
      *(void *)(this + 52) = 0;
    }
    uint64_t v9 = *(void *)(this + 8);
    this += 8;
    *(_DWORD *)(this + 64) = 0;
    if (v9) {
      this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
    }
  }
LABEL_35:
  if ((*(unsigned char *)(v1 + 96) & 0x40) != 0)
  {
    uint64_t v10 = *(void *)(v1 + 56);
    if ((_UNKNOWN *)v10 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v10 + 23) < 0)
      {
        **(unsigned char **)uint64_t v10 = 0;
        *(void *)(v10 + 8) = 0;
        if ((*(unsigned char *)(v1 + 96) & 0x80) == 0) {
          goto LABEL_47;
        }
        goto LABEL_40;
      }
      *(unsigned char *)uint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
    }
  }
  if ((*(unsigned char *)(v1 + 96) & 0x80) == 0) {
    goto LABEL_47;
  }
LABEL_40:
  uint64_t v11 = *(void *)(v1 + 64);
  if (v11)
  {
    if (*(int *)(v11 + 24) >= 1)
    {
      uint64_t v12 = 0;
      do
      {
        uint64_t v13 = *(void *)(*(void *)(v11 + 16) + 8 * v12);
        this = (*(uint64_t (**)(uint64_t))(*(void *)v13 + 32))(v13);
        ++v12;
      }
      while (v12 < *(int *)(v11 + 24));
    }
    uint64_t v15 = *(void *)(v11 + 8);
    uint64_t v14 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v11 + 8);
    *((_DWORD *)v14 + 4) = 0;
    *((_DWORD *)v14 + 9) = 0;
    if (v15) {
      this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v14);
    }
  }
LABEL_47:
  int v16 = *(_DWORD *)(v1 + 96);
  if ((v16 & 0xFF00) != 0)
  {
    if ((v16 & 0x100) != 0)
    {
      uint64_t v17 = *(void *)(v1 + 72);
      if (v17)
      {
        if (*(int *)(v17 + 24) >= 1)
        {
          uint64_t v18 = 0;
          do
          {
            uint64_t v19 = *(void *)(*(void *)(v17 + 16) + 8 * v18);
            this = (*(uint64_t (**)(uint64_t))(*(void *)v19 + 32))(v19);
            ++v18;
          }
          while (v18 < *(int *)(v17 + 24));
        }
        uint64_t v21 = *(void *)(v17 + 8);
        uint64_t v20 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v17 + 8);
        *((_DWORD *)v20 + 4) = 0;
        *((_DWORD *)v20 + 9) = 0;
        if (v21) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v20);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 97) & 2) != 0)
    {
      this = *(void *)(v1 + 80);
      if (this)
      {
        if (*(unsigned char *)(this + 36))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
        }
        uint64_t v22 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 28) = 0;
        if (v22) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
  }
  uint64_t v24 = *(void *)(v1 + 8);
  uint64_t v23 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v23 + 22) = 0;
  if (v24)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v23);
  }
  return this;
}

uint64_t sub_1000EFC24(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacunsigned int k = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_51;
        }
        unsigned int v86 = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 < *((void *)this + 2) && (*v10 & 0x80000000) == 0)
        {
          signed int v11 = *v10;
          *((void *)this + 1) = v10 + 1;
          if ((v11 + 1) > 5) {
            goto LABEL_148;
          }
LABEL_12:
          *(_DWORD *)(a1 + 96) |= 1u;
          *(_DWORD *)(a1 + 88) = v11;
          uint64_t v12 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v12 < *((void *)this + 2)) {
            goto LABEL_13;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v86);
        if (!result) {
          return result;
        }
        signed int v11 = v86;
        if (v86 + 1 <= 5) {
          goto LABEL_12;
        }
LABEL_148:
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, v11);
        uint64_t v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2)) {
          continue;
        }
LABEL_13:
        if (*v12 != 18) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_17:
        *(_DWORD *)(a1 + 96) |= 2u;
        uint64_t v13 = *(void *)(a1 + 16);
        if (!v13) {
          operator new();
        }
        unsigned int v86 = 0;
        uint64_t v14 = (char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v86))return 0; {
        }
          }
        else
        {
          unsigned int v86 = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v86);
        if (!sub_1000E877C(v13, this, v29, v30) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v31 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v31, 1);
        int v33 = v31 - 1;
        if (v33 < 0 == v32) {
          *((_DWORD *)this + 14) = v33;
        }
        int v34 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 != 26) {
          continue;
        }
        *((void *)this + 1) = v34 + 1;
        *(_DWORD *)(a1 + 96) |= 4u;
        uint64_t v15 = *(void *)(a1 + 24);
        if (!v15) {
LABEL_63:
        }
          operator new();
LABEL_24:
        unsigned int v86 = 0;
        int v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v86))return 0; {
        }
          }
        else
        {
          unsigned int v86 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v86);
        if (!sub_1000E877C(v15, this, v38, v39) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v40 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v40, 1);
        int v41 = v40 - 1;
        if (v41 < 0 == v32) {
          *((_DWORD *)this + 14) = v41;
        }
        uint64_t v42 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 != 34) {
          continue;
        }
        *((void *)this + 1) = v42 + 1;
        *(_DWORD *)(a1 + 96) |= 8u;
        uint64_t v17 = *(void *)(a1 + 32);
        if (!v17) {
LABEL_75:
        }
          operator new();
LABEL_28:
        unsigned int v86 = 0;
        uint64_t v18 = (char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v86))return 0; {
        }
          }
        else
        {
          unsigned int v86 = *v18;
          *((void *)this + 1) = v18 + 1;
        }
        int v43 = *((_DWORD *)this + 14);
        int v44 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v43 + 1;
        if (v43 >= v44) {
          return 0;
        }
        int v45 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v86);
        if (!sub_1000EC638(v17, this, v46, v47) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v45);
        int v48 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v48, 1);
        int v49 = v48 - 1;
        if (v49 < 0 == v32) {
          *((_DWORD *)this + 14) = v49;
        }
        uint64_t v50 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v50 >= *((void *)this + 2) || *v50 != 42) {
          continue;
        }
        *((void *)this + 1) = v50 + 1;
        *(_DWORD *)(a1 + 96) |= 0x10u;
        if (*(_UNKNOWN **)(a1 + 40) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_87:
        }
          operator new();
LABEL_32:
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        float v51 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v51 >= *((void *)this + 2) || *v51 != 50) {
          continue;
        }
        *((void *)this + 1) = v51 + 1;
        *(_DWORD *)(a1 + 96) |= 0x20u;
        uint64_t v20 = *(void *)(a1 + 48);
        if (!v20) {
LABEL_91:
        }
          operator new();
LABEL_36:
        unsigned int v86 = 0;
        uint64_t v21 = (char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v86))return 0; {
        }
          }
        else
        {
          unsigned int v86 = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        int v52 = *((_DWORD *)this + 14);
        int v53 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v52 + 1;
        if (v52 >= v53) {
          return 0;
        }
        int v54 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v86);
        if (!sub_1000EDC30(v20, this, v55, v56) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v54);
        int v57 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v57, 1);
        int v58 = v57 - 1;
        if (v58 < 0 == v32) {
          *((_DWORD *)this + 14) = v58;
        }
        uint64_t v59 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v59 >= *((void *)this + 2) || *v59 != 58) {
          continue;
        }
        *((void *)this + 1) = v59 + 1;
        *(_DWORD *)(a1 + 96) |= 0x40u;
        if (*(_UNKNOWN **)(a1 + 56) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_103:
        }
          operator new();
LABEL_40:
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        float v60 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v60 >= *((void *)this + 2) || *v60 != 66) {
          continue;
        }
        *((void *)this + 1) = v60 + 1;
        *(_DWORD *)(a1 + 96) |= 0x80u;
        uint64_t v22 = *(int **)(a1 + 64);
        if (!v22) {
LABEL_107:
        }
          operator new();
LABEL_44:
        unsigned int v86 = 0;
        uint64_t v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v86))return 0; {
        }
          }
        else
        {
          unsigned int v86 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        int v61 = *((_DWORD *)this + 14);
        int v62 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v61 + 1;
        if (v61 >= v62) {
          return 0;
        }
        int v63 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v86);
        if (!sub_1000EA788(v22, this, v64, v65) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v63);
        int v66 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v66, 1);
        int v67 = v66 - 1;
        if (v67 < 0 == v32) {
          *((_DWORD *)this + 14) = v67;
        }
        uint64_t v68 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v68 >= *((void *)this + 2) || *v68 != 74) {
          continue;
        }
        *((void *)this + 1) = v68 + 1;
        *(_DWORD *)(a1 + 96) |= 0x100u;
        uint64_t v24 = *(int **)(a1 + 72);
        if (!v24) {
LABEL_119:
        }
          operator new();
LABEL_48:
        unsigned int v86 = 0;
        int v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v86))return 0; {
        }
          }
        else
        {
          unsigned int v86 = *v25;
          *((void *)this + 1) = v25 + 1;
        }
        int v69 = *((_DWORD *)this + 14);
        int v70 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v69 + 1;
        if (v69 >= v70) {
          return 0;
        }
        int v71 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v86);
        if (!sub_1000EA788(v24, this, v72, v73) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v71);
        int v74 = *((_DWORD *)this + 14);
        BOOL v32 = __OFSUB__(v74, 1);
        int v75 = v74 - 1;
        if (v75 < 0 == v32) {
          *((_DWORD *)this + 14) = v75;
        }
        int v76 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v76 >= *((void *)this + 2) || *v76 != 82) {
          continue;
        }
        *((void *)this + 1) = v76 + 1;
LABEL_131:
        *(_DWORD *)(a1 + 96) |= 0x200u;
        uint64_t v77 = *(void *)(a1 + 80);
        if (!v77) {
          operator new();
        }
        unsigned int v86 = 0;
        uint64_t v78 = (char *)*((void *)this + 1);
        if ((unint64_t)v78 >= *((void *)this + 2) || *v78 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v86))return 0; {
        }
          }
        else
        {
          unsigned int v86 = *v78;
          *((void *)this + 1) = v78 + 1;
        }
        int v79 = *((_DWORD *)this + 14);
        int v80 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v79 + 1;
        if (v79 < v80)
        {
          int v81 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v86);
          if (sub_1000EBCA8(v77, this, v82, v83))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v81);
              int v84 = *((_DWORD *)this + 14);
              BOOL v32 = __OFSUB__(v84, 1);
              int v85 = v84 - 1;
              if (v85 < 0 == v32) {
                *((_DWORD *)this + 14) = v85;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_17;
        }
        goto LABEL_51;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 96) |= 4u;
        uint64_t v15 = *(void *)(a1 + 24);
        if (v15) {
          goto LABEL_24;
        }
        goto LABEL_63;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 96) |= 8u;
        uint64_t v17 = *(void *)(a1 + 32);
        if (v17) {
          goto LABEL_28;
        }
        goto LABEL_75;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 96) |= 0x10u;
        if (*(_UNKNOWN **)(a1 + 40) != &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          goto LABEL_32;
        }
        goto LABEL_87;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 96) |= 0x20u;
        uint64_t v20 = *(void *)(a1 + 48);
        if (v20) {
          goto LABEL_36;
        }
        goto LABEL_91;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 96) |= 0x40u;
        if (*(_UNKNOWN **)(a1 + 56) != &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          goto LABEL_40;
        }
        goto LABEL_103;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 96) |= 0x80u;
        uint64_t v22 = *(int **)(a1 + 64);
        if (v22) {
          goto LABEL_44;
        }
        goto LABEL_107;
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 96) |= 0x100u;
        uint64_t v24 = *(int **)(a1 + 72);
        if (v24) {
          goto LABEL_48;
        }
        goto LABEL_119;
      case 0xAu:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_51;
        }
        goto LABEL_131;
      default:
        int v9 = TagFallback & 7;
LABEL_51:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_1000F07DC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000F0808()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000F0830()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000F08B0(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 96);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_14:
    uint64_t v10 = *(void *)(v5 + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 96);
      if ((v6 & 4) != 0) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(qword_10047E938 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 96);
      if ((v6 & 4) != 0) {
        goto LABEL_18;
      }
    }
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_22:
    uint64_t v12 = *(void *)(v5 + 32);
    if (v12)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v12, a2, a4);
      int v6 = *(_DWORD *)(v5 + 96);
      if ((v6 & 0x10) != 0) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(qword_10047E938 + 32), a2, a4);
      int v6 = *(_DWORD *)(v5 + 96);
      if ((v6 & 0x10) != 0) {
        goto LABEL_26;
      }
    }
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_27:
    uint64_t v13 = *(void *)(v5 + 48);
    if (v13)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v13, a2, a4);
      int v6 = *(_DWORD *)(v5 + 96);
      if ((v6 & 0x40) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(qword_10047E938 + 48), a2, a4);
      int v6 = *(_DWORD *)(v5 + 96);
      if ((v6 & 0x40) != 0) {
        goto LABEL_31;
      }
    }
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_32;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 88), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 2) != 0) {
    goto LABEL_14;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    goto LABEL_4;
  }
LABEL_18:
  uint64_t v11 = *(void *)(v5 + 24);
  if (v11)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v11, a2, a4);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 8) != 0) {
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(qword_10047E938 + 24), a2, a4);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 8) != 0) {
      goto LABEL_22;
    }
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) != 0) {
    goto LABEL_27;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    goto LABEL_8;
  }
LABEL_31:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_36:
    uint64_t v15 = *(void *)(v5 + 72);
    if (v15)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v15, a2, a4);
      if ((*(_DWORD *)(v5 + 96) & 0x200) != 0) {
        goto LABEL_40;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(void *)(qword_10047E938 + 72), a2, a4);
      if ((*(_DWORD *)(v5 + 96) & 0x200) != 0) {
        goto LABEL_40;
      }
    }
LABEL_11:
    int v9 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_44;
  }
LABEL_32:
  uint64_t v14 = *(void *)(v5 + 64);
  if (v14)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v14, a2, a4);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 0x100) != 0) {
      goto LABEL_36;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(qword_10047E938 + 64), a2, a4);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 0x100) != 0) {
      goto LABEL_36;
    }
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    goto LABEL_11;
  }
LABEL_40:
  uint64_t v16 = *(void *)(v5 + 80);
  if (v16)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v16, a2, a4);
    uint64_t v17 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v17;
    if (!v17) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(void *)(qword_10047E938 + 80), a2, a4);
    uint64_t v18 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v18;
    if (!v18) {
      return result;
    }
  }
LABEL_44:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000F0B44(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if ((*((unsigned char *)this + 96) & 1) == 0)
  {
    int v6 = *((_DWORD *)this + 24);
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_19:
    uint64_t v9 = *((void *)this + 2);
    if (v9)
    {
      *(unsigned char *)uint64_t v4 = 18;
      unsigned int v10 = v4 + 1;
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v9 + 40);
      if (v11 <= 0x7F) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v9 = *(void *)(qword_10047E938 + 16);
      *(unsigned char *)uint64_t v4 = 18;
      unsigned int v10 = v4 + 1;
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v9 + 40);
      if (v11 <= 0x7F)
      {
LABEL_21:
        *((unsigned char *)v4 + 1) = (_BYTE)v11;
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000E8A40(v9, (uint64_t)v4 + 2, a3);
        int v6 = *((_DWORD *)this + 24);
        if ((v6 & 4) != 0) {
          goto LABEL_25;
        }
LABEL_4:
        if ((v6 & 8) == 0) {
          goto LABEL_5;
        }
LABEL_31:
        uint64_t v19 = (unsigned int *)*((void *)this + 4);
        if (v19)
        {
          *(unsigned char *)uint64_t v4 = 34;
          unsigned int v20 = v4 + 1;
          uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19[17];
          if (v21 <= 0x7F) {
            goto LABEL_33;
          }
        }
        else
        {
          uint64_t v19 = *(unsigned int **)(qword_10047E938 + 32);
          *(unsigned char *)uint64_t v4 = 34;
          unsigned int v20 = v4 + 1;
          uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19[17];
          if (v21 <= 0x7F)
          {
LABEL_33:
            *((unsigned char *)v4 + 1) = (_BYTE)v21;
            uint64_t v4 = sub_1000ECFC4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v19, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3);
            int v6 = *((_DWORD *)this + 24);
            if ((v6 & 0x10) != 0) {
              goto LABEL_37;
            }
LABEL_6:
            if ((v6 & 0x20) == 0) {
              goto LABEL_7;
            }
LABEL_49:
            int v30 = (unsigned int *)*((void *)this + 6);
            if (v30)
            {
              *(unsigned char *)uint64_t v4 = 50;
              unsigned int v31 = v4 + 1;
              BOOL v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v30[17];
              if (v32 <= 0x7F) {
                goto LABEL_51;
              }
            }
            else
            {
              int v30 = *(unsigned int **)(qword_10047E938 + 48);
              *(unsigned char *)uint64_t v4 = 50;
              unsigned int v31 = v4 + 1;
              BOOL v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v30[17];
              if (v32 <= 0x7F)
              {
LABEL_51:
                *((unsigned char *)v4 + 1) = (_BYTE)v32;
                uint64_t v4 = sub_1000EE5BC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v30, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3);
                int v6 = *((_DWORD *)this + 24);
                if ((v6 & 0x40) != 0) {
                  goto LABEL_55;
                }
LABEL_8:
                if ((v6 & 0x80) == 0) {
                  goto LABEL_9;
                }
LABEL_67:
                int v41 = (unsigned int *)*((void *)this + 8);
                if (v41)
                {
                  *(unsigned char *)uint64_t v4 = 66;
                  unsigned int v42 = v4 + 1;
                  int v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v41[10];
                  if (v43 <= 0x7F) {
                    goto LABEL_69;
                  }
                }
                else
                {
                  int v41 = *(unsigned int **)(qword_10047E938 + 64);
                  *(unsigned char *)uint64_t v4 = 66;
                  unsigned int v42 = v4 + 1;
                  int v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v41[10];
                  if (v43 <= 0x7F)
                  {
LABEL_69:
                    *((unsigned char *)v4 + 1) = (_BYTE)v43;
                    uint64_t v4 = sub_1000EAAB4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v41, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3);
                    int v6 = *((_DWORD *)this + 24);
                    if ((v6 & 0x100) != 0) {
                      goto LABEL_73;
                    }
LABEL_10:
                    if ((v6 & 0x200) == 0) {
                      goto LABEL_92;
                    }
                    goto LABEL_79;
                  }
                }
                int v44 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v43, v42, a3);
                uint64_t v4 = sub_1000EAAB4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v41, v44, v45);
                int v6 = *((_DWORD *)this + 24);
                if ((v6 & 0x100) != 0) {
                  goto LABEL_73;
                }
                goto LABEL_10;
              }
            }
            int v33 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v32, v31, a3);
            uint64_t v4 = sub_1000EE5BC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v30, v33, v34);
            int v6 = *((_DWORD *)this + 24);
            if ((v6 & 0x40) != 0) {
              goto LABEL_55;
            }
            goto LABEL_8;
          }
        }
        uint64_t v22 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, v20, a3);
        uint64_t v4 = sub_1000ECFC4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v19, v22, v23);
        int v6 = *((_DWORD *)this + 24);
        if ((v6 & 0x10) != 0) {
          goto LABEL_37;
        }
        goto LABEL_6;
      }
    }
    uint64_t v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v10, a3);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000E8A40(v9, v12, v13);
    int v6 = *((_DWORD *)this + 24);
    if ((v6 & 4) != 0) {
      goto LABEL_25;
    }
    goto LABEL_4;
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 22);
  *(unsigned char *)a2 = 8;
  int v8 = (char *)a2 + 1;
  if ((v7 & 0x80000000) != 0)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v7, (unint64_t)v8, a3);
    int v6 = *((_DWORD *)this + 24);
    if ((v6 & 2) != 0) {
      goto LABEL_19;
    }
  }
  else if (v7 > 0x7F)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, v8, a3);
    int v6 = *((_DWORD *)this + 24);
    if ((v6 & 2) != 0) {
      goto LABEL_19;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v7;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    int v6 = *((_DWORD *)this + 24);
    if ((v6 & 2) != 0) {
      goto LABEL_19;
    }
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    goto LABEL_4;
  }
LABEL_25:
  uint64_t v14 = *((void *)this + 3);
  if (v14)
  {
    *(unsigned char *)uint64_t v4 = 26;
    unsigned int v15 = v4 + 1;
    uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v14 + 40);
    if (v16 <= 0x7F) {
      goto LABEL_27;
    }
LABEL_30:
    uint64_t v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, v15, a3);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000E8A40(v14, v17, v18);
    int v6 = *((_DWORD *)this + 24);
    if ((v6 & 8) != 0) {
      goto LABEL_31;
    }
    goto LABEL_5;
  }
  uint64_t v14 = *(void *)(qword_10047E938 + 24);
  *(unsigned char *)uint64_t v4 = 26;
  unsigned int v15 = v4 + 1;
  uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v14 + 40);
  if (v16 > 0x7F) {
    goto LABEL_30;
  }
LABEL_27:
  *((unsigned char *)v4 + 1) = (_BYTE)v16;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000E8A40(v14, (uint64_t)v4 + 2, a3);
  int v6 = *((_DWORD *)this + 24);
  if ((v6 & 8) != 0) {
    goto LABEL_31;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_37:
  uint64_t v24 = *((void *)this + 5);
  *(unsigned char *)uint64_t v4 = 42;
  if (*(char *)(v24 + 23) < 0)
  {
    int v25 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v24 + 8);
    if (v25 <= 0x7F) {
      goto LABEL_39;
    }
  }
  else
  {
    int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v24 + 23);
    if (*(unsigned __int8 *)(v24 + 23) <= 0x7Fu)
    {
LABEL_39:
      *((unsigned char *)v4 + 1) = (_BYTE)v25;
      int v26 = v4 + 2;
      goto LABEL_42;
    }
  }
  int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, (int)v4 + 1, a3);
LABEL_42:
  int v27 = *(char *)(v24 + 23);
  if (v27 >= 0) {
    int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24;
  }
  else {
    int v28 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v24;
  }
  if (v27 >= 0) {
    uint64_t v29 = (const void *)*(unsigned __int8 *)(v24 + 23);
  }
  else {
    uint64_t v29 = (const void *)*(unsigned int *)(v24 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v28, v29, v26, a4);
  int v6 = *((_DWORD *)this + 24);
  if ((v6 & 0x20) != 0) {
    goto LABEL_49;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    goto LABEL_8;
  }
LABEL_55:
  uint64_t v35 = *((void *)this + 7);
  *(unsigned char *)uint64_t v4 = 58;
  if (*(char *)(v35 + 23) < 0)
  {
    int v36 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v35 + 8);
    if (v36 <= 0x7F) {
      goto LABEL_57;
    }
  }
  else
  {
    int v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v35 + 23);
    if (*(unsigned __int8 *)(v35 + 23) <= 0x7Fu)
    {
LABEL_57:
      *((unsigned char *)v4 + 1) = (_BYTE)v36;
      int v37 = v4 + 2;
      goto LABEL_60;
    }
  }
  int v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v36, (int)v4 + 1, a3);
LABEL_60:
  int v38 = *(char *)(v35 + 23);
  if (v38 >= 0) {
    int v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v35;
  }
  else {
    int v39 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v35;
  }
  if (v38 >= 0) {
    int v40 = (const void *)*(unsigned __int8 *)(v35 + 23);
  }
  else {
    int v40 = (const void *)*(unsigned int *)(v35 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v39, v40, v37, a4);
  int v6 = *((_DWORD *)this + 24);
  if ((v6 & 0x80) != 0) {
    goto LABEL_67;
  }
LABEL_9:
  if ((v6 & 0x100) == 0) {
    goto LABEL_10;
  }
LABEL_73:
  uint64_t v46 = (unsigned int *)*((void *)this + 9);
  if (v46)
  {
    *(unsigned char *)uint64_t v4 = 74;
    unsigned int v47 = v4 + 1;
    int v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v46[10];
    if (v48 <= 0x7F) {
      goto LABEL_75;
    }
  }
  else
  {
    uint64_t v46 = *(unsigned int **)(qword_10047E938 + 72);
    *(unsigned char *)uint64_t v4 = 74;
    unsigned int v47 = v4 + 1;
    int v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v46[10];
    if (v48 <= 0x7F)
    {
LABEL_75:
      *((unsigned char *)v4 + 1) = (_BYTE)v48;
      uint64_t v4 = sub_1000EAAB4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v46, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3);
      if ((*((_DWORD *)this + 24) & 0x200) == 0) {
        goto LABEL_92;
      }
      goto LABEL_79;
    }
  }
  int v49 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v48, v47, a3);
  uint64_t v4 = sub_1000EAAB4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v46, v49, v50);
  if ((*((_DWORD *)this + 24) & 0x200) == 0) {
    goto LABEL_92;
  }
LABEL_79:
  uint64_t v51 = *((void *)this + 10);
  if (v51)
  {
    *(unsigned char *)uint64_t v4 = 82;
    unsigned int v52 = v4 + 1;
    int v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v51 + 32);
    if (v53 <= 0x7F) {
      goto LABEL_81;
    }
  }
  else
  {
    uint64_t v51 = *(void *)(qword_10047E938 + 80);
    *(unsigned char *)uint64_t v4 = 82;
    unsigned int v52 = v4 + 1;
    int v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v51 + 32);
    if (v53 <= 0x7F)
    {
LABEL_81:
      *((unsigned char *)v4 + 1) = (_BYTE)v53;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      int v54 = *(_DWORD *)(v51 + 36);
      if ((v54 & 1) == 0) {
        goto LABEL_86;
      }
      goto LABEL_85;
    }
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v53, v52, a3);
  int v54 = *(_DWORD *)(v51 + 36);
  if (v54)
  {
LABEL_85:
    uint64_t v55 = *(void *)(v51 + 16);
    *(unsigned char *)uint64_t v4 = 9;
    *(void *)((char *)v4 + 1) = v55;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    int v54 = *(_DWORD *)(v51 + 36);
  }
LABEL_86:
  if ((v54 & 2) != 0)
  {
    uint64_t v59 = *(void *)(v51 + 24);
    *(unsigned char *)uint64_t v4 = 17;
    *(void *)((char *)v4 + 1) = v59;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    float v60 = *(void **)(v51 + 8);
    int v57 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v51 + 8);
    int v56 = v60;
    if (!v60) {
      goto LABEL_92;
    }
  }
  else
  {
    int v58 = *(void **)(v51 + 8);
    int v57 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v51 + 8);
    int v56 = v58;
    if (!v58) {
      goto LABEL_92;
    }
  }
  if (*v56 != v56[1]) {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v57, v4, a3);
  }
LABEL_92:
  int v63 = (void *)*((void *)this + 1);
  int v62 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v61 = v63;
  if (!v63 || *v61 == v61[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v62, v4, a3);
}

uint64_t sub_1000F1144(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 96);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    if ((v3 & 0xFF00) == 0) {
      goto LABEL_139;
    }
    goto LABEL_105;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_31;
    }
LABEL_14:
    uint64_t v7 = *(void *)(a1 + 16);
    if (v7)
    {
      int v8 = *(unsigned __int8 *)(v7 + 44);
      if (*(unsigned char *)(v7 + 44)) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v7 = *(void *)(qword_10047E938 + 16);
      int v8 = *(unsigned __int8 *)(v7 + 44);
      if (*(unsigned char *)(v7 + 44))
      {
LABEL_16:
        int v9 = (v8 << 31 >> 31) & 9;
        if ((v8 & 2) != 0) {
          v9 += 9;
        }
        if ((v8 & 4) != 0) {
          LODWORD(v10) = v9 + 9;
        }
        else {
          LODWORD(v10) = v9;
        }
        uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v7 + 8);
        uint64_t v12 = *(void **)(v7 + 8);
        if (!v12) {
          goto LABEL_28;
        }
LABEL_25:
        if (*v12 != v12[1])
        {
          unsigned int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v11, a2)+ v10);
          *(_DWORD *)(v7 + 40) = v10;
          if (v10 >= 0x80) {
            int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
          }
          else {
            int v13 = 1;
          }
          goto LABEL_30;
        }
LABEL_28:
        *(_DWORD *)(v7 + 40) = v10;
        int v13 = 1;
LABEL_30:
        uint64_t v4 = (v4 + v10 + v13 + 1);
        int v3 = *(_DWORD *)(a1 + 96);
        goto LABEL_31;
      }
    }
    LODWORD(v10) = 0;
    uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v7 + 8);
    uint64_t v12 = *(void **)(v7 + 8);
    if (!v12) {
      goto LABEL_28;
    }
    goto LABEL_25;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
  if ((v5 & 0x80000000) != 0)
  {
    uint64_t v4 = 11;
    if ((v3 & 2) != 0) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2);
      int v3 = *(_DWORD *)(a1 + 96);
      uint64_t v4 = (v6 + 1);
      if ((v3 & 2) == 0) {
        goto LABEL_31;
      }
      goto LABEL_14;
    }
    uint64_t v4 = 2;
    if ((v3 & 2) != 0) {
      goto LABEL_14;
    }
  }
LABEL_31:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_33;
    }
LABEL_57:
    uint64_t v21 = *(void *)(a1 + 32);
    if (v21)
    {
      uint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000ED334(v21, a2);
      if (v22 < 0x80) {
        goto LABEL_59;
      }
    }
    else
    {
      uint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000ED334(*(void *)(qword_10047E938 + 32), a2);
      if (v22 < 0x80)
      {
LABEL_59:
        uint64_t v4 = (v4 + v22 + 2);
        int v3 = *(_DWORD *)(a1 + 96);
        if ((v3 & 0x10) != 0) {
          goto LABEL_63;
        }
LABEL_34:
        if ((v3 & 0x20) == 0) {
          goto LABEL_35;
        }
LABEL_72:
        uint64_t v29 = *(void *)(a1 + 48);
        if (v29)
        {
          int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000EE92C(v29, a2);
          if (v30 < 0x80) {
            goto LABEL_74;
          }
        }
        else
        {
          int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000EE92C(*(void *)(qword_10047E938 + 48), a2);
          if (v30 < 0x80)
          {
LABEL_74:
            uint64_t v4 = (v4 + v30 + 2);
            int v3 = *(_DWORD *)(a1 + 96);
            if ((v3 & 0x40) != 0) {
              goto LABEL_78;
            }
LABEL_36:
            if ((v3 & 0x80) == 0) {
              goto LABEL_37;
            }
            goto LABEL_87;
          }
        }
        uint64_t v4 = v4
           + v30
           + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2)+ 1;
        int v3 = *(_DWORD *)(a1 + 96);
        if ((v3 & 0x40) != 0) {
          goto LABEL_78;
        }
        goto LABEL_36;
      }
    }
    uint64_t v4 = v4
       + v22
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 96);
    if ((v3 & 0x10) != 0) {
      goto LABEL_63;
    }
    goto LABEL_34;
  }
  uint64_t v14 = *(void *)(a1 + 24);
  if (v14)
  {
    int v15 = *(unsigned __int8 *)(v14 + 44);
    if (*(unsigned char *)(v14 + 44)) {
      goto LABEL_41;
    }
  }
  else
  {
    uint64_t v14 = *(void *)(qword_10047E938 + 24);
    int v15 = *(unsigned __int8 *)(v14 + 44);
    if (*(unsigned char *)(v14 + 44))
    {
LABEL_41:
      int v16 = (v15 << 31 >> 31) & 9;
      if ((v15 & 2) != 0) {
        v16 += 9;
      }
      if ((v15 & 4) != 0) {
        int v17 = v16 + 9;
      }
      else {
        int v17 = v16;
      }
      uint64_t v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v14 + 8);
      uint64_t v19 = *(void **)(v14 + 8);
      if (!v19) {
        goto LABEL_54;
      }
      goto LABEL_50;
    }
  }
  int v17 = 0;
  uint64_t v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v14 + 8);
  uint64_t v19 = *(void **)(v14 + 8);
  if (!v19) {
    goto LABEL_54;
  }
LABEL_50:
  if (*v19 != v19[1])
  {
    unsigned int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v18, a2)+ v17);
    *(_DWORD *)(v14 + 40) = v20;
    if (v20 >= 0x80)
    {
      uint64_t v4 = v4
         + v20
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 96);
      if ((v3 & 8) != 0) {
        goto LABEL_57;
      }
    }
    else
    {
      uint64_t v4 = (v4 + v20 + 2);
      int v3 = *(_DWORD *)(a1 + 96);
      if ((v3 & 8) != 0) {
        goto LABEL_57;
      }
    }
    goto LABEL_33;
  }
LABEL_54:
  *(_DWORD *)(v14 + 40) = v17;
  uint64_t v4 = (v4 + v17 + 2);
  int v3 = *(_DWORD *)(a1 + 96);
  if ((v3 & 8) != 0) {
    goto LABEL_57;
  }
LABEL_33:
  if ((v3 & 0x10) == 0) {
    goto LABEL_34;
  }
LABEL_63:
  uint64_t v23 = *(void *)(a1 + 40);
  int v24 = *(unsigned __int8 *)(v23 + 23);
  char v25 = v24;
  uint64_t v26 = *(void *)(v23 + 8);
  if ((v24 & 0x80u) == 0) {
    unint64_t v27 = *(unsigned __int8 *)(v23 + 23);
  }
  else {
    unint64_t v27 = v26;
  }
  if (v27 >= 0x80)
  {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v27, a2);
    int v24 = *(unsigned __int8 *)(v23 + 23);
    uint64_t v26 = *(void *)(v23 + 8);
    int v3 = *(_DWORD *)(a1 + 96);
    char v25 = *(unsigned char *)(v23 + 23);
  }
  else
  {
    int v28 = 1;
  }
  if (v25 < 0) {
    int v24 = v26;
  }
  uint64_t v4 = (v4 + v28 + v24 + 1);
  if ((v3 & 0x20) != 0) {
    goto LABEL_72;
  }
LABEL_35:
  if ((v3 & 0x40) == 0) {
    goto LABEL_36;
  }
LABEL_78:
  uint64_t v31 = *(void *)(a1 + 56);
  int v32 = *(unsigned __int8 *)(v31 + 23);
  char v33 = v32;
  uint64_t v34 = *(void *)(v31 + 8);
  if ((v32 & 0x80u) == 0) {
    unint64_t v35 = *(unsigned __int8 *)(v31 + 23);
  }
  else {
    unint64_t v35 = v34;
  }
  if (v35 >= 0x80)
  {
    int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v35, a2);
    int v32 = *(unsigned __int8 *)(v31 + 23);
    uint64_t v34 = *(void *)(v31 + 8);
    int v3 = *(_DWORD *)(a1 + 96);
    char v33 = *(unsigned char *)(v31 + 23);
  }
  else
  {
    int v36 = 1;
  }
  if (v33 < 0) {
    int v32 = v34;
  }
  uint64_t v4 = (v4 + v36 + v32 + 1);
  if ((v3 & 0x80) == 0)
  {
LABEL_37:
    if ((v3 & 0xFF00) == 0) {
      goto LABEL_139;
    }
    goto LABEL_105;
  }
LABEL_87:
  uint64_t v37 = *(void *)(a1 + 64);
  if (!v37) {
    uint64_t v37 = *(void *)(qword_10047E938 + 64);
  }
  unint64_t v38 = *(unsigned int *)(v37 + 24);
  if ((int)v38 >= 1)
  {
    uint64_t v39 = 0;
    do
    {
      int v41 = *(_DWORD **)(*(void *)(v37 + 16) + 8 * v39);
      unint64_t v42 = (5 * v41[6]);
      int v43 = (void *)*((void *)v41 + 1);
      if (v43 && *v43 != v43[1]) {
        unint64_t v42 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v41 + 2), a2)+ v42;
      }
      v41[8] = v42;
      if (v42 >= 0x80) {
        int v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v42, a2);
      }
      else {
        int v40 = 1;
      }
      unint64_t v38 = (v42 + v38 + v40);
      ++v39;
    }
    while (v39 < *(int *)(v37 + 24));
  }
  int v44 = *(void **)(v37 + 8);
  if (v44 && *v44 != v44[1]) {
    unint64_t v38 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v37 + 8), a2)+ v38;
  }
  *(_DWORD *)(v37 + 40) = v38;
  if (v38 >= 0x80) {
    int v45 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v38, a2);
  }
  else {
    int v45 = 1;
  }
  uint64_t v4 = (v4 + v38 + v45 + 1);
  int v3 = *(_DWORD *)(a1 + 96);
  if ((v3 & 0xFF00) != 0)
  {
LABEL_105:
    if ((v3 & 0x100) != 0)
    {
      uint64_t v46 = *(void *)(a1 + 72);
      if (!v46) {
        uint64_t v46 = *(void *)(qword_10047E938 + 72);
      }
      unint64_t v47 = *(unsigned int *)(v46 + 24);
      if ((int)v47 >= 1)
      {
        uint64_t v48 = 0;
        do
        {
          uint64_t v50 = *(_DWORD **)(*(void *)(v46 + 16) + 8 * v48);
          unint64_t v51 = (5 * v50[6]);
          unsigned int v52 = (void *)*((void *)v50 + 1);
          if (v52 && *v52 != v52[1]) {
            unint64_t v51 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v50 + 2), a2)+ v51;
          }
          v50[8] = v51;
          if (v51 >= 0x80) {
            int v49 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v51, a2);
          }
          else {
            int v49 = 1;
          }
          unint64_t v47 = (v51 + v47 + v49);
          ++v48;
        }
        while (v48 < *(int *)(v46 + 24));
      }
      int v53 = *(void **)(v46 + 8);
      if (v53 && *v53 != v53[1]) {
        unint64_t v47 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v46 + 8), a2)+ v47;
      }
      *(_DWORD *)(v46 + 40) = v47;
      if (v47 >= 0x80) {
        int v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v47, a2);
      }
      else {
        int v54 = 1;
      }
      uint64_t v4 = (v4 + v47 + v54 + 1);
      int v3 = *(_DWORD *)(a1 + 96);
    }
    if ((v3 & 0x200) != 0)
    {
      uint64_t v55 = *(void *)(a1 + 80);
      if (!v55) {
        uint64_t v55 = *(void *)(qword_10047E938 + 80);
      }
      int v56 = *(unsigned __int8 *)(v55 + 36);
      int v57 = (v56 << 31 >> 31) & 9;
      if ((v56 & 2) != 0) {
        v57 += 9;
      }
      if (*(unsigned char *)(v55 + 36)) {
        LODWORD(v58) = v57;
      }
      else {
        LODWORD(v58) = 0;
      }
      uint64_t v59 = *(void **)(v55 + 8);
      if (!v59 || *v59 == v59[1])
      {
        *(_DWORD *)(v55 + 32) = v58;
        int v60 = 1;
      }
      else
      {
        int v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v55 + 8), a2)+ v58);
        *(_DWORD *)(v55 + 32) = v58;
        if (v58 >= 0x80) {
          int v60 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v58, a2);
        }
        else {
          int v60 = 1;
        }
      }
      uint64_t v4 = (v4 + v58 + v60 + 1);
    }
  }
LABEL_139:
  int v61 = *(void **)(a1 + 8);
  if (v61 && *v61 != v61[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 92) = v4;
  return v4;
}

uint64_t sub_1000F179C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000EEE60((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000F187C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F1890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F18A4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000F1930()
{
  return 1;
}

uint64_t sub_1000F1938()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E5F58;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D5C8;
}

void sub_1000F19C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F19DC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(void *)(a1 + 24) = v6;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000F1A94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F1AA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F1ABC(uint64_t a1)
{
  *(void *)a1 = off_100455148;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000F1B10(uint64_t a1)
{
  *(void *)a1 = off_100455148;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000F1B78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_1000F1B80()
{
}

void sub_1000F1BE4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000F1C0C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 36))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1000F1C2C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacunsigned int k = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v9 = TagFallback & 7;
        if (v9 == 1)
        {
          unint64_t v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
            return 0;
          }
          goto LABEL_17;
        }
      }
      else
      {
        int v9 = TagFallback & 7;
      }
LABEL_22:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v9 = TagFallback & 7;
    if (v9 != 1) {
      goto LABEL_22;
    }
    unint64_t v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 16) = v12;
    *(_DWORD *)(a1 + 36) |= 1u;
    unsigned int v10 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 17)
    {
      *((void *)this + 1) = v10 + 1;
      unint64_t v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
        return 0;
      }
LABEL_17:
      *(void *)(a1 + 24) = v12;
      *(_DWORD *)(a1 + 36) |= 2u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1000F1DD8(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 36);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 2) == 0)
    {
LABEL_3:
      int v8 = *(void **)(v4 + 8);
      uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      unsigned int v6 = v8;
      if (!v8) {
        return result;
      }
      goto LABEL_7;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  int v9 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_7:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_1000F1E74(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = *(void *)(a1 + 24);
    *(unsigned char *)a2 = 17;
    *(void *)(a2 + 1) = v8;
    a2 += 9;
    int v9 = *(void **)(a1 + 8);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v5 = v9;
    if (!v9) {
      return a2;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  *(unsigned char *)a2 = 9;
  *(void *)(a2 + 1) = v7;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 36) & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  unsigned int v6 = *(void **)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_7:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_1000F1F4C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 36);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 36)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

uint64_t sub_1000F1FB4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000F19DC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000F2094(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F20A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F20BC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000F2148()
{
  return 1;
}

uint64_t sub_1000F2150()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E5F58;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D5D8;
}

void sub_1000F21E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F21F4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
    LOBYTE(v4) = *(unsigned char *)(a2 + 44);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 44);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047E948 + 16);
    }
    sub_1000F19DC(v5, v6);
    int v4 = *(_DWORD *)(a2 + 44);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(void *)(a1 + 24) = v7;
    int v4 = *(_DWORD *)(a2 + 44);
  }
  if ((v4 & 4) != 0)
  {
    *(_DWORD *)(a1 + 44) |= 4u;
    uint64_t v8 = *(void *)(a1 + 32);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = *(void *)(a2 + 32);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10047E948 + 32);
    }
    sub_1000E8500(v8, v9);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000F23BC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000F23E4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000F240C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F2420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F2434(void *a1)
{
  *a1 = off_1004551F8;
  if ((void *)qword_10047E948 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = a1[4];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000F24F4(void *a1)
{
  *a1 = off_1004551F8;
  if ((void *)qword_10047E948 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = a1[4];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000F25C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1000F25D0()
{
}

void sub_1000F2634()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000F265C(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 44))
  {
    if (*(unsigned char *)(this + 44))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 36))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 28) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(void *)(v1 + 24) = 0;
    if ((*(unsigned char *)(v1 + 44) & 4) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
  }
  uint64_t v5 = *(void *)(v1 + 8);
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 9) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_1000F270C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacunsigned int k = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_23;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v12 = *(void *)(a1 + 16);
        if (!v12) {
          operator new();
        }
        v34[0] = 0;
        int v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v34))return 0; {
        }
          }
        else
        {
          v34[0] = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        int v14 = *((_DWORD *)this + 14);
        int v15 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34[0]);
        if (!sub_1000F1C2C(v12, this, v17, v18) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
        int v19 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)this + 14) = v21;
        }
        uint64_t v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 < *((void *)this + 2) && *v22 == 17)
        {
          *((void *)this + 1) = v22 + 1;
          *(void *)uint64_t v34 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v34) & 1) == 0)return 0; {
          goto LABEL_35;
          }
        }
      }
      if (v9 != 2) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 1) {
        goto LABEL_23;
      }
      *(void *)uint64_t v34 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v34) & 1) == 0)return 0; {
LABEL_35:
      }
      *(void *)(a1 + 24) = *(void *)v34;
      int v23 = *(_DWORD *)(a1 + 44) | 2;
      *(_DWORD *)(a1 + 44) = v23;
      int v24 = (unsigned char *)*((void *)this + 1);
      if ((unint64_t)v24 < *((void *)this + 2) && *v24 == 26)
      {
        *((void *)this + 1) = v24 + 1;
        *(_DWORD *)(a1 + 44) = v23 | 4;
        uint64_t v11 = *(void *)(a1 + 32);
        if (!v11) {
LABEL_38:
        }
          operator new();
LABEL_39:
        v34[0] = 0;
        char v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v34))return 0; {
        }
          }
        else
        {
          v34[0] = *v25;
          *((void *)this + 1) = v25 + 1;
        }
        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34[0]);
        if (!sub_1000E877C(v11, this, v29, v30) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v31 = *((_DWORD *)this + 14);
        BOOL v20 = __OFSUB__(v31, 1);
        int v32 = v31 - 1;
        if (v32 < 0 == v20) {
          *((_DWORD *)this + 14) = v32;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v9 == 3)
    {
      int v10 = TagFallback & 7;
      if (v10 == 2)
      {
        *(_DWORD *)(a1 + 44) |= 4u;
        uint64_t v11 = *(void *)(a1 + 32);
        if (!v11) {
          goto LABEL_38;
        }
        goto LABEL_39;
      }
    }
    else
    {
      int v10 = TagFallback & 7;
    }
LABEL_23:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_1000F2AC8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000F2AF0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000F2B18(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 44);
      if ((v6 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047E948 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 44);
      if ((v6 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 44) & 4) == 0)
  {
LABEL_4:
    unsigned int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_11:
  uint64_t v11 = *(void *)(v5 + 32);
  if (v11)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v11, a2, a4);
    uint64_t v12 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v12;
    if (!v12) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(qword_10047E948 + 32), a2, a4);
    int v13 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v13;
    if (!v13) {
      return result;
    }
  }
LABEL_15:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

unsigned char *sub_1000F2C20(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  if ((*((unsigned char *)this + 44) & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 2);
  if (v4)
  {
    *a2 = 10;
    unsigned int v5 = a2 + 1;
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v4 + 32);
    if (v6 <= 0x7F) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(qword_10047E948 + 16);
    *a2 = 10;
    unsigned int v5 = a2 + 1;
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v4 + 32);
    if (v6 <= 0x7F)
    {
LABEL_4:
      a2[1] = (_BYTE)v6;
      a2 += 2;
      int v7 = *(_DWORD *)(v4 + 36);
      if ((v7 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
  }
  a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, v5, a3);
  int v7 = *(_DWORD *)(v4 + 36);
  if (v7)
  {
LABEL_8:
    uint64_t v8 = *(void *)(v4 + 16);
    *a2 = 9;
    *(void *)(a2 + 1) = v8;
    a2 += 9;
    int v7 = *(_DWORD *)(v4 + 36);
  }
LABEL_9:
  if ((v7 & 2) != 0)
  {
    uint64_t v12 = *(void *)(v4 + 24);
    *a2 = 17;
    *(void *)(a2 + 1) = v12;
    a2 += 9;
    int v13 = *(void **)(v4 + 8);
    uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    unsigned int v9 = v13;
    if (!v13) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v11 = *(void **)(v4 + 8);
    uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    unsigned int v9 = v11;
    if (!v11) {
      goto LABEL_15;
    }
  }
  if (*v9 != v9[1]) {
    a2 = (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
LABEL_15:
  int v14 = *((_DWORD *)this + 11);
  if ((v14 & 2) != 0)
  {
    uint64_t v18 = *((void *)this + 3);
    *a2 = 17;
    *(void *)(a2 + 1) = v18;
    a2 += 9;
    if ((*((_DWORD *)this + 11) & 4) == 0)
    {
LABEL_17:
      uint64_t v17 = (void *)*((void *)this + 1);
      int v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      int v15 = v17;
      if (!v17) {
        return a2;
      }
      goto LABEL_26;
    }
  }
  else if ((v14 & 4) == 0)
  {
    goto LABEL_17;
  }
  uint64_t v19 = *((void *)this + 4);
  if (v19)
  {
    *a2 = 26;
    unsigned int v20 = a2 + 1;
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v19 + 40);
    if (v21 <= 0x7F) {
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v19 = *(void *)(qword_10047E948 + 32);
    *a2 = 26;
    unsigned int v20 = a2 + 1;
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v19 + 40);
    if (v21 <= 0x7F)
    {
LABEL_22:
      a2[1] = (_BYTE)v21;
      a2 = (unsigned char *)sub_1000E8A40(v19, (uint64_t)(a2 + 2), a3);
      uint64_t v22 = (void *)*((void *)this + 1);
      int v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      int v15 = v22;
      if (!v22) {
        return a2;
      }
      goto LABEL_26;
    }
  }
  uint64_t v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, v20, a3);
  a2 = (unsigned char *)sub_1000E8A40(v19, v23, v24);
  char v25 = (void *)*((void *)this + 1);
  int v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v15 = v25;
  if (!v25) {
    return a2;
  }
LABEL_26:
  if (*v15 == v15[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v16, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1000F2EA0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 44))
  {
    if ((*(unsigned char *)(a1 + 44) & 1) == 0)
    {
      if ((*(unsigned char *)(a1 + 44) & 2) != 0) {
        uint64_t v3 = 9;
      }
      else {
        uint64_t v3 = 0;
      }
      if ((*(unsigned char *)(a1 + 44) & 4) == 0) {
        goto LABEL_44;
      }
LABEL_27:
      uint64_t v11 = *(void *)(a1 + 32);
      if (v11)
      {
        int v12 = *(unsigned __int8 *)(v11 + 44);
        if (*(unsigned char *)(v11 + 44)) {
          goto LABEL_29;
        }
      }
      else
      {
        uint64_t v11 = *(void *)(qword_10047E948 + 32);
        int v12 = *(unsigned __int8 *)(v11 + 44);
        if (*(unsigned char *)(v11 + 44))
        {
LABEL_29:
          int v13 = (v12 << 31 >> 31) & 9;
          if ((v12 & 2) != 0) {
            v13 += 9;
          }
          if ((v12 & 4) != 0) {
            LODWORD(v14) = v13 + 9;
          }
          else {
            LODWORD(v14) = v13;
          }
          int v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v11 + 8);
          int v16 = *(void **)(v11 + 8);
          if (!v16) {
            goto LABEL_41;
          }
LABEL_38:
          if (*v16 != v16[1])
          {
            int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v15, a2)+ v14);
            *(_DWORD *)(v11 + 40) = v14;
            if (v14 >= 0x80) {
              int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
            }
            else {
              int v17 = 1;
            }
            goto LABEL_43;
          }
LABEL_41:
          *(_DWORD *)(v11 + 40) = v14;
          int v17 = 1;
LABEL_43:
          uint64_t v3 = (v3 + v14 + v17 + 1);
          goto LABEL_44;
        }
      }
      LODWORD(v14) = 0;
      int v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v11 + 8);
      int v16 = *(void **)(v11 + 8);
      if (!v16) {
        goto LABEL_41;
      }
      goto LABEL_38;
    }
    uint64_t v4 = *(void *)(a1 + 16);
    if (v4)
    {
      int v5 = *(unsigned __int8 *)(v4 + 36);
      if (*(unsigned char *)(v4 + 36)) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v4 = *(void *)(qword_10047E948 + 16);
      int v5 = *(unsigned __int8 *)(v4 + 36);
      if (*(unsigned char *)(v4 + 36))
      {
LABEL_11:
        if ((v5 & 2) != 0) {
          LODWORD(v6) = ((v5 << 31 >> 31) & 9) + 9;
        }
        else {
          LODWORD(v6) = (v5 << 31 >> 31) & 9;
        }
        int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
        uint64_t v8 = *(void **)(v4 + 8);
        if (!v8) {
          goto LABEL_21;
        }
LABEL_18:
        if (*v8 != v8[1])
        {
          int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v7, a2)+ v6);
          *(_DWORD *)(v4 + 32) = v6;
          if (v6 >= 0x80) {
            int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
          }
          else {
            int v9 = 1;
          }
          goto LABEL_23;
        }
LABEL_21:
        *(_DWORD *)(v4 + 32) = v6;
        int v9 = 1;
LABEL_23:
        int v10 = *(_DWORD *)(a1 + 44);
        if ((v10 & 2) != 0) {
          uint64_t v3 = (v6 + v9 + 10);
        }
        else {
          uint64_t v3 = (v6 + v9 + 1);
        }
        if ((v10 & 4) == 0) {
          goto LABEL_44;
        }
        goto LABEL_27;
      }
    }
    LODWORD(v6) = 0;
    int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    uint64_t v8 = *(void **)(v4 + 8);
    if (!v8) {
      goto LABEL_21;
    }
    goto LABEL_18;
  }
  uint64_t v3 = 0;
LABEL_44:
  uint64_t v18 = *(void **)(a1 + 8);
  if (v18 && *v18 != v18[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_1000F3080(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000F21F4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000F3160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F3174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F3188(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000F3214()
{
  return 1;
}

uint64_t sub_1000F321C()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E5F58;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D5E8;
}

void sub_1000F32AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F32C0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
    LOBYTE(v4) = *(unsigned char *)(a2 + 80);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 80);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 80) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047E950 + 16);
    }
    sub_1000E8500(v5, v6);
    int v4 = *(_DWORD *)(a2 + 80);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 80) |= 2u;
    uint64_t v7 = *(void *)(a1 + 24);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10047E950 + 24);
    }
    sub_1000EAF18(v7, v8);
    int v4 = *(_DWORD *)(a2 + 80);
  }
  if ((v4 & 4) != 0)
  {
    *(_DWORD *)(a1 + 80) |= 4u;
    uint64_t v9 = *(void *)(a1 + 32);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = *(void *)(a2 + 32);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_10047E950 + 32);
    }
    sub_1000EAF18(v9, v10);
    int v4 = *(_DWORD *)(a2 + 80);
  }
  if ((v4 & 8) != 0)
  {
    *(_DWORD *)(a1 + 80) |= 8u;
    uint64_t v11 = *(void *)(a1 + 40);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 40);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_10047E950 + 40);
    }
    sub_1000E98DC(v11, v12);
    int v4 = *(_DWORD *)(a2 + 80);
  }
  if ((v4 & 0x10) != 0)
  {
    uint64_t v13 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 80) |= 0x10u;
    *(void *)(a1 + 48) = v13;
    int v4 = *(_DWORD *)(a2 + 80);
    if ((v4 & 0x20) == 0)
    {
LABEL_27:
      if ((v4 & 0x40) == 0) {
        goto LABEL_28;
      }
LABEL_32:
      *(_DWORD *)(a1 + 80) |= 0x40u;
      uint64_t v15 = *(void *)(a1 + 56);
      if (!v15) {
        operator new();
      }
      uint64_t v16 = *(void *)(a2 + 56);
      if (v16)
      {
        sub_1000F21F4(v15, v16);
        if ((*(_DWORD *)(a2 + 80) & 0x80) == 0) {
          return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
        }
      }
      else
      {
        sub_1000F21F4(v15, *(void *)(qword_10047E950 + 56));
        if ((*(_DWORD *)(a2 + 80) & 0x80) == 0) {
          return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
        }
      }
      goto LABEL_42;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_27;
  }
  int v14 = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 80) |= 0x20u;
  *(_DWORD *)(a1 + 72) = v14;
  int v4 = *(_DWORD *)(a2 + 80);
  if ((v4 & 0x40) != 0) {
    goto LABEL_32;
  }
LABEL_28:
  if ((v4 & 0x80) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
LABEL_42:
  *(_DWORD *)(a1 + 80) |= 0x80u;
  uint64_t v17 = *(void *)(a1 + 64);
  if (!v17) {
    operator new();
  }
  uint64_t v18 = *(void *)(a2 + 64);
  if (!v18) {
    uint64_t v18 = *(void *)(qword_10047E950 + 64);
  }
  sub_1000F5618(v17, v18);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000F36F8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000F3720()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000F3748()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000F3770()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000F379C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000F37C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F37D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1000F37EC(void *result)
{
  if ((void *)qword_10047E950 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[4];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[5];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[7];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t result = (void *)v1[8];
    if (result)
    {
      uint64_t v7 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v7();
    }
  }
  return result;
}

void sub_1000F393C(void *a1)
{
  *a1 = off_1004552A8;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_1000F37EC(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000F399C(void *a1)
{
  *a1 = off_1004552A8;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_1000F37EC(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000F3A10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 76) = a2;
  return result;
}

void sub_1000F3A18()
{
}

void sub_1000F3A90()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000F3AB8(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 80))
  {
    if (*(unsigned char *)(this + 80))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 80) & 2) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 24);
      if (v3)
      {
        if (*(int *)(v3 + 24) >= 1)
        {
          uint64_t v4 = 0;
          do
          {
            uint64_t v5 = *(void *)(*(void *)(v3 + 16) + 8 * v4);
            this = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 32))(v5);
            ++v4;
          }
          while (v4 < *(int *)(v3 + 24));
        }
        uint64_t v7 = *(void *)(v3 + 8);
        uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v3 + 8);
        *((_DWORD *)v6 + 4) = 0;
        *((_DWORD *)v6 + 9) = 0;
        if (v7) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 80) & 4) != 0)
    {
      uint64_t v8 = *(void *)(v1 + 32);
      if (v8)
      {
        if (*(int *)(v8 + 24) >= 1)
        {
          uint64_t v9 = 0;
          do
          {
            uint64_t v10 = *(void *)(*(void *)(v8 + 16) + 8 * v9);
            this = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 32))(v10);
            ++v9;
          }
          while (v9 < *(int *)(v8 + 24));
        }
        uint64_t v12 = *(void *)(v8 + 8);
        uint64_t v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v8 + 8);
        *((_DWORD *)v11 + 4) = 0;
        *((_DWORD *)v11 + 9) = 0;
        if (v12) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v11);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 80) & 8) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this)
      {
        uint64_t v13 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 16) = 0;
        *(_DWORD *)(this + 28) = 0;
        if (v13) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(void *)(v1 + 48) = 0;
    *(_DWORD *)(v1 + 72) = -1;
    int v14 = *(_DWORD *)(v1 + 80);
    if ((v14 & 0x40) != 0)
    {
      this = *(void *)(v1 + 56);
      if (this)
      {
        this = sub_1000F265C(this);
        int v14 = *(_DWORD *)(v1 + 80);
      }
    }
    if ((v14 & 0x80) != 0)
    {
      uint64_t v15 = *(void *)(v1 + 64);
      if (v15)
      {
        if (*(unsigned char *)(v15 + 28))
        {
          uint64_t v16 = *(void *)(v15 + 16);
          if (v16)
          {
            if (*(unsigned char *)(v16 + 52)) {
              *(void *)(v16 + 16) = 0;
            }
            if (*(int *)(v16 + 32) >= 1)
            {
              uint64_t v17 = 0;
              do
              {
                uint64_t v18 = *(void *)(*(void *)(v16 + 24) + 8 * v17);
                this = (*(uint64_t (**)(uint64_t))(*(void *)v18 + 32))(v18);
                ++v17;
              }
              while (v17 < *(int *)(v16 + 32));
            }
            uint64_t v20 = *(void *)(v16 + 8);
            uint64_t v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v16 + 8);
            *((_DWORD *)v19 + 6) = 0;
            *((_DWORD *)v19 + 11) = 0;
            if (v20) {
              this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v19);
            }
          }
        }
        uint64_t v22 = *(void *)(v15 + 8);
        int v21 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v15 + 8);
        *((_DWORD *)v21 + 5) = 0;
        if (v22) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v21);
        }
      }
    }
  }
  uint64_t v24 = *(void *)(v1 + 8);
  uint64_t v23 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v23 + 18) = 0;
  if (v24)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v23);
  }
  return this;
}

uint64_t sub_1000F3D14(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 28))
  {
    uint64_t v2 = *(void *)(this + 16);
    if (v2)
    {
      if (*(unsigned char *)(v2 + 52)) {
        *(void *)(v2 + 16) = 0;
      }
      if (*(int *)(v2 + 32) >= 1)
      {
        uint64_t v3 = 0;
        do
        {
          uint64_t v4 = *(void *)(*(void *)(v2 + 24) + 8 * v3);
          this = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32))(v4);
          ++v3;
        }
        while (v3 < *(int *)(v2 + 32));
      }
      uint64_t v6 = *(void *)(v2 + 8);
      uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v2 + 8);
      *((_DWORD *)v5 + 6) = 0;
      *((_DWORD *)v5 + 11) = 0;
      if (v6) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
      }
    }
  }
  uint64_t v8 = *(void *)(v1 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v7 + 5) = 0;
  if (v8)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v7);
  }
  return this;
}

uint64_t sub_1000F3DEC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacunsigned int k = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 80) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        v76[0] = 0;
        uint64_t v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76))return 0; {
        }
          }
        else
        {
          v76[0] = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        if (!sub_1000E877C(v10, this, v25, v26) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
        int v27 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v27, 1);
        int v29 = v27 - 1;
        if (v29 < 0 == v28) {
          *((_DWORD *)this + 14) = v29;
        }
        int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 18) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
        *(_DWORD *)(a1 + 80) |= 2u;
        uint64_t v12 = *(int **)(a1 + 24);
        if (!v12) {
LABEL_49:
        }
          operator new();
LABEL_20:
        v76[0] = 0;
        uint64_t v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76))return 0; {
        }
          }
        else
        {
          v76[0] = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        int v31 = *((_DWORD *)this + 14);
        int v32 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v31 + 1;
        if (v31 >= v32) {
          return 0;
        }
        int v33 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        if (!sub_1000EB2A8(v12, this, v34, v35) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v33);
        int v36 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v36, 1);
        int v37 = v36 - 1;
        if (v37 < 0 == v28) {
          *((_DWORD *)this + 14) = v37;
        }
        unint64_t v38 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v38 >= *((void *)this + 2) || *v38 != 26) {
          continue;
        }
        *((void *)this + 1) = v38 + 1;
        *(_DWORD *)(a1 + 80) |= 4u;
        int v14 = *(int **)(a1 + 32);
        if (!v14) {
LABEL_61:
        }
          operator new();
LABEL_24:
        v76[0] = 0;
        uint64_t v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76))return 0; {
        }
          }
        else
        {
          v76[0] = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v39 = *((_DWORD *)this + 14);
        int v40 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v39 + 1;
        if (v39 >= v40) {
          return 0;
        }
        int v41 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        if (!sub_1000EB2A8(v14, this, v42, v43) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v41);
        int v44 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v44, 1);
        int v45 = v44 - 1;
        if (v45 < 0 == v28) {
          *((_DWORD *)this + 14) = v45;
        }
        uint64_t v46 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 != 34) {
          continue;
        }
        *((void *)this + 1) = v46 + 1;
        *(_DWORD *)(a1 + 80) |= 8u;
        uint64_t v16 = *(void *)(a1 + 40);
        if (!v16) {
LABEL_73:
        }
          operator new();
LABEL_28:
        v76[0] = 0;
        uint64_t v17 = (char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76))return 0; {
        }
          }
        else
        {
          v76[0] = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        int v47 = *((_DWORD *)this + 14);
        int v48 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v47 + 1;
        if (v47 >= v48) {
          return 0;
        }
        int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        if (!sub_1000E9C24(v16, this, v50, v51) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
        int v52 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v52, 1);
        int v53 = v52 - 1;
        if (v53 < 0 == v28) {
          *((_DWORD *)this + 14) = v53;
        }
        int v54 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v54 >= *((void *)this + 2) || *v54 != 41) {
          continue;
        }
        *((void *)this + 1) = v54 + 1;
        *(void *)int v76 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v76) & 1) == 0)return 0; {
LABEL_85:
        }
        *(void *)(a1 + 48) = *(void *)v76;
        *(_DWORD *)(a1 + 80) |= 0x10u;
        uint64_t v55 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v55 >= v18 || *v55 != 48) {
          continue;
        }
        uint64_t v19 = v55 + 1;
        *((void *)this + 1) = v19;
LABEL_88:
        v76[0] = 0;
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76);
          if (!result) {
            return result;
          }
          signed int v56 = v76[0];
          if (v76[0] + 1 <= 3)
          {
LABEL_91:
            *(_DWORD *)(a1 + 80) |= 0x20u;
            *(_DWORD *)(a1 + 72) = v56;
            goto LABEL_95;
          }
        }
        else
        {
          signed int v56 = *v19;
          *((void *)this + 1) = v19 + 1;
          if ((v56 + 1) <= 3) {
            goto LABEL_91;
          }
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 6, v56);
LABEL_95:
        int v58 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v58 >= *((void *)this + 2) || *v58 != 58) {
          continue;
        }
        *((void *)this + 1) = v58 + 1;
        *(_DWORD *)(a1 + 80) |= 0x40u;
        uint64_t v20 = *(void *)(a1 + 56);
        if (!v20) {
LABEL_98:
        }
          operator new();
LABEL_34:
        v76[0] = 0;
        int v21 = (char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76))return 0; {
        }
          }
        else
        {
          v76[0] = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        int v59 = *((_DWORD *)this + 14);
        int v60 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v59 + 1;
        if (v59 >= v60) {
          return 0;
        }
        int v61 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
        if (!sub_1000F270C(v20, this, v62, v63) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v61);
        int v64 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v64, 1);
        int v65 = v64 - 1;
        if (v65 < 0 == v28) {
          *((_DWORD *)this + 14) = v65;
        }
        int v66 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v66 >= *((void *)this + 2) || *v66 != 66) {
          continue;
        }
        *((void *)this + 1) = v66 + 1;
LABEL_110:
        *(_DWORD *)(a1 + 80) |= 0x80u;
        uint64_t v67 = *(void *)(a1 + 64);
        if (!v67) {
          operator new();
        }
        v76[0] = 0;
        uint64_t v68 = (char *)*((void *)this + 1);
        if ((unint64_t)v68 >= *((void *)this + 2) || *v68 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v76))return 0; {
        }
          }
        else
        {
          v76[0] = *v68;
          *((void *)this + 1) = v68 + 1;
        }
        int v69 = *((_DWORD *)this + 14);
        int v70 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v69 + 1;
        if (v69 < v70)
        {
          int v71 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76[0]);
          if (sub_1000F6770(v67, this, v72, v73))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v71);
              int v74 = *((_DWORD *)this + 14);
              BOOL v28 = __OFSUB__(v74, 1);
              int v75 = v74 - 1;
              if (v75 < 0 == v28) {
                *((_DWORD *)this + 14) = v75;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 80) |= 2u;
        uint64_t v12 = *(int **)(a1 + 24);
        if (v12) {
          goto LABEL_20;
        }
        goto LABEL_49;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 80) |= 4u;
        int v14 = *(int **)(a1 + 32);
        if (v14) {
          goto LABEL_24;
        }
        goto LABEL_61;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 80) |= 8u;
        uint64_t v16 = *(void *)(a1 + 40);
        if (v16) {
          goto LABEL_28;
        }
        goto LABEL_73;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_37;
        }
        *(void *)int v76 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v76) & 1) == 0)return 0; {
        goto LABEL_85;
        }
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_88;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 80) |= 0x40u;
        uint64_t v20 = *(void *)(a1 + 56);
        if (v20) {
          goto LABEL_34;
        }
        goto LABEL_98;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_37;
        }
        goto LABEL_110;
      default:
        int v9 = TagFallback & 7;
LABEL_37:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_1000F4760()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000F4788()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000F47DC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000F4804()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000F484C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 80);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_15:
    uint64_t v11 = *(void *)(v5 + 24);
    if (v11)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v11, a2, a4);
      int v6 = *(_DWORD *)(v5 + 80);
      if ((v6 & 4) != 0) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(qword_10047E950 + 24), a2, a4);
      int v6 = *(_DWORD *)(v5 + 80);
      if ((v6 & 4) != 0) {
        goto LABEL_19;
      }
    }
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_23:
    uint64_t v13 = *(void *)(v5 + 40);
    if (v13)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v13, a2, a4);
      int v6 = *(_DWORD *)(v5 + 80);
      if ((v6 & 0x10) != 0) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(qword_10047E950 + 40), a2, a4);
      int v6 = *(_DWORD *)(v5 + 80);
      if ((v6 & 0x10) != 0) {
        goto LABEL_27;
      }
    }
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
  uint64_t v10 = *(void *)(result + 16);
  if (v10)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
    int v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 2) != 0) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047E950 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 2) != 0) {
      goto LABEL_15;
    }
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    goto LABEL_4;
  }
LABEL_19:
  uint64_t v12 = *(void *)(v5 + 32);
  if (v12)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v12, a2, a4);
    int v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 8) != 0) {
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(qword_10047E950 + 32), a2, a4);
    int v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 8) != 0) {
      goto LABEL_23;
    }
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_27:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_29:
    uint64_t v14 = *(void *)(v5 + 56);
    if (v14)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v14, a2, a4);
      if ((*(_DWORD *)(v5 + 80) & 0x80) != 0) {
        goto LABEL_33;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(qword_10047E950 + 56), a2, a4);
      if ((*(_DWORD *)(v5 + 80) & 0x80) != 0) {
        goto LABEL_33;
      }
    }
LABEL_9:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_37;
  }
LABEL_28:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 72), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x40) != 0) {
    goto LABEL_29;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    goto LABEL_9;
  }
LABEL_33:
  uint64_t v15 = *(void *)(v5 + 64);
  if (v15)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v15, a2, a4);
    uint64_t v16 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v16;
    if (!v16) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(qword_10047E950 + 64), a2, a4);
    uint64_t v17 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v17;
    if (!v17) {
      return result;
    }
  }
LABEL_37:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000F4A80(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 20);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_12:
    uint64_t v11 = (unsigned int *)*((void *)this + 3);
    if (v11)
    {
      *(unsigned char *)uint64_t v3 = 18;
      unsigned int v12 = v3 + 1;
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[10];
      if (v13 <= 0x7F) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v11 = *(unsigned int **)(qword_10047E950 + 24);
      *(unsigned char *)uint64_t v3 = 18;
      unsigned int v12 = v3 + 1;
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[10];
      if (v13 <= 0x7F)
      {
LABEL_14:
        *((unsigned char *)v3 + 1) = (_BYTE)v13;
        uint64_t v3 = sub_1000EB5D4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2), a3);
        int v5 = *((_DWORD *)this + 20);
        if ((v5 & 4) != 0) {
          goto LABEL_18;
        }
LABEL_4:
        if ((v5 & 8) == 0) {
          goto LABEL_35;
        }
        goto LABEL_24;
      }
    }
    uint64_t v14 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v12, a3);
    uint64_t v3 = sub_1000EB5D4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v14, v15);
    int v5 = *((_DWORD *)this + 20);
    if ((v5 & 4) != 0) {
      goto LABEL_18;
    }
    goto LABEL_4;
  }
  uint64_t v6 = *((void *)this + 2);
  if (v6)
  {
    *(unsigned char *)a2 = 10;
    unsigned int v7 = a2 + 1;
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 40);
    if (v8 <= 0x7F) {
      goto LABEL_8;
    }
LABEL_11:
    uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000E8A40(v6, v9, v10);
    int v5 = *((_DWORD *)this + 20);
    if ((v5 & 2) != 0) {
      goto LABEL_12;
    }
    goto LABEL_3;
  }
  uint64_t v6 = *(void *)(qword_10047E950 + 16);
  *(unsigned char *)a2 = 10;
  unsigned int v7 = a2 + 1;
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 40);
  if (v8 > 0x7F) {
    goto LABEL_11;
  }
LABEL_8:
  *((unsigned char *)v3 + 1) = (_BYTE)v8;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000E8A40(v6, (uint64_t)v3 + 2, a3);
  int v5 = *((_DWORD *)this + 20);
  if ((v5 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    goto LABEL_4;
  }
LABEL_18:
  uint64_t v16 = (unsigned int *)*((void *)this + 4);
  if (v16)
  {
    *(unsigned char *)uint64_t v3 = 26;
    unsigned int v17 = v3 + 1;
    unint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[10];
    if (v18 <= 0x7F) {
      goto LABEL_20;
    }
LABEL_23:
    uint64_t v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, v17, a3);
    uint64_t v3 = sub_1000EB5D4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, v19, v20);
    if ((*((_DWORD *)this + 20) & 8) == 0) {
      goto LABEL_35;
    }
    goto LABEL_24;
  }
  uint64_t v16 = *(unsigned int **)(qword_10047E950 + 32);
  *(unsigned char *)uint64_t v3 = 26;
  unsigned int v17 = v3 + 1;
  unint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[10];
  if (v18 > 0x7F) {
    goto LABEL_23;
  }
LABEL_20:
  *((unsigned char *)v3 + 1) = (_BYTE)v18;
  uint64_t v3 = sub_1000EB5D4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2), a3);
  if ((*((_DWORD *)this + 20) & 8) == 0) {
    goto LABEL_35;
  }
LABEL_24:
  uint64_t v21 = *((void *)this + 5);
  if (v21)
  {
    *(unsigned char *)uint64_t v3 = 34;
    unsigned int v22 = v3 + 1;
    int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v21 + 32);
    if (v23 <= 0x7F) {
      goto LABEL_26;
    }
LABEL_29:
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, v22, a3);
    if (*(int *)(v21 + 24) < 1) {
      goto LABEL_32;
    }
    goto LABEL_30;
  }
  uint64_t v21 = *(void *)(qword_10047E950 + 40);
  *(unsigned char *)uint64_t v3 = 34;
  unsigned int v22 = v3 + 1;
  int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v21 + 32);
  if (v23 > 0x7F) {
    goto LABEL_29;
  }
LABEL_26:
  *((unsigned char *)v3 + 1) = (_BYTE)v23;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  if (*(int *)(v21 + 24) < 1) {
    goto LABEL_32;
  }
LABEL_30:
  uint64_t v24 = 0;
  do
  {
    uint64_t v25 = *(void *)(*(void *)(v21 + 16) + 8 * v24);
    *(unsigned char *)uint64_t v3 = 9;
    *(void *)((char *)v3 + 1) = v25;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
    ++v24;
  }
  while (v24 < *(int *)(v21 + 24));
LABEL_32:
  BOOL v28 = *(void **)(v21 + 8);
  int v27 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v21 + 8);
  int v26 = v28;
  if (v28 && *v26 != v26[1]) {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v27, v3, a3);
  }
LABEL_35:
  int v29 = *((_DWORD *)this + 20);
  if ((v29 & 0x10) == 0)
  {
    if ((v29 & 0x20) == 0) {
      goto LABEL_37;
    }
LABEL_41:
    int v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 18);
    *(unsigned char *)uint64_t v3 = 48;
    unint64_t v33 = (unint64_t)v3 + 1;
    if ((v32 & 0x80000000) != 0)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v32, v33, a3);
      int v30 = *((_DWORD *)this + 20);
      if ((v30 & 0x40) != 0) {
        goto LABEL_48;
      }
    }
    else if (v32 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v32, v33, a3);
      int v30 = *((_DWORD *)this + 20);
      if ((v30 & 0x40) != 0) {
        goto LABEL_48;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v32;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      int v30 = *((_DWORD *)this + 20);
      if ((v30 & 0x40) != 0) {
        goto LABEL_48;
      }
    }
LABEL_38:
    if ((v30 & 0x80) == 0) {
      goto LABEL_69;
    }
    goto LABEL_54;
  }
  uint64_t v31 = *((void *)this + 6);
  *(unsigned char *)uint64_t v3 = 41;
  *(void *)((char *)v3 + 1) = v31;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  if ((*((_DWORD *)this + 20) & 0x20) != 0) {
    goto LABEL_41;
  }
LABEL_37:
  int v30 = *((_DWORD *)this + 20);
  if ((v30 & 0x40) == 0) {
    goto LABEL_38;
  }
LABEL_48:
  uint64_t v34 = (unsigned int *)*((void *)this + 7);
  if (v34)
  {
    *(unsigned char *)uint64_t v3 = 58;
    unsigned int v35 = v3 + 1;
    int v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34[10];
    if (v36 <= 0x7F) {
      goto LABEL_50;
    }
  }
  else
  {
    uint64_t v34 = *(unsigned int **)(qword_10047E950 + 56);
    *(unsigned char *)uint64_t v3 = 58;
    unsigned int v35 = v3 + 1;
    int v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34[10];
    if (v36 <= 0x7F)
    {
LABEL_50:
      *((unsigned char *)v3 + 1) = (_BYTE)v36;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000F2C20((wireless_diagnostics::google::protobuf::internal::WireFormat *)v34, (unsigned char *)v3 + 2, a3);
      if ((*((_DWORD *)this + 20) & 0x80) == 0) {
        goto LABEL_69;
      }
      goto LABEL_54;
    }
  }
  int v37 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v36, v35, a3);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000F2C20((wireless_diagnostics::google::protobuf::internal::WireFormat *)v34, v37, v38);
  if ((*((_DWORD *)this + 20) & 0x80) == 0) {
    goto LABEL_69;
  }
LABEL_54:
  uint64_t v39 = *((void *)this + 8);
  if (v39)
  {
    *(unsigned char *)uint64_t v3 = 66;
    unsigned int v40 = v3 + 1;
    int v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v39 + 24);
    if (v41 <= 0x7F) {
      goto LABEL_56;
    }
  }
  else
  {
    uint64_t v39 = *(void *)(qword_10047E950 + 64);
    *(unsigned char *)uint64_t v3 = 66;
    unsigned int v40 = v3 + 1;
    int v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v39 + 24);
    if (v41 <= 0x7F)
    {
LABEL_56:
      *((unsigned char *)v3 + 1) = (_BYTE)v41;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if ((*(unsigned char *)(v39 + 28) & 1) == 0) {
        goto LABEL_66;
      }
LABEL_60:
      uint64_t v42 = *(unsigned int **)(v39 + 16);
      if (v42)
      {
        *(unsigned char *)uint64_t v3 = 10;
        unsigned int v43 = v3 + 1;
        int v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v42[12];
        if (v44 <= 0x7F)
        {
LABEL_62:
          *((unsigned char *)v3 + 1) = (_BYTE)v44;
          int v45 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
LABEL_65:
          uint64_t v3 = sub_1000F605C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v42, v45, a3);
          goto LABEL_66;
        }
      }
      else
      {
        uint64_t v42 = *(unsigned int **)(qword_10047E960 + 16);
        *(unsigned char *)uint64_t v3 = 10;
        unsigned int v43 = v3 + 1;
        int v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v42[12];
        if (v44 <= 0x7F) {
          goto LABEL_62;
        }
      }
      int v45 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v44, v43, a3);
      goto LABEL_65;
    }
  }
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v41, v40, a3);
  if (*(unsigned char *)(v39 + 28)) {
    goto LABEL_60;
  }
LABEL_66:
  int v48 = *(void **)(v39 + 8);
  int v47 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v39 + 8);
  uint64_t v46 = v48;
  if (v48 && *v46 != v46[1]) {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v47, v3, a3);
  }
LABEL_69:
  unint64_t v51 = (void *)*((void *)this + 1);
  uint64_t v50 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v49 = v51;
  if (!v51 || *v49 == v49[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v50, v3, a3);
}

uint64_t sub_1000F4FB0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 80);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    unsigned int v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_115;
    }
    goto LABEL_113;
  }
  if (*(unsigned char *)(a1 + 80))
  {
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8)
    {
      int v9 = *(unsigned __int8 *)(v8 + 44);
      if (*(unsigned char *)(v8 + 44)) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v8 = *(void *)(qword_10047E950 + 16);
      int v9 = *(unsigned __int8 *)(v8 + 44);
      if (*(unsigned char *)(v8 + 44))
      {
LABEL_9:
        int v10 = (v9 << 31 >> 31) & 9;
        if ((v9 & 2) != 0) {
          v10 += 9;
        }
        if ((v9 & 4) != 0) {
          int v11 = v10 + 9;
        }
        else {
          int v11 = v10;
        }
        unsigned int v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v8 + 8);
        uint64_t v13 = *(void **)(v8 + 8);
        if (!v13) {
          goto LABEL_22;
        }
        goto LABEL_18;
      }
    }
    int v11 = 0;
    unsigned int v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v8 + 8);
    uint64_t v13 = *(void **)(v8 + 8);
    if (!v13) {
      goto LABEL_22;
    }
LABEL_18:
    if (*v13 != v13[1])
    {
      uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v12, a2)+ v11);
      *(_DWORD *)(v8 + 40) = v14;
      if (v14 >= 0x80)
      {
        unsigned int v4 = v14
           + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2)
           + 1;
        int v3 = *(_DWORD *)(a1 + 80);
        if ((v3 & 2) == 0) {
          goto LABEL_43;
        }
      }
      else
      {
        unsigned int v4 = v14 + 2;
        int v3 = *(_DWORD *)(a1 + 80);
        if ((v3 & 2) == 0) {
          goto LABEL_43;
        }
      }
      goto LABEL_25;
    }
LABEL_22:
    *(_DWORD *)(v8 + 40) = v11;
    unsigned int v4 = v11 + 2;
    int v3 = *(_DWORD *)(a1 + 80);
    if ((v3 & 2) == 0) {
      goto LABEL_43;
    }
    goto LABEL_25;
  }
  unsigned int v4 = 0;
  if ((*(unsigned char *)(a1 + 80) & 2) == 0) {
    goto LABEL_43;
  }
LABEL_25:
  uint64_t v15 = *(void *)(a1 + 24);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_10047E950 + 24);
  }
  unint64_t v16 = *(unsigned int *)(v15 + 24);
  if ((int)v16 >= 1)
  {
    uint64_t v17 = 0;
    do
    {
      uint64_t v19 = *(_DWORD **)(*(void *)(v15 + 16) + 8 * v17);
      unint64_t v20 = (9 * v19[6]);
      uint64_t v21 = (void *)*((void *)v19 + 1);
      if (v21 && *v21 != v21[1]) {
        unint64_t v20 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v19 + 2), a2)+ v20;
      }
      v19[8] = v20;
      if (v20 >= 0x80) {
        int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20, a2);
      }
      else {
        int v18 = 1;
      }
      unint64_t v16 = (v20 + v16 + v18);
      ++v17;
    }
    while (v17 < *(int *)(v15 + 24));
  }
  unsigned int v22 = *(void **)(v15 + 8);
  if (v22 && *v22 != v22[1]) {
    unint64_t v16 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v15 + 8), a2)+ v16;
  }
  *(_DWORD *)(v15 + 40) = v16;
  if (v16 >= 0x80) {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16, a2);
  }
  else {
    int v23 = 1;
  }
  v4 += v16 + v23 + 1;
  int v3 = *(_DWORD *)(a1 + 80);
LABEL_43:
  if ((v3 & 4) != 0)
  {
    uint64_t v24 = *(void *)(a1 + 32);
    if (!v24) {
      uint64_t v24 = *(void *)(qword_10047E950 + 32);
    }
    unint64_t v25 = *(unsigned int *)(v24 + 24);
    if ((int)v25 >= 1)
    {
      uint64_t v26 = 0;
      do
      {
        BOOL v28 = *(_DWORD **)(*(void *)(v24 + 16) + 8 * v26);
        unint64_t v29 = (9 * v28[6]);
        int v30 = (void *)*((void *)v28 + 1);
        if (v30 && *v30 != v30[1]) {
          unint64_t v29 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v28 + 2), a2)+ v29;
        }
        v28[8] = v29;
        if (v29 >= 0x80) {
          int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v29, a2);
        }
        else {
          int v27 = 1;
        }
        unint64_t v25 = (v29 + v25 + v27);
        ++v26;
      }
      while (v26 < *(int *)(v24 + 24));
    }
    uint64_t v31 = *(void **)(v24 + 8);
    if (v31 && *v31 != v31[1]) {
      unint64_t v25 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v24 + 8), a2)+ v25;
    }
    *(_DWORD *)(v24 + 40) = v25;
    if (v25 >= 0x80)
    {
      v4 += v25
          + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25, a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 80);
      if ((v3 & 8) != 0) {
        goto LABEL_71;
      }
    }
    else
    {
      v4 += v25 + 2;
      int v3 = *(_DWORD *)(a1 + 80);
      if ((v3 & 8) != 0) {
        goto LABEL_71;
      }
    }
LABEL_45:
    if ((v3 & 0x10) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 0x20) == 0) {
      goto LABEL_49;
    }
    goto LABEL_83;
  }
  if ((v3 & 8) == 0) {
    goto LABEL_45;
  }
LABEL_71:
  int v32 = *(_DWORD **)(a1 + 40);
  if (!v32) {
    int v32 = *(_DWORD **)(qword_10047E950 + 40);
  }
  unint64_t v33 = (void *)*((void *)v32 + 1);
  unint64_t v34 = (9 * v32[6]);
  if (v33 && *v33 != v33[1]) {
    unint64_t v34 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v32 + 2), a2)+ v34;
  }
  v32[8] = v34;
  if (v34 >= 0x80) {
    int v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34, a2);
  }
  else {
    int v35 = 1;
  }
  unsigned int v36 = v4 + v34 + v35 + 1;
  int v3 = *(_DWORD *)(a1 + 80);
  if ((v3 & 0x10) != 0) {
    uint64_t v5 = v36 + 9;
  }
  else {
    uint64_t v5 = v36;
  }
  if ((v3 & 0x20) == 0)
  {
LABEL_49:
    if ((v3 & 0x40) == 0) {
      goto LABEL_50;
    }
LABEL_90:
    uint64_t v39 = *(void *)(a1 + 56);
    if (v39)
    {
      unsigned int v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000F2EA0(v39, a2);
      if (v40 < 0x80) {
        goto LABEL_92;
      }
    }
    else
    {
      unsigned int v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000F2EA0(*(void *)(qword_10047E950 + 56), a2);
      if (v40 < 0x80)
      {
LABEL_92:
        uint64_t v5 = (v5 + v40 + 2);
        if ((*(_DWORD *)(a1 + 80) & 0x80) != 0) {
          goto LABEL_96;
        }
LABEL_51:
        uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        unsigned int v7 = *(void **)(a1 + 8);
        if (!v7) {
          goto LABEL_115;
        }
        goto LABEL_113;
      }
    }
    uint64_t v5 = v5
       + v40
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v40, a2)+ 1;
    if ((*(_DWORD *)(a1 + 80) & 0x80) != 0) {
      goto LABEL_96;
    }
    goto LABEL_51;
  }
LABEL_83:
  int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
  if ((v37 & 0x80000000) != 0)
  {
    uint64_t v5 = (v5 + 11);
    if ((v3 & 0x40) != 0) {
      goto LABEL_90;
    }
  }
  else if (v37 >= 0x80)
  {
    int v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37, a2);
    int v3 = *(_DWORD *)(a1 + 80);
    uint64_t v5 = (v38 + 1 + v5);
    if ((v3 & 0x40) != 0) {
      goto LABEL_90;
    }
  }
  else
  {
    uint64_t v5 = (v5 + 2);
    if ((v3 & 0x40) != 0) {
      goto LABEL_90;
    }
  }
LABEL_50:
  if ((v3 & 0x80) == 0) {
    goto LABEL_51;
  }
LABEL_96:
  uint64_t v41 = *(void *)(a1 + 64);
  if (v41)
  {
    if ((*(unsigned char *)(v41 + 28) & 1) == 0) {
      goto LABEL_98;
    }
  }
  else
  {
    uint64_t v41 = *(void *)(qword_10047E950 + 64);
    if ((*(unsigned char *)(v41 + 28) & 1) == 0)
    {
LABEL_98:
      unint64_t v42 = 0;
      unsigned int v43 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v41 + 8);
      int v44 = *(void **)(v41 + 8);
      if (!v44) {
        goto LABEL_109;
      }
      goto LABEL_107;
    }
  }
  uint64_t v45 = *(void *)(v41 + 16);
  if (v45)
  {
    uint64_t v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000F6230(v45, a2);
    if (v46 < 0x80) {
      goto LABEL_103;
    }
  }
  else
  {
    uint64_t v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000F6230(*(void *)(qword_10047E960 + 16), a2);
    if (v46 < 0x80)
    {
LABEL_103:
      unint64_t v42 = (v46 + 2);
      unsigned int v43 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v41 + 8);
      int v44 = *(void **)(v41 + 8);
      if (!v44) {
        goto LABEL_109;
      }
      goto LABEL_107;
    }
  }
  unint64_t v42 = v46
      + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v46, a2)+ 1;
  unsigned int v43 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v41 + 8);
  int v44 = *(void **)(v41 + 8);
  if (!v44) {
    goto LABEL_109;
  }
LABEL_107:
  if (*v44 != v44[1]) {
    unint64_t v42 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v43, a2)
  }
        + v42;
LABEL_109:
  *(_DWORD *)(v41 + 24) = v42;
  if (v42 >= 0x80) {
    int v47 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v42, a2);
  }
  else {
    int v47 = 1;
  }
  uint64_t v5 = (v5 + v42 + v47 + 1);
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v7 = *(void **)(a1 + 8);
  if (v7)
  {
LABEL_113:
    if (*v7 != v7[1]) {
      uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
    }
         + v5;
  }
LABEL_115:
  *(_DWORD *)(a1 + 76) = v5;
  return v5;
}

uint64_t sub_1000F5510(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000F32C0((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000F55F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F5604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F5618(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
    if ((*(unsigned char *)(a2 + 28) & 1) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else if ((*(unsigned char *)(a2 + 28) & 1) == 0)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  *(_DWORD *)(a1 + 28) |= 1u;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    operator new();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_10047E960 + 16);
  }
  sub_1000F58C4(v4, v5);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000F573C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000F5764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F5778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F578C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000F5818()
{
  return 1;
}

uint64_t sub_1000F5820()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E5F58;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D5F8;
}

void sub_1000F58B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F58C4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
    sub_1000FC330((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), a2 + 24);
    if ((*(unsigned char *)(a2 + 52) & 1) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_3;
  }
  sub_1000FC330((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), a2 + 24);
  if (*(unsigned char *)(a2 + 52))
  {
LABEL_3:
    uint64_t v4 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(void *)(a1 + 16) = v4;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000F5980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F5994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F59A8(uint64_t a1)
{
  *(void *)a1 = off_100455358;
  int v2 = *(_DWORD *)(a1 + 36);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 24) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *(_DWORD *)(a1 + 36);
      }
    }
  }
  if (*(void *)(a1 + 24)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000F5A74(uint64_t a1)
{
  *(void *)a1 = off_100455358;
  int v2 = *(_DWORD *)(a1 + 36);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 24) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *(_DWORD *)(a1 + 36);
      }
    }
  }
  if (*(void *)(a1 + 24)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000F5B54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_1000F5B5C()
{
}

void sub_1000F5BC8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000F5BF0(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 52)) {
    *(void *)(this + 16) = 0;
  }
  if (*(int *)(this + 32) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t v3 = *(void *)(*(void *)(v1 + 24) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 32));
  }
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 6) = 0;
  *((_DWORD *)v4 + 11) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_1000F5C98(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (unint64_t *)(a1 + 16);
  unsigned int v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  unsigned int v8 = a1 + 8;
  while (1)
  {
    while (1)
    {
      int v9 = (char *)*((void *)this + 1);
      if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
      {
        TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacunsigned int k = *v9;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v9 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_18;
      }
      unint64_t v16 = (char *)*((void *)this + 1);
      unint64_t v17 = *((void *)this + 2);
      if ((unint64_t)v16 >= v17 || *v16 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
        if (!result) {
          return result;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        *(_DWORD *)(a1 + 52) |= 1u;
        if ((unint64_t)v18 < v20) {
          goto LABEL_23;
        }
      }
      else
      {
        unint64_t *v6 = *v16;
        int v18 = v16 + 1;
        *((void *)this + 1) = v18;
        *(_DWORD *)(a1 + 52) |= 1u;
        if ((unint64_t)v18 < v17)
        {
LABEL_23:
          if (*v18 == 18)
          {
            do
            {
              *((void *)this + 1) = v18 + 1;
              int v12 = *(_DWORD *)(a1 + 36);
              uint64_t v13 = *(int *)(a1 + 32);
              if ((int)v13 >= v12) {
                goto LABEL_25;
              }
LABEL_11:
              uint64_t v14 = *(void *)(a1 + 24);
              *(_DWORD *)(a1 + 32) = v13 + 1;
              uint64_t v15 = *(void *)(v14 + 8 * v13);
              unsigned int v31 = 0;
              uint64_t v21 = (char *)*((void *)this + 1);
              if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31))return 0; {
              }
                }
              else
              {
                unsigned int v31 = *v21;
                *((void *)this + 1) = v21 + 1;
              }
              int v22 = *((_DWORD *)this + 14);
              int v23 = *((_DWORD *)this + 15);
              *((_DWORD *)this + 14) = v22 + 1;
              if (v22 >= v23) {
                return 0;
              }
              int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v31);
              if (!sub_1000F1C2C(v15, this, v25, v26) || !*((unsigned char *)this + 36)) {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
              int v27 = *((_DWORD *)this + 14);
              BOOL v28 = __OFSUB__(v27, 1);
              int v29 = v27 - 1;
              if (v29 < 0 == v28) {
                *((_DWORD *)this + 14) = v29;
              }
              int v18 = (unsigned char *)*((void *)this + 1);
              int v30 = (unsigned char *)*((void *)this + 2);
            }
            while (v18 < v30 && *v18 == 18);
            if (v18 == v30 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v11 = TagFallback & 7;
      if (v11 == 2)
      {
        int v12 = *(_DWORD *)(a1 + 36);
        uint64_t v13 = *(int *)(a1 + 32);
        if ((int)v13 < v12) {
          goto LABEL_11;
        }
LABEL_25:
        if (v12 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v12 + 1);
          int v12 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v12 + 1;
        operator new();
      }
    }
    else
    {
      int v11 = TagFallback & 7;
    }
LABEL_18:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v8, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_1000F5F80()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000F5FA8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 52)) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 16), (unint64_t)a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 24) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 32));
  }
  int v9 = *(void **)(v5 + 8);
  unsigned int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000F605C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if (*((unsigned char *)this + 52))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
    *(unsigned char *)a2 = 8;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, (unint64_t)a2 + 1, a3);
  }
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(*((void *)this + 3) + 8 * v6);
      *(unsigned char *)uint64_t v3 = 18;
      unsigned int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v7 + 32);
      if (v8 > 0x7F) {
        break;
      }
      *((unsigned char *)v3 + 1) = (_BYTE)v8;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      int v9 = *(_DWORD *)(v7 + 36);
      if (v9) {
        goto LABEL_10;
      }
LABEL_11:
      if ((v9 & 2) != 0)
      {
        uint64_t v14 = *(void *)(v7 + 24);
        *(unsigned char *)uint64_t v3 = 17;
        *(void *)((char *)v3 + 1) = v14;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
        uint64_t v15 = *(void **)(v7 + 8);
        int v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v7 + 8);
        int v11 = v15;
        if (v15)
        {
LABEL_15:
          if (*v11 != v11[1]) {
            uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v12, v3, a3);
          }
        }
      }
      else
      {
        uint64_t v13 = *(void **)(v7 + 8);
        int v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v7 + 8);
        int v11 = v13;
        if (v13) {
          goto LABEL_15;
        }
      }
      if (++v6 >= *((int *)this + 8)) {
        goto LABEL_17;
      }
    }
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)v3 + 1, a3);
    int v9 = *(_DWORD *)(v7 + 36);
    if ((v9 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v10 = *(void *)(v7 + 16);
    *(unsigned char *)uint64_t v3 = 9;
    *(void *)((char *)v3 + 1) = v10;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
    int v9 = *(_DWORD *)(v7 + 36);
    goto LABEL_11;
  }
LABEL_17:
  int v18 = (void *)*((void *)this + 1);
  unint64_t v17 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  unint64_t v16 = v18;
  if (!v18 || *v16 == v16[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v17, v3, a3);
}

uint64_t sub_1000F6230(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if ((*(unsigned char *)(a1 + 52) & 1) == 0)
  {
    int v3 = *(_DWORD *)(a1 + 32);
    uint64_t v4 = v3;
    if (v3 < 1) {
      goto LABEL_17;
    }
    goto LABEL_5;
  }
  int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2);
  int v6 = *(_DWORD *)(a1 + 32);
  uint64_t v4 = (v6 + v5 + 1);
  if (v6 >= 1)
  {
LABEL_5:
    for (uint64_t i = 0; i < *(int *)(a1 + 32); ++i)
    {
      while (1)
      {
        uint64_t v8 = *(void *)(*(void *)(a1 + 24) + 8 * i);
        int v9 = *(unsigned __int8 *)(v8 + 36);
        int v10 = (v9 << 31 >> 31) & 9;
        if ((v9 & 2) != 0) {
          v10 += 9;
        }
        LODWORD(v11) = *(unsigned char *)(v8 + 36) ? v10 : 0;
        int v12 = *(void **)(v8 + 8);
        if (v12)
        {
          if (*v12 != v12[1]) {
            break;
          }
        }
        *(_DWORD *)(v8 + 32) = v11;
LABEL_7:
        uint64_t v4 = (v11 + v4 + 1);
        if (++i >= *(int *)(a1 + 32)) {
          goto LABEL_17;
        }
      }
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v8 + 8), a2)+ v11);
      *(_DWORD *)(v8 + 32) = v11;
      if (v11 < 0x80) {
        goto LABEL_7;
      }
      uint64_t v4 = v11
         + v4
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    }
  }
LABEL_17:
  uint64_t v13 = *(void **)(a1 + 8);
  if (v13 && *v13 != v13[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 48) = v4;
  return v4;
}

uint64_t sub_1000F6364(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000F58C4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000F6444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F6458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F646C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000F64F8()
{
  return 1;
}

uint64_t sub_1000F6500()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E5F58;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D608;
}

void sub_1000F6590(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1000F65A4(void *a1)
{
  *a1 = off_100455408;
  if ((void *)qword_10047E960 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000F6638(void *a1)
{
  *a1 = off_100455408;
  if ((void *)qword_10047E960 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000F66E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_1000F66E8()
{
}

void sub_1000F6748()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000F6770(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v7 = (unsigned __int8 *)*((void *)this + 1);
      if ((unint64_t)v7 < *((void *)this + 2) && ((char)*v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (TagFallback != 10) {
        goto LABEL_5;
      }
LABEL_10:
      *(_DWORD *)(a1 + 28) |= 1u;
      uint64_t v9 = *(void *)(a1 + 16);
      if (!v9) {
        operator new();
      }
      unsigned int v20 = 0;
      int v10 = (char *)*((void *)this + 1);
      if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20))return 0; {
      }
        }
      else
      {
        unsigned int v20 = *v10;
        *((void *)this + 1) = v10 + 1;
      }
      int v11 = *((_DWORD *)this + 14);
      int v12 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v11 + 1;
      if (v11 >= v12) {
        return 0;
      }
      int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v20);
      if (!sub_1000F5C98(v9, this, v14, v15) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
      int v16 = *((_DWORD *)this + 14);
      BOOL v17 = __OFSUB__(v16, 1);
      int v18 = v16 - 1;
      if (v18 < 0 == v17) {
        *((_DWORD *)this + 14) = v18;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    TagFallbacunsigned int k = *v7;
    *((_DWORD *)this + 8) = TagFallback;
    *((void *)this + 1) = v7 + 1;
    if (TagFallback == 10) {
      goto LABEL_10;
    }
LABEL_5:
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_1000F6978()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000F69A0(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 28))
  {
    uint64_t v6 = *(void *)(result + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047E960 + 16);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  uint64_t v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000F6A24(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 28))
  {
    uint64_t v4 = (unsigned int *)*((void *)this + 2);
    if (v4)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v5 = a2 + 1;
      uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v4[12];
      if (v6 <= 0x7F)
      {
LABEL_4:
        *((unsigned char *)a2 + 1) = (_BYTE)v6;
        uint64_t v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
LABEL_7:
        a2 = sub_1000F605C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v4, v7, a3);
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v4 = *(unsigned int **)(qword_10047E960 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v5 = a2 + 1;
      uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v4[12];
      if (v6 <= 0x7F) {
        goto LABEL_4;
      }
    }
    uint64_t v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, v5, a3);
    goto LABEL_7;
  }
LABEL_8:
  int v10 = (void *)*((void *)this + 1);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v8 = v10;
  if (!v10 || *v8 == v8[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, a2, a3);
}

uint64_t sub_1000F6AEC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v7 = *(void *)(a1 + 16);
    if (v7)
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000F6230(v7, a2);
      if (v8 < 0x80) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000F6230(*(void *)(qword_10047E960 + 16), a2);
      if (v8 < 0x80)
      {
LABEL_6:
        uint64_t v3 = (v8 + 2);
        uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        unsigned int v5 = *(void **)(a1 + 8);
        if (!v5) {
          goto LABEL_3;
        }
        goto LABEL_10;
      }
    }
    uint64_t v3 = v8
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2)+ 1;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    unsigned int v5 = *(void **)(a1 + 8);
    if (!v5) {
      goto LABEL_3;
    }
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v5 = *(void **)(a1 + 8);
  if (!v5)
  {
LABEL_3:
    *(_DWORD *)(a1 + 24) = v3;
    return v3;
  }
LABEL_10:
  if (*v5 == v5[1]) {
    goto LABEL_3;
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v4, a2)
     + v3;
  *(_DWORD *)(a1 + 24) = v9;
  return v9;
}

uint64_t sub_1000F6BC0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000F5618((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000F6CA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F6CB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F6CC8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000F6D54()
{
  return 1;
}

uint64_t sub_1000F6D5C()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E5F58;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D618;
}

void sub_1000F6DEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F6E00(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  sub_1000FC474((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), a2 + 16);
  LOBYTE(v4) = *(unsigned char *)(a2 + 52);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 52))
    {
      int v5 = *(_DWORD *)(a2 + 40);
      a1[13] |= 1u;
      a1[10] = v5;
      int v4 = *(_DWORD *)(a2 + 52);
    }
    if ((v4 & 4) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 44);
      a1[13] |= 4u;
      a1[11] = v6;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000F6EC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F6ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F6EEC(uint64_t a1)
{
  *(void *)a1 = off_1004554B8;
  int v2 = *(_DWORD *)(a1 + 28);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *(_DWORD *)(a1 + 28);
      }
    }
  }
  if (*(void *)(a1 + 16)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000F6FB8(uint64_t a1)
{
  *(void *)a1 = off_1004554B8;
  int v2 = *(_DWORD *)(a1 + 28);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *(_DWORD *)(a1 + 28);
      }
    }
  }
  if (*(void *)(a1 + 16)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000F7098(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

uint64_t sub_1000F70A0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047E968;
  if (!qword_10047E968)
  {
    sub_1000E6AE4(0, a2, a3, a4);
    return qword_10047E968;
  }
  return result;
}

void sub_1000F70DC()
{
}

void sub_1000F714C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000F7174(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 52)) {
    *(void *)(this + 40) = 0x8FFFFFFFFLL;
  }
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t v3 = *(void *)(*(void *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 4) = 0;
  *((_DWORD *)v4 + 11) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_1000F7224(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  do
  {
    while (1)
    {
      while (1)
      {
LABEL_2:
        uint64_t v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacunsigned int k = *v8;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v35 = 0;
        uint64_t v14 = (char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35);
          if (!result) {
            return result;
          }
          signed int v15 = v35;
          if (v35 + 1 <= 5) {
            goto LABEL_17;
          }
LABEL_29:
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, v15);
          int v16 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v16 < *((void *)this + 2))
          {
LABEL_18:
            if (*v16 == 18)
            {
              do
              {
                *((void *)this + 1) = v16 + 1;
                int v17 = a1[7];
                uint64_t v18 = a1[6];
                if ((int)v18 >= v17) {
                  goto LABEL_36;
                }
LABEL_22:
                uint64_t v19 = *((void *)a1 + 2);
                a1[6] = v18 + 1;
                uint64_t v20 = *(void *)(v19 + 8 * v18);
                unsigned int v36 = 0;
                int v23 = (char *)*((void *)this + 1);
                if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36))return 0; {
                }
                  }
                else
                {
                  unsigned int v36 = *v23;
                  *((void *)this + 1) = v23 + 1;
                }
                int v24 = *((_DWORD *)this + 14);
                int v25 = *((_DWORD *)this + 15);
                *((_DWORD *)this + 14) = v24 + 1;
                if (v24 >= v25) {
                  return 0;
                }
                int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v36);
                if (!sub_1000F3DEC(v20, this, v27, v28) || !*((unsigned char *)this + 36)) {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
                int v29 = *((_DWORD *)this + 14);
                BOOL v30 = __OFSUB__(v29, 1);
                int v31 = v29 - 1;
                if (v31 < 0 == v30) {
                  *((_DWORD *)this + 14) = v31;
                }
                int v16 = (unsigned char *)*((void *)this + 1);
                unint64_t v32 = *((void *)this + 2);
                if ((unint64_t)v16 >= v32) {
                  goto LABEL_2;
                }
                int v33 = *v16;
              }
              while (v33 == 18);
              if (v33 == 24)
              {
                int v12 = v16 + 1;
                *((void *)this + 1) = v12;
                unsigned int v34 = 0;
                if ((unint64_t)v12 >= v32) {
                  goto LABEL_31;
                }
LABEL_52:
                if ((char)*v12 < 0) {
                  goto LABEL_31;
                }
                unsigned int v22 = *v12;
                *((void *)this + 1) = v12 + 1;
                if (v22 <= 8) {
                  goto LABEL_54;
                }
LABEL_33:
                wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 3, (int)v22);
                if (*((void *)this + 1) == *((void *)this + 2))
                {
LABEL_55:
                  if (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
                  {
                    *((_DWORD *)this + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)this + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
        }
        else
        {
          signed int v15 = *v14;
          *((void *)this + 1) = v14 + 1;
          if ((v15 + 1) > 5) {
            goto LABEL_29;
          }
LABEL_17:
          a1[13] |= 1u;
          a1[10] = v15;
          int v16 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v16 < *((void *)this + 2)) {
            goto LABEL_18;
          }
        }
      }
      if (v10 == 2) {
        break;
      }
      if (v10 != 3)
      {
        int v11 = TagFallback & 7;
        goto LABEL_24;
      }
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_24;
      }
      int v12 = (unsigned __int8 *)*((void *)this + 1);
      unint64_t v13 = *((void *)this + 2);
      unsigned int v34 = 0;
      if ((unint64_t)v12 < v13) {
        goto LABEL_52;
      }
LABEL_31:
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v34);
      if (!result) {
        return result;
      }
      unsigned int v22 = v34;
      if (v34 > 8) {
        goto LABEL_33;
      }
LABEL_54:
      a1[13] |= 4u;
      a1[11] = v22;
      if (*((void *)this + 1) == *((void *)this + 2)) {
        goto LABEL_55;
      }
    }
    int v11 = TagFallback & 7;
    if (v11 == 2)
    {
      int v17 = a1[7];
      uint64_t v18 = a1[6];
      if ((int)v18 < v17) {
        goto LABEL_22;
      }
LABEL_36:
      if (v17 == a1[8])
      {
        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v17 + 1);
        int v17 = a1[7];
      }
      a1[7] = v17 + 1;
      operator new();
    }
LABEL_24:
    if (v11 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) != 0);
  return 0;
}

void sub_1000F75F4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000F761C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 52)) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 40), (int)a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  if ((*(unsigned char *)(v5 + 52) & 4) != 0) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 44), (int)a2, a4);
  }
  uint64_t v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000F76E8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if (*((unsigned char *)this + 52))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 10);
    *(unsigned char *)a2 = 8;
    uint64_t v6 = (char *)a2 + 1;
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v5, (unint64_t)v6, a3);
    }
    else
    {
      if (v5 <= 0x7F)
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v5;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        goto LABEL_8;
      }
      uint64_t v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v5, v6, a3);
    }
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v7;
  }
LABEL_8:
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      unsigned int v10 = *(unsigned int **)(*((void *)this + 2) + 8 * v8);
      *(unsigned char *)uint64_t v3 = 18;
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[19];
      if (v11 > 0x7F)
      {
        uint64_t v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
      }
      else
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v11;
        uint64_t v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      }
      uint64_t v3 = sub_1000F4A80((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v9, a3);
      ++v8;
    }
    while (v8 < *((int *)this + 6));
  }
  if ((*((unsigned char *)this + 52) & 4) == 0)
  {
LABEL_18:
    int v16 = (void *)*((void *)this + 1);
    signed int v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v14 = v16;
    if (!v16) {
      return v3;
    }
    goto LABEL_23;
  }
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 11);
  *(unsigned char *)uint64_t v3 = 24;
  unint64_t v13 = (unint64_t)v3 + 1;
  if ((v12 & 0x80000000) != 0)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, v13, a3);
    int v17 = (void *)*((void *)this + 1);
    signed int v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v14 = v17;
    if (!v17) {
      return v3;
    }
    goto LABEL_23;
  }
  if (v12 <= 0x7F)
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v12;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    goto LABEL_18;
  }
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v13, a3);
  uint64_t v18 = (void *)*((void *)this + 1);
  signed int v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v14 = v18;
  if (!v18) {
    return v3;
  }
LABEL_23:
  if (*v14 == v14[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v15, v3, a3);
}

uint64_t sub_1000F784C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  char v3 = *(unsigned char *)(a1 + 52);
  if (!v3)
  {
    int v4 = 0;
    goto LABEL_19;
  }
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
    if ((v5 & 0x80000000) != 0)
    {
      int v4 = 11;
      if ((v3 & 4) == 0) {
        goto LABEL_19;
      }
    }
    else if (v5 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2) + 1;
      if ((*(_DWORD *)(a1 + 52) & 4) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      int v4 = 2;
      if ((v3 & 4) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 52) & 4) == 0) {
      goto LABEL_19;
    }
  }
  uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2) + 1;
  }
  else
  {
    int v7 = 2;
  }
  v4 += v7;
LABEL_19:
  int v8 = *(_DWORD *)(a1 + 24);
  uint64_t v9 = (v8 + v4);
  if (v8 >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000F4FB0(*(void *)(*(void *)(a1 + 16) + 8 * v10), a2);
      int v13 = (int)v12;
      if (v12 >= 0x80) {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
      }
      else {
        int v11 = 1;
      }
      uint64_t v9 = (v13 + v9 + v11);
      ++v10;
    }
    while (v10 < *(int *)(a1 + 24));
  }
  uint64_t v14 = *(void **)(a1 + 8);
  if (v14 && *v14 != v14[1]) {
    uint64_t v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v9;
  }
  *(_DWORD *)(a1 + 48) = v9;
  return v9;
}

uint64_t sub_1000F7978(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000F6E00(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000F7A58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F7A6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F7A80(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000F7B0C()
{
  return 1;
}

uint64_t sub_1000F7B14()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E5F58;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D628;
}

void sub_1000F7BA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F7BB8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
    LOBYTE(v4) = *(unsigned char *)(a2 + 36);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 36);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 36) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047E970 + 16);
    }
    sub_1000E98DC(v5, v6);
    int v4 = *(_DWORD *)(a2 + 36);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(void *)(a1 + 24) = v7;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000F7CF4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000F7D1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F7D30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F7D44(void *a1)
{
  *a1 = off_100455568;
  if ((void *)qword_10047E970 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000F7DD8(void *a1)
{
  *a1 = off_100455568;
  if ((void *)qword_10047E970 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000F7E80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

uint64_t sub_1000F7E88(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047E970;
  if (!qword_10047E970)
  {
    sub_1000E6AE4(0, a2, a3, a4);
    return qword_10047E970;
  }
  return result;
}

void sub_1000F7EC4()
{
}

void sub_1000F7F28()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000F7F50(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 36))
  {
    if (*(unsigned char *)(this + 36))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 16) = 0;
        *(_DWORD *)(this + 28) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(void *)(v1 + 24) = 0;
  }
  uint64_t v4 = *(void *)(v1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 7) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_1000F7FC8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacunsigned int k = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v9 = TagFallback & 7;
        if (v9 == 1)
        {
          unint64_t v22 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v22) & 1) == 0) {
            return 0;
          }
          goto LABEL_31;
        }
      }
      else
      {
        int v9 = TagFallback & 7;
      }
LABEL_19:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v9 = TagFallback & 7;
    if (v9 != 2) {
      goto LABEL_19;
    }
    *(_DWORD *)(a1 + 36) |= 1u;
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      operator new();
    }
    unsigned int v23 = 0;
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23)) {
        return 0;
      }
    }
    else
    {
      unsigned int v23 = *v11;
      *((void *)this + 1) = v11 + 1;
    }
    int v12 = *((_DWORD *)this + 14);
    int v13 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v12 + 1;
    if (v12 >= v13) {
      return 0;
    }
    int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    if (!sub_1000E9C24(v10, this, v15, v16) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
    int v17 = *((_DWORD *)this + 14);
    BOOL v18 = __OFSUB__(v17, 1);
    int v19 = v17 - 1;
    if (v19 < 0 == v18) {
      *((_DWORD *)this + 14) = v19;
    }
    uint64_t v20 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v20 < *((void *)this + 2) && *v20 == 17)
    {
      *((void *)this + 1) = v20 + 1;
      unint64_t v22 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v22) & 1) == 0) {
        return 0;
      }
LABEL_31:
      *(void *)(a1 + 24) = v22;
      *(_DWORD *)(a1 + 36) |= 2u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
  }
}

void sub_1000F824C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000F8274(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      if ((*(_DWORD *)(v5 + 36) & 2) != 0) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047E970 + 16), a2, a4);
      if ((*(_DWORD *)(v5 + 36) & 2) != 0) {
        goto LABEL_9;
      }
    }
LABEL_3:
    int v9 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_10;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v11 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v11;
  if (!v11) {
    return result;
  }
LABEL_10:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

unsigned char *sub_1000F8338(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  if ((*((unsigned char *)this + 36) & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v4 = *((void *)this + 2);
  if (v4)
  {
    *a2 = 10;
    unsigned int v5 = a2 + 1;
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v4 + 32);
    if (v6 <= 0x7F) {
      goto LABEL_4;
    }
LABEL_7:
    a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, v5, a3);
    if (*(int *)(v4 + 24) < 1) {
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  uint64_t v4 = *(void *)(qword_10047E970 + 16);
  *a2 = 10;
  unsigned int v5 = a2 + 1;
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v4 + 32);
  if (v6 > 0x7F) {
    goto LABEL_7;
  }
LABEL_4:
  a2[1] = (_BYTE)v6;
  a2 += 2;
  if (*(int *)(v4 + 24) < 1) {
    goto LABEL_10;
  }
LABEL_8:
  uint64_t v7 = 0;
  do
  {
    uint64_t v8 = *(void *)(*(void *)(v4 + 16) + 8 * v7);
    *a2 = 9;
    *(void *)(a2 + 1) = v8;
    a2 += 9;
    ++v7;
  }
  while (v7 < *(int *)(v4 + 24));
LABEL_10:
  int v11 = *(void **)(v4 + 8);
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  int v9 = v11;
  if (v11 && *v9 != v9[1]) {
    a2 = (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
LABEL_13:
  if ((*((unsigned char *)this + 36) & 2) != 0)
  {
    uint64_t v12 = *((void *)this + 3);
    *a2 = 17;
    *(void *)(a2 + 1) = v12;
    a2 += 9;
  }
  uint64_t v15 = (void *)*((void *)this + 1);
  int v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1000F84E4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 36))
    {
      int v9 = *(_DWORD **)(a1 + 16);
      if (!v9) {
        int v9 = *(_DWORD **)(qword_10047E970 + 16);
      }
      uint64_t v10 = (void *)*((void *)v9 + 1);
      unint64_t v11 = (9 * v9[6]);
      if (v10 && *v10 != v10[1]) {
        unint64_t v11 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 2), a2)+ v11;
      }
      unsigned __int8 v9[8] = v11;
      if (v11 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
      }
      else {
        int v12 = 1;
      }
      unsigned int v4 = v11 + v12 + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v5 = 0;
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7)
    {
LABEL_5:
      *(_DWORD *)(a1 + 32) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1]) {
    goto LABEL_5;
  }
  uint64_t v13 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 32) = v13;
  return v13;
}

uint64_t sub_1000F85E0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000F7BB8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000F86C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F86D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F86E8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000F8774()
{
  return 1;
}

uint64_t sub_1000F877C()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E5F58;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D638;
}

void sub_1000F880C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F8820(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = *(_DWORD *)(a1 + 24);
    int v6 = *(_DWORD *)(a1 + 28);
    int v7 = v5 + v4;
    if (v6 < v7)
    {
      int v8 = 2 * v6;
      if (2 * v6 <= v7) {
        int v8 = v7;
      }
      if (v8 <= 4) {
        int v8 = 4;
      }
      *(_DWORD *)(a1 + 28) = v8;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 16) + 4 * v5), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000F895C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F8970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F8984(void *a1)
{
  *a1 = off_100455618;
  if (a1[2]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000F89F8(void *a1)
{
  *a1 = off_100455618;
  if (a1[2]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000F8A80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_1000F8A88()
{
}

void sub_1000F8AEC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000F8B14(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1000F8B2C(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (uint64_t *)(a1 + 16);
  unsigned int v7 = a1 + 8;
  do
  {
    while (1)
    {
      int v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacunsigned int k = *v8;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v8 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      int v10 = TagFallback & 7;
      if ((TagFallback & 0xFFFFFFF8) == 8) {
        break;
      }
LABEL_10:
      if (v10 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
    }
      }
    if (v10 != 2)
    {
      if (v10 != 5) {
        goto LABEL_10;
      }
      goto LABEL_15;
    }
    uint64_t result = sub_1000E93D0(this, v6);
    if (!result) {
      return result;
    }
    while (1)
    {
      int v26 = (unsigned char *)*((void *)this + 1);
      uint64_t v27 = (unsigned char *)*((void *)this + 2);
      if (v26 >= v27 || *v26 != 13) {
        break;
      }
      *((void *)this + 1) = v26 + 1;
LABEL_15:
      unsigned int v28 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v28) & 1) == 0) {
        return 0;
      }
      unsigned int v12 = v28;
      int v13 = *(_DWORD *)(a1 + 24);
      uint64_t v14 = *(void *)(a1 + 16);
      if (v13 == *(_DWORD *)(a1 + 28))
      {
        if (2 * v13 <= v13 + 1) {
          int v15 = v13 + 1;
        }
        else {
          int v15 = 2 * v13;
        }
        if (v15 <= 4) {
          int v15 = 4;
        }
        *(_DWORD *)(a1 + 28) = v15;
        operator new[]();
      }
      int v16 = v13 + 1;
      *(_DWORD *)(a1 + 24) = v13 + 1;
      *(_DWORD *)(v14 + 4 * v13) = v12;
      uint64_t v17 = *((void *)this + 1);
      int v18 = *((_DWORD *)this + 4) - v17;
      if (v18 >= 1)
      {
        signed int v19 = *(_DWORD *)(a1 + 28) - v16;
        signed int v20 = v18 / 5u;
        if ((int)(v18 / 5u) >= v19) {
          signed int v20 = *(_DWORD *)(a1 + 28) - v16;
        }
        if (v20 >= 1)
        {
          uint64_t v21 = 0;
          int v22 = v13 + 2;
          uint64_t v23 = v14 + 4 * v16;
          uint64_t v24 = ((*((_DWORD *)this + 4) - v17) * (unsigned __int128)0x3333333333333334uLL) >> 64;
          if (v24 >= v19) {
            LODWORD(v24) = v19;
          }
          while (*(unsigned char *)v17 == 13)
          {
            int v25 = *(_DWORD *)(v17 + 1);
            *(_DWORD *)(a1 + 24) = v22 + v21;
            *(_DWORD *)(v23 + 4 * v21++) = v25;
            v17 += 5;
            if (v24 == v21) {
              goto LABEL_31;
            }
          }
          signed int v20 = v21;
          if (v21)
          {
LABEL_31:
            wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 5 * v20);
            continue;
          }
        }
      }
    }
  }
  while (v26 != v27 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10));
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1000F8DCC(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(*(void *)(v4 + 16) + 4 * v5++), a3);
    while (v5 < *(int *)(v4 + 24));
  }
  int v8 = *(void **)(v4 + 8);
  unsigned int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_1000F8E68(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  if (*(int *)(a1 + 24) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 16) + 4 * v3);
      *(unsigned char *)a2 = 13;
      *(_DWORD *)(a2 + 1) = v4;
      a2 += 5;
      ++v3;
    }
    while (v3 < *(int *)(a1 + 24));
  }
  unsigned int v7 = *(void **)(a1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v6 = v7;
  if (!v7 || *v6 == v6[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v5, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_1000F8ED8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v5 = *(void **)(a1 + 8);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v4 = v5;
  uint64_t v6 = (5 * *((_DWORD *)v3 + 4));
  if (v5 && *v4 != v4[1]) {
    uint64_t v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v3, a2)
  }
       + v6;
  *(_DWORD *)(a1 + 32) = v6;
  return v6;
}

uint64_t sub_1000F8F24(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000F8820((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000F9004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F9018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F902C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000F90B8()
{
  return 1;
}

uint64_t sub_1000F90C0()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E5F58;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D648;
}

void sub_1000F9150(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F9164(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  sub_1000FC5D4((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), a2 + 16);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000F91EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F9200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F9214(uint64_t a1)
{
  *(void *)a1 = off_1004556C8;
  int v2 = *(_DWORD *)(a1 + 28);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *(_DWORD *)(a1 + 28);
      }
    }
  }
  if (*(void *)(a1 + 16)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000F92E0(uint64_t a1)
{
  *(void *)a1 = off_1004556C8;
  int v2 = *(_DWORD *)(a1 + 28);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *(_DWORD *)(a1 + 28);
      }
    }
  }
  if (*(void *)(a1 + 16)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000F93C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1000F93C8()
{
}

void sub_1000F9430()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000F9458(uint64_t this)
{
  uint64_t v1 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t v3 = *(void *)(*(void *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 4) = 0;
  *((_DWORD *)v4 + 9) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_1000F94F4(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  unsigned int v7 = a1 + 8;
  while (1)
  {
LABEL_2:
    int v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (TagFallback == 10) {
        goto LABEL_12;
      }
    }
    else
    {
      TagFallbacunsigned int k = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (TagFallback == 10)
      {
        while (1)
        {
LABEL_12:
          int v10 = a1[7];
          uint64_t v11 = a1[6];
          if ((int)v11 >= v10)
          {
            if (v10 == a1[8])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v10 + 1);
              int v10 = a1[7];
            }
            a1[7] = v10 + 1;
            operator new();
          }
          uint64_t v12 = *((void *)a1 + 2);
          a1[6] = v11 + 1;
          uint64_t v13 = *(void *)(v12 + 8 * v11);
          unsigned int v26 = 0;
          uint64_t v14 = (char *)*((void *)this + 1);
          if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26))return 0; {
          }
            }
          else
          {
            unsigned int v26 = *v14;
            *((void *)this + 1) = v14 + 1;
          }
          int v15 = *((_DWORD *)this + 14);
          int v16 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v15 + 1;
          if (v15 >= v16) {
            return 0;
          }
          int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
          if (!sub_1000F8B2C(v13, this, v18, v19) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
          int v20 = *((_DWORD *)this + 14);
          BOOL v21 = __OFSUB__(v20, 1);
          int v22 = v20 - 1;
          if (v22 < 0 == v21) {
            *((_DWORD *)this + 14) = v22;
          }
          uint64_t v23 = (unsigned char *)*((void *)this + 1);
          uint64_t v24 = (unsigned char *)*((void *)this + 2);
          if (v23 >= v24 || *v23 != 10)
          {
            if (v23 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
            goto LABEL_2;
          }
          *((void *)this + 1) = v23 + 1;
        }
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_1000F975C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000F9784(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  int v9 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000F9820(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((int *)this + 6) >= 1)
  {
    for (uint64_t i = 0; i < *((int *)this + 6); ++i)
    {
      uint64_t v6 = *(void *)(*((void *)this + 2) + 8 * i);
      *(unsigned char *)a2 = 10;
      unsigned int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 32);
      if (v7 > 0x7F)
      {
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)a2 + 1, a3);
        if (*(int *)(v6 + 24) >= 1)
        {
LABEL_8:
          uint64_t v8 = 0;
          do
          {
            int v9 = *(_DWORD *)(*(void *)(v6 + 16) + 4 * v8);
            *(unsigned char *)a2 = 13;
            *(_DWORD *)((char *)a2 + 1) = v9;
            a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 5);
            ++v8;
          }
          while (v8 < *(int *)(v6 + 24));
        }
      }
      else
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v7;
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        if (*(int *)(v6 + 24) >= 1) {
          goto LABEL_8;
        }
      }
      uint64_t v12 = *(void **)(v6 + 8);
      uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v6 + 8);
      int v10 = v12;
      if (v12 && *v10 != v10[1]) {
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v11, a2, a3);
      }
    }
  }
  int v15 = (void *)*((void *)this + 1);
  uint64_t v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, a2, a3);
}

uint64_t sub_1000F9974(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 24);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v6 = *(_DWORD **)(*(void *)(a1 + 16) + 8 * v4);
      unint64_t v7 = (5 * v6[6]);
      uint64_t v8 = (void *)*((void *)v6 + 1);
      if (v8 && *v8 != v8[1]) {
        unint64_t v7 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v6 + 2), a2)+ v7;
      }
      v6[8] = v7;
      if (v7 >= 0x80) {
        int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7, a2);
      }
      else {
        int v5 = 1;
      }
      uint64_t v3 = (v7 + v3 + v5);
      ++v4;
    }
    while (v4 < *(int *)(a1 + 24));
  }
  int v9 = *(void **)(a1 + 8);
  if (v9 && *v9 != v9[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_1000F9A44(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000F9164((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000F9B24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000F9B38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000F9B4C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000F9BD8()
{
  return 1;
}

uint64_t sub_1000F9BE0()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E5F58;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D658;
}

void sub_1000F9C70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1000F9C84(uint64_t a1)
{
  *(void *)a1 = off_100455778;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000F9CD8(uint64_t a1)
{
  *(void *)a1 = off_100455778;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000F9D40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 16) = a2;
  return result;
}

void sub_1000F9D48()
{
}

void sub_1000F9DA8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000F9DD0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 3) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1000F9DE4(int a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v5 = a1 + 8;
  while (1)
  {
    uint64_t v6 = (unsigned __int8 *)*((void *)this + 1);
    if ((unint64_t)v6 >= *((void *)this + 2)) {
      break;
    }
    int v7 = (char)*v6;
    if (v7 < 0) {
      break;
    }
    TagFallbacunsigned int k = *v6;
    *((_DWORD *)this + 8) = TagFallback;
    *((void *)this + 1) = v6 + 1;
    if (TagFallback) {
      BOOL v9 = (v7 & 7) == 4;
    }
    else {
      BOOL v9 = 1;
    }
    uint64_t v10 = v9;
    if (v9) {
      return v10;
    }
LABEL_20:
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v5, a4) & 1) == 0)return v10; {
  }
    }
  TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
  *((_DWORD *)this + 8) = TagFallback;
  if (TagFallback) {
    BOOL v11 = (TagFallback & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  uint64_t v10 = v11;
  if (!v11) {
    goto LABEL_20;
  }
  return v10;
}

wireless_diagnostics::google::protobuf::internal::WireFormat *sub_1000F9E84(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  unsigned int v5 = *(void **)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v4 = v5;
  if (v5)
  {
    if (*v4 != v4[1]) {
      return (wireless_diagnostics::google::protobuf::internal::WireFormat *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(result, a2, a3);
    }
  }
  return result;
}

uint64_t sub_1000F9EA0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  unsigned int v5 = *(void **)(a1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v4 = v5;
  if (!v5 || *v4 == v4[1]) {
    return (uint64_t)a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v3, a2, a3);
  }
}

uint64_t sub_1000F9EC0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  unsigned int v5 = *(void **)(a1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v4 = v5;
  if (!v5 || *v4 == v4[1])
  {
    uint64_t result = 0;
    *(_DWORD *)(a1 + 16) = 0;
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v3, a2);
    *(_DWORD *)(a1 + 16) = result;
  }
  return result;
}

uint64_t sub_1000F9F10(uint64_t a1, void *lpsrc)
{
  if (lpsrc == (void *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  if (!v4) {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge((wireless_diagnostics::google::protobuf::internal::ReflectionOps *)lpsrc, (const wireless_diagnostics::google::protobuf::Message *)a1, v5);
  }
  uint64_t v6 = v4;
  if (v4 == (char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v6 + 8));
}

void sub_1000FA044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000FA058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000FA06C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000FA080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000FA094(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000FA120()
{
  return 1;
}

uint64_t sub_1000FA128()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E5F58;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D668;
}

void sub_1000FA1B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000FA1CC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
    LOBYTE(v4) = *(unsigned char *)(a2 + 64);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 64);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 64) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047E990 + 16);
    }
    sub_1000E8500(v5, v6);
    int v4 = *(_DWORD *)(a2 + 64);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 64) |= 2u;
    uint64_t v7 = *(void *)(a1 + 24);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10047E990 + 24);
    }
    sub_1000F7BB8(v7, v8);
    int v4 = *(_DWORD *)(a2 + 64);
  }
  if ((v4 & 4) != 0)
  {
    *(_DWORD *)(a1 + 64) |= 4u;
    uint64_t v9 = *(void *)(a1 + 32);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = *(void *)(a2 + 32);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_10047E990 + 32);
    }
    sub_1000EAF18(v9, v10);
    int v4 = *(_DWORD *)(a2 + 64);
  }
  if ((v4 & 8) != 0)
  {
    *(_DWORD *)(a1 + 64) |= 8u;
    uint64_t v11 = *(void *)(a1 + 40);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 40);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_10047E990 + 40);
    }
    sub_1000F9164(v11, v12);
    int v4 = *(_DWORD *)(a2 + 64);
  }
  if ((v4 & 0x10) != 0)
  {
    int v13 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 64) |= 0x10u;
    *(_DWORD *)(a1 + ++*(_DWORD *)(result + 56) = v13;
    int v4 = *(_DWORD *)(a2 + 64);
  }
  if ((v4 & 0x20) != 0)
  {
    *(_DWORD *)(a1 + 64) |= 0x20u;
    uint64_t v14 = *(void *)(a1 + 48);
    if (!v14) {
      operator new();
    }
    uint64_t v15 = *(void *)(a2 + 48);
    if (v15)
    {
      if (v15 == v14) {
        goto LABEL_38;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(qword_10047E990 + 48);
      if (v15 == v14)
      {
LABEL_38:
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
      }
    }
    wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v14 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v15 + 8));
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000FA58C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000FA5A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000FA5B4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000FA5DC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000FA608()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000FA630()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000FA658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000FA66C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000FA680(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_100455828;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_DWORD *)(a1 + 64) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  sub_1000FA1CC(a1, a2);
  return a1;
}

void sub_1000FA6F4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_1000FA710(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_1000FA724(void *a1)
{
  *a1 = off_100455828;
  if ((void *)qword_10047E990 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = a1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = a1[4];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = a1[5];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = a1[6];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000FA86C(void *a1)
{
  sub_1000FA724(a1);

  operator delete();
}

uint64_t sub_1000FA8A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 60) = a2;
  return result;
}

uint64_t sub_1000FA8AC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047E990;
  if (!qword_10047E990)
  {
    sub_1000E6AE4(0, a2, a3, a4);
    return qword_10047E990;
  }
  return result;
}

void sub_1000FA8E8()
{
}

void sub_1000FA954()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000FA97C(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 64))
  {
    if (*(unsigned char *)(this + 64))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 64) & 2) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 24);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          if (*(unsigned char *)(v3 + 36))
          {
            this = *(void *)(v3 + 16);
            if (this)
            {
              uint64_t v4 = *(void *)(this + 8);
              this += 8;
              *(_DWORD *)(this + 16) = 0;
              *(_DWORD *)(this + 28) = 0;
              if (v4) {
                this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
              }
            }
          }
          *(void *)(v3 + 24) = 0;
        }
        uint64_t v6 = *(void *)(v3 + 8);
        uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v3 + 8);
        *((_DWORD *)v5 + 7) = 0;
        if (v6) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 64) & 4) != 0)
    {
      uint64_t v7 = *(void *)(v1 + 32);
      if (v7)
      {
        if (*(int *)(v7 + 24) >= 1)
        {
          uint64_t v8 = 0;
          do
          {
            uint64_t v9 = *(void *)(*(void *)(v7 + 16) + 8 * v8);
            this = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 32))(v9);
            ++v8;
          }
          while (v8 < *(int *)(v7 + 24));
        }
        uint64_t v11 = *(void *)(v7 + 8);
        uint64_t v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v7 + 8);
        *((_DWORD *)v10 + 4) = 0;
        *((_DWORD *)v10 + 9) = 0;
        if (v11) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v10);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 64) & 8) != 0)
    {
      uint64_t v12 = *(void *)(v1 + 40);
      if (v12)
      {
        if (*(int *)(v12 + 24) >= 1)
        {
          uint64_t v13 = 0;
          do
          {
            uint64_t v14 = *(void *)(*(void *)(v12 + 16) + 8 * v13);
            this = (*(uint64_t (**)(uint64_t))(*(void *)v14 + 32))(v14);
            ++v13;
          }
          while (v13 < *(int *)(v12 + 24));
        }
        uint64_t v16 = *(void *)(v12 + 8);
        uint64_t v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v12 + 8);
        *((_DWORD *)v15 + 4) = 0;
        *((_DWORD *)v15 + 9) = 0;
        if (v16) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v15);
        }
      }
    }
    *(_DWORD *)(v1 + ++*(_DWORD *)(result + 56) = 0;
    if ((*(unsigned char *)(v1 + 64) & 0x20) != 0)
    {
      this = *(void *)(v1 + 48);
      if (this)
      {
        uint64_t v17 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 12) = 0;
        if (v17) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
  }
  uint64_t v19 = *(void *)(v1 + 8);
  uint64_t v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v18 + 14) = 0;
  if (v19)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v18);
  }
  return this;
}

uint64_t sub_1000FAB64(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacunsigned int k = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 64) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        unsigned int v55 = 0;
        uint64_t v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55))return 0; {
        }
          }
        else
        {
          unsigned int v55 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v19 = *((_DWORD *)this + 14);
        int v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v55);
        if (!sub_1000E877C(v10, this, v22, v23) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
        int v24 = *((_DWORD *)this + 14);
        BOOL v25 = __OFSUB__(v24, 1);
        int v26 = v24 - 1;
        if (v26 < 0 == v25) {
          *((_DWORD *)this + 14) = v26;
        }
        uint64_t v27 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v27 >= *((void *)this + 2) || *v27 != 18) {
          continue;
        }
        *((void *)this + 1) = v27 + 1;
        *(_DWORD *)(a1 + 64) |= 2u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12) {
LABEL_45:
        }
          operator new();
LABEL_17:
        unsigned int v55 = 0;
        uint64_t v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55))return 0; {
        }
          }
        else
        {
          unsigned int v55 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        int v28 = *((_DWORD *)this + 14);
        int v29 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v28 + 1;
        if (v28 >= v29) {
          return 0;
        }
        int v30 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v55);
        if (!sub_1000F7FC8(v12, this, v31, v32) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v30);
        int v33 = *((_DWORD *)this + 14);
        BOOL v25 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v25) {
          *((_DWORD *)this + 14) = v34;
        }
        unsigned int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 26) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
        *(_DWORD *)(a1 + 64) |= 4u;
        uint64_t v14 = *(int **)(a1 + 32);
        if (!v14) {
LABEL_57:
        }
          operator new();
LABEL_21:
        unsigned int v55 = 0;
        uint64_t v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55))return 0; {
        }
          }
        else
        {
          unsigned int v55 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v36 = *((_DWORD *)this + 14);
        int v37 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v36 + 1;
        if (v36 >= v37) {
          return 0;
        }
        int v38 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v55);
        if (!sub_1000EB2A8(v14, this, v39, v40) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v38);
        int v41 = *((_DWORD *)this + 14);
        BOOL v25 = __OFSUB__(v41, 1);
        int v42 = v41 - 1;
        if (v42 < 0 == v25) {
          *((_DWORD *)this + 14) = v42;
        }
        unsigned int v43 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v43 >= *((void *)this + 2) || *v43 != 34) {
          continue;
        }
        *((void *)this + 1) = v43 + 1;
        *(_DWORD *)(a1 + 64) |= 8u;
        uint64_t v16 = *(int **)(a1 + 40);
        if (!v16) {
LABEL_69:
        }
          operator new();
LABEL_25:
        unsigned int v55 = 0;
        uint64_t v17 = (char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v55))return 0; {
        }
          }
        else
        {
          unsigned int v55 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        int v44 = *((_DWORD *)this + 14);
        int v45 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v44 + 1;
        if (v44 >= v45) {
          return 0;
        }
        int v46 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v55);
        if (!sub_1000F94F4(v16, this, v47, v48) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v46);
        int v49 = *((_DWORD *)this + 14);
        BOOL v25 = __OFSUB__(v49, 1);
        int v50 = v49 - 1;
        if (v50 < 0 == v25) {
          *((_DWORD *)this + 14) = v50;
        }
        unint64_t v51 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v51 >= *((void *)this + 2) || *v51 != 45) {
          continue;
        }
        *((void *)this + 1) = v51 + 1;
        unsigned int v55 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v55) & 1) == 0) {
          return 0;
        }
LABEL_81:
        *(_DWORD *)(a1 + ++*(_DWORD *)(result + 56) = v55;
        int v52 = *(_DWORD *)(a1 + 64) | 0x10;
        *(_DWORD *)(a1 + 64) = v52;
        int v53 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v53 >= *((void *)this + 2) || *v53 != 50) {
          continue;
        }
        *((void *)this + 1) = v53 + 1;
        *(_DWORD *)(a1 + 64) = v52 | 0x20;
        uint64_t v18 = *(void *)(a1 + 48);
        if (!v18) {
LABEL_84:
        }
          operator new();
LABEL_85:
        uint64_t result = sub_1000FB340(this, v18);
        if (!result) {
          return result;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 64) |= 2u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (v12) {
          goto LABEL_17;
        }
        goto LABEL_45;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 64) |= 4u;
        uint64_t v14 = *(int **)(a1 + 32);
        if (v14) {
          goto LABEL_21;
        }
        goto LABEL_57;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 64) |= 8u;
        uint64_t v16 = *(int **)(a1 + 40);
        if (v16) {
          goto LABEL_25;
        }
        goto LABEL_69;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_33;
        }
        unsigned int v55 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v55) & 1) == 0) {
          return 0;
        }
        goto LABEL_81;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 64) |= 0x20u;
        uint64_t v18 = *(void *)(a1 + 48);
        if (!v18) {
          goto LABEL_84;
        }
        goto LABEL_85;
      default:
        int v9 = TagFallback & 7;
LABEL_33:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

void sub_1000FB284()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000FB2AC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000FB2D4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000FB300()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000FB340(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, int a2)
{
  unsigned int v16 = 0;
  uint64_t v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
    if (!result) {
      return result;
    }
  }
  else
  {
    unsigned int v16 = *v4;
    *((void *)this + 1) = v4 + 1;
  }
  int v6 = *((_DWORD *)this + 14);
  int v7 = *((_DWORD *)this + 15);
  *((_DWORD *)this + 14) = v6 + 1;
  if (v6 >= v7) {
    return 0;
  }
  int v9 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v16);
  unsigned int v10 = a2 + 8;
  while (1)
  {
    uint64_t v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        break;
      }
    }
    else
    {
      TagFallbacunsigned int k = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        break;
      }
    }
    if ((TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v10, v8) & 1) == 0)return 0; {
  }
    }
  if (!*((unsigned char *)this + 36)) {
    return 0;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v9);
  int v13 = *((_DWORD *)this + 14);
  BOOL v14 = __OFSUB__(v13, 1);
  int v15 = v13 - 1;
  if (v15 < 0 == v14) {
    *((_DWORD *)this + 14) = v15;
  }
  return 1;
}

uint64_t sub_1000FB48C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 64);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_13:
    uint64_t v11 = *(void *)(v5 + 24);
    if (v11)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v11, a2, a4);
      int v6 = *(_DWORD *)(v5 + 64);
      if ((v6 & 4) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(qword_10047E990 + 24), a2, a4);
      int v6 = *(_DWORD *)(v5 + 64);
      if ((v6 & 4) != 0) {
        goto LABEL_17;
      }
    }
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_21:
    uint64_t v13 = *(void *)(v5 + 40);
    if (v13)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v13, a2, a4);
      int v6 = *(_DWORD *)(v5 + 64);
      if ((v6 & 0x10) != 0) {
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(qword_10047E990 + 40), a2, a4);
      int v6 = *(_DWORD *)(v5 + 64);
      if ((v6 & 0x10) != 0) {
        goto LABEL_25;
      }
    }
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
  uint64_t v10 = *(void *)(result + 16);
  if (v10)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
    int v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) != 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047E990 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) != 0) {
      goto LABEL_13;
    }
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    goto LABEL_4;
  }
LABEL_17:
  uint64_t v12 = *(void *)(v5 + 32);
  if (v12)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v12, a2, a4);
    int v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 8) != 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(qword_10047E990 + 32), a2, a4);
    int v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 8) != 0) {
      goto LABEL_21;
    }
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(float *)(v5 + 56), a3);
  if ((*(_DWORD *)(v5 + 64) & 0x20) == 0)
  {
LABEL_7:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_30;
  }
LABEL_26:
  uint64_t v14 = *(void *)(v5 + 48);
  if (v14)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v14, a2, a4);
    int v15 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v15;
    if (!v15) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(qword_10047E990 + 48), a2, a4);
    unsigned int v16 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v16;
    if (!v16) {
      return result;
    }
  }
LABEL_30:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1000FB660(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 16);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_14:
    uint64_t v11 = (unsigned int *)*((void *)this + 3);
    if (v11)
    {
      *(unsigned char *)uint64_t v3 = 18;
      unsigned int v12 = v3 + 1;
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[8];
      if (v13 <= 0x7F) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v11 = *(unsigned int **)(qword_10047E990 + 24);
      *(unsigned char *)uint64_t v3 = 18;
      unsigned int v12 = v3 + 1;
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[8];
      if (v13 <= 0x7F)
      {
LABEL_16:
        *((unsigned char *)v3 + 1) = (_BYTE)v13;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000F8338((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, (unsigned char *)v3 + 2, a3);
        int v5 = *((_DWORD *)this + 16);
        if ((v5 & 4) != 0) {
          goto LABEL_20;
        }
LABEL_4:
        if ((v5 & 8) == 0) {
          goto LABEL_5;
        }
LABEL_26:
        int v21 = (unsigned int *)*((void *)this + 5);
        if (v21)
        {
          *(unsigned char *)uint64_t v3 = 34;
          unsigned int v22 = v3 + 1;
          uint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21[10];
          if (v23 <= 0x7F) {
            goto LABEL_28;
          }
        }
        else
        {
          int v21 = *(unsigned int **)(qword_10047E990 + 40);
          *(unsigned char *)uint64_t v3 = 34;
          unsigned int v22 = v3 + 1;
          uint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21[10];
          if (v23 <= 0x7F)
          {
LABEL_28:
            *((unsigned char *)v3 + 1) = (_BYTE)v23;
            uint64_t v3 = sub_1000F9820((wireless_diagnostics::google::protobuf::internal::WireFormat *)v21, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2), a3);
            int v5 = *((_DWORD *)this + 16);
            if ((v5 & 0x10) != 0) {
              goto LABEL_32;
            }
LABEL_6:
            if ((v5 & 0x20) == 0) {
              goto LABEL_41;
            }
            goto LABEL_33;
          }
        }
        int v24 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, v22, a3);
        uint64_t v3 = sub_1000F9820((wireless_diagnostics::google::protobuf::internal::WireFormat *)v21, v24, v25);
        int v5 = *((_DWORD *)this + 16);
        if ((v5 & 0x10) != 0) {
          goto LABEL_32;
        }
        goto LABEL_6;
      }
    }
    uint64_t v14 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v12, a3);
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000F8338((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v14, v15);
    int v5 = *((_DWORD *)this + 16);
    if ((v5 & 4) != 0) {
      goto LABEL_20;
    }
    goto LABEL_4;
  }
  uint64_t v6 = *((void *)this + 2);
  if (v6)
  {
    *(unsigned char *)a2 = 10;
    unsigned int v7 = a2 + 1;
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 40);
    if (v8 <= 0x7F) {
      goto LABEL_10;
    }
LABEL_13:
    uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000E8A40(v6, v9, v10);
    int v5 = *((_DWORD *)this + 16);
    if ((v5 & 2) != 0) {
      goto LABEL_14;
    }
    goto LABEL_3;
  }
  uint64_t v6 = *(void *)(qword_10047E990 + 16);
  *(unsigned char *)a2 = 10;
  unsigned int v7 = a2 + 1;
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 40);
  if (v8 > 0x7F) {
    goto LABEL_13;
  }
LABEL_10:
  *((unsigned char *)v3 + 1) = (_BYTE)v8;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000E8A40(v6, (uint64_t)v3 + 2, a3);
  int v5 = *((_DWORD *)this + 16);
  if ((v5 & 2) != 0) {
    goto LABEL_14;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    goto LABEL_4;
  }
LABEL_20:
  unsigned int v16 = (unsigned int *)*((void *)this + 4);
  if (v16)
  {
    *(unsigned char *)uint64_t v3 = 26;
    unsigned int v17 = v3 + 1;
    uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[10];
    if (v18 <= 0x7F) {
      goto LABEL_22;
    }
LABEL_25:
    int v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, v17, a3);
    uint64_t v3 = sub_1000EB5D4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, v19, v20);
    int v5 = *((_DWORD *)this + 16);
    if ((v5 & 8) != 0) {
      goto LABEL_26;
    }
    goto LABEL_5;
  }
  unsigned int v16 = *(unsigned int **)(qword_10047E990 + 32);
  *(unsigned char *)uint64_t v3 = 26;
  unsigned int v17 = v3 + 1;
  uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[10];
  if (v18 > 0x7F) {
    goto LABEL_25;
  }
LABEL_22:
  *((unsigned char *)v3 + 1) = (_BYTE)v18;
  uint64_t v3 = sub_1000EB5D4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2), a3);
  int v5 = *((_DWORD *)this + 16);
  if ((v5 & 8) != 0) {
    goto LABEL_26;
  }
LABEL_5:
  if ((v5 & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_32:
  int v26 = *((_DWORD *)this + 14);
  *(unsigned char *)uint64_t v3 = 45;
  *(_DWORD *)((char *)v3 + 1) = v26;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  if ((*((_DWORD *)this + 16) & 0x20) == 0) {
    goto LABEL_41;
  }
LABEL_33:
  uint64_t v27 = *((void *)this + 6);
  if (v27)
  {
    *(unsigned char *)uint64_t v3 = 50;
    unsigned int v28 = v3 + 1;
    int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v27 + 16);
    if (v29 <= 0x7F) {
      goto LABEL_35;
    }
LABEL_38:
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v29, v28, a3);
    int v33 = *(void **)(v27 + 8);
    uint64_t v31 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v27 + 8);
    int v30 = v33;
    if (!v33) {
      goto LABEL_41;
    }
    goto LABEL_39;
  }
  uint64_t v27 = *(void *)(qword_10047E990 + 48);
  *(unsigned char *)uint64_t v3 = 50;
  unsigned int v28 = v3 + 1;
  int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v27 + 16);
  if (v29 > 0x7F) {
    goto LABEL_38;
  }
LABEL_35:
  *((unsigned char *)v3 + 1) = (_BYTE)v29;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  unint64_t v32 = *(void **)(v27 + 8);
  uint64_t v31 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v27 + 8);
  int v30 = v32;
  if (!v32) {
    goto LABEL_41;
  }
LABEL_39:
  if (*v30 != v30[1]) {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v31, v3, a3);
  }
LABEL_41:
  int v36 = (void *)*((void *)this + 1);
  unsigned int v35 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v34 = v36;
  if (!v36 || *v34 == v34[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v35, v3, a3);
}

uint64_t sub_1000FB998(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 64);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    unsigned int v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_90;
    }
    goto LABEL_88;
  }
  if ((*(unsigned char *)(a1 + 64) & 1) == 0)
  {
    unsigned int v4 = 0;
    if ((*(unsigned char *)(a1 + 64) & 2) == 0) {
      goto LABEL_31;
    }
LABEL_25:
    uint64_t v15 = *(void *)(a1 + 24);
    if (v15)
    {
      unsigned int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000F84E4(v15, a2);
      if (v16 < 0x80)
      {
LABEL_27:
        int v17 = 1;
LABEL_30:
        v4 += v16 + v17 + 1;
        int v3 = *(_DWORD *)(a1 + 64);
        goto LABEL_31;
      }
    }
    else
    {
      unsigned int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000F84E4(*(void *)(qword_10047E990 + 24), a2);
      if (v16 < 0x80) {
        goto LABEL_27;
      }
    }
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
    goto LABEL_30;
  }
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    int v9 = *(unsigned __int8 *)(v8 + 44);
    if (*(unsigned char *)(v8 + 44)) {
      goto LABEL_9;
    }
LABEL_17:
    int v11 = 0;
    unsigned int v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v8 + 8);
    uint64_t v13 = *(void **)(v8 + 8);
    if (!v13) {
      goto LABEL_22;
    }
    goto LABEL_18;
  }
  uint64_t v8 = *(void *)(qword_10047E990 + 16);
  int v9 = *(unsigned __int8 *)(v8 + 44);
  if (!*(unsigned char *)(v8 + 44)) {
    goto LABEL_17;
  }
LABEL_9:
  int v10 = (v9 << 31 >> 31) & 9;
  if ((v9 & 2) != 0) {
    v10 += 9;
  }
  if ((v9 & 4) != 0) {
    int v11 = v10 + 9;
  }
  else {
    int v11 = v10;
  }
  unsigned int v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v8 + 8);
  uint64_t v13 = *(void **)(v8 + 8);
  if (!v13)
  {
LABEL_22:
    *(_DWORD *)(v8 + 40) = v11;
    unsigned int v4 = v11 + 2;
    int v3 = *(_DWORD *)(a1 + 64);
    if ((v3 & 2) != 0) {
      goto LABEL_25;
    }
    goto LABEL_31;
  }
LABEL_18:
  if (*v13 == v13[1]) {
    goto LABEL_22;
  }
  uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v12, a2)+ v11);
  *(_DWORD *)(v8 + 40) = v14;
  if (v14 >= 0x80)
  {
    unsigned int v4 = v14
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2)
       + 1;
    int v3 = *(_DWORD *)(a1 + 64);
    if ((v3 & 2) == 0) {
      goto LABEL_31;
    }
    goto LABEL_25;
  }
  unsigned int v4 = v14 + 2;
  int v3 = *(_DWORD *)(a1 + 64);
  if ((v3 & 2) != 0) {
    goto LABEL_25;
  }
LABEL_31:
  if ((v3 & 4) != 0)
  {
    uint64_t v18 = *(void *)(a1 + 32);
    if (!v18) {
      uint64_t v18 = *(void *)(qword_10047E990 + 32);
    }
    unint64_t v19 = *(unsigned int *)(v18 + 24);
    if ((int)v19 >= 1)
    {
      uint64_t v20 = 0;
      do
      {
        unsigned int v22 = *(_DWORD **)(*(void *)(v18 + 16) + 8 * v20);
        unint64_t v23 = (9 * v22[6]);
        int v24 = (void *)*((void *)v22 + 1);
        if (v24 && *v24 != v24[1]) {
          unint64_t v23 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v22 + 2), a2)+ v23;
        }
        v22[8] = v23;
        if (v23 >= 0x80) {
          int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23, a2);
        }
        else {
          int v21 = 1;
        }
        unint64_t v19 = (v23 + v19 + v21);
        ++v20;
      }
      while (v20 < *(int *)(v18 + 24));
    }
    BOOL v25 = *(void **)(v18 + 8);
    if (v25 && *v25 != v25[1]) {
      unint64_t v19 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v18 + 8), a2)+ v19;
    }
    *(_DWORD *)(v18 + 40) = v19;
    if (v19 >= 0x80)
    {
      v4 += v19
          + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19, a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 64);
      if ((v3 & 8) != 0) {
        goto LABEL_57;
      }
    }
    else
    {
      v4 += v19 + 2;
      int v3 = *(_DWORD *)(a1 + 64);
      if ((v3 & 8) != 0) {
        goto LABEL_57;
      }
    }
LABEL_33:
    if ((v3 & 0x10) != 0) {
      uint64_t v5 = v4 + 5;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 0x20) == 0) {
      goto LABEL_37;
    }
LABEL_78:
    uint64_t v37 = *(void *)(a1 + 48);
    if (v37)
    {
      int v38 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v37 + 8);
      uint64_t v39 = *(void **)(v37 + 8);
      if (!v39) {
        goto LABEL_85;
      }
    }
    else
    {
      uint64_t v37 = *(void *)(qword_10047E990 + 48);
      int v38 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v37 + 8);
      uint64_t v39 = *(void **)(v37 + 8);
      if (!v39) {
        goto LABEL_85;
      }
    }
    if (*v39 != v39[1])
    {
      unsigned int v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v38, a2);
      int v41 = (int)v40;
      *(_DWORD *)(v37 + 16) = v40;
      if (v40 >= 0x80) {
        int v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v40, a2);
      }
      else {
        int v42 = 1;
      }
LABEL_87:
      uint64_t v5 = (v5 + v41 + v42 + 1);
      uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      unsigned int v7 = *(void **)(a1 + 8);
      if (!v7) {
        goto LABEL_90;
      }
      goto LABEL_88;
    }
LABEL_85:
    int v41 = 0;
    *(_DWORD *)(v37 + 16) = 0;
    int v42 = 1;
    goto LABEL_87;
  }
  if ((v3 & 8) == 0) {
    goto LABEL_33;
  }
LABEL_57:
  uint64_t v26 = *(void *)(a1 + 40);
  if (!v26) {
    uint64_t v26 = *(void *)(qword_10047E990 + 40);
  }
  unint64_t v27 = *(unsigned int *)(v26 + 24);
  if ((int)v27 >= 1)
  {
    uint64_t v28 = 0;
    do
    {
      int v30 = *(_DWORD **)(*(void *)(v26 + 16) + 8 * v28);
      unint64_t v31 = (5 * v30[6]);
      unint64_t v32 = (void *)*((void *)v30 + 1);
      if (v32 && *v32 != v32[1]) {
        unint64_t v31 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v30 + 2), a2)+ v31;
      }
      v30[8] = v31;
      if (v31 >= 0x80) {
        int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v31, a2);
      }
      else {
        int v29 = 1;
      }
      unint64_t v27 = (v31 + v27 + v29);
      ++v28;
    }
    while (v28 < *(int *)(v26 + 24));
  }
  int v33 = *(void **)(v26 + 8);
  if (v33 && *v33 != v33[1]) {
    unint64_t v27 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v26 + 8), a2)+ v27;
  }
  *(_DWORD *)(v26 + 40) = v27;
  if (v27 >= 0x80) {
    int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v27, a2);
  }
  else {
    int v34 = 1;
  }
  unsigned int v35 = v4 + v27 + v34 + 1;
  int v36 = *(_DWORD *)(a1 + 64);
  if ((v36 & 0x10) != 0) {
    uint64_t v5 = v35 + 5;
  }
  else {
    uint64_t v5 = v35;
  }
  if ((v36 & 0x20) != 0) {
    goto LABEL_78;
  }
LABEL_37:
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v7 = *(void **)(a1 + 8);
  if (!v7) {
    goto LABEL_90;
  }
LABEL_88:
  if (*v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
LABEL_90:
  *(_DWORD *)(a1 + 60) = v5;
  return v5;
}

uint64_t sub_1000FBDC8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000FA1CC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1000FBEA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000FBEBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000FBED0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1000FBF5C()
{
  return 1;
}

uint64_t sub_1000FBF64()
{
  uint64_t v0 = qword_10047D6B0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000E5F58;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D678;
}

void sub_1000FBFF4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000FC008(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1000FC010(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000FC018(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000FC020(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1000FC028(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1000FC030(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000FC038(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_1000FC040(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_1000FC048(uint64_t a1)
{
  return *(unsigned int *)(a1 + 92);
}

uint64_t sub_1000FC050(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000FC058(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1000FC060(uint64_t a1)
{
  return *(unsigned int *)(a1 + 76);
}

uint64_t sub_1000FC068(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1000FC070(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1000FC078(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1000FC080(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000FC088(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1000FC090(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1000FC098(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_1000FC0A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_1000FC0A8(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_1000E8E24(*(void *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_1000FC1C4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000FC1EC(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_1000E98DC(*(void *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_1000FC308()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000FC330(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_1000F19DC(*(void *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_1000FC44C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000FC474(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_1000F32C0(*(void *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_1000FC5AC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000FC5D4(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_1000F8820(*(void *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_1000FC6F0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000FC71C()
{
  uint64_t v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_1000FCEAC();
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  std::string __p = operator new(0x28uLL);
  long long v3 = xmmword_1003E8C80;
  strcpy((char *)__p, "CLPOutdoorEstimatorLogEntry.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  operator delete(__p);
  if (!FileByName)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  }
  qword_10047D6C8 = *(void *)(FileByName + 80);
  operator new();
}

void sub_1000FCE18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000FCE2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000FCE40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000FCEAC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10047D6B8 & 1) == 0)
  {
    byte_10047D6B8 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/protobuf/clpsensorsurvey/Proto/CLPOutdoorEstimatorLogEntry.pb.cc", a4);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)&unk_1003E8D5C, (const void *)0x12E8, v4);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_1000FD5D0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000FD604()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000FD6E4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000FD710()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000FD73C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000FD768()
{
  if (qword_10047E998) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E998 + 8))(qword_10047E998);
  }
  if (qword_10047D6D0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D6D0 + 8))(qword_10047D6D0);
  }
  if (qword_10047E9A0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E9A0 + 8))(qword_10047E9A0);
  }
  if (qword_10047D6E0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D6E0 + 8))(qword_10047D6E0);
  }
  if (qword_10047E9A8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E9A8 + 8))(qword_10047E9A8);
  }
  if (qword_10047D6F0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D6F0 + 8))(qword_10047D6F0);
  }
  if (qword_10047E9B0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E9B0 + 8))(qword_10047E9B0);
  }
  if (qword_10047D700) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D700 + 8))(qword_10047D700);
  }
  if (qword_10047E9B8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E9B8 + 8))(qword_10047E9B8);
  }
  if (qword_10047D718) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D718 + 8))(qword_10047D718);
  }
  if (qword_10047E9C0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E9C0 + 8))(qword_10047E9C0);
  }
  if (qword_10047D738) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D738 + 8))(qword_10047D738);
  }
  if (qword_10047E9C8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E9C8 + 8))(qword_10047E9C8);
  }
  if (qword_10047D748) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D748 + 8))(qword_10047D748);
  }
  if (qword_10047E9D0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E9D0 + 8))(qword_10047E9D0);
  }
  if (qword_10047D758) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D758 + 8))(qword_10047D758);
  }
  if (qword_10047E9D8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E9D8 + 8))(qword_10047E9D8);
  }
  if (qword_10047D768) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D768 + 8))(qword_10047D768);
  }
  if (qword_10047E9E0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E9E0 + 8))(qword_10047E9E0);
  }
  if (qword_10047D780) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D780 + 8))(qword_10047D780);
  }
  if (qword_10047E9E8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E9E8 + 8))(qword_10047E9E8);
  }
  if (qword_10047D790) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D790 + 8))(qword_10047D790);
  }
  if (qword_10047E9F0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E9F0 + 8))(qword_10047E9F0);
  }
  uint64_t result = qword_10047D7A0;
  if (qword_10047D7A0)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10047D7A0 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_1000FDC10()
{
  uint64_t v0 = qword_10047D7B8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v13[1] = sub_1000FC71C;
    char v14 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v13);
  }
  if (!qword_10047E998) {
    ((void (*)(void))sub_1000FCEAC)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E9A0) {
    sub_1000FCEAC(v1);
  }
  uint64_t v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E9A8) {
    sub_1000FCEAC(v2);
  }
  uint64_t v3 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E9B0) {
    sub_1000FCEAC(v3);
  }
  uint64_t v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E9B8) {
    sub_1000FCEAC(v4);
  }
  uint64_t v5 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E9C0) {
    sub_1000FCEAC(v5);
  }
  uint64_t v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E9C8) {
    sub_1000FCEAC(v6);
  }
  uint64_t v7 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E9D0) {
    sub_1000FCEAC(v7);
  }
  uint64_t v8 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E9D8) {
    sub_1000FCEAC(v8);
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E9E0) {
    sub_1000FCEAC(v9);
  }
  uint64_t v10 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E9E8) {
    sub_1000FCEAC(v10);
  }
  uint64_t v11 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047E9F0) {
    sub_1000FCEAC(v11);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_1000FDE5C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000FDE70(uint64_t a1)
{
  *(void *)a1 = off_100455AB8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_1000FDEC4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000FDED8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
    int v4 = *(_DWORD *)(a2 + 92);
    if (!(_BYTE)v4) {
      goto LABEL_45;
    }
  }
  else
  {
    int v4 = *(_DWORD *)(a2 + 92);
    if (!(_BYTE)v4) {
      goto LABEL_45;
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 92) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047E998 + 16);
    }
    sub_100100E2C(v5, v6);
    int v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 2u;
    uint64_t v7 = *(void *)(a1 + 24);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10047E998 + 24);
    }
    sub_1001010AC(v7, v8);
    int v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 4) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 4u;
    uint64_t v9 = *(void *)(a1 + 32);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = *(void *)(a2 + 32);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_10047E998 + 32);
    }
    sub_100101238(v9, v10);
    int v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 8) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 8u;
    uint64_t v11 = *(void *)(a1 + 40);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 40);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_10047E998 + 40);
    }
    sub_100101408(v11, v12);
    int v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 0x10) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 0x10u;
    uint64_t v13 = *(void *)(a1 + 48);
    if (!v13) {
      operator new();
    }
    uint64_t v14 = *(void *)(a2 + 48);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_10047E998 + 48);
    }
    sub_1001015A4(v13, v14);
    int v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 0x20) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 0x20u;
    uint64_t v15 = *(void *)(a1 + 56);
    if (!v15) {
      operator new();
    }
    uint64_t v16 = *(void *)(a2 + 56);
    if (!v16) {
      uint64_t v16 = *(void *)(qword_10047E998 + 56);
    }
    sub_10010183C(v15, v16);
    int v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 0x40) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 0x40u;
    uint64_t v17 = *(void *)(a1 + 64);
    if (!v17) {
      operator new();
    }
    uint64_t v18 = *(void *)(a2 + 64);
    if (!v18) {
      uint64_t v18 = *(void *)(qword_10047E998 + 64);
    }
    sub_1001019C8(v17, v18);
    int v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 0x80) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 0x80u;
    uint64_t v19 = *(void *)(a1 + 72);
    if (!v19) {
      operator new();
    }
    uint64_t v20 = *(void *)(a2 + 72);
    if (!v20) {
      uint64_t v20 = *(void *)(qword_10047E998 + 72);
    }
    sub_100101B54(v19, v20);
    int v4 = *(_DWORD *)(a2 + 92);
  }
LABEL_45:
  if ((v4 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 0x100u;
    uint64_t v21 = *(void *)(a1 + 80);
    if (!v21) {
      operator new();
    }
    uint64_t v22 = *(void *)(a2 + 80);
    if (!v22) {
      uint64_t v22 = *(void *)(qword_10047E998 + 80);
    }
    sub_100101CE0(v21, v22);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1000FE490()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1000FE58C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1000FE5A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000FE5B4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_100455AB8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  sub_1000FDED8(a1, a2);
  return a1;
}

void sub_1000FE628(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_1000FE644(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void *sub_1000FE658(void *result)
{
  if ((void *)qword_10047E998 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[4];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[5];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[6];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[7];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = v1[8];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = v1[9];
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t result = (void *)v1[10];
    if (result)
    {
      uint64_t v10 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v10();
    }
  }
  return result;
}

void sub_1000FE82C(void *a1)
{
  *a1 = off_100455AB8;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_1000FE658(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1000FE88C(void *a1)
{
  *a1 = off_100455AB8;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_1000FE658(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1000FE900(uint64_t result, int a2)
{
  *(_DWORD *)(result + 88) = a2;
  return result;
}

uint64_t sub_1000FE908(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047E998;
  if (!qword_10047E998)
  {
    sub_1000FCEAC(0, a2, a3, a4);
    return qword_10047E998;
  }
  return result;
}

void sub_1000FE944()
{
}

void sub_1000FE9B0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1000FE9D8(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 92);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 92))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        this = sub_1000FECEC(this);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 24);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 32))
        {
          if (*(unsigned char *)(v3 + 32))
          {
            this = *(void *)(v3 + 16);
            if (this)
            {
              if (*(unsigned char *)(this + 44))
              {
                *(void *)(this + 16) = 0;
                *(void *)(this + 24) = 0;
                *(void *)(this + 32) = 0;
              }
              uint64_t v4 = *(void *)(this + 8);
              this += 8;
              *(_DWORD *)(this + 36) = 0;
              if (v4) {
                this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
              }
            }
          }
          *(_DWORD *)(v3 + 24) = 0;
        }
        uint64_t v6 = *(void *)(v3 + 8);
        uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v3 + 8);
        *((_DWORD *)v5 + 6) = 0;
        if (v6) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 92) & 4) != 0)
    {
      uint64_t v7 = *(void *)(v1 + 32);
      if (v7)
      {
        if (*(unsigned char *)(v7 + 44))
        {
          if (*(unsigned char *)(v7 + 44))
          {
            this = *(void *)(v7 + 16);
            if (this)
            {
              if (*(unsigned char *)(this + 44))
              {
                *(void *)(this + 16) = 0;
                *(void *)(this + 24) = 0;
                *(void *)(this + 32) = 0;
              }
              uint64_t v8 = *(void *)(this + 8);
              this += 8;
              *(_DWORD *)(this + 36) = 0;
              if (v8) {
                this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
              }
            }
          }
          *(void *)(v7 + 24) = 0;
          *(void *)(v7 + 32) = 0;
        }
        uint64_t v10 = *(void *)(v7 + 8);
        uint64_t v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v7 + 8);
        *((_DWORD *)v9 + 9) = 0;
        if (v10) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v9);
        }
      }
    }
    int v11 = *(_DWORD *)(v1 + 92);
    if ((v11 & 8) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this)
      {
        this = sub_1000FEEAC(this);
        int v11 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v11 & 0x10) != 0)
    {
      uint64_t v12 = *(void *)(v1 + 48);
      if (v12)
      {
        int v13 = *(_DWORD *)(v12 + 40);
        if ((_BYTE)v13)
        {
          if (v13)
          {
            this = *(void *)(v12 + 16);
            if (this)
            {
              if (*(unsigned char *)(this + 44))
              {
                *(void *)(this + 16) = 0;
                *(void *)(this + 24) = 0;
                *(void *)(this + 32) = 0;
              }
              uint64_t v14 = *(void *)(this + 8);
              this += 8;
              *(_DWORD *)(this + 36) = 0;
              if (v14) {
                this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
              }
            }
          }
          *(_DWORD *)(v12 + 27) = 0;
          *(_DWORD *)(v12 + 24) = 0;
          int v13 = *(_DWORD *)(v12 + 40);
        }
        if ((v13 & 0xFF00) != 0) {
          *(_WORD *)(v12 + 31) = 0;
        }
        uint64_t v16 = *(void *)(v12 + 8);
        uint64_t v15 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v12 + 8);
        *((_DWORD *)v15 + 8) = 0;
        if (v16) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v15);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 92) & 0x20) != 0)
    {
      uint64_t v17 = *(void *)(v1 + 56);
      if (v17)
      {
        if (*(unsigned char *)(v17 + 32))
        {
          if (*(unsigned char *)(v17 + 32))
          {
            this = *(void *)(v17 + 16);
            if (this)
            {
              if (*(unsigned char *)(this + 44))
              {
                *(void *)(this + 16) = 0;
                *(void *)(this + 24) = 0;
                *(void *)(this + 32) = 0;
              }
              uint64_t v18 = *(void *)(this + 8);
              this += 8;
              *(_DWORD *)(this + 36) = 0;
              if (v18) {
                this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
              }
            }
          }
          *(_DWORD *)(v17 + 24) = 0;
        }
        uint64_t v20 = *(void *)(v17 + 8);
        uint64_t v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v17 + 8);
        *((_DWORD *)v19 + 6) = 0;
        if (v20) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v19);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 92) & 0x40) != 0)
    {
      uint64_t v21 = *(void *)(v1 + 64);
      if (v21)
      {
        if (*(unsigned char *)(v21 + 36))
        {
          if (*(unsigned char *)(v21 + 36))
          {
            this = *(void *)(v21 + 16);
            if (this)
            {
              if (*(unsigned char *)(this + 44))
              {
                *(void *)(this + 16) = 0;
                *(void *)(this + 24) = 0;
                *(void *)(this + 32) = 0;
              }
              uint64_t v22 = *(void *)(this + 8);
              this += 8;
              *(_DWORD *)(this + 36) = 0;
              if (v22) {
                this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
              }
            }
          }
          *(void *)(v21 + 24) = 0;
        }
        uint64_t v24 = *(void *)(v21 + 8);
        unint64_t v23 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v21 + 8);
        *((_DWORD *)v23 + 7) = 0;
        if (v24) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v23);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 92) & 0x80) != 0)
    {
      uint64_t v25 = *(void *)(v1 + 72);
      if (v25)
      {
        if (*(unsigned char *)(v25 + 36))
        {
          if (*(unsigned char *)(v25 + 36))
          {
            this = *(void *)(v25 + 16);
            if (this)
            {
              if (*(unsigned char *)(this + 44))
              {
                *(void *)(this + 16) = 0;
                *(void *)(this + 24) = 0;
                *(void *)(this + 32) = 0;
              }
              uint64_t v26 = *(void *)(this + 8);
              this += 8;
              *(_DWORD *)(this + 36) = 0;
              if (v26) {
                this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
              }
            }
          }
          *(void *)(v25 + 24) = 0;
        }
        uint64_t v28 = *(void *)(v25 + 8);
        unint64_t v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v25 + 8);
        *((_DWORD *)v27 + 7) = 0;
        if (v28) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v27);
        }
      }
    }
  }
  if (*(unsigned char *)(v1 + 93))
  {
    uint64_t v29 = *(void *)(v1 + 80);
    if (v29)
    {
      if (*(unsigned char *)(v29 + 36))
      {
        if (*(unsigned char *)(v29 + 36))
        {
          this = *(void *)(v29 + 16);
          if (this)
          {
            if (*(unsigned char *)(this + 44))
            {
              *(void *)(this + 16) = 0;
              *(void *)(this + 24) = 0;
              *(void *)(this + 32) = 0;
            }
            uint64_t v30 = *(void *)(this + 8);
            this += 8;
            *(_DWORD *)(this + 36) = 0;
            if (v30) {
              this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
            }
          }
        }
        *(void *)(v29 + 24) = 0;
      }
      uint64_t v32 = *(void *)(v29 + 8);
      unint64_t v31 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v29 + 8);
      *((_DWORD *)v31 + 7) = 0;
      if (v32) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v31);
      }
    }
  }
  uint64_t v34 = *(void *)(v1 + 8);
  int v33 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v33 + 21) = 0;
  if (v34)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v33);
  }
  return this;
}

uint64_t sub_1000FECEC(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 60))
  {
    if (*(unsigned char *)(this + 60))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 60) & 2) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
  }
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 13) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_1000FEDA4(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 32))
  {
    if (*(unsigned char *)(this + 32))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 6) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_1000FEE28(uint64_t this)
{
  uint64_t v1 = (void *)this;
  if (*(unsigned char *)(this + 44))
  {
    if (*(unsigned char *)(this + 44))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    v1[3] = 0;
    v1[4] = 0;
  }
  uint64_t v4 = v1[1];
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 1);
  *((_DWORD *)v3 + 9) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_1000FEEAC(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 148))
  {
    this = *(void *)(this + 16);
    if (this)
    {
      if (*(unsigned char *)(this + 44))
      {
        *(void *)(this + 16) = 0;
        *(void *)(this + 24) = 0;
        *(void *)(this + 32) = 0;
      }
      uint64_t v2 = *(void *)(this + 8);
      this += 8;
      *(_DWORD *)(this + 36) = 0;
      if (v2) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  if (*(int *)(v1 + 32) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(v1 + 24) + 8 * v3);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 32));
  }
  *(_DWORD *)(v1 + 32) = 0;
  if (*(int *)(v1 + 56) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(v1 + 48) + 8 * v5);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 32))(v6);
      ++v5;
    }
    while (v5 < *(int *)(v1 + 56));
  }
  *(_DWORD *)(v1 + ++*(_DWORD *)(result + 56) = 0;
  if (*(int *)(v1 + 80) >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = *(void *)(*(void *)(v1 + 72) + 8 * v7);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 32))(v8);
      ++v7;
    }
    while (v7 < *(int *)(v1 + 80));
  }
  *(_DWORD *)(v1 + 80) = 0;
  if (*(int *)(v1 + 104) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = *(void *)(*(void *)(v1 + 96) + 8 * v9);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 32))(v10);
      ++v9;
    }
    while (v9 < *(int *)(v1 + 104));
  }
  *(_DWORD *)(v1 + 104) = 0;
  if (*(int *)(v1 + 128) >= 1)
  {
    uint64_t v11 = 0;
    do
    {
      uint64_t v12 = *(void *)(*(void *)(v1 + 120) + 8 * v11);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v12 + 32))(v12);
      ++v11;
    }
    while (v11 < *(int *)(v1 + 128));
  }
  uint64_t v14 = *(void *)(v1 + 8);
  int v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v13 + 30) = 0;
  *((_DWORD *)v13 + 35) = 0;
  if (v14)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v13);
  }
  return this;
}

uint64_t sub_1000FF0B8(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 40);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(_DWORD *)(v1 + 27) = 0;
    *(_DWORD *)(v1 + 24) = 0;
    int v2 = *(_DWORD *)(v1 + 40);
  }
  if ((v2 & 0xFF00) != 0) {
    *(_WORD *)(v1 + 31) = 0;
  }
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 8) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_1000FF154(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 32))
  {
    if (*(unsigned char *)(this + 32))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 6) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_1000FF1D8(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 36))
  {
    if (*(unsigned char *)(this + 36))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(void *)(v1 + 24) = 0;
  }
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 7) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_1000FF25C(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 36))
  {
    if (*(unsigned char *)(this + 36))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(void *)(v1 + 24) = 0;
  }
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 7) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_1000FF2E0(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 36))
  {
    if (*(unsigned char *)(this + 36))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(void *)(v1 + 24) = 0;
  }
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 7) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_1000FF364(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 < *((void *)this + 2) && (*v7 & 0x80000000) == 0)
    {
      TagFallbacunsigned int k = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 92) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        unsigned int v101 = 0;
        uint64_t v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v101))return 0; {
        }
          }
        else
        {
          unsigned int v101 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v28 = *((_DWORD *)this + 14);
        int v29 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v28 + 1;
        if (v28 >= v29) {
          return 0;
        }
        int v30 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v101);
        if (!sub_100102C00(v10, this, v31, v32) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v30);
        int v33 = *((_DWORD *)this + 14);
        BOOL v34 = __OFSUB__(v33, 1);
        int v35 = v33 - 1;
        if (v35 < 0 == v34) {
          *((_DWORD *)this + 14) = v35;
        }
        int v36 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v36 >= *((void *)this + 2) || *v36 != 18) {
          continue;
        }
        *((void *)this + 1) = v36 + 1;
        *(_DWORD *)(a1 + 92) |= 2u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12) {
LABEL_59:
        }
          operator new();
LABEL_16:
        unsigned int v101 = 0;
        int v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v101))return 0; {
        }
          }
        else
        {
          unsigned int v101 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        int v37 = *((_DWORD *)this + 14);
        int v38 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v37 + 1;
        if (v37 >= v38) {
          return 0;
        }
        int v39 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v101);
        if (!sub_100103CBC(v12, this, v40, v41) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v39);
        int v42 = *((_DWORD *)this + 14);
        BOOL v34 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v34) {
          *((_DWORD *)this + 14) = v43;
        }
        int v44 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v44 >= *((void *)this + 2) || *v44 != 26) {
          continue;
        }
        *((void *)this + 1) = v44 + 1;
        *(_DWORD *)(a1 + 92) |= 4u;
        uint64_t v14 = *(void *)(a1 + 32);
        if (!v14) {
LABEL_71:
        }
          operator new();
LABEL_20:
        unsigned int v101 = 0;
        uint64_t v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v101))return 0; {
        }
          }
        else
        {
          unsigned int v101 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v45 = *((_DWORD *)this + 14);
        int v46 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v45 + 1;
        if (v45 >= v46) {
          return 0;
        }
        int v47 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v101);
        if (!sub_100104734(v14, this, v48, v49) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v47);
        int v50 = *((_DWORD *)this + 14);
        BOOL v34 = __OFSUB__(v50, 1);
        int v51 = v50 - 1;
        if (v51 < 0 == v34) {
          *((_DWORD *)this + 14) = v51;
        }
        int v52 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v52 >= *((void *)this + 2) || *v52 != 34) {
          continue;
        }
        *((void *)this + 1) = v52 + 1;
        *(_DWORD *)(a1 + 92) |= 8u;
        uint64_t v16 = *(void *)(a1 + 40);
        if (!v16) {
LABEL_83:
        }
          operator new();
LABEL_24:
        unsigned int v101 = 0;
        uint64_t v17 = (char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v101))return 0; {
        }
          }
        else
        {
          unsigned int v101 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        int v53 = *((_DWORD *)this + 14);
        int v54 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v53 + 1;
        if (v53 >= v54) {
          return 0;
        }
        int v55 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v101);
        if (!sub_100105EF4(v16, this, v56, v57) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v55);
        int v58 = *((_DWORD *)this + 14);
        BOOL v34 = __OFSUB__(v58, 1);
        int v59 = v58 - 1;
        if (v59 < 0 == v34) {
          *((_DWORD *)this + 14) = v59;
        }
        int v60 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v60 >= *((void *)this + 2) || *v60 != 42) {
          continue;
        }
        *((void *)this + 1) = v60 + 1;
        *(_DWORD *)(a1 + 92) |= 0x10u;
        uint64_t v18 = *(void *)(a1 + 48);
        if (!v18) {
LABEL_95:
        }
          operator new();
LABEL_28:
        unsigned int v101 = 0;
        uint64_t v19 = (char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v101))return 0; {
        }
          }
        else
        {
          unsigned int v101 = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        int v61 = *((_DWORD *)this + 14);
        int v62 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v61 + 1;
        if (v61 >= v62) {
          return 0;
        }
        int v63 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v101);
        if (!sub_100107AE0(v18, this, v64, v65) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v63);
        int v66 = *((_DWORD *)this + 14);
        BOOL v34 = __OFSUB__(v66, 1);
        int v67 = v66 - 1;
        if (v67 < 0 == v34) {
          *((_DWORD *)this + 14) = v67;
        }
        uint64_t v68 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v68 >= *((void *)this + 2) || *v68 != 50) {
          continue;
        }
        *((void *)this + 1) = v68 + 1;
        *(_DWORD *)(a1 + 92) |= 0x20u;
        uint64_t v20 = *(void *)(a1 + 56);
        if (!v20) {
LABEL_107:
        }
          operator new();
LABEL_32:
        unsigned int v101 = 0;
        uint64_t v21 = (char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v101))return 0; {
        }
          }
        else
        {
          unsigned int v101 = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        int v69 = *((_DWORD *)this + 14);
        int v70 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v69 + 1;
        if (v69 >= v70) {
          return 0;
        }
        int v71 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v101);
        if (!sub_100108B84(v20, this, v72, v73) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v71);
        int v74 = *((_DWORD *)this + 14);
        BOOL v34 = __OFSUB__(v74, 1);
        int v75 = v74 - 1;
        if (v75 < 0 == v34) {
          *((_DWORD *)this + 14) = v75;
        }
        int v76 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v76 >= *((void *)this + 2) || *v76 != 58) {
          continue;
        }
        *((void *)this + 1) = v76 + 1;
        *(_DWORD *)(a1 + 92) |= 0x40u;
        uint64_t v22 = *(void *)(a1 + 64);
        if (!v22) {
LABEL_119:
        }
          operator new();
LABEL_36:
        unsigned int v101 = 0;
        unint64_t v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v101))return 0; {
        }
          }
        else
        {
          unsigned int v101 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        int v77 = *((_DWORD *)this + 14);
        int v78 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v77 + 1;
        if (v77 >= v78) {
          return 0;
        }
        int v79 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v101);
        if (!sub_1001095FC(v22, this, v80, v81) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v79);
        int v82 = *((_DWORD *)this + 14);
        BOOL v34 = __OFSUB__(v82, 1);
        int v83 = v82 - 1;
        if (v83 < 0 == v34) {
          *((_DWORD *)this + 14) = v83;
        }
        int v84 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v84 >= *((void *)this + 2) || *v84 != 66) {
          continue;
        }
        *((void *)this + 1) = v84 + 1;
        *(_DWORD *)(a1 + 92) |= 0x80u;
        uint64_t v24 = *(void *)(a1 + 72);
        if (!v24) {
LABEL_131:
        }
          operator new();
LABEL_40:
        unsigned int v101 = 0;
        uint64_t v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v101))return 0; {
        }
          }
        else
        {
          unsigned int v101 = *v25;
          *((void *)this + 1) = v25 + 1;
        }
        int v85 = *((_DWORD *)this + 14);
        int v86 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v85 + 1;
        if (v85 >= v86) {
          return 0;
        }
        int v87 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v101);
        if (!sub_10010A004(v24, this, v88, v89) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v87);
        int v90 = *((_DWORD *)this + 14);
        BOOL v34 = __OFSUB__(v90, 1);
        int v91 = v90 - 1;
        if (v91 < 0 == v34) {
          *((_DWORD *)this + 14) = v91;
        }
        long long v92 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v92 >= *((void *)this + 2) || *v92 != 74) {
          continue;
        }
        *((void *)this + 1) = v92 + 1;
        *(_DWORD *)(a1 + 92) |= 0x100u;
        uint64_t v26 = *(void *)(a1 + 80);
        if (!v26) {
LABEL_143:
        }
          operator new();
LABEL_44:
        unsigned int v101 = 0;
        unint64_t v27 = (char *)*((void *)this + 1);
        if ((unint64_t)v27 >= *((void *)this + 2) || *v27 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v101))return 0; {
        }
          }
        else
        {
          unsigned int v101 = *v27;
          *((void *)this + 1) = v27 + 1;
        }
        int v93 = *((_DWORD *)this + 14);
        int v94 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v93 + 1;
        if (v93 >= v94) {
          return 0;
        }
        int v95 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v101);
        if (!sub_10010AA0C(v26, this, v96, v97) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v95);
        int v98 = *((_DWORD *)this + 14);
        BOOL v34 = __OFSUB__(v98, 1);
        int v99 = v98 - 1;
        if (v99 < 0 == v34) {
          *((_DWORD *)this + 14) = v99;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 92) |= 2u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (v12) {
          goto LABEL_16;
        }
        goto LABEL_59;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 92) |= 4u;
        uint64_t v14 = *(void *)(a1 + 32);
        if (v14) {
          goto LABEL_20;
        }
        goto LABEL_71;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 92) |= 8u;
        uint64_t v16 = *(void *)(a1 + 40);
        if (v16) {
          goto LABEL_24;
        }
        goto LABEL_83;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 92) |= 0x10u;
        uint64_t v18 = *(void *)(a1 + 48);
        if (v18) {
          goto LABEL_28;
        }
        goto LABEL_95;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 92) |= 0x20u;
        uint64_t v20 = *(void *)(a1 + 56);
        if (v20) {
          goto LABEL_32;
        }
        goto LABEL_107;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 92) |= 0x40u;
        uint64_t v22 = *(void *)(a1 + 64);
        if (v22) {
          goto LABEL_36;
        }
        goto LABEL_119;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 92) |= 0x80u;
        uint64_t v24 = *(void *)(a1 + 72);
        if (v24) {
          goto LABEL_40;
        }
        goto LABEL_131;
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 92) |= 0x100u;
        uint64_t v26 = *(void *)(a1 + 80);
        if (v26) {
          goto LABEL_44;
        }
        goto LABEL_143;
      default:
        int v9 = TagFallback & 7;
LABEL_47:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_1000FFFE8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100100010()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001000BC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100100108(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 92);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_16:
    uint64_t v11 = *(void *)(v5 + 24);
    if (v11)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v11, a2, a4);
      int v6 = *(_DWORD *)(v5 + 92);
      if ((v6 & 4) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(qword_10047E998 + 24), a2, a4);
      int v6 = *(_DWORD *)(v5 + 92);
      if ((v6 & 4) != 0) {
        goto LABEL_20;
      }
    }
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_24:
    uint64_t v13 = *(void *)(v5 + 40);
    if (v13)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v13, a2, a4);
      int v6 = *(_DWORD *)(v5 + 92);
      if ((v6 & 0x10) != 0) {
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(qword_10047E998 + 40), a2, a4);
      int v6 = *(_DWORD *)(v5 + 92);
      if ((v6 & 0x10) != 0) {
        goto LABEL_28;
      }
    }
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_32:
    uint64_t v15 = *(void *)(v5 + 56);
    if (v15)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v15, a2, a4);
      int v6 = *(_DWORD *)(v5 + 92);
      if ((v6 & 0x40) != 0) {
        goto LABEL_36;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(qword_10047E998 + 56), a2, a4);
      int v6 = *(_DWORD *)(v5 + 92);
      if ((v6 & 0x40) != 0) {
        goto LABEL_36;
      }
    }
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_40:
    uint64_t v17 = *(void *)(v5 + 72);
    if (v17)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v17, a2, a4);
      if ((*(_DWORD *)(v5 + 92) & 0x100) != 0) {
        goto LABEL_44;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(qword_10047E998 + 72), a2, a4);
      if ((*(_DWORD *)(v5 + 92) & 0x100) != 0) {
        goto LABEL_44;
      }
    }
LABEL_10:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_48;
  }
  uint64_t v10 = *(void *)(result + 16);
  if (v10)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) != 0) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047E998 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) != 0) {
      goto LABEL_16;
    }
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    goto LABEL_4;
  }
LABEL_20:
  uint64_t v12 = *(void *)(v5 + 32);
  if (v12)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v12, a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 8) != 0) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(qword_10047E998 + 32), a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 8) != 0) {
      goto LABEL_24;
    }
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_28:
  uint64_t v14 = *(void *)(v5 + 48);
  if (v14)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v14, a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 0x20) != 0) {
      goto LABEL_32;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(qword_10047E998 + 48), a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 0x20) != 0) {
      goto LABEL_32;
    }
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    goto LABEL_8;
  }
LABEL_36:
  uint64_t v16 = *(void *)(v5 + 64);
  if (v16)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v16, a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 0x80) != 0) {
      goto LABEL_40;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(qword_10047E998 + 64), a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 0x80) != 0) {
      goto LABEL_40;
    }
  }
LABEL_9:
  if ((v6 & 0x100) == 0) {
    goto LABEL_10;
  }
LABEL_44:
  uint64_t v18 = *(void *)(v5 + 80);
  if (v18)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v18, a2, a4);
    uint64_t v19 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v19;
    if (!v19) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(void *)(qword_10047E998 + 80), a2, a4);
    uint64_t v20 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v20;
    if (!v20) {
      return result;
    }
  }
LABEL_48:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001003D0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_18:
    uint64_t v14 = (unsigned int *)*((void *)this + 3);
    if (v14)
    {
      *(unsigned char *)uint64_t v3 = 18;
      unsigned int v15 = v3 + 1;
      uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[7];
      if (v16 <= 0x7F) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v14 = *(unsigned int **)(qword_10047E998 + 24);
      *(unsigned char *)uint64_t v3 = 18;
      unsigned int v15 = v3 + 1;
      uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[7];
      if (v16 <= 0x7F)
      {
LABEL_20:
        *((unsigned char *)v3 + 1) = (_BYTE)v16;
        uint64_t v3 = sub_100104070((wireless_diagnostics::google::protobuf::internal::WireFormat *)v14, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2), a3);
        int v5 = *((_DWORD *)this + 23);
        if ((v5 & 4) != 0) {
          goto LABEL_24;
        }
LABEL_4:
        if ((v5 & 8) == 0) {
          goto LABEL_5;
        }
LABEL_30:
        uint64_t v24 = (unsigned int *)*((void *)this + 5);
        if (v24)
        {
          *(unsigned char *)uint64_t v3 = 34;
          unsigned int v25 = v3 + 1;
          uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24[36];
          if (v26 <= 0x7F) {
            goto LABEL_32;
          }
        }
        else
        {
          uint64_t v24 = *(unsigned int **)(qword_10047E998 + 40);
          *(unsigned char *)uint64_t v3 = 34;
          unsigned int v25 = v3 + 1;
          uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24[36];
          if (v26 <= 0x7F)
          {
LABEL_32:
            *((unsigned char *)v3 + 1) = (_BYTE)v26;
            uint64_t v3 = sub_100106A88((wireless_diagnostics::google::protobuf::internal::WireFormat *)v24, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2), a3);
            int v5 = *((_DWORD *)this + 23);
            if ((v5 & 0x10) != 0) {
              goto LABEL_36;
            }
LABEL_6:
            if ((v5 & 0x20) == 0) {
              goto LABEL_7;
            }
LABEL_42:
            BOOL v34 = (unsigned int *)*((void *)this + 7);
            if (v34)
            {
              *(unsigned char *)uint64_t v3 = 50;
              unsigned int v35 = v3 + 1;
              int v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34[7];
              if (v36 <= 0x7F) {
                goto LABEL_44;
              }
            }
            else
            {
              BOOL v34 = *(unsigned int **)(qword_10047E998 + 56);
              *(unsigned char *)uint64_t v3 = 50;
              unsigned int v35 = v3 + 1;
              int v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34[7];
              if (v36 <= 0x7F)
              {
LABEL_44:
                *((unsigned char *)v3 + 1) = (_BYTE)v36;
                uint64_t v3 = sub_100108F38((wireless_diagnostics::google::protobuf::internal::WireFormat *)v34, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2), a3);
                int v5 = *((_DWORD *)this + 23);
                if ((v5 & 0x40) != 0) {
                  goto LABEL_48;
                }
LABEL_8:
                if ((v5 & 0x80) == 0) {
                  goto LABEL_9;
                }
LABEL_54:
                int v44 = (unsigned int *)*((void *)this + 9);
                if (v44)
                {
                  *(unsigned char *)uint64_t v3 = 66;
                  unsigned int v45 = v3 + 1;
                  int v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v44[8];
                  if (v46 <= 0x7F) {
                    goto LABEL_56;
                  }
                }
                else
                {
                  int v44 = *(unsigned int **)(qword_10047E998 + 72);
                  *(unsigned char *)uint64_t v3 = 66;
                  unsigned int v45 = v3 + 1;
                  int v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v44[8];
                  if (v46 <= 0x7F)
                  {
LABEL_56:
                    *((unsigned char *)v3 + 1) = (_BYTE)v46;
                    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010A374((wireless_diagnostics::google::protobuf::internal::WireFormat *)v44, (unsigned char *)v3 + 2, a3);
                    if ((*((_DWORD *)this + 23) & 0x100) != 0) {
                      goto LABEL_60;
                    }
LABEL_10:
                    uint64_t v8 = (void *)*((void *)this + 1);
                    uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
                    int v6 = v8;
                    if (!v8) {
                      return v3;
                    }
                    goto LABEL_66;
                  }
                }
                int v47 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v46, v45, a3);
                uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010A374((wireless_diagnostics::google::protobuf::internal::WireFormat *)v44, v47, v48);
                if ((*((_DWORD *)this + 23) & 0x100) != 0) {
                  goto LABEL_60;
                }
                goto LABEL_10;
              }
            }
            int v37 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v36, v35, a3);
            uint64_t v3 = sub_100108F38((wireless_diagnostics::google::protobuf::internal::WireFormat *)v34, v37, v38);
            int v5 = *((_DWORD *)this + 23);
            if ((v5 & 0x40) != 0) {
              goto LABEL_48;
            }
            goto LABEL_8;
          }
        }
        unint64_t v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, v25, a3);
        uint64_t v3 = sub_100106A88((wireless_diagnostics::google::protobuf::internal::WireFormat *)v24, v27, v28);
        int v5 = *((_DWORD *)this + 23);
        if ((v5 & 0x10) != 0) {
          goto LABEL_36;
        }
        goto LABEL_6;
      }
    }
    uint64_t v17 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, v15, a3);
    uint64_t v3 = sub_100104070((wireless_diagnostics::google::protobuf::internal::WireFormat *)v14, v17, v18);
    int v5 = *((_DWORD *)this + 23);
    if ((v5 & 4) != 0) {
      goto LABEL_24;
    }
    goto LABEL_4;
  }
  int v9 = (unsigned int *)*((void *)this + 2);
  if (v9)
  {
    *(unsigned char *)a2 = 10;
    unsigned int v10 = a2 + 1;
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9[14];
    if (v11 <= 0x7F) {
      goto LABEL_14;
    }
LABEL_17:
    uint64_t v12 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v10, a3);
    uint64_t v3 = sub_100103324((wireless_diagnostics::google::protobuf::internal::WireFormat *)v9, v12, v13);
    int v5 = *((_DWORD *)this + 23);
    if ((v5 & 2) != 0) {
      goto LABEL_18;
    }
    goto LABEL_3;
  }
  int v9 = *(unsigned int **)(qword_10047E998 + 16);
  *(unsigned char *)a2 = 10;
  unsigned int v10 = a2 + 1;
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9[14];
  if (v11 > 0x7F) {
    goto LABEL_17;
  }
LABEL_14:
  *((unsigned char *)v3 + 1) = (_BYTE)v11;
  uint64_t v3 = sub_100103324((wireless_diagnostics::google::protobuf::internal::WireFormat *)v9, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2), a3);
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 2) != 0) {
    goto LABEL_18;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    goto LABEL_4;
  }
LABEL_24:
  uint64_t v19 = (unsigned int *)*((void *)this + 4);
  if (v19)
  {
    *(unsigned char *)uint64_t v3 = 26;
    unsigned int v20 = v3 + 1;
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19[10];
    if (v21 <= 0x7F) {
      goto LABEL_26;
    }
LABEL_29:
    uint64_t v22 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, v20, a3);
    uint64_t v3 = sub_100104C50((wireless_diagnostics::google::protobuf::internal::WireFormat *)v19, v22, v23);
    int v5 = *((_DWORD *)this + 23);
    if ((v5 & 8) != 0) {
      goto LABEL_30;
    }
    goto LABEL_5;
  }
  uint64_t v19 = *(unsigned int **)(qword_10047E998 + 32);
  *(unsigned char *)uint64_t v3 = 26;
  unsigned int v20 = v3 + 1;
  uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19[10];
  if (v21 > 0x7F) {
    goto LABEL_29;
  }
LABEL_26:
  *((unsigned char *)v3 + 1) = (_BYTE)v21;
  uint64_t v3 = sub_100104C50((wireless_diagnostics::google::protobuf::internal::WireFormat *)v19, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2), a3);
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 8) != 0) {
    goto LABEL_30;
  }
LABEL_5:
  if ((v5 & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_36:
  int v29 = (unsigned int *)*((void *)this + 6);
  if (v29)
  {
    *(unsigned char *)uint64_t v3 = 42;
    unsigned int v30 = v3 + 1;
    uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v29[9];
    if (v31 <= 0x7F) {
      goto LABEL_38;
    }
LABEL_41:
    uint64_t v32 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, v30, a3);
    uint64_t v3 = sub_1001083D8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v29, v32, v33);
    int v5 = *((_DWORD *)this + 23);
    if ((v5 & 0x20) != 0) {
      goto LABEL_42;
    }
    goto LABEL_7;
  }
  int v29 = *(unsigned int **)(qword_10047E998 + 48);
  *(unsigned char *)uint64_t v3 = 42;
  unsigned int v30 = v3 + 1;
  uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v29[9];
  if (v31 > 0x7F) {
    goto LABEL_41;
  }
LABEL_38:
  *((unsigned char *)v3 + 1) = (_BYTE)v31;
  uint64_t v3 = sub_1001083D8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v29, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2), a3);
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 0x20) != 0) {
    goto LABEL_42;
  }
LABEL_7:
  if ((v5 & 0x40) == 0) {
    goto LABEL_8;
  }
LABEL_48:
  int v39 = (unsigned int *)*((void *)this + 8);
  if (v39)
  {
    *(unsigned char *)uint64_t v3 = 58;
    unsigned int v40 = v3 + 1;
    int v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v39[8];
    if (v41 <= 0x7F) {
      goto LABEL_50;
    }
LABEL_53:
    int v42 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v41, v40, a3);
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010996C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v39, v42, v43);
    int v5 = *((_DWORD *)this + 23);
    if ((v5 & 0x80) != 0) {
      goto LABEL_54;
    }
    goto LABEL_9;
  }
  int v39 = *(unsigned int **)(qword_10047E998 + 64);
  *(unsigned char *)uint64_t v3 = 58;
  unsigned int v40 = v3 + 1;
  int v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v39[8];
  if (v41 > 0x7F) {
    goto LABEL_53;
  }
LABEL_50:
  *((unsigned char *)v3 + 1) = (_BYTE)v41;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010996C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v39, (unsigned char *)v3 + 2, a3);
  int v5 = *((_DWORD *)this + 23);
  if ((v5 & 0x80) != 0) {
    goto LABEL_54;
  }
LABEL_9:
  if ((v5 & 0x100) == 0) {
    goto LABEL_10;
  }
LABEL_60:
  int v49 = (unsigned int *)*((void *)this + 10);
  if (v49)
  {
    *(unsigned char *)uint64_t v3 = 74;
    unsigned int v50 = v3 + 1;
    int v51 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v49[8];
    if (v51 <= 0x7F) {
      goto LABEL_62;
    }
  }
  else
  {
    int v49 = *(unsigned int **)(qword_10047E998 + 80);
    *(unsigned char *)uint64_t v3 = 74;
    unsigned int v50 = v3 + 1;
    int v51 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v49[8];
    if (v51 <= 0x7F)
    {
LABEL_62:
      *((unsigned char *)v3 + 1) = (_BYTE)v51;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010AD7C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v49, (unsigned char *)v3 + 2, a3);
      int v52 = (void *)*((void *)this + 1);
      uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      int v6 = v52;
      if (!v52) {
        return v3;
      }
      goto LABEL_66;
    }
  }
  int v53 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v51, v50, a3);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010AD7C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v49, v53, v54);
  int v55 = (void *)*((void *)this + 1);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v6 = v55;
  if (!v55) {
    return v3;
  }
LABEL_66:
  if (*v6 == v6[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v7, v3, a3);
}

uint64_t sub_1001008DC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 92);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    if ((v3 & 0x100) == 0) {
      goto LABEL_26;
    }
    goto LABEL_64;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_19;
    }
LABEL_13:
    uint64_t v7 = *(void *)(a1 + 24);
    if (v7)
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001041B4(v7, a2);
      if (v8 < 0x80)
      {
LABEL_15:
        int v9 = 1;
LABEL_18:
        uint64_t v4 = (v4 + v8 + v9 + 1);
        int v3 = *(_DWORD *)(a1 + 92);
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001041B4(*(void *)(qword_10047E998 + 24), a2);
      if (v8 < 0x80) {
        goto LABEL_15;
      }
    }
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
    goto LABEL_18;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001035FC(v5, a2);
    if (v6 < 0x80) {
      goto LABEL_9;
    }
LABEL_12:
    uint64_t v4 = v6
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 92);
    if ((v3 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001035FC(*(void *)(qword_10047E998 + 16), a2);
  if (v6 >= 0x80) {
    goto LABEL_12;
  }
LABEL_9:
  uint64_t v4 = (v6 + 2);
  int v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 2) != 0) {
    goto LABEL_13;
  }
LABEL_19:
  if ((v3 & 4) != 0)
  {
    uint64_t v13 = *(void *)(a1 + 32);
    if (v13)
    {
      uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100104E4C(v13, a2);
      if (v14 < 0x80) {
        goto LABEL_30;
      }
    }
    else
    {
      uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100104E4C(*(void *)(qword_10047E998 + 32), a2);
      if (v14 < 0x80)
      {
LABEL_30:
        uint64_t v4 = (v4 + v14 + 2);
        int v3 = *(_DWORD *)(a1 + 92);
        if ((v3 & 8) != 0) {
          goto LABEL_34;
        }
LABEL_21:
        if ((v3 & 0x10) == 0) {
          goto LABEL_22;
        }
LABEL_40:
        uint64_t v17 = *(void *)(a1 + 48);
        if (v17)
        {
          uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001085E0(v17, a2);
          if (v18 < 0x80) {
            goto LABEL_42;
          }
        }
        else
        {
          uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001085E0(*(void *)(qword_10047E998 + 48), a2);
          if (v18 < 0x80)
          {
LABEL_42:
            uint64_t v4 = (v4 + v18 + 2);
            int v3 = *(_DWORD *)(a1 + 92);
            if ((v3 & 0x20) != 0) {
              goto LABEL_46;
            }
LABEL_23:
            if ((v3 & 0x40) == 0) {
              goto LABEL_24;
            }
LABEL_52:
            uint64_t v21 = *(void *)(a1 + 64);
            if (v21)
            {
              uint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100109AAC(v21, a2);
              if (v22 < 0x80) {
                goto LABEL_54;
              }
            }
            else
            {
              uint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100109AAC(*(void *)(qword_10047E998 + 64), a2);
              if (v22 < 0x80)
              {
LABEL_54:
                uint64_t v4 = (v4 + v22 + 2);
                int v3 = *(_DWORD *)(a1 + 92);
                if ((v3 & 0x80) != 0) {
                  goto LABEL_58;
                }
LABEL_25:
                if ((v3 & 0x100) == 0) {
                  goto LABEL_26;
                }
LABEL_64:
                uint64_t v25 = *(void *)(a1 + 80);
                if (v25)
                {
                  uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010AEBC(v25, a2);
                  if (v26 < 0x80)
                  {
LABEL_66:
                    int v27 = 1;
                    goto LABEL_69;
                  }
                }
                else
                {
                  uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010AEBC(*(void *)(qword_10047E998 + 80), a2);
                  if (v26 < 0x80) {
                    goto LABEL_66;
                  }
                }
                int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
LABEL_69:
                uint64_t v4 = (v4 + v26 + v27 + 1);
                unsigned int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
                uint64_t v11 = *(void **)(a1 + 8);
                if (!v11) {
                  goto LABEL_27;
                }
                goto LABEL_70;
              }
            }
            uint64_t v4 = v4
               + v22
               + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2)+ 1;
            int v3 = *(_DWORD *)(a1 + 92);
            if ((v3 & 0x80) != 0) {
              goto LABEL_58;
            }
            goto LABEL_25;
          }
        }
        uint64_t v4 = v4
           + v18
           + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2)+ 1;
        int v3 = *(_DWORD *)(a1 + 92);
        if ((v3 & 0x20) != 0) {
          goto LABEL_46;
        }
        goto LABEL_23;
      }
    }
    uint64_t v4 = v4
       + v14
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 92);
    if ((v3 & 8) != 0) {
      goto LABEL_34;
    }
    goto LABEL_21;
  }
  if ((v3 & 8) == 0) {
    goto LABEL_21;
  }
LABEL_34:
  uint64_t v15 = *(void *)(a1 + 40);
  if (v15)
  {
    uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010717C(v15, a2);
    if (v16 < 0x80) {
      goto LABEL_36;
    }
LABEL_39:
    uint64_t v4 = v4
       + v16
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 92);
    if ((v3 & 0x10) != 0) {
      goto LABEL_40;
    }
    goto LABEL_22;
  }
  uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010717C(*(void *)(qword_10047E998 + 40), a2);
  if (v16 >= 0x80) {
    goto LABEL_39;
  }
LABEL_36:
  uint64_t v4 = (v4 + v16 + 2);
  int v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 0x10) != 0) {
    goto LABEL_40;
  }
LABEL_22:
  if ((v3 & 0x20) == 0) {
    goto LABEL_23;
  }
LABEL_46:
  uint64_t v19 = *(void *)(a1 + 56);
  if (v19)
  {
    unsigned int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010907C(v19, a2);
    if (v20 < 0x80) {
      goto LABEL_48;
    }
LABEL_51:
    uint64_t v4 = v4
       + v20
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 92);
    if ((v3 & 0x40) != 0) {
      goto LABEL_52;
    }
    goto LABEL_24;
  }
  unsigned int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010907C(*(void *)(qword_10047E998 + 56), a2);
  if (v20 >= 0x80) {
    goto LABEL_51;
  }
LABEL_48:
  uint64_t v4 = (v4 + v20 + 2);
  int v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 0x40) != 0) {
    goto LABEL_52;
  }
LABEL_24:
  if ((v3 & 0x80) == 0) {
    goto LABEL_25;
  }
LABEL_58:
  uint64_t v23 = *(void *)(a1 + 72);
  if (v23)
  {
    uint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010A4B4(v23, a2);
    if (v24 < 0x80) {
      goto LABEL_60;
    }
LABEL_63:
    uint64_t v4 = v4
       + v24
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2)+ 1;
    if ((*(_DWORD *)(a1 + 92) & 0x100) != 0) {
      goto LABEL_64;
    }
    goto LABEL_26;
  }
  uint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010A4B4(*(void *)(qword_10047E998 + 72), a2);
  if (v24 >= 0x80) {
    goto LABEL_63;
  }
LABEL_60:
  uint64_t v4 = (v4 + v24 + 2);
  if ((*(_DWORD *)(a1 + 92) & 0x100) != 0) {
    goto LABEL_64;
  }
LABEL_26:
  unsigned int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v11 = *(void **)(a1 + 8);
  if (!v11)
  {
LABEL_27:
    *(_DWORD *)(a1 + 88) = v4;
    return v4;
  }
LABEL_70:
  if (*v11 == v11[1]) {
    goto LABEL_27;
  }
  uint64_t v28 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v10, a2)
      + v4;
  *(_DWORD *)(a1 + 88) = v28;
  return v28;
}

uint64_t sub_100100D24(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000FDED8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100100E04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100100E18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100100E2C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
    LOBYTE(v4) = *(unsigned char *)(a2 + 60);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 60);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 60) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047E9A8 + 16);
    }
    sub_100102010(v5, v6);
    int v4 = *(_DWORD *)(a2 + 60);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 60) |= 2u;
    uint64_t v7 = *(void *)(a1 + 24);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10047E9A8 + 24);
    }
    sub_100102010(v7, v8);
    int v4 = *(_DWORD *)(a2 + 60);
  }
  if ((v4 & 4) != 0)
  {
    int v11 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 60) |= 4u;
    *(_DWORD *)(a1 + 32) = v11;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 8) == 0)
    {
LABEL_17:
      if ((v4 & 0x10) == 0) {
        goto LABEL_18;
      }
LABEL_23:
      uint64_t v13 = *(void *)(a2 + 40);
      *(_DWORD *)(a1 + 60) |= 0x10u;
      *(void *)(a1 + 40) = v13;
      if ((*(_DWORD *)(a2 + 60) & 0x20) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_19;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_17;
  }
  int v12 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 60) |= 8u;
  *(_DWORD *)(a1 + 36) = v12;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x10) != 0) {
    goto LABEL_23;
  }
LABEL_18:
  if ((v4 & 0x20) != 0)
  {
LABEL_19:
    uint64_t v9 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 60) |= 0x20u;
    *(void *)(a1 + 48) = v9;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100101058()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100101084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100101098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001010AC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
    LOBYTE(v4) = *(unsigned char *)(a2 + 32);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 32);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 32) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047E9B0 + 16);
    }
    sub_100102010(v5, v6);
    int v4 = *(_DWORD *)(a2 + 32);
  }
  if ((v4 & 2) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v7;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001011E8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100101210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100101224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100101238(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
    LOBYTE(v4) = *(unsigned char *)(a2 + 44);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 44);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047E9B8 + 16);
    }
    sub_100102010(v5, v6);
    int v4 = *(_DWORD *)(a2 + 44);
  }
  if ((v4 & 2) == 0)
  {
    if ((v4 & 4) == 0) {
      goto LABEL_12;
    }
LABEL_16:
    int v10 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(_DWORD *)(a1 + 28) = v10;
    if ((*(_DWORD *)(a2 + 44) & 8) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_13;
  }
  int v9 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 44) |= 2u;
  *(_DWORD *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_12:
  if ((v4 & 8) != 0)
  {
LABEL_13:
    uint64_t v7 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(void *)(a1 + 32) = v7;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001013B8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001013E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001013F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100101408(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  sub_10010B2A4((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), a2 + 24);
  sub_10010B2A4((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48), a2 + 48);
  sub_10010B2A4((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 72), a2 + 72);
  sub_10010B2A4((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 96), a2 + 96);
  sub_10010B2A4((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 120), a2 + 120);
  if (*(unsigned char *)(a2 + 148))
  {
    *(_DWORD *)(a1 + 148) |= 1u;
    uint64_t v4 = *(void *)(a1 + 16);
    if (!v4) {
      operator new();
    }
    uint64_t v5 = *(void *)(a2 + 16);
    if (!v5) {
      uint64_t v5 = *(void *)(qword_10047E9C0 + 16);
    }
    sub_100102010(v4, v5);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100101554()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10010157C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100101590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001015A4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
    int v4 = *(_DWORD *)(a2 + 40);
    if (!(_BYTE)v4) {
      goto LABEL_18;
    }
  }
  else
  {
    int v4 = *(_DWORD *)(a2 + 40);
    if (!(_BYTE)v4) {
      goto LABEL_18;
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047E9D0 + 16);
    }
    sub_100102010(v5, v6);
    int v4 = *(_DWORD *)(a2 + 40);
  }
  if ((v4 & 2) != 0)
  {
    char v11 = *(unsigned char *)(a2 + 24);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(unsigned char *)(a1 + 24) = v11;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 4) == 0)
    {
LABEL_12:
      if ((v4 & 8) == 0) {
        goto LABEL_13;
      }
      goto LABEL_26;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_12;
  }
  char v12 = *(unsigned char *)(a2 + 25);
  *(_DWORD *)(a1 + 40) |= 4u;
  *(unsigned char *)(a1 + 25) = v12;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 8) == 0)
  {
LABEL_13:
    if ((v4 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_27;
  }
LABEL_26:
  char v13 = *(unsigned char *)(a2 + 26);
  *(_DWORD *)(a1 + 40) |= 8u;
  *(unsigned char *)(a1 + 26) = v13;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x10) == 0)
  {
LABEL_14:
    if ((v4 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_28;
  }
LABEL_27:
  char v14 = *(unsigned char *)(a2 + 27);
  *(_DWORD *)(a1 + 40) |= 0x10u;
  *(unsigned char *)(a1 + 27) = v14;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x20) == 0)
  {
LABEL_15:
    if ((v4 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_29;
  }
LABEL_28:
  char v15 = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 40) |= 0x20u;
  *(unsigned char *)(a1 + 28) = v15;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x40) == 0)
  {
LABEL_16:
    if ((v4 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_29:
  char v16 = *(unsigned char *)(a2 + 29);
  *(_DWORD *)(a1 + 40) |= 0x40u;
  *(unsigned char *)(a1 + 29) = v16;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x80) != 0)
  {
LABEL_17:
    char v7 = *(unsigned char *)(a2 + 30);
    *(_DWORD *)(a1 + 40) |= 0x80u;
    *(unsigned char *)(a1 + 30) = v7;
    int v4 = *(_DWORD *)(a2 + 40);
  }
LABEL_18:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      char v8 = *(unsigned char *)(a2 + 31);
      *(_DWORD *)(a1 + 40) |= 0x100u;
      *(unsigned char *)(a1 + 31) = v8;
      int v4 = *(_DWORD *)(a2 + 40);
    }
    if ((v4 & 0x200) != 0)
    {
      char v9 = *(unsigned char *)(a2 + 32);
      *(_DWORD *)(a1 + 40) |= 0x200u;
      *(unsigned char *)(a1 + 32) = v9;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001017EC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100101814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100101828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010183C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
    LOBYTE(v4) = *(unsigned char *)(a2 + 32);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 32);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 32) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047E9D8 + 16);
    }
    sub_100102010(v5, v6);
    int v4 = *(_DWORD *)(a2 + 32);
  }
  if ((v4 & 2) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 2u;
    *(_DWORD *)(a1 + 24) = v7;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100101978()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001019A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001019B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001019C8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
    LOBYTE(v4) = *(unsigned char *)(a2 + 36);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 36);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 36) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047E9E0 + 16);
    }
    sub_100102010(v5, v6);
    int v4 = *(_DWORD *)(a2 + 36);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(void *)(a1 + 24) = v7;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100101B04()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100101B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100101B40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100101B54(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
    LOBYTE(v4) = *(unsigned char *)(a2 + 36);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 36);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 36) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047E9E8 + 16);
    }
    sub_100102010(v5, v6);
    int v4 = *(_DWORD *)(a2 + 36);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(void *)(a1 + 24) = v7;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100101C90()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100101CB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100101CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100101CE0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
    LOBYTE(v4) = *(unsigned char *)(a2 + 36);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 36);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 36) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047E9F0 + 16);
    }
    sub_100102010(v5, v6);
    int v4 = *(_DWORD *)(a2 + 36);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(void *)(a1 + 24) = v7;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100101E1C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100101E44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100101E58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100101E6C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100101EF8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    return sub_1000FDED8(v4, a2);
  }
  return result;
}

uint64_t sub_100101F64()
{
  return 1;
}

uint64_t sub_100101F6C()
{
  uint64_t v0 = qword_10047D7B8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000FC71C;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D6C8;
}

void sub_100101FFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100102010(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((*(unsigned char *)(a2 + 44) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    uint64_t v8 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(void *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 44) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 44) |= 1u;
  *(void *)(a1 + 16) = v7;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
LABEL_7:
    uint64_t v5 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(void *)(a1 + 32) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001020F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100102104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100102118(uint64_t a1)
{
  *(void *)a1 = off_100455B68;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10010216C(uint64_t a1)
{
  *(void *)a1 = off_100455B68;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1001021D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1001021DC()
{
}

void sub_100102240()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100102268(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10010228C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacunsigned int k = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_28;
        }
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 44) |= 1u;
        char v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_19;
        }
      }
      if (v9 == 2) {
        break;
      }
      if (v9 == 3)
      {
        int v10 = TagFallback & 7;
        if (v10 == 1)
        {
          unint64_t v14 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
            return 0;
          }
          goto LABEL_23;
        }
      }
      else
      {
        int v10 = TagFallback & 7;
      }
LABEL_28:
      if (v10 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v10 = TagFallback & 7;
    if (v10 != 1) {
      goto LABEL_28;
    }
LABEL_19:
    unint64_t v14 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 24) = v14;
    *(_DWORD *)(a1 + 44) |= 2u;
    char v12 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v12 < *((void *)this + 2) && *v12 == 25)
    {
      *((void *)this + 1) = v12 + 1;
      unint64_t v14 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
        return 0;
      }
LABEL_23:
      *(void *)(a1 + 32) = v14;
      *(_DWORD *)(a1 + 44) |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_100102498(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 44);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    int v5 = *(_DWORD *)(v4 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  if ((*(_DWORD *)(v4 + 44) & 4) == 0)
  {
LABEL_4:
    uint64_t v8 = *(void **)(v4 + 8);
    uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    unsigned int v6 = v8;
    if (!v8) {
      return result;
    }
    goto LABEL_9;
  }
LABEL_8:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
  unsigned int v9 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_9:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_100102550(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 44);
  if (v3)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v7;
    a2 += 9;
    int v3 = *(_DWORD *)(a1 + 44);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t v9 = *(void *)(a1 + 32);
      *(unsigned char *)a2 = 25;
      *(void *)(a2 + 1) = v9;
      a2 += 9;
      int v10 = *(void **)(a1 + 8);
      uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v5 = v10;
      if (!v10) {
        return a2;
      }
      goto LABEL_9;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(a1 + 24);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v8;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 44) & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  unsigned int v6 = *(void **)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_9:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_100102680(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 44);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if ((v3 & 4) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 44)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

uint64_t sub_1001026F4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100102010((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001027D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001027E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001027FC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100102888()
{
  return 1;
}

uint64_t sub_100102890()
{
  uint64_t v0 = qword_10047D7B8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000FC71C;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D6D8;
}

void sub_100102920(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100102934(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_100455C18;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  sub_100100E2C(a1, a2);
  return a1;
}

void sub_1001029A4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_1001029C0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_1001029D4(void *a1)
{
  *a1 = off_100455C18;
  if ((void *)qword_10047E9A8 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = a1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100102A94(void *a1)
{
  *a1 = off_100455C18;
  if ((void *)qword_10047E9A8 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = a1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100102B68(uint64_t result, int a2)
{
  *(_DWORD *)(result + ++*(_DWORD *)(result + 56) = a2;
  return result;
}

void sub_100102B70()
{
}

void sub_100102BD8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100102C00(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacunsigned int k = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 60) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        v43[0] = 0;
        char v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43))return 0; {
        }
          }
        else
        {
          v43[0] = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v18 = *((_DWORD *)this + 14);
        int v19 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v18 + 1;
        if (v18 >= v19) {
          return 0;
        }
        int v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v43[0]);
        if (!sub_10010228C(v10, this, v21, v22) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
        int v23 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v23, 1);
        int v25 = v23 - 1;
        if (v25 < 0 == v24) {
          *((_DWORD *)this + 14) = v25;
        }
        uint64_t v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 18) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
        *(_DWORD *)(a1 + 60) |= 2u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12) {
LABEL_41:
        }
          operator new();
LABEL_17:
        v43[0] = 0;
        char v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43))return 0; {
        }
          }
        else
        {
          v43[0] = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        int v27 = *((_DWORD *)this + 14);
        int v28 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v27 + 1;
        if (v27 >= v28) {
          return 0;
        }
        int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v43[0]);
        if (!sub_10010228C(v12, this, v30, v31) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
        int v32 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v32, 1);
        int v33 = v32 - 1;
        if (v33 < 0 == v24) {
          *((_DWORD *)this + 14) = v33;
        }
        unsigned int v35 = (unsigned char *)*((void *)this + 1);
        unint64_t v34 = *((void *)this + 2);
        if ((unint64_t)v35 >= v34 || *v35 != 24) {
          continue;
        }
        char v15 = v35 + 1;
        *((void *)this + 1) = v15;
        v43[0] = 0;
        if ((unint64_t)v15 >= v34) {
          goto LABEL_56;
        }
LABEL_53:
        if (*v15 < 0)
        {
LABEL_56:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!result) {
            return result;
          }
          unsigned int v36 = v43[0];
          if (v43[0] <= 2)
          {
LABEL_55:
            *(_DWORD *)(a1 + 60) |= 4u;
            *(_DWORD *)(a1 + 32) = v36;
            goto LABEL_59;
          }
        }
        else
        {
          unsigned int v36 = *v15;
          *((void *)this + 1) = v15 + 1;
          if (v36 <= 2) {
            goto LABEL_55;
          }
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 3, (int)v36);
LABEL_59:
        int v39 = (unsigned char *)*((void *)this + 1);
        unint64_t v38 = *((void *)this + 2);
        if ((unint64_t)v39 >= v38 || *v39 != 32) {
          continue;
        }
        uint64_t v17 = v39 + 1;
        *((void *)this + 1) = v17;
        v43[0] = 0;
        if ((unint64_t)v17 >= v38) {
          goto LABEL_65;
        }
LABEL_62:
        if (*v17 < 0)
        {
LABEL_65:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v43);
          if (!result) {
            return result;
          }
          unsigned int v40 = v43[0];
          if (v43[0] <= 3)
          {
LABEL_64:
            *(_DWORD *)(a1 + 60) |= 8u;
            *(_DWORD *)(a1 + 36) = v40;
            goto LABEL_68;
          }
        }
        else
        {
          unsigned int v40 = *v17;
          *((void *)this + 1) = v17 + 1;
          if (v40 <= 3) {
            goto LABEL_64;
          }
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 4, (int)v40);
LABEL_68:
        int v41 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 != 41) {
          continue;
        }
        *((void *)this + 1) = v41 + 1;
        *(void *)int v43 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v43) & 1) == 0)return 0; {
LABEL_71:
        }
        *(void *)(a1 + 40) = *(void *)v43;
        *(_DWORD *)(a1 + 60) |= 0x10u;
        int v42 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 != 49) {
          continue;
        }
        *((void *)this + 1) = v42 + 1;
LABEL_74:
        *(void *)int v43 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v43) & 1) == 0)return 0; {
        *(void *)(a1 + 48) = *(void *)v43;
        }
        *(_DWORD *)(a1 + 60) |= 0x20u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 60) |= 2u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (v12) {
          goto LABEL_17;
        }
        goto LABEL_41;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        char v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        v43[0] = 0;
        if ((unint64_t)v15 >= v14) {
          goto LABEL_56;
        }
        goto LABEL_53;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        v43[0] = 0;
        if ((unint64_t)v17 >= v16) {
          goto LABEL_65;
        }
        goto LABEL_62;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_29;
        }
        *(void *)int v43 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v43) & 1) == 0)return 0; {
        goto LABEL_71;
        }
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_29;
        }
        goto LABEL_74;
      default:
        int v9 = TagFallback & 7;
LABEL_29:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_100103184()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001031C8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 60);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_13:
    uint64_t v11 = *(void *)(v5 + 24);
    if (v11)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v11, a2, a4);
      int v6 = *(_DWORD *)(v5 + 60);
      if ((v6 & 4) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(qword_10047E9A8 + 24), a2, a4);
      int v6 = *(_DWORD *)(v5 + 60);
      if ((v6 & 4) != 0) {
        goto LABEL_17;
      }
    }
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  uint64_t v10 = *(void *)(result + 16);
  if (v10)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) != 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047E9A8 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) != 0) {
      goto LABEL_13;
    }
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    goto LABEL_4;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 32), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 36), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
  if ((*(_DWORD *)(v5 + 60) & 0x20) == 0)
  {
LABEL_7:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 48), a3);
  uint64_t v12 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v12;
  if (!v12) {
    return result;
  }
LABEL_21:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100103324(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 15);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_15:
    uint64_t v15 = *((void *)this + 3);
    if (v15)
    {
      *(unsigned char *)uint64_t v3 = 18;
      unsigned int v16 = v3 + 1;
      uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v15 + 40);
      if (v17 <= 0x7F) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(qword_10047E9A8 + 24);
      *(unsigned char *)uint64_t v3 = 18;
      unsigned int v16 = v3 + 1;
      uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v15 + 40);
      if (v17 <= 0x7F)
      {
LABEL_17:
        *((unsigned char *)v3 + 1) = (_BYTE)v17;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100102550(v15, (uint64_t)v3 + 2, a3);
        if ((*((_DWORD *)this + 15) & 4) != 0) {
          goto LABEL_21;
        }
LABEL_4:
        if ((*((unsigned char *)this + 60) & 8) == 0) {
          goto LABEL_5;
        }
LABEL_28:
        uint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 9);
        *(unsigned char *)uint64_t v3 = 32;
        unint64_t v23 = (unint64_t)v3 + 1;
        if ((v22 & 0x80000000) != 0)
        {
          uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v22, v23, a3);
          int v6 = *((_DWORD *)this + 15);
          if ((v6 & 0x10) != 0) {
            goto LABEL_35;
          }
        }
        else if (v22 > 0x7F)
        {
          uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, v23, a3);
          int v6 = *((_DWORD *)this + 15);
          if ((v6 & 0x10) != 0) {
            goto LABEL_35;
          }
        }
        else
        {
          *((unsigned char *)v3 + 1) = (_BYTE)v22;
          uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
          int v6 = *((_DWORD *)this + 15);
          if ((v6 & 0x10) != 0) {
            goto LABEL_35;
          }
        }
LABEL_6:
        if ((v6 & 0x20) == 0) {
          goto LABEL_7;
        }
        goto LABEL_36;
      }
    }
    uint64_t v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, v16, a3);
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100102550(v15, v18, v19);
    if ((*((_DWORD *)this + 15) & 4) != 0) {
      goto LABEL_21;
    }
    goto LABEL_4;
  }
  uint64_t v10 = *((void *)this + 2);
  if (v10)
  {
    *(unsigned char *)a2 = 10;
    unsigned int v11 = a2 + 1;
    uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v10 + 40);
    if (v12 <= 0x7F) {
      goto LABEL_11;
    }
LABEL_14:
    uint64_t v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v11, a3);
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100102550(v10, v13, v14);
    int v5 = *((_DWORD *)this + 15);
    if ((v5 & 2) != 0) {
      goto LABEL_15;
    }
    goto LABEL_3;
  }
  uint64_t v10 = *(void *)(qword_10047E9A8 + 16);
  *(unsigned char *)a2 = 10;
  unsigned int v11 = a2 + 1;
  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v10 + 40);
  if (v12 > 0x7F) {
    goto LABEL_14;
  }
LABEL_11:
  *((unsigned char *)v3 + 1) = (_BYTE)v12;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100102550(v10, (uint64_t)v3 + 2, a3);
  int v5 = *((_DWORD *)this + 15);
  if ((v5 & 2) != 0) {
    goto LABEL_15;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    goto LABEL_4;
  }
LABEL_21:
  int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
  *(unsigned char *)uint64_t v3 = 24;
  unint64_t v21 = (unint64_t)v3 + 1;
  if ((v20 & 0x80000000) != 0)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v20, v21, a3);
    if ((*((unsigned char *)this + 60) & 8) != 0) {
      goto LABEL_28;
    }
  }
  else if (v20 > 0x7F)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, v21, a3);
    if ((*((unsigned char *)this + 60) & 8) != 0) {
      goto LABEL_28;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v20;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((unsigned char *)this + 60) & 8) != 0) {
      goto LABEL_28;
    }
  }
LABEL_5:
  int v6 = *((_DWORD *)this + 15);
  if ((v6 & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_35:
  uint64_t v24 = *((void *)this + 5);
  *(unsigned char *)uint64_t v3 = 41;
  *(void *)((char *)v3 + 1) = v24;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  if ((*((_DWORD *)this + 15) & 0x20) == 0)
  {
LABEL_7:
    int v9 = (void *)*((void *)this + 1);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return v3;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t v25 = *((void *)this + 6);
  *(unsigned char *)uint64_t v3 = 49;
  *(void *)((char *)v3 + 1) = v25;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  uint64_t v26 = (void *)*((void *)this + 1);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v7 = v26;
  if (!v26) {
    return v3;
  }
LABEL_37:
  if (*v7 == v7[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, v3, a3);
}

uint64_t sub_1001035FC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 60);
  if ((_BYTE)v3)
  {
    if ((*(unsigned char *)(a1 + 60) & 1) == 0)
    {
      int v4 = 0;
      if ((*(unsigned char *)(a1 + 60) & 2) == 0) {
        goto LABEL_42;
      }
LABEL_25:
      uint64_t v16 = *(void *)(a1 + 24);
      if (v16)
      {
        int v17 = *(unsigned __int8 *)(v16 + 44);
        if (*(unsigned char *)(v16 + 44)) {
          goto LABEL_27;
        }
      }
      else
      {
        uint64_t v16 = *(void *)(qword_10047E9A8 + 24);
        int v17 = *(unsigned __int8 *)(v16 + 44);
        if (*(unsigned char *)(v16 + 44))
        {
LABEL_27:
          int v18 = (v17 << 31 >> 31) & 9;
          if ((v17 & 2) != 0) {
            v18 += 9;
          }
          if ((v17 & 4) != 0) {
            LODWORD(v19) = v18 + 9;
          }
          else {
            LODWORD(v19) = v18;
          }
          int v20 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v16 + 8);
          unint64_t v21 = *(void **)(v16 + 8);
          if (!v21) {
            goto LABEL_39;
          }
LABEL_36:
          if (*v21 != v21[1])
          {
            int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v20, a2)+ v19);
            *(_DWORD *)(v16 + 40) = v19;
            if (v19 >= 0x80) {
              int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
            }
            else {
              int v22 = 1;
            }
            goto LABEL_41;
          }
LABEL_39:
          *(_DWORD *)(v16 + 40) = v19;
          int v22 = 1;
LABEL_41:
          v4 += v19 + v22 + 1;
          int v3 = *(_DWORD *)(a1 + 60);
          goto LABEL_42;
        }
      }
      LODWORD(v19) = 0;
      int v20 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v16 + 8);
      unint64_t v21 = *(void **)(v16 + 8);
      if (!v21) {
        goto LABEL_39;
      }
      goto LABEL_36;
    }
    uint64_t v9 = *(void *)(a1 + 16);
    if (v9)
    {
      int v10 = *(unsigned __int8 *)(v9 + 44);
      if (*(unsigned char *)(v9 + 44)) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v9 = *(void *)(qword_10047E9A8 + 16);
      int v10 = *(unsigned __int8 *)(v9 + 44);
      if (*(unsigned char *)(v9 + 44))
      {
LABEL_9:
        int v11 = (v10 << 31 >> 31) & 9;
        if ((v10 & 2) != 0) {
          v11 += 9;
        }
        if ((v10 & 4) != 0) {
          int v12 = v11 + 9;
        }
        else {
          int v12 = v11;
        }
        uint64_t v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8);
        unint64_t v14 = *(void **)(v9 + 8);
        if (!v14) {
          goto LABEL_22;
        }
        goto LABEL_18;
      }
    }
    int v12 = 0;
    uint64_t v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8);
    unint64_t v14 = *(void **)(v9 + 8);
    if (!v14) {
      goto LABEL_22;
    }
LABEL_18:
    if (*v14 != v14[1])
    {
      uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v13, a2)+ v12);
      *(_DWORD *)(v9 + 40) = v15;
      if (v15 >= 0x80)
      {
        int v4 = v15
           + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2)
           + 1;
        int v3 = *(_DWORD *)(a1 + 60);
        if ((v3 & 2) == 0) {
          goto LABEL_42;
        }
        goto LABEL_25;
      }
      int v4 = v15 + 2;
      int v3 = *(_DWORD *)(a1 + 60);
      if ((v3 & 2) != 0) {
        goto LABEL_25;
      }
LABEL_42:
      if ((v3 & 4) != 0)
      {
        unint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
        if ((v23 & 0x80000000) != 0)
        {
          v4 += 11;
          if ((v3 & 8) == 0) {
            goto LABEL_58;
          }
        }
        else if (v23 >= 0x80)
        {
          int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2);
          int v3 = *(_DWORD *)(a1 + 60);
          v4 += v24 + 1;
          if ((v3 & 8) == 0) {
            goto LABEL_58;
          }
        }
        else
        {
          v4 += 2;
          if ((v3 & 8) == 0) {
            goto LABEL_58;
          }
        }
      }
      else if ((v3 & 8) == 0)
      {
        goto LABEL_58;
      }
      uint64_t v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
      if ((v25 & 0x80000000) != 0)
      {
        int v26 = 11;
      }
      else if (v25 >= 0x80)
      {
        int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2)
            + 1;
        int v3 = *(_DWORD *)(a1 + 60);
      }
      else
      {
        int v26 = 2;
      }
      v4 += v26;
LABEL_58:
      unsigned int v27 = v4 + 9;
      if ((v3 & 0x10) == 0) {
        unsigned int v27 = v4;
      }
      if ((v3 & 0x20) != 0) {
        uint64_t v5 = v27 + 9;
      }
      else {
        uint64_t v5 = v27;
      }
      int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      uint64_t v7 = *(void **)(a1 + 8);
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_64;
    }
LABEL_22:
    *(_DWORD *)(v9 + 40) = v12;
    int v4 = v12 + 2;
    int v3 = *(_DWORD *)(a1 + 60);
    if ((v3 & 2) != 0) {
      goto LABEL_25;
    }
    goto LABEL_42;
  }
  uint64_t v5 = 0;
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = *(void **)(a1 + 8);
  if (!v7)
  {
LABEL_6:
    *(_DWORD *)(a1 + ++*(_DWORD *)(result + 56) = v5;
    return v5;
  }
LABEL_64:
  if (*v7 == v7[1]) {
    goto LABEL_6;
  }
  uint64_t v28 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + ++*(_DWORD *)(result + 56) = v28;
  return v28;
}

uint64_t sub_1001038AC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100100E2C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10010398C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001039A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001039B4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100103A40()
{
  return 1;
}

uint64_t sub_100103A48()
{
  uint64_t v0 = qword_10047D7B8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000FC71C;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D6E8;
}

void sub_100103AD8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_100103AEC(void *a1)
{
  *a1 = off_100455CC8;
  if ((void *)qword_10047E9B0 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100103B80(void *a1)
{
  *a1 = off_100455CC8;
  if ((void *)qword_10047E9B0 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100103C28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 28) = a2;
  return result;
}

void sub_100103C30()
{
}

void sub_100103C94()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100103CBC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      uint64_t v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacunsigned int k = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 != 2)
      {
        int v9 = TagFallback & 7;
        goto LABEL_19;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
      {
LABEL_19:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
      }
        }
      else
      {
        int v11 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        unsigned int v26 = 0;
        if ((unint64_t)v11 < v10) {
          goto LABEL_31;
        }
LABEL_35:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
        if (!result) {
          return result;
        }
        unsigned int v24 = v26;
        if (v26 > 5) {
          goto LABEL_37;
        }
LABEL_33:
        *(_DWORD *)(a1 + 32) |= 2u;
        *(_DWORD *)(a1 + 24) = v24;
        if (*((void *)this + 1) == *((void *)this + 2))
        {
LABEL_38:
          if (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
        }
      }
    }
    int v9 = TagFallback & 7;
    if (v9 != 2) {
      goto LABEL_19;
    }
    *(_DWORD *)(a1 + 32) |= 1u;
    uint64_t v12 = *(void *)(a1 + 16);
    if (!v12) {
      operator new();
    }
    unsigned int v27 = 0;
    uint64_t v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27)) {
        return 0;
      }
    }
    else
    {
      unsigned int v27 = *v13;
      *((void *)this + 1) = v13 + 1;
    }
    int v14 = *((_DWORD *)this + 14);
    int v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0;
    }
    int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
    if (!sub_10010228C(v12, this, v17, v18) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    int v19 = *((_DWORD *)this + 14);
    BOOL v20 = __OFSUB__(v19, 1);
    int v21 = v19 - 1;
    if (v21 < 0 == v20) {
      *((_DWORD *)this + 14) = v21;
    }
    unint64_t v23 = (unsigned char *)*((void *)this + 1);
    unint64_t v22 = *((void *)this + 2);
    if ((unint64_t)v23 < v22 && *v23 == 16)
    {
      int v11 = v23 + 1;
      *((void *)this + 1) = v11;
      unsigned int v26 = 0;
      if ((unint64_t)v11 >= v22) {
        goto LABEL_35;
      }
LABEL_31:
      if ((char)*v11 < 0) {
        goto LABEL_35;
      }
      unsigned int v24 = *v11;
      *((void *)this + 1) = v11 + 1;
      if (v24 <= 5) {
        goto LABEL_33;
      }
LABEL_37:
      wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 2, (int)v24);
      if (*((void *)this + 1) == *((void *)this + 2)) {
        goto LABEL_38;
      }
    }
  }
}

void sub_100103F84()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100103FAC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      if ((*(_DWORD *)(v5 + 32) & 2) != 0) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047E9B0 + 16), a2, a4);
      if ((*(_DWORD *)(v5 + 32) & 2) != 0) {
        goto LABEL_9;
      }
    }
LABEL_3:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_10;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), (int)a2, a4);
  int v11 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v11;
  if (!v11) {
    return result;
  }
LABEL_10:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100104070(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  int v5 = *((_DWORD *)this + 8);
  if (v5)
  {
    uint64_t v9 = *((void *)this + 2);
    if (v9)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v10 = a2 + 1;
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v9 + 40);
      if (v11 <= 0x7F) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v9 = *(void *)(qword_10047E9B0 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v10 = a2 + 1;
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v9 + 40);
      if (v11 <= 0x7F)
      {
LABEL_7:
        *((unsigned char *)v3 + 1) = (_BYTE)v11;
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100102550(v9, (uint64_t)v3 + 2, a3);
        if ((*((_DWORD *)this + 8) & 2) != 0) {
          goto LABEL_11;
        }
LABEL_3:
        uint64_t v8 = (void *)*((void *)this + 1);
        uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
        int v6 = v8;
        if (!v8) {
          return v3;
        }
        goto LABEL_18;
      }
    }
    uint64_t v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v10, a3);
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100102550(v9, v12, v13);
    if ((*((_DWORD *)this + 8) & 2) != 0) {
      goto LABEL_11;
    }
    goto LABEL_3;
  }
  if ((v5 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_11:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 6);
  *(unsigned char *)char v3 = 16;
  unint64_t v15 = (unint64_t)v3 + 1;
  if ((v14 & 0x80000000) != 0)
  {
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v14, v15, a3);
    uint64_t v17 = (void *)*((void *)this + 1);
    uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v6 = v17;
    if (!v17) {
      return v3;
    }
  }
  else if (v14 > 0x7F)
  {
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, v15, a3);
    int v18 = (void *)*((void *)this + 1);
    uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v6 = v18;
    if (!v18) {
      return v3;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v14;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    int v16 = (void *)*((void *)this + 1);
    uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v6 = v16;
    if (!v16) {
      return v3;
    }
  }
LABEL_18:
  if (*v6 == v6[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v7, v3, a3);
}

uint64_t sub_1001041B4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (!*(unsigned char *)(a1 + 32))
  {
    uint64_t v3 = 0;
    goto LABEL_30;
  }
  if ((*(unsigned char *)(a1 + 32) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_30;
    }
LABEL_24:
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if ((v11 & 0x80000000) != 0)
    {
      int v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2)
          + 1;
    }
    else
    {
      int v12 = 2;
    }
    uint64_t v3 = (v12 + v3);
    goto LABEL_30;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    int v5 = *(unsigned __int8 *)(v4 + 44);
    if (*(unsigned char *)(v4 + 44)) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(qword_10047E9B0 + 16);
    int v5 = *(unsigned __int8 *)(v4 + 44);
    if (*(unsigned char *)(v4 + 44))
    {
LABEL_8:
      int v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0) {
        v6 += 9;
      }
      if ((v5 & 4) != 0) {
        int v7 = v6 + 9;
      }
      else {
        int v7 = v6;
      }
      uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      uint64_t v9 = *(void **)(v4 + 8);
      if (!v9)
      {
LABEL_21:
        *(_DWORD *)(v4 + 40) = v7;
        uint64_t v3 = (v7 + 2);
        if ((*(_DWORD *)(a1 + 32) & 2) == 0) {
          goto LABEL_30;
        }
        goto LABEL_24;
      }
      goto LABEL_17;
    }
  }
  int v7 = 0;
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  uint64_t v9 = *(void **)(v4 + 8);
  if (!v9) {
    goto LABEL_21;
  }
LABEL_17:
  if (*v9 == v9[1]) {
    goto LABEL_21;
  }
  unsigned int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v8, a2)+ v7);
  *(_DWORD *)(v4 + 40) = v10;
  if (v10 < 0x80)
  {
    uint64_t v3 = (v10 + 2);
    if ((*(_DWORD *)(a1 + 32) & 2) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
  uint64_t v3 = v10
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2)+ 1;
  if ((*(_DWORD *)(a1 + 32) & 2) != 0) {
    goto LABEL_24;
  }
LABEL_30:
  uint64_t v13 = *(void **)(a1 + 8);
  if (v13 && *v13 != v13[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 28) = v3;
  return v3;
}

uint64_t sub_100104324(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001010AC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100104404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100104418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010442C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001044B8()
{
  return 1;
}

uint64_t sub_1001044C0()
{
  uint64_t v0 = qword_10047D7B8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000FC71C;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D6F8;
}

void sub_100104550(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_100104564(void *a1)
{
  *a1 = off_100455D78;
  if ((void *)qword_10047E9B8 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001045F8(void *a1)
{
  *a1 = off_100455D78;
  if ((void *)qword_10047E9B8 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1001046A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1001046A8()
{
}

void sub_10010470C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100104734(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacunsigned int k = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_24;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        v32[0] = 0;
        int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v32))return 0; {
        }
          }
        else
        {
          v32[0] = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v16 = *((_DWORD *)this + 14);
        int v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0;
        }
        int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32[0]);
        if (!sub_10010228C(v10, this, v19, v20) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        int v21 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)this + 14) = v23;
        }
        uint64_t v25 = (unsigned char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        if ((unint64_t)v25 >= v24 || *v25 != 16) {
          continue;
        }
        uint64_t v13 = v25 + 1;
        *((void *)this + 1) = v13;
        v32[0] = 0;
        if ((unint64_t)v13 >= v24) {
          goto LABEL_39;
        }
        goto LABEL_36;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        v32[0] = 0;
        if ((unint64_t)v13 >= v12) {
          goto LABEL_39;
        }
LABEL_36:
        if (*v13 < 0)
        {
LABEL_39:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v32);
          if (!result) {
            return result;
          }
          unsigned int v26 = v32[0];
          if (v32[0] <= 2)
          {
LABEL_38:
            *(_DWORD *)(a1 + 44) |= 2u;
            *(_DWORD *)(a1 + 24) = v26;
            goto LABEL_42;
          }
        }
        else
        {
          unsigned int v26 = *v13;
          *((void *)this + 1) = v13 + 1;
          if (v26 <= 2) {
            goto LABEL_38;
          }
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 2, (int)v26);
LABEL_42:
        int v29 = (unsigned char *)*((void *)this + 1);
        unint64_t v28 = *((void *)this + 2);
        if ((unint64_t)v29 >= v28 || *v29 != 24) {
          continue;
        }
        unint64_t v15 = v29 + 1;
        *((void *)this + 1) = v15;
        v32[0] = 0;
        if ((unint64_t)v15 >= v28) {
          goto LABEL_48;
        }
LABEL_45:
        if (*v15 < 0)
        {
LABEL_48:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v32);
          if (!result) {
            return result;
          }
          unsigned int v30 = v32[0];
          if (v32[0] <= 3)
          {
LABEL_47:
            *(_DWORD *)(a1 + 44) |= 4u;
            *(_DWORD *)(a1 + 28) = v30;
            goto LABEL_51;
          }
        }
        else
        {
          unsigned int v30 = *v15;
          *((void *)this + 1) = v15 + 1;
          if (v30 <= 3) {
            goto LABEL_47;
          }
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 3, (int)v30);
LABEL_51:
        uint64_t v31 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 != 33) {
          continue;
        }
        *((void *)this + 1) = v31 + 1;
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
LABEL_54:
        }
        *(void *)(a1 + 32) = *(void *)v32;
        *(_DWORD *)(a1 + 44) |= 8u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        v32[0] = 0;
        if ((unint64_t)v15 >= v14) {
          goto LABEL_48;
        }
        goto LABEL_45;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_24;
        }
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        goto LABEL_54;
        }
      default:
        int v9 = TagFallback & 7;
LABEL_24:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_100104B1C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100104B54(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 44);
      if ((v6 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047E9B8 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 44);
      if ((v6 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 8) == 0)
  {
LABEL_5:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v11 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v11;
  if (!v11) {
    return result;
  }
LABEL_14:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100104C50(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  int v5 = *((_DWORD *)this + 11);
  if (v5)
  {
    uint64_t v9 = *((void *)this + 2);
    if (v9)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v10 = a2 + 1;
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v9 + 40);
      if (v11 <= 0x7F) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v9 = *(void *)(qword_10047E9B8 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v10 = a2 + 1;
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v9 + 40);
      if (v11 <= 0x7F)
      {
LABEL_9:
        *((unsigned char *)v3 + 1) = (_BYTE)v11;
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100102550(v9, (uint64_t)v3 + 2, a3);
        if ((*((_DWORD *)this + 11) & 2) != 0) {
          goto LABEL_13;
        }
LABEL_3:
        if ((*((unsigned char *)this + 44) & 4) == 0) {
          goto LABEL_4;
        }
LABEL_20:
        int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 7);
        *(unsigned char *)char v3 = 24;
        unint64_t v17 = (unint64_t)v3 + 1;
        if ((v16 & 0x80000000) != 0)
        {
          char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v16, v17, a3);
          if ((*((unsigned char *)this + 44) & 8) != 0) {
            goto LABEL_27;
          }
        }
        else if (v16 > 0x7F)
        {
          char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, v17, a3);
          if ((*((unsigned char *)this + 44) & 8) != 0) {
            goto LABEL_27;
          }
        }
        else
        {
          *((unsigned char *)v3 + 1) = (_BYTE)v16;
          char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
          if ((*((unsigned char *)this + 44) & 8) != 0) {
            goto LABEL_27;
          }
        }
LABEL_5:
        uint64_t v8 = (void *)*((void *)this + 1);
        int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
        int v6 = v8;
        if (!v8) {
          return v3;
        }
        goto LABEL_28;
      }
    }
    uint64_t v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v10, a3);
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100102550(v9, v12, v13);
    if ((*((_DWORD *)this + 11) & 2) != 0) {
      goto LABEL_13;
    }
    goto LABEL_3;
  }
  if ((v5 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_13:
  unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 6);
  *(unsigned char *)char v3 = 16;
  unint64_t v15 = (unint64_t)v3 + 1;
  if ((v14 & 0x80000000) != 0)
  {
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v14, v15, a3);
    if ((*((unsigned char *)this + 44) & 4) != 0) {
      goto LABEL_20;
    }
  }
  else if (v14 > 0x7F)
  {
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, v15, a3);
    if ((*((unsigned char *)this + 44) & 4) != 0) {
      goto LABEL_20;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v14;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((unsigned char *)this + 44) & 4) != 0) {
      goto LABEL_20;
    }
  }
LABEL_4:
  if ((*((unsigned char *)this + 44) & 8) == 0) {
    goto LABEL_5;
  }
LABEL_27:
  uint64_t v18 = *((void *)this + 4);
  *(unsigned char *)char v3 = 33;
  *(void *)((char *)v3 + 1) = v18;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  uint64_t v19 = (void *)*((void *)this + 1);
  int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v6 = v19;
  if (!v19) {
    return v3;
  }
LABEL_28:
  if (*v6 == v6[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v7, v3, a3);
}

unint64_t sub_100104E4C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 44);
  if ((_BYTE)v3)
  {
    if ((*(unsigned char *)(a1 + 44) & 1) == 0)
    {
      LODWORD(v4) = 0;
      if ((*(unsigned char *)(a1 + 44) & 2) == 0) {
        goto LABEL_31;
      }
LABEL_25:
      unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v14 & 0x80000000) != 0)
      {
        int v15 = 11;
      }
      else if (v14 >= 0x80)
      {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2)
            + 1;
        int v3 = *(_DWORD *)(a1 + 44);
      }
      else
      {
        int v15 = 2;
      }
      LODWORD(v4) = v15 + v4;
LABEL_31:
      if ((v3 & 4) != 0)
      {
        int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
        if ((v16 & 0x80000000) != 0)
        {
          int v17 = 11;
        }
        else if (v16 >= 0x80)
        {
          int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2)+ 1;
          int v3 = *(_DWORD *)(a1 + 44);
        }
        else
        {
          int v17 = 2;
        }
        LODWORD(v4) = v17 + v4;
      }
      if ((v3 & 8) != 0) {
        unint64_t v4 = (v4 + 9);
      }
      else {
        unint64_t v4 = v4;
      }
      int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v6 = *(void **)(a1 + 8);
      if (!v6) {
        goto LABEL_6;
      }
      goto LABEL_42;
    }
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8)
    {
      int v9 = *(unsigned __int8 *)(v8 + 44);
      if (*(unsigned char *)(v8 + 44)) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v8 = *(void *)(qword_10047E9B8 + 16);
      int v9 = *(unsigned __int8 *)(v8 + 44);
      if (*(unsigned char *)(v8 + 44))
      {
LABEL_9:
        int v10 = (v9 << 31 >> 31) & 9;
        if ((v9 & 2) != 0) {
          v10 += 9;
        }
        if ((v9 & 4) != 0) {
          int v11 = v10 + 9;
        }
        else {
          int v11 = v10;
        }
        uint64_t v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v8 + 8);
        uint64_t v13 = *(void **)(v8 + 8);
        if (!v13) {
          goto LABEL_22;
        }
        goto LABEL_18;
      }
    }
    int v11 = 0;
    uint64_t v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v8 + 8);
    uint64_t v13 = *(void **)(v8 + 8);
    if (!v13) {
      goto LABEL_22;
    }
LABEL_18:
    if (*v13 != v13[1])
    {
      unint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v12, a2)
         + v11;
      *(_DWORD *)(v8 + 40) = v4;
      if (v4 >= 0x80)
      {
        LODWORD(v4) = v4
                    + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v4, a2)+ 1;
        int v3 = *(_DWORD *)(a1 + 44);
        if ((v3 & 2) == 0) {
          goto LABEL_31;
        }
      }
      else
      {
        LODWORD(v4) = v4 + 2;
        int v3 = *(_DWORD *)(a1 + 44);
        if ((v3 & 2) == 0) {
          goto LABEL_31;
        }
      }
      goto LABEL_25;
    }
LABEL_22:
    *(_DWORD *)(v8 + 40) = v11;
    LODWORD(v4) = v11 + 2;
    int v3 = *(_DWORD *)(a1 + 44);
    if ((v3 & 2) == 0) {
      goto LABEL_31;
    }
    goto LABEL_25;
  }
  unint64_t v4 = 0;
  int v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v6 = *(void **)(a1 + 8);
  if (!v6)
  {
LABEL_6:
    *(_DWORD *)(a1 + 40) = v4;
    return v4;
  }
LABEL_42:
  if (*v6 == v6[1]) {
    goto LABEL_6;
  }
  uint64_t v18 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
      + v4;
  *(_DWORD *)(a1 + 40) = v18;
  return v18;
}

uint64_t sub_100105020(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100101238((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100105100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100105114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100105128(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001051B4()
{
  return 1;
}

uint64_t sub_1001051BC()
{
  uint64_t v0 = qword_10047D7B8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000FC71C;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D710;
}

void sub_10010524C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100105260(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((*(unsigned char *)(a2 + 32) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 32) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    int v8 = *(_DWORD *)(a2 + 20);
    a1[8] |= 2u;
    a1[5] = v8;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_7;
  }
  int v7 = *(_DWORD *)(a2 + 16);
  a1[8] |= 1u;
  a1[4] = v7;
  int v4 = *(_DWORD *)(a2 + 32);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
LABEL_7:
    int v5 = *(_DWORD *)(a2 + 24);
    a1[8] |= 4u;
    a1[6] = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100105340(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100105354(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100105368(uint64_t a1)
{
  *(void *)a1 = off_100455E28;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001053BC(uint64_t a1)
{
  *(void *)a1 = off_100455E28;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100105424(uint64_t result, int a2)
{
  *(_DWORD *)(result + 28) = a2;
  return result;
}

void sub_10010542C()
{
}

void sub_100105490()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001054B8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32))
  {
    *(void *)(a1 + 16) = 0;
    *(_DWORD *)(a1 + 24) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 6) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001054DC(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          TagFallbacunsigned int k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacunsigned int k = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 5) {
          goto LABEL_28;
        }
        unsigned int v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v16) & 1) == 0) {
          return 0;
        }
        a1[4] = v16;
        a1[8] |= 1u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 21)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_19;
        }
      }
      if (v9 == 2) {
        break;
      }
      if (v9 == 3)
      {
        int v10 = TagFallback & 7;
        if (v10 == 5)
        {
          unsigned int v14 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v14) & 1) == 0) {
            return 0;
          }
          goto LABEL_23;
        }
      }
      else
      {
        int v10 = TagFallback & 7;
      }
LABEL_28:
      if (v10 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v10 = TagFallback & 7;
    if (v10 != 5) {
      goto LABEL_28;
    }
LABEL_19:
    unsigned int v15 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v15) & 1) == 0) {
      return 0;
    }
    a1[5] = v15;
    a1[8] |= 2u;
    uint64_t v12 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v12 < *((void *)this + 2) && *v12 == 29)
    {
      *((void *)this + 1) = v12 + 1;
      unsigned int v14 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v14) & 1) == 0) {
        return 0;
      }
LABEL_23:
      a1[6] = v14;
      a1[8] |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1001056E8(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 32);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(result + 16), a3);
    int v5 = *(_DWORD *)(v4 + 32);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v4 + 20), a3);
  if ((*(_DWORD *)(v4 + 32) & 4) == 0)
  {
LABEL_4:
    int v8 = *(void **)(v4 + 8);
    int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    unsigned int v6 = v8;
    if (!v8) {
      return result;
    }
    goto LABEL_9;
  }
LABEL_8:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v4 + 24), a3);
  unsigned int v9 = *(void **)(v4 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_9:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_1001057A0(_DWORD *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = a1[8];
  if (v3)
  {
    int v7 = a1[4];
    *(unsigned char *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v7;
    a2 += 5;
    int v3 = a1[8];
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      int v9 = a1[6];
      *(unsigned char *)a2 = 29;
      *(_DWORD *)(a2 + 1) = v9;
      a2 += 5;
      int v10 = (void *)*((void *)a1 + 1);
      uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
      int v5 = v10;
      if (!v10) {
        return a2;
      }
      goto LABEL_9;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v8 = a1[5];
  *(unsigned char *)a2 = 21;
  *(_DWORD *)(a2 + 1) = v8;
  a2 += 5;
  if ((a1[8] & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  unsigned int v6 = (void *)*((void *)a1 + 1);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_9:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_100105870(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 32);
  unsigned int v4 = (v3 << 31 >> 31) & 5;
  if ((v3 & 2) != 0) {
    v4 += 5;
  }
  if ((v3 & 4) != 0) {
    v4 += 5;
  }
  if (*(unsigned char *)(a1 + 32)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  int v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 28) = v5;
  return v5;
}

uint64_t sub_1001058E4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100105260(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001059C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001059D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001059EC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100105A78()
{
  return 1;
}

uint64_t sub_100105A80()
{
  uint64_t v0 = qword_10047D7B8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000FC71C;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D740;
}

void sub_100105B10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_100105B24(uint64_t a1)
{
  *(void *)a1 = off_100455ED8;
  if (qword_10047E9C0 != a1)
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  int v3 = *(_DWORD *)(a1 + 132);
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i < v3; ++i)
    {
      uint64_t v5 = *(void *)(*(void *)(a1 + 120) + 8 * i);
      if (v5)
      {
        (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
        int v3 = *(_DWORD *)(a1 + 132);
      }
    }
  }
  if (*(void *)(a1 + 120)) {
    operator delete[]();
  }
  int v6 = *(_DWORD *)(a1 + 108);
  if (v6 >= 1)
  {
    for (uint64_t j = 0; j < v6; ++j)
    {
      uint64_t v8 = *(void *)(*(void *)(a1 + 96) + 8 * j);
      if (v8)
      {
        (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
        int v6 = *(_DWORD *)(a1 + 108);
      }
    }
  }
  if (*(void *)(a1 + 96)) {
    operator delete[]();
  }
  int v9 = *(_DWORD *)(a1 + 84);
  if (v9 >= 1)
  {
    for (uint64_t k = 0; k < v9; ++k)
    {
      uint64_t v11 = *(void *)(*(void *)(a1 + 72) + 8 * k);
      if (v11)
      {
        (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
        int v9 = *(_DWORD *)(a1 + 84);
      }
    }
  }
  if (*(void *)(a1 + 72)) {
    operator delete[]();
  }
  int v12 = *(_DWORD *)(a1 + 60);
  if (v12 >= 1)
  {
    for (uint64_t m = 0; m < v12; ++m)
    {
      uint64_t v14 = *(void *)(*(void *)(a1 + 48) + 8 * m);
      if (v14)
      {
        (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
        int v12 = *(_DWORD *)(a1 + 60);
      }
    }
  }
  if (*(void *)(a1 + 48)) {
    operator delete[]();
  }
  int v15 = *(_DWORD *)(a1 + 36);
  if (v15 >= 1)
  {
    for (uint64_t n = 0; n < v15; ++n)
    {
      uint64_t v17 = *(void *)(*(void *)(a1 + 24) + 8 * n);
      if (v17)
      {
        (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
        int v15 = *(_DWORD *)(a1 + 36);
      }
    }
  }
  if (*(void *)(a1 + 24)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100105E00(uint64_t a1)
{
  sub_100105B24(a1);

  operator delete();
}

uint64_t sub_100105E38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 144) = a2;
  return result;
}

void sub_100105E40()
{
}

void sub_100105ECC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100105EF4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  int v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 48);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 72);
  int v9 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 96);
  int v10 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 120);
  unsigned int v11 = a1 + 8;
  while (1)
  {
LABEL_2:
    int v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 < *((void *)this + 2) && (*v12 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = *v12;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if (v14 != 2) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 148) |= 1u;
        uint64_t v15 = *(void *)(a1 + 16);
        if (!v15) {
          operator new();
        }
        unsigned int v92 = 0;
        unsigned int v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v92))return 0; {
        }
          }
        else
        {
          unsigned int v92 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        int v33 = *((_DWORD *)this + 14);
        int v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v92);
        if (!sub_10010228C(v15, this, v36, v37) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
        int v38 = *((_DWORD *)this + 14);
        BOOL v39 = __OFSUB__(v38, 1);
        int v40 = v38 - 1;
        if (v40 < 0 == v39) {
          *((_DWORD *)this + 14) = v40;
        }
        int v41 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v41 < *((void *)this + 2) && *v41 == 18)
        {
          do
          {
            *((void *)this + 1) = v41 + 1;
            int v17 = *(_DWORD *)(a1 + 36);
            uint64_t v18 = *(int *)(a1 + 32);
            if ((int)v18 >= v17)
            {
LABEL_40:
              if (v17 == *(_DWORD *)(a1 + 40))
              {
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v17 + 1);
                int v17 = *(_DWORD *)(a1 + 36);
              }
              *(_DWORD *)(a1 + 36) = v17 + 1;
              operator new();
            }
LABEL_17:
            uint64_t v19 = *(void *)(a1 + 24);
            *(_DWORD *)(a1 + 32) = v18 + 1;
            BOOL v20 = *(_DWORD **)(v19 + 8 * v18);
            unsigned int v92 = 0;
            int v42 = (char *)*((void *)this + 1);
            if ((unint64_t)v42 >= *((void *)this + 2) || *v42 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v92))return 0; {
            }
              }
            else
            {
              unsigned int v92 = *v42;
              *((void *)this + 1) = v42 + 1;
            }
            int v43 = *((_DWORD *)this + 14);
            int v44 = *((_DWORD *)this + 15);
            *((_DWORD *)this + 14) = v43 + 1;
            if (v43 >= v44) {
              return 0;
            }
            int v45 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v92);
            if (!sub_1001054DC(v20, this, v46, v47) || !*((unsigned char *)this + 36)) {
              return 0;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v45);
            int v48 = *((_DWORD *)this + 14);
            BOOL v39 = __OFSUB__(v48, 1);
            int v49 = v48 - 1;
            if (v49 < 0 == v39) {
              *((_DWORD *)this + 14) = v49;
            }
            int v41 = (unsigned char *)*((void *)this + 1);
            if ((unint64_t)v41 >= *((void *)this + 2)) {
              goto LABEL_2;
            }
            int v50 = *v41;
          }
          while (v50 == 18);
          if (v50 == 26)
          {
            do
            {
              *((void *)this + 1) = v41 + 1;
              int v21 = *(_DWORD *)(a1 + 60);
              uint64_t v22 = *(int *)(a1 + 56);
              if ((int)v22 >= v21)
              {
LABEL_56:
                if (v21 == *(_DWORD *)(a1 + 64))
                {
                  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v21 + 1);
                  int v21 = *(_DWORD *)(a1 + 60);
                }
                *(_DWORD *)(a1 + 60) = v21 + 1;
                operator new();
              }
LABEL_20:
              uint64_t v23 = *(void *)(a1 + 48);
              *(_DWORD *)(a1 + ++*(_DWORD *)(result + 56) = v22 + 1;
              unint64_t v24 = *(_DWORD **)(v23 + 8 * v22);
              unsigned int v92 = 0;
              int v51 = (char *)*((void *)this + 1);
              if ((unint64_t)v51 >= *((void *)this + 2) || *v51 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v92))return 0; {
              }
                }
              else
              {
                unsigned int v92 = *v51;
                *((void *)this + 1) = v51 + 1;
              }
              int v52 = *((_DWORD *)this + 14);
              int v53 = *((_DWORD *)this + 15);
              *((_DWORD *)this + 14) = v52 + 1;
              if (v52 >= v53) {
                return 0;
              }
              int v54 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v92);
              if (!sub_1001054DC(v24, this, v55, v56) || !*((unsigned char *)this + 36)) {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v54);
              int v57 = *((_DWORD *)this + 14);
              BOOL v39 = __OFSUB__(v57, 1);
              int v58 = v57 - 1;
              if (v58 < 0 == v39) {
                *((_DWORD *)this + 14) = v58;
              }
              int v41 = (unsigned char *)*((void *)this + 1);
              if ((unint64_t)v41 >= *((void *)this + 2)) {
                goto LABEL_2;
              }
              int v59 = *v41;
            }
            while (v59 == 26);
            if (v59 == 34)
            {
              do
              {
                *((void *)this + 1) = v41 + 1;
                int v25 = *(_DWORD *)(a1 + 84);
                uint64_t v26 = *(int *)(a1 + 80);
                if ((int)v26 >= v25)
                {
LABEL_72:
                  if (v25 == *(_DWORD *)(a1 + 88))
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v25 + 1);
                    int v25 = *(_DWORD *)(a1 + 84);
                  }
                  *(_DWORD *)(a1 + 84) = v25 + 1;
                  operator new();
                }
LABEL_23:
                uint64_t v27 = *(void *)(a1 + 72);
                *(_DWORD *)(a1 + 80) = v26 + 1;
                unint64_t v28 = *(_DWORD **)(v27 + 8 * v26);
                unsigned int v92 = 0;
                int v60 = (char *)*((void *)this + 1);
                if ((unint64_t)v60 >= *((void *)this + 2) || *v60 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v92))return 0; {
                }
                  }
                else
                {
                  unsigned int v92 = *v60;
                  *((void *)this + 1) = v60 + 1;
                }
                int v61 = *((_DWORD *)this + 14);
                int v62 = *((_DWORD *)this + 15);
                *((_DWORD *)this + 14) = v61 + 1;
                if (v61 >= v62) {
                  return 0;
                }
                int v63 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v92);
                if (!sub_1001054DC(v28, this, v64, v65) || !*((unsigned char *)this + 36)) {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v63);
                int v66 = *((_DWORD *)this + 14);
                BOOL v39 = __OFSUB__(v66, 1);
                int v67 = v66 - 1;
                if (v67 < 0 == v39) {
                  *((_DWORD *)this + 14) = v67;
                }
                int v41 = (unsigned char *)*((void *)this + 1);
                if ((unint64_t)v41 >= *((void *)this + 2)) {
                  goto LABEL_2;
                }
                int v68 = *v41;
              }
              while (v68 == 34);
              if (v68 == 42)
              {
                do
                {
                  *((void *)this + 1) = v41 + 1;
                  int v29 = *(_DWORD *)(a1 + 108);
                  uint64_t v30 = *(int *)(a1 + 104);
                  if ((int)v30 >= v29)
                  {
LABEL_88:
                    if (v29 == *(_DWORD *)(a1 + 112))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9, v29 + 1);
                      int v29 = *(_DWORD *)(a1 + 108);
                    }
                    *(_DWORD *)(a1 + 108) = v29 + 1;
                    operator new();
                  }
LABEL_26:
                  uint64_t v31 = *(void *)(a1 + 96);
                  *(_DWORD *)(a1 + 104) = v30 + 1;
                  int v32 = *(_DWORD **)(v31 + 8 * v30);
                  unsigned int v92 = 0;
                  int v69 = (char *)*((void *)this + 1);
                  if ((unint64_t)v69 >= *((void *)this + 2) || *v69 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v92))return 0; {
                  }
                    }
                  else
                  {
                    unsigned int v92 = *v69;
                    *((void *)this + 1) = v69 + 1;
                  }
                  int v70 = *((_DWORD *)this + 14);
                  int v71 = *((_DWORD *)this + 15);
                  *((_DWORD *)this + 14) = v70 + 1;
                  if (v70 >= v71) {
                    return 0;
                  }
                  int v72 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v92);
                  if (!sub_1001054DC(v32, this, v73, v74) || !*((unsigned char *)this + 36)) {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v72);
                  int v75 = *((_DWORD *)this + 14);
                  BOOL v39 = __OFSUB__(v75, 1);
                  int v76 = v75 - 1;
                  if (v76 < 0 == v39) {
                    *((_DWORD *)this + 14) = v76;
                  }
                  int v41 = (unsigned char *)*((void *)this + 1);
                  if ((unint64_t)v41 >= *((void *)this + 2)) {
                    goto LABEL_2;
                  }
                  int v77 = *v41;
                }
                while (v77 == 42);
                if (v77 == 50)
                {
                  do
                  {
                    *((void *)this + 1) = v41 + 1;
LABEL_104:
                    int v78 = *(_DWORD *)(a1 + 132);
                    uint64_t v79 = *(int *)(a1 + 128);
                    if ((int)v79 >= v78)
                    {
                      if (v78 == *(_DWORD *)(a1 + 136))
                      {
                        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v10, v78 + 1);
                        int v78 = *(_DWORD *)(a1 + 132);
                      }
                      *(_DWORD *)(a1 + 132) = v78 + 1;
                      operator new();
                    }
                    uint64_t v80 = *(void *)(a1 + 120);
                    *(_DWORD *)(a1 + 128) = v79 + 1;
                    int v81 = *(_DWORD **)(v80 + 8 * v79);
                    unsigned int v92 = 0;
                    int v82 = (char *)*((void *)this + 1);
                    if ((unint64_t)v82 >= *((void *)this + 2) || *v82 < 0)
                    {
                      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v92))return 0; {
                    }
                      }
                    else
                    {
                      unsigned int v92 = *v82;
                      *((void *)this + 1) = v82 + 1;
                    }
                    int v83 = *((_DWORD *)this + 14);
                    int v84 = *((_DWORD *)this + 15);
                    *((_DWORD *)this + 14) = v83 + 1;
                    if (v83 >= v84) {
                      return 0;
                    }
                    int v85 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v92);
                    if (!sub_1001054DC(v81, this, v86, v87) || !*((unsigned char *)this + 36)) {
                      return 0;
                    }
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v85);
                    int v88 = *((_DWORD *)this + 14);
                    BOOL v39 = __OFSUB__(v88, 1);
                    int v89 = v88 - 1;
                    if (v89 < 0 == v39) {
                      *((_DWORD *)this + 14) = v89;
                    }
                    int v41 = (unsigned char *)*((void *)this + 1);
                    int v90 = (unsigned char *)*((void *)this + 2);
                  }
                  while (v41 < v90 && *v41 == 50);
                  if (v41 == v90 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                  {
                    *((_DWORD *)this + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)this + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if (v14 != 2) {
          goto LABEL_28;
        }
        int v17 = *(_DWORD *)(a1 + 36);
        uint64_t v18 = *(int *)(a1 + 32);
        if ((int)v18 < v17) {
          goto LABEL_17;
        }
        goto LABEL_40;
      case 3u:
        int v14 = TagFallback & 7;
        if (v14 != 2) {
          goto LABEL_28;
        }
        int v21 = *(_DWORD *)(a1 + 60);
        uint64_t v22 = *(int *)(a1 + 56);
        if ((int)v22 < v21) {
          goto LABEL_20;
        }
        goto LABEL_56;
      case 4u:
        int v14 = TagFallback & 7;
        if (v14 != 2) {
          goto LABEL_28;
        }
        int v25 = *(_DWORD *)(a1 + 84);
        uint64_t v26 = *(int *)(a1 + 80);
        if ((int)v26 < v25) {
          goto LABEL_23;
        }
        goto LABEL_72;
      case 5u:
        int v14 = TagFallback & 7;
        if (v14 != 2) {
          goto LABEL_28;
        }
        int v29 = *(_DWORD *)(a1 + 108);
        uint64_t v30 = *(int *)(a1 + 104);
        if ((int)v30 < v29) {
          goto LABEL_26;
        }
        goto LABEL_88;
      case 6u:
        int v14 = TagFallback & 7;
        if (v14 != 2) {
          goto LABEL_28;
        }
        goto LABEL_104;
      default:
        int v14 = TagFallback & 7;
LABEL_28:
        if (v14 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v11, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_10010687C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001068A4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001068F4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 148))
  {
    uint64_t v6 = *(void *)(result + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047E9C0 + 16);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  if (*(int *)(v5 + 56) >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 48) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 56));
  }
  if (*(int *)(v5 + 80) >= 1)
  {
    uint64_t v9 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 72) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 80));
  }
  if (*(int *)(v5 + 104) >= 1)
  {
    uint64_t v10 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(*(void *)(v5 + 96) + 8 * v10++), a2, a4);
    while (v10 < *(int *)(v5 + 104));
  }
  if (*(int *)(v5 + 128) >= 1)
  {
    uint64_t v11 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(*(void *)(v5 + 120) + 8 * v11++), a2, a4);
    while (v11 < *(int *)(v5 + 128));
  }
  int v14 = *(void **)(v5 + 8);
  uint64_t v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v12 = v14;
  if (v14 && *v12 != v12[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v13, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100106A88(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  int v3 = a2;
  if (*((unsigned char *)this + 148))
  {
    uint64_t v5 = *((void *)this + 2);
    if (v5)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v6 = a2 + 1;
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v5 + 40);
      if (v7 <= 0x7F)
      {
LABEL_4:
        *((unsigned char *)v3 + 1) = (_BYTE)v7;
        uint64_t v8 = (uint64_t)v3 + 2;
LABEL_7:
        int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100102550(v5, v8, a3);
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v5 = *(void *)(qword_10047E9C0 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v6 = a2 + 1;
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v5 + 40);
      if (v7 <= 0x7F) {
        goto LABEL_4;
      }
    }
    uint64_t v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, v6, a3);
    goto LABEL_7;
  }
LABEL_8:
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *(_DWORD **)(*((void *)this + 3) + 8 * v9);
      *(unsigned char *)int v3 = 18;
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[7];
      if (v11 > 0x7F) {
        break;
      }
      *((unsigned char *)v3 + 1) = (_BYTE)v11;
      int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      int v12 = v10[8];
      if (v12) {
        goto LABEL_15;
      }
LABEL_16:
      if ((v12 & 2) != 0)
      {
        int v17 = v10[5];
        *(unsigned char *)int v3 = 21;
        *(_DWORD *)((char *)v3 + 1) = v17;
        int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
        if ((v10[8] & 4) == 0)
        {
LABEL_18:
          unsigned int v16 = (void *)*((void *)v10 + 1);
          uint64_t v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v10 + 2);
          int v14 = v16;
          if (v16) {
            goto LABEL_22;
          }
          goto LABEL_10;
        }
      }
      else if ((v12 & 4) == 0)
      {
        goto LABEL_18;
      }
      int v18 = v10[6];
      *(unsigned char *)int v3 = 29;
      *(_DWORD *)((char *)v3 + 1) = v18;
      int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
      uint64_t v19 = (void *)*((void *)v10 + 1);
      uint64_t v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v10 + 2);
      int v14 = v19;
      if (v19)
      {
LABEL_22:
        if (*v14 != v14[1]) {
          int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v15, v3, a3);
        }
      }
LABEL_10:
      if (++v9 >= *((int *)this + 8)) {
        goto LABEL_24;
      }
    }
    int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
    int v12 = v10[8];
    if ((v12 & 1) == 0) {
      goto LABEL_16;
    }
LABEL_15:
    int v13 = v10[4];
    *(unsigned char *)int v3 = 13;
    *(_DWORD *)((char *)v3 + 1) = v13;
    int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    int v12 = v10[8];
    goto LABEL_16;
  }
LABEL_24:
  if (*((int *)this + 14) >= 1)
  {
    uint64_t v20 = 0;
    while (1)
    {
      int v21 = *(_DWORD **)(*((void *)this + 6) + 8 * v20);
      *(unsigned char *)int v3 = 26;
      uint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21[7];
      if (v22 > 0x7F) {
        break;
      }
      *((unsigned char *)v3 + 1) = (_BYTE)v22;
      int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      int v23 = v21[8];
      if (v23) {
        goto LABEL_31;
      }
LABEL_32:
      if ((v23 & 2) != 0)
      {
        int v28 = v21[5];
        *(unsigned char *)int v3 = 21;
        *(_DWORD *)((char *)v3 + 1) = v28;
        int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
        if ((v21[8] & 4) == 0)
        {
LABEL_34:
          uint64_t v27 = (void *)*((void *)v21 + 1);
          uint64_t v26 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v21 + 2);
          int v25 = v27;
          if (v27) {
            goto LABEL_38;
          }
          goto LABEL_26;
        }
      }
      else if ((v23 & 4) == 0)
      {
        goto LABEL_34;
      }
      int v29 = v21[6];
      *(unsigned char *)int v3 = 29;
      *(_DWORD *)((char *)v3 + 1) = v29;
      int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
      uint64_t v30 = (void *)*((void *)v21 + 1);
      uint64_t v26 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v21 + 2);
      int v25 = v30;
      if (v30)
      {
LABEL_38:
        if (*v25 != v25[1]) {
          int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v26, v3, a3);
        }
      }
LABEL_26:
      if (++v20 >= *((int *)this + 14)) {
        goto LABEL_40;
      }
    }
    int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, (int)v3 + 1, a3);
    int v23 = v21[8];
    if ((v23 & 1) == 0) {
      goto LABEL_32;
    }
LABEL_31:
    int v24 = v21[4];
    *(unsigned char *)int v3 = 13;
    *(_DWORD *)((char *)v3 + 1) = v24;
    int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    int v23 = v21[8];
    goto LABEL_32;
  }
LABEL_40:
  if (*((int *)this + 20) >= 1)
  {
    uint64_t v31 = 0;
    while (1)
    {
      int v32 = *(_DWORD **)(*((void *)this + 9) + 8 * v31);
      *(unsigned char *)int v3 = 34;
      int v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v32[7];
      if (v33 > 0x7F) {
        break;
      }
      *((unsigned char *)v3 + 1) = (_BYTE)v33;
      int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      int v34 = v32[8];
      if (v34) {
        goto LABEL_47;
      }
LABEL_48:
      if ((v34 & 2) != 0)
      {
        int v39 = v32[5];
        *(unsigned char *)int v3 = 21;
        *(_DWORD *)((char *)v3 + 1) = v39;
        int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
        if ((v32[8] & 4) == 0)
        {
LABEL_50:
          int v38 = (void *)*((void *)v32 + 1);
          int v37 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v32 + 2);
          uint64_t v36 = v38;
          if (v38) {
            goto LABEL_54;
          }
          goto LABEL_42;
        }
      }
      else if ((v34 & 4) == 0)
      {
        goto LABEL_50;
      }
      int v40 = v32[6];
      *(unsigned char *)int v3 = 29;
      *(_DWORD *)((char *)v3 + 1) = v40;
      int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
      int v41 = (void *)*((void *)v32 + 1);
      int v37 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v32 + 2);
      uint64_t v36 = v41;
      if (v41)
      {
LABEL_54:
        if (*v36 != v36[1]) {
          int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v37, v3, a3);
        }
      }
LABEL_42:
      if (++v31 >= *((int *)this + 20)) {
        goto LABEL_56;
      }
    }
    int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v33, (int)v3 + 1, a3);
    int v34 = v32[8];
    if ((v34 & 1) == 0) {
      goto LABEL_48;
    }
LABEL_47:
    int v35 = v32[4];
    *(unsigned char *)int v3 = 13;
    *(_DWORD *)((char *)v3 + 1) = v35;
    int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    int v34 = v32[8];
    goto LABEL_48;
  }
LABEL_56:
  if (*((int *)this + 26) >= 1)
  {
    uint64_t v42 = 0;
    while (1)
    {
      int v43 = *(_DWORD **)(*((void *)this + 12) + 8 * v42);
      *(unsigned char *)int v3 = 42;
      int v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v43[7];
      if (v44 > 0x7F) {
        break;
      }
      *((unsigned char *)v3 + 1) = (_BYTE)v44;
      int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      int v45 = v43[8];
      if (v45) {
        goto LABEL_63;
      }
LABEL_64:
      if ((v45 & 2) != 0)
      {
        int v50 = v43[5];
        *(unsigned char *)int v3 = 21;
        *(_DWORD *)((char *)v3 + 1) = v50;
        int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
        if ((v43[8] & 4) == 0)
        {
LABEL_66:
          int v49 = (void *)*((void *)v43 + 1);
          int v48 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v43 + 2);
          int v47 = v49;
          if (v49) {
            goto LABEL_70;
          }
          goto LABEL_58;
        }
      }
      else if ((v45 & 4) == 0)
      {
        goto LABEL_66;
      }
      int v51 = v43[6];
      *(unsigned char *)int v3 = 29;
      *(_DWORD *)((char *)v3 + 1) = v51;
      int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
      int v52 = (void *)*((void *)v43 + 1);
      int v48 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v43 + 2);
      int v47 = v52;
      if (v52)
      {
LABEL_70:
        if (*v47 != v47[1]) {
          int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v48, v3, a3);
        }
      }
LABEL_58:
      if (++v42 >= *((int *)this + 26)) {
        goto LABEL_72;
      }
    }
    int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v44, (int)v3 + 1, a3);
    int v45 = v43[8];
    if ((v45 & 1) == 0) {
      goto LABEL_64;
    }
LABEL_63:
    int v46 = v43[4];
    *(unsigned char *)int v3 = 13;
    *(_DWORD *)((char *)v3 + 1) = v46;
    int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    int v45 = v43[8];
    goto LABEL_64;
  }
LABEL_72:
  if (*((int *)this + 32) >= 1)
  {
    uint64_t v53 = 0;
    while (1)
    {
      int v54 = *(_DWORD **)(*((void *)this + 15) + 8 * v53);
      *(unsigned char *)int v3 = 50;
      uint64_t v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v54[7];
      if (v55 > 0x7F) {
        break;
      }
      *((unsigned char *)v3 + 1) = (_BYTE)v55;
      int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      int v56 = v54[8];
      if (v56) {
        goto LABEL_79;
      }
LABEL_80:
      if ((v56 & 2) != 0)
      {
        int v61 = v54[5];
        *(unsigned char *)int v3 = 21;
        *(_DWORD *)((char *)v3 + 1) = v61;
        int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
        if ((v54[8] & 4) == 0)
        {
LABEL_82:
          int v60 = (void *)*((void *)v54 + 1);
          int v59 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v54 + 2);
          int v58 = v60;
          if (v60) {
            goto LABEL_86;
          }
          goto LABEL_74;
        }
      }
      else if ((v56 & 4) == 0)
      {
        goto LABEL_82;
      }
      int v62 = v54[6];
      *(unsigned char *)int v3 = 29;
      *(_DWORD *)((char *)v3 + 1) = v62;
      int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
      int v63 = (void *)*((void *)v54 + 1);
      int v59 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v54 + 2);
      int v58 = v63;
      if (v63)
      {
LABEL_86:
        if (*v58 != v58[1]) {
          int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v59, v3, a3);
        }
      }
LABEL_74:
      if (++v53 >= *((int *)this + 32)) {
        goto LABEL_88;
      }
    }
    int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v55, (int)v3 + 1, a3);
    int v56 = v54[8];
    if ((v56 & 1) == 0) {
      goto LABEL_80;
    }
LABEL_79:
    int v57 = v54[4];
    *(unsigned char *)int v3 = 13;
    *(_DWORD *)((char *)v3 + 1) = v57;
    int v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    int v56 = v54[8];
    goto LABEL_80;
  }
LABEL_88:
  int v66 = (void *)*((void *)this + 1);
  int v65 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v64 = v66;
  if (!v66 || *v64 == v64[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v65, v3, a3);
}

uint64_t sub_10010717C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if ((*(unsigned char *)(a1 + 148) & 1) == 0)
  {
    int v3 = *(_DWORD *)(a1 + 32);
    if (v3 < 1) {
      goto LABEL_37;
    }
    goto LABEL_22;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    int v5 = *(unsigned __int8 *)(v4 + 44);
    if (*(unsigned char *)(v4 + 44)) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(qword_10047E9C0 + 16);
    int v5 = *(unsigned __int8 *)(v4 + 44);
    if (*(unsigned char *)(v4 + 44))
    {
LABEL_6:
      int v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0) {
        v6 += 9;
      }
      if ((v5 & 4) != 0) {
        int v7 = v6 + 9;
      }
      else {
        int v7 = v6;
      }
      uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      uint64_t v9 = *(void **)(v4 + 8);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_15;
    }
  }
  int v7 = 0;
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  uint64_t v9 = *(void **)(v4 + 8);
  if (!v9) {
    goto LABEL_19;
  }
LABEL_15:
  if (*v9 != v9[1])
  {
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v8, a2)+ v7);
    *(_DWORD *)(v4 + 40) = v10;
    if (v10 >= 0x80)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
      int v14 = *(_DWORD *)(a1 + 32);
      int v3 = v14 + v10 + v13 + 1;
      if (v14 < 1) {
        goto LABEL_37;
      }
    }
    else
    {
      int v11 = *(_DWORD *)(a1 + 32);
      int v3 = v11 + v10 + 2;
      if (v11 < 1) {
        goto LABEL_37;
      }
    }
LABEL_22:
    uint64_t v15 = 0;
    while (1)
    {
      uint64_t v16 = *(void *)(*(void *)(a1 + 24) + 8 * v15);
      int v17 = *(unsigned __int8 *)(v16 + 32);
      if (*(unsigned char *)(v16 + 32))
      {
        int v18 = (v17 << 31 >> 31) & 5;
        if ((v17 & 2) != 0) {
          v18 += 5;
        }
        if ((v17 & 4) != 0) {
          LODWORD(v19) = v18 + 5;
        }
        else {
          LODWORD(v19) = v18;
        }
        uint64_t v20 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v16 + 8);
        int v21 = *(void **)(v16 + 8);
        if (!v21) {
          goto LABEL_23;
        }
LABEL_34:
        if (*v21 == v21[1]) {
          goto LABEL_23;
        }
        uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v20, a2)+ v19);
        *(_DWORD *)(v16 + 28) = v19;
        if (v19 < 0x80) {
          goto LABEL_24;
        }
        v3 += v19
            + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
        if (++v15 >= *(int *)(a1 + 32)) {
          goto LABEL_37;
        }
      }
      else
      {
        LODWORD(v19) = 0;
        uint64_t v20 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v16 + 8);
        int v21 = *(void **)(v16 + 8);
        if (v21) {
          goto LABEL_34;
        }
LABEL_23:
        *(_DWORD *)(v16 + 28) = v19;
LABEL_24:
        v3 += v19 + 1;
        if (++v15 >= *(int *)(a1 + 32)) {
          goto LABEL_37;
        }
      }
    }
  }
LABEL_19:
  *(_DWORD *)(v4 + 40) = v7;
  int v12 = *(_DWORD *)(a1 + 32);
  int v3 = v12 + v7 + 2;
  if (v12 >= 1) {
    goto LABEL_22;
  }
LABEL_37:
  int v22 = *(_DWORD *)(a1 + 56);
  int v23 = v22 + v3;
  if (v22 >= 1)
  {
    uint64_t v24 = 0;
    while (1)
    {
      uint64_t v25 = *(void *)(*(void *)(a1 + 48) + 8 * v24);
      int v26 = *(unsigned __int8 *)(v25 + 32);
      if (*(unsigned char *)(v25 + 32))
      {
        int v27 = (v26 << 31 >> 31) & 5;
        if ((v26 & 2) != 0) {
          v27 += 5;
        }
        if ((v26 & 4) != 0) {
          LODWORD(v28) = v27 + 5;
        }
        else {
          LODWORD(v28) = v27;
        }
        int v29 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v25 + 8);
        uint64_t v30 = *(void **)(v25 + 8);
        if (!v30) {
          goto LABEL_39;
        }
LABEL_50:
        if (*v30 == v30[1]) {
          goto LABEL_39;
        }
        int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v29, a2)+ v28);
        *(_DWORD *)(v25 + 28) = v28;
        if (v28 < 0x80) {
          goto LABEL_40;
        }
        v23 += v28
             + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28, a2);
        if (++v24 >= *(int *)(a1 + 56)) {
          break;
        }
      }
      else
      {
        LODWORD(v28) = 0;
        int v29 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v25 + 8);
        uint64_t v30 = *(void **)(v25 + 8);
        if (v30) {
          goto LABEL_50;
        }
LABEL_39:
        *(_DWORD *)(v25 + 28) = v28;
LABEL_40:
        v23 += v28 + 1;
        if (++v24 >= *(int *)(a1 + 56)) {
          break;
        }
      }
    }
  }
  int v31 = *(_DWORD *)(a1 + 80);
  int v32 = v31 + v23;
  if (v31 >= 1)
  {
    uint64_t v33 = 0;
    while (1)
    {
      uint64_t v34 = *(void *)(*(void *)(a1 + 72) + 8 * v33);
      int v35 = *(unsigned __int8 *)(v34 + 32);
      if (*(unsigned char *)(v34 + 32))
      {
        int v36 = (v35 << 31 >> 31) & 5;
        if ((v35 & 2) != 0) {
          v36 += 5;
        }
        if ((v35 & 4) != 0) {
          LODWORD(v37) = v36 + 5;
        }
        else {
          LODWORD(v37) = v36;
        }
        int v38 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v34 + 8);
        int v39 = *(void **)(v34 + 8);
        if (!v39) {
          goto LABEL_55;
        }
LABEL_66:
        if (*v39 == v39[1]) {
          goto LABEL_55;
        }
        int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v38, a2)+ v37);
        *(_DWORD *)(v34 + 28) = v37;
        if (v37 < 0x80) {
          goto LABEL_56;
        }
        v32 += v37
             + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37, a2);
        if (++v33 >= *(int *)(a1 + 80)) {
          break;
        }
      }
      else
      {
        LODWORD(v37) = 0;
        int v38 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v34 + 8);
        int v39 = *(void **)(v34 + 8);
        if (v39) {
          goto LABEL_66;
        }
LABEL_55:
        *(_DWORD *)(v34 + 28) = v37;
LABEL_56:
        v32 += v37 + 1;
        if (++v33 >= *(int *)(a1 + 80)) {
          break;
        }
      }
    }
  }
  int v40 = *(_DWORD *)(a1 + 104);
  int v41 = v40 + v32;
  if (v40 >= 1)
  {
    uint64_t v42 = 0;
    while (1)
    {
      uint64_t v43 = *(void *)(*(void *)(a1 + 96) + 8 * v42);
      int v44 = *(unsigned __int8 *)(v43 + 32);
      if (*(unsigned char *)(v43 + 32))
      {
        int v45 = (v44 << 31 >> 31) & 5;
        if ((v44 & 2) != 0) {
          v45 += 5;
        }
        if ((v44 & 4) != 0) {
          LODWORD(v46) = v45 + 5;
        }
        else {
          LODWORD(v46) = v45;
        }
        int v47 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v43 + 8);
        int v48 = *(void **)(v43 + 8);
        if (!v48) {
          goto LABEL_71;
        }
LABEL_82:
        if (*v48 == v48[1]) {
          goto LABEL_71;
        }
        int v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v47, a2)+ v46);
        *(_DWORD *)(v43 + 28) = v46;
        if (v46 < 0x80) {
          goto LABEL_72;
        }
        v41 += v46
             + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v46, a2);
        if (++v42 >= *(int *)(a1 + 104)) {
          break;
        }
      }
      else
      {
        LODWORD(v46) = 0;
        int v47 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v43 + 8);
        int v48 = *(void **)(v43 + 8);
        if (v48) {
          goto LABEL_82;
        }
LABEL_71:
        *(_DWORD *)(v43 + 28) = v46;
LABEL_72:
        v41 += v46 + 1;
        if (++v42 >= *(int *)(a1 + 104)) {
          break;
        }
      }
    }
  }
  int v49 = *(_DWORD *)(a1 + 128);
  uint64_t v50 = (v49 + v41);
  if (v49 >= 1)
  {
    uint64_t v51 = 0;
    while (1)
    {
      uint64_t v52 = *(void *)(*(void *)(a1 + 120) + 8 * v51);
      int v53 = *(unsigned __int8 *)(v52 + 32);
      if (*(unsigned char *)(v52 + 32))
      {
        int v54 = (v53 << 31 >> 31) & 5;
        if ((v53 & 2) != 0) {
          v54 += 5;
        }
        if ((v53 & 4) != 0) {
          LODWORD(v55) = v54 + 5;
        }
        else {
          LODWORD(v55) = v54;
        }
        int v56 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v52 + 8);
        int v57 = *(void **)(v52 + 8);
        if (!v57) {
          goto LABEL_87;
        }
LABEL_98:
        if (*v57 == v57[1]) {
          goto LABEL_87;
        }
        uint64_t v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v56, a2)+ v55);
        *(_DWORD *)(v52 + 28) = v55;
        if (v55 < 0x80) {
          goto LABEL_88;
        }
        uint64_t v50 = v55
            + v50
            + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55, a2);
        if (++v51 >= *(int *)(a1 + 128)) {
          break;
        }
      }
      else
      {
        LODWORD(v55) = 0;
        int v56 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v52 + 8);
        int v57 = *(void **)(v52 + 8);
        if (v57) {
          goto LABEL_98;
        }
LABEL_87:
        *(_DWORD *)(v52 + 28) = v55;
LABEL_88:
        uint64_t v50 = (v55 + v50 + 1);
        if (++v51 >= *(int *)(a1 + 128)) {
          break;
        }
      }
    }
  }
  int v58 = *(void **)(a1 + 8);
  if (v58 && *v58 != v58[1]) {
    uint64_t v50 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v50;
  }
  *(_DWORD *)(a1 + 144) = v50;
  return v50;
}

uint64_t sub_1001076CC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100101408((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001077AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001077C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001077D4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100107860()
{
  return 1;
}

uint64_t sub_100107868()
{
  uint64_t v0 = qword_10047D7B8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000FC71C;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D730;
}

void sub_1001078F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_10010790C(void *a1)
{
  *a1 = off_100455F88;
  if ((void *)qword_10047E9D0 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001079A0(void *a1)
{
  *a1 = off_100455F88;
  if ((void *)qword_10047E9D0 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100107A48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_100107A50()
{
}

void sub_100107AB8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100107AE0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 < *((void *)this + 2) && (*v7 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        unsigned int v50 = 0;
        int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50))return 0; {
        }
          }
        else
        {
          unsigned int v50 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v50);
        if (!sub_10010228C(v10, this, v25, v26) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
        int v27 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v27, 1);
        int v29 = v27 - 1;
        if (v29 < 0 == v28) {
          *((_DWORD *)this + 14) = v29;
        }
        uint64_t v30 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v30 >= v12 || *v30 != 16) {
          continue;
        }
        int v13 = v30 + 1;
        *((void *)this + 1) = v13;
        unsigned int v50 = 0;
        if ((unint64_t)v13 >= v12) {
          goto LABEL_51;
        }
        goto LABEL_49;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        unsigned int v50 = 0;
        if ((unint64_t)v13 >= v12) {
          goto LABEL_51;
        }
LABEL_49:
        if (*v13 < 0)
        {
LABEL_51:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!result) {
            return result;
          }
          unsigned int v31 = v50;
          int v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v31 = *v13;
          int v32 = v13 + 1;
          *((void *)this + 1) = v32;
        }
        *(unsigned char *)(a1 + 24) = v31 != 0;
        *(_DWORD *)(a1 + 40) |= 2u;
        if ((unint64_t)v32 >= v12 || *v32 != 24) {
          continue;
        }
        int v14 = v32 + 1;
        *((void *)this + 1) = v14;
        unsigned int v50 = 0;
        if ((unint64_t)v14 >= v12) {
          goto LABEL_58;
        }
LABEL_56:
        if (*v14 < 0)
        {
LABEL_58:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!result) {
            return result;
          }
          unsigned int v34 = v50;
          int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v34 = *v14;
          int v35 = v14 + 1;
          *((void *)this + 1) = v35;
        }
        *(unsigned char *)(a1 + 25) = v34 != 0;
        *(_DWORD *)(a1 + 40) |= 4u;
        if ((unint64_t)v35 >= v12 || *v35 != 32) {
          continue;
        }
        uint64_t v15 = v35 + 1;
        *((void *)this + 1) = v15;
        unsigned int v50 = 0;
        if ((unint64_t)v15 >= v12) {
          goto LABEL_65;
        }
LABEL_63:
        if (*v15 < 0)
        {
LABEL_65:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!result) {
            return result;
          }
          unsigned int v36 = v50;
          int v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v36 = *v15;
          int v37 = v15 + 1;
          *((void *)this + 1) = v37;
        }
        *(unsigned char *)(a1 + 26) = v36 != 0;
        *(_DWORD *)(a1 + 40) |= 8u;
        if ((unint64_t)v37 >= v12 || *v37 != 40) {
          continue;
        }
        uint64_t v16 = v37 + 1;
        *((void *)this + 1) = v16;
        unsigned int v50 = 0;
        if ((unint64_t)v16 >= v12) {
          goto LABEL_72;
        }
LABEL_70:
        if (*v16 < 0)
        {
LABEL_72:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!result) {
            return result;
          }
          unsigned int v38 = v50;
          int v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v38 = *v16;
          int v39 = v16 + 1;
          *((void *)this + 1) = v39;
        }
        *(unsigned char *)(a1 + 27) = v38 != 0;
        *(_DWORD *)(a1 + 40) |= 0x10u;
        if ((unint64_t)v39 >= v12 || *v39 != 48) {
          continue;
        }
        int v17 = v39 + 1;
        *((void *)this + 1) = v17;
LABEL_77:
        unsigned int v50 = 0;
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!result) {
            return result;
          }
          unsigned int v40 = v50;
          int v41 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v40 = *v17;
          int v41 = v17 + 1;
          *((void *)this + 1) = v41;
        }
        *(unsigned char *)(a1 + 28) = v40 != 0;
        *(_DWORD *)(a1 + 40) |= 0x20u;
        if ((unint64_t)v41 >= v12 || *v41 != 56) {
          continue;
        }
        int v18 = v41 + 1;
        *((void *)this + 1) = v18;
LABEL_85:
        unsigned int v50 = 0;
        if ((unint64_t)v18 >= v12 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!result) {
            return result;
          }
          unsigned int v42 = v50;
          uint64_t v43 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v42 = *v18;
          uint64_t v43 = v18 + 1;
          *((void *)this + 1) = v43;
        }
        *(unsigned char *)(a1 + 29) = v42 != 0;
        *(_DWORD *)(a1 + 40) |= 0x40u;
        if ((unint64_t)v43 >= v12 || *v43 != 64) {
          continue;
        }
        uint64_t v19 = v43 + 1;
        *((void *)this + 1) = v19;
LABEL_93:
        unsigned int v50 = 0;
        if ((unint64_t)v19 >= v12 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!result) {
            return result;
          }
          unsigned int v44 = v50;
          int v45 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v44 = *v19;
          int v45 = v19 + 1;
          *((void *)this + 1) = v45;
        }
        *(unsigned char *)(a1 + 30) = v44 != 0;
        *(_DWORD *)(a1 + 40) |= 0x80u;
        if ((unint64_t)v45 >= v12 || *v45 != 72) {
          continue;
        }
        uint64_t v20 = v45 + 1;
        *((void *)this + 1) = v20;
LABEL_101:
        unsigned int v50 = 0;
        if ((unint64_t)v20 >= v12 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!result) {
            return result;
          }
          unsigned int v46 = v50;
          int v47 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v46 = *v20;
          int v47 = v20 + 1;
          *((void *)this + 1) = v47;
        }
        *(unsigned char *)(a1 + 31) = v46 != 0;
        *(_DWORD *)(a1 + 40) |= 0x100u;
        if ((unint64_t)v47 >= v12 || *v47 != 80) {
          continue;
        }
        int v21 = v47 + 1;
        *((void *)this + 1) = v21;
LABEL_109:
        unsigned int v50 = 0;
        if ((unint64_t)v21 >= v12 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!result) {
            return result;
          }
          unsigned int v48 = v50;
          int v49 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
        }
        else
        {
          unsigned int v48 = *v21;
          int v49 = (unsigned __int8 *)(v21 + 1);
          *((void *)this + 1) = v49;
        }
        *(unsigned char *)(a1 + 32) = v48 != 0;
        *(_DWORD *)(a1 + 40) |= 0x200u;
        if (v49 != (unsigned __int8 *)v12 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        unsigned int v50 = 0;
        if ((unint64_t)v14 >= v12) {
          goto LABEL_58;
        }
        goto LABEL_56;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        unsigned int v50 = 0;
        if ((unint64_t)v15 >= v12) {
          goto LABEL_65;
        }
        goto LABEL_63;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        unsigned int v50 = 0;
        if ((unint64_t)v16 >= v12) {
          goto LABEL_72;
        }
        goto LABEL_70;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_77;
      case 7u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_85;
      case 8u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_93;
      case 9u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        uint64_t v20 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_101;
      case 0xAu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_109;
      default:
        int v9 = TagFallback & 7;
LABEL_36:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        break;
        }
    }
  }
}

void sub_1001081E4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100108234(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 40);
      if ((v6 & 2) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047E9D0 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 40);
      if ((v6 & 2) != 0) {
        goto LABEL_17;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_18;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 24), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 25), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 26), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 27), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 28), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 29), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 30), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 31), (BOOL)a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 0x200) == 0)
  {
LABEL_11:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 32), (BOOL)a2, a4);
  int v11 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v11;
  if (!v11) {
    return result;
  }
LABEL_26:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001083D8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 10);
  if (v4)
  {
    uint64_t v8 = *((void *)this + 2);
    if (v8)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v9 = a2 + 1;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v8 + 40);
      if (v10 <= 0x7F) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v8 = *(void *)(qword_10047E9D0 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v9 = a2 + 1;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v8 + 40);
      if (v10 <= 0x7F)
      {
LABEL_15:
        *((unsigned char *)a2 + 1) = (_BYTE)v10;
        a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100102550(v8, (uint64_t)a2 + 2, a3);
        int v4 = *((_DWORD *)this + 10);
        if ((v4 & 2) != 0) {
          goto LABEL_19;
        }
LABEL_3:
        if ((v4 & 4) == 0) {
          goto LABEL_4;
        }
        goto LABEL_20;
      }
    }
    uint64_t v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, v9, a3);
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100102550(v8, v11, v12);
    int v4 = *((_DWORD *)this + 10);
    if ((v4 & 2) != 0) {
      goto LABEL_19;
    }
    goto LABEL_3;
  }
  if ((v4 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_19:
  char v13 = *((unsigned char *)this + 24);
  *(unsigned char *)a2 = 16;
  *((unsigned char *)a2 + 1) = v13;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  int v4 = *((_DWORD *)this + 10);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  char v14 = *((unsigned char *)this + 25);
  *(unsigned char *)a2 = 24;
  *((unsigned char *)a2 + 1) = v14;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  int v4 = *((_DWORD *)this + 10);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  char v15 = *((unsigned char *)this + 26);
  *(unsigned char *)a2 = 32;
  *((unsigned char *)a2 + 1) = v15;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  int v4 = *((_DWORD *)this + 10);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  char v16 = *((unsigned char *)this + 27);
  *(unsigned char *)a2 = 40;
  *((unsigned char *)a2 + 1) = v16;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  int v4 = *((_DWORD *)this + 10);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  char v17 = *((unsigned char *)this + 28);
  *(unsigned char *)a2 = 48;
  *((unsigned char *)a2 + 1) = v17;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  int v4 = *((_DWORD *)this + 10);
  if ((v4 & 0x40) == 0)
  {
LABEL_8:
    if ((v4 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  char v18 = *((unsigned char *)this + 29);
  *(unsigned char *)a2 = 56;
  *((unsigned char *)a2 + 1) = v18;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  int v4 = *((_DWORD *)this + 10);
  if ((v4 & 0x80) == 0)
  {
LABEL_9:
    if ((v4 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  char v19 = *((unsigned char *)this + 30);
  *(unsigned char *)a2 = 64;
  *((unsigned char *)a2 + 1) = v19;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  int v4 = *((_DWORD *)this + 10);
  if ((v4 & 0x100) == 0)
  {
LABEL_10:
    if ((v4 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  char v20 = *((unsigned char *)this + 31);
  *(unsigned char *)a2 = 72;
  *((unsigned char *)a2 + 1) = v20;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  if ((*((_DWORD *)this + 10) & 0x200) == 0)
  {
LABEL_11:
    int v7 = (void *)*((void *)this + 1);
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = v7;
    if (!v7) {
      return a2;
    }
    goto LABEL_28;
  }
LABEL_27:
  char v21 = *((unsigned char *)this + 32);
  *(unsigned char *)a2 = 80;
  *((unsigned char *)a2 + 1) = v21;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  int v22 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v22;
  if (!v22) {
    return a2;
  }
LABEL_28:
  if (*v5 == v5[1]) {
    return a2;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, a2, a3);
}

uint64_t sub_1001085E0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    unsigned int v4 = 0;
    goto LABEL_36;
  }
  if (v3)
  {
    uint64_t v5 = *(void *)(a1 + 16);
    if (v5)
    {
      int v6 = *(unsigned __int8 *)(v5 + 44);
      if (*(unsigned char *)(v5 + 44)) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v5 = *(void *)(qword_10047E9D0 + 16);
      int v6 = *(unsigned __int8 *)(v5 + 44);
      if (*(unsigned char *)(v5 + 44))
      {
LABEL_7:
        int v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0) {
          v7 += 9;
        }
        if ((v6 & 4) != 0) {
          LODWORD(v8) = v7 + 9;
        }
        else {
          LODWORD(v8) = v7;
        }
        unsigned int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
        uint64_t v10 = *(void **)(v5 + 8);
        if (!v10) {
          goto LABEL_19;
        }
LABEL_16:
        if (*v10 != v10[1])
        {
          uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v9, a2)+ v8);
          *(_DWORD *)(v5 + 40) = v8;
          if (v8 >= 0x80) {
            int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
          }
          else {
            int v11 = 1;
          }
          goto LABEL_21;
        }
LABEL_19:
        *(_DWORD *)(v5 + 40) = v8;
        int v11 = 1;
LABEL_21:
        unsigned int v4 = v8 + v11 + 1;
        int v3 = *(_DWORD *)(a1 + 40);
        goto LABEL_22;
      }
    }
    LODWORD(v8) = 0;
    unsigned int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v10 = *(void **)(v5 + 8);
    if (!v10) {
      goto LABEL_19;
    }
    goto LABEL_16;
  }
  unsigned int v4 = 0;
LABEL_22:
  if ((v3 & 2) != 0) {
    v4 += 2;
  }
  if ((v3 & 4) != 0) {
    v4 += 2;
  }
  if ((v3 & 8) != 0) {
    v4 += 2;
  }
  if ((v3 & 0x10) != 0) {
    v4 += 2;
  }
  if ((v3 & 0x20) != 0) {
    v4 += 2;
  }
  if ((v3 & 0x40) != 0) {
    v4 += 2;
  }
  if ((v3 & 0x80) != 0) {
    v4 += 2;
  }
LABEL_36:
  unsigned int v12 = v4 + 2;
  if ((v3 & 0x100) == 0) {
    unsigned int v12 = v4;
  }
  if ((v3 & 0x200) != 0) {
    v12 += 2;
  }
  if ((v3 & 0xFF00) != 0) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = v4;
  }
  char v14 = *(void **)(a1 + 8);
  if (v14 && *v14 != v14[1]) {
    uint64_t v13 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v13;
  }
  *(_DWORD *)(a1 + 36) = v13;
  return v13;
}

uint64_t sub_100108774(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001015A4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100108854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100108868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010887C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100108908()
{
  return 1;
}

uint64_t sub_100108910()
{
  uint64_t v0 = qword_10047D7B8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000FC71C;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D750;
}

void sub_1001089A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1001089B4(void *a1)
{
  *a1 = off_100456038;
  if ((void *)qword_10047E9D8 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100108A48(void *a1)
{
  *a1 = off_100456038;
  if ((void *)qword_10047E9D8 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100108AF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 28) = a2;
  return result;
}

void sub_100108AF8()
{
}

void sub_100108B5C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100108B84(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 != 2)
      {
        int v9 = TagFallback & 7;
        goto LABEL_19;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0)
      {
LABEL_19:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
      }
        }
      else
      {
        int v11 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        unsigned int v26 = 0;
        if ((unint64_t)v11 < v10) {
          goto LABEL_31;
        }
LABEL_35:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
        if (!result) {
          return result;
        }
        unsigned int v24 = v26;
        if (v26 > 0x1B) {
          goto LABEL_37;
        }
LABEL_33:
        *(_DWORD *)(a1 + 32) |= 2u;
        *(_DWORD *)(a1 + 24) = v24;
        if (*((void *)this + 1) == *((void *)this + 2))
        {
LABEL_38:
          if (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
        }
      }
    }
    int v9 = TagFallback & 7;
    if (v9 != 2) {
      goto LABEL_19;
    }
    *(_DWORD *)(a1 + 32) |= 1u;
    uint64_t v12 = *(void *)(a1 + 16);
    if (!v12) {
      operator new();
    }
    unsigned int v27 = 0;
    uint64_t v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27)) {
        return 0;
      }
    }
    else
    {
      unsigned int v27 = *v13;
      *((void *)this + 1) = v13 + 1;
    }
    int v14 = *((_DWORD *)this + 14);
    int v15 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0;
    }
    int v16 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
    if (!sub_10010228C(v12, this, v17, v18) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v16);
    int v19 = *((_DWORD *)this + 14);
    BOOL v20 = __OFSUB__(v19, 1);
    int v21 = v19 - 1;
    if (v21 < 0 == v20) {
      *((_DWORD *)this + 14) = v21;
    }
    int v23 = (unsigned char *)*((void *)this + 1);
    unint64_t v22 = *((void *)this + 2);
    if ((unint64_t)v23 < v22 && *v23 == 16)
    {
      int v11 = v23 + 1;
      *((void *)this + 1) = v11;
      unsigned int v26 = 0;
      if ((unint64_t)v11 >= v22) {
        goto LABEL_35;
      }
LABEL_31:
      if ((char)*v11 < 0) {
        goto LABEL_35;
      }
      unsigned int v24 = *v11;
      *((void *)this + 1) = v11 + 1;
      if (v24 <= 0x1B) {
        goto LABEL_33;
      }
LABEL_37:
      wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 2, (int)v24);
      if (*((void *)this + 1) == *((void *)this + 2)) {
        goto LABEL_38;
      }
    }
  }
}

void sub_100108E4C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100108E74(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      if ((*(_DWORD *)(v5 + 32) & 2) != 0) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047E9D8 + 16), a2, a4);
      if ((*(_DWORD *)(v5 + 32) & 2) != 0) {
        goto LABEL_9;
      }
    }
LABEL_3:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_10;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), (int)a2, a4);
  int v11 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v11;
  if (!v11) {
    return result;
  }
LABEL_10:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100108F38(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  int v5 = *((_DWORD *)this + 8);
  if (v5)
  {
    uint64_t v9 = *((void *)this + 2);
    if (v9)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v10 = a2 + 1;
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v9 + 40);
      if (v11 <= 0x7F) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v9 = *(void *)(qword_10047E9D8 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v10 = a2 + 1;
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v9 + 40);
      if (v11 <= 0x7F)
      {
LABEL_7:
        *((unsigned char *)v3 + 1) = (_BYTE)v11;
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100102550(v9, (uint64_t)v3 + 2, a3);
        if ((*((_DWORD *)this + 8) & 2) != 0) {
          goto LABEL_11;
        }
LABEL_3:
        uint64_t v8 = (void *)*((void *)this + 1);
        int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
        int v6 = v8;
        if (!v8) {
          return v3;
        }
        goto LABEL_18;
      }
    }
    uint64_t v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v10, a3);
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100102550(v9, v12, v13);
    if ((*((_DWORD *)this + 8) & 2) != 0) {
      goto LABEL_11;
    }
    goto LABEL_3;
  }
  if ((v5 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_11:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 6);
  *(unsigned char *)char v3 = 16;
  unint64_t v15 = (unint64_t)v3 + 1;
  if ((v14 & 0x80000000) != 0)
  {
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v14, v15, a3);
    uint64_t v17 = (void *)*((void *)this + 1);
    int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v6 = v17;
    if (!v17) {
      return v3;
    }
  }
  else if (v14 > 0x7F)
  {
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, v15, a3);
    char v18 = (void *)*((void *)this + 1);
    int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v6 = v18;
    if (!v18) {
      return v3;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v14;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    int v16 = (void *)*((void *)this + 1);
    int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v6 = v16;
    if (!v16) {
      return v3;
    }
  }
LABEL_18:
  if (*v6 == v6[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v7, v3, a3);
}

uint64_t sub_10010907C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (!*(unsigned char *)(a1 + 32))
  {
    uint64_t v3 = 0;
    goto LABEL_30;
  }
  if ((*(unsigned char *)(a1 + 32) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
      goto LABEL_30;
    }
LABEL_24:
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if ((v11 & 0x80000000) != 0)
    {
      int v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2)
          + 1;
    }
    else
    {
      int v12 = 2;
    }
    uint64_t v3 = (v12 + v3);
    goto LABEL_30;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    int v5 = *(unsigned __int8 *)(v4 + 44);
    if (*(unsigned char *)(v4 + 44)) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(qword_10047E9D8 + 16);
    int v5 = *(unsigned __int8 *)(v4 + 44);
    if (*(unsigned char *)(v4 + 44))
    {
LABEL_8:
      int v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0) {
        v6 += 9;
      }
      if ((v5 & 4) != 0) {
        int v7 = v6 + 9;
      }
      else {
        int v7 = v6;
      }
      uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      uint64_t v9 = *(void **)(v4 + 8);
      if (!v9)
      {
LABEL_21:
        *(_DWORD *)(v4 + 40) = v7;
        uint64_t v3 = (v7 + 2);
        if ((*(_DWORD *)(a1 + 32) & 2) == 0) {
          goto LABEL_30;
        }
        goto LABEL_24;
      }
      goto LABEL_17;
    }
  }
  int v7 = 0;
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  uint64_t v9 = *(void **)(v4 + 8);
  if (!v9) {
    goto LABEL_21;
  }
LABEL_17:
  if (*v9 == v9[1]) {
    goto LABEL_21;
  }
  unsigned int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v8, a2)+ v7);
  *(_DWORD *)(v4 + 40) = v10;
  if (v10 < 0x80)
  {
    uint64_t v3 = (v10 + 2);
    if ((*(_DWORD *)(a1 + 32) & 2) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
  uint64_t v3 = v10
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2)+ 1;
  if ((*(_DWORD *)(a1 + 32) & 2) != 0) {
    goto LABEL_24;
  }
LABEL_30:
  uint64_t v13 = *(void **)(a1 + 8);
  if (v13 && *v13 != v13[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 28) = v3;
  return v3;
}

uint64_t sub_1001091EC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10010183C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001092CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001092E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001092F4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100109380()
{
  return 1;
}

uint64_t sub_100109388()
{
  uint64_t v0 = qword_10047D7B8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000FC71C;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D760;
}

void sub_100109418(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_10010942C(void *a1)
{
  *a1 = off_1004560E8;
  if ((void *)qword_10047E9E0 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001094C0(void *a1)
{
  *a1 = off_1004560E8;
  if ((void *)qword_10047E9E0 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100109568(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_100109570()
{
}

void sub_1001095D4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001095FC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v9 = TagFallback & 7;
        if (v9 == 1)
        {
          unint64_t v22 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v22) & 1) == 0) {
            return 0;
          }
          goto LABEL_31;
        }
      }
      else
      {
        int v9 = TagFallback & 7;
      }
LABEL_19:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v9 = TagFallback & 7;
    if (v9 != 2) {
      goto LABEL_19;
    }
    *(_DWORD *)(a1 + 36) |= 1u;
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      operator new();
    }
    unsigned int v23 = 0;
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23)) {
        return 0;
      }
    }
    else
    {
      unsigned int v23 = *v11;
      *((void *)this + 1) = v11 + 1;
    }
    int v12 = *((_DWORD *)this + 14);
    int v13 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v12 + 1;
    if (v12 >= v13) {
      return 0;
    }
    int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    if (!sub_10010228C(v10, this, v15, v16) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
    int v17 = *((_DWORD *)this + 14);
    BOOL v18 = __OFSUB__(v17, 1);
    int v19 = v17 - 1;
    if (v19 < 0 == v18) {
      *((_DWORD *)this + 14) = v19;
    }
    BOOL v20 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v20 < *((void *)this + 2) && *v20 == 17)
    {
      *((void *)this + 1) = v20 + 1;
      unint64_t v22 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v22) & 1) == 0) {
        return 0;
      }
LABEL_31:
      *(void *)(a1 + 24) = v22;
      *(_DWORD *)(a1 + 36) |= 2u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
  }
}

void sub_100109880()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001098A8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      if ((*(_DWORD *)(v5 + 36) & 2) != 0) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047E9E0 + 16), a2, a4);
      if ((*(_DWORD *)(v5 + 36) & 2) != 0) {
        goto LABEL_9;
      }
    }
LABEL_3:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_10;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v11 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v11;
  if (!v11) {
    return result;
  }
LABEL_10:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

unsigned char *sub_10010996C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 9);
  if (v4)
  {
    uint64_t v8 = *((void *)this + 2);
    if (v8)
    {
      *a2 = 10;
      unsigned int v9 = a2 + 1;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v8 + 40);
      if (v10 <= 0x7F) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v8 = *(void *)(qword_10047E9E0 + 16);
      *a2 = 10;
      unsigned int v9 = a2 + 1;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v8 + 40);
      if (v10 <= 0x7F)
      {
LABEL_7:
        a2[1] = (_BYTE)v10;
        a2 = (unsigned char *)sub_100102550(v8, (uint64_t)(a2 + 2), a3);
        if ((*((_DWORD *)this + 9) & 2) != 0) {
          goto LABEL_11;
        }
LABEL_3:
        int v7 = (void *)*((void *)this + 1);
        int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
        uint64_t v5 = v7;
        if (!v7) {
          return a2;
        }
        goto LABEL_12;
      }
    }
    uint64_t v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, v9, a3);
    a2 = (unsigned char *)sub_100102550(v8, v11, v12);
    if ((*((_DWORD *)this + 9) & 2) != 0) {
      goto LABEL_11;
    }
    goto LABEL_3;
  }
  if ((v4 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_11:
  uint64_t v13 = *((void *)this + 3);
  *a2 = 17;
  *(void *)(a2 + 1) = v13;
  a2 += 9;
  int v14 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v14;
  if (!v14) {
    return a2;
  }
LABEL_12:
  if (*v5 == v5[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100109AAC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if ((*(unsigned char *)(a1 + 36) & 1) == 0)
    {
      unsigned int v4 = 0;
      goto LABEL_23;
    }
    uint64_t v9 = *(void *)(a1 + 16);
    if (v9)
    {
      int v10 = *(unsigned __int8 *)(v9 + 44);
      if (*(unsigned char *)(v9 + 44)) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v9 = *(void *)(qword_10047E9E0 + 16);
      int v10 = *(unsigned __int8 *)(v9 + 44);
      if (*(unsigned char *)(v9 + 44))
      {
LABEL_8:
        int v11 = (v10 << 31 >> 31) & 9;
        if ((v10 & 2) != 0) {
          v11 += 9;
        }
        if ((v10 & 4) != 0) {
          LODWORD(v12) = v11 + 9;
        }
        else {
          LODWORD(v12) = v11;
        }
        uint64_t v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8);
        int v14 = *(void **)(v9 + 8);
        if (!v14) {
          goto LABEL_20;
        }
LABEL_17:
        if (*v14 != v14[1])
        {
          int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v13, a2)+ v12);
          *(_DWORD *)(v9 + 40) = v12;
          if (v12 >= 0x80) {
            int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
          }
          else {
            int v15 = 1;
          }
          goto LABEL_22;
        }
LABEL_20:
        *(_DWORD *)(v9 + 40) = v12;
        int v15 = 1;
LABEL_22:
        unsigned int v4 = v12 + v15 + 1;
        int v3 = *(_DWORD *)(a1 + 36);
LABEL_23:
        if ((v3 & 2) != 0) {
          uint64_t v5 = v4 + 9;
        }
        else {
          uint64_t v5 = v4;
        }
        int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        int v7 = *(void **)(a1 + 8);
        if (!v7) {
          goto LABEL_5;
        }
        goto LABEL_27;
      }
    }
    LODWORD(v12) = 0;
    uint64_t v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8);
    int v14 = *(void **)(v9 + 8);
    if (!v14) {
      goto LABEL_20;
    }
    goto LABEL_17;
  }
  uint64_t v5 = 0;
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = *(void **)(a1 + 8);
  if (!v7)
  {
LABEL_5:
    *(_DWORD *)(a1 + 32) = v5;
    return v5;
  }
LABEL_27:
  if (*v7 == v7[1]) {
    goto LABEL_5;
  }
  uint64_t v16 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 32) = v16;
  return v16;
}

uint64_t sub_100109BF4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001019C8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100109CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100109CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100109CFC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100109D88()
{
  return 1;
}

uint64_t sub_100109D90()
{
  uint64_t v0 = qword_10047D7B8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000FC71C;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D778;
}

void sub_100109E20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_100109E34(void *a1)
{
  *a1 = off_100456198;
  if ((void *)qword_10047E9E8 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100109EC8(void *a1)
{
  *a1 = off_100456198;
  if ((void *)qword_10047E9E8 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100109F70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_100109F78()
{
}

void sub_100109FDC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10010A004(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v9 = TagFallback & 7;
        if (v9 == 1)
        {
          unint64_t v22 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v22) & 1) == 0) {
            return 0;
          }
          goto LABEL_31;
        }
      }
      else
      {
        int v9 = TagFallback & 7;
      }
LABEL_19:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v9 = TagFallback & 7;
    if (v9 != 2) {
      goto LABEL_19;
    }
    *(_DWORD *)(a1 + 36) |= 1u;
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      operator new();
    }
    unsigned int v23 = 0;
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23)) {
        return 0;
      }
    }
    else
    {
      unsigned int v23 = *v11;
      *((void *)this + 1) = v11 + 1;
    }
    int v12 = *((_DWORD *)this + 14);
    int v13 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v12 + 1;
    if (v12 >= v13) {
      return 0;
    }
    int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    if (!sub_10010228C(v10, this, v15, v16) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
    int v17 = *((_DWORD *)this + 14);
    BOOL v18 = __OFSUB__(v17, 1);
    int v19 = v17 - 1;
    if (v19 < 0 == v18) {
      *((_DWORD *)this + 14) = v19;
    }
    BOOL v20 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v20 < *((void *)this + 2) && *v20 == 17)
    {
      *((void *)this + 1) = v20 + 1;
      unint64_t v22 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v22) & 1) == 0) {
        return 0;
      }
LABEL_31:
      *(void *)(a1 + 24) = v22;
      *(_DWORD *)(a1 + 36) |= 2u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
  }
}

void sub_10010A288()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10010A2B0(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      if ((*(_DWORD *)(v5 + 36) & 2) != 0) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047E9E8 + 16), a2, a4);
      if ((*(_DWORD *)(v5 + 36) & 2) != 0) {
        goto LABEL_9;
      }
    }
LABEL_3:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_10;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v11 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v11;
  if (!v11) {
    return result;
  }
LABEL_10:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

unsigned char *sub_10010A374(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 9);
  if (v4)
  {
    uint64_t v8 = *((void *)this + 2);
    if (v8)
    {
      *a2 = 10;
      unsigned int v9 = a2 + 1;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v8 + 40);
      if (v10 <= 0x7F) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v8 = *(void *)(qword_10047E9E8 + 16);
      *a2 = 10;
      unsigned int v9 = a2 + 1;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v8 + 40);
      if (v10 <= 0x7F)
      {
LABEL_7:
        a2[1] = (_BYTE)v10;
        a2 = (unsigned char *)sub_100102550(v8, (uint64_t)(a2 + 2), a3);
        if ((*((_DWORD *)this + 9) & 2) != 0) {
          goto LABEL_11;
        }
LABEL_3:
        int v7 = (void *)*((void *)this + 1);
        int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
        uint64_t v5 = v7;
        if (!v7) {
          return a2;
        }
        goto LABEL_12;
      }
    }
    uint64_t v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, v9, a3);
    a2 = (unsigned char *)sub_100102550(v8, v11, v12);
    if ((*((_DWORD *)this + 9) & 2) != 0) {
      goto LABEL_11;
    }
    goto LABEL_3;
  }
  if ((v4 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_11:
  uint64_t v13 = *((void *)this + 3);
  *a2 = 17;
  *(void *)(a2 + 1) = v13;
  a2 += 9;
  int v14 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v14;
  if (!v14) {
    return a2;
  }
LABEL_12:
  if (*v5 == v5[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10010A4B4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if ((*(unsigned char *)(a1 + 36) & 1) == 0)
    {
      unsigned int v4 = 0;
      goto LABEL_23;
    }
    uint64_t v9 = *(void *)(a1 + 16);
    if (v9)
    {
      int v10 = *(unsigned __int8 *)(v9 + 44);
      if (*(unsigned char *)(v9 + 44)) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v9 = *(void *)(qword_10047E9E8 + 16);
      int v10 = *(unsigned __int8 *)(v9 + 44);
      if (*(unsigned char *)(v9 + 44))
      {
LABEL_8:
        int v11 = (v10 << 31 >> 31) & 9;
        if ((v10 & 2) != 0) {
          v11 += 9;
        }
        if ((v10 & 4) != 0) {
          LODWORD(v12) = v11 + 9;
        }
        else {
          LODWORD(v12) = v11;
        }
        uint64_t v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8);
        int v14 = *(void **)(v9 + 8);
        if (!v14) {
          goto LABEL_20;
        }
LABEL_17:
        if (*v14 != v14[1])
        {
          int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v13, a2)+ v12);
          *(_DWORD *)(v9 + 40) = v12;
          if (v12 >= 0x80) {
            int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
          }
          else {
            int v15 = 1;
          }
          goto LABEL_22;
        }
LABEL_20:
        *(_DWORD *)(v9 + 40) = v12;
        int v15 = 1;
LABEL_22:
        unsigned int v4 = v12 + v15 + 1;
        int v3 = *(_DWORD *)(a1 + 36);
LABEL_23:
        if ((v3 & 2) != 0) {
          uint64_t v5 = v4 + 9;
        }
        else {
          uint64_t v5 = v4;
        }
        int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        int v7 = *(void **)(a1 + 8);
        if (!v7) {
          goto LABEL_5;
        }
        goto LABEL_27;
      }
    }
    LODWORD(v12) = 0;
    uint64_t v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8);
    int v14 = *(void **)(v9 + 8);
    if (!v14) {
      goto LABEL_20;
    }
    goto LABEL_17;
  }
  uint64_t v5 = 0;
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = *(void **)(a1 + 8);
  if (!v7)
  {
LABEL_5:
    *(_DWORD *)(a1 + 32) = v5;
    return v5;
  }
LABEL_27:
  if (*v7 == v7[1]) {
    goto LABEL_5;
  }
  uint64_t v16 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 32) = v16;
  return v16;
}

uint64_t sub_10010A5FC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100101B54((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10010A6DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10010A6F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010A704(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10010A790()
{
  return 1;
}

uint64_t sub_10010A798()
{
  uint64_t v0 = qword_10047D7B8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000FC71C;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D788;
}

void sub_10010A828(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_10010A83C(void *a1)
{
  *a1 = off_100456248;
  if ((void *)qword_10047E9F0 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10010A8D0(void *a1)
{
  *a1 = off_100456248;
  if ((void *)qword_10047E9F0 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10010A978(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_10010A980()
{
}

void sub_10010A9E4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10010AA0C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v9 = TagFallback & 7;
        if (v9 == 1)
        {
          unint64_t v22 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v22) & 1) == 0) {
            return 0;
          }
          goto LABEL_31;
        }
      }
      else
      {
        int v9 = TagFallback & 7;
      }
LABEL_19:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v9 = TagFallback & 7;
    if (v9 != 2) {
      goto LABEL_19;
    }
    *(_DWORD *)(a1 + 36) |= 1u;
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
      operator new();
    }
    unsigned int v23 = 0;
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23)) {
        return 0;
      }
    }
    else
    {
      unsigned int v23 = *v11;
      *((void *)this + 1) = v11 + 1;
    }
    int v12 = *((_DWORD *)this + 14);
    int v13 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v12 + 1;
    if (v12 >= v13) {
      return 0;
    }
    int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v23);
    if (!sub_10010228C(v10, this, v15, v16) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
    int v17 = *((_DWORD *)this + 14);
    BOOL v18 = __OFSUB__(v17, 1);
    int v19 = v17 - 1;
    if (v19 < 0 == v18) {
      *((_DWORD *)this + 14) = v19;
    }
    BOOL v20 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v20 < *((void *)this + 2) && *v20 == 17)
    {
      *((void *)this + 1) = v20 + 1;
      unint64_t v22 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v22) & 1) == 0) {
        return 0;
      }
LABEL_31:
      *(void *)(a1 + 24) = v22;
      *(_DWORD *)(a1 + 36) |= 2u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
  }
}

void sub_10010AC90()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10010ACB8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      if ((*(_DWORD *)(v5 + 36) & 2) != 0) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047E9F0 + 16), a2, a4);
      if ((*(_DWORD *)(v5 + 36) & 2) != 0) {
        goto LABEL_9;
      }
    }
LABEL_3:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_10;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v11 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v11;
  if (!v11) {
    return result;
  }
LABEL_10:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

unsigned char *sub_10010AD7C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 9);
  if (v4)
  {
    uint64_t v8 = *((void *)this + 2);
    if (v8)
    {
      *a2 = 10;
      unsigned int v9 = a2 + 1;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v8 + 40);
      if (v10 <= 0x7F) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v8 = *(void *)(qword_10047E9F0 + 16);
      *a2 = 10;
      unsigned int v9 = a2 + 1;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v8 + 40);
      if (v10 <= 0x7F)
      {
LABEL_7:
        a2[1] = (_BYTE)v10;
        a2 = (unsigned char *)sub_100102550(v8, (uint64_t)(a2 + 2), a3);
        if ((*((_DWORD *)this + 9) & 2) != 0) {
          goto LABEL_11;
        }
LABEL_3:
        int v7 = (void *)*((void *)this + 1);
        int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
        uint64_t v5 = v7;
        if (!v7) {
          return a2;
        }
        goto LABEL_12;
      }
    }
    uint64_t v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, v9, a3);
    a2 = (unsigned char *)sub_100102550(v8, v11, v12);
    if ((*((_DWORD *)this + 9) & 2) != 0) {
      goto LABEL_11;
    }
    goto LABEL_3;
  }
  if ((v4 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_11:
  uint64_t v13 = *((void *)this + 3);
  *a2 = 17;
  *(void *)(a2 + 1) = v13;
  a2 += 9;
  int v14 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v14;
  if (!v14) {
    return a2;
  }
LABEL_12:
  if (*v5 == v5[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10010AEBC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if ((*(unsigned char *)(a1 + 36) & 1) == 0)
    {
      unsigned int v4 = 0;
      goto LABEL_23;
    }
    uint64_t v9 = *(void *)(a1 + 16);
    if (v9)
    {
      int v10 = *(unsigned __int8 *)(v9 + 44);
      if (*(unsigned char *)(v9 + 44)) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v9 = *(void *)(qword_10047E9F0 + 16);
      int v10 = *(unsigned __int8 *)(v9 + 44);
      if (*(unsigned char *)(v9 + 44))
      {
LABEL_8:
        int v11 = (v10 << 31 >> 31) & 9;
        if ((v10 & 2) != 0) {
          v11 += 9;
        }
        if ((v10 & 4) != 0) {
          LODWORD(v12) = v11 + 9;
        }
        else {
          LODWORD(v12) = v11;
        }
        uint64_t v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8);
        int v14 = *(void **)(v9 + 8);
        if (!v14) {
          goto LABEL_20;
        }
LABEL_17:
        if (*v14 != v14[1])
        {
          int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v13, a2)+ v12);
          *(_DWORD *)(v9 + 40) = v12;
          if (v12 >= 0x80) {
            int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
          }
          else {
            int v15 = 1;
          }
          goto LABEL_22;
        }
LABEL_20:
        *(_DWORD *)(v9 + 40) = v12;
        int v15 = 1;
LABEL_22:
        unsigned int v4 = v12 + v15 + 1;
        int v3 = *(_DWORD *)(a1 + 36);
LABEL_23:
        if ((v3 & 2) != 0) {
          uint64_t v5 = v4 + 9;
        }
        else {
          uint64_t v5 = v4;
        }
        int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        int v7 = *(void **)(a1 + 8);
        if (!v7) {
          goto LABEL_5;
        }
        goto LABEL_27;
      }
    }
    LODWORD(v12) = 0;
    uint64_t v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8);
    int v14 = *(void **)(v9 + 8);
    if (!v14) {
      goto LABEL_20;
    }
    goto LABEL_17;
  }
  uint64_t v5 = 0;
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = *(void **)(a1 + 8);
  if (!v7)
  {
LABEL_5:
    *(_DWORD *)(a1 + 32) = v5;
    return v5;
  }
LABEL_27:
  if (*v7 == v7[1]) {
    goto LABEL_5;
  }
  uint64_t v16 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 32) = v16;
  return v16;
}

uint64_t sub_10010B004(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100101CE0((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10010B0E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10010B0F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010B10C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10010B198()
{
  return 1;
}

uint64_t sub_10010B1A0()
{
  uint64_t v0 = qword_10047D7B8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1000FC71C;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D798;
}

void sub_10010B230(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010B244(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_10010B24C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10010B254(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_10010B25C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_10010B264(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10010B26C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_10010B274(uint64_t a1)
{
  return *(unsigned int *)(a1 + 144);
}

uint64_t sub_10010B27C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_10010B284(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_10010B28C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10010B294(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10010B29C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10010B2A4(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_100105260(*(_DWORD **)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_10010B3C0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10010B3EC()
{
  uint64_t v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_10010B9D8();
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  std::string __p = operator new(0x20uLL);
  long long v3 = xmmword_1003E74B0;
  strcpy((char *)__p, "CLPPrivateDataShared.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  operator delete(__p);
  if (!FileByName)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  }
  qword_10047D7D0 = *(void *)(FileByName + 80);
  operator new();
}

void sub_10010B950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10010B964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10010B978(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10010B9D8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10047D7C0 & 1) == 0)
  {
    byte_10047D7C0 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/protobuf/clpsensorsurvey/Proto/CLPPrivateDataShared.pb.cc", a4);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)&unk_1003EA3BC, (const void *)0xA3C, v4);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_10010BEC4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10010BEF0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10010BFAC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10010BFD8()
{
  if (qword_10047E9F8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E9F8 + 8))(qword_10047E9F8);
  }
  if (qword_10047D7D8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D7D8 + 8))(qword_10047D7D8);
  }
  if (qword_10047EA00) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EA00 + 8))(qword_10047EA00);
  }
  if (qword_10047D7E8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D7E8 + 8))(qword_10047D7E8);
  }
  if (qword_10047EA08) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EA08 + 8))(qword_10047EA08);
  }
  if (qword_10047D7F8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D7F8 + 8))(qword_10047D7F8);
  }
  if (qword_10047EA10) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EA10 + 8))(qword_10047EA10);
  }
  if (qword_10047D808) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D808 + 8))(qword_10047D808);
  }
  if (qword_10047EA18) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EA18 + 8))(qword_10047EA18);
  }
  if (qword_10047D818) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D818 + 8))(qword_10047D818);
  }
  if (qword_10047EA20) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EA20 + 8))(qword_10047EA20);
  }
  if (qword_10047D828) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D828 + 8))(qword_10047D828);
  }
  if (qword_10047EA28) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EA28 + 8))(qword_10047EA28);
  }
  if (qword_10047D838) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D838 + 8))(qword_10047D838);
  }
  if (qword_10047EA30) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EA30 + 8))(qword_10047EA30);
  }
  if (qword_10047D848) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D848 + 8))(qword_10047D848);
  }
  if (qword_10047EA38) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EA38 + 8))(qword_10047EA38);
  }
  uint64_t result = qword_10047D858;
  if (qword_10047D858)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10047D858 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_10010C360()
{
  uint64_t v0 = qword_10047D880;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v10[1] = sub_10010B3EC;
    char v11 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v10);
  }
  if (!qword_10047E9F8) {
    ((void (*)(void))sub_10010B9D8)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EA00) {
    sub_10010B9D8(v1);
  }
  uint64_t v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EA08) {
    sub_10010B9D8(v2);
  }
  uint64_t v3 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EA10) {
    sub_10010B9D8(v3);
  }
  uint64_t v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EA18) {
    sub_10010B9D8(v4);
  }
  uint64_t v5 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EA20) {
    sub_10010B9D8(v5);
  }
  uint64_t v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EA28) {
    sub_10010B9D8(v6);
  }
  uint64_t v7 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EA30) {
    sub_10010B9D8(v7);
  }
  uint64_t v8 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EA38) {
    sub_10010B9D8(v8);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_10010C540(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010C554(uint64_t a1)
{
  *(void *)a1 = off_100456418;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_10010C5A0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10010C5B4(uint64_t a1)
{
  *(void *)a1 = off_1004564C8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 32) = 0;
  return a1;
}

void sub_10010C604(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10010C618(uint64_t a1)
{
  *(void *)a1 = off_100456578;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_10010C66C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10010C680(uint64_t a1)
{
  *(void *)a1 = off_100456628;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 32) = 0;
  return a1;
}

void sub_10010C6D0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10010C6E4(uint64_t a1)
{
  *(void *)a1 = off_1004566D8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_10010C738(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10010C74C(uint64_t a1)
{
  *(void *)a1 = off_100456788;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(_DWORD *)(a1 + 64) = 0;
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = 0;
  *(_DWORD *)(a1 + 52) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(_WORD *)(a1 + 48) = 0;
  return a1;
}

void sub_10010C7B0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10010C7C4(uint64_t a1)
{
  *(void *)a1 = off_1004568E8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_10010C818(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10010C82C(uint64_t a1)
{
  *(void *)a1 = off_100456998;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return a1;
}

void sub_10010C87C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10010C890(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((*(unsigned char *)(a2 + 44) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    uint64_t v8 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(void *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 44) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 44) |= 1u;
  *(void *)(a1 + 16) = v7;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
LABEL_7:
    uint64_t v5 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(void *)(a1 + 32) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10010C970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10010C984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10010C998(uint64_t a1)
{
  *(void *)a1 = off_100456418;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10010C9EC(uint64_t a1)
{
  *(void *)a1 = off_100456418;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10010CA54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_10010CA5C()
{
}

void sub_10010CAC0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10010CAE8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10010CB0C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_28;
        }
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 44) |= 1u;
        char v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_19;
        }
      }
      if (v9 == 2) {
        break;
      }
      if (v9 == 3)
      {
        int v10 = TagFallback & 7;
        if (v10 == 1)
        {
          unint64_t v14 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
            return 0;
          }
          goto LABEL_23;
        }
      }
      else
      {
        int v10 = TagFallback & 7;
      }
LABEL_28:
      if (v10 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v10 = TagFallback & 7;
    if (v10 != 1) {
      goto LABEL_28;
    }
LABEL_19:
    unint64_t v14 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 24) = v14;
    *(_DWORD *)(a1 + 44) |= 2u;
    int v12 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v12 < *((void *)this + 2) && *v12 == 25)
    {
      *((void *)this + 1) = v12 + 1;
      unint64_t v14 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
        return 0;
      }
LABEL_23:
      *(void *)(a1 + 32) = v14;
      *(_DWORD *)(a1 + 44) |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_10010CD18(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 44);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    int v5 = *(_DWORD *)(v4 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  if ((*(_DWORD *)(v4 + 44) & 4) == 0)
  {
LABEL_4:
    uint64_t v8 = *(void **)(v4 + 8);
    uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    unsigned int v6 = v8;
    if (!v8) {
      return result;
    }
    goto LABEL_9;
  }
LABEL_8:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
  unsigned int v9 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_9:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_10010CDD0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 44);
  if (v3)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v7;
    a2 += 9;
    int v3 = *(_DWORD *)(a1 + 44);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t v9 = *(void *)(a1 + 32);
      *(unsigned char *)a2 = 25;
      *(void *)(a2 + 1) = v9;
      a2 += 9;
      int v10 = *(void **)(a1 + 8);
      uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v5 = v10;
      if (!v10) {
        return a2;
      }
      goto LABEL_9;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(a1 + 24);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v8;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 44) & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  unsigned int v6 = *(void **)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_9:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_10010CF00(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 44);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if ((v3 & 4) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 44)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

uint64_t sub_10010CF74(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10010C890((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10010D054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10010D068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010D07C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10010D108()
{
  return 1;
}

uint64_t sub_10010D110()
{
  uint64_t v0 = qword_10047D880;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10010B3EC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D7D0;
}

void sub_10010D1A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010D1B4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
    LOBYTE(v4) = *(unsigned char *)(a2 + 40);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 40);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047EA00 + 16);
    }
    sub_10010C890(v5, v6);
    int v4 = *(_DWORD *)(a2 + 40);
  }
  if ((v4 & 2) == 0)
  {
    if ((v4 & 4) == 0) {
      goto LABEL_12;
    }
LABEL_16:
    int v10 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 40) |= 4u;
    *(_DWORD *)(a1 + 28) = v10;
    if ((*(_DWORD *)(a2 + 40) & 8) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_13;
  }
  int v9 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 40) |= 2u;
  *(_DWORD *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_12:
  if ((v4 & 8) != 0)
  {
LABEL_13:
    int v7 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 8u;
    *(_DWORD *)(a1 + 32) = v7;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10010D334()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10010D35C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10010D370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10010D384(void *a1)
{
  *a1 = off_1004564C8;
  if ((void *)qword_10047EA00 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10010D418(void *a1)
{
  *a1 = off_1004564C8;
  if ((void *)qword_10047EA00 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10010D4C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_10010D4C8()
{
}

void sub_10010D530()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10010D558(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 40))
  {
    if (*(unsigned char *)(this + 40))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(void *)(v1 + 24) = 0;
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v4 = *(void *)(v1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 8) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_10010D5E0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_22;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        unsigned int v24 = 0;
        char v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24))return 0; {
        }
          }
        else
        {
          unsigned int v24 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v12 = *((_DWORD *)this + 14);
        int v13 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v24);
        if (!sub_10010CB0C(v10, this, v15, v16) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
        int v17 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)this + 14) = v19;
        }
        BOOL v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 21) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_22;
        }
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
LABEL_34:
        *(_DWORD *)(a1 + 24) = v24;
        *(_DWORD *)(a1 + 40) |= 2u;
        int v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 29) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
LABEL_37:
        *(_DWORD *)(a1 + 28) = v24;
        *(_DWORD *)(a1 + 40) |= 4u;
        unint64_t v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 37) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_40:
        unsigned int v24 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24))
        {
          *(_DWORD *)(a1 + 32) = v24;
          *(_DWORD *)(a1 + 40) |= 8u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_22;
        }
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
        goto LABEL_37;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_22;
        }
        goto LABEL_40;
      default:
        int v9 = TagFallback & 7;
LABEL_22:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_10010D944()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10010D97C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 40);
      if ((v6 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047EA00 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 40);
      if ((v6 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 28), a3);
  if ((*(_DWORD *)(v5 + 40) & 8) == 0)
  {
LABEL_5:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 32), a3);
  char v11 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v11;
  if (!v11) {
    return result;
  }
LABEL_14:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

unsigned char *sub_10010DA78(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 10);
  if (v4)
  {
    uint64_t v8 = *((void *)this + 2);
    if (v8)
    {
      *a2 = 10;
      unsigned int v9 = a2 + 1;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v8 + 40);
      if (v10 <= 0x7F) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v8 = *(void *)(qword_10047EA00 + 16);
      *a2 = 10;
      unsigned int v9 = a2 + 1;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v8 + 40);
      if (v10 <= 0x7F)
      {
LABEL_9:
        a2[1] = (_BYTE)v10;
        a2 = (unsigned char *)sub_10010CDD0(v8, (uint64_t)(a2 + 2), a3);
        int v4 = *((_DWORD *)this + 10);
        if ((v4 & 2) != 0) {
          goto LABEL_13;
        }
LABEL_3:
        if ((v4 & 4) == 0) {
          goto LABEL_4;
        }
        goto LABEL_14;
      }
    }
    uint64_t v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, v9, a3);
    a2 = (unsigned char *)sub_10010CDD0(v8, v11, v12);
    int v4 = *((_DWORD *)this + 10);
    if ((v4 & 2) != 0) {
      goto LABEL_13;
    }
    goto LABEL_3;
  }
  if ((v4 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_13:
  int v13 = *((_DWORD *)this + 6);
  *a2 = 21;
  *(_DWORD *)(a2 + 1) = v13;
  a2 += 5;
  int v4 = *((_DWORD *)this + 10);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  int v14 = *((_DWORD *)this + 7);
  *a2 = 29;
  *(_DWORD *)(a2 + 1) = v14;
  a2 += 5;
  if ((*((_DWORD *)this + 10) & 8) == 0)
  {
LABEL_5:
    int v7 = (void *)*((void *)this + 1);
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = v7;
    if (!v7) {
      return a2;
    }
    goto LABEL_16;
  }
LABEL_15:
  int v15 = *((_DWORD *)this + 8);
  *a2 = 37;
  *(_DWORD *)(a2 + 1) = v15;
  a2 += 5;
  uint64_t v16 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v16;
  if (!v16) {
    return a2;
  }
LABEL_16:
  if (*v5 == v5[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10010DC08(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if ((_BYTE)v3)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0)
    {
      unsigned int v4 = 0;
      goto LABEL_23;
    }
    uint64_t v9 = *(void *)(a1 + 16);
    if (v9)
    {
      int v10 = *(unsigned __int8 *)(v9 + 44);
      if (*(unsigned char *)(v9 + 44)) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v9 = *(void *)(qword_10047EA00 + 16);
      int v10 = *(unsigned __int8 *)(v9 + 44);
      if (*(unsigned char *)(v9 + 44))
      {
LABEL_8:
        int v11 = (v10 << 31 >> 31) & 9;
        if ((v10 & 2) != 0) {
          v11 += 9;
        }
        if ((v10 & 4) != 0) {
          LODWORD(v12) = v11 + 9;
        }
        else {
          LODWORD(v12) = v11;
        }
        int v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8);
        int v14 = *(void **)(v9 + 8);
        if (!v14) {
          goto LABEL_20;
        }
LABEL_17:
        if (*v14 != v14[1])
        {
          int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v13, a2)+ v12);
          *(_DWORD *)(v9 + 40) = v12;
          if (v12 >= 0x80) {
            int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
          }
          else {
            int v15 = 1;
          }
          goto LABEL_22;
        }
LABEL_20:
        *(_DWORD *)(v9 + 40) = v12;
        int v15 = 1;
LABEL_22:
        unsigned int v4 = v12 + v15 + 1;
        int v3 = *(_DWORD *)(a1 + 40);
LABEL_23:
        if ((v3 & 2) != 0) {
          v4 += 5;
        }
        if ((v3 & 4) != 0) {
          v4 += 5;
        }
        if ((v3 & 8) != 0) {
          uint64_t v5 = v4 + 5;
        }
        else {
          uint64_t v5 = v4;
        }
        int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        int v7 = *(void **)(a1 + 8);
        if (!v7) {
          goto LABEL_5;
        }
        goto LABEL_31;
      }
    }
    LODWORD(v12) = 0;
    int v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8);
    int v14 = *(void **)(v9 + 8);
    if (!v14) {
      goto LABEL_20;
    }
    goto LABEL_17;
  }
  uint64_t v5 = 0;
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = *(void **)(a1 + 8);
  if (!v7)
  {
LABEL_5:
    *(_DWORD *)(a1 + 36) = v5;
    return v5;
  }
LABEL_31:
  if (*v7 == v7[1]) {
    goto LABEL_5;
  }
  uint64_t v16 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 36) = v16;
  return v16;
}

uint64_t sub_10010DD68(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10010D1B4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10010DE48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10010DE5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010DE70(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10010DEFC()
{
  return 1;
}

uint64_t sub_10010DF04()
{
  uint64_t v0 = qword_10047D880;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10010B3EC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D7E0;
}

void sub_10010DF94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010DFA8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
    sub_10011560C((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), a2 + 24);
    if ((*(unsigned char *)(a2 + 52) & 1) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    sub_10011560C((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), a2 + 24);
    if ((*(unsigned char *)(a2 + 52) & 1) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  *(_DWORD *)(a1 + 52) |= 1u;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    operator new();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_10047EA08 + 16);
  }
  sub_10010C890(v4, v5);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10010E0DC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10010E104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10010E118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10010E12C(uint64_t a1)
{
  *(void *)a1 = off_100456578;
  if (qword_10047EA08 != a1)
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  int v3 = *(_DWORD *)(a1 + 36);
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i < v3; ++i)
    {
      uint64_t v5 = *(void *)(*(void *)(a1 + 24) + 8 * i);
      if (v5)
      {
        (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
        int v3 = *(_DWORD *)(a1 + 36);
      }
    }
  }
  if (*(void *)(a1 + 24)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10010E238(uint64_t a1)
{
  sub_10010E12C(a1);

  operator delete();
}

uint64_t sub_10010E270(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

uint64_t sub_10010E278(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047EA08;
  if (!qword_10047EA08)
  {
    sub_10010B9D8(0, a2, a3, a4);
    return qword_10047EA08;
  }
  return result;
}

void sub_10010E2B4()
{
}

void sub_10010E320()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10010E348(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 52))
  {
    this = *(void *)(this + 16);
    if (this)
    {
      if (*(unsigned char *)(this + 44))
      {
        *(void *)(this + 16) = 0;
        *(void *)(this + 24) = 0;
        *(void *)(this + 32) = 0;
      }
      uint64_t v2 = *(void *)(this + 8);
      this += 8;
      *(_DWORD *)(this + 36) = 0;
      if (v2) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  if (*(int *)(v1 + 32) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(v1 + 24) + 8 * v3);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 32));
  }
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v5 + 6) = 0;
  *((_DWORD *)v5 + 11) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return this;
}

uint64_t sub_10010E414(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v8;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v8 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 2) {
        goto LABEL_19;
      }
      *(_DWORD *)(a1 + 52) |= 1u;
      uint64_t v15 = *(void *)(a1 + 16);
      if (!v15) {
        operator new();
      }
      unsigned int v36 = 0;
      uint64_t v16 = (char *)*((void *)this + 1);
      if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36))return 0; {
      }
        }
      else
      {
        unsigned int v36 = *v16;
        *((void *)this + 1) = v16 + 1;
      }
      int v17 = *((_DWORD *)this + 14);
      int v18 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v17 + 1;
      if (v17 >= v18) {
        return 0;
      }
      int v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v36);
      if (!sub_10010CB0C(v15, this, v20, v21) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
      int v22 = *((_DWORD *)this + 14);
      BOOL v23 = __OFSUB__(v22, 1);
      int v24 = v22 - 1;
      if (v24 < 0 == v23) {
        *((_DWORD *)this + 14) = v24;
      }
      uint64_t v25 = (unsigned char *)*((void *)this + 1);
      if ((unint64_t)v25 < *((void *)this + 2) && *v25 == 18)
      {
        do
        {
          *((void *)this + 1) = v25 + 1;
          int v11 = *(_DWORD *)(a1 + 36);
          uint64_t v12 = *(int *)(a1 + 32);
          if ((int)v12 >= v11) {
            goto LABEL_31;
          }
LABEL_11:
          uint64_t v13 = *(void *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v12 + 1;
          uint64_t v14 = *(void *)(v13 + 8 * v12);
          unsigned int v37 = 0;
          unsigned int v26 = (char *)*((void *)this + 1);
          if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0; {
          }
            }
          else
          {
            unsigned int v37 = *v26;
            *((void *)this + 1) = v26 + 1;
          }
          int v27 = *((_DWORD *)this + 14);
          int v28 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v27 + 1;
          if (v27 >= v28) {
            return 0;
          }
          int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
          if (!sub_10010D5E0(v14, this, v30, v31) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
          int v32 = *((_DWORD *)this + 14);
          BOOL v23 = __OFSUB__(v32, 1);
          int v33 = v32 - 1;
          if (v33 < 0 == v23) {
            *((_DWORD *)this + 14) = v33;
          }
          uint64_t v25 = (unsigned char *)*((void *)this + 1);
          unsigned int v34 = (unsigned char *)*((void *)this + 2);
        }
        while (v25 < v34 && *v25 == 18);
        if (v25 == v34 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v10 = TagFallback & 7;
      if (v10 == 2)
      {
        int v11 = *(_DWORD *)(a1 + 36);
        uint64_t v12 = *(int *)(a1 + 32);
        if ((int)v12 < v11) {
          goto LABEL_11;
        }
LABEL_31:
        if (v11 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v11 + 1);
          int v11 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v11 + 1;
        operator new();
      }
    }
    else
    {
      int v10 = TagFallback & 7;
    }
LABEL_19:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_10010E7B8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10010E7E0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10010E808(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 52))
  {
    uint64_t v6 = *(void *)(result + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047EA08 + 16);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  int v10 = *(void **)(v5 + 8);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10010E8CC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if (*((unsigned char *)this + 52))
  {
    uint64_t v5 = *((void *)this + 2);
    if (v5)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v6 = a2 + 1;
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v5 + 40);
      if (v7 <= 0x7F)
      {
LABEL_4:
        *((unsigned char *)v3 + 1) = (_BYTE)v7;
        uint64_t v8 = (uint64_t)v3 + 2;
LABEL_7:
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010CDD0(v5, v8, a3);
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v5 = *(void *)(qword_10047EA08 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v6 = a2 + 1;
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v5 + 40);
      if (v7 <= 0x7F) {
        goto LABEL_4;
      }
    }
    uint64_t v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, v6, a3);
    goto LABEL_7;
  }
LABEL_8:
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      int v11 = *(unsigned int **)(*((void *)this + 3) + 8 * v9);
      *(unsigned char *)uint64_t v3 = 18;
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[9];
      if (v12 > 0x7F)
      {
        int v10 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v3 + 1, a3);
      }
      else
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v12;
        int v10 = (char *)v3 + 2;
      }
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010DA78((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v10, a3);
      ++v9;
    }
    while (v9 < *((int *)this + 8));
  }
  uint64_t v15 = (void *)*((void *)this + 1);
  uint64_t v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, v3, a3);
}

uint64_t sub_10010EA08(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v5 = *(void *)(a1 + 16);
    if (v5)
    {
      int v6 = *(unsigned __int8 *)(v5 + 44);
      if (*(unsigned char *)(v5 + 44)) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v5 = *(void *)(qword_10047EA08 + 16);
      int v6 = *(unsigned __int8 *)(v5 + 44);
      if (*(unsigned char *)(v5 + 44))
      {
LABEL_6:
        int v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0) {
          v7 += 9;
        }
        if ((v6 & 4) != 0) {
          LODWORD(v8) = v7 + 9;
        }
        else {
          LODWORD(v8) = v7;
        }
        uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
        int v10 = *(void **)(v5 + 8);
        if (!v10) {
          goto LABEL_18;
        }
LABEL_15:
        if (*v10 != v10[1])
        {
          uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v9, a2)+ v8);
          *(_DWORD *)(v5 + 40) = v8;
          if (v8 >= 0x80) {
            int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
          }
          else {
            int v11 = 1;
          }
LABEL_20:
          int v12 = *(_DWORD *)(a1 + 32);
          uint64_t v4 = (v12 + v8 + v11 + 1);
          if (v12 < 1) {
            goto LABEL_26;
          }
          goto LABEL_21;
        }
LABEL_18:
        *(_DWORD *)(v5 + 40) = v8;
        int v11 = 1;
        goto LABEL_20;
      }
    }
    LODWORD(v8) = 0;
    uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v10 = *(void **)(v5 + 8);
    if (!v10) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
  int v3 = *(_DWORD *)(a1 + 32);
  uint64_t v4 = v3;
  if (v3 < 1) {
    goto LABEL_26;
  }
LABEL_21:
  uint64_t v13 = 0;
  do
  {
    uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010DC08(*(void *)(*(void *)(a1 + 24) + 8 * v13), a2);
    int v16 = (int)v15;
    if (v15 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    }
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v16 + v4 + v14);
    ++v13;
  }
  while (v13 < *(int *)(a1 + 32));
LABEL_26:
  int v17 = *(void **)(a1 + 8);
  if (v17 && *v17 != v17[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 48) = v4;
  return v4;
}

uint64_t sub_10010EB7C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10010DFA8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10010EC5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10010EC70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010EC84(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10010ED10()
{
  return 1;
}

uint64_t sub_10010ED18()
{
  uint64_t v0 = qword_10047D880;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10010B3EC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D7F0;
}

void sub_10010EDA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010EDBC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
    LOBYTE(v4) = *(unsigned char *)(a2 + 40);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 40);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047EA10 + 16);
    }
    sub_10010C890(v5, v6);
    int v4 = *(_DWORD *)(a2 + 40);
  }
  if ((v4 & 2) == 0)
  {
    if ((v4 & 4) == 0) {
      goto LABEL_12;
    }
LABEL_16:
    int v10 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 40) |= 4u;
    *(_DWORD *)(a1 + 28) = v10;
    if ((*(_DWORD *)(a2 + 40) & 8) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_13;
  }
  int v9 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 40) |= 2u;
  *(_DWORD *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_12:
  if ((v4 & 8) != 0)
  {
LABEL_13:
    int v7 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 8u;
    *(_DWORD *)(a1 + 32) = v7;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10010EF3C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10010EF64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10010EF78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10010EF8C(void *a1)
{
  *a1 = off_100456628;
  if ((void *)qword_10047EA10 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10010F020(void *a1)
{
  *a1 = off_100456628;
  if ((void *)qword_10047EA10 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10010F0C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_10010F0D0()
{
}

void sub_10010F138()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10010F160(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 40))
  {
    if (*(unsigned char *)(this + 40))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(void *)(v1 + 24) = 0;
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v4 = *(void *)(v1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 8) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_10010F1E8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_22;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        unsigned int v24 = 0;
        int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24))return 0; {
        }
          }
        else
        {
          unsigned int v24 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v12 = *((_DWORD *)this + 14);
        int v13 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v24);
        if (!sub_10010CB0C(v10, this, v15, v16) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
        int v17 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)this + 14) = v19;
        }
        uint64_t v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 21) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_22;
        }
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
LABEL_34:
        *(_DWORD *)(a1 + 24) = v24;
        *(_DWORD *)(a1 + 40) |= 2u;
        int v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 29) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
LABEL_37:
        *(_DWORD *)(a1 + 28) = v24;
        *(_DWORD *)(a1 + 40) |= 4u;
        int v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 37) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_40:
        unsigned int v24 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24))
        {
          *(_DWORD *)(a1 + 32) = v24;
          *(_DWORD *)(a1 + 40) |= 8u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_22;
        }
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
        goto LABEL_37;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_22;
        }
        goto LABEL_40;
      default:
        int v9 = TagFallback & 7;
LABEL_22:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_10010F54C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10010F584(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 40);
      if ((v6 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047EA10 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 40);
      if ((v6 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 28), a3);
  if ((*(_DWORD *)(v5 + 40) & 8) == 0)
  {
LABEL_5:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 32), a3);
  int v11 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v11;
  if (!v11) {
    return result;
  }
LABEL_14:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

unsigned char *sub_10010F680(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 10);
  if (v4)
  {
    uint64_t v8 = *((void *)this + 2);
    if (v8)
    {
      *a2 = 10;
      unsigned int v9 = a2 + 1;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v8 + 40);
      if (v10 <= 0x7F) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v8 = *(void *)(qword_10047EA10 + 16);
      *a2 = 10;
      unsigned int v9 = a2 + 1;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v8 + 40);
      if (v10 <= 0x7F)
      {
LABEL_9:
        a2[1] = (_BYTE)v10;
        a2 = (unsigned char *)sub_10010CDD0(v8, (uint64_t)(a2 + 2), a3);
        int v4 = *((_DWORD *)this + 10);
        if ((v4 & 2) != 0) {
          goto LABEL_13;
        }
LABEL_3:
        if ((v4 & 4) == 0) {
          goto LABEL_4;
        }
        goto LABEL_14;
      }
    }
    uint64_t v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, v9, a3);
    a2 = (unsigned char *)sub_10010CDD0(v8, v11, v12);
    int v4 = *((_DWORD *)this + 10);
    if ((v4 & 2) != 0) {
      goto LABEL_13;
    }
    goto LABEL_3;
  }
  if ((v4 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_13:
  int v13 = *((_DWORD *)this + 6);
  *a2 = 21;
  *(_DWORD *)(a2 + 1) = v13;
  a2 += 5;
  int v4 = *((_DWORD *)this + 10);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  int v14 = *((_DWORD *)this + 7);
  *a2 = 29;
  *(_DWORD *)(a2 + 1) = v14;
  a2 += 5;
  if ((*((_DWORD *)this + 10) & 8) == 0)
  {
LABEL_5:
    int v7 = (void *)*((void *)this + 1);
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = v7;
    if (!v7) {
      return a2;
    }
    goto LABEL_16;
  }
LABEL_15:
  int v15 = *((_DWORD *)this + 8);
  *a2 = 37;
  *(_DWORD *)(a2 + 1) = v15;
  a2 += 5;
  int v16 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v16;
  if (!v16) {
    return a2;
  }
LABEL_16:
  if (*v5 == v5[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10010F810(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if ((_BYTE)v3)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0)
    {
      unsigned int v4 = 0;
      goto LABEL_23;
    }
    uint64_t v9 = *(void *)(a1 + 16);
    if (v9)
    {
      int v10 = *(unsigned __int8 *)(v9 + 44);
      if (*(unsigned char *)(v9 + 44)) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v9 = *(void *)(qword_10047EA10 + 16);
      int v10 = *(unsigned __int8 *)(v9 + 44);
      if (*(unsigned char *)(v9 + 44))
      {
LABEL_8:
        int v11 = (v10 << 31 >> 31) & 9;
        if ((v10 & 2) != 0) {
          v11 += 9;
        }
        if ((v10 & 4) != 0) {
          LODWORD(v12) = v11 + 9;
        }
        else {
          LODWORD(v12) = v11;
        }
        int v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8);
        int v14 = *(void **)(v9 + 8);
        if (!v14) {
          goto LABEL_20;
        }
LABEL_17:
        if (*v14 != v14[1])
        {
          int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v13, a2)+ v12);
          *(_DWORD *)(v9 + 40) = v12;
          if (v12 >= 0x80) {
            int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
          }
          else {
            int v15 = 1;
          }
          goto LABEL_22;
        }
LABEL_20:
        *(_DWORD *)(v9 + 40) = v12;
        int v15 = 1;
LABEL_22:
        unsigned int v4 = v12 + v15 + 1;
        int v3 = *(_DWORD *)(a1 + 40);
LABEL_23:
        if ((v3 & 2) != 0) {
          v4 += 5;
        }
        if ((v3 & 4) != 0) {
          v4 += 5;
        }
        if ((v3 & 8) != 0) {
          uint64_t v5 = v4 + 5;
        }
        else {
          uint64_t v5 = v4;
        }
        int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        int v7 = *(void **)(a1 + 8);
        if (!v7) {
          goto LABEL_5;
        }
        goto LABEL_31;
      }
    }
    LODWORD(v12) = 0;
    int v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8);
    int v14 = *(void **)(v9 + 8);
    if (!v14) {
      goto LABEL_20;
    }
    goto LABEL_17;
  }
  uint64_t v5 = 0;
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = *(void **)(a1 + 8);
  if (!v7)
  {
LABEL_5:
    *(_DWORD *)(a1 + 36) = v5;
    return v5;
  }
LABEL_31:
  if (*v7 == v7[1]) {
    goto LABEL_5;
  }
  uint64_t v16 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 36) = v16;
  return v16;
}

uint64_t sub_10010F970(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10010EDBC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10010FA50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10010FA64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010FA78(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10010FB04()
{
  return 1;
}

uint64_t sub_10010FB0C()
{
  uint64_t v0 = qword_10047D880;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10010B3EC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D800;
}

void sub_10010FB9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010FBB0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
    sub_100115754((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), a2 + 24);
    if ((*(unsigned char *)(a2 + 52) & 1) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    sub_100115754((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), a2 + 24);
    if ((*(unsigned char *)(a2 + 52) & 1) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  *(_DWORD *)(a1 + 52) |= 1u;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    operator new();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_10047EA18 + 16);
  }
  sub_10010C890(v4, v5);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10010FCE4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10010FD0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10010FD20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10010FD34(uint64_t a1)
{
  *(void *)a1 = off_1004566D8;
  if (qword_10047EA18 != a1)
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  int v3 = *(_DWORD *)(a1 + 36);
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i < v3; ++i)
    {
      uint64_t v5 = *(void *)(*(void *)(a1 + 24) + 8 * i);
      if (v5)
      {
        (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
        int v3 = *(_DWORD *)(a1 + 36);
      }
    }
  }
  if (*(void *)(a1 + 24)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10010FE40(uint64_t a1)
{
  sub_10010FD34(a1);

  operator delete();
}

uint64_t sub_10010FE78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

uint64_t sub_10010FE80(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047EA18;
  if (!qword_10047EA18)
  {
    sub_10010B9D8(0, a2, a3, a4);
    return qword_10047EA18;
  }
  return result;
}

void sub_10010FEBC()
{
}

void sub_10010FF28()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10010FF50(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 52))
  {
    this = *(void *)(this + 16);
    if (this)
    {
      if (*(unsigned char *)(this + 44))
      {
        *(void *)(this + 16) = 0;
        *(void *)(this + 24) = 0;
        *(void *)(this + 32) = 0;
      }
      uint64_t v2 = *(void *)(this + 8);
      this += 8;
      *(_DWORD *)(this + 36) = 0;
      if (v2) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  if (*(int *)(v1 + 32) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(v1 + 24) + 8 * v3);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 32));
  }
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v5 + 6) = 0;
  *((_DWORD *)v5 + 11) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return this;
}

uint64_t sub_10011001C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v8;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v8 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 2) {
        goto LABEL_19;
      }
      *(_DWORD *)(a1 + 52) |= 1u;
      uint64_t v15 = *(void *)(a1 + 16);
      if (!v15) {
        operator new();
      }
      unsigned int v36 = 0;
      uint64_t v16 = (char *)*((void *)this + 1);
      if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36))return 0; {
      }
        }
      else
      {
        unsigned int v36 = *v16;
        *((void *)this + 1) = v16 + 1;
      }
      int v17 = *((_DWORD *)this + 14);
      int v18 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v17 + 1;
      if (v17 >= v18) {
        return 0;
      }
      int v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v36);
      if (!sub_10010CB0C(v15, this, v20, v21) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
      int v22 = *((_DWORD *)this + 14);
      BOOL v23 = __OFSUB__(v22, 1);
      int v24 = v22 - 1;
      if (v24 < 0 == v23) {
        *((_DWORD *)this + 14) = v24;
      }
      uint64_t v25 = (unsigned char *)*((void *)this + 1);
      if ((unint64_t)v25 < *((void *)this + 2) && *v25 == 18)
      {
        do
        {
          *((void *)this + 1) = v25 + 1;
          int v11 = *(_DWORD *)(a1 + 36);
          uint64_t v12 = *(int *)(a1 + 32);
          if ((int)v12 >= v11) {
            goto LABEL_31;
          }
LABEL_11:
          uint64_t v13 = *(void *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v12 + 1;
          uint64_t v14 = *(void *)(v13 + 8 * v12);
          unsigned int v37 = 0;
          unsigned int v26 = (char *)*((void *)this + 1);
          if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0; {
          }
            }
          else
          {
            unsigned int v37 = *v26;
            *((void *)this + 1) = v26 + 1;
          }
          int v27 = *((_DWORD *)this + 14);
          int v28 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v27 + 1;
          if (v27 >= v28) {
            return 0;
          }
          int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
          if (!sub_10010F1E8(v14, this, v30, v31) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
          int v32 = *((_DWORD *)this + 14);
          BOOL v23 = __OFSUB__(v32, 1);
          int v33 = v32 - 1;
          if (v33 < 0 == v23) {
            *((_DWORD *)this + 14) = v33;
          }
          uint64_t v25 = (unsigned char *)*((void *)this + 1);
          unsigned int v34 = (unsigned char *)*((void *)this + 2);
        }
        while (v25 < v34 && *v25 == 18);
        if (v25 == v34 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v10 = TagFallback & 7;
      if (v10 == 2)
      {
        int v11 = *(_DWORD *)(a1 + 36);
        uint64_t v12 = *(int *)(a1 + 32);
        if ((int)v12 < v11) {
          goto LABEL_11;
        }
LABEL_31:
        if (v11 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v11 + 1);
          int v11 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v11 + 1;
        operator new();
      }
    }
    else
    {
      int v10 = TagFallback & 7;
    }
LABEL_19:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_1001103C0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001103E8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100110410(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 52))
  {
    uint64_t v6 = *(void *)(result + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047EA18 + 16);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  int v10 = *(void **)(v5 + 8);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001104D4(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if (*((unsigned char *)this + 52))
  {
    uint64_t v5 = *((void *)this + 2);
    if (v5)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v6 = a2 + 1;
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v5 + 40);
      if (v7 <= 0x7F)
      {
LABEL_4:
        *((unsigned char *)v3 + 1) = (_BYTE)v7;
        uint64_t v8 = (uint64_t)v3 + 2;
LABEL_7:
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010CDD0(v5, v8, a3);
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v5 = *(void *)(qword_10047EA18 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v6 = a2 + 1;
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v5 + 40);
      if (v7 <= 0x7F) {
        goto LABEL_4;
      }
    }
    uint64_t v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, v6, a3);
    goto LABEL_7;
  }
LABEL_8:
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      int v11 = *(unsigned int **)(*((void *)this + 3) + 8 * v9);
      *(unsigned char *)uint64_t v3 = 18;
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[9];
      if (v12 > 0x7F)
      {
        int v10 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v3 + 1, a3);
      }
      else
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v12;
        int v10 = (char *)v3 + 2;
      }
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010F680((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v10, a3);
      ++v9;
    }
    while (v9 < *((int *)this + 8));
  }
  uint64_t v15 = (void *)*((void *)this + 1);
  uint64_t v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, v3, a3);
}

uint64_t sub_100110610(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v5 = *(void *)(a1 + 16);
    if (v5)
    {
      int v6 = *(unsigned __int8 *)(v5 + 44);
      if (*(unsigned char *)(v5 + 44)) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v5 = *(void *)(qword_10047EA18 + 16);
      int v6 = *(unsigned __int8 *)(v5 + 44);
      if (*(unsigned char *)(v5 + 44))
      {
LABEL_6:
        int v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0) {
          v7 += 9;
        }
        if ((v6 & 4) != 0) {
          LODWORD(v8) = v7 + 9;
        }
        else {
          LODWORD(v8) = v7;
        }
        uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
        int v10 = *(void **)(v5 + 8);
        if (!v10) {
          goto LABEL_18;
        }
LABEL_15:
        if (*v10 != v10[1])
        {
          uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v9, a2)+ v8);
          *(_DWORD *)(v5 + 40) = v8;
          if (v8 >= 0x80) {
            int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
          }
          else {
            int v11 = 1;
          }
LABEL_20:
          int v12 = *(_DWORD *)(a1 + 32);
          uint64_t v4 = (v12 + v8 + v11 + 1);
          if (v12 < 1) {
            goto LABEL_26;
          }
          goto LABEL_21;
        }
LABEL_18:
        *(_DWORD *)(v5 + 40) = v8;
        int v11 = 1;
        goto LABEL_20;
      }
    }
    LODWORD(v8) = 0;
    uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v10 = *(void **)(v5 + 8);
    if (!v10) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
  int v3 = *(_DWORD *)(a1 + 32);
  uint64_t v4 = v3;
  if (v3 < 1) {
    goto LABEL_26;
  }
LABEL_21:
  uint64_t v13 = 0;
  do
  {
    uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10010F810(*(void *)(*(void *)(a1 + 24) + 8 * v13), a2);
    int v16 = (int)v15;
    if (v15 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    }
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v16 + v4 + v14);
    ++v13;
  }
  while (v13 < *(int *)(a1 + 32));
LABEL_26:
  int v17 = *(void **)(a1 + 8);
  if (v17 && *v17 != v17[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 48) = v4;
  return v4;
}

uint64_t sub_100110784(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10010FBB0((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100110864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100110878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011088C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100110918()
{
  return 1;
}

uint64_t sub_100110920()
{
  uint64_t v0 = qword_10047D880;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10010B3EC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D810;
}

void sub_1001109B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001109C4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  int v4 = *(_DWORD *)(a2 + 64);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 64) |= 1u;
    *(void *)(a1 + 16) = v9;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v10 = *(const std::string **)(a2 + 24);
  *(_DWORD *)(a1 + 64) |= 2u;
  int v11 = *(std::string **)(a1 + 24);
  if (v11 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v11, v10);
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v12 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 64) |= 4u;
  *(_DWORD *)(a1 + 32) = v12;
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v13 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 64) |= 8u;
  *(_DWORD *)(a1 + 36) = v13;
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_26:
    int v15 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 64) |= 0x20u;
    *(_DWORD *)(a1 + 44) = v15;
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_25:
  int v14 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 64) |= 0x10u;
  *(_DWORD *)(a1 + 40) = v14;
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 0x20) != 0) {
    goto LABEL_26;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_27:
  char v16 = *(unsigned char *)(a2 + 48);
  *(_DWORD *)(a1 + 64) |= 0x40u;
  *(unsigned char *)(a1 + 48) = v16;
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    char v5 = *(unsigned char *)(a2 + 49);
    *(_DWORD *)(a1 + 64) |= 0x80u;
    *(unsigned char *)(a1 + 49) = v5;
    int v4 = *(_DWORD *)(a2 + 64);
  }
LABEL_13:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 52);
      *(_DWORD *)(a1 + 64) |= 0x100u;
      *(_DWORD *)(a1 + 52) = v6;
      int v4 = *(_DWORD *)(a2 + 64);
    }
    if ((v4 & 0x200) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 56);
      *(_DWORD *)(a1 + 64) |= 0x200u;
      *(_DWORD *)(a1 + ++*(_DWORD *)(result + 56) = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100110BCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100110BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100110BF4(void *a1)
{
  *a1 = off_100456788;
  uint64_t v2 = a1[3];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100110C8C(void *a1)
{
  *a1 = off_100456788;
  uint64_t v2 = a1[3];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100110D38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 60) = a2;
  return result;
}

void sub_100110D40()
{
}

void sub_100110DBC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100110DE4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 64);
  if ((_BYTE)v1)
  {
    *(void *)(a1 + 16) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(a1 + 24);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
    *(_WORD *)(a1 + 48) = 0;
    int v1 = *(_DWORD *)(a1 + 64);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(a1 + 52) = 0;
    *(_DWORD *)(a1 + ++*(_DWORD *)(result + 56) = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 14) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100110E58(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (unint64_t *)(a1 + 16);
  int v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 < *((void *)this + 2) && (*v8 & 0x80000000) == 0)
    {
      TagFallbacuint64_t k = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_41;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v6);
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 64) | 1;
        *(_DWORD *)(a1 + 64) = v12;
        int v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 18) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
        *(_DWORD *)(a1 + 64) = v12 | 2;
        if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_17:
        }
          operator new();
LABEL_18:
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v15 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 != 24) {
          continue;
        }
        char v16 = v15 + 1;
        *((void *)this + 1) = v16;
LABEL_24:
        unsigned int v44 = 0;
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44);
          if (!result) {
            return result;
          }
          unsigned int v17 = v44;
          int v18 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int v17 = *v16;
          int v18 = v16 + 1;
          *((void *)this + 1) = v18;
        }
        *(_DWORD *)(a1 + 32) = -(v17 & 1) ^ (v17 >> 1);
        *(_DWORD *)(a1 + 64) |= 4u;
        if ((unint64_t)v18 >= v14 || *v18 != 32) {
          continue;
        }
        int v19 = v18 + 1;
        *((void *)this + 1) = v19;
LABEL_50:
        unsigned int v44 = 0;
        if ((unint64_t)v19 >= v14 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44);
          if (!result) {
            return result;
          }
          unsigned int v28 = v44;
          if (v44 <= 3)
          {
LABEL_53:
            *(_DWORD *)(a1 + 64) |= 8u;
            *(_DWORD *)(a1 + 36) = v28;
            goto LABEL_57;
          }
        }
        else
        {
          unsigned int v28 = *v19;
          *((void *)this + 1) = v19 + 1;
          if (v28 <= 3) {
            goto LABEL_53;
          }
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v7, 4, (int)v28);
LABEL_57:
        int v29 = (unsigned char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        if ((unint64_t)v29 >= v20 || *v29 != 40) {
          continue;
        }
        int v21 = v29 + 1;
        *((void *)this + 1) = v21;
LABEL_60:
        unsigned int v44 = 0;
        if ((unint64_t)v21 >= v20 || (int v30 = *v21, v30 < 0))
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44);
          if (!result) {
            return result;
          }
          unsigned int v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v32 = *((void *)this + 2);
          *(_DWORD *)(a1 + 40) = v44;
          *(_DWORD *)(a1 + 64) |= 0x10u;
          if ((unint64_t)v31 >= v32) {
            continue;
          }
        }
        else
        {
          unsigned int v31 = v21 + 1;
          *((void *)this + 1) = v31;
          *(_DWORD *)(a1 + 40) = v30;
          *(_DWORD *)(a1 + 64) |= 0x10u;
          if ((unint64_t)v31 >= v20) {
            continue;
          }
        }
        if (*v31 != 53) {
          continue;
        }
        *((void *)this + 1) = v31 + 1;
        unsigned int v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v44) & 1) == 0) {
          return 0;
        }
LABEL_68:
        *(_DWORD *)(a1 + 44) = v44;
        *(_DWORD *)(a1 + 64) |= 0x20u;
        int v33 = (unsigned char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        if ((unint64_t)v33 >= v22 || *v33 != 56) {
          continue;
        }
        BOOL v23 = v33 + 1;
        *((void *)this + 1) = v23;
LABEL_71:
        unsigned int v44 = 0;
        if ((unint64_t)v23 >= v22 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44);
          if (!result) {
            return result;
          }
          unsigned int v34 = v44;
          int v35 = (unsigned char *)*((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
        }
        else
        {
          unsigned int v34 = *v23;
          int v35 = v23 + 1;
          *((void *)this + 1) = v35;
        }
        *(unsigned char *)(a1 + 48) = v34 != 0;
        *(_DWORD *)(a1 + 64) |= 0x40u;
        if ((unint64_t)v35 >= v22 || *v35 != 64) {
          continue;
        }
        int v24 = v35 + 1;
        *((void *)this + 1) = v24;
LABEL_79:
        unsigned int v44 = 0;
        if ((unint64_t)v24 >= v22 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44);
          if (!result) {
            return result;
          }
          unsigned int v36 = v44;
          unsigned int v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
        }
        else
        {
          unsigned int v36 = *v24;
          unsigned int v37 = v24 + 1;
          *((void *)this + 1) = v37;
        }
        *(unsigned char *)(a1 + 49) = v36 != 0;
        *(_DWORD *)(a1 + 64) |= 0x80u;
        if ((unint64_t)v37 >= v22 || *v37 != 72) {
          continue;
        }
        uint64_t v25 = v37 + 1;
        *((void *)this + 1) = v25;
LABEL_87:
        unsigned int v44 = 0;
        if ((unint64_t)v25 >= v22 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44);
          if (!result) {
            return result;
          }
          unsigned int v38 = v44;
          if (v44 <= 3)
          {
LABEL_90:
            *(_DWORD *)(a1 + 64) |= 0x100u;
            *(_DWORD *)(a1 + 52) = v38;
            goto LABEL_94;
          }
        }
        else
        {
          unsigned int v38 = *v25;
          *((void *)this + 1) = v25 + 1;
          if (v38 <= 3) {
            goto LABEL_90;
          }
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v7, 9, (int)v38);
LABEL_94:
        int v39 = (unsigned char *)*((void *)this + 1);
        unint64_t v26 = *((void *)this + 2);
        if ((unint64_t)v39 >= v26 || *v39 != 80) {
          continue;
        }
        int v27 = v39 + 1;
        *((void *)this + 1) = v27;
LABEL_97:
        unsigned int v44 = 0;
        if ((unint64_t)v27 >= v26 || (int v40 = *v27, v40 < 0))
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44);
          if (!result) {
            return result;
          }
          uint64_t v43 = *((void *)this + 1);
          uint64_t v42 = *((void *)this + 2);
          *(_DWORD *)(a1 + ++*(_DWORD *)(result + 56) = v44;
          *(_DWORD *)(a1 + 64) |= 0x200u;
          if (v43 != v42) {
            continue;
          }
        }
        else
        {
          int v41 = v27 + 1;
          *((void *)this + 1) = v41;
          *(_DWORD *)(a1 + ++*(_DWORD *)(result + 56) = v40;
          *(_DWORD *)(a1 + 64) |= 0x200u;
          if (v41 != (char *)v26) {
            continue;
          }
        }
        if (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        continue;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 64) |= 2u;
        if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          goto LABEL_17;
        }
        goto LABEL_18;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        char v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_24;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_50;
      case 5u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_60;
      case 6u:
        int v10 = TagFallback & 7;
        if (v10 != 5) {
          goto LABEL_41;
        }
        unsigned int v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v44) & 1) == 0) {
          return 0;
        }
        goto LABEL_68;
      case 7u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        BOOL v23 = (char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_71;
      case 8u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_79;
      case 9u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        uint64_t v25 = (char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        goto LABEL_87;
      case 0xAu:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        int v27 = (char *)*((void *)this + 1);
        unint64_t v26 = *((void *)this + 2);
        goto LABEL_97;
      default:
        int v10 = TagFallback & 7;
LABEL_41:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
        break;
        }
    }
  }
}

uint64_t sub_1001114DC(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 64);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFixed64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 16), (unint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 64);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 32), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 36), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 40), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(float *)(v5 + 44), a3);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 48), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 49), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 52), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 64) & 0x200) == 0)
  {
LABEL_11:
    uint64_t v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 56), (int)a2, a4);
  int v10 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_23:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100111658(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 16);
  if (v6)
  {
    uint64_t v11 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)((char *)a2 + 1) = v11;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
    int v6 = *((_DWORD *)this + 16);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_26:
      int v18 = *((_DWORD *)this + 8);
      *(unsigned char *)uint64_t v4 = 24;
      int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v18) ^ (v18 >> 31));
      if (v19 > 0x7F)
      {
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)v4 + 1, a3);
        if ((*((unsigned char *)this + 64) & 8) != 0) {
          goto LABEL_30;
        }
      }
      else
      {
        *((unsigned char *)v4 + 1) = (2 * v18) ^ (v18 >> 31);
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
        if ((*((unsigned char *)this + 64) & 8) != 0) {
          goto LABEL_30;
        }
      }
LABEL_5:
      if ((*((unsigned char *)this + 64) & 0x10) == 0) {
        goto LABEL_6;
      }
LABEL_37:
      unint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 10);
      *(unsigned char *)uint64_t v4 = 40;
      unint64_t v23 = (unint64_t)v4 + 1;
      if ((v22 & 0x80000000) != 0)
      {
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v22, v23, a3);
        int v7 = *((_DWORD *)this + 16);
        if ((v7 & 0x20) != 0) {
          goto LABEL_44;
        }
      }
      else if (v22 > 0x7F)
      {
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, v23, a3);
        int v7 = *((_DWORD *)this + 16);
        if ((v7 & 0x20) != 0) {
          goto LABEL_44;
        }
      }
      else
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v22;
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
        int v7 = *((_DWORD *)this + 16);
        if ((v7 & 0x20) != 0) {
          goto LABEL_44;
        }
      }
LABEL_7:
      if ((v7 & 0x40) == 0) {
        goto LABEL_8;
      }
      goto LABEL_45;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v12 = *((void *)this + 3);
  *(unsigned char *)uint64_t v4 = 18;
  if (*(char *)(v12 + 23) < 0)
  {
    int v13 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v12 + 8);
    if (v13 <= 0x7F) {
      goto LABEL_16;
    }
  }
  else
  {
    int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v12 + 23);
    if (*(unsigned __int8 *)(v12 + 23) <= 0x7Fu)
    {
LABEL_16:
      *((unsigned char *)v4 + 1) = (_BYTE)v13;
      int v14 = v4 + 2;
      goto LABEL_19;
    }
  }
  int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)v4 + 1, a3);
LABEL_19:
  int v15 = *(char *)(v12 + 23);
  if (v15 >= 0) {
    char v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12;
  }
  else {
    char v16 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v12;
  }
  if (v15 >= 0) {
    unsigned int v17 = (const void *)*(unsigned __int8 *)(v12 + 23);
  }
  else {
    unsigned int v17 = (const void *)*(unsigned int *)(v12 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v16, v17, v14, a4);
  if ((*((_DWORD *)this + 16) & 4) != 0) {
    goto LABEL_26;
  }
LABEL_4:
  if ((*((unsigned char *)this + 64) & 8) == 0) {
    goto LABEL_5;
  }
LABEL_30:
  unint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 9);
  *(unsigned char *)uint64_t v4 = 32;
  unint64_t v21 = (unint64_t)v4 + 1;
  if ((v20 & 0x80000000) != 0)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v20, v21, a3);
    if ((*((unsigned char *)this + 64) & 0x10) != 0) {
      goto LABEL_37;
    }
  }
  else if (v20 > 0x7F)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, v21, a3);
    if ((*((unsigned char *)this + 64) & 0x10) != 0) {
      goto LABEL_37;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v20;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((*((unsigned char *)this + 64) & 0x10) != 0) {
      goto LABEL_37;
    }
  }
LABEL_6:
  int v7 = *((_DWORD *)this + 16);
  if ((v7 & 0x20) == 0) {
    goto LABEL_7;
  }
LABEL_44:
  int v24 = *((_DWORD *)this + 11);
  *(unsigned char *)uint64_t v4 = 53;
  *(_DWORD *)((char *)v4 + 1) = v24;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 5);
  int v7 = *((_DWORD *)this + 16);
  if ((v7 & 0x40) == 0)
  {
LABEL_8:
    if ((v7 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_46;
  }
LABEL_45:
  char v25 = *((unsigned char *)this + 48);
  *(unsigned char *)uint64_t v4 = 56;
  *((unsigned char *)v4 + 1) = v25;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  int v7 = *((_DWORD *)this + 16);
  if ((v7 & 0x80) == 0)
  {
LABEL_9:
    if ((v7 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_47:
    int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 13);
    *(unsigned char *)uint64_t v4 = 72;
    unint64_t v28 = (unint64_t)v4 + 1;
    if ((v27 & 0x80000000) != 0)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v27, v28, a3);
      if ((*((unsigned char *)this + 65) & 2) != 0) {
        goto LABEL_54;
      }
    }
    else if (v27 > 0x7F)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, v28, a3);
      if ((*((unsigned char *)this + 65) & 2) != 0) {
        goto LABEL_54;
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v27;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      if ((*((unsigned char *)this + 65) & 2) != 0) {
        goto LABEL_54;
      }
    }
LABEL_11:
    int v10 = (void *)*((void *)this + 1);
    uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v8 = v10;
    if (!v10) {
      return v4;
    }
    goto LABEL_61;
  }
LABEL_46:
  char v26 = *((unsigned char *)this + 49);
  *(unsigned char *)uint64_t v4 = 64;
  *((unsigned char *)v4 + 1) = v26;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  if ((*((_DWORD *)this + 16) & 0x100) != 0) {
    goto LABEL_47;
  }
LABEL_10:
  if ((*((unsigned char *)this + 65) & 2) == 0) {
    goto LABEL_11;
  }
LABEL_54:
  int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 14);
  *(unsigned char *)uint64_t v4 = 80;
  unint64_t v30 = (unint64_t)v4 + 1;
  if ((v29 & 0x80000000) != 0)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v29, v30, a3);
    unint64_t v32 = (void *)*((void *)this + 1);
    uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v8 = v32;
    if (!v32) {
      return v4;
    }
  }
  else if (v29 > 0x7F)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v29, v30, a3);
    int v33 = (void *)*((void *)this + 1);
    uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v8 = v33;
    if (!v33) {
      return v4;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v29;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    unsigned int v31 = (void *)*((void *)this + 1);
    uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v8 = v31;
    if (!v31) {
      return v4;
    }
  }
LABEL_61:
  if (*v8 == v8[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, v4, a3);
}

uint64_t sub_1001119BC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 64);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    if ((v3 & 0xFF00) == 0) {
      goto LABEL_57;
    }
    goto LABEL_43;
  }
  int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) == 0)
  {
    if ((v3 & 4) == 0) {
      goto LABEL_4;
    }
LABEL_18:
    uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *(_DWORD *)(a1 + 32)) ^ (*(int *)(a1 + 32) >> 31));
    if (v12 >= 0x80)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
      int v3 = *(_DWORD *)(a1 + 64);
      v4 += v13 + 1;
      if ((v3 & 8) != 0) {
        goto LABEL_22;
      }
    }
    else
    {
      v4 += 2;
      if ((v3 & 8) != 0) {
        goto LABEL_22;
      }
    }
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_35;
    }
    goto LABEL_29;
  }
  uint64_t v6 = *(void *)(a1 + 24);
  int v7 = *(unsigned __int8 *)(v6 + 23);
  char v8 = v7;
  uint64_t v9 = *(void *)(v6 + 8);
  if ((v7 & 0x80u) == 0) {
    unint64_t v10 = *(unsigned __int8 *)(v6 + 23);
  }
  else {
    unint64_t v10 = v9;
  }
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10, a2);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v9 = *(void *)(v6 + 8);
    int v3 = *(_DWORD *)(a1 + 64);
    char v8 = *(unsigned char *)(v6 + 23);
  }
  else
  {
    int v11 = 1;
  }
  if (v8 < 0) {
    int v7 = v9;
  }
  v4 += v11 + v7 + 1;
  if ((v3 & 4) != 0) {
    goto LABEL_18;
  }
LABEL_4:
  if ((v3 & 8) == 0) {
    goto LABEL_5;
  }
LABEL_22:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if ((v14 & 0x80000000) != 0)
  {
    v4 += 11;
    if ((v3 & 0x10) == 0) {
      goto LABEL_35;
    }
  }
  else if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
    int v3 = *(_DWORD *)(a1 + 64);
    v4 += v15 + 1;
    if ((v3 & 0x10) == 0) {
      goto LABEL_35;
    }
  }
  else
  {
    v4 += 2;
    if ((v3 & 0x10) == 0) {
      goto LABEL_35;
    }
  }
LABEL_29:
  char v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if ((v16 & 0x80000000) != 0)
  {
    int v17 = 11;
  }
  else if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    int v17 = 2;
  }
  v4 += v17;
LABEL_35:
  unsigned int v18 = v4 + 5;
  if ((v3 & 0x20) == 0) {
    unsigned int v18 = v4;
  }
  if ((v3 & 0x40) != 0) {
    v18 += 2;
  }
  if ((v3 & 0x80) != 0) {
    uint64_t v5 = v18 + 2;
  }
  else {
    uint64_t v5 = v18;
  }
  if ((v3 & 0xFF00) != 0)
  {
LABEL_43:
    if ((v3 & 0x100) != 0)
    {
      int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
      if ((v19 & 0x80000000) != 0)
      {
        int v20 = 11;
      }
      else if (v19 >= 0x80)
      {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2)
            + 1;
        int v3 = *(_DWORD *)(a1 + 64);
      }
      else
      {
        int v20 = 2;
      }
      uint64_t v5 = (v20 + v5);
    }
    if ((v3 & 0x200) != 0)
    {
      unint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
      if ((v21 & 0x80000000) != 0)
      {
        int v22 = 11;
      }
      else if (v21 >= 0x80)
      {
        int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2)
            + 1;
      }
      else
      {
        int v22 = 2;
      }
      uint64_t v5 = (v22 + v5);
    }
  }
LABEL_57:
  unint64_t v23 = *(void **)(a1 + 8);
  if (v23 && *v23 != v23[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 60) = v5;
  return v5;
}

uint64_t sub_100111BDC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001109C4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100111CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100111CD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100111CE4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100111D70()
{
  return 1;
}

uint64_t sub_100111D78()
{
  uint64_t v0 = qword_10047D880;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10010B3EC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D820;
}

void sub_100111E08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100111E1C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
    LOBYTE(v4) = *(unsigned char *)(a2 + 32);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 32);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    char v5 = *(unsigned char *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 1u;
    *(unsigned char *)(a1 + 24) = v5;
    int v4 = *(_DWORD *)(a2 + 32);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 32) |= 2u;
    uint64_t v6 = *(void *)(a1 + 16);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_10047EA28 + 16);
    }
    sub_1001109C4(v6, v7);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100111F70()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100111F98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100111FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100111FC0(void *a1)
{
  *a1 = off_100456838;
  if ((void *)qword_10047EA28 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100112054(void *a1)
{
  *a1 = off_100456838;
  if ((void *)qword_10047EA28 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1001120FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 28) = a2;
  return result;
}

void sub_100112104()
{
}

void sub_10011216C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100112194(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 32);
  if (v2)
  {
    *(unsigned char *)(this + 24) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        int v3 = *(_DWORD *)(this + 64);
        if ((_BYTE)v3)
        {
          *(void *)(this + 16) = 0;
          if ((v3 & 2) != 0)
          {
            uint64_t v4 = *(void *)(this + 24);
            if ((_UNKNOWN *)v4 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
            {
              if (*(char *)(v4 + 23) < 0)
              {
                **(unsigned char **)uint64_t v4 = 0;
                *(void *)(v4 + 8) = 0;
              }
              else
              {
                *(unsigned char *)uint64_t v4 = 0;
                *(unsigned char *)(v4 + 23) = 0;
              }
            }
          }
          *(void *)(this + 32) = 0;
          *(void *)(this + 40) = 0;
          *(_WORD *)(this + 48) = 0;
          int v3 = *(_DWORD *)(this + 64);
        }
        if ((v3 & 0xFF00) != 0)
        {
          *(_DWORD *)(this + 52) = 0;
          *(_DWORD *)(this + ++*(_DWORD *)(result + 56) = 0;
        }
        uint64_t v5 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + ++*(_DWORD *)(result + 56) = 0;
        if (v5) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
  }
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v6 + 6) = 0;
  if (v7)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
  }
  return this;
}

uint64_t sub_100112268(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    do
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          TagFallbacuint64_t k = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 == 1) {
          break;
        }
        if (TagFallback >> 3 == 2)
        {
          int v9 = TagFallback & 7;
          if (v9 == 2)
          {
            *(_DWORD *)(a1 + 32) |= 2u;
            uint64_t v10 = *(void *)(a1 + 16);
            if (!v10) {
              goto LABEL_26;
            }
            goto LABEL_11;
          }
        }
        else
        {
          int v9 = TagFallback & 7;
        }
LABEL_18:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
      }
        }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_18;
      }
      unsigned int v26 = 0;
      int v13 = (char *)*((void *)this + 1);
      unint64_t v12 = *((void *)this + 2);
      if ((unint64_t)v13 >= v12 || *v13 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
        if (!result) {
          return result;
        }
        unsigned int v14 = v26;
        int v15 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
      }
      else
      {
        unsigned int v14 = *v13;
        int v15 = v13 + 1;
        *((void *)this + 1) = v15;
      }
      *(unsigned char *)(a1 + 24) = v14 != 0;
      int v17 = *(_DWORD *)(a1 + 32) | 1;
      *(_DWORD *)(a1 + 32) = v17;
    }
    while ((unint64_t)v15 >= v12 || *v15 != 18);
    *((void *)this + 1) = v15 + 1;
    *(_DWORD *)(a1 + 32) = v17 | 2;
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
LABEL_26:
    }
      operator new();
LABEL_11:
    unsigned int v27 = 0;
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27)) {
        return 0;
      }
    }
    else
    {
      unsigned int v27 = *v11;
      *((void *)this + 1) = v11 + 1;
    }
    int v18 = *((_DWORD *)this + 14);
    int v19 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v18 + 1;
    if (v18 >= v19) {
      return 0;
    }
    int v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27);
    if (!sub_100110E58(v10, this, v21, v22) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
    int v23 = *((_DWORD *)this + 14);
    BOOL v24 = __OFSUB__(v23, 1);
    int v25 = v23 - 1;
    if (v25 < 0 == v24) {
      *((_DWORD *)this + 14) = v25;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

void sub_100112538()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100112560(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 24), (BOOL)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 2) == 0)
    {
LABEL_3:
      int v9 = *(void **)(v5 + 8);
      char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
      uint64_t v7 = v9;
      if (!v9) {
        return result;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v10 = *(void *)(v5 + 16);
  if (v10)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v10, a2, a4);
    int v11 = *(void **)(v5 + 8);
    char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v11;
    if (!v11) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(qword_10047EA28 + 16), a2, a4);
    unint64_t v12 = *(void **)(v5 + 8);
    char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v12;
    if (!v12) {
      return result;
    }
  }
LABEL_10:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100112624(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v5 = *((_DWORD *)this + 8);
  if (v5)
  {
    char v8 = *((unsigned char *)this + 24);
    *(unsigned char *)a2 = 8;
    *((unsigned char *)a2 + 1) = v8;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    if ((*((_DWORD *)this + 8) & 2) == 0)
    {
LABEL_3:
      uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      int v6 = (void *)*((void *)this + 1);
      if (!v6) {
        return a2;
      }
      goto LABEL_12;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v9 = (unsigned int *)*((void *)this + 2);
  if (v9)
  {
    *(unsigned char *)a2 = 18;
    unsigned int v10 = a2 + 1;
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9[15];
    if (v11 <= 0x7F) {
      goto LABEL_8;
    }
  }
  else
  {
    int v9 = *(unsigned int **)(qword_10047EA28 + 16);
    *(unsigned char *)a2 = 18;
    unsigned int v10 = a2 + 1;
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9[15];
    if (v11 <= 0x7F)
    {
LABEL_8:
      *((unsigned char *)a2 + 1) = (_BYTE)v11;
      a2 = sub_100111658((wireless_diagnostics::google::protobuf::internal::WireFormat *)v9, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2), a3, a4);
      unint64_t v12 = (void *)*((void *)this + 1);
      uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      int v6 = v12;
      if (!v12) {
        return a2;
      }
      goto LABEL_12;
    }
  }
  int v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v10, a3);
  a2 = sub_100111658((wireless_diagnostics::google::protobuf::internal::WireFormat *)v9, v13, v14, v15);
  char v16 = (void *)*((void *)this + 1);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v6 = v16;
  if (!v16) {
    return a2;
  }
LABEL_12:
  if (*v6 == v6[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v7, a2, a3);
}

uint64_t sub_10011272C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 32);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
LABEL_7:
    char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v9 = *(void **)(a1 + 8);
    if (v9) {
      goto LABEL_12;
    }
LABEL_8:
    *(_DWORD *)(a1 + 28) = v4;
    return v4;
  }
  uint64_t v4 = 2 * (v3 & 1u);
  if ((v3 & 2) == 0) {
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001119BC(v5, a2);
    if (v6 < 0x80)
    {
LABEL_5:
      int v7 = 1;
      goto LABEL_11;
    }
  }
  else
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001119BC(*(void *)(qword_10047EA28 + 16), a2);
    if (v6 < 0x80) {
      goto LABEL_5;
    }
  }
  int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
LABEL_11:
  uint64_t v4 = (v4 | 1) + v6 + v7;
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v9 = *(void **)(a1 + 8);
  if (!v9) {
    goto LABEL_8;
  }
LABEL_12:
  if (*v9 == v9[1]) {
    goto LABEL_8;
  }
  uint64_t v11 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v8, a2)
      + v4;
  *(_DWORD *)(a1 + 28) = v11;
  return v11;
}

uint64_t sub_100112808(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100111E1C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001128E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001128FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100112910(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10011299C()
{
  return 1;
}

uint64_t sub_1001129A4()
{
  uint64_t v0 = qword_10047D880;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10010B3EC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D830;
}

void sub_100112A34(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100112A48(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
    sub_10011589C((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), a2 + 24);
    if ((*(unsigned char *)(a2 + 52) & 1) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    sub_10011589C((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), a2 + 24);
    if ((*(unsigned char *)(a2 + 52) & 1) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  *(_DWORD *)(a1 + 52) |= 1u;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    operator new();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_10047EA30 + 16);
  }
  sub_10010C890(v4, v5);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100112B7C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100112BA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100112BB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100112BCC(uint64_t a1)
{
  *(void *)a1 = off_1004568E8;
  if (qword_10047EA30 != a1)
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  int v3 = *(_DWORD *)(a1 + 36);
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i < v3; ++i)
    {
      uint64_t v5 = *(void *)(*(void *)(a1 + 24) + 8 * i);
      if (v5)
      {
        (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
        int v3 = *(_DWORD *)(a1 + 36);
      }
    }
  }
  if (*(void *)(a1 + 24)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100112CD8(uint64_t a1)
{
  sub_100112BCC(a1);

  operator delete();
}

uint64_t sub_100112D10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_100112D18()
{
}

void sub_100112D84()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100112DAC(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 52))
  {
    this = *(void *)(this + 16);
    if (this)
    {
      if (*(unsigned char *)(this + 44))
      {
        *(void *)(this + 16) = 0;
        *(void *)(this + 24) = 0;
        *(void *)(this + 32) = 0;
      }
      uint64_t v2 = *(void *)(this + 8);
      this += 8;
      *(_DWORD *)(this + 36) = 0;
      if (v2) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  if (*(int *)(v1 + 32) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(v1 + 24) + 8 * v3);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 32));
  }
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v5 + 6) = 0;
  *((_DWORD *)v5 + 11) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return this;
}

uint64_t sub_100112E78(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      char v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v8;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v8 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 2) {
        goto LABEL_19;
      }
      *(_DWORD *)(a1 + 52) |= 1u;
      uint64_t v15 = *(void *)(a1 + 16);
      if (!v15) {
        operator new();
      }
      unsigned int v36 = 0;
      char v16 = (char *)*((void *)this + 1);
      if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36))return 0; {
      }
        }
      else
      {
        unsigned int v36 = *v16;
        *((void *)this + 1) = v16 + 1;
      }
      int v17 = *((_DWORD *)this + 14);
      int v18 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v17 + 1;
      if (v17 >= v18) {
        return 0;
      }
      int v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v36);
      if (!sub_10010CB0C(v15, this, v20, v21) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
      int v22 = *((_DWORD *)this + 14);
      BOOL v23 = __OFSUB__(v22, 1);
      int v24 = v22 - 1;
      if (v24 < 0 == v23) {
        *((_DWORD *)this + 14) = v24;
      }
      int v25 = (unsigned char *)*((void *)this + 1);
      if ((unint64_t)v25 < *((void *)this + 2) && *v25 == 18)
      {
        do
        {
          *((void *)this + 1) = v25 + 1;
          int v11 = *(_DWORD *)(a1 + 36);
          uint64_t v12 = *(int *)(a1 + 32);
          if ((int)v12 >= v11) {
            goto LABEL_31;
          }
LABEL_11:
          uint64_t v13 = *(void *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v12 + 1;
          uint64_t v14 = *(void *)(v13 + 8 * v12);
          unsigned int v37 = 0;
          unsigned int v26 = (char *)*((void *)this + 1);
          if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0; {
          }
            }
          else
          {
            unsigned int v37 = *v26;
            *((void *)this + 1) = v26 + 1;
          }
          int v27 = *((_DWORD *)this + 14);
          int v28 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v27 + 1;
          if (v27 >= v28) {
            return 0;
          }
          int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
          if (!sub_100110E58(v14, this, v30, v31) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
          int v32 = *((_DWORD *)this + 14);
          BOOL v23 = __OFSUB__(v32, 1);
          int v33 = v32 - 1;
          if (v33 < 0 == v23) {
            *((_DWORD *)this + 14) = v33;
          }
          int v25 = (unsigned char *)*((void *)this + 1);
          unsigned int v34 = (unsigned char *)*((void *)this + 2);
        }
        while (v25 < v34 && *v25 == 18);
        if (v25 == v34 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v10 = TagFallback & 7;
      if (v10 == 2)
      {
        int v11 = *(_DWORD *)(a1 + 36);
        uint64_t v12 = *(int *)(a1 + 32);
        if ((int)v12 < v11) {
          goto LABEL_11;
        }
LABEL_31:
        if (v11 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v11 + 1);
          int v11 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v11 + 1;
        operator new();
      }
    }
    else
    {
      int v10 = TagFallback & 7;
    }
LABEL_19:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_100113210()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100113238()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100113260(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 52))
  {
    uint64_t v6 = *(void *)(result + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047EA30 + 16);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  int v10 = *(void **)(v5 + 8);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  char v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100113324(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 52))
  {
    uint64_t v6 = *((void *)this + 2);
    if (v6)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v7 = a2 + 1;
      char v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 40);
      if (v8 <= 0x7F)
      {
LABEL_4:
        *((unsigned char *)v4 + 1) = (_BYTE)v8;
        uint64_t v9 = (uint64_t)v4 + 2;
LABEL_7:
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010CDD0(v6, v9, a3);
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v6 = *(void *)(qword_10047EA30 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v7 = a2 + 1;
      char v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v6 + 40);
      if (v8 <= 0x7F) {
        goto LABEL_4;
      }
    }
    uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    goto LABEL_7;
  }
LABEL_8:
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      uint64_t v12 = *(unsigned int **)(*((void *)this + 3) + 8 * v10);
      *(unsigned char *)uint64_t v4 = 18;
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12[15];
      if (v13 > 0x7F)
      {
        int v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)v4 + 1, a3);
      }
      else
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v13;
        int v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      uint64_t v4 = sub_100111658((wireless_diagnostics::google::protobuf::internal::WireFormat *)v12, v11, a3, a4);
      ++v10;
    }
    while (v10 < *((int *)this + 8));
  }
  char v16 = (void *)*((void *)this + 1);
  uint64_t v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v14 = v16;
  if (!v16 || *v14 == v14[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v15, v4, a3);
}

uint64_t sub_100113460(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v5 = *(void *)(a1 + 16);
    if (v5)
    {
      int v6 = *(unsigned __int8 *)(v5 + 44);
      if (*(unsigned char *)(v5 + 44)) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v5 = *(void *)(qword_10047EA30 + 16);
      int v6 = *(unsigned __int8 *)(v5 + 44);
      if (*(unsigned char *)(v5 + 44))
      {
LABEL_6:
        int v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0) {
          v7 += 9;
        }
        if ((v6 & 4) != 0) {
          LODWORD(v8) = v7 + 9;
        }
        else {
          LODWORD(v8) = v7;
        }
        uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
        uint64_t v10 = *(void **)(v5 + 8);
        if (!v10) {
          goto LABEL_18;
        }
LABEL_15:
        if (*v10 != v10[1])
        {
          char v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v9, a2)+ v8);
          *(_DWORD *)(v5 + 40) = v8;
          if (v8 >= 0x80) {
            int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
          }
          else {
            int v11 = 1;
          }
LABEL_20:
          int v12 = *(_DWORD *)(a1 + 32);
          uint64_t v4 = (v12 + v8 + v11 + 1);
          if (v12 < 1) {
            goto LABEL_26;
          }
          goto LABEL_21;
        }
LABEL_18:
        *(_DWORD *)(v5 + 40) = v8;
        int v11 = 1;
        goto LABEL_20;
      }
    }
    LODWORD(v8) = 0;
    uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v10 = *(void **)(v5 + 8);
    if (!v10) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
  int v3 = *(_DWORD *)(a1 + 32);
  uint64_t v4 = v3;
  if (v3 < 1) {
    goto LABEL_26;
  }
LABEL_21:
  uint64_t v13 = 0;
  do
  {
    uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001119BC(*(void *)(*(void *)(a1 + 24) + 8 * v13), a2);
    int v16 = (int)v15;
    if (v15 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    }
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v16 + v4 + v14);
    ++v13;
  }
  while (v13 < *(int *)(a1 + 32));
LABEL_26:
  int v17 = *(void **)(a1 + 8);
  if (v17 && *v17 != v17[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 48) = v4;
  return v4;
}

uint64_t sub_1001135D4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100112A48((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001136B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001136C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001136DC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100113768()
{
  return 1;
}

uint64_t sub_100113770()
{
  uint64_t v0 = qword_10047D880;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10010B3EC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D840;
}

void sub_100113800(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100113814(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
    int v4 = *(_DWORD *)(a2 + 60);
    if (!(_BYTE)v4) {
      goto LABEL_18;
    }
  }
  else
  {
    int v4 = *(_DWORD *)(a2 + 60);
    if (!(_BYTE)v4) {
      goto LABEL_18;
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 60) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047EA38 + 16);
    }
    sub_10010C890(v5, v6);
    int v4 = *(_DWORD *)(a2 + 60);
  }
  if ((v4 & 2) != 0)
  {
    int v11 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 60) |= 2u;
    *(_DWORD *)(a1 + 24) = v11;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 4) == 0)
    {
LABEL_12:
      if ((v4 & 8) == 0) {
        goto LABEL_13;
      }
      goto LABEL_26;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_12;
  }
  int v12 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 60) |= 4u;
  *(_DWORD *)(a1 + 28) = v12;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 8) == 0)
  {
LABEL_13:
    if ((v4 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v13 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 60) |= 8u;
  *(_DWORD *)(a1 + 48) = v13;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x10) == 0)
  {
LABEL_14:
    if ((v4 & 0x20) == 0) {
      goto LABEL_15;
    }
LABEL_28:
    *(_DWORD *)(a1 + 60) |= 0x20u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15) {
      operator new();
    }
    uint64_t v16 = *(void *)(a2 + 32);
    if (v16)
    {
      sub_100111E1C(v15, v16);
      int v4 = *(_DWORD *)(a2 + 60);
      if ((v4 & 0x40) != 0) {
        goto LABEL_35;
      }
    }
    else
    {
      sub_100111E1C(v15, *(void *)(qword_10047EA38 + 32));
      int v4 = *(_DWORD *)(a2 + 60);
      if ((v4 & 0x40) != 0) {
        goto LABEL_35;
      }
    }
LABEL_16:
    if ((v4 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_27:
  char v14 = *(unsigned char *)(a2 + 52);
  *(_DWORD *)(a1 + 60) |= 0x10u;
  *(unsigned char *)(a1 + 52) = v14;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_15:
  if ((v4 & 0x40) == 0) {
    goto LABEL_16;
  }
LABEL_35:
  *(_DWORD *)(a1 + 60) |= 0x40u;
  uint64_t v17 = *(void *)(a1 + 40);
  if (!v17) {
    operator new();
  }
  uint64_t v18 = *(void *)(a2 + 40);
  if (v18)
  {
    sub_100112A48(v17, v18);
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x80) == 0) {
      goto LABEL_18;
    }
LABEL_17:
    char v7 = *(unsigned char *)(a2 + 53);
    *(_DWORD *)(a1 + 60) |= 0x80u;
    *(unsigned char *)(a1 + 53) = v7;
    int v4 = *(_DWORD *)(a2 + 60);
    goto LABEL_18;
  }
  sub_100112A48(v17, *(void *)(qword_10047EA38 + 40));
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x80) != 0) {
    goto LABEL_17;
  }
LABEL_18:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      char v8 = *(unsigned char *)(a2 + 54);
      *(_DWORD *)(a1 + 60) |= 0x100u;
      *(unsigned char *)(a1 + 54) = v8;
      int v4 = *(_DWORD *)(a2 + 60);
    }
    if ((v4 & 0x200) != 0)
    {
      char v9 = *(unsigned char *)(a2 + 55);
      *(_DWORD *)(a1 + 60) |= 0x200u;
      *(unsigned char *)(a1 + 55) = v9;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100113B68()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100113B90()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100113BB8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100113BE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100113BF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100113C08(void *a1)
{
  *a1 = off_100456998;
  if ((void *)qword_10047EA38 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = a1[4];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = a1[5];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100113CF4(void *a1)
{
  *a1 = off_100456998;
  if ((void *)qword_10047EA38 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = a1[4];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = a1[5];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100113DF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + ++*(_DWORD *)(result + 56) = a2;
  return result;
}

uint64_t sub_100113DFC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047EA38;
  if (!qword_10047EA38)
  {
    sub_10010B9D8(0, a2, a3, a4);
    return qword_10047EA38;
  }
  return result;
}

void sub_100113E38()
{
}

void sub_100113EA0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100113EC8(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 60);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(void *)(v1 + 24) = 0;
    *(_DWORD *)(v1 + 48) = 0;
    *(unsigned char *)(v1 + 52) = 0;
    int v4 = *(_DWORD *)(v1 + 60);
    if ((v4 & 0x20) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        this = sub_100112194(this);
        int v4 = *(_DWORD *)(v1 + 60);
      }
    }
    if ((v4 & 0x40) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 40);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 52))
        {
          this = *(void *)(v5 + 16);
          if (this)
          {
            if (*(unsigned char *)(this + 44))
            {
              *(void *)(this + 16) = 0;
              *(void *)(this + 24) = 0;
              *(void *)(this + 32) = 0;
            }
            uint64_t v6 = *(void *)(this + 8);
            this += 8;
            *(_DWORD *)(this + 36) = 0;
            if (v6) {
              this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
            }
          }
        }
        if (*(int *)(v5 + 32) >= 1)
        {
          uint64_t v7 = 0;
          do
          {
            uint64_t v8 = *(void *)(*(void *)(v5 + 24) + 8 * v7);
            this = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 32))(v8);
            ++v7;
          }
          while (v7 < *(int *)(v5 + 32));
        }
        uint64_t v10 = *(void *)(v5 + 8);
        char v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v5 + 8);
        *((_DWORD *)v9 + 6) = 0;
        *((_DWORD *)v9 + 11) = 0;
        if (v10) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v9);
        }
      }
    }
    *(unsigned char *)(v1 + 53) = 0;
    int v2 = *(_DWORD *)(v1 + 60);
  }
  if ((v2 & 0xFF00) != 0) {
    *(_WORD *)(v1 + 54) = 0;
  }
  uint64_t v12 = *(void *)(v1 + 8);
  int v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v11 + 13) = 0;
  if (v12)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v11);
  }
  return this;
}

uint64_t sub_100114030(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 60) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        unsigned int v70 = 0;
        int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70))return 0; {
        }
          }
        else
        {
          unsigned int v70 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v27 = *((_DWORD *)this + 14);
        int v28 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v27 + 1;
        if (v27 >= v28) {
          return 0;
        }
        int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v70);
        if (!sub_10010CB0C(v10, this, v30, v31) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
        int v32 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v32, 1);
        int v34 = v32 - 1;
        if (v34 < 0 == v33) {
          *((_DWORD *)this + 14) = v34;
        }
        int v35 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v35 >= v14 || *v35 != 16) {
          continue;
        }
        uint64_t v15 = v35 + 1;
        *((void *)this + 1) = v15;
        unsigned int v70 = 0;
        if ((unint64_t)v15 >= v14) {
          goto LABEL_55;
        }
LABEL_52:
        int v36 = *v15;
        if (v36 < 0)
        {
LABEL_55:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70);
          if (!result) {
            return result;
          }
          unsigned int v37 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          *(_DWORD *)(a1 + 24) = v70;
          *(_DWORD *)(a1 + 60) |= 2u;
          if ((unint64_t)v37 < v14) {
            goto LABEL_57;
          }
          continue;
        }
        unsigned int v37 = v15 + 1;
        *((void *)this + 1) = v37;
        *(_DWORD *)(a1 + 24) = v36;
        *(_DWORD *)(a1 + 60) |= 2u;
        if ((unint64_t)v37 >= v14) {
          continue;
        }
LABEL_57:
        if (*v37 != 24) {
          continue;
        }
        uint64_t v17 = v37 + 1;
        *((void *)this + 1) = v17;
        unsigned int v70 = 0;
        if ((unint64_t)v17 < v14)
        {
LABEL_59:
          if ((*v17 & 0x80000000) == 0)
          {
            unsigned int v39 = *v17;
            *((void *)this + 1) = v17 + 1;
            if (v39 <= 0xE) {
              goto LABEL_61;
            }
            goto LABEL_64;
          }
        }
LABEL_62:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70);
        if (!result) {
          return result;
        }
        unsigned int v39 = v70;
        if (v70 <= 0xE)
        {
LABEL_61:
          *(_DWORD *)(a1 + 60) |= 4u;
          *(_DWORD *)(a1 + 28) = v39;
          goto LABEL_65;
        }
LABEL_64:
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 3, (int)v39);
LABEL_65:
        int v41 = (unsigned char *)*((void *)this + 1);
        unint64_t v40 = *((void *)this + 2);
        if ((unint64_t)v41 >= v40 || *v41 != 32) {
          continue;
        }
        int v19 = v41 + 1;
        *((void *)this + 1) = v19;
        unsigned int v70 = 0;
        if ((unint64_t)v19 < v40)
        {
LABEL_68:
          if ((*v19 & 0x80000000) == 0)
          {
            unsigned int v42 = *v19;
            *((void *)this + 1) = v19 + 1;
            if (v42 <= 0xE) {
              goto LABEL_70;
            }
            goto LABEL_73;
          }
        }
LABEL_71:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70);
        if (!result) {
          return result;
        }
        unsigned int v42 = v70;
        if (v70 <= 0xE)
        {
LABEL_70:
          *(_DWORD *)(a1 + 60) |= 8u;
          *(_DWORD *)(a1 + 48) = v42;
          goto LABEL_74;
        }
LABEL_73:
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 4, (int)v42);
LABEL_74:
        uint64_t v43 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v43 >= v12 || *v43 != 40) {
          continue;
        }
        int v13 = v43 + 1;
        *((void *)this + 1) = v13;
        unsigned int v70 = 0;
        if ((unint64_t)v13 >= v12) {
          goto LABEL_79;
        }
LABEL_77:
        if ((char)*v13 < 0)
        {
LABEL_79:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70);
          if (!result) {
            return result;
          }
          unsigned int v44 = v70;
          int v45 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          goto LABEL_81;
        }
        unsigned int v44 = *v13;
        int v45 = v13 + 1;
        *((void *)this + 1) = v45;
LABEL_81:
        *(unsigned char *)(a1 + 52) = v44 != 0;
        int v46 = *(_DWORD *)(a1 + 60) | 0x10;
        *(_DWORD *)(a1 + 60) = v46;
        if ((unint64_t)v45 >= v12 || *v45 != 50) {
          continue;
        }
        *((void *)this + 1) = v45 + 1;
        *(_DWORD *)(a1 + 60) = v46 | 0x20;
        uint64_t v20 = *(void *)(a1 + 32);
        if (!v20) {
LABEL_84:
        }
          operator new();
LABEL_85:
        unsigned int v70 = 0;
        int v47 = (char *)*((void *)this + 1);
        if ((unint64_t)v47 >= *((void *)this + 2) || *v47 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70))return 0; {
        }
          }
        else
        {
          unsigned int v70 = *v47;
          *((void *)this + 1) = v47 + 1;
        }
        int v48 = *((_DWORD *)this + 14);
        int v49 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v48 + 1;
        if (v48 >= v49) {
          return 0;
        }
        int v50 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v70);
        if (!sub_100112268(v20, this, v51, v52) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v50);
        int v53 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v53, 1);
        int v54 = v53 - 1;
        if (v54 < 0 == v33) {
          *((_DWORD *)this + 14) = v54;
        }
        uint64_t v55 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v55 >= *((void *)this + 2) || *v55 != 58) {
          continue;
        }
        *((void *)this + 1) = v55 + 1;
        *(_DWORD *)(a1 + 60) |= 0x40u;
        uint64_t v21 = *(void *)(a1 + 40);
        if (!v21) {
LABEL_97:
        }
          operator new();
LABEL_32:
        unsigned int v70 = 0;
        int v22 = (char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70))return 0; {
        }
          }
        else
        {
          unsigned int v70 = *v22;
          *((void *)this + 1) = v22 + 1;
        }
        int v56 = *((_DWORD *)this + 14);
        int v57 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v56 + 1;
        if (v56 < v57)
        {
          int v58 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v70);
          if (sub_100112E78(v21, this, v59, v60))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v58);
              int v61 = *((_DWORD *)this + 14);
              BOOL v33 = __OFSUB__(v61, 1);
              int v62 = v61 - 1;
              if (v62 < 0 == v33) {
                *((_DWORD *)this + 14) = v62;
              }
              int v63 = (unsigned char *)*((void *)this + 1);
              unint64_t v23 = *((void *)this + 2);
              if ((unint64_t)v63 < v23 && *v63 == 64)
              {
                int v24 = v63 + 1;
                *((void *)this + 1) = v24;
LABEL_109:
                unsigned int v70 = 0;
                if ((unint64_t)v24 >= v23 || *v24 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70);
                  if (!result) {
                    return result;
                  }
                  unsigned int v64 = v70;
                  int v65 = (unsigned char *)*((void *)this + 1);
                  unint64_t v23 = *((void *)this + 2);
                }
                else
                {
                  unsigned int v64 = *v24;
                  int v65 = v24 + 1;
                  *((void *)this + 1) = v65;
                }
                *(unsigned char *)(a1 + 53) = v64 != 0;
                *(_DWORD *)(a1 + 60) |= 0x80u;
                if ((unint64_t)v65 < v23 && *v65 == 72)
                {
                  int v25 = v65 + 1;
                  *((void *)this + 1) = v25;
LABEL_117:
                  unsigned int v70 = 0;
                  if ((unint64_t)v25 >= v23 || *v25 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70);
                    if (!result) {
                      return result;
                    }
                    unsigned int v66 = v70;
                    int v67 = (unsigned char *)*((void *)this + 1);
                    unint64_t v23 = *((void *)this + 2);
                  }
                  else
                  {
                    unsigned int v66 = *v25;
                    int v67 = v25 + 1;
                    *((void *)this + 1) = v67;
                  }
                  *(unsigned char *)(a1 + 54) = v66 != 0;
                  *(_DWORD *)(a1 + 60) |= 0x100u;
                  if ((unint64_t)v67 < v23 && *v67 == 80)
                  {
                    unsigned int v26 = v67 + 1;
                    *((void *)this + 1) = v26;
LABEL_125:
                    unsigned int v70 = 0;
                    if ((unint64_t)v26 >= v23 || *v26 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v70);
                      if (!result) {
                        return result;
                      }
                      unsigned int v68 = v70;
                      int v69 = (unsigned __int8 *)*((void *)this + 1);
                      unint64_t v23 = *((void *)this + 2);
                    }
                    else
                    {
                      unsigned int v68 = *v26;
                      int v69 = (unsigned __int8 *)(v26 + 1);
                      *((void *)this + 1) = v69;
                    }
                    *(unsigned char *)(a1 + 55) = v68 != 0;
                    *(_DWORD *)(a1 + 60) |= 0x200u;
                    if (v69 == (unsigned __int8 *)v23
                      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                    {
                      *((_DWORD *)this + 8) = 0;
                      uint64_t result = 1;
                      *((unsigned char *)this + 36) = 1;
                      return result;
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        unsigned int v70 = 0;
        if ((unint64_t)v15 >= v14) {
          goto LABEL_55;
        }
        goto LABEL_52;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        unsigned int v70 = 0;
        if ((unint64_t)v17 >= v16) {
          goto LABEL_62;
        }
        goto LABEL_59;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        unsigned int v70 = 0;
        if ((unint64_t)v19 >= v18) {
          goto LABEL_71;
        }
        goto LABEL_68;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        int v13 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        unsigned int v70 = 0;
        if ((unint64_t)v13 >= v12) {
          goto LABEL_79;
        }
        goto LABEL_77;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 60) |= 0x20u;
        uint64_t v20 = *(void *)(a1 + 32);
        if (!v20) {
          goto LABEL_84;
        }
        goto LABEL_85;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 60) |= 0x40u;
        uint64_t v21 = *(void *)(a1 + 40);
        if (v21) {
          goto LABEL_32;
        }
        goto LABEL_97;
      case 8u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_109;
      case 9u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        int v25 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_117;
      case 0xAu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        unsigned int v26 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_125;
      default:
        int v9 = TagFallback & 7;
LABEL_39:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_1001148D8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100114900()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100114928()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100114978(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 60);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 60);
      if ((v6 & 2) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047EA38 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 60);
      if ((v6 & 2) != 0) {
        goto LABEL_17;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_18;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 48), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 52), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_25:
    uint64_t v12 = *(void *)(v5 + 40);
    if (v12)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v12, a2, a4);
      int v6 = *(_DWORD *)(v5 + 60);
      if ((v6 & 0x80) != 0) {
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(qword_10047EA38 + 40), a2, a4);
      int v6 = *(_DWORD *)(v5 + 60);
      if ((v6 & 0x80) != 0) {
        goto LABEL_29;
      }
    }
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_30;
  }
LABEL_21:
  uint64_t v11 = *(void *)(v5 + 32);
  if (v11)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v11, a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 0x40) != 0) {
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(qword_10047EA38 + 32), a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 0x40) != 0) {
      goto LABEL_25;
    }
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    goto LABEL_9;
  }
LABEL_29:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 53), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 54), (BOOL)a2, a4);
  if ((*(_DWORD *)(v5 + 60) & 0x200) == 0)
  {
LABEL_11:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 55), (BOOL)a2, a4);
  int v13 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v13;
  if (!v13) {
    return result;
  }
LABEL_32:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100114B6C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v4 = a2;
  int v6 = *((_DWORD *)this + 15);
  if (v6)
  {
    uint64_t v8 = *((void *)this + 2);
    if (v8)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v9 = a2 + 1;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v8 + 40);
      if (v10 <= 0x7F) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v8 = *(void *)(qword_10047EA38 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v9 = a2 + 1;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v8 + 40);
      if (v10 <= 0x7F)
      {
LABEL_10:
        *((unsigned char *)v4 + 1) = (_BYTE)v10;
        int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010CDD0(v8, (uint64_t)v4 + 2, a3);
        if ((*((_DWORD *)this + 15) & 2) != 0) {
          goto LABEL_14;
        }
LABEL_3:
        if ((*((unsigned char *)this + 60) & 4) == 0) {
          goto LABEL_4;
        }
LABEL_21:
        uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 7);
        *(unsigned char *)int v4 = 24;
        unint64_t v16 = (unint64_t)v4 + 1;
        if ((v15 & 0x80000000) != 0)
        {
          int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v15, v16, a3);
          if ((*((unsigned char *)this + 60) & 8) != 0) {
            goto LABEL_28;
          }
        }
        else if (v15 > 0x7F)
        {
          int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, v16, a3);
          if ((*((unsigned char *)this + 60) & 8) != 0) {
            goto LABEL_28;
          }
        }
        else
        {
          *((unsigned char *)v4 + 1) = (_BYTE)v15;
          int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
          if ((*((unsigned char *)this + 60) & 8) != 0) {
            goto LABEL_28;
          }
        }
LABEL_5:
        int v7 = *((_DWORD *)this + 15);
        if ((v7 & 0x10) == 0) {
          goto LABEL_6;
        }
LABEL_35:
        char v19 = *((unsigned char *)this + 52);
        *(unsigned char *)int v4 = 40;
        *((unsigned char *)v4 + 1) = v19;
        int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
        if ((*((_DWORD *)this + 15) & 0x20) == 0) {
          goto LABEL_54;
        }
        goto LABEL_36;
      }
    }
    uint64_t v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, v9, a3);
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10010CDD0(v8, v11, v12);
    if ((*((_DWORD *)this + 15) & 2) != 0) {
      goto LABEL_14;
    }
    goto LABEL_3;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_14:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 6);
  *(unsigned char *)int v4 = 16;
  unint64_t v14 = (unint64_t)v4 + 1;
  if ((v13 & 0x80000000) != 0)
  {
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v13, v14, a3);
    if ((*((unsigned char *)this + 60) & 4) != 0) {
      goto LABEL_21;
    }
  }
  else if (v13 > 0x7F)
  {
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v14, a3);
    if ((*((unsigned char *)this + 60) & 4) != 0) {
      goto LABEL_21;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v13;
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((*((unsigned char *)this + 60) & 4) != 0) {
      goto LABEL_21;
    }
  }
LABEL_4:
  if ((*((unsigned char *)this + 60) & 8) == 0) {
    goto LABEL_5;
  }
LABEL_28:
  uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 12);
  *(unsigned char *)int v4 = 32;
  unint64_t v18 = (unint64_t)v4 + 1;
  if ((v17 & 0x80000000) != 0)
  {
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v17, v18, a3);
    int v7 = *((_DWORD *)this + 15);
    if ((v7 & 0x10) != 0) {
      goto LABEL_35;
    }
  }
  else if (v17 > 0x7F)
  {
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, v18, a3);
    int v7 = *((_DWORD *)this + 15);
    if ((v7 & 0x10) != 0) {
      goto LABEL_35;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v17;
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    int v7 = *((_DWORD *)this + 15);
    if ((v7 & 0x10) != 0) {
      goto LABEL_35;
    }
  }
LABEL_6:
  if ((v7 & 0x20) == 0) {
    goto LABEL_54;
  }
LABEL_36:
  uint64_t v20 = *((void *)this + 4);
  if (v20)
  {
    *(unsigned char *)int v4 = 50;
    unsigned int v21 = v4 + 1;
    int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v20 + 28);
    if (v22 <= 0x7F) {
      goto LABEL_38;
    }
LABEL_41:
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, v21, a3);
    int v23 = *(_DWORD *)(v20 + 32);
    if ((v23 & 1) == 0) {
      goto LABEL_43;
    }
    goto LABEL_42;
  }
  uint64_t v20 = *(void *)(qword_10047EA38 + 32);
  *(unsigned char *)int v4 = 50;
  unsigned int v21 = v4 + 1;
  int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v20 + 28);
  if (v22 > 0x7F) {
    goto LABEL_41;
  }
LABEL_38:
  *((unsigned char *)v4 + 1) = (_BYTE)v22;
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  int v23 = *(_DWORD *)(v20 + 32);
  if (v23)
  {
LABEL_42:
    char v24 = *(unsigned char *)(v20 + 24);
    *(unsigned char *)int v4 = 8;
    *((unsigned char *)v4 + 1) = v24;
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    int v23 = *(_DWORD *)(v20 + 32);
  }
LABEL_43:
  if ((v23 & 2) == 0)
  {
    int v27 = *(void **)(v20 + 8);
    unsigned int v26 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v20 + 8);
    int v25 = v27;
    if (!v27) {
      goto LABEL_54;
    }
    goto LABEL_52;
  }
  int v28 = *(unsigned int **)(v20 + 16);
  if (v28)
  {
    *(unsigned char *)int v4 = 18;
    unsigned int v29 = v4 + 1;
    uint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v28[15];
    if (v30 <= 0x7F) {
      goto LABEL_48;
    }
  }
  else
  {
    int v28 = *(unsigned int **)(qword_10047EA28 + 16);
    *(unsigned char *)int v4 = 18;
    unsigned int v29 = v4 + 1;
    uint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v28[15];
    if (v30 <= 0x7F)
    {
LABEL_48:
      *((unsigned char *)v4 + 1) = (_BYTE)v30;
      int v4 = sub_100111658((wireless_diagnostics::google::protobuf::internal::WireFormat *)v28, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3, a4);
      unsigned int v31 = *(void **)(v20 + 8);
      unsigned int v26 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v20 + 8);
      int v25 = v31;
      if (!v31) {
        goto LABEL_54;
      }
      goto LABEL_52;
    }
  }
  int v32 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v30, v29, a3);
  int v4 = sub_100111658((wireless_diagnostics::google::protobuf::internal::WireFormat *)v28, v32, v33, v34);
  int v35 = *(void **)(v20 + 8);
  unsigned int v26 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v20 + 8);
  int v25 = v35;
  if (!v35) {
    goto LABEL_54;
  }
LABEL_52:
  if (*v25 != v25[1]) {
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v26, v4, a3);
  }
LABEL_54:
  int v36 = *((_DWORD *)this + 15);
  if ((v36 & 0x40) != 0)
  {
    unint64_t v40 = (unsigned int *)*((void *)this + 5);
    if (v40)
    {
      *(unsigned char *)int v4 = 58;
      unsigned int v41 = v4 + 1;
      unsigned int v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v40[12];
      if (v42 <= 0x7F) {
        goto LABEL_62;
      }
    }
    else
    {
      unint64_t v40 = *(unsigned int **)(qword_10047EA38 + 40);
      *(unsigned char *)int v4 = 58;
      unsigned int v41 = v4 + 1;
      unsigned int v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v40[12];
      if (v42 <= 0x7F)
      {
LABEL_62:
        *((unsigned char *)v4 + 1) = (_BYTE)v42;
        int v4 = sub_100113324((wireless_diagnostics::google::protobuf::internal::WireFormat *)v40, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3, a4);
        int v36 = *((_DWORD *)this + 15);
        if ((v36 & 0x80) != 0) {
          goto LABEL_66;
        }
LABEL_56:
        if ((v36 & 0x100) == 0) {
          goto LABEL_57;
        }
        goto LABEL_67;
      }
    }
    uint64_t v43 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v42, v41, a3);
    int v4 = sub_100113324((wireless_diagnostics::google::protobuf::internal::WireFormat *)v40, v43, v44, v45);
    int v36 = *((_DWORD *)this + 15);
    if ((v36 & 0x80) != 0) {
      goto LABEL_66;
    }
    goto LABEL_56;
  }
  if ((v36 & 0x80) == 0) {
    goto LABEL_56;
  }
LABEL_66:
  char v46 = *((unsigned char *)this + 53);
  *(unsigned char *)int v4 = 64;
  *((unsigned char *)v4 + 1) = v46;
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  int v36 = *((_DWORD *)this + 15);
  if ((v36 & 0x100) == 0)
  {
LABEL_57:
    if ((v36 & 0x200) == 0) {
      goto LABEL_58;
    }
    goto LABEL_68;
  }
LABEL_67:
  char v47 = *((unsigned char *)this + 54);
  *(unsigned char *)int v4 = 72;
  *((unsigned char *)v4 + 1) = v47;
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  if ((*((_DWORD *)this + 15) & 0x200) == 0)
  {
LABEL_58:
    unsigned int v39 = (void *)*((void *)this + 1);
    unsigned int v38 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    unsigned int v37 = v39;
    if (!v39) {
      return v4;
    }
    goto LABEL_69;
  }
LABEL_68:
  char v48 = *((unsigned char *)this + 55);
  *(unsigned char *)int v4 = 80;
  *((unsigned char *)v4 + 1) = v48;
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  int v49 = (void *)*((void *)this + 1);
  unsigned int v38 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  unsigned int v37 = v49;
  if (!v49) {
    return v4;
  }
LABEL_69:
  if (*v37 == v37[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v38, v4, a3);
}

uint64_t sub_100114FB4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 60);
  if (!(_BYTE)v3)
  {
    unsigned int v5 = 0;
    goto LABEL_88;
  }
  if (v3)
  {
    uint64_t v6 = *(void *)(a1 + 16);
    if (v6)
    {
      int v7 = *(unsigned __int8 *)(v6 + 44);
      if (*(unsigned char *)(v6 + 44)) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v6 = *(void *)(qword_10047EA38 + 16);
      int v7 = *(unsigned __int8 *)(v6 + 44);
      if (*(unsigned char *)(v6 + 44))
      {
LABEL_8:
        int v8 = (v7 << 31 >> 31) & 9;
        if ((v7 & 2) != 0) {
          v8 += 9;
        }
        if ((v7 & 4) != 0) {
          int v9 = v8 + 9;
        }
        else {
          int v9 = v8;
        }
        uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v6 + 8);
        uint64_t v11 = *(void **)(v6 + 8);
        if (!v11) {
          goto LABEL_21;
        }
        goto LABEL_17;
      }
    }
    int v9 = 0;
    uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v6 + 8);
    uint64_t v11 = *(void **)(v6 + 8);
    if (!v11) {
      goto LABEL_21;
    }
LABEL_17:
    if (*v11 != v11[1])
    {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v10, a2)+ v9);
      *(_DWORD *)(v6 + 40) = v12;
      if (v12 >= 0x80)
      {
        int v4 = v12
           + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2)
           + 1;
        int v3 = *(_DWORD *)(a1 + 60);
        if ((v3 & 2) == 0) {
          goto LABEL_30;
        }
      }
      else
      {
        int v4 = v12 + 2;
        int v3 = *(_DWORD *)(a1 + 60);
        if ((v3 & 2) == 0) {
          goto LABEL_30;
        }
      }
      goto LABEL_24;
    }
LABEL_21:
    *(_DWORD *)(v6 + 40) = v9;
    int v4 = v9 + 2;
    int v3 = *(_DWORD *)(a1 + 60);
    if ((v3 & 2) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
  int v4 = 0;
  if ((v3 & 2) == 0) {
    goto LABEL_30;
  }
LABEL_24:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if ((v13 & 0x80000000) != 0)
  {
    int v14 = 10;
  }
  else if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    int v3 = *(_DWORD *)(a1 + 60);
  }
  else
  {
    int v14 = 1;
  }
  v4 += v14 + 1;
LABEL_30:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_32;
    }
LABEL_45:
    unint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if ((v18 & 0x80000000) != 0)
    {
      int v20 = v4 + 11;
      if ((v3 & 0x10) != 0) {
        int v15 = v20 + 2;
      }
      else {
        int v15 = v20;
      }
      if ((v3 & 0x20) != 0) {
        goto LABEL_61;
      }
    }
    else if (v18 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
      int v3 = *(_DWORD *)(a1 + 60);
      int v22 = v21 + 1 + v4;
      if ((v3 & 0x10) != 0) {
        int v15 = v22 + 2;
      }
      else {
        int v15 = v22;
      }
      if ((v3 & 0x20) != 0) {
        goto LABEL_61;
      }
    }
    else
    {
      int v19 = v4 + 2;
      if ((v3 & 0x10) != 0) {
        int v15 = v19 + 2;
      }
      else {
        int v15 = v19;
      }
      if ((v3 & 0x20) != 0) {
        goto LABEL_61;
      }
    }
LABEL_36:
    if ((v3 & 0x40) == 0) {
      goto LABEL_86;
    }
LABEL_80:
    uint64_t v31 = *(void *)(a1 + 40);
    if (v31)
    {
      int v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100113460(v31, a2);
      if (v32 < 0x80)
      {
LABEL_82:
        int v33 = 1;
LABEL_85:
        v15 += v32 + v33 + 1;
        int v3 = *(_DWORD *)(a1 + 60);
        goto LABEL_86;
      }
    }
    else
    {
      int v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100113460(*(void *)(qword_10047EA38 + 40), a2);
      if (v32 < 0x80) {
        goto LABEL_82;
      }
    }
    int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32, a2);
    goto LABEL_85;
  }
  unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
  if ((v16 & 0x80000000) != 0)
  {
    v4 += 11;
    if ((v3 & 8) != 0) {
      goto LABEL_45;
    }
  }
  else if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
    int v3 = *(_DWORD *)(a1 + 60);
    v4 += v17 + 1;
    if ((v3 & 8) != 0) {
      goto LABEL_45;
    }
  }
  else
  {
    v4 += 2;
    if ((v3 & 8) != 0) {
      goto LABEL_45;
    }
  }
LABEL_32:
  if ((v3 & 0x10) != 0) {
    int v15 = v4 + 2;
  }
  else {
    int v15 = v4;
  }
  if ((v3 & 0x20) == 0) {
    goto LABEL_36;
  }
LABEL_61:
  uint64_t v23 = *(void *)(a1 + 32);
  if (v23)
  {
    int v24 = *(_DWORD *)(v23 + 32);
    if ((_BYTE)v24) {
      goto LABEL_63;
    }
LABEL_68:
    int v25 = 0;
LABEL_69:
    unsigned int v29 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v23 + 8);
    uint64_t v30 = *(void **)(v23 + 8);
    if (!v30) {
      goto LABEL_76;
    }
    goto LABEL_74;
  }
  uint64_t v23 = *(void *)(qword_10047EA38 + 32);
  int v24 = *(_DWORD *)(v23 + 32);
  if (!(_BYTE)v24) {
    goto LABEL_68;
  }
LABEL_63:
  int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(2 * (v24 & 1u));
  if ((v24 & 2) == 0) {
    goto LABEL_69;
  }
  uint64_t v26 = *(void *)(v23 + 16);
  if (v26)
  {
    int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001119BC(v26, a2);
    if (v27 < 0x80)
    {
LABEL_66:
      int v28 = 1;
      goto LABEL_73;
    }
  }
  else
  {
    int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001119BC(*(void *)(qword_10047EA28 + 16), a2);
    if (v27 < 0x80) {
      goto LABEL_66;
    }
  }
  int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2);
LABEL_73:
  int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((v25 | 1)
                                                                        + v27
                                                                        + v28);
  unsigned int v29 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v23 + 8);
  uint64_t v30 = *(void **)(v23 + 8);
  if (!v30) {
    goto LABEL_76;
  }
LABEL_74:
  if (*v30 != v30[1]) {
    int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v29, a2)+ v25);
  }
LABEL_76:
  *(_DWORD *)(v23 + 28) = v25;
  if (v25 >= 0x80)
  {
    v15 += v25
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2)
         + 1;
    int v3 = *(_DWORD *)(a1 + 60);
    if ((v3 & 0x40) == 0) {
      goto LABEL_86;
    }
    goto LABEL_80;
  }
  v15 += v25 + 2;
  int v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 0x40) != 0) {
    goto LABEL_80;
  }
LABEL_86:
  unsigned int v5 = v15 + 2;
  if ((v3 & 0x80) == 0) {
    unsigned int v5 = v15;
  }
LABEL_88:
  unsigned int v34 = v5 + 2;
  if ((v3 & 0x100) == 0) {
    unsigned int v34 = v5;
  }
  if ((v3 & 0x200) != 0) {
    v34 += 2;
  }
  if ((v3 & 0xFF00) != 0) {
    uint64_t v35 = v34;
  }
  else {
    uint64_t v35 = v5;
  }
  int v36 = *(void **)(a1 + 8);
  if (v36 && *v36 != v36[1]) {
    uint64_t v35 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v35;
  }
  *(_DWORD *)(a1 + ++*(_DWORD *)(result + 56) = v35;
  return v35;
}

uint64_t sub_100115384(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100113814((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100115464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100115478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011548C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100115518()
{
  return 1;
}

uint64_t sub_100115520()
{
  uint64_t v0 = qword_10047D880;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10010B3EC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D850;
}

void sub_1001155B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001155C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001155CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1001155D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1001155DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1001155E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1001155EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_1001155F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1001155FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_100115604(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_10011560C(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_10010D1B4(*(void *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_10011572C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100115754(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_10010EDBC(*(void *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_100115874()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10011589C(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_1001109C4(*(void *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_1001159D0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001159FC()
{
  uint64_t v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_100115BB4();
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  std::string __p = operator new(0x19uLL);
  long long v3 = xmmword_1003E6DB0;
  strcpy((char *)__p, "CLPVisionLogEntry.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  operator delete(__p);
  if (!FileByName)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  }
  qword_10047D898 = *(void *)(FileByName + 80);
  operator new();
}

void sub_100115B4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100115B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100115B74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100115BB4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10047D888 & 1) == 0)
  {
    byte_10047D888 = 1;
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/protobuf/clpsensorsurvey/Proto/CLPVisionLogEntry.pb.cc", a4);
    sub_1000E6AE4(v4, v5, v6, v7);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n\x17CLPVisionLogEntry.proto\x12\x19proto.CLP.LogEntry.Vision\x1A\x14CLPVisionEvent.proto\"\xB3\x02\n\bLogEntry\x12C\n\x10ar_session_state\x18\x01 \x01(\x0E2).proto.CLP.LogEntry.Vision.ARSessionState\x12@\n\x0Evio_estimation\x18\x02 \x01(\v2(.proto.CLP.LogEntry.Vision.VIOEstimation\x12O\n\x16lsl_heading_estimation\x18\x03 \x01(\v2/.proto.CLP.LogEntry.Vision.LSLHeadingEstimation\x12O\n\x16vl_localization_result\x18\x04 \x01(\v2/.proto.CLP.LogEntry.Vision.VLLocalizationResult", (const void *)0x180, v8);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_100115CCC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100115CF4()
{
  if (qword_10047EA40) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EA40 + 8))(qword_10047EA40);
  }
  uint64_t result = qword_10047D8A0;
  if (qword_10047D8A0)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10047D8A0 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_100115D7C()
{
  uint64_t v0 = qword_10047D8A8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001159FC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  if (!qword_10047EA40) {
    sub_100115BB4();
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_100115E3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100115E50(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
    LOBYTE(v4) = *(unsigned char *)(a2 + 48);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 48);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    int v5 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 48) |= 1u;
    *(_DWORD *)(a1 + 40) = v5;
    int v4 = *(_DWORD *)(a2 + 48);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 48) |= 2u;
    uint64_t v6 = *(void *)(a1 + 16);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_10047EA40 + 16);
    }
    sub_1000EEE60(v6, v7);
    int v4 = *(_DWORD *)(a2 + 48);
  }
  if ((v4 & 4) != 0)
  {
    *(_DWORD *)(a1 + 48) |= 4u;
    int v8 = *(_DWORD **)(a1 + 24);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = *(void *)(a2 + 24);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10047EA40 + 24);
    }
    sub_1000F6E00(v8, v9);
    int v4 = *(_DWORD *)(a2 + 48);
  }
  if ((v4 & 8) != 0)
  {
    *(_DWORD *)(a1 + 48) |= 8u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 32);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_10047EA40 + 32);
    }
    sub_1000FA1CC(v10, v11);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100116038()
{
}

void sub_10011605C()
{
}

void sub_100116080()
{
}

void sub_1001160A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001160B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001160CC(void *a1)
{
  *a1 = off_100456B20;
  if ((void *)qword_10047EA40 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = a1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = a1[4];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001161B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 44) = a2;
  return result;
}

uint64_t sub_1001161C0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047EA40;
  if (!qword_10047EA40)
  {
    sub_100115BB4(0, a2, a3, a4);
    return qword_10047EA40;
  }
  return result;
}

void sub_1001161FC()
{
}

void sub_10011626C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100116294(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 48);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 40) = -1;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        this = sub_1000EF934(this);
        int v2 = *(_DWORD *)(v1 + 48);
      }
    }
    if ((v2 & 4) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this)
      {
        this = sub_1000F7174(this);
        int v2 = *(_DWORD *)(v1 + 48);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this) {
        this = sub_1000FA97C(this);
      }
    }
  }
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 10) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_100116328(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        unsigned int v45 = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || (int v11 = *v10, v11 < 0))
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45);
          if (!result) {
            return result;
          }
          signed int v12 = v45;
          if (sub_1000E84F0(v45))
          {
LABEL_12:
            *(_DWORD *)(a1 + 48) |= 1u;
            *(_DWORD *)(a1 + 40) = v12;
            goto LABEL_29;
          }
        }
        else
        {
          signed int v12 = *v10;
          *((void *)this + 1) = v10 + 1;
          if (sub_1000E84F0(v11)) {
            goto LABEL_12;
          }
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, v12);
LABEL_29:
        unint64_t v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 18) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
        *(_DWORD *)(a1 + 48) |= 2u;
        uint64_t v13 = *(void *)(a1 + 16);
        if (!v13) {
LABEL_32:
        }
          operator new();
LABEL_16:
        unsigned int v45 = 0;
        int v14 = (char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0; {
        }
          }
        else
        {
          unsigned int v45 = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        int v19 = *((_DWORD *)this + 14);
        int v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
        if (!sub_1000EFC24(v13, this, v22, v23) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
        int v24 = *((_DWORD *)this + 14);
        BOOL v25 = __OFSUB__(v24, 1);
        int v26 = v24 - 1;
        if (v26 < 0 == v25) {
          *((_DWORD *)this + 14) = v26;
        }
        int v27 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v27 >= *((void *)this + 2) || *v27 != 26) {
          continue;
        }
        *((void *)this + 1) = v27 + 1;
        *(_DWORD *)(a1 + 48) |= 4u;
        int v15 = *(int **)(a1 + 24);
        if (!v15) {
LABEL_44:
        }
          operator new();
LABEL_20:
        unsigned int v45 = 0;
        unint64_t v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0; {
        }
          }
        else
        {
          unsigned int v45 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        int v28 = *((_DWORD *)this + 14);
        int v29 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v28 + 1;
        if (v28 >= v29) {
          return 0;
        }
        int v30 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
        if (!sub_1000F7224(v15, this, v31, v32) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v30);
        int v33 = *((_DWORD *)this + 14);
        BOOL v25 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v25) {
          *((_DWORD *)this + 14) = v34;
        }
        uint64_t v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 34) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
LABEL_56:
        *(_DWORD *)(a1 + 48) |= 8u;
        uint64_t v36 = *(void *)(a1 + 32);
        if (!v36) {
          operator new();
        }
        unsigned int v45 = 0;
        unsigned int v37 = (char *)*((void *)this + 1);
        if ((unint64_t)v37 >= *((void *)this + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v45))return 0; {
        }
          }
        else
        {
          unsigned int v45 = *v37;
          *((void *)this + 1) = v37 + 1;
        }
        int v38 = *((_DWORD *)this + 14);
        int v39 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0;
        }
        int v40 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v45);
        if (!sub_1000FAB64(v36, this, v41, v42) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v40);
        int v43 = *((_DWORD *)this + 14);
        BOOL v25 = __OFSUB__(v43, 1);
        int v44 = v43 - 1;
        if (v44 < 0 == v25) {
          *((_DWORD *)this + 14) = v44;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_23;
        }
        *(_DWORD *)(a1 + 48) |= 2u;
        uint64_t v13 = *(void *)(a1 + 16);
        if (v13) {
          goto LABEL_16;
        }
        goto LABEL_32;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_23;
        }
        *(_DWORD *)(a1 + 48) |= 4u;
        int v15 = *(int **)(a1 + 24);
        if (v15) {
          goto LABEL_20;
        }
        goto LABEL_44;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_23;
        }
        goto LABEL_56;
      default:
        int v9 = TagFallback & 7;
LABEL_23:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

void sub_100116818()
{
}

void sub_10011683C()
{
}

void sub_100116860()
{
}

uint64_t sub_100116894(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 40), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_12:
      uint64_t v11 = *(void *)(v5 + 24);
      if (v11)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v11, a2, a4);
        if ((*(_DWORD *)(v5 + 48) & 8) != 0) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(qword_10047EA40 + 24), a2, a4);
        if ((*(_DWORD *)(v5 + 48) & 8) != 0) {
          goto LABEL_16;
        }
      }
LABEL_5:
      int v9 = *(void **)(v5 + 8);
      int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
      uint64_t v7 = v9;
      if (!v9) {
        return result;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v10 = *(void *)(v5 + 16);
  if (v10)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v10, a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 4) != 0) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(qword_10047EA40 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 4) != 0) {
      goto LABEL_12;
    }
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    goto LABEL_5;
  }
LABEL_16:
  uint64_t v12 = *(void *)(v5 + 32);
  if (v12)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v12, a2, a4);
    uint64_t v13 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v13;
    if (!v13) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(qword_10047EA40 + 32), a2, a4);
    int v14 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v14;
    if (!v14) {
      return result;
    }
  }
LABEL_20:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_1001169E0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100115E50((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100116AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100116AD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100116AE8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100116B74()
{
  return 1;
}

uint64_t sub_100116B7C()
{
  uint64_t v0 = qword_10047D8A8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001159FC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D898;
}

void sub_100116C0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100116C20(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_100116C2C()
{
  uint64_t v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_100116F6C();
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  std::string __p = operator new(0x20uLL);
  long long v3 = xmmword_1003E7240;
  strcpy((char *)__p, "CLPPipelinedOutput.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  operator delete(__p);
  if (!FileByName)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  }
  qword_10047D8C0 = *(void *)(FileByName + 80);
  operator new();
}

void sub_100116EF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100116F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100116F20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100116F6C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10047D8B0 & 1) == 0)
  {
    byte_10047D8B0 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/protobuf/clpsensorsurvey/Proto/CLPPipelinedOutput.pb.cc", a4);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n\x18CLPPipelinedOutput.proto\x12\x1Cproto.CLP.LogEntry.Pipelined\"\x8A\x01\n\tTimeStamp\x12\x1A\n\x12cf_absolute_time_s\x18\x01 \x01(\x01\x12\x1C\n\x14mach_absolute_time_s\x18\x02 \x01(\x01\x12\x1E\n\x16mach_continuous_time_s\x18\x03 \x01(\x01\x12#\n\x1Bpipelined_monotonic_time_ns\x18\x04 \x01(\x03\"T\n\x1BIndoorOutdoorClassification\x12\x19\n\x11indoor_likelihood\x18\x01 \x01(\x01\x12\x1A\n\x12outdoor_likelihood\x18\x02 \x01(\x01\"\x95\x04\n'CoarseIndoorOutdoorClassificationResult\x12\x10\n\bfloor_id\x18\x01 \x01(\t\x12J\n\aoverall\x18\x02 \x01(\v29.proto.CLP.LogEntry.Pipelined.IndoorOutdoorClassification\x12F\n\x03gps\x18\x03 \x01(\v29.proto.CLP.LogEntry.Pipelined.IndoorOutdoorClassification\x12G\n\x04wifi\x18\x04 \x01(\v29.proto.CLP.LogEntry.Pipelined.IndoorOutdoorClassification\x12I\n"
                                                                "\x06z_axis\x18\x05 \x01(\v29.proto.CLP.LogEntry.Pipeline"
                                                                "d.IndoorOutdoorClassification\x12U\n"
                                                                "\x12cl_outdoor_service\x18\x06 \x01(\v29.proto.CLP.LogEn"
                                                                "try.Pipelined.IndoorOutdoorClassification\x12Y\n"
                                                                "\x16raw_cl_outdoor_service\x18\a \x01(\v29.proto.CLP.Log"
                                                                "Entry.Pipelined.IndoorOutdoorClassification\"\xDD\x01\n"
                                                                "\x0FPipelinedOutput\x12:\n"
                                                                "\ttimestamp\x18\x01 \x01(\v2'.proto.CLP.LogEntry.Pipelin"
                                                                "ed.TimeStamp\x12 \n"
                                                                "\x18pose_estimate_thrift_bin\x18\x02 \x01(\f\x12l\n"
                                                                "\x1Dcoarse_indoor_outdoor_results\x18\x03 \x03(\v2E.prot"
                                                                "o.CLP.LogEntry.Pipelined.CoarseIndoorOutdoorClassificationResult",
      (const void *)0x413,
      v4);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_100117224()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100117250()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10011727C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001172A8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001172D4()
{
  if (qword_10047EA48) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EA48 + 8))(qword_10047EA48);
  }
  if (qword_10047D8C8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D8C8 + 8))(qword_10047D8C8);
  }
  if (qword_10047EA50) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EA50 + 8))(qword_10047EA50);
  }
  if (qword_10047D8D8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D8D8 + 8))(qword_10047D8D8);
  }
  if (qword_10047EA58) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EA58 + 8))(qword_10047EA58);
  }
  if (qword_10047D8E8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D8E8 + 8))(qword_10047D8E8);
  }
  if (qword_10047EA60) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EA60 + 8))(qword_10047EA60);
  }
  uint64_t result = qword_10047D8F8;
  if (qword_10047D8F8)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10047D8F8 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_10011747C()
{
  uint64_t v0 = qword_10047D900;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v5[1] = sub_100116C2C;
    char v6 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v5);
  }
  if (!qword_10047EA48) {
    ((void (*)(void))sub_100116F6C)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EA50) {
    sub_100116F6C(v1);
  }
  uint64_t v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EA58) {
    sub_100116F6C(v2);
  }
  uint64_t v3 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EA60) {
    sub_100116F6C(v3);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_1001175A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001175BC(uint64_t a1)
{
  *(void *)a1 = off_100456DF8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + ++*(_DWORD *)(result + 56) = 0;
  return a1;
}

void sub_100117618(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10011762C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 52);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 52))
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_12:
      uint64_t v9 = *(void *)(a2 + 32);
      *(_DWORD *)(a1 + 52) |= 4u;
      *(void *)(a1 + 32) = v9;
      if ((*(_DWORD *)(a2 + 52) & 8) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_8;
    }
  }
  else if ((*(unsigned char *)(a2 + 52) & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 52) |= 2u;
  *(void *)(a1 + 24) = v8;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_7:
  if ((v4 & 8) != 0)
  {
LABEL_8:
    uint64_t v5 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 52) |= 8u;
    *(void *)(a1 + 40) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10011772C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100117740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100117754(uint64_t a1)
{
  *(void *)a1 = off_100456BE8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001177A8(uint64_t a1)
{
  *(void *)a1 = off_100456BE8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100117810(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_100117818()
{
}

void sub_100117880()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001178A8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 52))
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 11) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001178CC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_26;
        }
        unint64_t v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v20;
        *(_DWORD *)(a1 + 52) |= 1u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_26;
        }
LABEL_15:
        unint64_t v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v20;
        *(_DWORD *)(a1 + 52) |= 2u;
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 25) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_20:
        unint64_t v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v20;
        *(_DWORD *)(a1 + 52) |= 4u;
        uint64_t v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 != 32) {
          continue;
        }
        int v14 = v13 + 1;
        *((void *)this + 1) = v14;
        unint64_t v20 = 0;
        if ((unint64_t)v14 >= v12) {
          goto LABEL_33;
        }
LABEL_30:
        int v15 = *v14;
        if ((v15 & 0x80000000) == 0)
        {
          unint64_t v16 = v14 + 1;
          *((void *)this + 1) = v16;
          *(void *)(a1 + 40) = v15;
          *(_DWORD *)(a1 + 52) |= 8u;
          if (v16 == (char *)v12) {
            goto LABEL_35;
          }
          continue;
        }
LABEL_33:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v20);
        if (!result) {
          return result;
        }
        uint64_t v19 = *((void *)this + 1);
        uint64_t v18 = *((void *)this + 2);
        *(void *)(a1 + 40) = v20;
        *(_DWORD *)(a1 + 52) |= 8u;
        if (v19 != v18) {
          continue;
        }
LABEL_35:
        if (!*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_20;
        }
        goto LABEL_26;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        unint64_t v20 = 0;
        if ((unint64_t)v14 < v12) {
          goto LABEL_30;
        }
        goto LABEL_33;
      default:
        int v9 = TagFallback & 7;
LABEL_26:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100117B88(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 32), a3);
  if ((*(_DWORD *)(v5 + 52) & 8) == 0)
  {
LABEL_5:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(v5 + 40), (uint64_t)a2, a4);
  uint64_t v10 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_11:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_100117C5C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 13);
  if (v4)
  {
    uint64_t v7 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v7;
    a2 += 9;
    int v4 = *((_DWORD *)this + 13);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *((void *)this + 3);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v8;
  a2 += 9;
  int v4 = *((_DWORD *)this + 13);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  uint64_t v9 = *((void *)this + 4);
  *(unsigned char *)a2 = 25;
  *(void *)(a2 + 1) = v9;
  a2 += 9;
  if ((*((_DWORD *)this + 13) & 8) == 0)
  {
LABEL_5:
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = (void *)*((void *)this + 1);
    if (!v5) {
      return a2;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 5);
  *(unsigned char *)a2 = 32;
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v10, a2 + 1, a3);
  uint64_t v11 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v11;
  if (!v11) {
    return a2;
  }
LABEL_11:
  if (*v5 == v5[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100117DE4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 52);
  if (*(unsigned char *)(a1 + 52))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 8) != 0) {
      uint64_t v5 = v5
    }
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 40), (unint64_t)a2)+ 1;
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v5 = 0;
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7)
    {
LABEL_10:
      *(_DWORD *)(a1 + 48) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1]) {
    goto LABEL_10;
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
     + v5;
  *(_DWORD *)(a1 + 48) = v9;
  return v9;
}

uint64_t sub_100117E90(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10011762C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100117F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100117F84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100117F98(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100118024()
{
  return 1;
}

uint64_t sub_10011802C()
{
  uint64_t v0 = qword_10047D900;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100116C2C;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D8C0;
}

void sub_1001180BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001180D0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(void *)(a1 + 24) = v6;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100118188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011819C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001181B0(uint64_t a1)
{
  *(void *)a1 = off_100456C98;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100118204(uint64_t a1)
{
  *(void *)a1 = off_100456C98;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10011826C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_100118274()
{
}

void sub_1001182D8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100118300(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 36))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100118320(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        TagFallbacuint64_t k = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v9 = TagFallback & 7;
        if (v9 == 1)
        {
          unint64_t v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
            return 0;
          }
          goto LABEL_17;
        }
      }
      else
      {
        int v9 = TagFallback & 7;
      }
LABEL_22:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v9 = TagFallback & 7;
    if (v9 != 1) {
      goto LABEL_22;
    }
    unint64_t v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 16) = v12;
    *(_DWORD *)(a1 + 36) |= 1u;
    uint64_t v10 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 17)
    {
      *((void *)this + 1) = v10 + 1;
      unint64_t v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
        return 0;
      }
LABEL_17:
      *(void *)(a1 + 24) = v12;
      *(_DWORD *)(a1 + 36) |= 2u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1001184CC(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 36);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 2) == 0)
    {
LABEL_3:
      uint64_t v8 = *(void **)(v4 + 8);
      uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      unsigned int v6 = v8;
      if (!v8) {
        return result;
      }
      goto LABEL_7;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  int v9 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_7:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_100118568(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = *(void *)(a1 + 24);
    *(unsigned char *)a2 = 17;
    *(void *)(a2 + 1) = v8;
    a2 += 9;
    int v9 = *(void **)(a1 + 8);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v5 = v9;
    if (!v9) {
      return a2;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  *(unsigned char *)a2 = 9;
  *(void *)(a2 + 1) = v7;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 36) & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  unsigned int v6 = *(void **)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_7:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_100118640(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 36);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 36)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

uint64_t sub_1001186A8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001180D0((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100118788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011879C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001187B0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10011883C()
{
  return 1;
}

uint64_t sub_100118844()
{
  uint64_t v0 = qword_10047D900;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100116C2C;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D8D0;
}

void sub_1001188D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001188E8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
    LOBYTE(v4) = *(unsigned char *)(a2 + 76);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 76);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    uint64_t v5 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 76) |= 1u;
    unsigned int v6 = *(std::string **)(a1 + 16);
    if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v6, v5);
    int v4 = *(_DWORD *)(a2 + 76);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 76) |= 2u;
    uint64_t v7 = *(void *)(a1 + 24);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10047EA58 + 24);
    }
    sub_1001180D0(v7, v8);
    int v4 = *(_DWORD *)(a2 + 76);
  }
  if ((v4 & 4) != 0)
  {
    *(_DWORD *)(a1 + 76) |= 4u;
    uint64_t v9 = *(void *)(a1 + 32);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = *(void *)(a2 + 32);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_10047EA58 + 32);
    }
    sub_1001180D0(v9, v10);
    int v4 = *(_DWORD *)(a2 + 76);
  }
  if ((v4 & 8) != 0)
  {
    *(_DWORD *)(a1 + 76) |= 8u;
    uint64_t v11 = *(void *)(a1 + 40);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 40);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_10047EA58 + 40);
    }
    sub_1001180D0(v11, v12);
    int v4 = *(_DWORD *)(a2 + 76);
  }
  if ((v4 & 0x10) != 0)
  {
    *(_DWORD *)(a1 + 76) |= 0x10u;
    uint64_t v13 = *(void *)(a1 + 48);
    if (!v13) {
      operator new();
    }
    uint64_t v14 = *(void *)(a2 + 48);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_10047EA58 + 48);
    }
    sub_1001180D0(v13, v14);
    int v4 = *(_DWORD *)(a2 + 76);
  }
  if ((v4 & 0x20) != 0)
  {
    *(_DWORD *)(a1 + 76) |= 0x20u;
    uint64_t v15 = *(void *)(a1 + 56);
    if (!v15) {
      operator new();
    }
    uint64_t v16 = *(void *)(a2 + 56);
    if (!v16) {
      uint64_t v16 = *(void *)(qword_10047EA58 + 56);
    }
    sub_1001180D0(v15, v16);
    int v4 = *(_DWORD *)(a2 + 76);
  }
  if ((v4 & 0x40) != 0)
  {
    *(_DWORD *)(a1 + 76) |= 0x40u;
    uint64_t v17 = *(void *)(a1 + 64);
    if (!v17) {
      operator new();
    }
    uint64_t v18 = *(void *)(a2 + 64);
    if (!v18) {
      uint64_t v18 = *(void *)(qword_10047EA58 + 64);
    }
    sub_1001180D0(v17, v18);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100118D1C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100118D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100118D6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100118D80(void *result)
{
  uint64_t v1 = result;
  uint64_t v2 = result[2];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if ((void *)qword_10047EA58 != result)
  {
    uint64_t v4 = result[3];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[4];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[5];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[6];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = v1[7];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t result = (void *)v1[8];
    if (result)
    {
      uint64_t v9 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v9();
    }
  }
  return result;
}

void sub_100118F10(void *a1)
{
  *a1 = off_100456D48;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100118D80(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100118F70(void *a1)
{
  *a1 = off_100456D48;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100118D80(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100118FE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 72) = a2;
  return result;
}

void sub_100118FEC()
{
}

void sub_100119068()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100119090(uint64_t this)
{
  uint64_t v1 = this;
  if (!*(unsigned char *)(this + 76)) {
    goto LABEL_43;
  }
  if ((*(unsigned char *)(this + 76) & 1) == 0
    || (uint64_t v2 = *(void *)(this + 16), (_UNKNOWN *)v2 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
  {
LABEL_6:
    if ((*(unsigned char *)(this + 76) & 2) != 0) {
      goto LABEL_7;
    }
    goto LABEL_13;
  }
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_6;
  }
  **(unsigned char **)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((*(unsigned char *)(this + 76) & 2) != 0)
  {
LABEL_7:
    this = *(void *)(this + 24);
    if (this)
    {
      if (*(unsigned char *)(this + 36))
      {
        *(void *)(this + 16) = 0;
        *(void *)(this + 24) = 0;
      }
      uint64_t v3 = *(void *)(this + 8);
      this += 8;
      *(_DWORD *)(this + 28) = 0;
      if (v3) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
LABEL_13:
  if ((*(unsigned char *)(v1 + 76) & 4) != 0)
  {
    this = *(void *)(v1 + 32);
    if (this)
    {
      if (*(unsigned char *)(this + 36))
      {
        *(void *)(this + 16) = 0;
        *(void *)(this + 24) = 0;
      }
      uint64_t v4 = *(void *)(this + 8);
      this += 8;
      *(_DWORD *)(this + 28) = 0;
      if (v4) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  if ((*(unsigned char *)(v1 + 76) & 8) != 0)
  {
    this = *(void *)(v1 + 40);
    if (this)
    {
      if (*(unsigned char *)(this + 36))
      {
        *(void *)(this + 16) = 0;
        *(void *)(this + 24) = 0;
      }
      uint64_t v5 = *(void *)(this + 8);
      this += 8;
      *(_DWORD *)(this + 28) = 0;
      if (v5) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  if ((*(unsigned char *)(v1 + 76) & 0x10) != 0)
  {
    this = *(void *)(v1 + 48);
    if (this)
    {
      if (*(unsigned char *)(this + 36))
      {
        *(void *)(this + 16) = 0;
        *(void *)(this + 24) = 0;
      }
      uint64_t v6 = *(void *)(this + 8);
      this += 8;
      *(_DWORD *)(this + 28) = 0;
      if (v6) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  if ((*(unsigned char *)(v1 + 76) & 0x20) != 0)
  {
    this = *(void *)(v1 + 56);
    if (this)
    {
      if (*(unsigned char *)(this + 36))
      {
        *(void *)(this + 16) = 0;
        *(void *)(this + 24) = 0;
      }
      uint64_t v7 = *(void *)(this + 8);
      this += 8;
      *(_DWORD *)(this + 28) = 0;
      if (v7) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  if ((*(unsigned char *)(v1 + 76) & 0x40) != 0)
  {
    this = *(void *)(v1 + 64);
    if (this)
    {
      if (*(unsigned char *)(this + 36))
      {
        *(void *)(this + 16) = 0;
        *(void *)(this + 24) = 0;
      }
      uint64_t v8 = *(void *)(this + 8);
      this += 8;
      *(_DWORD *)(this + 28) = 0;
      if (v8) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
LABEL_43:
  uint64_t v10 = *(void *)(v1 + 8);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v9 + 17) = 0;
  if (v10)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v9);
  }
  return this;
}

uint64_t sub_10011922C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      TagFallbacuint64_t k = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      TagFallbacuint64_t k = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 76) |= 1u;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 18) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_17:
        *(_DWORD *)(a1 + 76) |= 2u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12) {
          operator new();
        }
        unsigned int v72 = 0;
        uint64_t v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v72))return 0; {
        }
          }
        else
        {
          unsigned int v72 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v72);
        if (!sub_100118320(v12, this, v25, v26) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
        int v27 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v27, 1);
        int v29 = v27 - 1;
        if (v29 < 0 == v28) {
          *((_DWORD *)this + 14) = v29;
        }
        int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 26) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
        *(_DWORD *)(a1 + 76) |= 4u;
        uint64_t v14 = *(void *)(a1 + 32);
        if (!v14) {
LABEL_51:
        }
          operator new();
LABEL_24:
        unsigned int v72 = 0;
        uint64_t v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v72))return 0; {
        }
          }
        else
        {
          unsigned int v72 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v31 = *((_DWORD *)this + 14);
        int v32 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v31 + 1;
        if (v31 >= v32) {
          return 0;
        }
        int v33 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v72);
        if (!sub_100118320(v14, this, v34, v35) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v33);
        int v36 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v36, 1);
        int v37 = v36 - 1;
        if (v37 < 0 == v28) {
          *((_DWORD *)this + 14) = v37;
        }
        int v38 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v38 >= *((void *)this + 2) || *v38 != 34) {
          continue;
        }
        *((void *)this + 1) = v38 + 1;
        *(_DWORD *)(a1 + 76) |= 8u;
        uint64_t v16 = *(void *)(a1 + 40);
        if (!v16) {
LABEL_63:
        }
          operator new();
LABEL_28:
        unsigned int v72 = 0;
        uint64_t v17 = (char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v72))return 0; {
        }
          }
        else
        {
          unsigned int v72 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        int v39 = *((_DWORD *)this + 14);
        int v40 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v39 + 1;
        if (v39 >= v40) {
          return 0;
        }
        int v41 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v72);
        if (!sub_100118320(v16, this, v42, v43) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v41);
        int v44 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v44, 1);
        int v45 = v44 - 1;
        if (v45 < 0 == v28) {
          *((_DWORD *)this + 14) = v45;
        }
        char v46 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 != 42) {
          continue;
        }
        *((void *)this + 1) = v46 + 1;
        *(_DWORD *)(a1 + 76) |= 0x10u;
        uint64_t v18 = *(void *)(a1 + 48);
        if (!v18) {
LABEL_75:
        }
          operator new();
LABEL_32:
        unsigned int v72 = 0;
        uint64_t v19 = (char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v72))return 0; {
        }
          }
        else
        {
          unsigned int v72 = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        int v47 = *((_DWORD *)this + 14);
        int v48 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v47 + 1;
        if (v47 >= v48) {
          return 0;
        }
        int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v72);
        if (!sub_100118320(v18, this, v50, v51) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
        int v52 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v52, 1);
        int v53 = v52 - 1;
        if (v53 < 0 == v28) {
          *((_DWORD *)this + 14) = v53;
        }
        int v54 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v54 >= *((void *)this + 2) || *v54 != 50) {
          continue;
        }
        *((void *)this + 1) = v54 + 1;
        *(_DWORD *)(a1 + 76) |= 0x20u;
        uint64_t v20 = *(void *)(a1 + 56);
        if (!v20) {
LABEL_87:
        }
          operator new();
LABEL_36:
        unsigned int v72 = 0;
        int v21 = (char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v72))return 0; {
        }
          }
        else
        {
          unsigned int v72 = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        int v55 = *((_DWORD *)this + 14);
        int v56 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v55 + 1;
        if (v55 >= v56) {
          return 0;
        }
        int v57 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v72);
        if (!sub_100118320(v20, this, v58, v59) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v57);
        int v60 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v60, 1);
        int v61 = v60 - 1;
        if (v61 < 0 == v28) {
          *((_DWORD *)this + 14) = v61;
        }
        int v62 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v62 >= *((void *)this + 2) || *v62 != 58) {
          continue;
        }
        *((void *)this + 1) = v62 + 1;
LABEL_99:
        *(_DWORD *)(a1 + 76) |= 0x40u;
        uint64_t v63 = *(void *)(a1 + 64);
        if (!v63) {
          operator new();
        }
        unsigned int v72 = 0;
        unsigned int v64 = (char *)*((void *)this + 1);
        if ((unint64_t)v64 >= *((void *)this + 2) || *v64 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v72))return 0; {
        }
          }
        else
        {
          unsigned int v72 = *v64;
          *((void *)this + 1) = v64 + 1;
        }
        int v65 = *((_DWORD *)this + 14);
        int v66 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v65 + 1;
        if (v65 < v66)
        {
          int v67 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v72);
          if (sub_100118320(v63, this, v68, v69))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v67);
              int v70 = *((_DWORD *)this + 14);
              BOOL v28 = __OFSUB__(v70, 1);
              int v71 = v70 - 1;
              if (v71 < 0 == v28) {
                *((_DWORD *)this + 14) = v71;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_17;
        }
        goto LABEL_39;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 76) |= 4u;
        uint64_t v14 = *(void *)(a1 + 32);
        if (v14) {
          goto LABEL_24;
        }
        goto LABEL_51;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 76) |= 8u;
        uint64_t v16 = *(void *)(a1 + 40);
        if (v16) {
          goto LABEL_28;
        }
        goto LABEL_63;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 76) |= 0x10u;
        uint64_t v18 = *(void *)(a1 + 48);
        if (v18) {
          goto LABEL_32;
        }
        goto LABEL_75;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 76) |= 0x20u;
        uint64_t v20 = *(void *)(a1 + 56);
        if (v20) {
          goto LABEL_36;
        }
        goto LABEL_87;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_39;
        }
        goto LABEL_99;
      default:
        int v9 = TagFallback & 7;
LABEL_39:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}