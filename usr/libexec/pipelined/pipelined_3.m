void sub_1001A5ACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000DA568((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001A5B00(void *a1)
{
}

uint64_t sub_1001A5B18(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 760;
    (**(void (***)(void))(i - 760))();
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_1001A5B8C(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)__p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  v36 = &v35;
  v37 = (char *)&v35 + 2;
  v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  v5 = sub_1001AA37C(&v31, a1);
  int v6 = *(_DWORD *)((char *)v5 + *(void *)(*v5 - 24) + 32);
  uint64_t v7 = *(void *)((char *)&v32.__rdstate_ + (void)*(v31 - 3));
  uint64_t v8 = *(void *)(v7 + 40);
  v36 = (uint64_t *)v8;
  v9 = *(char **)(v7 + 48);
  v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          v12 = a2;
        }
        else {
          v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          v17 = v12;
          v18 = (char *)v8;
        }
        else
        {
          v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          v19 = (long long *)(v8 + 16);
          v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_1001A5E64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001A5E98(void *a1)
{
}

void *sub_1001A5EB0(void *result, char *__src, char *a3, size_t __sz)
{
  int v6 = __src;
  uint64_t v7 = result;
  size_t v8 = result[2];
  v9 = (char *)*result;
  if (__sz > (uint64_t)(v8 - *result) >> 1)
  {
    if (v9)
    {
      result[1] = v9;
      operator delete(v9);
      size_t v8 = 0;
      *uint64_t v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if ((__sz & 0x8000000000000000) != 0) {
      goto LABEL_23;
    }
    if (v8 <= __sz) {
      size_t v10 = __sz;
    }
    else {
      size_t v10 = v8;
    }
    BOOL v11 = v8 >= 0x7FFFFFFFFFFFFFFELL;
    uint64_t v12 = 0x7FFFFFFFFFFFFFFFLL;
    if (!v11) {
      uint64_t v12 = v10;
    }
    if (v12 < 0) {
LABEL_23:
    }
      sub_1000A9108();
    uint64_t v13 = 2 * v12;
    result = operator new(2 * v12);
    v9 = (char *)result;
    *uint64_t v7 = result;
    v7[1] = result;
    v7[2] = (char *)result + v13;
    size_t v14 = a3 - v6;
    if (v14) {
      result = memcpy(result, v6, v14);
    }
    unint64_t v15 = (void **)(v7 + 1);
    goto LABEL_22;
  }
  unint64_t v15 = (void **)(result + 1);
  unint64_t v16 = (unsigned char *)result[1];
  unint64_t v17 = (v16 - v9) >> 1;
  if (v17 >= __sz)
  {
    size_t v14 = a3 - __src;
    if (a3 == __src) {
      goto LABEL_22;
    }
    v19 = (void *)*result;
LABEL_21:
    result = memmove(v19, __src, v14);
    goto LABEL_22;
  }
  v18 = &__src[2 * v17];
  if (v16 != v9)
  {
    result = memmove((void *)*result, __src, v16 - v9);
    v9 = (char *)*v15;
  }
  size_t v14 = a3 - v18;
  if (v14)
  {
    v19 = v9;
    __src = v18;
    goto LABEL_21;
  }
LABEL_22:
  *unint64_t v15 = &v9[v14];
  return result;
}

void sub_1001A5FEC(uint64_t **a1, void *a2, void *a3)
{
  v5 = a1;
  if (a1[2])
  {
    int v6 = *a1;
    size_t v8 = a1 + 1;
    uint64_t v7 = a1[1];
    *a1 = (uint64_t *)(a1 + 1);
    v7[2] = 0;
    a1[1] = 0;
    a1[2] = 0;
    if (v6[1]) {
      uint64_t v9 = v6[1];
    }
    else {
      uint64_t v9 = (uint64_t)v6;
    }
    uint64_t v39 = (uint64_t)a1;
    uint64_t v41 = v9;
    if (!v9) {
      goto LABEL_65;
    }
    size_t v10 = *(void **)(v9 + 16);
    if (v10)
    {
      BOOL v11 = (void *)*v10;
      if (*v10 == v9)
      {
        *size_t v10 = 0;
        while (1)
        {
          v38 = (void *)v10[1];
          if (!v38) {
            break;
          }
          do
          {
            size_t v10 = v38;
            v38 = (void *)*v38;
          }
          while (v38);
        }
      }
      else
      {
        for (v10[1] = 0; v11; BOOL v11 = (void *)v10[1])
        {
          do
          {
            size_t v10 = v11;
            BOOL v11 = (void *)*v11;
          }
          while (v11);
        }
      }
    }
    uint64_t v40 = (uint64_t)v10;
    if (a2 == a3)
    {
      int v34 = a1;
      sub_1001A53F4((uint64_t)a1, v9);
      if (!v10) {
        goto LABEL_66;
      }
      goto LABEL_62;
    }
    uint64_t v12 = a2;
    while (1)
    {
      v42[0] = v9 + 32;
      v42[1] = v9 + 56;
      sub_1001A6398((uint64_t)v42, (uint64_t)(v12 + 4));
      uint64_t v13 = (uint64_t *)v41;
      size_t v14 = *v8;
      unint64_t v15 = v5 + 1;
      unint64_t v16 = v5 + 1;
      if (!*v8) {
        break;
      }
      int v17 = *(char *)(v41 + 55);
      if (v17 >= 0) {
        size_t v18 = *(unsigned __int8 *)(v41 + 55);
      }
      else {
        size_t v18 = *(void *)(v41 + 40);
      }
      if (v17 >= 0) {
        v19 = (const void *)(v41 + 32);
      }
      else {
        v19 = *(const void **)(v41 + 32);
      }
      do
      {
        while (1)
        {
          unint64_t v15 = (uint64_t **)v14;
          long long v22 = (const void *)v14[4];
          v20 = v14 + 4;
          unint64_t v21 = v22;
          int v23 = *((char *)v20 + 23);
          if (v23 >= 0) {
            size_t v24 = *((unsigned __int8 *)v20 + 23);
          }
          else {
            size_t v24 = v20[1];
          }
          if (v23 >= 0) {
            v25 = v20;
          }
          else {
            v25 = v21;
          }
          if (v24 >= v18) {
            size_t v26 = v18;
          }
          else {
            size_t v26 = v24;
          }
          int v27 = memcmp(v19, v25, v26);
          BOOL v28 = v18 < v24;
          if (v27) {
            BOOL v28 = v27 < 0;
          }
          if (!v28) {
            break;
          }
          size_t v14 = *v15;
          unint64_t v16 = v15;
          if (!*v15) {
            goto LABEL_34;
          }
        }
        size_t v14 = v15[1];
      }
      while (v14);
      unint64_t v16 = v15 + 1;
      *(void *)uint64_t v41 = 0;
      *(void *)(v41 + 8) = 0;
      *(void *)(v41 + 16) = v15;
      v15[1] = (uint64_t *)v41;
      long long v29 = (uint64_t *)**v5;
      if (v29) {
        goto LABEL_35;
      }
LABEL_36:
      sub_1000619B8(v5[1], v13);
      v5[2] = (uint64_t *)((char *)v5[2] + 1);
      uint64_t v9 = v40;
      uint64_t v41 = v40;
      if (v40)
      {
        size_t v10 = *(void **)(v40 + 16);
        if (v10)
        {
          uint64_t v30 = (void *)*v10;
          if (*v10 == v40)
          {
            *size_t v10 = 0;
            while (1)
            {
              uint64_t v33 = (void *)v10[1];
              if (!v33) {
                break;
              }
              do
              {
                size_t v10 = v33;
                uint64_t v33 = (void *)*v33;
              }
              while (v33);
            }
          }
          else
          {
            for (v10[1] = 0; v30; uint64_t v30 = (void *)v10[1])
            {
              do
              {
                size_t v10 = v30;
                uint64_t v30 = (void *)*v30;
              }
              while (v30);
            }
          }
        }
        uint64_t v40 = (uint64_t)v10;
        v31 = (void *)v12[1];
        if (v31)
        {
          do
          {
LABEL_45:
            a2 = v31;
            v31 = (void *)*v31;
          }
          while (v31);
          goto LABEL_49;
        }
      }
      else
      {
        size_t v10 = 0;
        v31 = (void *)v12[1];
        if (v31) {
          goto LABEL_45;
        }
      }
      do
      {
        a2 = (void *)v12[2];
        BOOL v32 = *a2 == (void)v12;
        uint64_t v12 = a2;
      }
      while (!v32);
LABEL_49:
      if (v9)
      {
        uint64_t v12 = a2;
        if (a2 != a3) {
          continue;
        }
      }
      int v34 = (uint64_t **)v39;
      sub_1001A53F4(v39, v9);
      if (!v10) {
        goto LABEL_66;
      }
LABEL_62:
      for (uint64_t i = (void *)v10[2]; i; uint64_t i = (void *)i[2])
        size_t v10 = i;
      a1 = v34;
      uint64_t v9 = (uint64_t)v10;
LABEL_65:
      sub_1001A53F4((uint64_t)a1, v9);
      goto LABEL_66;
    }
LABEL_34:
    *(void *)uint64_t v41 = 0;
    *(void *)(v41 + 8) = 0;
    *(void *)(v41 + 16) = v15;
    *unint64_t v16 = (uint64_t *)v41;
    long long v29 = (uint64_t *)**v5;
    if (!v29) {
      goto LABEL_36;
    }
LABEL_35:
    void *v5 = v29;
    uint64_t v13 = *v16;
    goto LABEL_36;
  }
LABEL_66:
  if (a2 != a3)
  {
    do
    {
      sub_1001A643C(v5, (uint64_t)(a2 + 4));
      v36 = (void *)a2[1];
      if (v36)
      {
        do
        {
          v37 = v36;
          v36 = (void *)*v36;
        }
        while (v36);
      }
      else
      {
        do
        {
          v37 = (void *)a2[2];
          BOOL v32 = *v37 == (void)a2;
          a2 = v37;
        }
        while (!v32);
      }
      a2 = v37;
    }
    while (v37 != a3);
  }
}

void sub_1001A632C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001A6340((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_1001A6340(uint64_t *a1)
{
  sub_1001A53F4(*a1, a1[2]);
  uint64_t v2 = a1[1];
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      do
      {
        uint64_t v2 = v3;
        uint64_t v3 = *(void *)(v3 + 16);
      }
      while (v3);
      a1[1] = v2;
    }
    sub_1001A53F4(*a1, v2);
  }
  return a1;
}

uint64_t sub_1001A6398(uint64_t a1, uint64_t a2)
{
  std::string::operator=(*(std::string **)a1, (const std::string *)a2);
  uint64_t v4 = *(void *)(a1 + 8);
  std::string::operator=((std::string *)(v4 + 8), (const std::string *)(a2 + 32));
  if (v4 != a2 + 24)
  {
    sub_1001A5EB0((void *)(v4 + 32), *(char **)(a2 + 56), *(char **)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 1);
    sub_1001A5EB0((void *)(v4 + 56), *(char **)(a2 + 80), *(char **)(a2 + 88), (uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 1);
  }
  *(_OWORD *)(v4 + 80) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(v4 + 112) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(v4 + 128) = *(_OWORD *)(a2 + 152);
  *(_WORD *)(v4 + 144) = *(_WORD *)(a2 + 168);
  return a1;
}

uint64_t sub_1001A643C(uint64_t **a1, uint64_t a2)
{
  uint64_t v4 = a1 + 1;
  v5 = operator new(0xD0uLL);
  int v6 = v5;
  v25[0] = (uint64_t)v5;
  v25[1] = (uint64_t)v4;
  char v26 = 0;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1000559FC(v5 + 32, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *((_OWORD *)v5 + 2) = *(_OWORD *)a2;
    *((void *)v5 + 6) = *(void *)(a2 + 16);
  }
  sub_1001A5130((uint64_t)(v6 + 56), a2 + 24);
  char v26 = 1;
  uint64_t v7 = (uint64_t *)v25[0];
  size_t v8 = *v4;
  uint64_t v9 = v4;
  if (!*v4)
  {
LABEL_25:
    *(void *)v25[0] = 0;
    v7[1] = 0;
    v7[2] = (uint64_t)v4;
    char *v9 = v7;
    long long v22 = (uint64_t *)**a1;
    if (!v22) {
      goto LABEL_27;
    }
LABEL_26:
    *a1 = v22;
    uint64_t v7 = *v9;
    goto LABEL_27;
  }
  int v10 = *(char *)(v25[0] + 55);
  if (v10 >= 0) {
    unint64_t v11 = *(unsigned __int8 *)(v25[0] + 55);
  }
  else {
    unint64_t v11 = *(void *)(v25[0] + 40);
  }
  if (v10 >= 0) {
    uint64_t v12 = (const void *)(v25[0] + 32);
  }
  else {
    uint64_t v12 = *(const void **)(v25[0] + 32);
  }
  do
  {
    while (1)
    {
      uint64_t v4 = (uint64_t **)v8;
      uint64_t v15 = v8[4];
      uint64_t v13 = v8 + 4;
      size_t v14 = (void *)v15;
      int v16 = *((char *)v13 + 23);
      unint64_t v17 = v16 >= 0 ? *((unsigned __int8 *)v13 + 23) : v13[1];
      size_t v18 = v16 >= 0 ? v13 : v14;
      size_t v19 = v17 >= v11 ? v11 : v17;
      int v20 = memcmp(v12, v18, v19);
      BOOL v21 = v11 < v17;
      if (v20) {
        BOOL v21 = v20 < 0;
      }
      if (!v21) {
        break;
      }
      size_t v8 = *v4;
      uint64_t v9 = v4;
      if (!*v4) {
        goto LABEL_25;
      }
    }
    size_t v8 = v4[1];
  }
  while (v8);
  uint64_t v9 = v4 + 1;
  *(void *)v25[0] = 0;
  v7[1] = 0;
  v7[2] = (uint64_t)v4;
  v4[1] = v7;
  long long v22 = (uint64_t *)**a1;
  if (v22) {
    goto LABEL_26;
  }
LABEL_27:
  sub_1000619B8(a1[1], v7);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  uint64_t v23 = v25[0];
  v25[0] = 0;
  sub_1001A6614(v25, 0);
  return v23;
}

void sub_1001A65D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001A6614((uint64_t *)va, 0);
  _Unwind_Resume(a1);
}

void sub_1001A65EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  if (*(char *)(v2 + 55) < 0) {
    operator delete(*v3);
  }
  sub_1001A6614((uint64_t *)va, 0);
  _Unwind_Resume(a1);
}

void sub_1001A6614(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  *a1 = a2;
  if (v2)
  {
    if (!*((unsigned char *)a1 + 16)) {
      goto LABEL_9;
    }
    *(void *)(v2 + 56) = off_10045D868;
    uint64_t v3 = *(void **)(v2 + 112);
    if (v3)
    {
      *(void *)(v2 + 120) = v3;
      operator delete(v3);
    }
    uint64_t v4 = *(void **)(v2 + 88);
    if (v4)
    {
      *(void *)(v2 + 96) = v4;
      operator delete(v4);
    }
    if (*(char *)(v2 + 87) < 0)
    {
      operator delete(*(void **)(v2 + 64));
      if ((*(char *)(v2 + 55) & 0x80000000) == 0)
      {
LABEL_9:
        v5 = (void *)v2;
LABEL_11:
        operator delete(v5);
        return;
      }
    }
    else if ((*(char *)(v2 + 55) & 0x80000000) == 0)
    {
      goto LABEL_9;
    }
    operator delete(*(void **)(v2 + 32));
    v5 = (void *)v2;
    goto LABEL_11;
  }
}

uint64_t **sub_1001A66EC(uint64_t **a1, const void **a2, uint64_t a3, long long **a4)
{
  uint64_t v7 = (uint64_t)(a1 + 1);
  int v6 = a1[1];
  size_t v8 = a1 + 1;
  uint64_t v9 = a1 + 1;
  if (v6)
  {
    int v10 = *((char *)a2 + 23);
    if (v10 >= 0) {
      size_t v11 = *((unsigned __int8 *)a2 + 23);
    }
    else {
      size_t v11 = (size_t)a2[1];
    }
    if (v10 >= 0) {
      uint64_t v12 = a2;
    }
    else {
      uint64_t v12 = *a2;
    }
    while (1)
    {
      while (1)
      {
        uint64_t v9 = (uint64_t **)v6;
        uint64_t v15 = (const void *)v6[4];
        uint64_t v13 = v6 + 4;
        size_t v14 = v15;
        int v16 = *((char *)v13 + 23);
        if (v16 >= 0) {
          size_t v17 = *((unsigned __int8 *)v13 + 23);
        }
        else {
          size_t v17 = v13[1];
        }
        if (v16 >= 0) {
          size_t v18 = v13;
        }
        else {
          size_t v18 = v14;
        }
        if (v17 >= v11) {
          size_t v19 = v11;
        }
        else {
          size_t v19 = v17;
        }
        int v20 = memcmp(v12, v18, v19);
        BOOL v21 = v11 < v17;
        if (v20) {
          BOOL v21 = v20 < 0;
        }
        if (!v21) {
          break;
        }
        int v6 = *v9;
        size_t v8 = v9;
        if (!*v9) {
          goto LABEL_26;
        }
      }
      int v22 = memcmp(v18, v12, v19);
      BOOL v23 = v17 < v11;
      if (v22) {
        BOOL v23 = v22 < 0;
      }
      if (!v23) {
        break;
      }
      int v6 = v9[1];
      if (!v6)
      {
        size_t v8 = v9 + 1;
        goto LABEL_26;
      }
    }
  }
  else
  {
LABEL_26:
    size_t v24 = (char *)operator new(0xD0uLL);
    v32[0] = (uint64_t)v24;
    v32[1] = v7;
    char v33 = 0;
    v25 = v24 + 32;
    char v26 = *a4;
    if (*((char *)*a4 + 23) < 0)
    {
      sub_1000559FC(v25, *(void **)v26, *((void *)v26 + 1));
      __int16 v27 = *((_WORD *)v24 + 100) & 0xF800;
      long long v29 = (uint64_t *)v32[0];
    }
    else
    {
      __int16 v27 = 0;
      long long v28 = *v26;
      *((void *)v24 + 6) = *((void *)v26 + 2);
      *(_OWORD *)v25 = v28;
      long long v29 = (uint64_t *)v24;
    }
    *((void *)v24 + 7) = off_10045D868;
    *((_OWORD *)v24 + 4) = 0u;
    *((_OWORD *)v24 + 5) = 0u;
    *((_OWORD *)v24 + 6) = 0u;
    *((_OWORD *)v24 + 7) = 0u;
    *((_OWORD *)v24 + 8) = 0u;
    *((_OWORD *)v24 + 9) = 0u;
    *((_OWORD *)v24 + 10) = 0u;
    *((_OWORD *)v24 + 11) = 0u;
    *((void *)v24 + 24) = 0;
    *((_WORD *)v24 + 100) = v27;
    char v33 = 1;
    *long long v29 = 0;
    v29[1] = 0;
    v29[2] = (uint64_t)v9;
    *size_t v8 = v29;
    uint64_t v30 = (uint64_t *)**a1;
    if (v30)
    {
      *a1 = v30;
      long long v29 = *v8;
    }
    sub_1000619B8(a1[1], v29);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
    uint64_t v9 = (uint64_t **)v32[0];
    v32[0] = 0;
    sub_1001A6614(v32, 0);
  }
  return v9;
}

void sub_1001A68F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001A6614((uint64_t *)va, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_1001A6908()
{
  qword_10047ED78 = 0;
  qword_10047ED70 = 0;
  qword_10047ED68 = (uint64_t)&qword_10047ED70;
  uint64_t v1 = 0x500000000;
  uint64_t v2 = &unk_10047C5F8;
  uint64_t v3 = off_10047C610;
  sub_100168E80(&qword_10047ED68, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047ED68, (void *)&_mh_execute_header);
  qword_10047ED98 = 0;
  qword_10047ED90 = 0;
  qword_10047ED88 = (uint64_t)&qword_10047ED90;
  uint64_t v1 = (uint64_t)&_mh_execute_header;
  uint64_t v2 = &unk_10047ED80;
  uint64_t v3 = &off_10047C638;
  sub_100168E80(&qword_10047ED88, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047ED88, (void *)&_mh_execute_header);
  qword_10047EDB0 = 0;
  qword_10047EDA8 = 0;
  qword_10047EDA0 = (uint64_t)&qword_10047EDA8;
  uint64_t v1 = 0x300000000;
  uint64_t v2 = &unk_10047C640;
  uint64_t v3 = off_10047C650;
  sub_100168E80(&qword_10047EDA0, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EDA0, (void *)&_mh_execute_header);
  qword_10047EDC8 = 0;
  qword_10047EDC0 = 0;
  qword_10047EDB8 = (uint64_t)&qword_10047EDC0;
  uint64_t v1 = 0x200000000;
  uint64_t v2 = &unk_10047C668;
  uint64_t v3 = off_10047C670;
  sub_100168E80(&qword_10047EDB8, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EDB8, (void *)&_mh_execute_header);
  qword_10047EDE0 = 0;
  qword_10047EDD8 = 0;
  qword_10047EDD0 = (uint64_t)&qword_10047EDD8;
  uint64_t v1 = 0x500000000;
  uint64_t v2 = &unk_10047C680;
  uint64_t v3 = off_10047C698;
  sub_100168E80(&qword_10047EDD0, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EDD0, (void *)&_mh_execute_header);
  qword_10047EDF8 = 0;
  qword_10047EDF0 = 0;
  qword_10047EDE8 = (uint64_t)&qword_10047EDF0;
  uint64_t v1 = 0x400000000;
  uint64_t v2 = &unk_10047C6C0;
  uint64_t v3 = off_10047C6D0;
  sub_100168E80(&qword_10047EDE8, (uint64_t)&v1);
  return __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EDE8, (void *)&_mh_execute_header);
}

void sub_1001A6BD4(_Unwind_Exception *a1)
{
}

void sub_1001A6BF0(_Unwind_Exception *a1)
{
}

void sub_1001A6C0C(_Unwind_Exception *a1)
{
}

void sub_1001A6C28(_Unwind_Exception *a1)
{
}

void sub_1001A6C44(_Unwind_Exception *a1)
{
}

void sub_1001A6C60(_Unwind_Exception *a1)
{
}

uint64_t sub_1001A6C7C()
{
  qword_10047EE10 = 0;
  qword_10047EE08 = 0;
  qword_10047EE00 = (uint64_t)&qword_10047EE08;
  uint64_t v1 = 0x200000000;
  uint64_t v2 = &unk_10047C6F0;
  uint64_t v3 = off_10047C6F8;
  sub_100168E80(&qword_10047EE00, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EE00, (void *)&_mh_execute_header);
  qword_10047EE28 = 0;
  qword_10047EE20 = 0;
  qword_10047EE18 = (uint64_t)&qword_10047EE20;
  uint64_t v1 = 0x400000000;
  uint64_t v2 = &unk_10047C708;
  uint64_t v3 = off_10047C718;
  sub_100168E80(&qword_10047EE18, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EE18, (void *)&_mh_execute_header);
  qword_10047EE40 = 0;
  qword_10047EE38 = 0;
  qword_10047EE30 = (uint64_t)&qword_10047EE38;
  uint64_t v1 = 0x300000000;
  uint64_t v2 = &unk_10047C738;
  uint64_t v3 = off_10047C748;
  sub_100168E80(&qword_10047EE30, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EE30, (void *)&_mh_execute_header);
  qword_10047EE58 = 0;
  qword_10047EE50 = 0;
  qword_10047EE48 = (uint64_t)&qword_10047EE50;
  uint64_t v1 = 0x1000000000;
  uint64_t v2 = &unk_10047C760;
  uint64_t v3 = off_10047C7A0;
  sub_100168E80(&qword_10047EE48, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EE48, (void *)&_mh_execute_header);
  qword_10047EE70 = 0;
  qword_10047EE68 = 0;
  qword_10047EE60 = (uint64_t)&qword_10047EE68;
  uint64_t v1 = 0x300000000;
  uint64_t v2 = &unk_10047C820;
  uint64_t v3 = off_10047C830;
  sub_100168E80(&qword_10047EE60, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EE60, (void *)&_mh_execute_header);
  qword_10047EE80 = 0;
  qword_10047EE88 = 0;
  qword_10047EE78 = (uint64_t)&qword_10047EE80;
  uint64_t v1 = 0x200000000;
  uint64_t v2 = &unk_10047C848;
  uint64_t v3 = off_10047C850;
  sub_100168E80(&qword_10047EE78, (uint64_t)&v1);
  return __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EE78, (void *)&_mh_execute_header);
}

void sub_1001A6F4C(_Unwind_Exception *a1)
{
}

void sub_1001A6F68(_Unwind_Exception *a1)
{
}

void sub_1001A6F84(_Unwind_Exception *a1)
{
}

void sub_1001A6FA0(_Unwind_Exception *a1)
{
}

void sub_1001A6FBC(_Unwind_Exception *a1)
{
}

void sub_1001A6FD8(_Unwind_Exception *a1)
{
}

void sub_1001A6FF4()
{
}

uint64_t sub_1001A7008(uint64_t result, uint64_t a2)
{
  *(void *)(result + 32) = a2;
  return result;
}

uint64_t sub_1001A7010(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  *(_WORD *)(result + 88) |= 0x10u;
  return result;
}

uint64_t sub_1001A7024(uint64_t result, int a2)
{
  *(_DWORD *)(result + 72) = a2;
  *(_WORD *)(result + 88) |= 0x100u;
  return result;
}

uint64_t sub_1001A7038(uint64_t a1, uint64_t *a2)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v15 = 0;
  int v13 = 0;
  __int16 v12 = 0;
  for (int i = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, __p);
        ;
        int i = v7 + v5 + (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2))
  {
    int v5 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v13, &v12) + i;
    if (!v13) {
      break;
    }
    switch(v12)
    {
      case 1:
        uint64_t v6 = *a2;
        if (v13 != 4) {
          goto LABEL_26;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 8);
        __int16 v8 = *(_WORD *)(a1 + 88) | 1;
        goto LABEL_25;
      case 2:
        uint64_t v6 = *a2;
        if (v13 != 4) {
          goto LABEL_26;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 16);
        __int16 v8 = *(_WORD *)(a1 + 88) | 2;
        goto LABEL_25;
      case 3:
        uint64_t v6 = *a2;
        if (v13 != 4) {
          goto LABEL_26;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 24);
        __int16 v8 = *(_WORD *)(a1 + 88) | 4;
        goto LABEL_25;
      case 4:
        uint64_t v6 = *a2;
        if (v13 != 10) {
          goto LABEL_26;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 32);
        __int16 v8 = *(_WORD *)(a1 + 88) | 8;
        goto LABEL_25;
      case 5:
        uint64_t v6 = *a2;
        if (v13 != 8) {
          goto LABEL_26;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 40);
        __int16 v8 = *(_WORD *)(a1 + 88) | 0x10;
        goto LABEL_25;
      case 6:
        uint64_t v6 = *a2;
        if (v13 != 10) {
          goto LABEL_26;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 48);
        __int16 v8 = *(_WORD *)(a1 + 88) | 0x20;
        goto LABEL_25;
      case 7:
        uint64_t v6 = *a2;
        if (v13 != 10) {
          goto LABEL_26;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 56);
        __int16 v8 = *(_WORD *)(a1 + 88) | 0x40;
        goto LABEL_25;
      case 8:
        uint64_t v6 = *a2;
        if (v13 != 4) {
          goto LABEL_26;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 64);
        __int16 v8 = *(_WORD *)(a1 + 88) | 0x80;
        goto LABEL_25;
      case 9:
        if (v13 != 8) {
          goto LABEL_22;
        }
        int v11 = 0;
        int v7 = (*(uint64_t (**)(uint64_t *, int *))(*a2 + 312))(a2, &v11);
        *(_DWORD *)(a1 + 72) = v11;
        __int16 v8 = *(_WORD *)(a1 + 88) | 0x100;
        goto LABEL_25;
      case 10:
        uint64_t v6 = *a2;
        if (v13 != 4) {
          goto LABEL_26;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 80);
        __int16 v8 = *(_WORD *)(a1 + 88) | 0x200;
LABEL_25:
        *(_WORD *)(a1 + 88) = v8;
        break;
      default:
LABEL_22:
        uint64_t v6 = *a2;
LABEL_26:
        int v7 = (*(uint64_t (**)(uint64_t *))(v6 + 352))(a2);
        break;
    }
  }
  int v9 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v15) < 0) {
    operator delete(__p[0]);
  }
  return (v9 + v5);
}

void sub_1001A758C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1001A75D8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  double result = *(double *)(a2 + 80);
  *(double *)(a1 + 80) = result;
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  return result;
}

void sub_1001A7628()
{
}

__n128 sub_1001A763C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045D938;
  *(unsigned char *)(a1 + 24) &= 0xFCu;
  __n128 result = *(__n128 *)(a2 + 8);
  *(__n128 *)(a1 + 8) = result;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return result;
}

void sub_1001A7678()
{
}

void sub_1001A768C()
{
}

void sub_1001A76A4()
{
}

uint64_t sub_1001A76B8(uint64_t result, double a2)
{
  *(double *)(result + 32) = a2;
  *(unsigned char *)(result + 80) |= 1u;
  return result;
}

uint64_t sub_1001A76CC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 40) = a2;
  *(unsigned char *)(result + 80) |= 2u;
  return result;
}

uint64_t sub_1001A76E0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 41) = a2;
  *(unsigned char *)(result + 80) |= 4u;
  return result;
}

uint64_t sub_1001A76F4(uint64_t result, double a2)
{
  *(double *)(result + 48) = a2;
  *(unsigned char *)(result + 80) |= 8u;
  return result;
}

uint64_t sub_1001A7708(uint64_t result, double a2)
{
  *(double *)(result + 56) = a2;
  *(unsigned char *)(result + 80) |= 0x10u;
  return result;
}

uint64_t sub_1001A771C(uint64_t result, double a2)
{
  *(double *)(result + 64) = a2;
  *(unsigned char *)(result + 80) |= 0x20u;
  return result;
}

uint64_t sub_1001A7730(uint64_t result, double a2)
{
  *(double *)(result + 72) = a2;
  *(unsigned char *)(result + 80) |= 0x40u;
  return result;
}

uint64_t sub_1001A7744(uint64_t a1, uint64_t *a2)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v19 = 0;
  int v17 = 0;
  __int16 v16 = 0;
  int v4 = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, __p);
  int v5 = 0;
  int v6 = 0;
  int v7 = 0;
  while (1)
  {
    int v8 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v17, &v16) + v4;
    if (!v17) {
      break;
    }
    switch(v16)
    {
      case 1:
        uint64_t v9 = *a2;
        if (v17 != 10) {
          goto LABEL_26;
        }
        int v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 320))(a2, a1 + 8);
        int v5 = 1;
        break;
      case 2:
        uint64_t v9 = *a2;
        if (v17 != 10) {
          goto LABEL_26;
        }
        int v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 320))(a2, a1 + 16);
        int v6 = 1;
        break;
      case 3:
        uint64_t v9 = *a2;
        if (v17 != 8) {
          goto LABEL_26;
        }
        int v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 312))(a2, a1 + 24);
        int v7 = 1;
        break;
      case 4:
        uint64_t v9 = *a2;
        if (v17 != 4) {
          goto LABEL_26;
        }
        int v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 328))(a2, a1 + 32);
        char v11 = 1;
        goto LABEL_25;
      case 5:
        uint64_t v9 = *a2;
        if (v17 != 3) {
          goto LABEL_26;
        }
        int v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 296))(a2, a1 + 40);
        char v11 = 2;
        goto LABEL_25;
      case 6:
        uint64_t v9 = *a2;
        if (v17 != 3) {
          goto LABEL_26;
        }
        int v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 296))(a2, a1 + 41);
        char v11 = 4;
        goto LABEL_25;
      case 7:
        uint64_t v9 = *a2;
        if (v17 != 4) {
          goto LABEL_26;
        }
        int v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 328))(a2, a1 + 48);
        char v11 = 8;
        goto LABEL_25;
      case 8:
        uint64_t v9 = *a2;
        if (v17 != 4) {
          goto LABEL_26;
        }
        int v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 328))(a2, a1 + 56);
        char v11 = 16;
        goto LABEL_25;
      case 9:
        uint64_t v9 = *a2;
        if (v17 != 4) {
          goto LABEL_26;
        }
        int v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 328))(a2, a1 + 64);
        char v11 = 32;
        goto LABEL_25;
      case 10:
        uint64_t v9 = *a2;
        if (v17 != 4) {
          goto LABEL_26;
        }
        int v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 328))(a2, a1 + 72);
        char v11 = 64;
LABEL_25:
        *(unsigned char *)(a1 + 80) |= v11;
        break;
      default:
        uint64_t v9 = *a2;
LABEL_26:
        int v10 = (*(uint64_t (**)(uint64_t *))(v9 + 352))(a2);
        break;
    }
    int v4 = v10 + v8 + (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2);
  }
  int v12 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if ((v5 & v6 & v7 & 1) == 0)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 1;
  }
  int v13 = v12;
  if (SHIBYTE(v19) < 0) {
    operator delete(__p[0]);
  }
  return (v13 + v8);
}

void sub_1001A7CEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001A7D38(uint64_t a1, _DWORD *a2)
{
  unsigned int v2 = a2[7];
  unsigned int v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  int v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(void *)a2 + 32))(a2, "PedometerData");
  int v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "timestampNanos", 10, 1)+ v6;
  int v8 = (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 8));
  int v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "durationNanos", 10, 2);
  int v11 = v10 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 16));
  int v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v13 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "numberOfSteps", 8, 3);
  int v14 = v13 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 24));
  int v15 = v12 + v14 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  char v16 = *(unsigned char *)(a1 + 80);
  if (v16)
  {
    int v21 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "distance", 4, 4);
    int v22 = v21 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 32));
    v15 += v22 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
    char v16 = *(unsigned char *)(a1 + 80);
    if ((v16 & 2) == 0)
    {
LABEL_4:
      if ((v16 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a1 + 80) & 2) == 0)
  {
    goto LABEL_4;
  }
  int v23 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "floorsAscended", 3, 5);
  int v24 = v15
      + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 128))(a2, *(char *)(a1 + 40));
  int v15 = v23 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v24;
  char v16 = *(unsigned char *)(a1 + 80);
  if ((v16 & 4) == 0)
  {
LABEL_5:
    if ((v16 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  int v25 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "floorsDescended", 3, 6);
  int v26 = v15
      + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 128))(a2, *(char *)(a1 + 41));
  int v15 = v25 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v26;
  char v16 = *(unsigned char *)(a1 + 80);
  if ((v16 & 8) == 0)
  {
LABEL_6:
    if ((v16 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  int v27 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "eventWallclockTimestampSeconds", 4, 7);
  int v28 = v15 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 48));
  int v15 = v27 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v28;
  char v16 = *(unsigned char *)(a1 + 80);
  if ((v16 & 0x10) == 0)
  {
LABEL_7:
    if ((v16 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    int v31 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "activeTime", 4, 9);
    int v32 = v15 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 64));
    int v15 = v31 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v32;
    if ((*(unsigned char *)(a1 + 80) & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_15:
  int v29 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "firstStepTime", 4, 8);
  int v30 = v15 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 56));
  int v15 = v29 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v30;
  char v16 = *(unsigned char *)(a1 + 80);
  if ((v16 & 0x20) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v16 & 0x40) != 0)
  {
LABEL_9:
    int v17 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "currentPace", 4, 10);
    int v18 = v15 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 72));
    int v15 = v17 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v18;
  }
LABEL_10:
  int v19 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 64))(a2);
  uint64_t result = v19 + v15 + (*(unsigned int (**)(_DWORD *))(*(void *)a2 + 40))(a2);
  --a2[6];
  return result;
}

__n128 sub_1001A84CC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045D998;
  *(unsigned char *)(a1 + 80) &= 0x80u;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  __n128 result = *(__n128 *)(a2 + 64);
  *(__n128 *)(a1 + 64) = result;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return result;
}

__n128 sub_1001A8530(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  __n128 result = *(__n128 *)(a2 + 64);
  *(__n128 *)(a1 + 64) = result;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return result;
}

void sub_1001A8570()
{
}

uint64_t sub_1001A8584(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = a2;
  *(unsigned char *)(result + 48) |= 1u;
  return result;
}

uint64_t sub_1001A8598(uint64_t a1, uint64_t *a2)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v19 = 0;
  int v17 = 0;
  __int16 v16 = 0;
  int v4 = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, __p);
  int v5 = 0;
  int v6 = 0;
  int v7 = 0;
  int v8 = 0;
  while (1)
  {
    int v9 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v17, &v16) + v4;
    if (!v17) {
      break;
    }
    switch(v16)
    {
      case 1:
        uint64_t v10 = *a2;
        if (v17 != 4) {
          goto LABEL_15;
        }
        int v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 328))(a2, a1 + 8);
        int v5 = 1;
        break;
      case 2:
        uint64_t v10 = *a2;
        if (v17 != 10) {
          goto LABEL_15;
        }
        int v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 320))(a2, a1 + 16);
        int v6 = 1;
        break;
      case 3:
        uint64_t v10 = *a2;
        if (v17 != 4) {
          goto LABEL_15;
        }
        int v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 328))(a2, a1 + 24);
        int v7 = 1;
        break;
      case 4:
        uint64_t v10 = *a2;
        if (v17 != 4) {
          goto LABEL_15;
        }
        int v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 328))(a2, a1 + 32);
        int v8 = 1;
        break;
      case 5:
        uint64_t v10 = *a2;
        if (v17 != 10) {
          goto LABEL_15;
        }
        int v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 320))(a2, a1 + 40);
        *(unsigned char *)(a1 + 48) |= 1u;
        break;
      default:
        uint64_t v10 = *a2;
LABEL_15:
        int v11 = (*(uint64_t (**)(uint64_t *))(v10 + 352))(a2);
        break;
    }
    int v4 = v11 + v9 + (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2);
  }
  int v12 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if ((v5 & v6 & v7 & v8 & 1) == 0)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 1;
  }
  int v13 = v12;
  if (SHIBYTE(v19) < 0) {
    operator delete(__p[0]);
  }
  return (v13 + v9);
}

void sub_1001A8980(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001A89B8(uint64_t a1, _DWORD *a2)
{
  unsigned int v2 = a2[7];
  unsigned int v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  int v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(void *)a2 + 32))(a2, "AltitudeData");
  int v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "cmLogTime", 4, 1)+ v6;
  int v8 = (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 8));
  int v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "timestampNanos", 10, 2);
  int v11 = v10 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 16));
  int v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v13 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "relativeAltitudeMeters", 4, 3);
  int v14 = v13 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 24));
  int v15 = v14 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v16 = v12
      + v15
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "pressureKiloPascals", 4, 4);
  int v17 = (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 32));
  int v18 = v16 + v17 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  if (*(unsigned char *)(a1 + 48))
  {
    int v19 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "backdatedTimestampNanos", 10, 5);
    int v20 = v19 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 40));
    v18 += v20 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  }
  int v21 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 64))(a2);
  uint64_t result = v21 + v18 + (*(unsigned int (**)(_DWORD *))(*(void *)a2 + 40))(a2);
  --a2[6];
  return result;
}

__n128 sub_1001A8DF4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045D9B8;
  *(unsigned char *)(a1 + 48) &= ~1u;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  __n128 result = *(__n128 *)(a2 + 24);
  *(__n128 *)(a1 + 24) = result;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return result;
}

__n128 sub_1001A8E48(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  __n128 result = *(__n128 *)(a2 + 24);
  *(__n128 *)(a1 + 24) = result;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return result;
}

uint64_t sub_1001A8E74()
{
  qword_10047EEA0 = 0;
  qword_10047EE98 = 0;
  qword_10047EE90 = (uint64_t)&qword_10047EE98;
  uint64_t v1 = 0x400000000;
  unsigned int v2 = &unk_10047C860;
  unsigned int v3 = off_10047C870;
  sub_100168E80(&qword_10047EE90, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EE90, (void *)&_mh_execute_header);
  qword_10047EEB8 = 0;
  qword_10047EEB0 = 0;
  qword_10047EEA8 = (uint64_t)&qword_10047EEB0;
  uint64_t v1 = 0x300000000;
  unsigned int v2 = &unk_10047C890;
  unsigned int v3 = off_10047C8A0;
  sub_100168E80(&qword_10047EEA8, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EEA8, (void *)&_mh_execute_header);
  qword_10047EED0 = 0;
  qword_10047EEC8 = 0;
  qword_10047EEC0 = (uint64_t)&qword_10047EEC8;
  uint64_t v1 = 0x300000000;
  unsigned int v2 = &unk_10047C8B8;
  unsigned int v3 = off_10047C8C8;
  sub_100168E80(&qword_10047EEC0, (uint64_t)&v1);
  return __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EEC0, (void *)&_mh_execute_header);
}

void sub_1001A8FF0(_Unwind_Exception *a1)
{
}

void sub_1001A900C(_Unwind_Exception *a1)
{
}

void sub_1001A9028(_Unwind_Exception *a1)
{
}

void sub_1001A9044()
{
}

__n128 sub_1001A9058(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045DA38;
  *(unsigned char *)(a1 + 56) &= 0xFCu;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  __n128 result = *(__n128 *)(a2 + 40);
  *(__n128 *)(a1 + 40) = result;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return result;
}

void *sub_1001A90A4(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"ObservationStats(", 17);
  int v4 = sub_10002986C(a1, (uint64_t)"sumWeights=", 11);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001645DC((double *)(a2 + 8), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v27);
    v27.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v27);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v7 = sub_10002986C(a1, (uint64_t)", ", 2);
  int v8 = sub_10002986C(v7, (uint64_t)"sum=", 4);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001645DC((double *)(a2 + 16), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v27);
    v27.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v27);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v9 = &__p;
  }
  else {
    int v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v10 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v8, (uint64_t)v9, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v11 = sub_10002986C(a1, (uint64_t)", ", 2);
  int v12 = sub_10002986C(v11, (uint64_t)"sumSquared=", 11);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001645DC((double *)(a2 + 24), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v27);
    v27.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v27);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v13 = &__p;
  }
  else {
    int v13 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v14 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v12, (uint64_t)v13, v14);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v15 = sub_10002986C(a1, (uint64_t)", ", 2);
  int v16 = sub_10002986C(v15, (uint64_t)"sumSquaredWeights=", 18);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001645DC((double *)(a2 + 32), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v27);
    v27.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v27);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v17 = &__p;
  }
  else {
    int v17 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v18 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v18 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v16, (uint64_t)v17, v18);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v19 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v19, (uint64_t)"min=", 4);
  if (*(unsigned char *)(a2 + 56))
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001645DC((double *)(a2 + 40), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v27);
      v27.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)&v27);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v20 = &__p;
    }
    else {
      int v20 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v21 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v21 = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v20, v21);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  int v22 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v22, (uint64_t)"max=", 4);
  if ((*(unsigned char *)(a2 + 56) & 2) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001645DC((double *)(a2 + 48), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v27);
      v27.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)&v27);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v23 = &__p;
    }
    else {
      int v23 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v24 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v24 = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v23, v24);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001A9590(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::bad_cast a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001A95FC()
{
}

void *sub_1001A9610(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"LinearSaturationFunctionParameters(", 35);
  sub_10002986C(a1, (uint64_t)"slope=", 6);
  if (*(unsigned char *)(a2 + 40))
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001645DC((double *)(a2 + 8), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v17);
      v17.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)&v17);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  int v6 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v6, (uint64_t)"intercept=", 10);
  if ((*(unsigned char *)(a2 + 40) & 2) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001645DC((double *)(a2 + 16), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v17);
      v17.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)&v17);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v7 = &__p;
    }
    else {
      int v7 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v8 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v8 = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v7, v8);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  int v9 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v9, (uint64_t)"max=", 4);
  if ((*(unsigned char *)(a2 + 40) & 4) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001645DC((double *)(a2 + 24), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v17);
      v17.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)&v17);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v10 = &__p;
    }
    else {
      std::string::size_type v10 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v11 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v11 = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v10, v11);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  int v12 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v12, (uint64_t)"min=", 4);
  if ((*(unsigned char *)(a2 + 40) & 8) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001645DC((double *)(a2 + 32), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v17);
      v17.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)&v17);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v13 = &__p;
    }
    else {
      int v13 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v14 = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v13, v14);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001A99B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::bad_cast a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001A9A08()
{
}

uint64_t sub_1001A9A1C(uint64_t a1, _DWORD *a2)
{
  unsigned int v2 = a2[7];
  unsigned int v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  int v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(void *)a2 + 32))(a2, "Universal2d");
  int v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "x", 4, 1)
     + v6;
  int v8 = (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 8));
  int v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "y", 4, 2);
  LODWORD(a1) = v10 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 16));
  int v11 = v9 + a1 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  LODWORD(a1) = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 64))(a2);
  uint64_t result = v11 + a1 + (*(unsigned int (**)(_DWORD *))(*(void *)a2 + 40))(a2);
  --a2[6];
  return result;
}

__n128 sub_1001A9C7C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045DA98;
  *(unsigned char *)(a1 + 24) &= 0xFCu;
  __n128 result = *(__n128 *)(a2 + 8);
  *(__n128 *)(a1 + 8) = result;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return result;
}

void *sub_1001A9CB8(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"Universal2d(", 12);
  int v4 = sub_10002986C(a1, (uint64_t)"x=", 2);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001645DC((double *)(a2 + 8), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v13);
    v13.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v13);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v7 = sub_10002986C(a1, (uint64_t)", ", 2);
  int v8 = sub_10002986C(v7, (uint64_t)"y=", 2);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001645DC((double *)(a2 + 16), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v13);
    v13.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v13);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v9 = &__p;
  }
  else {
    int v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v10 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v8, (uint64_t)v9, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001A9E7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::bad_cast a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001A9EB8()
{
}

uint64_t sub_1001A9ECC(uint64_t a1, uint64_t *a2)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v14 = 0;
  int v12 = 0;
  __int16 v11 = 0;
  for (int i = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, __p);
        ;
        int i = v7 + v5 + (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2))
  {
    int v5 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v12, &v11) + i;
    if (!v12) {
      break;
    }
    if (v11 == 2)
    {
      uint64_t v6 = *a2;
      if (v12 == 4)
      {
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 16);
        char v8 = 2;
        goto LABEL_9;
      }
    }
    else if (v11 == 1)
    {
      uint64_t v6 = *a2;
      if (v12 == 4)
      {
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 8);
        char v8 = 1;
LABEL_9:
        *(unsigned char *)(a1 + 24) |= v8;
        continue;
      }
    }
    else
    {
      uint64_t v6 = *a2;
    }
    int v7 = (*(uint64_t (**)(uint64_t *))(v6 + 352))(a2);
  }
  int v9 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v14) < 0) {
    operator delete(__p[0]);
  }
  return (v9 + v5);
}

void sub_1001AA10C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_1001AA12C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045DAB8;
  *(unsigned char *)(a1 + 24) &= 0xFCu;
  __n128 result = *(__n128 *)(a2 + 8);
  *(__n128 *)(a1 + 8) = result;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return result;
}

void *sub_1001AA168(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"LatLon(", 7);
  int v4 = sub_10002986C(a1, (uint64_t)"lat=", 4);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001645DC((double *)(a2 + 8), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v13);
    v13.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v13);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v7 = sub_10002986C(a1, (uint64_t)", ", 2);
  char v8 = sub_10002986C(v7, (uint64_t)"lon=", 4);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001645DC((double *)(a2 + 16), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v13);
    v13.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v13);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v9 = &__p;
  }
  else {
    int v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v10 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v8, (uint64_t)v9, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001AA32C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::bad_cast a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001AA368()
{
}

void *sub_1001AA37C(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"HomogeneousOrthonormalMatrix2d(", 31);
  int v4 = sub_10002986C(a1, (uint64_t)"universalLocationOfCoordinateFrameOrigin=", 41);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001A54D0(a2 + 8, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v19);
    v19.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v19);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v7 = sub_10002986C(a1, (uint64_t)", ", 2);
  char v8 = sub_10002986C(v7, (uint64_t)"universalLengthOfCoordinateFrameUnitVector=", 43);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001645DC((double *)(a2 + 40), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v19);
    v19.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v19);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v9 = &__p;
  }
  else {
    int v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v10 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v8, (uint64_t)v9, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  __int16 v11 = sub_10002986C(a1, (uint64_t)", ", 2);
  int v12 = sub_10002986C(v11, (uint64_t)"localCoordinateFrameIsRightHanded=", 34);
  int v20 = 0;
  std::string::size_type v21 = 0;
  v19.__vftable = 0;
  if (*(unsigned char *)(a2 + 48)) {
    char v13 = 49;
  }
  else {
    char v13 = 48;
  }
  LOBYTE(v19.__vftable) = v13;
  HIBYTE(v21) = 1;
  sub_10002986C(v12, (uint64_t)&v19, 1);
  if (SHIBYTE(v21) < 0) {
    operator delete(v19.__vftable);
  }
  uint64_t v14 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v14, (uint64_t)"universalOrientationOfCoordinateFrameX=", 39);
  if ((*(unsigned char *)(a2 + 64) & 4) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001645DC((double *)(a2 + 56), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v19);
      v19.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)&v19);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v15 = &__p;
    }
    else {
      int v15 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v16 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v16 = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v15, v16);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001AA67C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::bad_cast a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001AA6D8()
{
}

double sub_1001AA6EC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045DAF8;
  *(void *)(a1 + 16) = off_10045DAD8;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 24) = off_10045DA98;
  *(unsigned char *)(a1 + 48) &= 0xFCu;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a1 + 80) & 0xF8 | 4;
  *(unsigned char *)(a1 + 88) &= 0xF8u;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  double result = *(double *)(a2 + 72);
  *(double *)(a1 + 72) = result;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return result;
}

void *sub_1001AA7C4(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"BoundedCellCoordinateFrame(", 27);
  int v4 = sub_10002986C(a1, (uint64_t)"rows=", 5);
  sub_10016714C((int *)(a2 + 8), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v7 = sub_10002986C(a1, (uint64_t)", ", 2);
  char v8 = sub_10002986C(v7, (uint64_t)"cols=", 5);
  sub_10016714C((int *)(a2 + 12), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v9 = &__p;
  }
  else {
    int v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v10 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v8, (uint64_t)v9, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  __int16 v11 = sub_10002986C(a1, (uint64_t)", ", 2);
  int v12 = sub_10002986C(v11, (uint64_t)"transform=", 10);
  memset(&v16, 0, sizeof(v16));
  if ((sub_1001A5B8C(a2 + 16, &v16) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&__p);
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
    sub_1000DB0D4((uint64_t)&__p);
  }
  if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    char v13 = &v16;
  }
  else {
    char v13 = (std::string *)v16.__r_.__value_.__r.__words[0];
  }
  if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v14 = HIBYTE(v16.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v14 = v16.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v12, (uint64_t)v13, v14);
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001AA99C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::bad_cast a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001AA9E4()
{
}

uint64_t sub_1001AA9F8(uint64_t a1, uint64_t *a2)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v13 = 0;
  int v11 = 0;
  __int16 v10 = 0;
  for (int i = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, __p);
        ;
        int i = v7 + v5 + (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2))
  {
    int v5 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v11, &v10) + i;
    if (!v11) {
      break;
    }
    if (v10 == 1)
    {
      uint64_t v6 = *a2;
      if (v11 == 8)
      {
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 8);
        *(unsigned char *)(a1 + 12) |= 1u;
        continue;
      }
    }
    else
    {
      uint64_t v6 = *a2;
    }
    int v7 = (*(uint64_t (**)(uint64_t *))(v6 + 352))(a2);
  }
  int v8 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v13) < 0) {
    operator delete(__p[0]);
  }
  return (v8 + v5);
}

void sub_1001AABD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001AABF4(uint64_t a1)
{
  *(void *)a1 = off_10045DB78;
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
  nullsub_15(a1 + 32);

  operator delete();
}

uint64_t sub_1001AAC6C(uint64_t a1, uint64_t *a2)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v15 = 0;
  int v13 = 0;
  __int16 v12 = 0;
  for (int i = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, __p);
        ;
        int i = v7 + v5 + (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2))
  {
    int v5 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v13, &v12) + i;
    if (!v13) {
      break;
    }
    switch(v12)
    {
      case 1:
        uint64_t v6 = *a2;
        if (v13 != 10) {
          goto LABEL_42;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 8);
        int v8 = 1;
        goto LABEL_40;
      case 2:
        if (v13 != 12) {
          goto LABEL_41;
        }
        int v7 = sub_1001A9ECC(a1 + 32, a2);
        int v8 = 8;
        goto LABEL_40;
      case 3:
        uint64_t v6 = *a2;
        if (v13 != 11) {
          goto LABEL_42;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 336))(a2, a1 + 64);
        int v8 = 16;
        goto LABEL_40;
      case 4:
        uint64_t v6 = *a2;
        if (v13 != 4) {
          goto LABEL_42;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 88);
        int v8 = 32;
        goto LABEL_40;
      case 5:
        uint64_t v6 = *a2;
        if (v13 != 4) {
          goto LABEL_42;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 96);
        int v8 = 64;
        goto LABEL_40;
      case 6:
        uint64_t v6 = *a2;
        if (v13 != 4) {
          goto LABEL_42;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 104);
        int v8 = 128;
        goto LABEL_40;
      case 7:
        uint64_t v6 = *a2;
        if (v13 != 4) {
          goto LABEL_42;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 112);
        int v8 = 256;
        goto LABEL_40;
      case 8:
        uint64_t v6 = *a2;
        if (v13 != 8) {
          goto LABEL_42;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 120);
        int v8 = 512;
        goto LABEL_40;
      case 9:
        uint64_t v6 = *a2;
        if (v13 != 10) {
          goto LABEL_42;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 16);
        int v8 = 2;
        goto LABEL_40;
      case 10:
        uint64_t v6 = *a2;
        if (v13 != 10) {
          goto LABEL_42;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 24);
        int v8 = 4;
        goto LABEL_40;
      case 11:
        uint64_t v6 = *a2;
        if (v13 != 8) {
          goto LABEL_42;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 124);
        int v8 = 1024;
        goto LABEL_40;
      case 12:
        uint64_t v6 = *a2;
        if (v13 != 4) {
          goto LABEL_42;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 128);
        int v8 = 2048;
        goto LABEL_40;
      case 13:
        uint64_t v6 = *a2;
        if (v13 != 4) {
          goto LABEL_42;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 136);
        int v8 = 4096;
        goto LABEL_40;
      case 14:
        uint64_t v6 = *a2;
        if (v13 != 4) {
          goto LABEL_42;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 144);
        int v8 = 0x2000;
        goto LABEL_40;
      case 15:
        uint64_t v6 = *a2;
        if (v13 != 4) {
          goto LABEL_42;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 152);
        int v8 = 0x4000;
        goto LABEL_40;
      case 16:
        uint64_t v6 = *a2;
        if (v13 != 4) {
          goto LABEL_42;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 160);
        int v8 = 0x8000;
        goto LABEL_40;
      case 17:
        uint64_t v6 = *a2;
        if (v13 != 4) {
          goto LABEL_42;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 168);
        int v8 = 0x10000;
        goto LABEL_40;
      case 18:
        if (v13 != 12) {
          goto LABEL_41;
        }
        int v7 = sub_1001AA9F8(a1 + 176, a2);
        int v8 = 0x20000;
LABEL_40:
        int v9 = *(unsigned __int16 *)(a1 + 192) | (*(unsigned __int8 *)(a1 + 194) << 16) | v8;
        *(_WORD *)(a1 + 192) = v9;
        *(unsigned char *)(a1 + 194) = BYTE2(v9);
        break;
      default:
LABEL_41:
        uint64_t v6 = *a2;
LABEL_42:
        int v7 = (*(uint64_t (**)(uint64_t *))(v6 + 352))(a2);
        break;
    }
  }
  int v10 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v15) < 0) {
    operator delete(__p[0]);
  }
  return (v10 + v5);
}

void sub_1001AB41C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001AB484(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045DB78;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 32) = off_10045DAB8;
  *(unsigned char *)(a1 + 56) &= 0xFCu;
  *(void *)(a1 + 64) = 0;
  int v4 = (std::string *)(a1 + 64);
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 176) = off_10045DB58;
  *(_DWORD *)(a1 + 184) = 0;
  *(unsigned char *)(a1 + 188) &= ~1u;
  char v5 = *(unsigned char *)(a1 + 194);
  *(_WORD *)(a1 + 192) = 0;
  uint64_t v6 = a1 + 192;
  *(unsigned char *)(a1 + 194) = v5 & 0xFC;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_10007B704(a1 + 32, a2 + 32);
  std::string::operator=(v4, (const std::string *)(a2 + 64));
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  __int16 v7 = *(_WORD *)(a2 + 192);
  *(unsigned char *)(v6 + 2) = *(unsigned char *)(a2 + 194);
  *(_WORD *)uint64_t v6 = v7;
  return a1;
}

void sub_1001AB5D4(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 87) < 0) {
    operator delete(*v3);
  }
  nullsub_15(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1001AB5FC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_10007B704(a1 + 32, a2 + 32);
  std::string::operator=((std::string *)(a1 + 64), (const std::string *)(a2 + 64));
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  __int16 v4 = *(_WORD *)(a2 + 192);
  *(unsigned char *)(a1 + 194) = *(unsigned char *)(a2 + 194);
  *(_WORD *)(a1 + 192) = v4;
  return a1;
}

uint64_t sub_1001AB69C(uint64_t a1)
{
  *(void *)a1 = off_10045DBB8;
  if (*(char *)(a1 + 159) < 0)
  {
    operator delete(*(void **)(a1 + 136));
    if ((*(char *)(a1 + 135) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(a1 + 87) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((*(char *)(a1 + 135) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 112));
  if ((*(char *)(a1 + 87) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(a1 + 63) & 0x80000000) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    operator delete(*(void **)(a1 + 40));
    if ((*(char *)(a1 + 39) & 0x80000000) == 0) {
      return a1;
    }
    goto LABEL_11;
  }
LABEL_9:
  operator delete(*(void **)(a1 + 64));
  if (*(char *)(a1 + 63) < 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((*(char *)(a1 + 39) & 0x80000000) == 0) {
    return a1;
  }
LABEL_11:
  operator delete(*(void **)(a1 + 16));
  return a1;
}

void sub_1001AB760(uint64_t a1)
{
  sub_1001AB69C(a1);

  operator delete();
}

std::string *sub_1001AB798(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 16), a2);
}

std::string *sub_1001AB7A0(uint64_t a1, const std::string *a2)
{
  double result = std::string::operator=((std::string *)(a1 + 40), a2);
  *(_WORD *)(a1 + 160) |= 4u;
  return result;
}

std::string *sub_1001AB7D4(uint64_t a1, const std::string *a2)
{
  double result = std::string::operator=((std::string *)(a1 + 64), a2);
  *(_WORD *)(a1 + 160) |= 8u;
  return result;
}

uint64_t sub_1001AB808(uint64_t result, int a2)
{
  *(_DWORD *)(result + 88) = a2;
  return result;
}

uint64_t sub_1001AB810(uint64_t result, int a2)
{
  *(_DWORD *)(result + 92) = a2;
  return result;
}

uint64_t sub_1001AB818(uint64_t result, int a2)
{
  *(_DWORD *)(result + 96) = a2;
  return result;
}

uint64_t sub_1001AB820(uint64_t result, char a2)
{
  *(unsigned char *)(result + 100) = a2;
  return result;
}

uint64_t sub_1001AB828(uint64_t result, int a2)
{
  *(_DWORD *)(result + 104) = a2;
  return result;
}

uint64_t sub_1001AB830(uint64_t result, int a2)
{
  *(_DWORD *)(result + 108) = a2;
  return result;
}

uint64_t sub_1001AB838(uint64_t a1, uint64_t *a2)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v14 = 0;
  int v12 = 0;
  __int16 v11 = 0;
  for (int i = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, __p);
        ;
        int i = v7 + v5 + (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2))
  {
    int v5 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v12, &v11) + i;
    if (!v12) {
      break;
    }
    switch(v11)
    {
      case 1:
        uint64_t v6 = *a2;
        if (v12 != 10) {
          goto LABEL_30;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 8);
        __int16 v8 = 1;
        goto LABEL_29;
      case 3:
        uint64_t v6 = *a2;
        if (v12 != 11) {
          goto LABEL_30;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 336))(a2, a1 + 136);
        __int16 v8 = 2048;
        goto LABEL_29;
      case 4:
        uint64_t v6 = *a2;
        if (v12 != 11) {
          goto LABEL_30;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 336))(a2, a1 + 16);
        __int16 v8 = 2;
        goto LABEL_29;
      case 5:
        uint64_t v6 = *a2;
        if (v12 != 11) {
          goto LABEL_30;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 336))(a2, a1 + 40);
        __int16 v8 = 4;
        goto LABEL_29;
      case 6:
        uint64_t v6 = *a2;
        if (v12 != 11) {
          goto LABEL_30;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 336))(a2, a1 + 64);
        __int16 v8 = 8;
        goto LABEL_29;
      case 7:
        uint64_t v6 = *a2;
        if (v12 != 8) {
          goto LABEL_30;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 88);
        __int16 v8 = 16;
        goto LABEL_29;
      case 8:
        uint64_t v6 = *a2;
        if (v12 != 8) {
          goto LABEL_30;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 92);
        __int16 v8 = 32;
        goto LABEL_29;
      case 9:
        uint64_t v6 = *a2;
        if (v12 != 8) {
          goto LABEL_30;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 96);
        __int16 v8 = 64;
        goto LABEL_29;
      case 10:
        uint64_t v6 = *a2;
        if (v12 != 3) {
          goto LABEL_30;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 296))(a2, a1 + 100);
        __int16 v8 = 128;
        goto LABEL_29;
      case 11:
        uint64_t v6 = *a2;
        if (v12 != 8) {
          goto LABEL_30;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 104);
        __int16 v8 = 256;
        goto LABEL_29;
      case 12:
        uint64_t v6 = *a2;
        if (v12 != 8) {
          goto LABEL_30;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 108);
        __int16 v8 = 512;
        goto LABEL_29;
      case 13:
        uint64_t v6 = *a2;
        if (v12 != 11) {
          goto LABEL_30;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 336))(a2, a1 + 112);
        __int16 v8 = 1024;
LABEL_29:
        *(_WORD *)(a1 + 160) |= v8;
        break;
      default:
        uint64_t v6 = *a2;
LABEL_30:
        int v7 = (*(uint64_t (**)(uint64_t *))(v6 + 352))(a2);
        break;
    }
  }
  int v9 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v14) < 0) {
    operator delete(__p[0]);
  }
  return (v9 + v5);
}

void sub_1001ABE24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001ABE78(uint64_t a1, _DWORD *a2)
{
  unsigned int v2 = a2[7];
  unsigned int v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  int v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(void *)a2 + 32))(a2, "BeaconMeasurement");
  int v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "timestampNanos", 10, 1)+ v6;
  int v8 = (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 8));
  int v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  if ((*(_WORD *)(a1 + 160) & 0x800) != 0)
  {
    int v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "DEPRECATED_name", 11, 3);
    int v11 = v10 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(void *)a2 + 168))(a2, a1 + 136);
    v9 += v11 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  }
  int v12 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "uuid", 11, 4);
  int v13 = v9 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(void *)a2 + 168))(a2, a1 + 16);
  int v14 = v12 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v13;
  __int16 v15 = *(_WORD *)(a1 + 160);
  if ((v15 & 4) != 0)
  {
    int v16 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "adData", 11, 5);
    int v17 = v16 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(void *)a2 + 168))(a2, a1 + 40);
    v14 += v17 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
    __int16 v15 = *(_WORD *)(a1 + 160);
  }
  if ((v15 & 8) != 0)
  {
    int v18 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "mfrData", 11, 6);
    int v19 = v14 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(void *)a2 + 168))(a2, a1 + 64);
    int v14 = v18 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v19;
  }
  int v20 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "transmitPowerLevel", 8, 7);
  int v21 = v14 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 88));
  int v22 = v20 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v23 = v22
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "rssi", 8, 8);
  int v24 = v23 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 92));
  int v25 = v24 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v26 = v25
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "channel", 8, 9)+ v21;
  int v27 = (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 96));
  int v28 = v27 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v29 = v28
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "measuredPower", 3, 10);
  int v30 = v29
      + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 128))(a2, *(char *)(a1 + 100));
  int v31 = v30 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v32 = v31
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "minorID", 8, 11);
  int v33 = v26
      + v32
      + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 104));
  int v34 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v35 = v34
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "majorID", 8, 12);
  int v36 = v35 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 108));
  int v37 = v36 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v38 = v37
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "proximityUUID", 11, 13);
  int v39 = v38 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(void *)a2 + 168))(a2, a1 + 112);
  int v40 = v39 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v41 = v33 + v40 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 64))(a2);
  uint64_t result = v41 + (*(unsigned int (**)(_DWORD *))(*(void *)a2 + 40))(a2);
  --a2[6];
  return result;
}

uint64_t sub_1001AC6F4(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  __int16 v4 = (std::string *)(a1 + 64);
  int v5 = (std::string *)(a1 + 40);
  *(_OWORD *)(a1 + 112) = 0u;
  int v6 = (std::string *)(a1 + 112);
  int v7 = (std::string *)(a1 + 136);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(void *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_WORD *)(a1 + 160) &= 0xF000u;
  uint64_t v8 = *(void *)(a2 + 8);
  *(void *)a1 = off_10045DBB8;
  *(void *)(a1 + 8) = v8;
  std::string::operator=((std::string *)(a1 + 16), (const std::string *)(a2 + 16));
  std::string::operator=(v5, (const std::string *)(a2 + 40));
  std::string::operator=(v4, (const std::string *)(a2 + 64));
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  std::string::operator=(v6, (const std::string *)(a2 + 112));
  std::string::operator=(v7, (const std::string *)(a2 + 136));
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  return a1;
}

void sub_1001AC7F4(_Unwind_Exception *exception_object)
{
  if (v1[159] < 0)
  {
    operator delete(*v6);
    if ((v1[135] & 0x80000000) == 0)
    {
LABEL_3:
      if ((v1[87] & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v1[135] & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v5);
  if ((v1[87] & 0x80000000) == 0)
  {
LABEL_4:
    if ((v1[63] & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(*v4);
  if ((v1[63] & 0x80000000) == 0)
  {
LABEL_5:
    if ((v1[39] & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(*v3);
  if ((v1[39] & 0x80000000) == 0) {
LABEL_6:
  }
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001AC87C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  std::string::operator=((std::string *)(a1 + 16), (const std::string *)(a2 + 16));
  std::string::operator=((std::string *)(a1 + 40), (const std::string *)(a2 + 40));
  std::string::operator=((std::string *)(a1 + 64), (const std::string *)(a2 + 64));
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  std::string::operator=((std::string *)(a1 + 112), (const std::string *)(a2 + 112));
  std::string::operator=((std::string *)(a1 + 136), (const std::string *)(a2 + 136));
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  return a1;
}

void sub_1001AC914()
{
}

uint64_t sub_1001AC928(uint64_t result, int a2)
{
  *(_DWORD *)(result + 16) = a2;
  return result;
}

uint64_t sub_1001AC930(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

uint64_t sub_1001AC938(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  *(unsigned char *)(result + 40) |= 0x20u;
  return result;
}

uint64_t sub_1001AC94C(uint64_t a1, uint64_t *a2)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v14 = 0;
  int v12 = 0;
  __int16 v11 = 0;
  for (int i = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, __p);
        ;
        int i = v7 + v5 + (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2))
  {
    int v5 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v12, &v11) + i;
    if (!v12) {
      break;
    }
    switch(v11)
    {
      case 1:
        uint64_t v6 = *a2;
        if (v12 != 4) {
          goto LABEL_18;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 8);
        char v8 = 1;
        goto LABEL_17;
      case 2:
        uint64_t v6 = *a2;
        if (v12 != 8) {
          goto LABEL_18;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 16);
        char v8 = 2;
        goto LABEL_17;
      case 3:
        uint64_t v6 = *a2;
        if (v12 != 2) {
          goto LABEL_18;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 280))(a2, a1 + 20);
        char v8 = 4;
        goto LABEL_17;
      case 4:
        uint64_t v6 = *a2;
        if (v12 != 10) {
          goto LABEL_18;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 24);
        char v8 = 8;
        goto LABEL_17;
      case 5:
        uint64_t v6 = *a2;
        if (v12 != 2) {
          goto LABEL_18;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 280))(a2, a1 + 32);
        char v8 = 16;
        goto LABEL_17;
      case 6:
        uint64_t v6 = *a2;
        if (v12 != 8) {
          goto LABEL_18;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 312))(a2, a1 + 36);
        char v8 = 32;
LABEL_17:
        *(unsigned char *)(a1 + 40) |= v8;
        break;
      default:
        uint64_t v6 = *a2;
LABEL_18:
        int v7 = (*(uint64_t (**)(uint64_t *))(v6 + 352))(a2);
        break;
    }
  }
  int v9 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v14) < 0) {
    operator delete(__p[0]);
  }
  return (v9 + v5);
}

void sub_1001ACD1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001ACD54(uint64_t a1, _DWORD *a2)
{
  unsigned int v2 = a2[7];
  unsigned int v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  int v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(void *)a2 + 32))(a2, "WifiRssiValue");
  int v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "rssi", 4, 1)+ v6;
  int v8 = (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 8));
  int v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "freq", 8, 2);
  int v11 = v10 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 16));
  int v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v13 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "adhoc", 2, 3);
  int v14 = v13 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 120))(a2, *(unsigned __int8 *)(a1 + 20));
  int v15 = v14 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v16 = v12
      + v15
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "measurementTimestampNanos", 10, 4);
  int v17 = (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 24));
  int v18 = v17 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v19 = v18
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "personalHotspot", 2, 5);
  int v20 = v19 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 120))(a2, *(unsigned __int8 *)(a1 + 32));
  int v21 = v16 + v20 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  if ((*(unsigned char *)(a1 + 40) & 0x20) != 0)
  {
    int v22 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "channelFlags", 8, 6);
    int v23 = v22 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 36));
    v21 += v23 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  }
  int v24 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 64))(a2);
  uint64_t result = v24 + v21 + (*(unsigned int (**)(_DWORD *))(*(void *)a2 + 40))(a2);
  --a2[6];
  return result;
}

double sub_1001AD228(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045DBE8;
  *(unsigned char *)(a1 + 40) &= 0xC0u;
  double result = *(double *)(a2 + 8);
  *(double *)(a1 + 8) = result;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return result;
}

uint64_t sub_1001AD28C(uint64_t a1)
{
  *(void *)a1 = off_10045DC08;
  unsigned int v2 = *(void **)(a1 + 56);
  if (v2)
  {
    *(void *)(a1 + 64) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  return a1;
}

void sub_1001AD2FC(uint64_t a1)
{
  *(void *)a1 = off_10045DC08;
  unsigned int v2 = *(void **)(a1 + 56);
  if (v2)
  {
    *(void *)(a1 + 64) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }

  operator delete();
}

uint64_t sub_1001AD37C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 16) = a2;
  *(unsigned char *)(result + 104) |= 1u;
  return result;
}

uint64_t sub_1001AD390(uint64_t result, char a2)
{
  *(unsigned char *)(result + 21) = a2;
  return result;
}

std::string *sub_1001AD398(std::string *a1, const std::string *a2)
{
  double result = std::string::operator=(a1 + 1, a2);
  a1[4].__r_.__value_.__s.__data_[8] |= 2u;
  return result;
}

uint64_t sub_1001AD3CC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 80) = a2;
  return result;
}

uint64_t sub_1001AD3D4(uint64_t result, double a2)
{
  *(double *)(result + 88) = a2;
  *(unsigned char *)(result + 104) |= 4u;
  return result;
}

uint64_t sub_1001AD3E8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 96) = a2;
  *(unsigned char *)(result + 104) |= 8u;
  return result;
}

uint64_t sub_1001AD3FC(uint64_t a1, uint64_t *a2)
{
  v29[0] = 0;
  v29[1] = 0;
  uint64_t v30 = 0;
  int v28 = 0;
  __int16 v27 = 0;
  int v4 = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, v29);
  int v5 = 0;
  int v6 = 0;
  int v7 = 0;
  int v8 = 0;
  int v9 = 0;
  int v25 = 0;
  while (1)
  {
    int v10 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, v29, &v28, &v27) + v4;
    if (!v28) {
      break;
    }
    switch(v27)
    {
      case 1:
        uint64_t v11 = *a2;
        if (v28 != 10) {
          goto LABEL_42;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 320))(a2, a1 + 8) + v10;
        int v5 = 1;
        break;
      case 2:
        uint64_t v11 = *a2;
        if (v28 != 8) {
          goto LABEL_42;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 312))(a2, a1 + 16) + v10;
        *(unsigned char *)(a1 + 104) |= 1u;
        break;
      case 3:
        uint64_t v11 = *a2;
        if (v28 != 2) {
          goto LABEL_42;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 280))(a2, a1 + 20) + v10;
        int v6 = 1;
        break;
      case 4:
        uint64_t v11 = *a2;
        if (v28 != 2) {
          goto LABEL_42;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 280))(a2, a1 + 21) + v10;
        int v7 = 1;
        break;
      case 5:
        uint64_t v11 = *a2;
        if (v28 != 11) {
          goto LABEL_42;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 336))(a2, a1 + 24) + v10;
        *(unsigned char *)(a1 + 104) |= 2u;
        break;
      case 6:
        uint64_t v11 = *a2;
        if (v28 != 6) {
          goto LABEL_42;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 304))(a2, a1 + 48) + v10;
        int v8 = 1;
        break;
      case 7:
        if (v28 != 15) {
          goto LABEL_24;
        }
        *(void *)(a1 + 64) = *(void *)(a1 + 56);
        uint64_t v26 = 0;
        int v14 = (*(uint64_t (**)(uint64_t *, uint64_t *, char *))(*a2 + 248))(a2, &v26, (char *)&v26 + 4);
        int v15 = HIDWORD(v26);
        uint64_t v16 = *(void *)(a1 + 56);
        unint64_t v17 = (*(void *)(a1 + 64) - v16) >> 2;
        if (HIDWORD(v26) <= v17)
        {
          if (HIDWORD(v26) < v17) {
            *(void *)(a1 + 64) = v16 + 4 * HIDWORD(v26);
          }
        }
        else
        {
          sub_1001B2020(a1 + 56, HIDWORD(v26) - v17);
          int v15 = HIDWORD(v26);
        }
        int v18 = v14 + v10;
        if (v15)
        {
          uint64_t v19 = 0;
          unint64_t v20 = 0;
          do
          {
            v18 += (*(uint64_t (**)(uint64_t *, uint64_t))(*a2 + 312))(a2, *(void *)(a1 + 56) + v19);
            ++v20;
            v19 += 4;
          }
          while (v20 < HIDWORD(v26));
        }
        int v12 = (*(uint64_t (**)(uint64_t *))(*a2 + 256))(a2) + v18;
        int v9 = 1;
        break;
      case 8:
        uint64_t v11 = *a2;
        if (v28 != 2) {
          goto LABEL_42;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 280))(a2, a1 + 80) + v10;
        int v25 = 1;
        break;
      case 9:
        uint64_t v11 = *a2;
        if (v28 != 4) {
          goto LABEL_42;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 328))(a2, a1 + 88) + v10;
        *(unsigned char *)(a1 + 104) |= 4u;
        break;
      case 10:
        uint64_t v11 = *a2;
        if (v28 != 2) {
          goto LABEL_42;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 280))(a2, a1 + 96) + v10;
        *(unsigned char *)(a1 + 104) |= 8u;
        break;
      case 11:
        uint64_t v11 = *a2;
        if (v28 != 2) {
          goto LABEL_42;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 280))(a2, a1 + 97) + v10;
        *(unsigned char *)(a1 + 104) |= 0x10u;
        break;
      case 12:
        uint64_t v11 = *a2;
        if (v28 != 2) {
          goto LABEL_42;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 280))(a2, a1 + 98) + v10;
        *(unsigned char *)(a1 + 104) |= 0x20u;
        break;
      case 13:
        uint64_t v11 = *a2;
        if (v28 != 8)
        {
LABEL_42:
          int v13 = (*(uint64_t (**)(uint64_t *))(v11 + 352))(a2);
          goto LABEL_43;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 312))(a2, a1 + 100) + v10;
        *(unsigned char *)(a1 + 104) |= 0x40u;
        break;
      default:
LABEL_24:
        int v13 = (*(uint64_t (**)(uint64_t *))(*a2 + 352))(a2);
LABEL_43:
        int v12 = v13 + v10;
        break;
    }
    int v4 = (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2) + v12;
  }
  int v21 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if ((v5 & v6 & v7 & v8 & v9 & v25 & 1) == 0)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 1;
  }
  int v22 = v21;
  if (SHIBYTE(v30) < 0) {
    operator delete(v29[0]);
  }
  return (v22 + v10);
}

void sub_1001ADD34(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 - 81) < 0) {
    operator delete(*(void **)(v1 - 104));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001ADD98(uint64_t a1, _DWORD *a2)
{
  unsigned int v2 = a2[7];
  unsigned int v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  int v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(void *)a2 + 32))(a2, "WifiScanSettings");
  int v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "initiatedTimestamp", 10, 1)+ v6;
  int v8 = (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 8));
  int v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  if (*(unsigned char *)(a1 + 104))
  {
    int v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "error", 8, 2);
    int v11 = v10 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 16));
    v9 += v11 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  }
  int v12 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "cached", 2, 3);
  int v13 = v9 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 120))(a2, *(unsigned __int8 *)(a1 + 20));
  int v14 = v12 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v15 = v14
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "indoorScan", 2, 4);
  int v16 = v15
      + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 120))(a2, *(unsigned __int8 *)(a1 + 21))
      + v13;
  int v17 = v16 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  if ((*(unsigned char *)(a1 + 104) & 2) != 0)
  {
    int v18 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "initiator", 11, 5);
    int v19 = v18 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(void *)a2 + 168))(a2, a1 + 24);
    v17 += v19 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  }
  int v20 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "dwellMs", 6, 6);
  int v21 = v17
      + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 136))(a2, *(__int16 *)(a1 + 48));
  int v22 = v20 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v23 = v22
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "frequencies", 15, 7);
  int v24 = v23
      + (*(uint64_t (**)(_DWORD *, uint64_t, void))(*(void *)a2 + 88))(a2, 8, (*(void *)(a1 + 64) - *(void *)(a1 + 56)) >> 2)+ v21;
  for (int i = *(unsigned int **)(a1 + 56);
        i != *(unsigned int **)(a1 + 64);
        v24 += (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, v26))
  {
    unsigned int v26 = *i++;
  }
  int v27 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 96))(a2);
  int v28 = v24 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v29 = v27
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "offChannelIncluded", 2, 8);
  int v30 = v29
      + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 120))(a2, *(unsigned __int8 *)(a1 + 80))
      + v28;
  int v31 = v30 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  char v32 = *(unsigned char *)(a1 + 104);
  if ((v32 & 4) != 0)
  {
    int v37 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "dutyCycle", 4, 9);
    int v38 = v37 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 88));
    v31 += v38 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
    char v32 = *(unsigned char *)(a1 + 104);
    if ((v32 & 8) == 0)
    {
LABEL_10:
      if ((v32 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_17;
    }
  }
  else if ((*(unsigned char *)(a1 + 104) & 8) == 0)
  {
    goto LABEL_10;
  }
  int v39 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "notPassive", 2, 10);
  int v40 = v31 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 120))(a2, *(unsigned __int8 *)(a1 + 96));
  int v31 = v39 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v40;
  char v32 = *(unsigned char *)(a1 + 104);
  if ((v32 & 0x10) == 0)
  {
LABEL_11:
    if ((v32 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_18:
    int v43 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "targettedScan", 2, 12);
    int v44 = v31 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 120))(a2, *(unsigned __int8 *)(a1 + 98));
    int v31 = v43 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v44;
    if ((*(unsigned char *)(a1 + 104) & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_17:
  int v41 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "merged", 2, 11);
  int v42 = v31 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 120))(a2, *(unsigned __int8 *)(a1 + 97));
  int v31 = v41 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v42;
  char v32 = *(unsigned char *)(a1 + 104);
  if ((v32 & 0x20) != 0) {
    goto LABEL_18;
  }
LABEL_12:
  if ((v32 & 0x40) != 0)
  {
LABEL_13:
    int v33 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "rssiThreshold", 8, 13);
    int v34 = v31 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 100));
    int v31 = v33 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v34;
  }
LABEL_14:
  int v35 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 64))(a2);
  uint64_t result = v35 + v31 + (*(unsigned int (**)(_DWORD *))(*(void *)a2 + 40))(a2);
  --a2[6];
  return result;
}

uint64_t sub_1001AE770(uint64_t a1)
{
  sub_1000CD96C((uint64_t)v12);
  unsigned int v2 = sub_10002986C(v12, (uint64_t)"[", 1);
  unsigned int v3 = *(int **)a1;
  int v8 = *(int **)(a1 + 8);
  int v9 = v3;
  sub_1001B21D0(&v9, &v8);
  if ((v11 & 0x80u) == 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  if ((v11 & 0x80u) == 0) {
    uint64_t v5 = v11;
  }
  else {
    uint64_t v5 = (uint64_t)__p[1];
  }
  int v6 = sub_10002986C(v2, (uint64_t)v4, v5);
  sub_10002986C(v6, (uint64_t)"]", 1);
  if ((char)v11 < 0) {
    operator delete(__p[0]);
  }
  std::stringbuf::str();
  if (v13 < 0) {
    operator delete((void *)v12[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_1001AE90C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001AE920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001AE934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1000CDB10((uint64_t)&a17);
  _Unwind_Resume(a1);
}

uint64_t sub_1001AE958(uint64_t a1)
{
  *(void *)a1 = off_10045DC28;
  *(void *)(a1 + 40) = off_10045DC08;
  unsigned int v2 = *(void **)(a1 + 96);
  if (v2)
  {
    *(void *)(a1 + 104) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
  sub_1001B1F9C(a1 + 16, *(char **)(a1 + 24));
  return a1;
}

void sub_1001AE9E4(uint64_t a1)
{
  *(void *)a1 = off_10045DC28;
  *(void *)(a1 + 40) = off_10045DC08;
  unsigned int v2 = *(void **)(a1 + 96);
  if (v2)
  {
    *(void *)(a1 + 104) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
  sub_1001B1F9C(a1 + 16, *(char **)(a1 + 24));

  operator delete();
}

uint64_t sub_1001AEA90(uint64_t a1, uint64_t *a2)
{
  v22[0] = 0;
  v22[1] = 0;
  uint64_t v23 = 0;
  int v21 = 0;
  __int16 v20 = 0;
  for (int i = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, v22);
        ;
        int i = (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2) + v7)
  {
    int v5 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, v22, &v21, &v20) + i;
    if (!v21) {
      break;
    }
    if (v20 == 3)
    {
      if (v21 == 12)
      {
        int v7 = sub_1001AD3FC(a1 + 40, a2) + v5;
        *(unsigned char *)(a1 + 152) |= 4u;
        continue;
      }
      goto LABEL_18;
    }
    if (v20 != 2)
    {
      if (v20 == 1)
      {
        uint64_t v6 = *a2;
        if (v21 == 10)
        {
          int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 8) + v5;
          *(unsigned char *)(a1 + 152) |= 1u;
          continue;
        }
        int v13 = (*(uint64_t (**)(uint64_t *))(v6 + 352))(a2);
        goto LABEL_19;
      }
LABEL_18:
      int v13 = (*(uint64_t (**)(uint64_t *))(*a2 + 352))(a2);
LABEL_19:
      int v7 = v13 + v5;
      continue;
    }
    if (v21 != 13) {
      goto LABEL_18;
    }
    sub_1001B1F9C(a1 + 16, *(char **)(a1 + 24));
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 16) = a1 + 24;
    uint64_t v19 = 0;
    int v18 = 0;
    int v8 = (*(uint64_t (**)(uint64_t *, uint64_t *, int *, char *))(*a2 + 232))(a2, &v19, &v18, (char *)&v19 + 4)
       + v5;
    if (HIDWORD(v19))
    {
      unsigned int v9 = 0;
      do
      {
        __p[0] = 0;
        __p[1] = 0;
        uint64_t v17 = 0;
        int v10 = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 336))(a2, __p);
        int v24 = __p;
        unsigned __int8 v11 = sub_1001B29D4((uint64_t **)(a1 + 16), (const void **)__p, (uint64_t)&unk_1003FAE80, (long long **)&v24);
        int v12 = sub_1001AC94C((uint64_t)(v11 + 7), a2);
        if (SHIBYTE(v17) < 0) {
          operator delete(__p[0]);
        }
        v8 += v10 + v12;
        ++v9;
      }
      while (v9 < HIDWORD(v19));
    }
    int v7 = (*(uint64_t (**)(uint64_t *))(*a2 + 240))(a2) + v8;
    *(unsigned char *)(a1 + 152) |= 2u;
  }
  int v14 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v23) < 0) {
    operator delete(v22[0]);
  }
  return (v14 + v5);
}

void sub_1001AEE88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if ((a26 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001AEEE4(uint64_t a1, _DWORD *a2)
{
  unsigned int v2 = a2[7];
  unsigned int v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  int v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(void *)a2 + 32))(a2, "WifiScanEvent");
  int v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "timestampNanos", 10, 1)+ v6;
  int v8 = (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 8));
  int v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "rssiDict", 13, 2);
  int v11 = v9
      + v10
      + (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t, void))(*(void *)a2 + 72))(a2, 11, 12, *(unsigned int *)(a1 + 32));
  int v12 = *(void **)(a1 + 16);
  if (v12 != (void *)(a1 + 24))
  {
    do
    {
      int v20 = (*(uint64_t (**)(_DWORD *, void *))(*(void *)a2 + 168))(a2, v12 + 4);
      int v21 = sub_1001ACD54((uint64_t)(v12 + 7), a2);
      int v22 = (void *)v12[1];
      if (v22)
      {
        do
        {
          uint64_t v23 = v22;
          int v22 = (void *)*v22;
        }
        while (v22);
      }
      else
      {
        do
        {
          uint64_t v23 = (void *)v12[2];
          BOOL v24 = *v23 == (void)v12;
          int v12 = v23;
        }
        while (!v24);
      }
      v11 += v20 + v21;
      int v12 = v23;
    }
    while (v23 != (void *)(a1 + 24));
  }
  int v13 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 80))(a2) + v11;
  int v14 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v15 = v13
      + v14
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "settings", 12, 3);
  int v16 = sub_1001ADD98(a1 + 40, a2);
  int v17 = v16 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v18 = v15 + v17 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 64))(a2);
  uint64_t result = v18 + (*(unsigned int (**)(_DWORD *))(*(void *)a2 + 40))(a2);
  --a2[6];
  return result;
}

uint64_t sub_1001AF28C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045DC28;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 16) = a1 + 24;
  *(void *)(a1 + 64) = 0;
  int v4 = (std::string *)(a1 + 64);
  *(void *)(a1 + 96) = 0;
  int v5 = (void *)(a1 + 96);
  *(_DWORD *)(a1 + 140) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = off_10045DC08;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 54) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(_WORD *)(a1 + 88) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(unsigned char *)(a1 + 120) = 0;
  *(_DWORD *)(a1 + 135) = 0;
  *(void *)(a1 + 128) = 0;
  *(unsigned char *)(a1 + 144) &= 0x80u;
  *(unsigned char *)(a1 + 152) &= 0xF8u;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  if (a1 != a2) {
    sub_1001B23D8((uint64_t **)(a1 + 16), *(void **)(a2 + 16), (void *)(a2 + 24));
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_WORD *)(a1 + 60) = *(_WORD *)(a2 + 60);
  std::string::operator=(v4, (const std::string *)(a2 + 64));
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  if (a1 != a2) {
    sub_10007B79C(v5, *(char **)(a2 + 96), *(char **)(a2 + 104), (uint64_t)(*(void *)(a2 + 104) - *(void *)(a2 + 96)) >> 2);
  }
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_WORD *)(a1 + 137) = *(_WORD *)(a2 + 137);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  return a1;
}

void sub_1001AF404(_Unwind_Exception *a1)
{
  sub_1001AD28C(v2);
  sub_1001B1F9C(v1, *v3);
  _Unwind_Resume(a1);
}

uint64_t sub_1001AF428(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  if (a1 != a2) {
    sub_1001B23D8((uint64_t **)(a1 + 16), *(void **)(a2 + 16), (void *)(a2 + 24));
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_WORD *)(a1 + 60) = *(_WORD *)(a2 + 60);
  std::string::operator=((std::string *)(a1 + 64), (const std::string *)(a2 + 64));
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  if (a1 != a2) {
    sub_10007B79C((void *)(a1 + 96), *(char **)(a2 + 96), *(char **)(a2 + 104), (uint64_t)(*(void *)(a2 + 104) - *(void *)(a2 + 96)) >> 2);
  }
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_WORD *)(a1 + 137) = *(_WORD *)(a2 + 137);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  return a1;
}

uint64_t sub_1001AF4F0(uint64_t a1, _DWORD *a2)
{
  unsigned int v2 = a2[7];
  unsigned int v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  int v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(void *)a2 + 32))(a2, "CascadiaScanOptions");
  int v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "channelSpec", 8, 1)+ v6;
  int v8 = (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 8));
  int v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "triggerSpec", 8, 2);
  int v11 = v10 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 12));
  int v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v13 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "triggerPollingIntervalNanos", 10, 3);
  int v14 = v13 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 16));
  int v15 = v14 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v16 = v12
      + v15
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "triggerCounterMax", 8, 4);
  int v17 = (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 24));
  int v18 = v17 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v19 = v18
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "errorDelayNanos", 10, 5);
  LODWORD(a1) = v19 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 32));
  int v20 = v16 + a1 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  LODWORD(a1) = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 64))(a2);
  uint64_t result = v20 + a1 + (*(unsigned int (**)(_DWORD *))(*(void *)a2 + 40))(a2);
  --a2[6];
  return result;
}

uint64_t sub_1001AF920(uint64_t result)
{
  uint64_t v1 = result;
  *(void *)uint64_t result = off_10045DC48;
  if (*(char *)(result + 47) < 0)
  {
    operator delete(*(void **)(result + 24));
    return v1;
  }
  return result;
}

void sub_1001AF980(uint64_t a1)
{
  *(void *)a1 = off_10045DC48;
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }

  operator delete();
}

uint64_t sub_1001AF9F0(uint64_t a1, _DWORD *a2)
{
  unsigned int v2 = a2[7];
  unsigned int v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  int v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(void *)a2 + 32))(a2, "CascadiaScanSettings");
  int v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "initiatedTimestampNanos", 10, 1)+ v6;
  int v8 = (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 8));
  int v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "delayNanos", 10, 2);
  int v11 = v10 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 16));
  int v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  char v13 = *(unsigned char *)(a1 + 112);
  if (v13)
  {
    int v14 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "errorString", 11, 3);
    int v15 = v14 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(void *)a2 + 168))(a2, a1 + 24);
    v12 += v15 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
    char v13 = *(unsigned char *)(a1 + 112);
  }
  if ((v13 & 2) != 0)
  {
    int v16 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "errorDelayNanos", 10, 4);
    int v17 = v12 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 48));
    int v12 = v16 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v17;
  }
  int v18 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "commandType", 8, 5);
  int v19 = v12 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 56));
  int v20 = v18 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v19;
  char v21 = *(unsigned char *)(a1 + 112);
  if ((v21 & 4) != 0)
  {
    int v22 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "rssiScanOptions", 12, 6);
    unsigned int v23 = a2[7];
    unsigned int v24 = a2[6] + 1;
    a2[6] = v24;
    if (v23 < v24)
    {
      int v34 = __cxa_allocate_exception(0x28uLL);
      v34[2] = 0;
      v34[3] = 0;
      *int v34 = off_100454818;
      v34[1] = 0;
      *((_DWORD *)v34 + 8) = 6;
    }
    int v25 = v22;
    int v26 = (*(uint64_t (**)(_DWORD *, const char *))(*(void *)a2 + 32))(a2, "RssiScanOptions");
    int v27 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 64))(a2);
    int v28 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 40))(a2);
    --a2[6];
    v20 += v25 + v26 + v27 + v28 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
    char v21 = *(unsigned char *)(a1 + 112);
  }
  if ((v21 & 8) != 0)
  {
    int v29 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "cascadiaScanOptions", 12, 7);
    int v30 = v20 + sub_1001AF4F0(a1 + 72, a2);
    int v20 = v29 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v30;
  }
  int v31 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 64))(a2);
  uint64_t result = v31 + v20 + (*(unsigned int (**)(_DWORD *))(*(void *)a2 + 40))(a2);
  --a2[6];
  return result;
}

uint64_t sub_1001B0040(uint64_t a1)
{
  *(void *)a1 = off_10045DC68;
  if (*(char *)(a1 + 207) < 0)
  {
    operator delete(*(void **)(a1 + 184));
    unsigned int v2 = *(char **)(a1 + 160);
    if (!v2)
    {
LABEL_3:
      if ((*(char *)(a1 + 159) & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_11:
      operator delete(*(void **)(a1 + 136));
      *(void *)(a1 + 16) = off_10045DC48;
      if ((*(char *)(a1 + 63) & 0x80000000) == 0) {
        return a1;
      }
      goto LABEL_12;
    }
  }
  else
  {
    unsigned int v2 = *(char **)(a1 + 160);
    if (!v2) {
      goto LABEL_3;
    }
  }
  int v4 = *(char **)(a1 + 168);
  int v5 = v2;
  if (v4 != v2)
  {
    do
    {
      int v6 = v4 - 24;
      sub_100075BE0((uint64_t)(v4 - 24), *((void *)v4 - 2));
      int v4 = v6;
    }
    while (v6 != v2);
    int v5 = *(void **)(a1 + 160);
  }
  *(void *)(a1 + 168) = v2;
  operator delete(v5);
  if (*(char *)(a1 + 159) < 0) {
    goto LABEL_11;
  }
LABEL_4:
  *(void *)(a1 + 16) = off_10045DC48;
  if ((*(char *)(a1 + 63) & 0x80000000) == 0) {
    return a1;
  }
LABEL_12:
  operator delete(*(void **)(a1 + 40));
  return a1;
}

void sub_1001B0168(uint64_t a1)
{
  sub_1001B0040(a1);

  operator delete();
}

uint64_t sub_1001B01A0(uint64_t a1, _DWORD *a2)
{
  unsigned int v2 = a2[7];
  unsigned int v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  int v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(void *)a2 + 32))(a2, "CascadiaScanEvent");
  int v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "timestampNanos", 10, 1)+ v6;
  int v8 = (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 8));
  int v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "settings", 12, 2);
  int v11 = v10 + sub_1001AF9F0(a1 + 16, a2);
  int v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  char v13 = *(unsigned char *)(a1 + 208);
  if ((v13 & 1) == 0)
  {
    if ((*(unsigned char *)(a1 + 208) & 2) == 0) {
      goto LABEL_4;
    }
LABEL_8:
    int v20 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "rssiDict", 15, 4);
    int v21 = v20
        + v12
        + (*(uint64_t (**)(_DWORD *, uint64_t, void))(*(void *)a2 + 88))(a2, 13, -1431655765 * ((*(void *)(a1 + 168) - *(void *)(a1 + 160)) >> 3));
    for (uint64_t i = *(void *)(a1 + 160); i != *(void *)(a1 + 168); i += 24)
    {
      int v23 = (*(uint64_t (**)(_DWORD *, uint64_t, uint64_t, void))(*(void *)a2 + 72))(a2, 11, 11, *(unsigned int *)(i + 16))+ v21;
      unsigned int v24 = *(void **)i;
      if (*(void *)i != i + 8)
      {
        do
        {
          int v25 = (*(uint64_t (**)(_DWORD *, void *))(*(void *)a2 + 168))(a2, v24 + 4);
          int v26 = (*(uint64_t (**)(_DWORD *, void *))(*(void *)a2 + 168))(a2, v24 + 7);
          int v27 = (void *)v24[1];
          if (v27)
          {
            do
            {
              int v28 = v27;
              int v27 = (void *)*v27;
            }
            while (v27);
          }
          else
          {
            do
            {
              int v28 = (void *)v24[2];
              BOOL v29 = *v28 == (void)v24;
              unsigned int v24 = v28;
            }
            while (!v29);
          }
          v23 += v25 + v26;
          unsigned int v24 = v28;
        }
        while (v28 != (void *)(i + 8));
      }
      int v21 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 80))(a2) + v23;
    }
    int v30 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 96))(a2);
    int v12 = v30 + v21 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
    if ((*(unsigned char *)(a1 + 208) & 4) != 0) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  int v18 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "versionString", 11, 3);
  int v19 = v18 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(void *)a2 + 168))(a2, a1 + 136);
  v12 += v19 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  char v13 = *(unsigned char *)(a1 + 208);
  if ((v13 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v13 & 4) != 0)
  {
LABEL_5:
    int v14 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "cascadiaData", 11, 5);
    int v15 = v12 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(void *)a2 + 168))(a2, a1 + 184);
    int v12 = v14 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v15;
  }
LABEL_6:
  int v16 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 64))(a2);
  uint64_t result = v16 + v12 + (*(unsigned int (**)(_DWORD *))(*(void *)a2 + 40))(a2);
  --a2[6];
  return result;
}

void sub_1001B0764()
{
}

__n128 sub_1001B0778(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045DC88;
  *(unsigned char *)(a1 + 24) &= 0xFCu;
  __n128 result = *(__n128 *)(a2 + 8);
  *(__n128 *)(a1 + 8) = result;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return result;
}

uint64_t sub_1001B07B4(uint64_t result)
{
  uint64_t v1 = result;
  *(void *)__n128 result = off_10045DCA8;
  if (*(char *)(result + 39) < 0)
  {
    operator delete(*(void **)(result + 16));
    return v1;
  }
  return result;
}

void sub_1001B0814(uint64_t a1)
{
  *(void *)a1 = off_10045DCA8;
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }

  operator delete();
}

void *sub_1001B0884(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"RadioAddress(", 13);
  int v4 = sub_10002986C(a1, (uint64_t)"addressType=", 12);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001B2BB4(a2 + 8, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v13);
    v13.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
    sub_1000DB0D4((uint64_t)&v13);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v7 = sub_10002986C(a1, (uint64_t)", ", 2);
  int v8 = sub_10002986C(v7, (uint64_t)"address=", 8);
  memset(&v13, 0, sizeof(v13));
  std::string::operator=(&v13, (const std::string *)(a2 + 16));
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v9 = &v13;
  }
  else {
    int v9 = (std::string *)v13.__r_.__value_.__r.__words[0];
  }
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v10 = HIBYTE(v13.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v10 = v13.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v8, (uint64_t)v9, v10);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001B09FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001B0A54()
{
}

void *sub_1001B0A68(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"CoarseApParams(", 15);
  sub_10002986C(a1, (uint64_t)"weakWeight=", 11);
  if (*(unsigned char *)(a2 + 32))
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001645DC((double *)(a2 + 8), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&v17);
      v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
      sub_1000DB0D4((uint64_t)&v17);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  int v6 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v6, (uint64_t)"strongWeight=", 13);
  if ((*(unsigned char *)(a2 + 32) & 2) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001645DC((double *)(a2 + 16), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&v17);
      v17.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
      sub_1000DB0D4((uint64_t)&v17);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v7 = &__p;
    }
    else {
      int v7 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v8 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v8 = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v7, v8);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  int v9 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v9, (uint64_t)"rssiThreshold=", 14);
  if ((*(unsigned char *)(a2 + 32) & 4) != 0)
  {
    sub_10016714C((int *)(a2 + 24), &v17);
    if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v10 = &v17;
    }
    else {
      std::string::size_type v10 = (std::string *)v17.__r_.__value_.__r.__words[0];
    }
    if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v11 = HIBYTE(v17.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v11 = v17.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v10, v11);
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v17.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  int v12 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v12, (uint64_t)"rssiSmoothingRange=", 19);
  if ((*(unsigned char *)(a2 + 32) & 8) != 0)
  {
    sub_10016714C((int *)(a2 + 28), &v17);
    if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string v13 = &v17;
    }
    else {
      std::string v13 = (std::string *)v17.__r_.__value_.__r.__words[0];
    }
    if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v14 = HIBYTE(v17.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v14 = v17.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v13, v14);
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v17.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001B0D6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001B0DC0(void *a1)
{
  sub_100075F34(a1);

  operator delete();
}

void *sub_1001B0DF8(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"JointRssiMap(", 13);
  int v4 = sub_10002986C(a1, (uint64_t)"radioAddresses=", 15);
  sub_1001B1BCC((uint64_t *)(a2 + 8));
  if (SHIBYTE(v63) >= 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if (SHIBYTE(v63) >= 0) {
    uint64_t v6 = HIBYTE(v63);
  }
  else {
    uint64_t v6 = (uint64_t)v62;
  }
  sub_10002986C(v4, (uint64_t)p_p, v6);
  if (SHIBYTE(v63) < 0) {
    operator delete(__p);
  }
  int v7 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v7, (uint64_t)"coarseApParams=", 15);
  if ((*(_WORD *)(a2 + 496) & 2) != 0)
  {
    sub_1001B1DB4((uint64_t *)(a2 + 32));
    if (SHIBYTE(v63) >= 0) {
      std::string::size_type v8 = &__p;
    }
    else {
      std::string::size_type v8 = __p;
    }
    if (SHIBYTE(v63) >= 0) {
      uint64_t v9 = HIBYTE(v63);
    }
    else {
      uint64_t v9 = (uint64_t)v62;
    }
    sub_10002986C(a1, (uint64_t)v8, v9);
    if (SHIBYTE(v63) < 0) {
      operator delete(__p);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  std::string::size_type v10 = sub_10002986C(a1, (uint64_t)", ", 2);
  std::string::size_type v11 = sub_10002986C(v10, (uint64_t)"antennaMin=", 11);
  memset(&v60, 0, sizeof(v60));
  if ((sub_1001645DC((double *)(a2 + 56), &v60) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&__p);
    std::string __p = &off_100454020;
    sub_1000DB0D4((uint64_t)&__p);
  }
  if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v12 = &v60;
  }
  else {
    int v12 = (std::string *)v60.__r_.__value_.__r.__words[0];
  }
  if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v60.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v60.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v11, (uint64_t)v12, size);
  if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v60.__r_.__value_.__l.__data_);
  }
  std::string::size_type v14 = sub_10002986C(a1, (uint64_t)", ", 2);
  int v15 = sub_10002986C(v14, (uint64_t)"globalDbm=", 10);
  memset(&v60, 0, sizeof(v60));
  if ((sub_1001B3CE4(a2 + 64, &v60) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&__p);
    std::string __p = &off_100454020;
    sub_1000DB0D4((uint64_t)&__p);
  }
  if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v16 = &v60;
  }
  else {
    int v16 = (std::string *)v60.__r_.__value_.__r.__words[0];
  }
  if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v17 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v17 = v60.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v15, (uint64_t)v16, v17);
  int v18 = (_WORD *)(a2 + 496);
  if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v60.__r_.__value_.__l.__data_);
  }
  int v19 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v19, (uint64_t)"mapCellLookupMode=", 18);
  if ((*v18 & 0x10) != 0)
  {
    memset(&v60, 0, sizeof(v60));
    if ((sub_1001B4008(a2 + 128, &v60) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&__p);
      std::string __p = &off_100454020;
      sub_1000DB0D4((uint64_t)&__p);
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v20 = &v60;
    }
    else {
      int v20 = (std::string *)v60.__r_.__value_.__r.__words[0];
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v21 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v21 = v60.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v20, v21);
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v60.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  int v22 = sub_10002986C(a1, (uint64_t)", ", 2);
  int v23 = sub_10002986C(v22, (uint64_t)"coordinateFrame=", 16);
  memset(&v60, 0, sizeof(v60));
  if ((sub_1001B31E4(a2 + 136, &v60) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&__p);
    std::string __p = &off_100454020;
    sub_1000DB0D4((uint64_t)&__p);
  }
  if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unsigned int v24 = &v60;
  }
  else {
    unsigned int v24 = (std::string *)v60.__r_.__value_.__r.__words[0];
  }
  if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v25 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v25 = v60.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v23, (uint64_t)v24, v25);
  if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v60.__r_.__value_.__l.__data_);
  }
  int v26 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v26, (uint64_t)"wifi2GpsFusionAccuracyThreshold=", 32);
  if ((*v18 & 0x40) != 0)
  {
    memset(&v60, 0, sizeof(v60));
    if ((sub_1001645DC((double *)(a2 + 232), &v60) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&__p);
      std::string __p = &off_100454020;
      sub_1000DB0D4((uint64_t)&__p);
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v27 = &v60;
    }
    else {
      int v27 = (std::string *)v60.__r_.__value_.__r.__words[0];
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v28 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v28 = v60.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v27, v28);
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v60.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  BOOL v29 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v29, (uint64_t)"wifi2GpsInjectionParticleFraction=", 34);
  if ((*v18 & 0x80) != 0)
  {
    memset(&v60, 0, sizeof(v60));
    if ((sub_1001645DC((double *)(a2 + 240), &v60) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&__p);
      std::string __p = &off_100454020;
      sub_1000DB0D4((uint64_t)&__p);
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v30 = &v60;
    }
    else {
      int v30 = (std::string *)v60.__r_.__value_.__r.__words[0];
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v31 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v31 = v60.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v30, v31);
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v60.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  char v32 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v32, (uint64_t)"gpsAccuracyTransform=", 21);
  if ((*v18 & 0x100) != 0)
  {
    memset(&v60, 0, sizeof(v60));
    if ((sub_1001B432C(a2 + 248, &v60) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&__p);
      std::string __p = &off_100454020;
      sub_1000DB0D4((uint64_t)&__p);
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v33 = &v60;
    }
    else {
      int v33 = (std::string *)v60.__r_.__value_.__r.__words[0];
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v34 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v34 = v60.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v33, v34);
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v60.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  int v35 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v35, (uint64_t)"gpsAzimuthTransform=", 20);
  if ((*v18 & 0x200) != 0)
  {
    memset(&v60, 0, sizeof(v60));
    if ((sub_1001B432C(a2 + 296, &v60) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&__p);
      std::string __p = &off_100454020;
      sub_1000DB0D4((uint64_t)&__p);
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v36 = &v60;
    }
    else {
      int v36 = (std::string *)v60.__r_.__value_.__r.__words[0];
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v37 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v37 = v60.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v36, v37);
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v60.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  int v38 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v38, (uint64_t)"DEPRECATED_macAddresses=", 24);
  if ((*v18 & 0x400) != 0)
  {
    sub_100168C98(a2 + 344);
    if (SHIBYTE(v63) >= 0) {
      int v39 = &__p;
    }
    else {
      int v39 = __p;
    }
    if (SHIBYTE(v63) >= 0) {
      uint64_t v40 = HIBYTE(v63);
    }
    else {
      uint64_t v40 = (uint64_t)v62;
    }
    sub_10002986C(a1, (uint64_t)v39, v40);
    if (SHIBYTE(v63) < 0) {
      operator delete(__p);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  int v41 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v41, (uint64_t)"DEPRECATED_globalVariance=", 26);
  if ((*v18 & 0x800) != 0)
  {
    memset(&v60, 0, sizeof(v60));
    if ((sub_1001645DC((double *)(a2 + 368), &v60) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&__p);
      std::string __p = &off_100454020;
      sub_1000DB0D4((uint64_t)&__p);
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v42 = &v60;
    }
    else {
      int v42 = (std::string *)v60.__r_.__value_.__r.__words[0];
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v43 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v43 = v60.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v42, v43);
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v60.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  int v44 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v44, (uint64_t)"DEPRECATED_globalMean=", 22);
  if ((*v18 & 0x1000) != 0)
  {
    memset(&v60, 0, sizeof(v60));
    if ((sub_1001645DC((double *)(a2 + 376), &v60) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&__p);
      std::string __p = &off_100454020;
      sub_1000DB0D4((uint64_t)&__p);
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      v45 = &v60;
    }
    else {
      v45 = (std::string *)v60.__r_.__value_.__r.__words[0];
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v46 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v46 = v60.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v45, v46);
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v60.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  v47 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v47, (uint64_t)"DEPRECATED_bottomLeft=", 22);
  if ((*v18 & 0x2000) != 0)
  {
    memset(&v60, 0, sizeof(v60));
    if ((sub_1001A54D0(a2 + 384, &v60) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&__p);
      std::string __p = &off_100454020;
      sub_1000DB0D4((uint64_t)&__p);
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      v48 = &v60;
    }
    else {
      v48 = (std::string *)v60.__r_.__value_.__r.__words[0];
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v49 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v49 = v60.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v48, v49);
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v60.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  v50 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v50, (uint64_t)"DEPRECATED_topRight=", 20);
  if ((*v18 & 0x4000) != 0)
  {
    memset(&v60, 0, sizeof(v60));
    if ((sub_1001A54D0(a2 + 416, &v60) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&__p);
      std::string __p = &off_100454020;
      sub_1000DB0D4((uint64_t)&__p);
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      v51 = &v60;
    }
    else {
      v51 = (std::string *)v60.__r_.__value_.__r.__words[0];
    }
    if ((v60.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v52 = HIBYTE(v60.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v52 = v60.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v51, v52);
    if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v60.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  v53 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v53, (uint64_t)"DEPRECATED_normalizedMutualInformation=", 39);
  if ((*v18 & 0x8000) != 0)
  {
    sub_100199CF0(a2 + 448);
    if (SHIBYTE(v63) >= 0) {
      v54 = &__p;
    }
    else {
      v54 = __p;
    }
    if (SHIBYTE(v63) >= 0) {
      uint64_t v55 = HIBYTE(v63);
    }
    else {
      uint64_t v55 = (uint64_t)v62;
    }
    sub_10002986C(a1, (uint64_t)v54, v55);
    if (SHIBYTE(v63) < 0) {
      operator delete(__p);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  v56 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v56, (uint64_t)"DEPRECATED_overlappingCellCount=", 32);
  if ((((unsigned __int16)*v18 | (*(unsigned __int8 *)(a2 + 498) << 16)) & 0x10000) != 0)
  {
    sub_1001AE770(a2 + 472);
    if (SHIBYTE(v63) >= 0) {
      v57 = &__p;
    }
    else {
      v57 = __p;
    }
    if (SHIBYTE(v63) >= 0) {
      uint64_t v58 = HIBYTE(v63);
    }
    else {
      uint64_t v58 = (uint64_t)v62;
    }
    sub_10002986C(a1, (uint64_t)v57, v58);
    if (SHIBYTE(v63) < 0) {
      operator delete(__p);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001B1AF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1001B1BCC(uint64_t *a1)
{
  sub_1000CD96C((uint64_t)v12);
  unsigned int v2 = sub_10002986C(v12, (uint64_t)"[", 1);
  uint64_t v3 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = v3;
  sub_1001B3508(&v9, &v8);
  if ((v11 & 0x80u) == 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  if ((v11 & 0x80u) == 0) {
    uint64_t v5 = v11;
  }
  else {
    uint64_t v5 = (uint64_t)__p[1];
  }
  uint64_t v6 = sub_10002986C(v2, (uint64_t)v4, v5);
  sub_10002986C(v6, (uint64_t)"]", 1);
  if ((char)v11 < 0) {
    operator delete(__p[0]);
  }
  std::stringbuf::str();
  if (v13 < 0) {
    operator delete((void *)v12[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_1001B1D68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001B1D7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001B1D90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1000CDB10((uint64_t)&a17);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B1DB4(uint64_t *a1)
{
  sub_1000CD96C((uint64_t)v12);
  unsigned int v2 = sub_10002986C(v12, (uint64_t)"[", 1);
  uint64_t v3 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = v3;
  sub_1001B3770(&v9, &v8);
  if ((v11 & 0x80u) == 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  if ((v11 & 0x80u) == 0) {
    uint64_t v5 = v11;
  }
  else {
    uint64_t v5 = (uint64_t)__p[1];
  }
  uint64_t v6 = sub_10002986C(v2, (uint64_t)v4, v5);
  sub_10002986C(v6, (uint64_t)"]", 1);
  if ((char)v11 < 0) {
    operator delete(__p[0]);
  }
  std::stringbuf::str();
  if (v13 < 0) {
    operator delete((void *)v12[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_1001B1F50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001B1F64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001B1F78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1000CDB10((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void sub_1001B1F9C(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_1001B1F9C(a1, *(void *)a2);
    sub_1001B1F9C(a1, *((void *)a2 + 1));
    if (a2[55] < 0)
    {
      operator delete(*((void **)a2 + 4));
      int v4 = a2;
    }
    else
    {
      int v4 = a2;
    }
    operator delete(v4);
  }
}

void sub_1001B2020(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *(char **)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v6 = v5;
  if (a2 <= (v4 - (uint64_t)v5) >> 2)
  {
    if (a2)
    {
      bzero(v5, 4 * a2);
      uint64_t v6 = &v5[4 * a2];
    }
    *(void *)(a1 + 8) = v6;
  }
  else
  {
    int v7 = *(char **)a1;
    uint64_t v8 = (uint64_t)&v5[-*(void *)a1];
    uint64_t v9 = v8 >> 2;
    unint64_t v10 = (v8 >> 2) + a2;
    if (v10 >> 62) {
      sub_1000A9108();
    }
    uint64_t v11 = v4 - (void)v7;
    if (v11 >> 1 > v10) {
      unint64_t v10 = v11 >> 1;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v12 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12)
    {
      if (v12 >> 62) {
        sub_1000A6A10();
      }
      char v13 = operator new(4 * v12);
    }
    else
    {
      char v13 = 0;
    }
    std::string::size_type v14 = &v13[4 * v9];
    size_t v15 = 4 * a2;
    int v16 = &v13[4 * v12];
    bzero(v14, v15);
    std::string::size_type v17 = &v14[v15];
    if (v5 != v7)
    {
      unint64_t v18 = v5 - v7 - 4;
      if (v18 < 0x2C) {
        goto LABEL_31;
      }
      if ((unint64_t)(v5 - v13 - v8) < 0x20) {
        goto LABEL_31;
      }
      uint64_t v19 = (v18 >> 2) + 1;
      uint64_t v20 = 4 * (v19 & 0x7FFFFFFFFFFFFFF8);
      uint64_t v6 = &v5[-v20];
      v14 -= v20;
      std::string::size_type v21 = &v13[4 * v9 - 16];
      int v22 = v5 - 16;
      uint64_t v23 = v19 & 0x7FFFFFFFFFFFFFF8;
      do
      {
        long long v24 = *(_OWORD *)v22;
        *(v21 - 1) = *((_OWORD *)v22 - 1);
        *std::string::size_type v21 = v24;
        v21 -= 2;
        v22 -= 32;
        v23 -= 8;
      }
      while (v23);
      if (v19 != (v19 & 0x7FFFFFFFFFFFFFF8))
      {
LABEL_31:
        do
        {
          int v25 = *((_DWORD *)v6 - 1);
          v6 -= 4;
          *((_DWORD *)v14 - 1) = v25;
          v14 -= 4;
        }
        while (v6 != v7);
      }
    }
    *(void *)a1 = v14;
    *(void *)(a1 + 8) = v17;
    *(void *)(a1 + 16) = v16;
    if (v7)
    {
      operator delete(v7);
    }
  }
}

uint64_t sub_1001B21D0(int **a1, int **a2)
{
  sub_1000CD96C((uint64_t)v9);
  for (uint64_t i = *a1; i != *a2; ++i)
  {
    if (i != *a1) {
      sub_10002986C(v9, (uint64_t)", ", 2);
    }
    sub_10016714C(i, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(v9, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  std::stringbuf::str();
  if (v10 < 0) {
    operator delete((void *)v9[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_1001B2398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
}

void sub_1001B23D8(uint64_t **a1, void *a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  if (a1[2])
  {
    uint64_t v6 = *a1;
    uint64_t v8 = a1 + 1;
    int v7 = a1[1];
    *a1 = (uint64_t *)(a1 + 1);
    v7[2] = 0;
    a1[1] = 0;
    a1[2] = 0;
    if (v6[1]) {
      uint64_t v9 = (uint64_t *)v6[1];
    }
    else {
      uint64_t v9 = v6;
    }
    uint64_t v40 = (uint64_t)a1;
    int v42 = (char *)v9;
    if (!v9)
    {
      int v35 = 0;
      goto LABEL_65;
    }
    char v10 = (char *)v9[2];
    if (v10)
    {
      uint64_t v11 = *(char **)v10;
      if (*(uint64_t **)v10 == v9)
      {
        *(void *)char v10 = 0;
        while (1)
        {
          int v39 = (char *)*((void *)v10 + 1);
          if (!v39) {
            break;
          }
          do
          {
            char v10 = v39;
            int v39 = *(char **)v39;
          }
          while (v39);
        }
      }
      else
      {
        for (*((void *)v10 + 1) = 0; v11; uint64_t v11 = (char *)*((void *)v10 + 1))
        {
          do
          {
            char v10 = v11;
            uint64_t v11 = *(char **)v11;
          }
          while (v11);
        }
      }
    }
    int v41 = v10;
    if (a2 == a3)
    {
      std::string::size_type v34 = a1;
      sub_1001B1F9C((uint64_t)a1, (char *)v9);
      if (!v10) {
        goto LABEL_66;
      }
      goto LABEL_62;
    }
    unint64_t v12 = a2;
    while (1)
    {
      std::string::operator=((std::string *)(v9 + 4), (const std::string *)(v12 + 4));
      v9[8] = v12[8];
      *((_DWORD *)v9 + 18) = *((_DWORD *)v12 + 18);
      *((unsigned char *)v9 + 76) = *((unsigned char *)v12 + 76);
      v9[10] = v12[10];
      *((unsigned char *)v9 + 88) = *((unsigned char *)v12 + 88);
      *((_DWORD *)v9 + 23) = *((_DWORD *)v12 + 23);
      *((unsigned char *)v9 + 96) = *((unsigned char *)v12 + 96);
      char v13 = (uint64_t *)v42;
      std::string::size_type v14 = *v8;
      size_t v15 = v5 + 1;
      int v16 = v5 + 1;
      if (!*v8) {
        break;
      }
      int v17 = v42[55];
      if (v17 >= 0) {
        size_t v18 = v42[55];
      }
      else {
        size_t v18 = *((void *)v42 + 5);
      }
      if (v17 >= 0) {
        uint64_t v19 = v42 + 32;
      }
      else {
        uint64_t v19 = (const void *)*((void *)v42 + 4);
      }
      do
      {
        while (1)
        {
          size_t v15 = (uint64_t **)v14;
          int v22 = (const void *)v14[4];
          uint64_t v20 = v14 + 4;
          std::string::size_type v21 = v22;
          int v23 = *((char *)v20 + 23);
          if (v23 >= 0) {
            size_t v24 = *((unsigned __int8 *)v20 + 23);
          }
          else {
            size_t v24 = v20[1];
          }
          if (v23 >= 0) {
            int v25 = v20;
          }
          else {
            int v25 = v21;
          }
          if (v24 >= v18) {
            size_t v26 = v18;
          }
          else {
            size_t v26 = v24;
          }
          int v27 = memcmp(v19, v25, v26);
          BOOL v28 = v18 < v24;
          if (v27) {
            BOOL v28 = v27 < 0;
          }
          if (!v28) {
            break;
          }
          std::string::size_type v14 = *v15;
          int v16 = v15;
          if (!*v15) {
            goto LABEL_34;
          }
        }
        std::string::size_type v14 = v15[1];
      }
      while (v14);
      int v16 = v15 + 1;
      *(void *)int v42 = 0;
      *((void *)v42 + 1) = 0;
      *((void *)v42 + 2) = v15;
      v15[1] = (uint64_t *)v42;
      BOOL v29 = (uint64_t *)**v5;
      if (v29) {
        goto LABEL_35;
      }
LABEL_36:
      sub_1000619B8(v5[1], v13);
      v5[2] = (uint64_t *)((char *)v5[2] + 1);
      uint64_t v9 = (uint64_t *)v41;
      int v42 = v41;
      if (v41)
      {
        char v10 = (char *)*((void *)v41 + 2);
        if (v10)
        {
          int v30 = *(char **)v10;
          if (*(char **)v10 == v41)
          {
            *(void *)char v10 = 0;
            while (1)
            {
              int v33 = (char *)*((void *)v10 + 1);
              if (!v33) {
                break;
              }
              do
              {
                char v10 = v33;
                int v33 = *(char **)v33;
              }
              while (v33);
            }
          }
          else
          {
            for (*((void *)v10 + 1) = 0; v30; int v30 = (char *)*((void *)v10 + 1))
            {
              do
              {
                char v10 = v30;
                int v30 = *(char **)v30;
              }
              while (v30);
            }
          }
        }
        int v41 = v10;
        std::string::size_type v31 = (void *)v12[1];
        if (v31)
        {
          do
          {
LABEL_45:
            uint64_t v4 = v31;
            std::string::size_type v31 = (void *)*v31;
          }
          while (v31);
          goto LABEL_49;
        }
      }
      else
      {
        char v10 = 0;
        std::string::size_type v31 = (void *)v12[1];
        if (v31) {
          goto LABEL_45;
        }
      }
      do
      {
        uint64_t v4 = (void *)v12[2];
        BOOL v32 = *v4 == (void)v12;
        unint64_t v12 = v4;
      }
      while (!v32);
LABEL_49:
      if (v9)
      {
        unint64_t v12 = v4;
        if (v4 != a3) {
          continue;
        }
      }
      std::string::size_type v34 = (uint64_t **)v40;
      sub_1001B1F9C(v40, (char *)v9);
      if (!v10) {
        goto LABEL_66;
      }
LABEL_62:
      for (uint64_t i = (char *)*((void *)v10 + 2); i; uint64_t i = (char *)*((void *)i + 2))
        char v10 = i;
      a1 = v34;
      int v35 = v10;
LABEL_65:
      sub_1001B1F9C((uint64_t)a1, v35);
      goto LABEL_66;
    }
LABEL_34:
    *(void *)int v42 = 0;
    *((void *)v42 + 1) = 0;
    *((void *)v42 + 2) = v15;
    *int v16 = (uint64_t *)v42;
    BOOL v29 = (uint64_t *)**v5;
    if (!v29) {
      goto LABEL_36;
    }
LABEL_35:
    char *v5 = v29;
    char v13 = *v16;
    goto LABEL_36;
  }
LABEL_66:
  if (v4 != a3)
  {
    do
    {
      sub_1001B27B4(v5, (uint64_t)(v4 + 4));
      std::string::size_type v37 = (void *)v4[1];
      if (v37)
      {
        do
        {
          int v38 = v37;
          std::string::size_type v37 = (void *)*v37;
        }
        while (v37);
      }
      else
      {
        do
        {
          int v38 = (void *)v4[2];
          BOOL v32 = *v38 == (void)v4;
          uint64_t v4 = v38;
        }
        while (!v32);
      }
      uint64_t v4 = v38;
    }
    while (v38 != a3);
  }
}

void sub_1001B2748(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001B275C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B275C(uint64_t a1)
{
  sub_1001B1F9C(*(void *)a1, *(char **)(a1 + 16));
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      do
      {
        uint64_t v2 = v3;
        uint64_t v3 = *(void *)(v3 + 16);
      }
      while (v3);
      *(void *)(a1 + 8) = v2;
    }
    sub_1001B1F9C(*(void *)a1, (char *)v2);
  }
  return a1;
}

char *sub_1001B27B4(uint64_t **a1, uint64_t a2)
{
  uint64_t v4 = (char **)(a1 + 1);
  uint64_t v5 = (char *)operator new(0x68uLL);
  uint64_t v6 = v5;
  int v23 = v5;
  int v7 = v5 + 32;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1000559FC(v5 + 32, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *int v7 = *(_OWORD *)a2;
    *((void *)v5 + 6) = *(void *)(a2 + 16);
  }
  *((void *)v6 + 7) = off_10045DBE8;
  *((void *)v6 + 8) = *(void *)(a2 + 32);
  *((_DWORD *)v6 + 18) = *(_DWORD *)(a2 + 40);
  v6[76] = *(unsigned char *)(a2 + 44);
  *((void *)v6 + 10) = *(void *)(a2 + 48);
  v6[88] = *(unsigned char *)(a2 + 56);
  *((_DWORD *)v6 + 23) = *(_DWORD *)(a2 + 60);
  v6[96] = *(unsigned char *)(a2 + 64);
  uint64_t v8 = v4;
  uint64_t v9 = *v4;
  if (!*v4)
  {
LABEL_25:
    *(void *)uint64_t v6 = 0;
    *((void *)v6 + 1) = 0;
    *((void *)v6 + 2) = v4;
    *uint64_t v8 = v6;
    std::string::size_type v21 = (uint64_t *)**a1;
    if (!v21) {
      goto LABEL_27;
    }
LABEL_26:
    *a1 = v21;
    uint64_t v6 = *v8;
    goto LABEL_27;
  }
  int v10 = v6[55];
  if (v10 >= 0) {
    unint64_t v11 = v6[55];
  }
  else {
    unint64_t v11 = *((void *)v6 + 5);
  }
  if (v10 < 0) {
    int v7 = (_OWORD *)*((void *)v6 + 4);
  }
  do
  {
    while (1)
    {
      uint64_t v4 = (char **)v9;
      std::string::size_type v14 = (void *)*((void *)v9 + 4);
      unint64_t v12 = v9 + 32;
      char v13 = v14;
      int v15 = *((char *)v12 + 23);
      unint64_t v16 = v15 >= 0 ? *((unsigned __int8 *)v12 + 23) : v12[1];
      int v17 = v15 >= 0 ? v12 : v13;
      size_t v18 = v16 >= v11 ? v11 : v16;
      int v19 = memcmp(v7, v17, v18);
      BOOL v20 = v11 < v16;
      if (v19) {
        BOOL v20 = v19 < 0;
      }
      if (!v20) {
        break;
      }
      uint64_t v9 = *v4;
      uint64_t v8 = v4;
      if (!*v4) {
        goto LABEL_25;
      }
    }
    uint64_t v9 = v4[1];
  }
  while (v9);
  uint64_t v8 = v4 + 1;
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  *((void *)v6 + 2) = v4;
  v4[1] = v6;
  std::string::size_type v21 = (uint64_t *)**a1;
  if (v21) {
    goto LABEL_26;
  }
LABEL_27:
  sub_1000619B8(a1[1], (uint64_t *)v6);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return v23;
}

void sub_1001B2970(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001B2984((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_1001B2984(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((unsigned char *)a1 + 16) && *(char *)(v2 + 55) < 0) {
      operator delete(*(void **)(v2 + 32));
    }
    operator delete((void *)v2);
  }
  return a1;
}

uint64_t **sub_1001B29D4(uint64_t **a1, const void **a2, uint64_t a3, long long **a4)
{
  int v7 = a1 + 1;
  uint64_t v6 = a1[1];
  if (v6)
  {
    int v8 = *((char *)a2 + 23);
    if (v8 >= 0) {
      size_t v9 = *((unsigned __int8 *)a2 + 23);
    }
    else {
      size_t v9 = (size_t)a2[1];
    }
    if (v8 >= 0) {
      int v10 = a2;
    }
    else {
      int v10 = *a2;
    }
    while (1)
    {
      while (1)
      {
        unint64_t v11 = (uint64_t **)v6;
        std::string::size_type v14 = (const void *)v6[4];
        unint64_t v12 = v6 + 4;
        char v13 = v14;
        int v15 = *((char *)v12 + 23);
        if (v15 >= 0) {
          size_t v16 = *((unsigned __int8 *)v12 + 23);
        }
        else {
          size_t v16 = v12[1];
        }
        if (v15 >= 0) {
          int v17 = v12;
        }
        else {
          int v17 = v13;
        }
        if (v16 >= v9) {
          size_t v18 = v9;
        }
        else {
          size_t v18 = v16;
        }
        int v19 = memcmp(v10, v17, v18);
        BOOL v20 = v9 < v16;
        if (v19) {
          BOOL v20 = v19 < 0;
        }
        if (!v20) {
          break;
        }
        uint64_t v6 = *v11;
        int v7 = v11;
        if (!*v11) {
          goto LABEL_27;
        }
      }
      int v21 = memcmp(v17, v10, v18);
      BOOL v22 = v16 < v9;
      if (v21) {
        BOOL v22 = v21 < 0;
      }
      if (!v22) {
        return v11;
      }
      uint64_t v6 = v11[1];
      if (!v6)
      {
        int v7 = v11 + 1;
        goto LABEL_27;
      }
    }
  }
  else
  {
    unint64_t v11 = a1 + 1;
LABEL_27:
    int v23 = (char *)operator new(0x68uLL);
    size_t v24 = v23 + 32;
    int v25 = *a4;
    if (*((char *)*a4 + 23) < 0)
    {
      sub_1000559FC(v24, *(void **)v25, *((void *)v25 + 1));
      char v26 = v23[96] & 0xC0;
    }
    else
    {
      char v26 = 0;
      long long v27 = *v25;
      *((void *)v23 + 6) = *((void *)v25 + 2);
      *(_OWORD *)size_t v24 = v27;
    }
    *((void *)v23 + 7) = off_10045DBE8;
    *((void *)v23 + 8) = 0;
    *((_DWORD *)v23 + 18) = 0;
    v23[76] = 0;
    *((void *)v23 + 10) = 0;
    v23[88] = 0;
    *((_DWORD *)v23 + 23) = 0;
    v23[96] = v26;
    *(void *)int v23 = 0;
    *((void *)v23 + 1) = 0;
    *((void *)v23 + 2) = v11;
    *int v7 = (uint64_t *)v23;
    BOOL v28 = (uint64_t *)**a1;
    BOOL v29 = (uint64_t *)v23;
    if (v28)
    {
      *a1 = v28;
      BOOL v29 = *v7;
    }
    sub_1000619B8(a1[1], v29);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return (uint64_t **)v23;
}

void sub_1001B2BA0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B2BB4(uint64_t a1, std::string *a2)
{
  long long v25 = 0u;
  long long v26 = 0u;
  memset(v24, 0, sizeof(v24));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v28 = 0u;
  uint64_t v29 = 24;
  *(void *)&long long v25 = 0;
  *(void *)&v24[0] = off_100453E60;
  std::ios_base::init(&v31, v24);
  uint64_t v32 = 0;
  int v33 = -1;
  int v35 = &v34;
  int v36 = (char *)&v34 + 2;
  uint64_t v3 = (std::ios_base *)((char *)&v30 + (void)*(v30 - 3));
  v3->__exceptions_ = 1;
  std::ios_base::clear(v3, v3->__rdstate_);
  uint64_t v4 = (void *)std::ostream::operator<<();
  int v5 = *(_DWORD *)((char *)v4 + *(void *)(*v4 - 24) + 32);
  uint64_t v6 = *(void *)((char *)&v31.__rdstate_ + (void)*(v30 - 3));
  uint64_t v7 = *(void *)(v6 + 40);
  int v35 = (uint64_t *)v7;
  int v8 = *(char **)(v6 + 48);
  int v36 = v8;
  if ((v5 & 5) == 0)
  {
    unint64_t v10 = (unint64_t)&v8[-v7];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v14 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v13 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v13 >= v10)
      {
        unint64_t v15 = HIBYTE(v14);
LABEL_10:
        if ((v15 & 0x80u) == 0) {
          unint64_t v11 = a2;
        }
        else {
          unint64_t v11 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v7 == v8)
        {
          size_t v16 = v11;
          goto LABEL_23;
        }
        if (v10 < 0x20 || (unint64_t)v11 - v7 < 0x20)
        {
          size_t v16 = v11;
          int v17 = (char *)v7;
        }
        else
        {
          size_t v16 = (std::string *)((char *)v11 + (v10 & 0xFFFFFFFFFFFFFFE0));
          int v17 = (char *)(v7 + (v10 & 0xFFFFFFFFFFFFFFE0));
          size_t v18 = (long long *)(v7 + 16);
          int v19 = &v11->__r_.__value_.__r.__words[2];
          unint64_t v20 = v10 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v21 = *v18;
            *((_OWORD *)v19 - 1) = *(v18 - 1);
            *(_OWORD *)int v19 = v21;
            v18 += 2;
            v19 += 4;
            v20 -= 32;
          }
          while (v20);
          if (v10 == (v10 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v16->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v10;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v10 & 0x7F;
            }
            uint64_t v9 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v22 = *v17++;
          v16->__r_.__value_.__s.__data_[0] = v22;
          size_t v16 = (std::string *)((char *)v16 + 1);
        }
        while (v17 != v8);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      unint64_t v11 = a2;
      if (v10 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v13 = 22;
    }
    std::string::__grow_by(a2, v13, v10 - v13, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v15) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v9 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v28) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v9;
}

void sub_1001B2E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001B2EC0(void *a1)
{
}

uint64_t sub_1001B2ED8(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  int v36 = &v35;
  std::string::size_type v37 = (char *)&v35 + 2;
  uint64_t v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  sub_1001B0884(&v31, a1);
  int v5 = (char *)&v31 + (void)*(v31 - 3);
  int v6 = *((_DWORD *)v5 + 8);
  uint64_t v7 = *((void *)v5 + 5);
  uint64_t v8 = *(void *)(v7 + 40);
  int v36 = (uint64_t *)v8;
  uint64_t v9 = *(char **)(v7 + 48);
  std::string::size_type v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          unint64_t v12 = a2;
        }
        else {
          unint64_t v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          int v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          int v17 = v12;
          size_t v18 = (char *)v8;
        }
        else
        {
          int v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          size_t v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          int v19 = (long long *)(v8 + 16);
          unint64_t v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)unint64_t v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          int v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      unint64_t v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_1001B3198(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001B31CC(void *a1)
{
}

uint64_t sub_1001B31E4(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  int v36 = &v35;
  std::string::size_type v37 = (char *)&v35 + 2;
  uint64_t v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  int v5 = sub_1001AA7C4(&v31, a1);
  int v6 = *(_DWORD *)((char *)v5 + *(void *)(*v5 - 24) + 32);
  uint64_t v7 = *(void *)((char *)&v32.__rdstate_ + (void)*(v31 - 3));
  uint64_t v8 = *(void *)(v7 + 40);
  int v36 = (uint64_t *)v8;
  uint64_t v9 = *(char **)(v7 + 48);
  std::string::size_type v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          unint64_t v12 = a2;
        }
        else {
          unint64_t v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          int v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          int v17 = v12;
          size_t v18 = (char *)v8;
        }
        else
        {
          int v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          size_t v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          int v19 = (long long *)(v8 + 16);
          unint64_t v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)unint64_t v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          int v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      unint64_t v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_1001B34BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001B34F0(void *a1)
{
}

uint64_t sub_1001B3508(uint64_t *a1, void *a2)
{
  sub_1000CD96C((uint64_t)v10);
  for (uint64_t i = *a1; i != *a2; i += 40)
  {
    if (i != *a1) {
      sub_10002986C(v10, (uint64_t)", ", 2);
    }
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001B2ED8(i, &__p) & 1) == 0)
    {
      uint64_t v8 = std::bad_cast::bad_cast(&v12);
      v12.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)v8);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(v10, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  std::stringbuf::str();
  if (v11 < 0) {
    operator delete((void *)v10[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_1001B3720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001B3738(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1000CDB10((uint64_t)&a16);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B3770(uint64_t *a1, void *a2)
{
  sub_1000CD96C((uint64_t)v10);
  for (uint64_t i = *a1; i != *a2; i += 40)
  {
    if (i != *a1) {
      sub_10002986C(v10, (uint64_t)", ", 2);
    }
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001B39D8(i, &__p) & 1) == 0)
    {
      uint64_t v8 = std::bad_cast::bad_cast(&v12);
      v12.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)v8);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(v10, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  std::stringbuf::str();
  if (v11 < 0) {
    operator delete((void *)v10[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_1001B3988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001B39A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1000CDB10((uint64_t)&a16);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B39D8(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  int v36 = &v35;
  std::string::size_type v37 = (char *)&v35 + 2;
  uint64_t v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  sub_1001B0A68(&v31, a1);
  int v5 = (char *)&v31 + (void)*(v31 - 3);
  int v6 = *((_DWORD *)v5 + 8);
  uint64_t v7 = *((void *)v5 + 5);
  uint64_t v8 = *(void *)(v7 + 40);
  int v36 = (uint64_t *)v8;
  uint64_t v9 = *(char **)(v7 + 48);
  std::string::size_type v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          std::bad_cast v12 = a2;
        }
        else {
          std::bad_cast v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          int v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          int v17 = v12;
          size_t v18 = (char *)v8;
        }
        else
        {
          int v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          size_t v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          int v19 = (long long *)(v8 + 16);
          unint64_t v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)unint64_t v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          int v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      std::bad_cast v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_1001B3C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001B3CCC(void *a1)
{
}

uint64_t sub_1001B3CE4(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  int v36 = &v35;
  std::string::size_type v37 = (char *)&v35 + 2;
  uint64_t v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  int v5 = sub_1001A90A4(&v31, a1);
  int v6 = *(_DWORD *)((char *)v5 + *(void *)(*v5 - 24) + 32);
  uint64_t v7 = *(void *)((char *)&v32.__rdstate_ + (void)*(v31 - 3));
  uint64_t v8 = *(void *)(v7 + 40);
  int v36 = (uint64_t *)v8;
  uint64_t v9 = *(char **)(v7 + 48);
  std::string::size_type v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          std::bad_cast v12 = a2;
        }
        else {
          std::bad_cast v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          int v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          int v17 = v12;
          size_t v18 = (char *)v8;
        }
        else
        {
          int v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          size_t v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          int v19 = (long long *)(v8 + 16);
          unint64_t v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)unint64_t v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          int v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      std::bad_cast v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_1001B3FBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001B3FF0(void *a1)
{
}

uint64_t sub_1001B4008(uint64_t a1, std::string *a2)
{
  long long v25 = 0u;
  long long v26 = 0u;
  memset(v24, 0, sizeof(v24));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v28 = 0u;
  uint64_t v29 = 24;
  *(void *)&long long v25 = 0;
  *(void *)&v24[0] = off_100453E60;
  std::ios_base::init(&v31, v24);
  uint64_t v32 = 0;
  int v33 = -1;
  uint64_t v35 = &v34;
  int v36 = (char *)&v34 + 2;
  uint64_t v3 = (std::ios_base *)((char *)&v30 + (void)*(v30 - 3));
  v3->__exceptions_ = 1;
  std::ios_base::clear(v3, v3->__rdstate_);
  uint64_t v4 = (void *)std::ostream::operator<<();
  int v5 = *(_DWORD *)((char *)v4 + *(void *)(*v4 - 24) + 32);
  uint64_t v6 = *(void *)((char *)&v31.__rdstate_ + (void)*(v30 - 3));
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v35 = (uint64_t *)v7;
  uint64_t v8 = *(char **)(v6 + 48);
  int v36 = v8;
  if ((v5 & 5) == 0)
  {
    unint64_t v10 = (unint64_t)&v8[-v7];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v14 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v13 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v13 >= v10)
      {
        unint64_t v15 = HIBYTE(v14);
LABEL_10:
        if ((v15 & 0x80u) == 0) {
          unint64_t v11 = a2;
        }
        else {
          unint64_t v11 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v7 == v8)
        {
          unint64_t v16 = v11;
          goto LABEL_23;
        }
        if (v10 < 0x20 || (unint64_t)v11 - v7 < 0x20)
        {
          unint64_t v16 = v11;
          int v17 = (char *)v7;
        }
        else
        {
          unint64_t v16 = (std::string *)((char *)v11 + (v10 & 0xFFFFFFFFFFFFFFE0));
          int v17 = (char *)(v7 + (v10 & 0xFFFFFFFFFFFFFFE0));
          size_t v18 = (long long *)(v7 + 16);
          int v19 = &v11->__r_.__value_.__r.__words[2];
          unint64_t v20 = v10 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v21 = *v18;
            *((_OWORD *)v19 - 1) = *(v18 - 1);
            *(_OWORD *)int v19 = v21;
            v18 += 2;
            v19 += 4;
            v20 -= 32;
          }
          while (v20);
          if (v10 == (v10 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v16->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v10;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v10 & 0x7F;
            }
            uint64_t v9 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v22 = *v17++;
          v16->__r_.__value_.__s.__data_[0] = v22;
          unint64_t v16 = (std::string *)((char *)v16 + 1);
        }
        while (v17 != v8);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      unint64_t v11 = a2;
      if (v10 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v13 = 22;
    }
    std::string::__grow_by(a2, v13, v10 - v13, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v15) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v9 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v28) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v9;
}

void sub_1001B42E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001B4314(void *a1)
{
}

uint64_t sub_1001B432C(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  int v36 = &v35;
  std::string::size_type v37 = (char *)&v35 + 2;
  uint64_t v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  int v5 = sub_1001A9610(&v31, a1);
  int v6 = *(_DWORD *)((char *)v5 + *(void *)(*v5 - 24) + 32);
  uint64_t v7 = *(void *)((char *)&v32.__rdstate_ + (void)*(v31 - 3));
  uint64_t v8 = *(void *)(v7 + 40);
  int v36 = (uint64_t *)v8;
  uint64_t v9 = *(char **)(v7 + 48);
  std::string::size_type v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          std::bad_cast v12 = a2;
        }
        else {
          std::bad_cast v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          int v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          int v17 = v12;
          size_t v18 = (char *)v8;
        }
        else
        {
          int v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          size_t v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          int v19 = (long long *)(v8 + 16);
          unint64_t v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)unint64_t v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          int v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      std::bad_cast v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_1001B4604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001B4638(void *a1)
{
}

uint64_t sub_1001B4650()
{
  qword_10047EEE8 = 0;
  qword_10047EEE0 = 0;
  qword_10047EED8 = (uint64_t)&qword_10047EEE0;
  uint64_t v1 = (uint64_t)&_mh_execute_header;
  uint64_t v2 = &unk_10047C8E0;
  uint64_t v3 = &off_10047C8E8;
  sub_100168E80(&qword_10047EED8, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EED8, (void *)&_mh_execute_header);
  qword_10047EF00 = 0;
  qword_10047EEF8 = 0;
  qword_10047EEF0 = (uint64_t)&qword_10047EEF8;
  uint64_t v1 = 0x400000000;
  uint64_t v2 = &unk_10047C8F0;
  uint64_t v3 = off_10047C900;
  sub_100168E80(&qword_10047EEF0, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EEF0, (void *)&_mh_execute_header);
  qword_10047EF18 = 0;
  qword_10047EF10 = 0;
  qword_10047EF08 = (uint64_t)&qword_10047EF10;
  uint64_t v1 = 0x300000000;
  uint64_t v2 = &unk_10047C920;
  uint64_t v3 = off_10047C930;
  sub_100168E80(&qword_10047EF08, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EF08, (void *)&_mh_execute_header);
  qword_10047EF30 = 0;
  qword_10047EF28 = 0;
  qword_10047EF20 = (uint64_t)&qword_10047EF28;
  uint64_t v1 = 0x200000000;
  uint64_t v2 = &unk_10047C948;
  uint64_t v3 = off_10047C950;
  sub_100168E80(&qword_10047EF20, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EF20, (void *)&_mh_execute_header);
  qword_10047EF48 = 0;
  qword_10047EF40 = 0;
  qword_10047EF38 = (uint64_t)&qword_10047EF40;
  uint64_t v1 = 0x600000000;
  uint64_t v2 = &unk_10047C960;
  uint64_t v3 = off_10047C978;
  sub_100168E80(&qword_10047EF38, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EF38, (void *)&_mh_execute_header);
  qword_10047EF58 = 0;
  qword_10047EF60 = 0;
  qword_10047EF50 = (uint64_t)&qword_10047EF58;
  uint64_t v1 = 0x400000000;
  uint64_t v2 = &unk_10047C9A8;
  uint64_t v3 = off_10047C9B8;
  sub_100168E80(&qword_10047EF50, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EF50, (void *)&_mh_execute_header);
  qword_10047EF78 = 0;
  qword_10047EF70 = 0;
  qword_10047EF68 = (uint64_t)&qword_10047EF70;
  uint64_t v1 = 0x300000000;
  uint64_t v2 = &unk_10047C9D8;
  uint64_t v3 = off_10047C9E8;
  sub_100168E80(&qword_10047EF68, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EF68, (void *)&_mh_execute_header);
  qword_10047EF88 = 0;
  qword_10047EF90 = 0;
  qword_10047EF80 = (uint64_t)&qword_10047EF88;
  uint64_t v1 = 0x200000000;
  uint64_t v2 = &unk_10047CA00;
  uint64_t v3 = off_10047CA08;
  sub_100168E80(&qword_10047EF80, (uint64_t)&v1);
  return __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EF80, (void *)&_mh_execute_header);
}

void sub_1001B49F8(_Unwind_Exception *a1)
{
}

void sub_1001B4A14(_Unwind_Exception *a1)
{
}

void sub_1001B4A30(_Unwind_Exception *a1)
{
}

void sub_1001B4A4C(_Unwind_Exception *a1)
{
}

void sub_1001B4A68(_Unwind_Exception *a1)
{
}

void sub_1001B4A84(_Unwind_Exception *a1)
{
}

void sub_1001B4AA0(_Unwind_Exception *a1)
{
}

void sub_1001B4ABC(_Unwind_Exception *a1)
{
}

void sub_1001B4AD8(uint64_t a1)
{
  *(void *)a1 = off_10045DDB8;
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }

  operator delete();
}

void *sub_1001B4B48(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"ImageMetadata(", 14);
  uint64_t v4 = sub_10002986C(a1, (uint64_t)"width=", 6);
  sub_10016714C((int *)(a2 + 8), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  uint64_t v7 = sub_10002986C(a1, (uint64_t)", ", 2);
  uint64_t v8 = sub_10002986C(v7, (uint64_t)"height=", 7);
  sub_10016714C((int *)(a2 + 12), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v9 = &__p;
  }
  else {
    uint64_t v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v10 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v8, (uint64_t)v9, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  unint64_t v11 = sub_10002986C(a1, (uint64_t)", ", 2);
  std::bad_cast v12 = sub_10002986C(v11, (uint64_t)"id=", 3);
  memset(&__p, 0, sizeof(__p));
  std::string::operator=(&__p, (const std::string *)(a2 + 16));
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v13 = &__p;
  }
  else {
    std::string::size_type v13 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v14 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v12, (uint64_t)v13, v14);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001B4CD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001B4CFC(uint64_t a1)
{
  *(void *)a1 = off_10045DDD8;
  if (*(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    uint64_t v2 = *(void **)(a1 + 8);
    if (!v2)
    {
LABEL_4:
      operator delete();
    }
  }
  else
  {
    uint64_t v2 = *(void **)(a1 + 8);
    if (!v2) {
      goto LABEL_4;
    }
  }
  *(void *)(a1 + 16) = v2;
  operator delete(v2);
  goto LABEL_4;
}

void *sub_1001B4D88(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"TileMetadata(", 13);
  uint64_t v4 = sub_10002986C(a1, (uint64_t)"zoomFactor=", 11);
  sub_100199CF0(a2 + 8);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  uint64_t v7 = sub_10002986C(a1, (uint64_t)", ", 2);
  uint64_t v8 = sub_10002986C(v7, (uint64_t)"tileWidth=", 10);
  sub_10016714C((int *)(a2 + 32), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v9 = &__p;
  }
  else {
    uint64_t v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v10 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v8, (uint64_t)v9, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  unint64_t v11 = sub_10002986C(a1, (uint64_t)", ", 2);
  std::bad_cast v12 = sub_10002986C(v11, (uint64_t)"tileHeight=", 11);
  sub_10016714C((int *)(a2 + 36), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v13 = &__p;
  }
  else {
    std::string::size_type v13 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v14 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v12, (uint64_t)v13, v14);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  unint64_t v15 = sub_10002986C(a1, (uint64_t)", ", 2);
  unint64_t v16 = sub_10002986C(v15, (uint64_t)"tiledImageWidth=", 16);
  sub_10016714C((int *)(a2 + 40), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v17 = &__p;
  }
  else {
    int v17 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v18 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v18 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v16, (uint64_t)v17, v18);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v19 = sub_10002986C(a1, (uint64_t)", ", 2);
  unint64_t v20 = sub_10002986C(v19, (uint64_t)"tiledImageHeight=", 17);
  sub_10016714C((int *)(a2 + 44), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unint64_t v21 = &__p;
  }
  else {
    unint64_t v21 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v22 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v22 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v20, (uint64_t)v21, v22);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::string::value_type v23 = sub_10002986C(a1, (uint64_t)", ", 2);
  size_t v24 = sub_10002986C(v23, (uint64_t)"tileImageFormat=", 16);
  memset(&__p, 0, sizeof(__p));
  std::string::operator=(&__p, (const std::string *)(a2 + 48));
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    long long v25 = &__p;
  }
  else {
    long long v25 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v26 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v26 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v24, (uint64_t)v25, v26);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001B504C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001B5080(uint64_t a1)
{
  *(void *)a1 = off_10045DE18;
  if (*(char *)(a1 + 375) < 0) {
    operator delete(*(void **)(a1 + 352));
  }
  sub_100075D60(a1 + 304);
  nullsub_15(a1 + 272);
  nullsub_15(a1 + 240);
  sub_1000761B8(a1 + 128);
  nullsub_16(a1 + 56, v2);
  sub_100075D60(a1 + 8);

  operator delete();
}

void *sub_1001B5120(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"PlanogramData(", 14);
  uint64_t v4 = sub_10002986C(a1, (uint64_t)"DEPRECATED_image=", 17);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001B5CFC(a2 + 8, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v46);
    v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
    sub_1000DB0D4((uint64_t)&v46);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  uint64_t v7 = sub_10002986C(a1, (uint64_t)", ", 2);
  uint64_t v8 = sub_10002986C(v7, (uint64_t)"transform=", 10);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001A5B8C(a2 + 56, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v46);
    v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
    sub_1000DB0D4((uint64_t)&v46);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v9 = &__p;
  }
  else {
    uint64_t v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v10 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v8, (uint64_t)v9, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  unint64_t v11 = sub_10002986C(a1, (uint64_t)", ", 2);
  std::bad_cast v12 = sub_10002986C(v11, (uint64_t)"tiles=", 6);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001B6020(a2 + 128, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v46);
    v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
    sub_1000DB0D4((uint64_t)&v46);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v13 = &__p;
  }
  else {
    std::string::size_type v13 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v14 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v12, (uint64_t)v13, v14);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  unint64_t v15 = sub_10002986C(a1, (uint64_t)", ", 2);
  unint64_t v16 = sub_10002986C(v15, (uint64_t)"tileOriginPixelOffsetX=", 23);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001645DC((double *)(a2 + 208), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v46);
    v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
    sub_1000DB0D4((uint64_t)&v46);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v17 = &__p;
  }
  else {
    int v17 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v18 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v18 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v16, (uint64_t)v17, v18);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v19 = sub_10002986C(a1, (uint64_t)", ", 2);
  unint64_t v20 = sub_10002986C(v19, (uint64_t)"tileOriginPixelOffsetY=", 23);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001645DC((double *)(a2 + 216), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v46);
    v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
    sub_1000DB0D4((uint64_t)&v46);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unint64_t v21 = &__p;
  }
  else {
    unint64_t v21 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v22 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v22 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v20, (uint64_t)v21, v22);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::string::value_type v23 = sub_10002986C(a1, (uint64_t)", ", 2);
  size_t v24 = sub_10002986C(v23, (uint64_t)"tileScaleFactor=", 16);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001645DC((double *)(a2 + 224), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v46);
    v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
    sub_1000DB0D4((uint64_t)&v46);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    long long v25 = &__p;
  }
  else {
    long long v25 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v26 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v26 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v24, (uint64_t)v25, v26);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  long long v27 = sub_10002986C(a1, (uint64_t)", ", 2);
  long long v28 = sub_10002986C(v27, (uint64_t)"autoUpdateScale=", 16);
  memset(&v46, 0, sizeof(v46));
  if (*(unsigned char *)(a2 + 232)) {
    std::string::value_type v29 = 49;
  }
  else {
    std::string::value_type v29 = 48;
  }
  v46.__r_.__value_.__s.__data_[0] = v29;
  *((unsigned char *)&v46.__r_.__value_.__s + 23) = 1;
  sub_10002986C(v28, (uint64_t)&v46, 1);
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v46.__r_.__value_.__l.__data_);
  }
  uint64_t v30 = sub_10002986C(a1, (uint64_t)", ", 2);
  std::ios_base v31 = sub_10002986C(v30, (uint64_t)"topLeftLatLon=", 14);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10019DAB0(a2 + 240, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v46);
    v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
    sub_1000DB0D4((uint64_t)&v46);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::ios_base v32 = &__p;
  }
  else {
    std::ios_base v32 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v33 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v33 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v31, (uint64_t)v32, v33);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v34 = sub_10002986C(a1, (uint64_t)", ", 2);
  uint64_t v35 = sub_10002986C(v34, (uint64_t)"bottomRightLatLon=", 18);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10019DAB0(a2 + 272, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v46);
    v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
    sub_1000DB0D4((uint64_t)&v46);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v36 = &__p;
  }
  else {
    int v36 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v37 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v37 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v35, (uint64_t)v36, v37);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v38 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v38, (uint64_t)"unscaledImage=", 14);
  if ((*(_WORD *)(a2 + 376) & 0x200) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001B5CFC(a2 + 304, &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&v46);
      v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
      sub_1000DB0D4((uint64_t)&v46);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v39 = &__p;
    }
    else {
      int v39 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v40 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v40 = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v39, v40);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  int v41 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v41, (uint64_t)"DEPRECATED_id=", 14);
  if ((*(_WORD *)(a2 + 376) & 0x400) != 0)
  {
    memset(&v46, 0, sizeof(v46));
    std::string::operator=(&v46, (const std::string *)(a2 + 352));
    if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v42 = &v46;
    }
    else {
      int v42 = (std::string *)v46.__r_.__value_.__r.__words[0];
    }
    if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v43 = HIBYTE(v46.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v43 = v46.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v42, v43);
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v46.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001B5914(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001B59CC(uint64_t a1, double a2)
{
  *(void *)a1 = off_10045DE38;
  if (*(char *)(a1 + 151) < 0) {
    operator delete(*(void **)(a1 + 128));
  }
  nullsub_16(a1 + 56, a2);
  sub_100075D60(a1 + 8);

  operator delete();
}

void *sub_1001B5A4C(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"OccupancyData(", 14);
  uint64_t v4 = sub_10002986C(a1, (uint64_t)"image=", 6);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001B5CFC(a2 + 8, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v16);
    v16.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
    sub_1000DB0D4((uint64_t)&v16);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  uint64_t v7 = sub_10002986C(a1, (uint64_t)", ", 2);
  uint64_t v8 = sub_10002986C(v7, (uint64_t)"transform=", 10);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001A5B8C(a2 + 56, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v16);
    v16.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
    sub_1000DB0D4((uint64_t)&v16);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v9 = &__p;
  }
  else {
    uint64_t v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v10 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v8, (uint64_t)v9, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  unint64_t v11 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v11, (uint64_t)"DEPRECATED_id=", 14);
  if ((*(unsigned char *)(a2 + 152) & 4) != 0)
  {
    memset(&v16, 0, sizeof(v16));
    std::string::operator=(&v16, (const std::string *)(a2 + 128));
    if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::bad_cast v12 = &v16;
    }
    else {
      std::bad_cast v12 = (std::string *)v16.__r_.__value_.__r.__words[0];
    }
    if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v13 = HIBYTE(v16.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v13 = v16.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v12, v13);
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v16.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001B5C9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001B5CFC(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  int v36 = &v35;
  std::string::size_type v37 = (char *)&v35 + 2;
  uint64_t v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  int v5 = sub_1001B4B48(&v31, a1);
  int v6 = *(_DWORD *)((char *)v5 + *(void *)(*v5 - 24) + 32);
  uint64_t v7 = *(void *)((char *)&v32.__rdstate_ + (void)*(v31 - 3));
  uint64_t v8 = *(void *)(v7 + 40);
  int v36 = (uint64_t *)v8;
  uint64_t v9 = *(char **)(v7 + 48);
  std::string::size_type v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          std::bad_cast v12 = a2;
        }
        else {
          std::bad_cast v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          int v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          int v17 = v12;
          std::string::size_type v18 = (char *)v8;
        }
        else
        {
          int v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          std::string::size_type v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          int v19 = (long long *)(v8 + 16);
          unint64_t v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)unint64_t v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          int v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      std::bad_cast v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_1001B5FD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001B6008(void *a1)
{
}

uint64_t sub_1001B6020(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  int v36 = &v35;
  std::string::size_type v37 = (char *)&v35 + 2;
  uint64_t v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  int v5 = sub_1001B4D88(&v31, a1);
  int v6 = *(_DWORD *)((char *)v5 + *(void *)(*v5 - 24) + 32);
  uint64_t v7 = *(void *)((char *)&v32.__rdstate_ + (void)*(v31 - 3));
  uint64_t v8 = *(void *)(v7 + 40);
  int v36 = (uint64_t *)v8;
  uint64_t v9 = *(char **)(v7 + 48);
  std::string::size_type v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          std::bad_cast v12 = a2;
        }
        else {
          std::bad_cast v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          int v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          int v17 = v12;
          std::string::size_type v18 = (char *)v8;
        }
        else
        {
          int v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          std::string::size_type v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          int v19 = (long long *)(v8 + 16);
          unint64_t v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)unint64_t v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          int v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      std::bad_cast v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_1001B62F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001B632C(void *a1)
{
}

uint64_t sub_1001B6344(uint64_t a1, _DWORD *a2)
{
  unsigned int v2 = a2[7];
  unsigned int v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  int v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(void *)a2 + 32))(a2, "CellData");
  int v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "celltype", 11, 1)+ v6;
  int v8 = (*(uint64_t (**)(_DWORD *, uint64_t))(*(void *)a2 + 168))(a2, a1 + 8);
  int v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "rat", 11, 2);
  int v11 = v10 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(void *)a2 + 168))(a2, a1 + 32);
  int v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v13 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "mcc", 8, 3);
  int v14 = v13 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 56));
  int v15 = v14 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v16 = v12
      + v15
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "mnc", 8, 4);
  int v17 = (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 60));
  int v18 = v17 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v19 = v18
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "lac", 8, 5);
  int v20 = v19 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 64));
  int v21 = v16 + v20 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v22 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "ci", 8, 6);
  int v23 = v22 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 68));
  int v24 = v23 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v25 = v24
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "uarfcn", 8, 7);
  int v26 = v25 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 72));
  int v27 = v21 + v26 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v28 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "psc", 8, 8);
  int v29 = v28 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 76));
  int v30 = v29 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v31 = v30
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "rscp", 8, 9);
  int v32 = v31 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 80));
  int v33 = v32 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v34 = v27
      + v33
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "ecn0", 8, 10);
  int v35 = (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 84));
  int v36 = v35 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v37 = v36
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "rssi", 8, 11);
  int v38 = v37 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 88));
  int v39 = v38 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v40 = v39
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "tac", 8, 12);
  int v41 = v40 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 92));
  int v42 = v34 + v41 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v43 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "pid", 8, 13);
  int v44 = v43 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 96));
  int v45 = v44 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v46 = v45
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "band_info", 8, 14);
  int v47 = v46 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 100));
  int v48 = v47 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v49 = v48
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "lat", 4, 15);
  int v50 = v49 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 104));
  int v51 = v42 + v50 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v52 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "lon", 4, 16);
  int v53 = v52 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 112));
  int v54 = v53 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v55 = v54
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "sid", 8, 17);
  int v56 = v55 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 120));
  int v57 = v56 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v58 = v57
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "nid", 8, 18);
  int v59 = v58 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 124));
  int v60 = v59 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v61 = v51
      + v60
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "zoneid", 8, 19);
  int v62 = (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 128));
  int v63 = v62 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v64 = v63
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "bsid", 8, 20);
  int v65 = v64 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 132));
  int v66 = v65 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v67 = v66
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "bandclass", 8, 21);
  int v68 = v67 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 136));
  int v69 = v68 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v70 = v69
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "channel", 8, 22);
  int v71 = v70 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 140));
  int v72 = v61 + v71 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v73 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "pnoffset", 8, 23);
  int v74 = v73 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 144));
  int v75 = v74 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v76 = v75
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "sector_lat", 4, 25);
  int v77 = v76 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 176));
  int v78 = v77 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v79 = v78
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "sector_lon", 4, 26);
  int v80 = v79 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 184));
  int v81 = v80 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v82 = v81
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "ltmOffset", 8, 27);
  int v83 = v82 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 192));
  int v84 = v72 + v83 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v85 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "daylightSaving", 8, 28);
  int v86 = v85 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 196));
  int v87 = v84 + v86 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  if ((*(unsigned char *)(a1 + 239) & 0x10) != 0)
  {
    int v88 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "derivedMccs", 15, 29);
    int v89 = v88
        + (*(uint64_t (**)(_DWORD *, uint64_t, void))(*(void *)a2 + 88))(a2, 8, (*(void *)(a1 + 208) - *(void *)(a1 + 200)) >> 2)+ v87;
    for (uint64_t i = *(unsigned int **)(a1 + 200);
          i != *(unsigned int **)(a1 + 208);
          v89 += (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, v91))
    {
      unsigned int v91 = *i++;
    }
    int v92 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 96))(a2);
    int v87 = v92 + v89 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  }
  int v93 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "arfcn", 8, 30);
  int v94 = v87 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 224));
  int v95 = v93 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v94;
  int v96 = *(_DWORD *)(a1 + 236);
  if ((v96 & 0x40000000) == 0)
  {
    if ((v96 & 0x80000000) == 0) {
      goto LABEL_8;
    }
LABEL_12:
    int v103 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "rsrq", 8, 32);
    int v104 = v95 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 232));
    int v95 = v103 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v104;
    if ((*(_DWORD *)(a1 + 236) & 0x800000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  int v101 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "rsrp", 8, 31);
  int v102 = v101 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 228));
  v95 += v102 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v96 = *(_DWORD *)(a1 + 236);
  if (v96 < 0) {
    goto LABEL_12;
  }
LABEL_8:
  if ((v96 & 0x800000) != 0)
  {
LABEL_9:
    int v97 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "sectorid", 11, 33);
    int v98 = v95 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(void *)a2 + 176))(a2, a1 + 152);
    int v95 = v97 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v98;
  }
LABEL_10:
  int v99 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 64))(a2);
  uint64_t result = v99 + v95 + (*(unsigned int (**)(_DWORD *))(*(void *)a2 + 40))(a2);
  --a2[6];
  return result;
}

void *sub_1001B7860(void *a1)
{
  *a1 = off_10045DE78;
  unsigned int v2 = (void (***)(void))a1[2];
  if (v2)
  {
    unsigned int v3 = (void (***)(void))a1[3];
    uint64_t v4 = (void *)a1[2];
    if (v3 != v2)
    {
      int v5 = v3 - 30;
      int v6 = v3 - 30;
      int v7 = v3 - 30;
      do
      {
        int v8 = *v7;
        v7 -= 30;
        (*v8)(v6);
        v5 -= 30;
        BOOL v9 = v6 == v2;
        int v6 = v7;
      }
      while (!v9);
      uint64_t v4 = (void *)a1[2];
    }
    a1[3] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_1001B7918(void *a1)
{
  *a1 = off_10045DE78;
  unsigned int v2 = (void (***)(void))a1[2];
  if (v2)
  {
    unsigned int v3 = (void (***)(void))a1[3];
    uint64_t v4 = (void *)a1[2];
    if (v3 != v2)
    {
      int v5 = v3 - 30;
      int v6 = v3 - 30;
      int v7 = v3 - 30;
      do
      {
        int v8 = *v7;
        v7 -= 30;
        (*v8)(v6);
        v5 -= 30;
        BOOL v9 = v6 == v2;
        int v6 = v7;
      }
      while (!v9);
      uint64_t v4 = (void *)a1[2];
    }
    a1[3] = v2;
    operator delete(v4);
  }

  operator delete();
}

uint64_t sub_1001B79F0(void *a1, _DWORD *a2)
{
  unsigned int v2 = a2[7];
  unsigned int v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  int v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(void *)a2 + 32))(a2, "CellScanEvent");
  int v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "timestampNanos", 10, 1)+ v6;
  int v8 = (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, a1[1]);
  int v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v10 = v9
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "cellVector", 15, 2);
  int v11 = v10
      + (*(uint64_t (**)(_DWORD *, uint64_t, void))(*(void *)a2 + 88))(a2, 12, -286331153 * ((a1[3] - a1[2]) >> 4));
  for (uint64_t i = a1[2]; i != a1[3]; i += 240)
    v11 += sub_1001B6344(i, a2);
  int v13 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 96))(a2) + v11;
  int v14 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v15 = v13 + v14 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 64))(a2);
  uint64_t result = v15 + (*(unsigned int (**)(_DWORD *))(*(void *)a2 + 40))(a2);
  --a2[6];
  return result;
}

uint64_t sub_1001B7CBC()
{
  qword_10047EFA8 = 0;
  qword_10047EFA0 = 0;
  qword_10047EF98 = (uint64_t)&qword_10047EFA0;
  v1[0] = 0x1600000000;
  v1[1] = &unk_10047CA18;
  v1[2] = &off_10047CA70;
  sub_100168E80(&qword_10047EF98, (uint64_t)v1);
  return __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047EF98, (void *)&_mh_execute_header);
}

void sub_1001B7D58(_Unwind_Exception *a1)
{
  sub_10006A9DC(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

void sub_1001B7D70(uint64_t a1)
{
  *(void *)a1 = off_10045DEA8;
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
  nullsub_15(a1 + 32);

  operator delete();
}

uint64_t sub_1001B7DE8(uint64_t a1, uint64_t *a2)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v14 = 0;
  int v12 = 0;
  __int16 v11 = 0;
  for (int i = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, __p);
        ;
        int i = v7 + v5 + (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2))
  {
    int v5 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v12, &v11) + i;
    if (!v12) {
      break;
    }
    switch(v11)
    {
      case 1:
        uint64_t v6 = *a2;
        if (v12 != 10) {
          goto LABEL_28;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 8);
        __int16 v8 = 1;
        goto LABEL_27;
      case 2:
        if (v12 != 12) {
          goto LABEL_8;
        }
        int v7 = sub_1001A9ECC(a1 + 32, a2);
        __int16 v8 = 8;
        goto LABEL_27;
      case 3:
        uint64_t v6 = *a2;
        if (v12 != 11) {
          goto LABEL_28;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 336))(a2, a1 + 64);
        __int16 v8 = 16;
        goto LABEL_27;
      case 4:
        uint64_t v6 = *a2;
        if (v12 != 4) {
          goto LABEL_28;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 88);
        __int16 v8 = 32;
        goto LABEL_27;
      case 5:
        uint64_t v6 = *a2;
        if (v12 != 4) {
          goto LABEL_28;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 96);
        __int16 v8 = 64;
        goto LABEL_27;
      case 6:
        uint64_t v6 = *a2;
        if (v12 != 4) {
          goto LABEL_28;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 104);
        __int16 v8 = 128;
        goto LABEL_27;
      case 7:
        uint64_t v6 = *a2;
        if (v12 != 10) {
          goto LABEL_28;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 16);
        __int16 v8 = 2;
        goto LABEL_27;
      case 8:
        uint64_t v6 = *a2;
        if (v12 != 10) {
          goto LABEL_28;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 320))(a2, a1 + 24);
        __int16 v8 = 4;
        goto LABEL_27;
      case 9:
        uint64_t v6 = *a2;
        if (v12 != 4) {
          goto LABEL_28;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 112);
        __int16 v8 = 256;
        goto LABEL_27;
      case 10:
        uint64_t v6 = *a2;
        if (v12 != 4) {
          goto LABEL_28;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 120);
        __int16 v8 = 512;
        goto LABEL_27;
      case 11:
        uint64_t v6 = *a2;
        if (v12 != 4) {
          goto LABEL_28;
        }
        int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 328))(a2, a1 + 128);
        __int16 v8 = 1024;
LABEL_27:
        *(_WORD *)(a1 + 136) |= v8;
        break;
      default:
LABEL_8:
        uint64_t v6 = *a2;
LABEL_28:
        int v7 = (*(uint64_t (**)(uint64_t *))(v6 + 352))(a2);
        break;
    }
  }
  int v9 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v14) < 0) {
    operator delete(__p[0]);
  }
  return (v9 + v5);
}

void sub_1001B8348(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001B8394(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  sub_10007B704(a1 + 32, a2 + 32);
  std::string::operator=((std::string *)(a1 + 64), (const std::string *)(a2 + 64));
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
  return a1;
}

void sub_1001B8404(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  sub_1001B85BC(a1, a2, a3, a4);
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v4);
  std::string __p = operator new(0x28uLL);
  long long v7 = xmmword_1003F2070;
  strcpy((char *)__p, "protobuf/gen/locationd_parameters.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  operator delete(__p);
  if (!FileByName)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  }
  qword_10047DC58 = *(void *)(FileByName + 80);
  operator new();
}

void sub_1001B8554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B8568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B857C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001B85BC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10047DC48 & 1) == 0)
  {
    byte_10047DC48 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/locationd_parameters.pb.cc", a4);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n'protobuf/gen/locationd_parameters.proto\x12\x0Fproto.locationd\"\xB2\x01\n MotionActivityDebounceParameters\x12\"\n\x1AnonFitnessToCyclingSeconds\x18\x01 \x01(\r\x12\"\n\x1AnonFitnessToRunningSeconds\x18\x02 \x01(\r\x12\"\n\x1ArunningToNonFitnessSeconds\x18\x03 \x01(\r\x12\"\n\x1AcyclingToNonFitnessSeconds\x18\x04 \x01(\rB\"\n com.apple.indoor.proto.locationd", (const void *)0x113, v4);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_1001B86AC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001B86D4()
{
  if (qword_10047EFB0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EFB0 + 8))(qword_10047EFB0);
  }
  uint64_t result = qword_10047DC60;
  if (qword_10047DC60)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10047DC60 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_1001B875C()
{
  uint64_t v0 = qword_10047DC68;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B8404;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  if (!qword_10047EFB0) {
    sub_1001B85BC();
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_1001B881C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_1001B8830(void *a1)
{
  *a1 = off_10045DED8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_1001B887C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B8890(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 36))
  {
    int v7 = *(_DWORD *)(a2 + 16);
    a1[9] |= 1u;
    a1[4] = v7;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_12:
      int v9 = *(_DWORD *)(a2 + 24);
      a1[9] |= 4u;
      a1[6] = v9;
      if ((*(_DWORD *)(a2 + 36) & 8) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_8;
    }
  }
  else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *(_DWORD *)(a2 + 20);
  a1[9] |= 2u;
  a1[5] = v8;
  int v4 = *(_DWORD *)(a2 + 36);
  if ((v4 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_7:
  if ((v4 & 8) != 0)
  {
LABEL_8:
    int v5 = *(_DWORD *)(a2 + 28);
    a1[9] |= 8u;
    a1[7] = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001B8990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B89A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B89B8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045DED8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  sub_1001B8890((_DWORD *)a1, a2);
  return a1;
}

void sub_1001B8A24(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_1001B8A40(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_1001B8A54(uint64_t a1)
{
  *(void *)a1 = off_10045DED8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001B8AA8(uint64_t a1)
{
  *(void *)a1 = off_10045DED8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1001B8B10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

uint64_t sub_1001B8B18(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047EFB0;
  if (!qword_10047EFB0)
  {
    sub_1001B85BC(0, a2, a3, a4);
    return qword_10047EFB0;
  }
  return result;
}

void sub_1001B8B54()
{
}

void sub_1001B8BB8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B8BE0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 36))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001B8C00(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = a1 + 4;
  int v7 = a1 + 5;
  int v8 = a1 + 6;
  int v9 = a1 + 7;
  unsigned int v10 = a1 + 8;
  while (2)
  {
    __int16 v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          a1[9] |= 1u;
          if ((unint64_t)v16 >= v14) {
            continue;
          }
        }
        else
        {
          *uint64_t v6 = *v15;
          int v16 = v15 + 1;
          *((void *)this + 1) = v16;
          a1[9] |= 1u;
          if ((unint64_t)v16 >= v14) {
            continue;
          }
        }
        if (*v16 != 16) {
          continue;
        }
        int v17 = v16 + 1;
        *((void *)this + 1) = v17;
        if ((unint64_t)v17 >= v14) {
          goto LABEL_33;
        }
        goto LABEL_30;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v17 >= v14) {
          goto LABEL_33;
        }
LABEL_30:
        if ((*v17 & 0x80000000) == 0)
        {
          *int v7 = *v17;
          int v20 = v17 + 1;
          *((void *)this + 1) = v20;
          a1[9] |= 2u;
          if ((unint64_t)v20 < v14) {
            goto LABEL_35;
          }
          continue;
        }
LABEL_33:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
        if (!result) {
          return result;
        }
        int v20 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        a1[9] |= 2u;
        if ((unint64_t)v20 >= v14) {
          continue;
        }
LABEL_35:
        if (*v20 != 24) {
          continue;
        }
        int v18 = v20 + 1;
        *((void *)this + 1) = v18;
        if ((unint64_t)v18 >= v14) {
          goto LABEL_40;
        }
LABEL_37:
        if ((*v18 & 0x80000000) == 0)
        {
          *int v8 = *v18;
          int v21 = v18 + 1;
          *((void *)this + 1) = v21;
          a1[9] |= 4u;
          if ((unint64_t)v21 < v14) {
            goto LABEL_42;
          }
          continue;
        }
LABEL_40:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
        if (!result) {
          return result;
        }
        int v21 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        a1[9] |= 4u;
        if ((unint64_t)v21 >= v14) {
          continue;
        }
LABEL_42:
        if (*v21 != 32) {
          continue;
        }
        int v19 = v21 + 1;
        *((void *)this + 1) = v19;
        if ((unint64_t)v19 >= v14) {
          goto LABEL_47;
        }
LABEL_44:
        if ((*v19 & 0x80000000) == 0)
        {
          unsigned int *v9 = *v19;
          int v22 = (unsigned __int8 *)(v19 + 1);
          *((void *)this + 1) = v22;
          a1[9] |= 8u;
          if (v22 == (unsigned __int8 *)v14) {
            goto LABEL_49;
          }
          continue;
        }
LABEL_47:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
        if (!result) {
          return result;
        }
        uint64_t v24 = *((void *)this + 1);
        uint64_t v23 = *((void *)this + 2);
        a1[9] |= 8u;
        if (v24 != v23) {
          continue;
        }
LABEL_49:
        if (!*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v18 >= v14) {
          goto LABEL_40;
        }
        goto LABEL_37;
      case 4u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v19 >= v14) {
          goto LABEL_47;
        }
        goto LABEL_44;
      default:
        int v13 = TagFallback & 7;
LABEL_21:
        if (v13 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v10, a4))continue; {
        return 0;
        }
    }
  }
}

uint64_t sub_1001B8F60(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 24), a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 8) == 0)
  {
LABEL_5:
    int v9 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 28), a2, a4);
  unsigned int v10 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_11:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001B9034(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  if ((*((unsigned char *)this + 36) & 1) == 0)
  {
    if ((*((unsigned char *)this + 36) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_14:
    __int16 v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *(unsigned char *)char v3 = 16;
    if (v11 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)v3 + 1, a3);
      if ((*((unsigned char *)this + 36) & 4) != 0) {
        goto LABEL_18;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v11;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if ((*((unsigned char *)this + 36) & 4) != 0) {
        goto LABEL_18;
      }
    }
LABEL_4:
    if ((*((unsigned char *)this + 36) & 8) == 0) {
      goto LABEL_5;
    }
LABEL_22:
    int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(unsigned char *)char v3 = 32;
    if (v13 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)v3 + 1, a3);
      int v15 = (void *)*((void *)this + 1);
      int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      uint64_t v5 = v15;
      if (!v15) {
        return v3;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v13;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      unint64_t v14 = (void *)*((void *)this + 1);
      int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      uint64_t v5 = v14;
      if (!v14) {
        return v3;
      }
    }
    goto LABEL_6;
  }
  int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  *(unsigned char *)a2 = 8;
  unsigned int v10 = a2 + 1;
  if (v9 > 0x7F)
  {
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v10, a3);
    if ((*((unsigned char *)this + 36) & 2) != 0) {
      goto LABEL_14;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v9;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((unsigned char *)this + 36) & 2) != 0) {
      goto LABEL_14;
    }
  }
LABEL_3:
  if ((*((unsigned char *)this + 36) & 4) == 0) {
    goto LABEL_4;
  }
LABEL_18:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  *(unsigned char *)char v3 = 24;
  if (v12 > 0x7F)
  {
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v3 + 1, a3);
    if ((*((unsigned char *)this + 36) & 8) != 0) {
      goto LABEL_22;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v12;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((unsigned char *)this + 36) & 8) != 0) {
      goto LABEL_22;
    }
  }
LABEL_5:
  int v7 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v7;
  if (!v7) {
    return v3;
  }
LABEL_6:
  if (*v5 == v5[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, v3, a3);
}

uint64_t sub_1001B91A4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v6 = *(void **)(a1 + 8);
    if (!v6) {
      goto LABEL_18;
    }
    goto LABEL_27;
  }
  if (*(unsigned char *)(a1 + 36))
  {
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v7 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 36);
      if ((v3 & 2) == 0) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_15;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_15;
    }
  }
  int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v9 = 2;
  }
  uint64_t v4 = (v9 + v4);
LABEL_15:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_17;
    }
LABEL_23:
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v12 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2)+ 1+ v4;
      uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v6 = *(void **)(a1 + 8);
      if (!v6) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v6 = *(void **)(a1 + 8);
      if (!v6) {
        goto LABEL_18;
      }
    }
    goto LABEL_27;
  }
  __int16 v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v11 >= 0x80)
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2)+ 1+ v4;
    if ((*(_DWORD *)(a1 + 36) & 8) != 0) {
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v4 = (v4 + 2);
    if ((v3 & 8) != 0) {
      goto LABEL_23;
    }
  }
LABEL_17:
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v6 = *(void **)(a1 + 8);
  if (!v6)
  {
LABEL_18:
    *(_DWORD *)(a1 + 32) = v4;
    return v4;
  }
LABEL_27:
  if (*v6 == v6[1]) {
    goto LABEL_18;
  }
  uint64_t v13 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
      + v4;
  *(_DWORD *)(a1 + 32) = v13;
  return v13;
}

uint64_t sub_1001B92EC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001B8890(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001B93CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001B93E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B93F4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001B9480(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = (_DWORD *)result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    return sub_1001B8890(v4, a2);
  }
  return result;
}

uint64_t sub_1001B94EC()
{
  return 1;
}

uint64_t sub_1001B94F4()
{
  uint64_t v0 = qword_10047DC68;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B8404;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DC58;
}

void sub_1001B9584(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001B9598(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

void sub_1001B95A4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  sub_1001BAAC8(a1, a2, a3, a4);
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v4);
  std::string __p = operator new(0x20uLL);
  long long v7 = xmmword_1003E6770;
  strcpy((char *)__p, "protobuf/gen/parameters.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  operator delete(__p);
  if (!FileByName)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  }
  qword_10047DC80 = *(void *)(FileByName + 80);
  operator new();
}

void sub_1001BA9CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BA9E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BA9F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001BAAC8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10047DC70 & 1) == 0)
  {
    byte_10047DC70 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/parameters.pb.cc", a4);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)&unk_1003F2590, (const void *)0x3104, v4);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_1001BBB88()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001BBBB4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001BBE5C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001BBE84()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001BBEAC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001BBF78()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001BBFA4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001BBFCC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001BBFF4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001BC044()
{
  if (qword_10047EFB8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EFB8 + 8))(qword_10047EFB8);
  }
  if (qword_10047DC88) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DC88 + 8))(qword_10047DC88);
  }
  if (qword_10047EFC0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EFC0 + 8))(qword_10047EFC0);
  }
  if (qword_10047DC98) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DC98 + 8))(qword_10047DC98);
  }
  if (qword_10047EFC8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EFC8 + 8))(qword_10047EFC8);
  }
  if (qword_10047DCA8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DCA8 + 8))(qword_10047DCA8);
  }
  if (qword_10047EFD0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EFD0 + 8))(qword_10047EFD0);
  }
  if (qword_10047DCB8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DCB8 + 8))(qword_10047DCB8);
  }
  if (qword_10047EFD8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EFD8 + 8))(qword_10047EFD8);
  }
  if (qword_10047DCC8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DCC8 + 8))(qword_10047DCC8);
  }
  if (qword_10047EFE0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EFE0 + 8))(qword_10047EFE0);
  }
  if (qword_10047DCD8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DCD8 + 8))(qword_10047DCD8);
  }
  if (qword_10047EFE8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EFE8 + 8))(qword_10047EFE8);
  }
  if (qword_10047DCE8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DCE8 + 8))(qword_10047DCE8);
  }
  if (qword_10047EFF0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EFF0 + 8))(qword_10047EFF0);
  }
  if (qword_10047DCF8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DCF8 + 8))(qword_10047DCF8);
  }
  if (qword_10047EFF8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EFF8 + 8))(qword_10047EFF8);
  }
  if (qword_10047DD08) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DD08 + 8))(qword_10047DD08);
  }
  if (qword_10047F000) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F000 + 8))(qword_10047F000);
  }
  if (qword_10047DD20) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DD20 + 8))(qword_10047DD20);
  }
  if (qword_10047F008) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F008 + 8))(qword_10047F008);
  }
  if (qword_10047DD30) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DD30 + 8))(qword_10047DD30);
  }
  if (qword_10047F010) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F010 + 8))(qword_10047F010);
  }
  if (qword_10047DD40) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DD40 + 8))(qword_10047DD40);
  }
  if (qword_10047F018) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F018 + 8))(qword_10047F018);
  }
  if (qword_10047DD50) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DD50 + 8))(qword_10047DD50);
  }
  if (qword_10047F020) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F020 + 8))(qword_10047F020);
  }
  if (qword_10047DD60) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DD60 + 8))(qword_10047DD60);
  }
  if (qword_10047F028) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F028 + 8))(qword_10047F028);
  }
  if (qword_10047DD70) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DD70 + 8))(qword_10047DD70);
  }
  if (qword_10047F030) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F030 + 8))(qword_10047F030);
  }
  if (qword_10047DD80) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DD80 + 8))(qword_10047DD80);
  }
  if (qword_10047F038) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F038 + 8))(qword_10047F038);
  }
  if (qword_10047DD90) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DD90 + 8))(qword_10047DD90);
  }
  if (qword_10047F040) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F040 + 8))(qword_10047F040);
  }
  if (qword_10047DDA0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DDA0 + 8))(qword_10047DDA0);
  }
  if (qword_10047F048) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F048 + 8))(qword_10047F048);
  }
  if (qword_10047DDB0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DDB0 + 8))(qword_10047DDB0);
  }
  if (qword_10047F050) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F050 + 8))(qword_10047F050);
  }
  if (qword_10047DDC0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DDC0 + 8))(qword_10047DDC0);
  }
  if (qword_10047F058) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F058 + 8))(qword_10047F058);
  }
  if (qword_10047DDD0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DDD0 + 8))(qword_10047DDD0);
  }
  if (qword_10047F060) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F060 + 8))(qword_10047F060);
  }
  if (qword_10047DDE0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DDE0 + 8))(qword_10047DDE0);
  }
  if (qword_10047F068) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F068 + 8))(qword_10047F068);
  }
  if (qword_10047DDF0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DDF0 + 8))(qword_10047DDF0);
  }
  if (qword_10047F070) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F070 + 8))(qword_10047F070);
  }
  if (qword_10047DE00) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DE00 + 8))(qword_10047DE00);
  }
  if (qword_10047F078) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F078 + 8))(qword_10047F078);
  }
  if (qword_10047DE10) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DE10 + 8))(qword_10047DE10);
  }
  if (qword_10047F080) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F080 + 8))(qword_10047F080);
  }
  if (qword_10047DE20) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DE20 + 8))(qword_10047DE20);
  }
  if (qword_10047F088) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F088 + 8))(qword_10047F088);
  }
  if (qword_10047DE30) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DE30 + 8))(qword_10047DE30);
  }
  if (qword_10047F090) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F090 + 8))(qword_10047F090);
  }
  if (qword_10047DE40) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DE40 + 8))(qword_10047DE40);
  }
  if (qword_10047F098) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F098 + 8))(qword_10047F098);
  }
  if (qword_10047DE50) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DE50 + 8))(qword_10047DE50);
  }
  if (qword_10047F0A0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F0A0 + 8))(qword_10047F0A0);
  }
  if (qword_10047DE60) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DE60 + 8))(qword_10047DE60);
  }
  if (qword_10047F0A8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F0A8 + 8))(qword_10047F0A8);
  }
  if (qword_10047DE70) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DE70 + 8))(qword_10047DE70);
  }
  if (qword_10047F0B0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F0B0 + 8))(qword_10047F0B0);
  }
  if (qword_10047DE80) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DE80 + 8))(qword_10047DE80);
  }
  if (qword_10047F0B8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F0B8 + 8))(qword_10047F0B8);
  }
  if (qword_10047DE90) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DE90 + 8))(qword_10047DE90);
  }
  if (qword_10047F0C0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F0C0 + 8))(qword_10047F0C0);
  }
  if (qword_10047DEA0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DEA0 + 8))(qword_10047DEA0);
  }
  if (qword_10047F0C8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F0C8 + 8))(qword_10047F0C8);
  }
  if (qword_10047DEB0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DEB0 + 8))(qword_10047DEB0);
  }
  if (qword_10047F0D0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F0D0 + 8))(qword_10047F0D0);
  }
  if (qword_10047DEC0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DEC0 + 8))(qword_10047DEC0);
  }
  if (qword_10047F0D8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F0D8 + 8))(qword_10047F0D8);
  }
  if (qword_10047DED0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DED0 + 8))(qword_10047DED0);
  }
  if (qword_10047F0E0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047F0E0 + 8))(qword_10047F0E0);
  }
  uint64_t result = qword_10047DEE0;
  if (qword_10047DEE0)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10047DEE0 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_1001BCEAC()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v39[1] = sub_1001B95A4;
    char v40 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v39);
  }
  if (!qword_10047EFB8) {
    ((void (*)(void))sub_1001BAAC8)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EFC0) {
    sub_1001BAAC8(v1);
  }
  uint64_t v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EFC8) {
    sub_1001BAAC8(v2);
  }
  uint64_t v3 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EFD0) {
    sub_1001BAAC8(v3);
  }
  uint64_t v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EFD8) {
    sub_1001BAAC8(v4);
  }
  uint64_t v5 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EFE0) {
    sub_1001BAAC8(v5);
  }
  uint64_t v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EFE8) {
    sub_1001BAAC8(v6);
  }
  uint64_t v7 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EFF0) {
    sub_1001BAAC8(v7);
  }
  uint64_t v8 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EFF8) {
    sub_1001BAAC8(v8);
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F000) {
    sub_1001BAAC8(v9);
  }
  uint64_t v10 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F008) {
    sub_1001BAAC8(v10);
  }
  uint64_t v11 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F010) {
    sub_1001BAAC8(v11);
  }
  uint64_t v12 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F018) {
    sub_1001BAAC8(v12);
  }
  uint64_t v13 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F020) {
    sub_1001BAAC8(v13);
  }
  uint64_t v14 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F028) {
    sub_1001BAAC8(v14);
  }
  uint64_t v15 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F030) {
    sub_1001BAAC8(v15);
  }
  uint64_t v16 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F038) {
    sub_1001BAAC8(v16);
  }
  uint64_t v17 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F040) {
    sub_1001BAAC8(v17);
  }
  uint64_t v18 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F048) {
    sub_1001BAAC8(v18);
  }
  uint64_t v19 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F050) {
    sub_1001BAAC8(v19);
  }
  uint64_t v20 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F058) {
    sub_1001BAAC8(v20);
  }
  uint64_t v21 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F060) {
    sub_1001BAAC8(v21);
  }
  uint64_t v22 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F068) {
    sub_1001BAAC8(v22);
  }
  uint64_t v23 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F070) {
    sub_1001BAAC8(v23);
  }
  uint64_t v24 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F078) {
    sub_1001BAAC8(v24);
  }
  uint64_t v25 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F080) {
    sub_1001BAAC8(v25);
  }
  uint64_t v26 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F088) {
    sub_1001BAAC8(v26);
  }
  uint64_t v27 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F090) {
    sub_1001BAAC8(v27);
  }
  uint64_t v28 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F098) {
    sub_1001BAAC8(v28);
  }
  uint64_t v29 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F0A0) {
    sub_1001BAAC8(v29);
  }
  uint64_t v30 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F0A8) {
    sub_1001BAAC8(v30);
  }
  uint64_t v31 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F0B0) {
    sub_1001BAAC8(v31);
  }
  uint64_t v32 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F0B8) {
    sub_1001BAAC8(v32);
  }
  uint64_t v33 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F0C0) {
    sub_1001BAAC8(v33);
  }
  uint64_t v34 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F0C8) {
    sub_1001BAAC8(v34);
  }
  uint64_t v35 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F0D0) {
    sub_1001BAAC8(v35);
  }
  uint64_t v36 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F0D8) {
    sub_1001BAAC8(v36);
  }
  uint64_t v37 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047F0E0) {
    sub_1001BAAC8(v37);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_1001BD4A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BD4B4(uint64_t result)
{
  uint64_t v1 = (void *)result;
  if (qword_10047EFD0)
  {
    *(void *)(result + 48) = qword_10047EFD0;
    uint64_t v2 = qword_10047EFD8;
    if (qword_10047EFD8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t result = sub_1001BAAC8(result);
    v1[6] = qword_10047EFD0;
    uint64_t v2 = qword_10047EFD8;
    if (qword_10047EFD8)
    {
LABEL_3:
      v1[7] = v2;
      uint64_t v3 = qword_10047EFE0;
      if (qword_10047EFE0) {
        goto LABEL_4;
      }
      goto LABEL_25;
    }
  }
  uint64_t result = sub_1001BAAC8(result);
  v1[7] = qword_10047EFD8;
  uint64_t v3 = qword_10047EFE0;
  if (qword_10047EFE0)
  {
LABEL_4:
    v1[8] = v3;
    uint64_t v4 = qword_10047EFC8;
    if (qword_10047EFC8) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = sub_1001BAAC8(result);
  v1[8] = qword_10047EFE0;
  uint64_t v4 = qword_10047EFC8;
  if (qword_10047EFC8)
  {
LABEL_5:
    v1[9] = v4;
    uint64_t v5 = qword_10047EFF0;
    if (qword_10047EFF0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = sub_1001BAAC8(result);
  v1[9] = qword_10047EFC8;
  uint64_t v5 = qword_10047EFF0;
  if (qword_10047EFF0)
  {
LABEL_6:
    v1[10] = v5;
    uint64_t v6 = qword_10047EFF8;
    if (qword_10047EFF8) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = sub_1001BAAC8(result);
  v1[10] = qword_10047EFF0;
  uint64_t v6 = qword_10047EFF8;
  if (qword_10047EFF8)
  {
LABEL_7:
    v1[11] = v6;
    uint64_t v7 = qword_10047EFB8;
    if (qword_10047EFB8) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = sub_1001BAAC8(result);
  v1[11] = qword_10047EFF8;
  uint64_t v7 = qword_10047EFB8;
  if (qword_10047EFB8)
  {
LABEL_8:
    v1[13] = v7;
    uint64_t v8 = qword_10047F000;
    if (qword_10047F000) {
      goto LABEL_9;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = sub_1001BAAC8(result);
  v1[13] = qword_10047EFB8;
  uint64_t v8 = qword_10047F000;
  if (qword_10047F000)
  {
LABEL_9:
    v1[18] = v8;
    uint64_t v9 = qword_10047F010;
    if (qword_10047F010) {
      goto LABEL_10;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = sub_1001BAAC8(result);
  v1[18] = qword_10047F000;
  uint64_t v9 = qword_10047F010;
  if (qword_10047F010)
  {
LABEL_10:
    v1[20] = v9;
    uint64_t v10 = qword_10047F0B0;
    if (qword_10047F0B0) {
      goto LABEL_11;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = sub_1001BAAC8(result);
  v1[20] = qword_10047F010;
  uint64_t v10 = qword_10047F0B0;
  if (qword_10047F0B0)
  {
LABEL_11:
    v1[21] = v10;
    uint64_t v11 = qword_10047F008;
    if (qword_10047F008) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = sub_1001BAAC8(result);
  v1[21] = qword_10047F0B0;
  uint64_t v11 = qword_10047F008;
  if (qword_10047F008)
  {
LABEL_12:
    v1[22] = v11;
    uint64_t v12 = qword_10047EFC0;
    if (qword_10047EFC0) {
      goto LABEL_13;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = sub_1001BAAC8(result);
  v1[22] = qword_10047F008;
  uint64_t v12 = qword_10047EFC0;
  if (qword_10047EFC0)
  {
LABEL_13:
    v1[25] = v12;
    uint64_t v13 = qword_10047F020;
    if (qword_10047F020) {
      goto LABEL_14;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = sub_1001BAAC8(result);
  v1[25] = qword_10047EFC0;
  uint64_t v13 = qword_10047F020;
  if (qword_10047F020)
  {
LABEL_14:
    v1[26] = v13;
    uint64_t v14 = qword_10047F028;
    if (qword_10047F028) {
      goto LABEL_15;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = sub_1001BAAC8(result);
  v1[26] = qword_10047F020;
  uint64_t v14 = qword_10047F028;
  if (qword_10047F028)
  {
LABEL_15:
    v1[27] = v14;
    uint64_t v15 = qword_10047EFC0;
    if (qword_10047EFC0) {
      goto LABEL_16;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = sub_1001BAAC8(result);
  v1[27] = qword_10047F028;
  uint64_t v15 = qword_10047EFC0;
  if (qword_10047EFC0)
  {
LABEL_16:
    v1[29] = v15;
    uint64_t v16 = qword_10047EFE0;
    if (qword_10047EFE0) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = sub_1001BAAC8(result);
  v1[29] = qword_10047EFC0;
  uint64_t v16 = qword_10047EFE0;
  if (qword_10047EFE0)
  {
LABEL_17:
    v1[30] = v16;
    uint64_t v17 = qword_10047F0B8;
    if (qword_10047F0B8) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = sub_1001BAAC8(result);
  v1[30] = qword_10047EFE0;
  uint64_t v17 = qword_10047F0B8;
  if (qword_10047F0B8)
  {
LABEL_18:
    v1[32] = v17;
    uint64_t v18 = qword_10047F0D0;
    if (qword_10047F0D0) {
      goto LABEL_19;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = sub_1001BAAC8(result);
  v1[32] = qword_10047F0B8;
  uint64_t v18 = qword_10047F0D0;
  if (qword_10047F0D0)
  {
LABEL_19:
    v1[33] = v18;
    uint64_t v19 = qword_10047F0E0;
    if (qword_10047F0E0) {
      goto LABEL_20;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = sub_1001BAAC8(result);
  v1[33] = qword_10047F0D0;
  uint64_t v19 = qword_10047F0E0;
  if (qword_10047F0E0)
  {
LABEL_20:
    v1[34] = v19;
    uint64_t v20 = qword_10047F0C0;
    if (qword_10047F0C0) {
      goto LABEL_21;
    }
LABEL_42:
    uint64_t result = sub_1001BAAC8(result);
    v1[35] = qword_10047F0C0;
    uint64_t v21 = qword_10047F0C8;
    if (qword_10047F0C8) {
      goto LABEL_22;
    }
    goto LABEL_43;
  }
LABEL_41:
  uint64_t result = sub_1001BAAC8(result);
  v1[34] = qword_10047F0E0;
  uint64_t v20 = qword_10047F0C0;
  if (!qword_10047F0C0) {
    goto LABEL_42;
  }
LABEL_21:
  v1[35] = v20;
  uint64_t v21 = qword_10047F0C8;
  if (qword_10047F0C8)
  {
LABEL_22:
    v1[36] = v21;
    return result;
  }
LABEL_43:
  uint64_t result = sub_1001BAAC8(result);
  v1[36] = qword_10047F0C8;
  return result;
}

BOOL sub_1001BD818(unsigned int a1)
{
  return a1 < 0xA;
}

uint64_t sub_1001BD824(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((*(unsigned char *)(a2 + 40) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 40) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    uint64_t v8 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(void *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 40) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 40) |= 1u;
  *(void *)(a1 + 16) = v7;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
LABEL_7:
    int v5 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 4u;
    *(_DWORD *)(a1 + 32) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001BD904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BD918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BD92C(uint64_t a1)
{
  *(void *)a1 = off_10045DFA0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001BD980(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_1001BD988()
{
}

void sub_1001BD9F0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001BDA18(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 8) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001BDA3C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (unint64_t *)(a1 + 16);
  uint64_t v7 = (unint64_t *)(a1 + 24);
  unsigned int v8 = a1 + 8;
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v9;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v9 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v11 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        uint64_t v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
          *(_DWORD *)(a1 + 40) |= 1u;
          if ((unint64_t)v15 < v13) {
            goto LABEL_27;
          }
        }
        else
        {
          *uint64_t v6 = *v14;
          uint64_t v15 = v14 + 1;
          *((void *)this + 1) = v15;
          *(_DWORD *)(a1 + 40) |= 1u;
          if ((unint64_t)v15 < v13)
          {
LABEL_27:
            if (*v15 == 16)
            {
              uint64_t v16 = v15 + 1;
              *((void *)this + 1) = v16;
              if ((unint64_t)v16 < v13) {
                goto LABEL_29;
              }
LABEL_32:
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
              if (!result) {
                return result;
              }
              uint64_t v18 = (unsigned char *)*((void *)this + 1);
              unint64_t v19 = *((void *)this + 2);
              *(_DWORD *)(a1 + 40) |= 2u;
              if ((unint64_t)v18 < v19) {
                goto LABEL_34;
              }
            }
          }
        }
      }
      if (v11 != 2) {
        break;
      }
      int v12 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_22;
      }
      uint64_t v16 = (unsigned __int8 *)*((void *)this + 1);
      unint64_t v13 = *((void *)this + 2);
      if ((unint64_t)v16 >= v13) {
        goto LABEL_32;
      }
LABEL_29:
      if ((char)*v16 < 0) {
        goto LABEL_32;
      }
      *uint64_t v7 = *v16;
      uint64_t v18 = v16 + 1;
      *((void *)this + 1) = v18;
      *(_DWORD *)(a1 + 40) |= 2u;
      if ((unint64_t)v18 < v13)
      {
LABEL_34:
        if (*v18 == 29)
        {
          *((void *)this + 1) = v18 + 1;
          unsigned int v20 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
            return 0;
          }
LABEL_36:
          *(_DWORD *)(a1 + 32) = v20;
          *(_DWORD *)(a1 + 40) |= 4u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
        }
      }
    }
    if (v11 == 3)
    {
      int v12 = TagFallback & 7;
      if (v12 == 5)
      {
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        goto LABEL_36;
      }
    }
    else
    {
      int v12 = TagFallback & 7;
    }
LABEL_22:
    if (v12 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v8, a4) & 1) != 0);
  return 0;
}

uint64_t sub_1001BDCC0(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 16), (unint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 24), (unint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 4) == 0)
  {
LABEL_4:
    uint64_t v9 = *(void **)(v5 + 8);
    unsigned int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_9;
  }
LABEL_8:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 32), a3);
  uint64_t v10 = *(void **)(v5 + 8);
  unsigned int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_9:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_1001BDD78(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 10);
  if (v4)
  {
    unsigned int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
    *(unsigned char *)a2 = 8;
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v8, a2 + 1, a3);
    int v4 = *((_DWORD *)this + 10);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 3);
  *(unsigned char *)a2 = 16;
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v9, a2 + 1, a3);
  if ((*((_DWORD *)this + 10) & 4) == 0)
  {
LABEL_4:
    uint64_t v7 = (void *)*((void *)this + 1);
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = v7;
    if (!v7) {
      return a2;
    }
    goto LABEL_9;
  }
LABEL_8:
  int v10 = *((_DWORD *)this + 8);
  *(unsigned char *)a2 = 29;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  unsigned int v11 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v11;
  if (!v11) {
    return a2;
  }
LABEL_9:
  if (*v5 == v5[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1001BDE50(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 40))
    {
      LODWORD(v4) = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 40);
      if ((v3 & 2) == 0) {
        goto LABEL_9;
      }
    }
    else
    {
      LODWORD(v4) = 0;
      if ((*(unsigned char *)(a1 + 40) & 2) == 0)
      {
LABEL_9:
        if ((v3 & 4) != 0) {
          uint64_t v4 = (v4 + 5);
        }
        else {
          uint64_t v4 = v4;
        }
        uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        int v6 = *(void **)(a1 + 8);
        if (!v6) {
          goto LABEL_6;
        }
        goto LABEL_13;
      }
    }
    LODWORD(v4) = v4
                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 40);
    goto LABEL_9;
  }
  uint64_t v4 = 0;
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v6 = *(void **)(a1 + 8);
  if (!v6)
  {
LABEL_6:
    *(_DWORD *)(a1 + 36) = v4;
    return v4;
  }
LABEL_13:
  if (*v6 == v6[1]) {
    goto LABEL_6;
  }
  uint64_t v8 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
     + v4;
  *(_DWORD *)(a1 + 36) = v8;
  return v8;
}

uint64_t sub_1001BDF08(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001BD824((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001BDFE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BDFFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BE010(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001BE09C()
{
  return 1;
}

uint64_t sub_1001BE0A4()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DC80;
}

void sub_1001BE134(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BE148(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  int v4 = *(_DWORD *)(a2 + 44);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    char v8 = *(unsigned char *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 1u;
    *(unsigned char *)(a1 + 24) = v8;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  char v9 = *(unsigned char *)(a2 + 25);
  *(_DWORD *)(a1 + 44) |= 2u;
  *(unsigned char *)(a1 + 25) = v9;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v10 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 44) |= 4u;
  *(_DWORD *)(a1 + 16) = v10;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v11 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 44) |= 8u;
  *(_DWORD *)(a1 + 20) = v11;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_21:
    char v13 = *(unsigned char *)(a2 + 26);
    *(_DWORD *)(a1 + 44) |= 0x20u;
    *(unsigned char *)(a1 + 26) = v13;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_22;
  }
LABEL_20:
  int v12 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 44) |= 0x10u;
  *(_DWORD *)(a1 + 28) = v12;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 0x20) != 0) {
    goto LABEL_21;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_22:
  char v14 = *(unsigned char *)(a2 + 27);
  *(_DWORD *)(a1 + 44) |= 0x40u;
  *(unsigned char *)(a1 + 27) = v14;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 0x80u;
    *(_DWORD *)(a1 + 32) = v5;
    int v4 = *(_DWORD *)(a2 + 44);
  }
LABEL_13:
  if ((v4 & 0x100) != 0)
  {
    int v6 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 44) |= 0x100u;
    *(_DWORD *)(a1 + 36) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001BE2E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BE2FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BE310(uint64_t a1)
{
  *(void *)a1 = off_10045E050;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001BE364(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1001BE36C()
{
}

void sub_1001BE3D0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001BE3F8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 44);
  if ((_BYTE)v1)
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 32) = 0;
  }
  if ((v1 & 0xFF00) != 0) {
    *(_DWORD *)(a1 + 36) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001BE42C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v29 = 0;
        int v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          unsigned int v12 = *v11;
          char v13 = v11 + 1;
          *((void *)this + 1) = v13;
          goto LABEL_38;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29);
        if (result)
        {
          unsigned int v12 = v29;
          char v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
LABEL_38:
          *(unsigned char *)(a1 + 24) = v12 != 0;
          *(_DWORD *)(a1 + 44) |= 1u;
          if ((unint64_t)v13 >= v10 || *v13 != 16) {
            continue;
          }
          char v14 = v13 + 1;
          *((void *)this + 1) = v14;
          unsigned int v29 = 0;
          if ((unint64_t)v14 >= v10) {
            goto LABEL_43;
          }
          goto LABEL_41;
        }
        return result;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        char v14 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        unsigned int v29 = 0;
        if ((unint64_t)v14 >= v10) {
          goto LABEL_43;
        }
LABEL_41:
        if (*v14 < 0)
        {
LABEL_43:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29);
          if (!result) {
            return result;
          }
          unsigned int v19 = v29;
          unsigned int v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v14;
          unsigned int v20 = v14 + 1;
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 25) = v19 != 0;
        *(_DWORD *)(a1 + 44) |= 2u;
        if ((unint64_t)v20 >= v10 || *v20 != 29) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
        unsigned int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0) {
          return 0;
        }
LABEL_48:
        *(_DWORD *)(a1 + 16) = v29;
        *(_DWORD *)(a1 + 44) |= 4u;
        uint64_t v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 37) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
        unsigned int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0) {
          return 0;
        }
LABEL_51:
        *(_DWORD *)(a1 + 20) = v29;
        *(_DWORD *)(a1 + 44) |= 8u;
        uint64_t v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 45) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
        unsigned int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0) {
          return 0;
        }
LABEL_54:
        *(_DWORD *)(a1 + 28) = v29;
        *(_DWORD *)(a1 + 44) |= 0x10u;
        uint64_t v23 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v23 >= v15 || *v23 != 48) {
          continue;
        }
        uint64_t v16 = v23 + 1;
        *((void *)this + 1) = v16;
LABEL_57:
        unsigned int v29 = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29);
          if (!result) {
            return result;
          }
          unsigned int v24 = v29;
          uint64_t v25 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v24 = *v16;
          uint64_t v25 = v16 + 1;
          *((void *)this + 1) = v25;
        }
        *(unsigned char *)(a1 + 26) = v24 != 0;
        *(_DWORD *)(a1 + 44) |= 0x20u;
        if ((unint64_t)v25 >= v15 || *v25 != 56) {
          continue;
        }
        uint64_t v17 = v25 + 1;
        *((void *)this + 1) = v17;
LABEL_65:
        unsigned int v29 = 0;
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29);
          if (!result) {
            return result;
          }
          unsigned int v26 = v29;
          uint64_t v27 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v26 = *v17;
          uint64_t v27 = v17 + 1;
          *((void *)this + 1) = v27;
        }
        *(unsigned char *)(a1 + 27) = v26 != 0;
        *(_DWORD *)(a1 + 44) |= 0x40u;
        if ((unint64_t)v27 >= v15 || *v27 != 69) {
          continue;
        }
        *((void *)this + 1) = v27 + 1;
        unsigned int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0) {
          return 0;
        }
LABEL_73:
        *(_DWORD *)(a1 + 32) = v29;
        *(_DWORD *)(a1 + 44) |= 0x80u;
        uint64_t v28 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 != 77) {
          continue;
        }
        *((void *)this + 1) = v28 + 1;
LABEL_76:
        unsigned int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 36) = v29;
        *(_DWORD *)(a1 + 44) |= 0x100u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_33;
        }
        unsigned int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0) {
          return 0;
        }
        goto LABEL_48;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_33;
        }
        unsigned int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0) {
          return 0;
        }
        goto LABEL_51;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_33;
        }
        unsigned int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0) {
          return 0;
        }
        goto LABEL_54;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_57;
      case 7u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_65;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_33;
        }
        unsigned int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v29) & 1) == 0) {
          return 0;
        }
        goto LABEL_73;
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_33;
        }
        goto LABEL_76;
      default:
        int v9 = TagFallback & 7;
LABEL_33:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1001BE968(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 24), (BOOL)a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 25), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 26), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 27), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(float *)(v5 + 32), a3);
  if ((*(_DWORD *)(v5 + 44) & 0x100) == 0)
  {
LABEL_10:
    int v9 = *(void **)(v5 + 8);
    char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(float *)(v5 + 36), a3);
  unint64_t v10 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_21:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_1001BEAC8(uint64_t a1, unsigned char *a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 44);
  if (v3)
  {
    char v7 = *(unsigned char *)(a1 + 24);
    *a2 = 8;
    a2[1] = v7;
    a2 += 2;
    int v3 = *(_DWORD *)(a1 + 44);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v8 = *(unsigned char *)(a1 + 25);
  *a2 = 16;
  a2[1] = v8;
  a2 += 2;
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  int v9 = *(_DWORD *)(a1 + 16);
  *a2 = 29;
  *(_DWORD *)(a2 + 1) = v9;
  a2 += 5;
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  int v10 = *(_DWORD *)(a1 + 20);
  *a2 = 37;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  int v11 = *(_DWORD *)(a1 + 28);
  *a2 = 45;
  *(_DWORD *)(a2 + 1) = v11;
  a2 += 5;
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 0x20) == 0)
  {
LABEL_7:
    if ((v3 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  char v12 = *(unsigned char *)(a1 + 26);
  *a2 = 48;
  a2[1] = v12;
  a2 += 2;
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 0x40) == 0)
  {
LABEL_8:
    if ((v3 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  char v13 = *(unsigned char *)(a1 + 27);
  *a2 = 56;
  a2[1] = v13;
  a2 += 2;
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 0x80) == 0)
  {
LABEL_9:
    if ((v3 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    int v15 = *(_DWORD *)(a1 + 36);
    *a2 = 77;
    *(_DWORD *)(a2 + 1) = v15;
    a2 += 5;
    uint64_t v16 = *(void **)(a1 + 8);
    int v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v5 = v16;
    if (!v16) {
      return (uint64_t)a2;
    }
    goto LABEL_21;
  }
LABEL_19:
  int v14 = *(_DWORD *)(a1 + 32);
  *a2 = 69;
  *(_DWORD *)(a2 + 1) = v14;
  a2 += 5;
  if ((*(_DWORD *)(a1 + 44) & 0x100) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  int v6 = *(void **)(a1 + 8);
  int v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v5 = v6;
  if (!v6) {
    return (uint64_t)a2;
  }
LABEL_21:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return (uint64_t)a2;
}

uint64_t sub_1001BEC88(_DWORD *a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = a1[11];
  if ((_BYTE)v3)
  {
    unsigned int v4 = 2 * (v3 & 1);
    if ((v3 & 2) != 0) {
      v4 += 2;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x80) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x100) != 0) {
      uint64_t v5 = v4 + 5;
    }
    else {
      uint64_t v5 = v4;
    }
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
    char v7 = (void *)*((void *)a1 + 1);
    if (!v7) {
      goto LABEL_20;
    }
  }
  else
  {
    if ((v3 & 0x100) != 0) {
      uint64_t v5 = 5;
    }
    else {
      uint64_t v5 = 0;
    }
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
    char v7 = (void *)*((void *)a1 + 1);
    if (!v7) {
      goto LABEL_20;
    }
  }
  if (*v7 == v7[1])
  {
LABEL_20:
    a1[10] = v5;
    return v5;
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
     + v5;
  a1[10] = v9;
  return v9;
}

uint64_t sub_1001BED70(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001BE148((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001BEE50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BEE64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BEE78(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001BEF04()
{
  return 1;
}

uint64_t sub_1001BEF0C()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DC90;
}

void sub_1001BEF9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BEFB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 44) = a2;
  return result;
}

void sub_1001BEFB8()
{
}

void sub_1001BF020()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001BF048(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 40) = 0;
    *(void *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 10) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001BF070(unsigned int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = a1 + 7;
  char v7 = a1 + 8;
  char v8 = a1 + 9;
  unsigned int v9 = a1 + 8;
  while (2)
  {
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if (v12 != 5) {
          goto LABEL_35;
        }
        unsigned int v25 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v25) & 1) == 0) {
          return 0;
        }
        a1[4] = v25;
        a1[12] |= 1u;
        char v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 21) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
        goto LABEL_15;
      case 2u:
        int v12 = TagFallback & 7;
        if (v12 != 5) {
          goto LABEL_35;
        }
LABEL_15:
        unsigned int v25 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v25) & 1) == 0) {
          return 0;
        }
        a1[5] = v25;
        a1[12] |= 2u;
        int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 29) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_20:
        unsigned int v25 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v25) & 1) == 0) {
          return 0;
        }
        a1[6] = v25;
        a1[12] |= 4u;
        uint64_t v16 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v16 >= v15 || *v16 != 32) {
          continue;
        }
        uint64_t v17 = v16 + 1;
        *((void *)this + 1) = v17;
        if ((unint64_t)v17 >= v15) {
          goto LABEL_38;
        }
LABEL_27:
        if ((*v17 & 0x80000000) == 0)
        {
          *int v6 = *v17;
          uint64_t v18 = v17 + 1;
          *((void *)this + 1) = v18;
          a1[12] |= 8u;
          if ((unint64_t)v18 < v15) {
            goto LABEL_40;
          }
          continue;
        }
LABEL_38:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!result) {
          return result;
        }
        uint64_t v18 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        a1[12] |= 8u;
        if ((unint64_t)v18 >= v15) {
          continue;
        }
LABEL_40:
        if (*v18 != 40) {
          continue;
        }
        unsigned int v19 = v18 + 1;
        *((void *)this + 1) = v19;
LABEL_42:
        if ((unint64_t)v19 < v15 && (*v19 & 0x80000000) == 0)
        {
          *char v7 = *v19;
          uint64_t v22 = v19 + 1;
          *((void *)this + 1) = v22;
          a1[12] |= 0x10u;
          if ((unint64_t)v22 < v15) {
            goto LABEL_48;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
        if (!result) {
          return result;
        }
        uint64_t v22 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        a1[12] |= 0x10u;
        if ((unint64_t)v22 >= v15) {
          continue;
        }
LABEL_48:
        if (*v22 != 48) {
          continue;
        }
        unsigned int v20 = v22 + 1;
        *((void *)this + 1) = v20;
LABEL_50:
        if ((unint64_t)v20 >= v15 || (char)*v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          uint64_t v23 = (unsigned char *)*((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
          a1[12] |= 0x20u;
          if ((unint64_t)v23 < v24) {
            goto LABEL_56;
          }
          continue;
        }
        *char v8 = *v20;
        uint64_t v23 = v20 + 1;
        *((void *)this + 1) = v23;
        a1[12] |= 0x20u;
        if ((unint64_t)v23 >= v15) {
          continue;
        }
LABEL_56:
        if (*v23 != 61) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_58:
        unsigned int v25 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v25) & 1) == 0) {
          return 0;
        }
        a1[10] = v25;
        a1[12] |= 0x40u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v12 = TagFallback & 7;
        if (v12 == 5) {
          goto LABEL_20;
        }
        goto LABEL_35;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v17 < v15) {
          goto LABEL_27;
        }
        goto LABEL_38;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_42;
      case 6u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        unsigned int v20 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_50;
      case 7u:
        int v12 = TagFallback & 7;
        if (v12 != 5) {
          goto LABEL_35;
        }
        goto LABEL_58;
      default:
        int v12 = TagFallback & 7;
LABEL_35:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v9, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1001BF4A0(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(result + 16), a3);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 28), a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 32), a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 36), a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 0x40) == 0)
  {
LABEL_8:
    unsigned int v9 = *(void **)(v5 + 8);
    char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    char v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(float *)(v5 + 40), a3);
  int v10 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  char v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_17:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_1001BF5C8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 12);
  if (v4)
  {
    int v8 = *((_DWORD *)this + 4);
    *(unsigned char *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v8;
    a2 += 5;
    int v4 = *((_DWORD *)this + 12);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v9 = *((_DWORD *)this + 5);
  *(unsigned char *)a2 = 21;
  *(_DWORD *)(a2 + 1) = v9;
  a2 += 5;
  int v4 = *((_DWORD *)this + 12);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_13:
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(unsigned char *)a2 = 32;
    if (v11 > 0x7F)
    {
      a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)a2 + 1, a3);
      if ((*((unsigned char *)this + 48) & 0x10) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      *(unsigned char *)(a2 + 1) = (_BYTE)v11;
      a2 += 2;
      if ((*((unsigned char *)this + 48) & 0x10) != 0) {
        goto LABEL_17;
      }
    }
LABEL_6:
    if ((*((unsigned char *)this + 48) & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_21:
    char v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    *(unsigned char *)a2 = 48;
    if (v13 > 0x7F)
    {
      a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)a2 + 1, a3);
      if ((*((unsigned char *)this + 48) & 0x40) != 0) {
        goto LABEL_25;
      }
    }
    else
    {
      *(unsigned char *)(a2 + 1) = (_BYTE)v13;
      a2 += 2;
      if ((*((unsigned char *)this + 48) & 0x40) != 0) {
        goto LABEL_25;
      }
    }
LABEL_8:
    char v7 = (void *)*((void *)this + 1);
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = v7;
    if (!v7) {
      return a2;
    }
    goto LABEL_26;
  }
LABEL_12:
  int v10 = *((_DWORD *)this + 6);
  *(unsigned char *)a2 = 29;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  if ((*((_DWORD *)this + 12) & 8) != 0) {
    goto LABEL_13;
  }
LABEL_5:
  if ((*((unsigned char *)this + 48) & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_17:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  *(unsigned char *)a2 = 40;
  if (v12 > 0x7F)
  {
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)a2 + 1, a3);
    if ((*((unsigned char *)this + 48) & 0x20) != 0) {
      goto LABEL_21;
    }
  }
  else
  {
    *(unsigned char *)(a2 + 1) = (_BYTE)v12;
    a2 += 2;
    if ((*((unsigned char *)this + 48) & 0x20) != 0) {
      goto LABEL_21;
    }
  }
LABEL_7:
  if ((*((unsigned char *)this + 48) & 0x40) == 0) {
    goto LABEL_8;
  }
LABEL_25:
  int v14 = *((_DWORD *)this + 10);
  *(unsigned char *)a2 = 61;
  *(_DWORD *)(a2 + 1) = v14;
  a2 += 5;
  unint64_t v15 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v15;
  if (!v15) {
    return a2;
  }
LABEL_26:
  if (*v5 == v5[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1001BF7E0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 48);
  if (*(unsigned char *)(a1 + 48))
  {
    int v4 = (v3 << 31 >> 31) & 5;
    if ((v3 & 2) != 0) {
      v4 += 5;
    }
    if ((v3 & 4) != 0) {
      LODWORD(v5) = v4 + 5;
    }
    else {
      LODWORD(v5) = v4;
    }
    if ((v3 & 8) == 0)
    {
      if ((v3 & 0x10) == 0) {
        goto LABEL_9;
      }
LABEL_17:
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
      if (v11 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
        int v3 = *(_DWORD *)(a1 + 48);
        LODWORD(v5) = v12 + 1 + v5;
        if ((v3 & 0x20) == 0) {
          goto LABEL_25;
        }
      }
      else
      {
        LODWORD(v5) = v5 + 2;
        if ((v3 & 0x20) == 0) {
          goto LABEL_25;
        }
      }
LABEL_21:
      char v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
      if (v13 >= 0x80)
      {
        int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2)
            + 1;
        int v3 = *(_DWORD *)(a1 + 48);
      }
      else
      {
        int v14 = 2;
      }
      LODWORD(v5) = v14 + v5;
LABEL_25:
      if ((v3 & 0x40) != 0) {
        uint64_t v5 = (v5 + 5);
      }
      else {
        uint64_t v5 = v5;
      }
      int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      char v7 = *(void **)(a1 + 8);
      if (!v7) {
        goto LABEL_12;
      }
      goto LABEL_29;
    }
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      int v3 = *(_DWORD *)(a1 + 48);
      LODWORD(v5) = v10 + 1 + v5;
      if ((v3 & 0x10) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      LODWORD(v5) = v5 + 2;
      if ((v3 & 0x10) != 0) {
        goto LABEL_17;
      }
    }
LABEL_9:
    if ((v3 & 0x20) == 0) {
      goto LABEL_25;
    }
    goto LABEL_21;
  }
  uint64_t v5 = 0;
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  char v7 = *(void **)(a1 + 8);
  if (!v7)
  {
LABEL_12:
    *(_DWORD *)(a1 + 44) = v5;
    return v5;
  }
LABEL_29:
  if (*v7 == v7[1]) {
    goto LABEL_12;
  }
  uint64_t v15 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 44) = v15;
  return v15;
}

uint64_t sub_1001BF918(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100033374(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001BF9F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BFA0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BFA20(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001BFAAC()
{
  return 1;
}

uint64_t sub_1001BFAB4()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DCA0;
}

void sub_1001BFB44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001BFB58(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 32);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((*(unsigned char *)(a2 + 32) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 32) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    int v8 = *(_DWORD *)(a2 + 20);
    a1[8] |= 2u;
    a1[5] = v8;
    if ((*(_DWORD *)(a2 + 32) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_7;
  }
  int v7 = *(_DWORD *)(a2 + 16);
  a1[8] |= 1u;
  a1[4] = v7;
  int v4 = *(_DWORD *)(a2 + 32);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
LABEL_7:
    int v5 = *(_DWORD *)(a2 + 24);
    a1[8] |= 4u;
    a1[6] = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001BFC38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BFC4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001BFC60(uint64_t a1)
{
  *(void *)a1 = off_10045E1B0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001BFCB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 28) = a2;
  return result;
}

void sub_1001BFCBC()
{
}

void sub_1001BFD20()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001BFD48(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32))
  {
    *(void *)(a1 + 16) = 0;
    *(_DWORD *)(a1 + 24) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 6) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001BFD6C(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 5) {
          goto LABEL_28;
        }
        unsigned int v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v16) & 1) == 0) {
          return 0;
        }
        a1[4] = v16;
        a1[8] |= 1u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 21)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_19;
        }
      }
      if (v9 == 2) {
        break;
      }
      if (v9 == 3)
      {
        int v10 = TagFallback & 7;
        if (v10 == 5)
        {
          unsigned int v14 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v14) & 1) == 0) {
            return 0;
          }
          goto LABEL_23;
        }
      }
      else
      {
        int v10 = TagFallback & 7;
      }
LABEL_28:
      if (v10 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v10 = TagFallback & 7;
    if (v10 != 5) {
      goto LABEL_28;
    }
LABEL_19:
    unsigned int v15 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v15) & 1) == 0) {
      return 0;
    }
    a1[5] = v15;
    a1[8] |= 2u;
    int v12 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v12 < *((void *)this + 2) && *v12 == 29)
    {
      *((void *)this + 1) = v12 + 1;
      unsigned int v14 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v14) & 1) == 0) {
        return 0;
      }
LABEL_23:
      a1[6] = v14;
      a1[8] |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1001BFF78(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 32);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(result + 16), a3);
    int v5 = *(_DWORD *)(v4 + 32);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v4 + 20), a3);
  if ((*(_DWORD *)(v4 + 32) & 4) == 0)
  {
LABEL_4:
    int v8 = *(void **)(v4 + 8);
    int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    unsigned int v6 = v8;
    if (!v8) {
      return result;
    }
    goto LABEL_9;
  }
LABEL_8:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v4 + 24), a3);
  unsigned int v9 = *(void **)(v4 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_9:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_1001C0030(_DWORD *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = a1[8];
  if (v3)
  {
    int v7 = a1[4];
    *(unsigned char *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v7;
    a2 += 5;
    int v3 = a1[8];
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      int v9 = a1[6];
      *(unsigned char *)a2 = 29;
      *(_DWORD *)(a2 + 1) = v9;
      a2 += 5;
      int v10 = (void *)*((void *)a1 + 1);
      uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
      int v5 = v10;
      if (!v10) {
        return a2;
      }
      goto LABEL_9;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v8 = a1[5];
  *(unsigned char *)a2 = 21;
  *(_DWORD *)(a2 + 1) = v8;
  a2 += 5;
  if ((a1[8] & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  unsigned int v6 = (void *)*((void *)a1 + 1);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_9:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_1001C0100(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 32);
  unsigned int v4 = (v3 << 31 >> 31) & 5;
  if ((v3 & 2) != 0) {
    v4 += 5;
  }
  if ((v3 & 4) != 0) {
    v4 += 5;
  }
  if (*(unsigned char *)(a1 + 32)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  int v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 28) = v5;
  return v5;
}

uint64_t sub_1001C0174(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001BFB58(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001C0254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C0268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C027C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001C0308()
{
  return 1;
}

uint64_t sub_1001C0310()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DCB0;
}

void sub_1001C03A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C03B4(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 44))
  {
    int v7 = *(_DWORD *)(a2 + 16);
    a1[11] |= 1u;
    a1[4] = v7;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a2 + 44) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *(_DWORD *)(a2 + 20);
  a1[11] |= 2u;
  a1[5] = v8;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_14:
  int v9 = *(_DWORD *)(a2 + 24);
  a1[11] |= 4u;
  a1[6] = v9;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
LABEL_16:
    int v11 = *(_DWORD *)(a2 + 32);
    a1[11] |= 0x10u;
    a1[8] = v11;
    if ((*(_DWORD *)(a2 + 44) & 0x20) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_10;
  }
LABEL_15:
  int v10 = *(_DWORD *)(a2 + 28);
  a1[11] |= 8u;
  a1[7] = v10;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_9:
  if ((v4 & 0x20) != 0)
  {
LABEL_10:
    int v5 = *(_DWORD *)(a2 + 36);
    a1[11] |= 0x20u;
    a1[9] = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001C04F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C0508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C051C(uint64_t a1)
{
  *(void *)a1 = off_10045E260;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001C0570(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1001C0578()
{
}

void sub_1001C05DC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C0604(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001C0628(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2);
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_36;
        }
        unsigned int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v23) & 1) == 0) {
          return 0;
        }
        a1[4] = v23;
        a1[11] |= 1u;
        int v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 21) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_36;
        }
LABEL_15:
        unsigned int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v23) & 1) == 0) {
          return 0;
        }
        a1[9] = v23;
        a1[11] |= 0x20u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 29) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_20:
        unsigned int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v23) & 1) == 0) {
          return 0;
        }
        a1[5] = v23;
        a1[11] |= 2u;
        int v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 37) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_25:
        unsigned int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v23) & 1) == 0) {
          return 0;
        }
        a1[6] = v23;
        a1[11] |= 4u;
        unsigned int v14 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 != 40) {
          continue;
        }
        unsigned int v15 = v14 + 1;
        *((void *)this + 1) = v15;
        unsigned int v23 = 0;
        if ((unint64_t)v15 >= v13) {
          goto LABEL_40;
        }
LABEL_32:
        if (*v15 < 0)
        {
LABEL_40:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
          if (!result) {
            return result;
          }
          unsigned int v17 = v23;
          if (v23 <= 3)
          {
LABEL_34:
            a1[11] |= 8u;
            a1[7] = v17;
            goto LABEL_43;
          }
        }
        else
        {
          unsigned int v17 = *v15;
          *((void *)this + 1) = v15 + 1;
          if (v17 <= 3) {
            goto LABEL_34;
          }
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 5, (int)v17);
LABEL_43:
        uint64_t v21 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v21 >= v18 || *v21 != 48) {
          continue;
        }
        unsigned int v19 = v21 + 1;
        *((void *)this + 1) = v19;
LABEL_46:
        unsigned int v23 = 0;
        if ((unint64_t)v19 < v18 && (*v19 & 0x80000000) == 0)
        {
          unsigned int v22 = *v19;
          *((void *)this + 1) = v19 + 1;
          if (v22 > 1) {
            goto LABEL_53;
          }
LABEL_49:
          a1[11] |= 0x10u;
          a1[8] = v22;
          if (*((void *)this + 1) == *((void *)this + 2)) {
            goto LABEL_54;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
        if (!result) {
          return result;
        }
        unsigned int v22 = v23;
        if (v23 <= 1) {
          goto LABEL_49;
        }
LABEL_53:
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 6, (int)v22);
        if (*((void *)this + 1) != *((void *)this + 2)) {
          continue;
        }
LABEL_54:
        if (!*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 5) {
          goto LABEL_20;
        }
        goto LABEL_36;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 5) {
          goto LABEL_25;
        }
        goto LABEL_36;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unsigned int v15 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        unsigned int v23 = 0;
        if ((unint64_t)v15 < v16) {
          goto LABEL_32;
        }
        goto LABEL_40;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_46;
      default:
        int v9 = TagFallback & 7;
LABEL_36:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1001C09F0(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(result + 16), a3);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 0x20) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 36), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) == 0)
  {
LABEL_6:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 28), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 0x10) == 0)
  {
LABEL_7:
    int v9 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 32), (int)a2, a4);
  int v10 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_15:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_1001C0AFC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 11);
  if (v4)
  {
    int v8 = *((_DWORD *)this + 4);
    *(unsigned char *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v8;
    a2 += 5;
    int v4 = *((_DWORD *)this + 11);
    if ((v4 & 0x20) == 0)
    {
LABEL_3:
      if ((v4 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  int v9 = *((_DWORD *)this + 9);
  *(unsigned char *)a2 = 21;
  *(_DWORD *)(a2 + 1) = v9;
  a2 += 5;
  int v4 = *((_DWORD *)this + 11);
  if ((v4 & 2) == 0)
  {
LABEL_4:
    if ((v4 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  int v10 = *((_DWORD *)this + 5);
  *(unsigned char *)a2 = 29;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  int v4 = *((_DWORD *)this + 11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_13:
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 7);
    *(unsigned char *)a2 = 40;
    if ((v12 & 0x80000000) != 0)
    {
      a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, a2 + 1, a3);
      if ((*((unsigned char *)this + 44) & 0x10) != 0) {
        goto LABEL_20;
      }
    }
    else if (v12 > 0x7F)
    {
      a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)a2 + 1, a3);
      if ((*((unsigned char *)this + 44) & 0x10) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)(a2 + 1) = (_BYTE)v12;
      a2 += 2;
      if ((*((unsigned char *)this + 44) & 0x10) != 0) {
        goto LABEL_20;
      }
    }
LABEL_7:
    int v7 = (void *)*((void *)this + 1);
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = v7;
    if (!v7) {
      return a2;
    }
    goto LABEL_27;
  }
LABEL_12:
  int v11 = *((_DWORD *)this + 6);
  *(unsigned char *)a2 = 37;
  *(_DWORD *)(a2 + 1) = v11;
  a2 += 5;
  if ((*((_DWORD *)this + 11) & 8) != 0) {
    goto LABEL_13;
  }
LABEL_6:
  if ((*((unsigned char *)this + 44) & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_20:
  unint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
  *(unsigned char *)a2 = 48;
  if ((v13 & 0x80000000) != 0)
  {
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v13, a2 + 1, a3);
    unsigned int v15 = (void *)*((void *)this + 1);
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = v15;
    if (!v15) {
      return a2;
    }
  }
  else if (v13 > 0x7F)
  {
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)a2 + 1, a3);
    unint64_t v16 = (void *)*((void *)this + 1);
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = v16;
    if (!v16) {
      return a2;
    }
  }
  else
  {
    *(unsigned char *)(a2 + 1) = (_BYTE)v13;
    a2 += 2;
    unsigned int v14 = (void *)*((void *)this + 1);
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = v14;
    if (!v14) {
      return a2;
    }
  }
LABEL_27:
  if (*v5 == v5[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1001C0D00(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 44);
  if (*(unsigned char *)(a1 + 44))
  {
    int v4 = (v3 << 31 >> 31) & 5;
    if ((v3 & 2) != 0) {
      v4 += 5;
    }
    if ((v3 & 4) != 0) {
      LODWORD(v5) = v4 + 5;
    }
    else {
      LODWORD(v5) = v4;
    }
    if ((v3 & 8) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
      if ((v6 & 0x80000000) != 0)
      {
        int v7 = 11;
      }
      else if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)
           + 1;
        int v3 = *(_DWORD *)(a1 + 44);
      }
      else
      {
        int v7 = 2;
      }
      LODWORD(v5) = v7 + v5;
    }
    if ((v3 & 0x10) != 0)
    {
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
      if ((v11 & 0x80000000) != 0)
      {
        int v12 = 11;
      }
      else if (v11 >= 0x80)
      {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2)
            + 1;
        int v3 = *(_DWORD *)(a1 + 44);
      }
      else
      {
        int v12 = 2;
      }
      LODWORD(v5) = v12 + v5;
    }
    if ((v3 & 0x20) != 0) {
      uint64_t v5 = (v5 + 5);
    }
    else {
      uint64_t v5 = v5;
    }
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v9 = *(void **)(a1 + 8);
    if (!v9) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v5 = 0;
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v9 = *(void **)(a1 + 8);
    if (!v9)
    {
LABEL_12:
      *(_DWORD *)(a1 + 40) = v5;
      return v5;
    }
  }
  if (*v9 == v9[1]) {
    goto LABEL_12;
  }
  uint64_t v13 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v8, a2)
      + v5;
  *(_DWORD *)(a1 + 40) = v13;
  return v13;
}

uint64_t sub_1001C0E0C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001C03B4(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001C0EEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C0F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C0F14(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001C0FA0()
{
  return 1;
}

uint64_t sub_1001C0FA8()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DCC0;
}

void sub_1001C1038(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C104C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
    LOBYTE(v4) = *(unsigned char *)(a2 + 44);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 44);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    int v5 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 44) |= 1u;
    *(_DWORD *)(a1 + 16) = v5;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 2) == 0)
    {
LABEL_7:
      if ((v4 & 4) == 0) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_7;
  }
  int v6 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 44) |= 2u;
  *(_DWORD *)(a1 + 20) = v6;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 4) == 0)
  {
LABEL_8:
    if ((v4 & 8) == 0) {
      goto LABEL_9;
    }
LABEL_14:
    int v8 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(_DWORD *)(a1 + 28) = v8;
    if ((*(_DWORD *)(a2 + 44) & 0x10) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_15;
  }
LABEL_13:
  int v7 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 44) |= 4u;
  *(_DWORD *)(a1 + 24) = v7;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_9:
  if ((v4 & 0x10) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
LABEL_15:
  *(_DWORD *)(a1 + 44) |= 0x10u;
  int v9 = *(_DWORD **)(a1 + 32);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = *(void *)(a2 + 32);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_10047EFE0 + 32);
  }
  sub_1001C1D80(v9, v10);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001C11EC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001C1214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C1228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C123C(void *a1)
{
  *a1 = off_10045E310;
  if ((void *)qword_10047EFE0 != a1)
  {
    uint64_t v2 = a1[4];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001C12D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1001C12D8()
{
}

void sub_1001C133C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001C1364(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 44);
  if (v2)
  {
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
    if ((v2 & 0x10) != 0)
    {
      this = *(void *)(this + 32);
      if (this)
      {
        if (*(unsigned char *)(this + 28)) {
          *(void *)(this + 16) = 0;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 20) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
  }
  uint64_t v5 = *(void *)(v1 + 8);
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 9) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C13E4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 28)) {
    *(void *)(a1 + 16) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 5) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001C1404(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_36;
        }
        unsigned int v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v26) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 16) = v26;
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 21) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
LABEL_15:
        unsigned int v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v26) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 20) = v26;
        *(_DWORD *)(a1 + 44) |= 2u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 29) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_20:
        unsigned int v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v26) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 24) = v26;
        *(_DWORD *)(a1 + 44) |= 4u;
        int v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 37) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_25:
        unsigned int v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v26) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 28) = v26;
        int v13 = *(_DWORD *)(a1 + 44) | 8;
        *(_DWORD *)(a1 + 44) = v13;
        unsigned int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 42) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
        *(_DWORD *)(a1 + 44) = v13 | 0x10;
        unsigned int v15 = *(_DWORD **)(a1 + 32);
        if (!v15) {
LABEL_32:
        }
          operator new();
LABEL_33:
        unsigned int v26 = 0;
        unint64_t v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26))return 0; {
        }
          }
        else
        {
          unsigned int v26 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)this + 14);
        int v18 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v17 + 1;
        if (v17 < v18)
        {
          int v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
          if (sub_1001C207C(v15, this, v20, v21))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
              int v22 = *((_DWORD *)this + 14);
              BOOL v23 = __OFSUB__(v22, 1);
              int v24 = v22 - 1;
              if (v24 < 0 == v23) {
                *((_DWORD *)this + 14) = v24;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 == 5) {
          goto LABEL_15;
        }
        goto LABEL_36;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 5) {
          goto LABEL_20;
        }
        goto LABEL_36;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 5) {
          goto LABEL_25;
        }
        goto LABEL_36;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 44) |= 0x10u;
        unsigned int v15 = *(_DWORD **)(a1 + 32);
        if (!v15) {
          goto LABEL_32;
        }
        goto LABEL_33;
      default:
        int v9 = TagFallback & 7;
LABEL_36:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_1001C17A8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001C17E4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(result + 16), a3);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 28), a3);
  if ((*(_DWORD *)(v5 + 44) & 0x10) == 0)
  {
LABEL_6:
    int v9 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_16;
  }
LABEL_12:
  uint64_t v10 = *(void *)(v5 + 32);
  if (v10)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
    int v11 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v11;
    if (!v11) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(qword_10047EFE0 + 32), a2, a4);
    int v12 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v12;
    if (!v12) {
      return result;
    }
  }
LABEL_16:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_1001C18FC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 11);
  if (v4)
  {
    int v5 = *((_DWORD *)this + 4);
    *(unsigned char *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v5;
    a2 += 5;
    int v4 = *((_DWORD *)this + 11);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v6 = *((_DWORD *)this + 5);
  *(unsigned char *)a2 = 21;
  *(_DWORD *)(a2 + 1) = v6;
  a2 += 5;
  int v4 = *((_DWORD *)this + 11);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  int v7 = *((_DWORD *)this + 6);
  *(unsigned char *)a2 = 29;
  *(_DWORD *)(a2 + 1) = v7;
  a2 += 5;
  int v4 = *((_DWORD *)this + 11);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_11;
  }
LABEL_10:
  int v8 = *((_DWORD *)this + 7);
  *(unsigned char *)a2 = 37;
  *(_DWORD *)(a2 + 1) = v8;
  a2 += 5;
  if ((*((_DWORD *)this + 11) & 0x10) == 0) {
    goto LABEL_24;
  }
LABEL_11:
  int v9 = (_DWORD *)*((void *)this + 4);
  if (v9)
  {
    *(unsigned char *)a2 = 42;
    unsigned int v10 = a2 + 1;
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9[6];
    if (v11 <= 0x7F) {
      goto LABEL_13;
    }
  }
  else
  {
    int v9 = *(_DWORD **)(qword_10047EFE0 + 32);
    *(unsigned char *)a2 = 42;
    unsigned int v10 = a2 + 1;
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9[6];
    if (v11 <= 0x7F)
    {
LABEL_13:
      *(unsigned char *)(a2 + 1) = (_BYTE)v11;
      a2 += 2;
      int v12 = v9[7];
      if ((v12 & 1) == 0) {
        goto LABEL_18;
      }
      goto LABEL_17;
    }
  }
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v10, a3);
  int v12 = v9[7];
  if (v12)
  {
LABEL_17:
    int v13 = v9[4];
    *(unsigned char *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v13;
    a2 += 5;
    int v12 = v9[7];
  }
LABEL_18:
  if ((v12 & 2) != 0)
  {
    int v17 = v9[5];
    *(unsigned char *)a2 = 21;
    *(_DWORD *)(a2 + 1) = v17;
    a2 += 5;
    int v18 = (void *)*((void *)v9 + 1);
    unsigned int v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 2);
    unsigned int v14 = v18;
    if (!v18) {
      goto LABEL_24;
    }
  }
  else
  {
    unint64_t v16 = (void *)*((void *)v9 + 1);
    unsigned int v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 2);
    unsigned int v14 = v16;
    if (!v16) {
      goto LABEL_24;
    }
  }
  if (*v14 != v14[1]) {
    a2 = wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v15, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
LABEL_24:
  uint64_t v21 = (void *)*((void *)this + 1);
  uint64_t v20 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v19 = v21;
  if (!v21 || *v19 == v19[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v20, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1001C1B38(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 44);
  if (*(unsigned char *)(a1 + 44))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 5;
    if ((v3 & 2) != 0) {
      v4 += 5;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      uint64_t v5 = v4 + 5;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 0x10) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 32);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_10047EFE0 + 32);
      }
      int v7 = *(unsigned __int8 *)(v6 + 28);
      int v8 = (v7 << 31 >> 31) & 5;
      if ((v7 & 2) != 0) {
        v8 += 5;
      }
      if (*(unsigned char *)(v6 + 28)) {
        LODWORD(v9) = v8;
      }
      else {
        LODWORD(v9) = 0;
      }
      unsigned int v10 = *(void **)(v6 + 8);
      if (!v10 || *v10 == v10[1])
      {
        *(_DWORD *)(v6 + 24) = v9;
        int v11 = 1;
      }
      else
      {
        int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v6 + 8), a2)+ v9);
        *(_DWORD *)(v6 + 24) = v9;
        if (v9 >= 0x80) {
          int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
        }
        else {
          int v11 = 1;
        }
      }
      uint64_t v5 = (v5 + v9 + v11 + 1);
      int v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v13 = *(void **)(a1 + 8);
      if (!v13) {
        goto LABEL_23;
      }
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  int v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v13 = *(void **)(a1 + 8);
  if (!v13)
  {
LABEL_23:
    *(_DWORD *)(a1 + 40) = v5;
    return v5;
  }
LABEL_27:
  if (*v13 == v13[1]) {
    goto LABEL_23;
  }
  uint64_t v15 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v12, a2)
      + v5;
  *(_DWORD *)(a1 + 40) = v15;
  return v15;
}

uint64_t sub_1001C1C78(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001C104C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001C1D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C1D6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C1D80(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      int v5 = *(_DWORD *)(a2 + 16);
      a1[7] |= 1u;
      a1[4] = v5;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 20);
      a1[7] |= 2u;
      a1[5] = v6;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001C1E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C1E4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C1E60(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001C1EEC()
{
  return 1;
}

uint64_t sub_1001C1EF4()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DCD0;
}

void sub_1001C1F84(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1001C1F98(uint64_t a1)
{
  *(void *)a1 = off_10045E3C0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001C1FEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_1001C1FF4()
{
}

void sub_1001C2054()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001C207C(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v9 = TagFallback & 7;
        if (v9 == 5)
        {
          unsigned int v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0) {
            return 0;
          }
          goto LABEL_17;
        }
      }
      else
      {
        int v9 = TagFallback & 7;
      }
LABEL_22:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v9 = TagFallback & 7;
    if (v9 != 5) {
      goto LABEL_22;
    }
    unsigned int v13 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v13) & 1) == 0) {
      return 0;
    }
    a1[4] = v13;
    a1[7] |= 1u;
    unsigned int v10 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 21)
    {
      *((void *)this + 1) = v10 + 1;
      unsigned int v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0) {
        return 0;
      }
LABEL_17:
      a1[5] = v12;
      a1[7] |= 2u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1001C2228(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 28);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(result + 16), a3);
    if ((*(_DWORD *)(v4 + 28) & 2) == 0)
    {
LABEL_3:
      int v8 = *(void **)(v4 + 8);
      int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      unsigned int v6 = v8;
      if (!v8) {
        return result;
      }
      goto LABEL_7;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v4 + 20), a3);
  int v9 = *(void **)(v4 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_7:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_1001C22C4(_DWORD *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = a1[7];
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    int v8 = a1[5];
    *(unsigned char *)a2 = 21;
    *(_DWORD *)(a2 + 1) = v8;
    a2 += 5;
    int v9 = (void *)*((void *)a1 + 1);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
    int v5 = v9;
    if (!v9) {
      return a2;
    }
    goto LABEL_7;
  }
  int v7 = a1[4];
  *(unsigned char *)a2 = 13;
  *(_DWORD *)(a2 + 1) = v7;
  a2 += 5;
  if ((a1[7] & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  unsigned int v6 = (void *)*((void *)a1 + 1);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_7:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_1001C235C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 28);
  unsigned int v4 = (v3 << 31 >> 31) & 5;
  if ((v3 & 2) != 0) {
    v4 += 5;
  }
  if (*(unsigned char *)(a1 + 28)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  int v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 24) = v5;
  return v5;
}

uint64_t sub_1001C23C4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001C1D80(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001C24A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C24B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C24CC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001C2558()
{
  return 1;
}

uint64_t sub_1001C2560()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DCE0;
}

void sub_1001C25F0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1001C2604(uint64_t a1)
{
  *(void *)a1 = off_10045E470;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001C2658(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1001C2660()
{
}

void sub_1001C26C8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C26F0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 29) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001C272C(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(result + 16), a3);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(float *)(v5 + 32), a3);
  if ((*(_DWORD *)(v5 + 44) & 0x20) == 0)
  {
LABEL_7:
    int v9 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 36), (BOOL)a2, a4);
  unsigned int v10 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_15:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_1001C2838(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 44);
  if (v3)
  {
    int v7 = *(_DWORD *)(a1 + 16);
    *(unsigned char *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v7;
    a2 += 5;
    int v3 = *(_DWORD *)(a1 + 44);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v8 = *(_DWORD *)(a1 + 20);
  *(unsigned char *)a2 = 21;
  *(_DWORD *)(a2 + 1) = v8;
  a2 += 5;
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  int v9 = *(_DWORD *)(a1 + 24);
  *(unsigned char *)a2 = 29;
  *(_DWORD *)(a2 + 1) = v9;
  a2 += 5;
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  int v10 = *(_DWORD *)(a1 + 28);
  *(unsigned char *)a2 = 37;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  int v3 = *(_DWORD *)(a1 + 44);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    char v12 = *(unsigned char *)(a1 + 36);
    *(unsigned char *)a2 = 48;
    *(unsigned char *)(a2 + 1) = v12;
    a2 += 2;
    unsigned int v13 = *(void **)(a1 + 8);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v5 = v13;
    if (!v13) {
      return a2;
    }
    goto LABEL_15;
  }
LABEL_13:
  int v11 = *(_DWORD *)(a1 + 32);
  *(unsigned char *)a2 = 45;
  *(_DWORD *)(a2 + 1) = v11;
  a2 += 5;
  if ((*(_DWORD *)(a1 + 44) & 0x20) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  int v6 = *(void **)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_15:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_1001C2998(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 44);
  if (*(unsigned char *)(a1 + 44))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 5;
    if ((v3 & 2) != 0) {
      v4 += 5;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x20) != 0) {
      uint64_t v5 = v4 + 2;
    }
    else {
      uint64_t v5 = v4;
    }
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v5 = 0;
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v7 = *(void **)(a1 + 8);
    if (!v7)
    {
LABEL_14:
      *(_DWORD *)(a1 + 40) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1]) {
    goto LABEL_14;
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
     + v5;
  *(_DWORD *)(a1 + 40) = v9;
  return v9;
}

uint64_t sub_1001C2A54(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10003F480((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001C2B34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C2B48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C2B5C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001C2BE8()
{
  return 1;
}

uint64_t sub_1001C2BF0()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DCF0;
}

void sub_1001C2C80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1001C2C94(void *a1)
{
  *a1 = off_10045E520;
  if (a1[5]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001C2D08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 72) = a2;
  return result;
}

void sub_1001C2D10()
{
}

void sub_1001C2D78()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001C2DA0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  int v7 = (unsigned int *)(a1 + 60);
  int v8 = (unsigned int *)(a1 + 64);
  uint64_t v9 = (unsigned int *)(a1 + 68);
  while (1)
  {
LABEL_2:
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if (v12 != 5) {
          goto LABEL_44;
        }
        unsigned int v43 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v43) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 16) = v43;
        *(_DWORD *)(a1 + 76) |= 1u;
        unsigned int v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 21) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
        goto LABEL_15;
      case 2u:
        int v12 = TagFallback & 7;
        if (v12 != 5) {
          goto LABEL_44;
        }
LABEL_15:
        unsigned int v43 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v43) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 20) = v43;
        *(_DWORD *)(a1 + 76) |= 2u;
        uint64_t v15 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 != 24) {
          continue;
        }
        unint64_t v16 = v15 + 1;
        *((void *)this + 1) = v16;
LABEL_21:
        unsigned int v43 = 0;
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v43);
          if (!result) {
            return result;
          }
          unsigned int v17 = v43;
          if (v43 <= 2)
          {
LABEL_24:
            *(_DWORD *)(a1 + 76) |= 4u;
            *(_DWORD *)(a1 + 24) = v17;
            goto LABEL_53;
          }
        }
        else
        {
          unsigned int v17 = *v16;
          *((void *)this + 1) = v16 + 1;
          if (v17 <= 2) {
            goto LABEL_24;
          }
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 3, (int)v17);
LABEL_53:
        unsigned int v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 37) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
        unsigned int v43 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v43) & 1) == 0) {
          return 0;
        }
LABEL_56:
        *(_DWORD *)(a1 + 28) = v43;
        *(_DWORD *)(a1 + 76) |= 8u;
        uint64_t v27 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v27 >= v18 || *v27 != 40) {
          continue;
        }
        int v19 = v27 + 1;
        *((void *)this + 1) = v19;
LABEL_59:
        unsigned int v43 = 0;
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v43);
          if (!result) {
            return result;
          }
          unsigned int v28 = v43;
          if (v43 <= 2)
          {
LABEL_62:
            *(_DWORD *)(a1 + 76) |= 0x10u;
            *(_DWORD *)(a1 + 32) = v28;
            goto LABEL_66;
          }
        }
        else
        {
          unsigned int v28 = *v19;
          *((void *)this + 1) = v19 + 1;
          if (v28 <= 2) {
            goto LABEL_62;
          }
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 5, (int)v28);
LABEL_66:
        unsigned int v29 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v29 >= *((void *)this + 2) || *v29 != 53) {
          continue;
        }
        *((void *)this + 1) = v29 + 1;
        unsigned int v43 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v43) & 1) == 0) {
          return 0;
        }
LABEL_69:
        *(_DWORD *)(a1 + 36) = v43;
        *(_DWORD *)(a1 + 76) |= 0x20u;
        uint64_t v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 61) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
        unsigned int v43 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v43) & 1) == 0) {
          return 0;
        }
LABEL_72:
        *(_DWORD *)(a1 + 56) = v43;
        *(_DWORD *)(a1 + 76) |= 0x40u;
        uint64_t v31 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        if ((unint64_t)v31 < v20)
        {
          int v32 = *v31;
          goto LABEL_90;
        }
        continue;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        unint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_21;
      case 4u:
        int v12 = TagFallback & 7;
        if (v12 != 5) {
          goto LABEL_44;
        }
        unsigned int v43 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v43) & 1) == 0) {
          return 0;
        }
        goto LABEL_56;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_59;
      case 6u:
        int v12 = TagFallback & 7;
        if (v12 != 5) {
          goto LABEL_44;
        }
        unsigned int v43 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v43) & 1) == 0) {
          return 0;
        }
        goto LABEL_69;
      case 7u:
        int v12 = TagFallback & 7;
        if (v12 != 5) {
          goto LABEL_44;
        }
        unsigned int v43 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v43) & 1) == 0) {
          return 0;
        }
        goto LABEL_72;
      case 8u:
        int v12 = TagFallback & 7;
        if (v12 != 2)
        {
          if ((TagFallback & 7) == 0)
          {
            uint64_t v21 = (char *)*((void *)this + 1);
            unint64_t v20 = *((void *)this + 2);
            goto LABEL_74;
          }
LABEL_44:
          if (v12 == 4) {
            return 1;
          }
          if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4))continue; {
          return 0;
          }
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline();
        if (!result) {
          return result;
        }
        break;
      case 9u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        int v22 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_93;
      case 0xAu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        BOOL v23 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_101;
      case 0xBu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_44;
        }
        int v24 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_109;
      default:
        int v12 = TagFallback & 7;
        goto LABEL_44;
    }
    while (1)
    {
      uint64_t v31 = (unsigned __int8 *)*((void *)this + 1);
      unint64_t v20 = *((void *)this + 2);
      if ((unint64_t)v31 >= v20) {
        goto LABEL_2;
      }
      int v32 = *v31;
      if (v32 == 72) {
        break;
      }
LABEL_90:
      if (v32 != 64) {
        goto LABEL_2;
      }
      uint64_t v21 = (char *)(v31 + 1);
      *((void *)this + 1) = v21;
LABEL_74:
      unsigned int v43 = 0;
      if ((unint64_t)v21 >= v20 || (int v33 = *v21, v33 < 0))
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v43);
        if (!result) {
          return result;
        }
        signed int v34 = v43;
        if (v43 > 9) {
          goto LABEL_86;
        }
LABEL_77:
        int v35 = *(_DWORD *)(a1 + 48);
        uint64_t v36 = *(void *)(a1 + 40);
        if (v35 == *(_DWORD *)(a1 + 52))
        {
          if (2 * v35 <= v35 + 1) {
            int v37 = v35 + 1;
          }
          else {
            int v37 = 2 * v35;
          }
          if (v37 <= 4) {
            int v37 = 4;
          }
          *(_DWORD *)(a1 + 52) = v37;
          operator new[]();
        }
        *(_DWORD *)(a1 + 48) = v35 + 1;
        *(_DWORD *)(v36 + 4 * v35) = v34;
      }
      else
      {
        signed int v34 = *v21;
        *((void *)this + 1) = v21 + 1;
        if (v33 <= 9u) {
          goto LABEL_77;
        }
LABEL_86:
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 8, v34);
      }
    }
    int v22 = v31 + 1;
    *((void *)this + 1) = v22;
LABEL_93:
    if ((unint64_t)v22 >= v20 || (char)*v22 < 0)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
      if (!result) {
        return result;
      }
      int v38 = (unsigned char *)*((void *)this + 1);
      unint64_t v20 = *((void *)this + 2);
      *(_DWORD *)(a1 + 76) |= 0x100u;
      if ((unint64_t)v38 < v20) {
        goto LABEL_99;
      }
      continue;
    }
    *int v7 = *v22;
    int v38 = v22 + 1;
    *((void *)this + 1) = v38;
    *(_DWORD *)(a1 + 76) |= 0x100u;
    if ((unint64_t)v38 >= v20) {
      continue;
    }
LABEL_99:
    if (*v38 == 80)
    {
      BOOL v23 = v38 + 1;
      *((void *)this + 1) = v23;
LABEL_101:
      if ((unint64_t)v23 >= v20 || (char)*v23 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
        if (!result) {
          return result;
        }
        int v39 = (unsigned char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        *(_DWORD *)(a1 + 76) |= 0x200u;
        if ((unint64_t)v39 < v20) {
          goto LABEL_107;
        }
        continue;
      }
      *int v8 = *v23;
      int v39 = v23 + 1;
      *((void *)this + 1) = v39;
      *(_DWORD *)(a1 + 76) |= 0x200u;
      if ((unint64_t)v39 >= v20) {
        continue;
      }
LABEL_107:
      if (*v39 == 88) {
        break;
      }
    }
  }
  int v24 = v39 + 1;
  *((void *)this + 1) = v24;
LABEL_109:
  if ((unint64_t)v24 < v20 && (*v24 & 0x80000000) == 0)
  {
    unsigned int *v9 = *v24;
    char v40 = (unsigned __int8 *)(v24 + 1);
    *((void *)this + 1) = v40;
    *(_DWORD *)(a1 + 76) |= 0x400u;
    if (v40 == (unsigned __int8 *)v20) {
      goto LABEL_115;
    }
    goto LABEL_2;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
  if (result)
  {
    uint64_t v42 = *((void *)this + 1);
    uint64_t v41 = *((void *)this + 2);
    *(_DWORD *)(a1 + 76) |= 0x400u;
    if (v42 != v41) {
      goto LABEL_2;
    }
LABEL_115:
    if (!*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
      goto LABEL_2;
    }
    *((_DWORD *)this + 8) = 0;
    uint64_t result = 1;
    *((unsigned char *)this + 36) = 1;
  }
  return result;
}

uint64_t sub_1001C34E0(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 76);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(result + 16), a3);
    int v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 24), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 32), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(float *)(v5 + 36), a3);
  if ((*(_DWORD *)(v5 + 76) & 0x40) == 0)
  {
LABEL_8:
    if (*(int *)(v5 + 48) < 1) {
      goto LABEL_19;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(float *)(v5 + 56), a3);
  if (*(int *)(v5 + 48) < 1) {
    goto LABEL_19;
  }
LABEL_17:
  uint64_t v7 = 0;
  do
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(*(void *)(v5 + 40) + 4 * v7++), (int)a2, a4);
  while (v7 < *(int *)(v5 + 48));
LABEL_19:
  int v8 = *(_DWORD *)(v5 + 76);
  if ((v8 & 0x100) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 60), a2, a4);
    int v8 = *(_DWORD *)(v5 + 76);
    if ((v8 & 0x200) == 0)
    {
LABEL_21:
      if ((v8 & 0x400) == 0) {
        goto LABEL_22;
      }
      goto LABEL_26;
    }
  }
  else if ((v8 & 0x200) == 0)
  {
    goto LABEL_21;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 64), a2, a4);
  if ((*(_DWORD *)(v5 + 76) & 0x400) == 0)
  {
LABEL_22:
    int v11 = *(void **)(v5 + 8);
    int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v9 = v11;
    if (!v11) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 68), a2, a4);
  int v12 = *(void **)(v5 + 8);
  int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v9 = v12;
  if (!v12) {
    return result;
  }
LABEL_27:
  if (*v9 != v9[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C36A8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  int v5 = *((_DWORD *)this + 19);
  if (v5)
  {
    int v8 = *((_DWORD *)this + 4);
    *(unsigned char *)a2 = 13;
    *(_DWORD *)((char *)a2 + 1) = v8;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 5);
    int v5 = *((_DWORD *)this + 19);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_12:
      int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 6);
      *(unsigned char *)char v3 = 24;
      unint64_t v11 = (unint64_t)v3 + 1;
      if ((v10 & 0x80000000) != 0)
      {
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v10, v11, a3);
        int v6 = *((_DWORD *)this + 19);
        if ((v6 & 8) != 0) {
          goto LABEL_19;
        }
      }
      else if (v10 > 0x7F)
      {
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, v11, a3);
        int v6 = *((_DWORD *)this + 19);
        if ((v6 & 8) != 0) {
          goto LABEL_19;
        }
      }
      else
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v10;
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        int v6 = *((_DWORD *)this + 19);
        if ((v6 & 8) != 0) {
          goto LABEL_19;
        }
      }
LABEL_5:
      if ((v6 & 0x10) == 0) {
        goto LABEL_6;
      }
LABEL_20:
      unsigned int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
      *(unsigned char *)char v3 = 40;
      unint64_t v14 = (unint64_t)v3 + 1;
      if ((v13 & 0x80000000) != 0)
      {
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v13, v14, a3);
        int v7 = *((_DWORD *)this + 19);
        if ((v7 & 0x20) != 0) {
          goto LABEL_27;
        }
      }
      else if (v13 > 0x7F)
      {
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v14, a3);
        int v7 = *((_DWORD *)this + 19);
        if ((v7 & 0x20) != 0) {
          goto LABEL_27;
        }
      }
      else
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v13;
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        int v7 = *((_DWORD *)this + 19);
        if ((v7 & 0x20) != 0) {
          goto LABEL_27;
        }
      }
LABEL_7:
      if ((v7 & 0x40) == 0) {
        goto LABEL_8;
      }
      goto LABEL_28;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v9 = *((_DWORD *)this + 5);
  *(unsigned char *)char v3 = 21;
  *(_DWORD *)((char *)v3 + 1) = v9;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  if ((*((_DWORD *)this + 19) & 4) != 0) {
    goto LABEL_12;
  }
LABEL_4:
  int v6 = *((_DWORD *)this + 19);
  if ((v6 & 8) == 0) {
    goto LABEL_5;
  }
LABEL_19:
  int v12 = *((_DWORD *)this + 7);
  *(unsigned char *)char v3 = 37;
  *(_DWORD *)((char *)v3 + 1) = v12;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  if ((*((_DWORD *)this + 19) & 0x10) != 0) {
    goto LABEL_20;
  }
LABEL_6:
  int v7 = *((_DWORD *)this + 19);
  if ((v7 & 0x20) == 0) {
    goto LABEL_7;
  }
LABEL_27:
  int v15 = *((_DWORD *)this + 9);
  *(unsigned char *)char v3 = 53;
  *(_DWORD *)((char *)v3 + 1) = v15;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  if ((*((_DWORD *)this + 19) & 0x40) == 0)
  {
LABEL_8:
    if (*((int *)this + 12) < 1) {
      goto LABEL_36;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v16 = *((_DWORD *)this + 14);
  *(unsigned char *)char v3 = 61;
  *(_DWORD *)((char *)v3 + 1) = v16;
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  if (*((int *)this + 12) < 1) {
    goto LABEL_36;
  }
LABEL_29:
  uint64_t v17 = 0;
  do
  {
    while (1)
    {
      while (1)
      {
        unint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 5) + 4 * v17);
        *(unsigned char *)char v3 = 64;
        unint64_t v19 = (unint64_t)v3 + 1;
        if ((v18 & 0x80000000) == 0) {
          break;
        }
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v18, v19, a3);
        if (++v17 >= *((int *)this + 12)) {
          goto LABEL_36;
        }
      }
      if (v18 > 0x7F) {
        break;
      }
      *((unsigned char *)v3 + 1) = (_BYTE)v18;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if (++v17 >= *((int *)this + 12)) {
        goto LABEL_36;
      }
    }
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, v19, a3);
    ++v17;
  }
  while (v17 < *((int *)this + 12));
LABEL_36:
  if (*((unsigned char *)this + 77))
  {
    int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
    *(unsigned char *)char v3 = 72;
    if (v24 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v24, (int)v3 + 1, a3);
      if ((*((unsigned char *)this + 77) & 2) != 0) {
        goto LABEL_48;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v24;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if ((*((unsigned char *)this + 77) & 2) != 0) {
        goto LABEL_48;
      }
    }
LABEL_38:
    if ((*((unsigned char *)this + 77) & 4) == 0) {
      goto LABEL_39;
    }
LABEL_52:
    unsigned int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    *(unsigned char *)char v3 = 88;
    if (v26 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, (int)v3 + 1, a3);
      unsigned int v28 = (void *)*((void *)this + 1);
      uint64_t v21 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      unint64_t v20 = v28;
      if (!v28) {
        return v3;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v26;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      uint64_t v27 = (void *)*((void *)this + 1);
      uint64_t v21 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      unint64_t v20 = v27;
      if (!v27) {
        return v3;
      }
    }
    goto LABEL_40;
  }
  if ((*((unsigned char *)this + 77) & 2) == 0) {
    goto LABEL_38;
  }
LABEL_48:
  unsigned int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  *(unsigned char *)char v3 = 80;
  if (v25 > 0x7F)
  {
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, (int)v3 + 1, a3);
    if ((*((unsigned char *)this + 77) & 4) != 0) {
      goto LABEL_52;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v25;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((unsigned char *)this + 77) & 4) != 0) {
      goto LABEL_52;
    }
  }
LABEL_39:
  int v22 = (void *)*((void *)this + 1);
  uint64_t v21 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  unint64_t v20 = v22;
  if (!v22) {
    return v3;
  }
LABEL_40:
  if (*v20 == v20[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v21, v3, a3);
}

uint64_t sub_1001C3A3C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 76);
  if ((_BYTE)v3)
  {
    if ((v3 & 2) != 0) {
      int v4 = ((v3 << 31 >> 31) & 5) + 5;
    }
    else {
      int v4 = (v3 << 31 >> 31) & 5;
    }
    if ((v3 & 4) != 0)
    {
      int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v5 & 0x80000000) != 0)
      {
        int v6 = 11;
      }
      else if (v5 >= 0x80)
      {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        int v3 = *(_DWORD *)(a1 + 76);
      }
      else
      {
        int v6 = 2;
      }
      v4 += v6;
    }
    if ((v3 & 8) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x10) != 0)
    {
      int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
      if ((v8 & 0x80000000) != 0)
      {
        int v9 = 11;
      }
      else if (v8 >= 0x80)
      {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2)
           + 1;
        int v3 = *(_DWORD *)(a1 + 76);
      }
      else
      {
        int v9 = 2;
      }
      v4 += v9;
    }
    int v10 = v4 + 5;
    if ((v3 & 0x20) == 0) {
      int v10 = v4;
    }
    if ((v3 & 0x40) != 0) {
      int v7 = v10 + 5;
    }
    else {
      int v7 = v10;
    }
    if ((v3 & 0xFF00) == 0) {
      goto LABEL_32;
    }
  }
  else
  {
    int v7 = 0;
    if ((v3 & 0xFF00) == 0) {
      goto LABEL_32;
    }
  }
  if ((v3 & 0x100) == 0)
  {
    if ((v3 & 0x200) == 0) {
      goto LABEL_31;
    }
    goto LABEL_44;
  }
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
  if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
    int v3 = *(_DWORD *)(a1 + 76);
    v7 += v17 + 1;
    if ((v3 & 0x200) != 0) {
      goto LABEL_44;
    }
  }
  else
  {
    v7 += 2;
    if ((v3 & 0x200) != 0)
    {
LABEL_44:
      unint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
      if (v18 >= 0x80)
      {
        v7 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2)
            + 1;
        if ((*(_DWORD *)(a1 + 76) & 0x400) != 0) {
          goto LABEL_48;
        }
      }
      else
      {
        v7 += 2;
        if ((v3 & 0x400) != 0) {
          goto LABEL_48;
        }
      }
LABEL_32:
      int v11 = *(_DWORD *)(a1 + 48);
      if (v11 >= 1) {
        goto LABEL_33;
      }
LABEL_52:
      int v13 = 0;
      goto LABEL_53;
    }
  }
LABEL_31:
  if ((v3 & 0x400) == 0) {
    goto LABEL_32;
  }
LABEL_48:
  unint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 68);
  if (v19 >= 0x80)
  {
    v7 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2) + 1;
    int v11 = *(_DWORD *)(a1 + 48);
    if (v11 < 1) {
      goto LABEL_52;
    }
  }
  else
  {
    v7 += 2;
    int v11 = *(_DWORD *)(a1 + 48);
    if (v11 < 1) {
      goto LABEL_52;
    }
  }
LABEL_33:
  uint64_t v12 = 0;
  int v13 = 0;
  do
  {
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 40)
                                                                                           + 4 * v12);
    if ((v15 & 0x80000000) != 0)
    {
      int v14 = 10;
    }
    else if (v15 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
      int v11 = *(_DWORD *)(a1 + 48);
    }
    else
    {
      int v14 = 1;
    }
    v13 += v14;
    ++v12;
  }
  while (v12 < v11);
LABEL_53:
  uint64_t v20 = (v13 + v7 + v11);
  uint64_t v21 = *(void **)(a1 + 8);
  if (v21 && *v21 != v21[1]) {
    uint64_t v20 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v20;
  }
  *(_DWORD *)(a1 + 72) = v20;
  return v20;
}

uint64_t sub_1001C3C5C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000091A4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001C3D3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C3D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C3D64(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001C3DF0()
{
  return 1;
}

uint64_t sub_1001C3DF8()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DD00;
}

void sub_1001C3E88(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C3E9C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
    if ((*(unsigned char *)(a2 + 24) & 1) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_3;
  }
  if (*(unsigned char *)(a2 + 24))
  {
LABEL_3:
    int v4 = *(_DWORD *)(a2 + 16);
    a1[6] |= 1u;
    a1[4] = v4;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001C3F40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C3F54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C3F68(uint64_t a1)
{
  *(void *)a1 = off_10045E5D0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001C3FBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 20) = a2;
  return result;
}

void sub_1001C3FC4()
{
}

void sub_1001C4028()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C4050(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 24)) {
    *(_DWORD *)(a1 + 16) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001C4070(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  do
  {
    while (1)
    {
      int v7 = (unsigned __int8 *)*((void *)this + 1);
      if ((unint64_t)v7 < *((void *)this + 2) && ((char)*v7 & 0x80000000) == 0) {
        break;
      }
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (TagFallback != 13) {
        goto LABEL_5;
      }
LABEL_10:
      unsigned int v10 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v10) & 1) == 0) {
        return 0;
      }
      *(_DWORD *)(a1 + 16) = v10;
      *(_DWORD *)(a1 + 24) |= 1u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    unint64_t TagFallback = *v7;
    *((_DWORD *)this + 8) = TagFallback;
    *((void *)this + 1) = v7 + 1;
    if (TagFallback == 13) {
      goto LABEL_10;
    }
LABEL_5:
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) != 0);
  return 0;
}

uint64_t sub_1001C4198(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  if (*(unsigned char *)(result + 24)) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(result + 16), a3);
  }
  int v7 = *(void **)(v4 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  int v5 = v7;
  if (v7 && *v5 != v5[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v6, a2, a3);
  }
  return result;
}

uint64_t sub_1001C420C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  if (*(unsigned char *)(a1 + 24))
  {
    int v3 = *(_DWORD *)(a1 + 16);
    *(unsigned char *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v3;
    a2 += 5;
  }
  unsigned int v6 = *(void **)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v5 = v6;
  if (!v6 || *v5 == v5[1]) {
    return a2;
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
}

uint64_t sub_1001C4260(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v5 = *(void **)(a1 + 8);
  int v3 = (unsigned __int8 *)(a1 + 8);
  uint64_t v4 = v5;
  uint64_t v6 = (v3[16] << 31 >> 31) & 5;
  if (v5 && *v4 != v4[1]) {
    uint64_t v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)v3, a2)+ v6;
  }
  *(_DWORD *)(a1 + 20) = v6;
  return v6;
}

uint64_t sub_1001C42B4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001C3E9C(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001C4394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C43A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C43BC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001C4448()
{
  return 1;
}

uint64_t sub_1001C4450()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DD18;
}

void sub_1001C44E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C44F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 72) = a2;
  return result;
}

void sub_1001C44FC()
{
}

void sub_1001C4564()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C458C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 76))
  {
    *(void *)(a1 + 64) = 0;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 17) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001C45B8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_45;
        }
        unint64_t v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v17;
        *(_DWORD *)(a1 + 76) |= 1u;
        unsigned int v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_45;
        }
LABEL_15:
        unint64_t v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v17;
        *(_DWORD *)(a1 + 76) |= 2u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 25) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_20:
        unint64_t v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v17;
        *(_DWORD *)(a1 + 76) |= 4u;
        uint64_t v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 33) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_25:
        unint64_t v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 40) = v17;
        *(_DWORD *)(a1 + 76) |= 8u;
        int v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 41) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_30:
        unint64_t v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 48) = v17;
        *(_DWORD *)(a1 + 76) |= 0x10u;
        int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 49) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
LABEL_35:
        unint64_t v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 64) = v17;
        *(_DWORD *)(a1 + 76) |= 0x40u;
        int v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 57) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_40:
        unint64_t v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 56) = v17;
        *(_DWORD *)(a1 + 76) |= 0x20u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_20;
        }
        goto LABEL_45;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_25;
        }
        goto LABEL_45;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_30;
        }
        goto LABEL_45;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_35;
        }
        goto LABEL_45;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_40;
        }
        goto LABEL_45;
      default:
        int v9 = TagFallback & 7;
LABEL_45:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t sub_1001C4944(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 76);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    int v5 = *(_DWORD *)(v4 + 76);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  int v5 = *(_DWORD *)(v4 + 76);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
  int v5 = *(_DWORD *)(v4 + 76);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v4 + 40), a3);
  int v5 = *(_DWORD *)(v4 + 76);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v4 + 48), a3);
  int v5 = *(_DWORD *)(v4 + 76);
  if ((v5 & 0x40) == 0)
  {
LABEL_7:
    if ((v5 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v4 + 64), a3);
  if ((*(_DWORD *)(v4 + 76) & 0x20) == 0)
  {
LABEL_8:
    int v8 = *(void **)(v4 + 8);
    int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    unsigned int v6 = v8;
    if (!v8) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v4 + 56), a3);
  int v9 = *(void **)(v4 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_17:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_1001C4A6C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 76);
  if (v3)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v7;
    a2 += 9;
    int v3 = *(_DWORD *)(a1 + 76);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(a1 + 24);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v8;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 76);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 32);
  *(unsigned char *)a2 = 25;
  *(void *)(a2 + 1) = v9;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 76);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t v10 = *(void *)(a1 + 40);
  *(unsigned char *)a2 = 33;
  *(void *)(a2 + 1) = v10;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 76);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v11 = *(void *)(a1 + 48);
  *(unsigned char *)a2 = 41;
  *(void *)(a2 + 1) = v11;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 76);
  if ((v3 & 0x40) == 0)
  {
LABEL_7:
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    uint64_t v13 = *(void *)(a1 + 56);
    *(unsigned char *)a2 = 57;
    *(void *)(a2 + 1) = v13;
    a2 += 9;
    int v14 = *(void **)(a1 + 8);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v5 = v14;
    if (!v14) {
      return a2;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t v12 = *(void *)(a1 + 64);
  *(unsigned char *)a2 = 49;
  *(void *)(a2 + 1) = v12;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 76) & 0x20) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  unsigned int v6 = *(void **)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_17:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_1001C4CFC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 76);
  if (*(unsigned char *)(a1 + 76))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x40) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v5 = 0;
    unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7)
    {
LABEL_16:
      *(_DWORD *)(a1 + 72) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1]) {
    goto LABEL_16;
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
     + v5;
  *(_DWORD *)(a1 + 72) = v9;
  return v9;
}

uint64_t sub_1001C4DC4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10009E308((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001C4EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C4EB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C4ECC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001C4F58()
{
  return 1;
}

uint64_t sub_1001C4F60()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DD28;
}

void sub_1001C4FF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C5004(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1001C500C()
{
}

void sub_1001C5074()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C509C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 29) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001C50C0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = (unsigned int *)(a1 + 24);
  unsigned int v7 = a1 + 8;
  while (2)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 5) {
          goto LABEL_32;
        }
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 16) = v24;
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 21) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
        goto LABEL_15;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 5) {
          goto LABEL_32;
        }
LABEL_15:
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 20) = v24;
        *(_DWORD *)(a1 + 44) |= 2u;
        uint64_t v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 != 24) {
          continue;
        }
        int v14 = v13 + 1;
        *((void *)this + 1) = v14;
LABEL_21:
        if ((unint64_t)v14 < v12 && (*v14 & 0x80000000) == 0)
        {
          *unsigned int v6 = *v14;
          int v15 = v14 + 1;
          *((void *)this + 1) = v15;
          *(_DWORD *)(a1 + 44) |= 4u;
          if ((unint64_t)v15 < v12) {
            goto LABEL_38;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!result) {
          return result;
        }
        int v15 = (unsigned char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        *(_DWORD *)(a1 + 44) |= 4u;
        if ((unint64_t)v15 >= v19) {
          continue;
        }
LABEL_38:
        if (*v15 != 37) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
LABEL_40:
        *(_DWORD *)(a1 + 28) = v24;
        *(_DWORD *)(a1 + 44) |= 8u;
        uint64_t v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 45) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
LABEL_43:
        *(_DWORD *)(a1 + 32) = v24;
        *(_DWORD *)(a1 + 44) |= 0x10u;
        uint64_t v21 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v21 >= v16 || *v21 != 48) {
          continue;
        }
        unint64_t v17 = v21 + 1;
        *((void *)this + 1) = v17;
LABEL_46:
        unsigned int v24 = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
          if (!result) {
            return result;
          }
          unsigned int v22 = v24;
          BOOL v23 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v22 = *v17;
          BOOL v23 = (unsigned __int8 *)(v17 + 1);
          *((void *)this + 1) = v23;
        }
        *(unsigned char *)(a1 + 36) = v22 != 0;
        *(_DWORD *)(a1 + 44) |= 0x20u;
        if (v23 != (unsigned __int8 *)v16 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_21;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 != 5) {
          goto LABEL_32;
        }
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
        goto LABEL_40;
      case 5u:
        int v10 = TagFallback & 7;
        if (v10 != 5) {
          goto LABEL_32;
        }
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
        goto LABEL_43;
      case 6u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        unint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_46;
      default:
        int v10 = TagFallback & 7;
LABEL_32:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1001C5470(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(result + 16), a3);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(float *)(v5 + 32), a3);
  if ((*(_DWORD *)(v5 + 44) & 0x20) == 0)
  {
LABEL_7:
    uint64_t v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    unsigned int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 36), (BOOL)a2, a4);
  int v10 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_15:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_1001C557C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 11);
  if (v4)
  {
    int v9 = *((_DWORD *)this + 4);
    *(unsigned char *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v9;
    a2 += 5;
    int v4 = *((_DWORD *)this + 11);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_11:
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
      *(unsigned char *)a2 = 24;
      if (v11 > 0x7F)
      {
        a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, (int)a2 + 1, a3);
        int v5 = *((_DWORD *)this + 11);
        if ((v5 & 8) != 0) {
          goto LABEL_15;
        }
      }
      else
      {
        *(unsigned char *)(a2 + 1) = (_BYTE)v11;
        a2 += 2;
        int v5 = *((_DWORD *)this + 11);
        if ((v5 & 8) != 0) {
          goto LABEL_15;
        }
      }
LABEL_5:
      if ((v5 & 0x10) == 0) {
        goto LABEL_6;
      }
      goto LABEL_16;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v10 = *((_DWORD *)this + 5);
  *(unsigned char *)a2 = 21;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  if ((*((_DWORD *)this + 11) & 4) != 0) {
    goto LABEL_11;
  }
LABEL_4:
  int v5 = *((_DWORD *)this + 11);
  if ((v5 & 8) == 0) {
    goto LABEL_5;
  }
LABEL_15:
  int v12 = *((_DWORD *)this + 7);
  *(unsigned char *)a2 = 37;
  *(_DWORD *)(a2 + 1) = v12;
  a2 += 5;
  int v5 = *((_DWORD *)this + 11);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  int v13 = *((_DWORD *)this + 8);
  *(unsigned char *)a2 = 45;
  *(_DWORD *)(a2 + 1) = v13;
  a2 += 5;
  if ((*((_DWORD *)this + 11) & 0x20) == 0)
  {
LABEL_7:
    uint64_t v8 = (void *)*((void *)this + 1);
    unsigned int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v6 = v8;
    if (!v8) {
      return a2;
    }
    goto LABEL_18;
  }
LABEL_17:
  char v14 = *((unsigned char *)this + 36);
  *(unsigned char *)a2 = 48;
  *(unsigned char *)(a2 + 1) = v14;
  a2 += 2;
  int v15 = (void *)*((void *)this + 1);
  unsigned int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v6 = v15;
  if (!v15) {
    return a2;
  }
LABEL_18:
  if (*v6 == v6[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v7, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1001C5724(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 44);
  if (*(unsigned char *)(a1 + 44))
  {
    if ((v3 & 2) != 0) {
      int v4 = ((v3 << 31 >> 31) & 5) + 5;
    }
    else {
      int v4 = (v3 << 31 >> 31) & 5;
    }
    if ((v3 & 4) != 0)
    {
      int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if (v5 >= 0x80)
      {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)
           + 1;
        int v3 = *(_DWORD *)(a1 + 44);
      }
      else
      {
        int v6 = 2;
      }
      v4 += v6;
    }
    unsigned int v11 = v4 + 5;
    if ((v3 & 8) == 0) {
      unsigned int v11 = v4;
    }
    if ((v3 & 0x10) != 0) {
      v11 += 5;
    }
    if ((v3 & 0x20) != 0) {
      uint64_t v7 = v11 + 2;
    }
    else {
      uint64_t v7 = v11;
    }
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v9 = *(void **)(a1 + 8);
    if (!v9) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v9 = *(void **)(a1 + 8);
    if (!v9)
    {
LABEL_9:
      *(_DWORD *)(a1 + 40) = v7;
      return v7;
    }
  }
  if (*v9 == v9[1]) {
    goto LABEL_9;
  }
  uint64_t v12 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v8, a2)
      + v7;
  *(_DWORD *)(a1 + 40) = v12;
  return v12;
}

uint64_t sub_1001C57FC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10002FAC0((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001C58DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C58F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C5904(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001C5990()
{
  return 1;
}

uint64_t sub_1001C5998()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DD38;
}

void sub_1001C5A28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C5A3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 296) = a2;
  return result;
}

uint64_t sub_1001C5A44(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047F018;
  if (!qword_10047F018)
  {
    sub_1001BAAC8(0, a2, a3, a4);
    return qword_10047F018;
  }
  return result;
}

void sub_1001C5A80()
{
}

void sub_1001C5B18()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C5B40(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56))
  {
    *(unsigned char *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 12) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C5B68(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 60);
  if ((_BYTE)v1)
  {
    *(void *)(a1 + 40) = 0;
    *(_DWORD *)(a1 + 36) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(_WORD *)(a1 + 32) = 0;
  }
  if ((v1 & 0xFF00) != 0) {
    *(void *)(a1 + 48) = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 13) = 0;
  if (v3) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C5BA4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 36))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C5BC4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 36))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C5BE4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 60))
  {
    *(void *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 13) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001C5C0C(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 44);
  if ((_BYTE)v2)
  {
    *(_WORD *)(this + 24) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 36))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + 24) = 0;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 28) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(void *)(v1 + 26) = 0;
    int v2 = *(_DWORD *)(v1 + 44);
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_DWORD *)(v1 + 36) = 0;
    *(unsigned char *)(v1 + 34) = 0;
  }
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 9) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C5CA8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(unsigned char *)(a1 + 40) = 0;
    *(void *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 10) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C5CD0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56))
  {
    *(_WORD *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 12) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001C5DB8(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 300);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 16), (unint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 300);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_52;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_54;
  }
LABEL_53:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 32), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_55;
  }
LABEL_54:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 36), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_56;
  }
LABEL_55:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(float *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_57;
  }
LABEL_56:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(float *)(v5 + 44), a3);
  int v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_61:
    uint64_t v14 = *(void *)(v5 + 56);
    if (v14)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v14, a2, a4);
      int v6 = *(_DWORD *)(v5 + 300);
      if ((v6 & 0x200) != 0) {
        goto LABEL_65;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(void *)(qword_10047F018 + 56), a2, a4);
      int v6 = *(_DWORD *)(v5 + 300);
      if ((v6 & 0x200) != 0) {
        goto LABEL_65;
      }
    }
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
LABEL_69:
    uint64_t v16 = *(void *)(v5 + 72);
    if (v16)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v16, a2, a4);
      int v6 = *(_DWORD *)(v5 + 300);
      if ((v6 & 0x800) != 0) {
        goto LABEL_73;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(void *)(qword_10047F018 + 72), a2, a4);
      int v6 = *(_DWORD *)(v5 + 300);
      if ((v6 & 0x800) != 0) {
        goto LABEL_73;
      }
    }
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
LABEL_74:
    uint64_t v17 = *(void *)(v5 + 80);
    if (v17)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v17, a2, a4);
      int v6 = *(_DWORD *)(v5 + 300);
      if ((v6 & 0x2000) != 0) {
        goto LABEL_78;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(void *)(qword_10047F018 + 80), a2, a4);
      int v6 = *(_DWORD *)(v5 + 300);
      if ((v6 & 0x2000) != 0) {
        goto LABEL_78;
      }
    }
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
LABEL_82:
    uint64_t v19 = *(void *)(v5 + 104);
    if (v19)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v19, a2, a4);
      int v6 = *(_DWORD *)(v5 + 300);
      if ((v6 & 0x8000) != 0) {
        goto LABEL_86;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(void *)(qword_10047F018 + 104), a2, a4);
      int v6 = *(_DWORD *)(v5 + 300);
      if ((v6 & 0x8000) != 0) {
        goto LABEL_86;
      }
    }
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_87;
  }
LABEL_57:
  uint64_t v13 = *(void *)(v5 + 48);
  if (v13)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v13, a2, a4);
    int v6 = *(_DWORD *)(v5 + 300);
    if ((v6 & 0x100) != 0) {
      goto LABEL_61;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(void *)(qword_10047F018 + 48), a2, a4);
    int v6 = *(_DWORD *)(v5 + 300);
    if ((v6 & 0x100) != 0) {
      goto LABEL_61;
    }
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    goto LABEL_11;
  }
LABEL_65:
  uint64_t v15 = *(void *)(v5 + 64);
  if (v15)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v15, a2, a4);
    int v6 = *(_DWORD *)(v5 + 300);
    if ((v6 & 0x400) != 0) {
      goto LABEL_69;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(void *)(qword_10047F018 + 64), a2, a4);
    int v6 = *(_DWORD *)(v5 + 300);
    if ((v6 & 0x400) != 0) {
      goto LABEL_69;
    }
  }
LABEL_12:
  if ((v6 & 0x800) == 0) {
    goto LABEL_13;
  }
LABEL_73:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (int)a2, *(float *)(v5 + 96), a3);
  int v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x1000) != 0) {
    goto LABEL_74;
  }
LABEL_14:
  if ((v6 & 0x2000) == 0) {
    goto LABEL_15;
  }
LABEL_78:
  uint64_t v18 = *(void *)(v5 + 88);
  if (v18)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v18, a2, a4);
    int v6 = *(_DWORD *)(v5 + 300);
    if ((v6 & 0x4000) != 0) {
      goto LABEL_82;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(void *)(qword_10047F018 + 88), a2, a4);
    int v6 = *(_DWORD *)(v5 + 300);
    if ((v6 & 0x4000) != 0) {
      goto LABEL_82;
    }
  }
LABEL_16:
  if ((v6 & 0x8000) == 0) {
    goto LABEL_17;
  }
LABEL_86:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, (int)a2, *(double *)(v5 + 112), a3);
  int v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_88;
  }
LABEL_87:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(_DWORD *)(v5 + 100), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_89;
  }
LABEL_88:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, (int)a2, *(float *)(v5 + 120), a3);
  int v6 = *(_DWORD *)(v5 + 300);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_90;
  }
LABEL_89:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, (int)a2, *(float *)(v5 + 124), a3);
  if ((*(_DWORD *)(v5 + 300) & 0x80000) == 0)
  {
LABEL_21:
    if ((*(unsigned char *)(v5 + 305) & 1) == 0) {
      goto LABEL_22;
    }
    goto LABEL_91;
  }
LABEL_90:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, (int)a2, *(float *)(v5 + 128), a3);
  if ((*(unsigned char *)(v5 + 305) & 1) == 0)
  {
LABEL_22:
    int v7 = *(_DWORD *)(v5 + 300);
    if ((v7 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_92;
  }
LABEL_91:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, (int)a2, *(float *)(v5 + 248), a3);
  int v7 = *(_DWORD *)(v5 + 300);
  if ((v7 & 0x200000) == 0)
  {
LABEL_23:
    if ((v7 & 0x400000) == 0) {
      goto LABEL_24;
    }
LABEL_93:
    uint64_t v20 = *(void *)(v5 + 144);
    if (v20)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, v20, a2, a4);
      int v7 = *(_DWORD *)(v5 + 300);
      if ((v7 & 0x800000) != 0) {
        goto LABEL_97;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(void *)(qword_10047F018 + 144), a2, a4);
      int v7 = *(_DWORD *)(v5 + 300);
      if ((v7 & 0x800000) != 0) {
        goto LABEL_97;
      }
    }
LABEL_25:
    if ((v7 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_98;
  }
LABEL_92:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, (int)a2, *(float *)(v5 + 136), a3);
  int v7 = *(_DWORD *)(v5 + 300);
  if ((v7 & 0x400000) != 0) {
    goto LABEL_93;
  }
LABEL_24:
  if ((v7 & 0x800000) == 0) {
    goto LABEL_25;
  }
LABEL_97:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, *(_DWORD *)(v5 + 140), (int)a2, a4);
  int v7 = *(_DWORD *)(v5 + 300);
  if ((v7 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v7 & 0x2000000) == 0) {
      goto LABEL_27;
    }
LABEL_99:
    uint64_t v21 = *(void *)(v5 + 160);
    if (v21)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, v21, a2, a4);
      int v7 = *(_DWORD *)(v5 + 300);
      if ((v7 & 0x4000000) != 0) {
        goto LABEL_103;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, *(void *)(qword_10047F018 + 160), a2, a4);
      int v7 = *(_DWORD *)(v5 + 300);
      if ((v7 & 0x4000000) != 0) {
        goto LABEL_103;
      }
    }
LABEL_28:
    if ((v7 & 0x8000000) == 0) {
      goto LABEL_29;
    }
LABEL_107:
    uint64_t v23 = *(void *)(v5 + 176);
    if (v23)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, v23, a2, a4);
      int v7 = *(_DWORD *)(v5 + 300);
      if ((v7 & 0x10000000) != 0) {
        goto LABEL_111;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, *(void *)(qword_10047F018 + 176), a2, a4);
      int v7 = *(_DWORD *)(v5 + 300);
      if ((v7 & 0x10000000) != 0) {
        goto LABEL_111;
      }
    }
LABEL_30:
    if ((v7 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_112;
  }
LABEL_98:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, (int)a2, *(double *)(v5 + 152), a3);
  int v7 = *(_DWORD *)(v5 + 300);
  if ((v7 & 0x2000000) != 0) {
    goto LABEL_99;
  }
LABEL_27:
  if ((v7 & 0x4000000) == 0) {
    goto LABEL_28;
  }
LABEL_103:
  uint64_t v22 = *(void *)(v5 + 168);
  if (v22)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, v22, a2, a4);
    int v7 = *(_DWORD *)(v5 + 300);
    if ((v7 & 0x8000000) != 0) {
      goto LABEL_107;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, *(void *)(qword_10047F018 + 168), a2, a4);
    int v7 = *(_DWORD *)(v5 + 300);
    if ((v7 & 0x8000000) != 0) {
      goto LABEL_107;
    }
  }
LABEL_29:
  if ((v7 & 0x10000000) == 0) {
    goto LABEL_30;
  }
LABEL_111:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, *(unsigned __int8 *)(v5 + 192), (BOOL)a2, a4);
  int v7 = *(_DWORD *)(v5 + 300);
  if ((v7 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v7 & 0x40000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_113;
  }
LABEL_112:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, (int)a2, *(double *)(v5 + 184), a3);
  int v7 = *(_DWORD *)(v5 + 300);
  if ((v7 & 0x40000000) == 0)
  {
LABEL_32:
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_114;
  }
LABEL_113:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, *(unsigned __int8 *)(v5 + 193), (BOOL)a2, a4);
  if ((*(_DWORD *)(v5 + 300) & 0x80000000) == 0)
  {
LABEL_33:
    int v8 = *(_DWORD *)(v5 + 304);
    if ((v8 & 1) == 0) {
      goto LABEL_34;
    }
LABEL_115:
    uint64_t v24 = *(void *)(v5 + 200);
    if (v24)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, v24, a2, a4);
      int v8 = *(_DWORD *)(v5 + 304);
      if ((v8 & 2) != 0) {
        goto LABEL_119;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, *(void *)(qword_10047F018 + 200), a2, a4);
      int v8 = *(_DWORD *)(v5 + 304);
      if ((v8 & 2) != 0) {
        goto LABEL_119;
      }
    }
LABEL_35:
    if ((v8 & 4) == 0) {
      goto LABEL_36;
    }
    goto LABEL_120;
  }
LABEL_114:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, (int)a2, *(float *)(v5 + 196), a3);
  int v8 = *(_DWORD *)(v5 + 304);
  if (v8) {
    goto LABEL_115;
  }
LABEL_34:
  if ((v8 & 2) == 0) {
    goto LABEL_35;
  }
LABEL_119:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23, *(unsigned __int8 *)(v5 + 194), (BOOL)a2, a4);
  int v8 = *(_DWORD *)(v5 + 304);
  if ((v8 & 4) == 0)
  {
LABEL_36:
    if ((v8 & 8) == 0) {
      goto LABEL_37;
    }
LABEL_124:
    uint64_t v26 = *(void *)(v5 + 216);
    if (v26)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25, v26, a2, a4);
      if ((*(unsigned char *)(v5 + 302) & 0x10) != 0) {
        goto LABEL_128;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25, *(void *)(qword_10047F018 + 216), a2, a4);
      if ((*(unsigned char *)(v5 + 302) & 0x10) != 0) {
        goto LABEL_128;
      }
    }
LABEL_38:
    int v9 = *(_DWORD *)(v5 + 304);
    if ((v9 & 0x10) == 0) {
      goto LABEL_39;
    }
    goto LABEL_129;
  }
LABEL_120:
  uint64_t v25 = *(void *)(v5 + 208);
  if (v25)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24, v25, a2, a4);
    if ((*(_DWORD *)(v5 + 304) & 8) != 0) {
      goto LABEL_124;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24, *(void *)(qword_10047F018 + 208), a2, a4);
    if ((*(_DWORD *)(v5 + 304) & 8) != 0) {
      goto LABEL_124;
    }
  }
LABEL_37:
  if ((*(unsigned char *)(v5 + 302) & 0x10) == 0) {
    goto LABEL_38;
  }
LABEL_128:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x26, (int)a2, *(float *)(v5 + 132), a3);
  int v9 = *(_DWORD *)(v5 + 304);
  if ((v9 & 0x10) == 0)
  {
LABEL_39:
    if ((v9 & 0x20) == 0) {
      goto LABEL_40;
    }
LABEL_130:
    uint64_t v27 = *(void *)(v5 + 232);
    if (v27)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, v27, a2, a4);
      int v9 = *(_DWORD *)(v5 + 304);
      if ((v9 & 0x40) != 0) {
        goto LABEL_134;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, *(void *)(qword_10047F018 + 232), a2, a4);
      int v9 = *(_DWORD *)(v5 + 304);
      if ((v9 & 0x40) != 0) {
        goto LABEL_134;
      }
    }
LABEL_41:
    if ((v9 & 0x80) == 0) {
      goto LABEL_42;
    }
LABEL_135:
    uint64_t v28 = *(void *)(v5 + 240);
    if (v28)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, v28, a2, a4);
      int v9 = *(_DWORD *)(v5 + 304);
      if ((v9 & 0x200) != 0) {
        goto LABEL_139;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, *(void *)(qword_10047F018 + 240), a2, a4);
      int v9 = *(_DWORD *)(v5 + 304);
      if ((v9 & 0x200) != 0) {
        goto LABEL_139;
      }
    }
LABEL_43:
    if ((v9 & 0x400) == 0) {
      goto LABEL_44;
    }
    goto LABEL_140;
  }
LABEL_129:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x27, (int)a2, *(float *)(v5 + 224), a3);
  int v9 = *(_DWORD *)(v5 + 304);
  if ((v9 & 0x20) != 0) {
    goto LABEL_130;
  }
LABEL_40:
  if ((v9 & 0x40) == 0) {
    goto LABEL_41;
  }
LABEL_134:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, (int)a2, *(float *)(v5 + 228), a3);
  int v9 = *(_DWORD *)(v5 + 304);
  if ((v9 & 0x80) != 0) {
    goto LABEL_135;
  }
LABEL_42:
  if ((v9 & 0x200) == 0) {
    goto LABEL_43;
  }
LABEL_139:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B, (int)a2, *(float *)(v5 + 252), a3);
  int v9 = *(_DWORD *)(v5 + 304);
  if ((v9 & 0x400) == 0)
  {
LABEL_44:
    if ((v9 & 0x800) == 0) {
      goto LABEL_45;
    }
LABEL_144:
    uint64_t v30 = *(void *)(v5 + 264);
    if (v30)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2D, v30, a2, a4);
      int v9 = *(_DWORD *)(v5 + 304);
      if ((v9 & 0x1000) != 0) {
        goto LABEL_148;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2D, *(void *)(qword_10047F018 + 264), a2, a4);
      int v9 = *(_DWORD *)(v5 + 304);
      if ((v9 & 0x1000) != 0) {
        goto LABEL_148;
      }
    }
LABEL_46:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_47;
    }
LABEL_152:
    uint64_t v32 = *(void *)(v5 + 280);
    if (v32)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2F, v32, a2, a4);
      if ((*(_DWORD *)(v5 + 304) & 0x4000) != 0) {
        goto LABEL_156;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2F, *(void *)(qword_10047F018 + 280), a2, a4);
      if ((*(_DWORD *)(v5 + 304) & 0x4000) != 0) {
        goto LABEL_156;
      }
    }
LABEL_48:
    uint64_t v12 = *(void **)(v5 + 8);
    unsigned int v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v10 = v12;
    if (!v12) {
      return result;
    }
    goto LABEL_160;
  }
LABEL_140:
  uint64_t v29 = *(void *)(v5 + 256);
  if (v29)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2C, v29, a2, a4);
    int v9 = *(_DWORD *)(v5 + 304);
    if ((v9 & 0x800) != 0) {
      goto LABEL_144;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2C, *(void *)(qword_10047F018 + 256), a2, a4);
    int v9 = *(_DWORD *)(v5 + 304);
    if ((v9 & 0x800) != 0) {
      goto LABEL_144;
    }
  }
LABEL_45:
  if ((v9 & 0x1000) == 0) {
    goto LABEL_46;
  }
LABEL_148:
  uint64_t v31 = *(void *)(v5 + 272);
  if (v31)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2E, v31, a2, a4);
    int v9 = *(_DWORD *)(v5 + 304);
    if ((v9 & 0x2000) != 0) {
      goto LABEL_152;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2E, *(void *)(qword_10047F018 + 272), a2, a4);
    int v9 = *(_DWORD *)(v5 + 304);
    if ((v9 & 0x2000) != 0) {
      goto LABEL_152;
    }
  }
LABEL_47:
  if ((v9 & 0x4000) == 0) {
    goto LABEL_48;
  }
LABEL_156:
  uint64_t v33 = *(void *)(v5 + 288);
  if (v33)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x30, v33, a2, a4);
    signed int v34 = *(void **)(v5 + 8);
    unsigned int v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v10 = v34;
    if (!v34) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x30, *(void *)(qword_10047F018 + 288), a2, a4);
    int v35 = *(void **)(v5 + 8);
    unsigned int v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v10 = v35;
    if (!v35) {
      return result;
    }
  }
LABEL_160:
  if (*v10 != v10[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v11, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001C669C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 75);
  if (v5)
  {
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
    *(unsigned char *)a2 = 8;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v7, (unint64_t)a2 + 1, a3);
    if ((*((_DWORD *)this + 75) & 2) == 0)
    {
LABEL_3:
      if ((*((unsigned char *)this + 300) & 4) == 0) {
        goto LABEL_4;
      }
LABEL_15:
      int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 7);
      *(unsigned char *)uint64_t v3 = 24;
      unint64_t v10 = (unint64_t)v3 + 1;
      if ((v9 & 0x80000000) != 0)
      {
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v9, v10, a3);
        if ((*((unsigned char *)this + 300) & 8) != 0) {
          goto LABEL_22;
        }
      }
      else if (v9 > 0x7F)
      {
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v10, a3);
        if ((*((unsigned char *)this + 300) & 8) != 0) {
          goto LABEL_22;
        }
      }
      else
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v9;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        if ((*((unsigned char *)this + 300) & 8) != 0) {
          goto LABEL_22;
        }
      }
LABEL_5:
      if ((*((unsigned char *)this + 300) & 0x10) == 0) {
        goto LABEL_6;
      }
LABEL_29:
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 9);
      *(unsigned char *)uint64_t v3 = 40;
      unint64_t v14 = (unint64_t)v3 + 1;
      if ((v13 & 0x80000000) != 0)
      {
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v13, v14, a3);
        int v6 = *((_DWORD *)this + 75);
        if ((v6 & 0x20) != 0) {
          goto LABEL_36;
        }
      }
      else if (v13 > 0x7F)
      {
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v14, a3);
        int v6 = *((_DWORD *)this + 75);
        if ((v6 & 0x20) != 0) {
          goto LABEL_36;
        }
      }
      else
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v13;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        int v6 = *((_DWORD *)this + 75);
        if ((v6 & 0x20) != 0) {
          goto LABEL_36;
        }
      }
LABEL_7:
      if ((v6 & 0x40) == 0) {
        goto LABEL_8;
      }
LABEL_37:
      int v16 = *((_DWORD *)this + 11);
      *(unsigned char *)uint64_t v3 = 69;
      *(_DWORD *)((char *)v3 + 1) = v16;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
      if ((*((_DWORD *)this + 75) & 0x80) == 0) {
        goto LABEL_53;
      }
      goto LABEL_38;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  *(unsigned char *)uint64_t v3 = 16;
  if (v8 > 0x7F)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)v3 + 1, a3);
    if ((*((unsigned char *)this + 300) & 4) != 0) {
      goto LABEL_15;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v8;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((unsigned char *)this + 300) & 4) != 0) {
      goto LABEL_15;
    }
  }
LABEL_4:
  if ((*((unsigned char *)this + 300) & 8) == 0) {
    goto LABEL_5;
  }
LABEL_22:
  unsigned int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
  *(unsigned char *)uint64_t v3 = 32;
  unint64_t v12 = (unint64_t)v3 + 1;
  if ((v11 & 0x80000000) != 0)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v11, v12, a3);
    if ((*((unsigned char *)this + 300) & 0x10) != 0) {
      goto LABEL_29;
    }
  }
  else if (v11 > 0x7F)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v12, a3);
    if ((*((unsigned char *)this + 300) & 0x10) != 0) {
      goto LABEL_29;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v11;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((unsigned char *)this + 300) & 0x10) != 0) {
      goto LABEL_29;
    }
  }
LABEL_6:
  int v6 = *((_DWORD *)this + 75);
  if ((v6 & 0x20) == 0) {
    goto LABEL_7;
  }
LABEL_36:
  int v15 = *((_DWORD *)this + 10);
  *(unsigned char *)uint64_t v3 = 61;
  *(_DWORD *)((char *)v3 + 1) = v15;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  int v6 = *((_DWORD *)this + 75);
  if ((v6 & 0x40) != 0) {
    goto LABEL_37;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    goto LABEL_53;
  }
LABEL_38:
  uint64_t v17 = (_DWORD *)*((void *)this + 6);
  if (v17)
  {
    *(unsigned char *)uint64_t v3 = 74;
    unsigned int v18 = v3 + 1;
    uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17[7];
    if (v19 <= 0x7F) {
      goto LABEL_40;
    }
LABEL_43:
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, v18, a3);
    int v20 = v17[8];
    if ((v20 & 1) == 0) {
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  uint64_t v17 = *(_DWORD **)(qword_10047F018 + 48);
  *(unsigned char *)uint64_t v3 = 74;
  unsigned int v18 = v3 + 1;
  uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17[7];
  if (v19 > 0x7F) {
    goto LABEL_43;
  }
LABEL_40:
  *((unsigned char *)v3 + 1) = (_BYTE)v19;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  int v20 = v17[8];
  if (v20)
  {
LABEL_44:
    int v21 = v17[4];
    *(unsigned char *)uint64_t v3 = 13;
    *(_DWORD *)((char *)v3 + 1) = v21;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    int v20 = v17[8];
  }
LABEL_45:
  if ((v20 & 2) != 0)
  {
    int v25 = v17[5];
    *(unsigned char *)uint64_t v3 = 21;
    *(_DWORD *)((char *)v3 + 1) = v25;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    if ((v17[8] & 4) == 0)
    {
LABEL_47:
      uint64_t v24 = (void *)*((void *)v17 + 1);
      uint64_t v23 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v17 + 2);
      uint64_t v22 = v24;
      if (!v24) {
        goto LABEL_53;
      }
      goto LABEL_51;
    }
  }
  else if ((v20 & 4) == 0)
  {
    goto LABEL_47;
  }
  int v26 = v17[6];
  *(unsigned char *)uint64_t v3 = 29;
  *(_DWORD *)((char *)v3 + 1) = v26;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  uint64_t v27 = (void *)*((void *)v17 + 1);
  uint64_t v23 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v17 + 2);
  uint64_t v22 = v27;
  if (!v27) {
    goto LABEL_53;
  }
LABEL_51:
  if (*v22 != v22[1]) {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v23, v3, a3);
  }
LABEL_53:
  int v28 = *((_DWORD *)this + 75);
  if ((v28 & 0x100) != 0)
  {
    uint64_t v29 = (unsigned int *)*((void *)this + 7);
    if (v29)
    {
      *(unsigned char *)uint64_t v3 = 82;
      unsigned int v30 = v3 + 1;
      uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v29[10];
      if (v31 <= 0x7F) {
        goto LABEL_63;
      }
    }
    else
    {
      uint64_t v29 = *(unsigned int **)(qword_10047F018 + 56);
      *(unsigned char *)uint64_t v3 = 82;
      unsigned int v30 = v3 + 1;
      uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v29[10];
      if (v31 <= 0x7F)
      {
LABEL_63:
        *((unsigned char *)v3 + 1) = (_BYTE)v31;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001C0AFC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v29, (uint64_t)v3 + 2, a3);
        int v28 = *((_DWORD *)this + 75);
        if ((v28 & 0x200) != 0) {
          goto LABEL_67;
        }
LABEL_55:
        if ((v28 & 0x400) == 0) {
          goto LABEL_56;
        }
LABEL_73:
        int v39 = (unsigned int *)*((void *)this + 9);
        if (v39)
        {
          *(unsigned char *)uint64_t v3 = 98;
          unsigned int v40 = v3 + 1;
          uint64_t v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v39[11];
          if (v41 <= 0x7F) {
            goto LABEL_75;
          }
        }
        else
        {
          int v39 = *(unsigned int **)(qword_10047F018 + 72);
          *(unsigned char *)uint64_t v3 = 98;
          unsigned int v40 = v3 + 1;
          uint64_t v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v39[11];
          if (v41 <= 0x7F)
          {
LABEL_75:
            *((unsigned char *)v3 + 1) = (_BYTE)v41;
            uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001BF5C8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v39, (uint64_t)v3 + 2, a3);
            int v28 = *((_DWORD *)this + 75);
            if ((v28 & 0x800) != 0) {
              goto LABEL_79;
            }
LABEL_57:
            if ((v28 & 0x1000) == 0) {
              goto LABEL_58;
            }
LABEL_80:
            uint64_t v45 = *((void *)this + 10);
            if (v45)
            {
              *(unsigned char *)uint64_t v3 = 114;
              unsigned int v46 = v3 + 1;
              int v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v45 + 40);
              if (v47 <= 0x7F) {
                goto LABEL_82;
              }
            }
            else
            {
              uint64_t v45 = *(void *)(qword_10047F018 + 80);
              *(unsigned char *)uint64_t v3 = 114;
              unsigned int v46 = v3 + 1;
              int v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v45 + 40);
              if (v47 <= 0x7F)
              {
LABEL_82:
                *((unsigned char *)v3 + 1) = (_BYTE)v47;
                uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001C2838(v45, (uint64_t)v3 + 2, a3);
                int v28 = *((_DWORD *)this + 75);
                if ((v28 & 0x2000) != 0) {
                  goto LABEL_86;
                }
LABEL_59:
                if ((v28 & 0x4000) == 0) {
                  goto LABEL_107;
                }
                goto LABEL_92;
              }
            }
            uint64_t v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v47, v46, a3);
            uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001C2838(v45, v48, v49);
            int v28 = *((_DWORD *)this + 75);
            if ((v28 & 0x2000) != 0) {
              goto LABEL_86;
            }
            goto LABEL_59;
          }
        }
        uint64_t v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v41, v40, a3);
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001BF5C8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v39, v42, v43);
        int v28 = *((_DWORD *)this + 75);
        if ((v28 & 0x800) != 0) {
          goto LABEL_79;
        }
        goto LABEL_57;
      }
    }
    uint64_t v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, v30, a3);
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001C0AFC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v29, v32, v33);
    int v28 = *((_DWORD *)this + 75);
    if ((v28 & 0x200) != 0) {
      goto LABEL_67;
    }
    goto LABEL_55;
  }
  if ((v28 & 0x200) == 0) {
    goto LABEL_55;
  }
LABEL_67:
  signed int v34 = (unsigned int *)*((void *)this + 8);
  if (v34)
  {
    *(unsigned char *)uint64_t v3 = 90;
    unsigned int v35 = v3 + 1;
    uint64_t v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34[10];
    if (v36 <= 0x7F) {
      goto LABEL_69;
    }
LABEL_72:
    uint64_t v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v36, v35, a3);
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001C18FC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v34, v37, v38);
    int v28 = *((_DWORD *)this + 75);
    if ((v28 & 0x400) != 0) {
      goto LABEL_73;
    }
    goto LABEL_56;
  }
  signed int v34 = *(unsigned int **)(qword_10047F018 + 64);
  *(unsigned char *)uint64_t v3 = 90;
  unsigned int v35 = v3 + 1;
  uint64_t v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34[10];
  if (v36 > 0x7F) {
    goto LABEL_72;
  }
LABEL_69:
  *((unsigned char *)v3 + 1) = (_BYTE)v36;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001C18FC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v34, (uint64_t)v3 + 2, a3);
  int v28 = *((_DWORD *)this + 75);
  if ((v28 & 0x400) != 0) {
    goto LABEL_73;
  }
LABEL_56:
  if ((v28 & 0x800) == 0) {
    goto LABEL_57;
  }
LABEL_79:
  int v44 = *((_DWORD *)this + 24);
  *(unsigned char *)uint64_t v3 = 109;
  *(_DWORD *)((char *)v3 + 1) = v44;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  int v28 = *((_DWORD *)this + 75);
  if ((v28 & 0x1000) != 0) {
    goto LABEL_80;
  }
LABEL_58:
  if ((v28 & 0x2000) == 0) {
    goto LABEL_59;
  }
LABEL_86:
  int v50 = (unsigned int *)*((void *)this + 11);
  if (v50)
  {
    *(unsigned char *)uint64_t v3 = 122;
    unsigned int v51 = v3 + 1;
    int v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v50[18];
    if (v52 <= 0x7F) {
      goto LABEL_88;
    }
LABEL_91:
    int v53 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v52, v51, a3);
    uint64_t v3 = sub_1001C36A8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v50, v53, v54);
    if ((*((_DWORD *)this + 75) & 0x4000) == 0) {
      goto LABEL_107;
    }
    goto LABEL_92;
  }
  int v50 = *(unsigned int **)(qword_10047F018 + 88);
  *(unsigned char *)uint64_t v3 = 122;
  unsigned int v51 = v3 + 1;
  int v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v50[18];
  if (v52 > 0x7F) {
    goto LABEL_91;
  }
LABEL_88:
  *((unsigned char *)v3 + 1) = (_BYTE)v52;
  uint64_t v3 = sub_1001C36A8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v50, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2), a3);
  if ((*((_DWORD *)this + 75) & 0x4000) == 0) {
    goto LABEL_107;
  }
LABEL_92:
  uint64_t v55 = *((void *)this + 13);
  if (v55)
  {
    *(_WORD *)uint64_t v3 = 386;
    unsigned int v56 = v3 + 2;
    int v57 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v55 + 36);
    if (v57 <= 0x7F) {
      goto LABEL_94;
    }
LABEL_97:
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v57, v56, a3);
    int v58 = *(_DWORD *)(v55 + 40);
    if ((v58 & 1) == 0) {
      goto LABEL_99;
    }
    goto LABEL_98;
  }
  uint64_t v55 = *(void *)(qword_10047F018 + 104);
  *(_WORD *)uint64_t v3 = 386;
  unsigned int v56 = v3 + 2;
  int v57 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v55 + 36);
  if (v57 > 0x7F) {
    goto LABEL_97;
  }
LABEL_94:
  *((unsigned char *)v3 + 2) = (_BYTE)v57;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
  int v58 = *(_DWORD *)(v55 + 40);
  if (v58)
  {
LABEL_98:
    int v59 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v55 + 16);
    *(unsigned char *)uint64_t v3 = 8;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v59, (unint64_t)v3 + 1, a3);
    int v58 = *(_DWORD *)(v55 + 40);
  }
LABEL_99:
  if ((v58 & 2) != 0)
  {
    int v63 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v55 + 24);
    *(unsigned char *)uint64_t v3 = 16;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v63, (unint64_t)v3 + 1, a3);
    if ((*(_DWORD *)(v55 + 40) & 4) == 0)
    {
LABEL_101:
      int v62 = *(void **)(v55 + 8);
      int v61 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v55 + 8);
      int v60 = v62;
      if (!v62) {
        goto LABEL_107;
      }
      goto LABEL_105;
    }
  }
  else if ((v58 & 4) == 0)
  {
    goto LABEL_101;
  }
  int v64 = *(_DWORD *)(v55 + 32);
  *(unsigned char *)uint64_t v3 = 29;
  *(_DWORD *)((char *)v3 + 1) = v64;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  int v65 = *(void **)(v55 + 8);
  int v61 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v55 + 8);
  int v60 = v65;
  if (!v65) {
    goto LABEL_107;
  }
LABEL_105:
  if (*v60 != v60[1]) {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v61, v3, a3);
  }
LABEL_107:
  int v66 = *((_DWORD *)this + 75);
  if ((v66 & 0x8000) == 0)
  {
    if ((v66 & 0x10000) == 0) {
      goto LABEL_109;
    }
LABEL_117:
    int v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 25);
    *(_WORD *)uint64_t v3 = 400;
    unint64_t v71 = (unint64_t)v3 + 2;
    if ((v70 & 0x80000000) != 0)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v70, v71, a3);
      int v67 = *((_DWORD *)this + 75);
      if ((v67 & 0x20000) != 0) {
        goto LABEL_124;
      }
    }
    else if (v70 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v70, v71, a3);
      int v67 = *((_DWORD *)this + 75);
      if ((v67 & 0x20000) != 0) {
        goto LABEL_124;
      }
    }
    else
    {
      *((unsigned char *)v3 + 2) = (_BYTE)v70;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
      int v67 = *((_DWORD *)this + 75);
      if ((v67 & 0x20000) != 0) {
        goto LABEL_124;
      }
    }
LABEL_110:
    if ((v67 & 0x40000) == 0) {
      goto LABEL_111;
    }
    goto LABEL_125;
  }
  uint64_t v69 = *((void *)this + 14);
  *(_WORD *)uint64_t v3 = 393;
  *(void *)((char *)v3 + 2) = v69;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 10);
  if ((*((_DWORD *)this + 75) & 0x10000) != 0) {
    goto LABEL_117;
  }
LABEL_109:
  int v67 = *((_DWORD *)this + 75);
  if ((v67 & 0x20000) == 0) {
    goto LABEL_110;
  }
LABEL_124:
  int v72 = *((_DWORD *)this + 30);
  *(_WORD *)uint64_t v3 = 413;
  *(_DWORD *)((char *)v3 + 2) = v72;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 6);
  int v67 = *((_DWORD *)this + 75);
  if ((v67 & 0x40000) == 0)
  {
LABEL_111:
    if ((v67 & 0x80000) == 0) {
      goto LABEL_112;
    }
    goto LABEL_126;
  }
LABEL_125:
  int v73 = *((_DWORD *)this + 31);
  *(_WORD *)uint64_t v3 = 421;
  *(_DWORD *)((char *)v3 + 2) = v73;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 6);
  if ((*((_DWORD *)this + 75) & 0x80000) == 0)
  {
LABEL_112:
    if ((*((unsigned char *)this + 305) & 1) == 0) {
      goto LABEL_113;
    }
    goto LABEL_127;
  }
LABEL_126:
  int v74 = *((_DWORD *)this + 32);
  *(_WORD *)uint64_t v3 = 429;
  *(_DWORD *)((char *)v3 + 2) = v74;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 6);
  if ((*((unsigned char *)this + 305) & 1) == 0)
  {
LABEL_113:
    int v68 = *((_DWORD *)this + 75);
    if ((v68 & 0x200000) == 0) {
      goto LABEL_114;
    }
LABEL_128:
    int v76 = *((_DWORD *)this + 34);
    *(_WORD *)uint64_t v3 = 445;
    *(_DWORD *)((char *)v3 + 2) = v76;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 6);
    if ((*((_DWORD *)this + 75) & 0x400000) == 0) {
      goto LABEL_139;
    }
    goto LABEL_129;
  }
LABEL_127:
  int v75 = *((_DWORD *)this + 62);
  *(_WORD *)uint64_t v3 = 437;
  *(_DWORD *)((char *)v3 + 2) = v75;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 6);
  int v68 = *((_DWORD *)this + 75);
  if ((v68 & 0x200000) != 0) {
    goto LABEL_128;
  }
LABEL_114:
  if ((v68 & 0x400000) == 0) {
    goto LABEL_139;
  }
LABEL_129:
  uint64_t v77 = *((void *)this + 18);
  if (v77)
  {
    *(_WORD *)uint64_t v3 = 450;
    unsigned int v78 = v3 + 2;
    int v79 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v77 + 20);
    if (v79 <= 0x7F) {
      goto LABEL_131;
    }
  }
  else
  {
    uint64_t v77 = *(void *)(qword_10047F018 + 144);
    *(_WORD *)uint64_t v3 = 450;
    unsigned int v78 = v3 + 2;
    int v79 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v77 + 20);
    if (v79 <= 0x7F)
    {
LABEL_131:
      *((unsigned char *)v3 + 2) = (_BYTE)v79;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
      if ((*(unsigned char *)(v77 + 24) & 1) == 0) {
        goto LABEL_136;
      }
      goto LABEL_135;
    }
  }
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v79, v78, a3);
  if (*(unsigned char *)(v77 + 24))
  {
LABEL_135:
    int v80 = *(_DWORD *)(v77 + 16);
    *(unsigned char *)uint64_t v3 = 13;
    *(_DWORD *)((char *)v3 + 1) = v80;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
  }
LABEL_136:
  int v83 = *(void **)(v77 + 8);
  int v82 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v77 + 8);
  int v81 = v83;
  if (v83 && *v81 != v81[1]) {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v82, v3, a3);
  }
LABEL_139:
  if ((*((unsigned char *)this + 302) & 0x80) != 0)
  {
    int v87 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 35);
    *(_WORD *)uint64_t v3 = 456;
    unint64_t v88 = (unint64_t)v3 + 2;
    if ((v87 & 0x80000000) != 0)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v87, v88, a3);
      int v84 = *((_DWORD *)this + 75);
      if ((v84 & 0x1000000) != 0) {
        goto LABEL_167;
      }
    }
    else if (v87 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v87, v88, a3);
      int v84 = *((_DWORD *)this + 75);
      if ((v84 & 0x1000000) != 0) {
        goto LABEL_167;
      }
    }
    else
    {
      *((unsigned char *)v3 + 2) = (_BYTE)v87;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
      int v84 = *((_DWORD *)this + 75);
      if ((v84 & 0x1000000) != 0) {
        goto LABEL_167;
      }
    }
LABEL_141:
    if ((v84 & 0x2000000) == 0) {
      goto LABEL_142;
    }
LABEL_168:
    v90 = (unsigned int *)*((void *)this + 20);
    if (v90)
    {
      *(_WORD *)uint64_t v3 = 474;
      unsigned int v91 = v3 + 2;
      int v92 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v90[10];
      if (v92 <= 0x7F) {
        goto LABEL_170;
      }
    }
    else
    {
      v90 = *(unsigned int **)(qword_10047F018 + 160);
      *(_WORD *)uint64_t v3 = 474;
      unsigned int v91 = v3 + 2;
      int v92 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v90[10];
      if (v92 <= 0x7F)
      {
LABEL_170:
        *((unsigned char *)v3 + 2) = (_BYTE)v92;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001C557C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v90, (uint64_t)v3 + 3, a3);
        int v84 = *((_DWORD *)this + 75);
        if ((v84 & 0x4000000) != 0) {
          goto LABEL_174;
        }
LABEL_143:
        if ((v84 & 0x8000000) == 0) {
          goto LABEL_144;
        }
LABEL_180:
        uint64_t v100 = *((void *)this + 22);
        if (v100)
        {
          *(_WORD *)uint64_t v3 = 490;
          unsigned int v101 = v3 + 2;
          int v102 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v100 + 72);
          if (v102 <= 0x7F) {
            goto LABEL_182;
          }
        }
        else
        {
          uint64_t v100 = *(void *)(qword_10047F018 + 176);
          *(_WORD *)uint64_t v3 = 490;
          unsigned int v101 = v3 + 2;
          int v102 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v100 + 72);
          if (v102 <= 0x7F)
          {
LABEL_182:
            *((unsigned char *)v3 + 2) = (_BYTE)v102;
            uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001C4A6C(v100, (uint64_t)v3 + 3, a3);
            int v84 = *((_DWORD *)this + 75);
            if ((v84 & 0x10000000) != 0) {
              goto LABEL_186;
            }
LABEL_145:
            if ((v84 & 0x20000000) == 0) {
              goto LABEL_146;
            }
            goto LABEL_187;
          }
        }
        uint64_t v103 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v102, v101, a3);
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001C4A6C(v100, v103, v104);
        int v84 = *((_DWORD *)this + 75);
        if ((v84 & 0x10000000) != 0) {
          goto LABEL_186;
        }
        goto LABEL_145;
      }
    }
    uint64_t v93 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v92, v91, a3);
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001C557C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v90, v93, v94);
    int v84 = *((_DWORD *)this + 75);
    if ((v84 & 0x4000000) != 0) {
      goto LABEL_174;
    }
    goto LABEL_143;
  }
  int v84 = *((_DWORD *)this + 75);
  if ((v84 & 0x1000000) == 0) {
    goto LABEL_141;
  }
LABEL_167:
  uint64_t v89 = *((void *)this + 19);
  *(_WORD *)uint64_t v3 = 465;
  *(void *)((char *)v3 + 2) = v89;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 10);
  int v84 = *((_DWORD *)this + 75);
  if ((v84 & 0x2000000) != 0) {
    goto LABEL_168;
  }
LABEL_142:
  if ((v84 & 0x4000000) == 0) {
    goto LABEL_143;
  }
LABEL_174:
  uint64_t v95 = *((void *)this + 21);
  if (v95)
  {
    *(_WORD *)uint64_t v3 = 482;
    unsigned int v96 = v3 + 2;
    int v97 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v95 + 52);
    if (v97 <= 0x7F) {
      goto LABEL_176;
    }
LABEL_179:
    uint64_t v98 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v97, v96, a3);
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001DA5C0(v95, v98, v99);
    int v84 = *((_DWORD *)this + 75);
    if ((v84 & 0x8000000) != 0) {
      goto LABEL_180;
    }
    goto LABEL_144;
  }
  uint64_t v95 = *(void *)(qword_10047F018 + 168);
  *(_WORD *)uint64_t v3 = 482;
  unsigned int v96 = v3 + 2;
  int v97 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v95 + 52);
  if (v97 > 0x7F) {
    goto LABEL_179;
  }
LABEL_176:
  *((unsigned char *)v3 + 2) = (_BYTE)v97;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001DA5C0(v95, (uint64_t)v3 + 3, a3);
  int v84 = *((_DWORD *)this + 75);
  if ((v84 & 0x8000000) != 0) {
    goto LABEL_180;
  }
LABEL_144:
  if ((v84 & 0x10000000) == 0) {
    goto LABEL_145;
  }
LABEL_186:
  char v105 = *((unsigned char *)this + 192);
  *(_WORD *)uint64_t v3 = 496;
  *((unsigned char *)v3 + 2) = v105;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
  int v84 = *((_DWORD *)this + 75);
  if ((v84 & 0x20000000) == 0)
  {
LABEL_146:
    if ((v84 & 0x40000000) == 0) {
      goto LABEL_147;
    }
    goto LABEL_188;
  }
LABEL_187:
  uint64_t v106 = *((void *)this + 23);
  *(_WORD *)uint64_t v3 = 505;
  *(void *)((char *)v3 + 2) = v106;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 10);
  int v84 = *((_DWORD *)this + 75);
  if ((v84 & 0x40000000) == 0)
  {
LABEL_147:
    if ((v84 & 0x80000000) == 0) {
      goto LABEL_148;
    }
    goto LABEL_189;
  }
LABEL_188:
  char v107 = *((unsigned char *)this + 193);
  *(_WORD *)uint64_t v3 = 640;
  *((unsigned char *)v3 + 2) = v107;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
  if ((*((_DWORD *)this + 75) & 0x80000000) == 0)
  {
LABEL_148:
    int v85 = *((_DWORD *)this + 76);
    if ((v85 & 1) == 0) {
      goto LABEL_149;
    }
LABEL_190:
    uint64_t v109 = *((void *)this + 25);
    if (v109)
    {
      *(_WORD *)uint64_t v3 = 658;
      unsigned int v110 = v3 + 2;
      v111 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v109 + 40);
      if (v111 <= 0x7F) {
        goto LABEL_192;
      }
    }
    else
    {
      uint64_t v109 = *(void *)(qword_10047F018 + 200);
      *(_WORD *)uint64_t v3 = 658;
      unsigned int v110 = v3 + 2;
      v111 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v109 + 40);
      if (v111 <= 0x7F)
      {
LABEL_192:
        *((unsigned char *)v3 + 2) = (_BYTE)v111;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001BEAC8(v109, (unsigned char *)v3 + 3, a3);
        int v85 = *((_DWORD *)this + 76);
        if ((v85 & 2) != 0) {
          goto LABEL_196;
        }
LABEL_150:
        if ((v85 & 4) == 0) {
          goto LABEL_151;
        }
        goto LABEL_197;
      }
    }
    v112 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v111, v110, a3);
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001BEAC8(v109, v112, v113);
    int v85 = *((_DWORD *)this + 76);
    if ((v85 & 2) != 0) {
      goto LABEL_196;
    }
    goto LABEL_150;
  }
LABEL_189:
  int v108 = *((_DWORD *)this + 49);
  *(_WORD *)uint64_t v3 = 653;
  *(_DWORD *)((char *)v3 + 2) = v108;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 6);
  int v85 = *((_DWORD *)this + 76);
  if (v85) {
    goto LABEL_190;
  }
LABEL_149:
  if ((v85 & 2) == 0) {
    goto LABEL_150;
  }
LABEL_196:
  char v114 = *((unsigned char *)this + 194);
  *(_WORD *)uint64_t v3 = 664;
  *((unsigned char *)v3 + 2) = v114;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
  int v85 = *((_DWORD *)this + 76);
  if ((v85 & 4) == 0)
  {
LABEL_151:
    if ((v85 & 8) == 0) {
      goto LABEL_152;
    }
LABEL_203:
    v120 = (unsigned int *)*((void *)this + 27);
    if (v120)
    {
      *(_WORD *)uint64_t v3 = 682;
      unsigned int v121 = v3 + 2;
      v122 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v120[8];
      if (v122 <= 0x7F) {
        goto LABEL_205;
      }
    }
    else
    {
      v120 = *(unsigned int **)(qword_10047F018 + 216);
      *(_WORD *)uint64_t v3 = 682;
      unsigned int v121 = v3 + 2;
      v122 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v120[8];
      if (v122 <= 0x7F)
      {
LABEL_205:
        *((unsigned char *)v3 + 2) = (_BYTE)v122;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001CA82C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v120, (uint64_t)v3 + 3, a3);
        if ((*((unsigned char *)this + 302) & 0x10) != 0) {
          goto LABEL_209;
        }
LABEL_153:
        int v86 = *((_DWORD *)this + 76);
        if ((v86 & 0x10) == 0) {
          goto LABEL_154;
        }
        goto LABEL_210;
      }
    }
    uint64_t v123 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v122, v121, a3);
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001CA82C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v120, v123, v124);
    if ((*((unsigned char *)this + 302) & 0x10) != 0) {
      goto LABEL_209;
    }
    goto LABEL_153;
  }
LABEL_197:
  uint64_t v115 = *((void *)this + 26);
  if (v115)
  {
    *(_WORD *)uint64_t v3 = 674;
    unsigned int v116 = v3 + 2;
    v117 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v115 + 56);
    if (v117 <= 0x7F) {
      goto LABEL_199;
    }
LABEL_202:
    v118 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v117, v116, a3);
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001C9E34(v115, v118, v119);
    if ((*((_DWORD *)this + 76) & 8) != 0) {
      goto LABEL_203;
    }
    goto LABEL_152;
  }
  uint64_t v115 = *(void *)(qword_10047F018 + 208);
  *(_WORD *)uint64_t v3 = 674;
  unsigned int v116 = v3 + 2;
  v117 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v115 + 56);
  if (v117 > 0x7F) {
    goto LABEL_202;
  }
LABEL_199:
  *((unsigned char *)v3 + 2) = (_BYTE)v117;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001C9E34(v115, (unsigned char *)v3 + 3, a3);
  if ((*((_DWORD *)this + 76) & 8) != 0) {
    goto LABEL_203;
  }
LABEL_152:
  if ((*((unsigned char *)this + 302) & 0x10) == 0) {
    goto LABEL_153;
  }
LABEL_209:
  int v125 = *((_DWORD *)this + 33);
  *(_WORD *)uint64_t v3 = 693;
  *(_DWORD *)((char *)v3 + 2) = v125;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 6);
  int v86 = *((_DWORD *)this + 76);
  if ((v86 & 0x10) == 0)
  {
LABEL_154:
    if ((v86 & 0x20) == 0) {
      goto LABEL_155;
    }
LABEL_211:
    uint64_t v127 = *((void *)this + 29);
    if (v127)
    {
      *(_WORD *)uint64_t v3 = 706;
      unsigned int v128 = v3 + 2;
      v129 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v127 + 40);
      if (v129 <= 0x7F) {
        goto LABEL_213;
      }
    }
    else
    {
      uint64_t v127 = *(void *)(qword_10047F018 + 232);
      *(_WORD *)uint64_t v3 = 706;
      unsigned int v128 = v3 + 2;
      v129 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v127 + 40);
      if (v129 <= 0x7F)
      {
LABEL_213:
        *((unsigned char *)v3 + 2) = (_BYTE)v129;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001BEAC8(v127, (unsigned char *)v3 + 3, a3);
        int v86 = *((_DWORD *)this + 76);
        if ((v86 & 0x40) != 0) {
          goto LABEL_217;
        }
LABEL_156:
        if ((v86 & 0x80) == 0) {
          goto LABEL_157;
        }
        goto LABEL_218;
      }
    }
    v130 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v129, v128, a3);
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001BEAC8(v127, v130, v131);
    int v86 = *((_DWORD *)this + 76);
    if ((v86 & 0x40) != 0) {
      goto LABEL_217;
    }
    goto LABEL_156;
  }
LABEL_210:
  int v126 = *((_DWORD *)this + 56);
  *(_WORD *)uint64_t v3 = 701;
  *(_DWORD *)((char *)v3 + 2) = v126;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 6);
  int v86 = *((_DWORD *)this + 76);
  if ((v86 & 0x20) != 0) {
    goto LABEL_211;
  }
LABEL_155:
  if ((v86 & 0x40) == 0) {
    goto LABEL_156;
  }
LABEL_217:
  int v132 = *((_DWORD *)this + 57);
  *(_WORD *)uint64_t v3 = 717;
  *(_DWORD *)((char *)v3 + 2) = v132;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 6);
  int v86 = *((_DWORD *)this + 76);
  if ((v86 & 0x80) == 0)
  {
LABEL_157:
    if ((v86 & 0x200) == 0) {
      goto LABEL_158;
    }
LABEL_224:
    int v138 = *((_DWORD *)this + 63);
    *(_WORD *)uint64_t v3 = 733;
    *(_DWORD *)((char *)v3 + 2) = v138;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 6);
    if ((*((_DWORD *)this + 76) & 0x400) == 0) {
      goto LABEL_238;
    }
    goto LABEL_225;
  }
LABEL_218:
  v133 = (unsigned int *)*((void *)this + 30);
  if (v133)
  {
    *(_WORD *)uint64_t v3 = 722;
    unsigned int v134 = v3 + 2;
    v135 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v133[10];
    if (v135 <= 0x7F) {
      goto LABEL_220;
    }
LABEL_223:
    uint64_t v136 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v135, v134, a3);
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001C18FC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v133, v136, v137);
    int v86 = *((_DWORD *)this + 76);
    if ((v86 & 0x200) != 0) {
      goto LABEL_224;
    }
    goto LABEL_158;
  }
  v133 = *(unsigned int **)(qword_10047F018 + 240);
  *(_WORD *)uint64_t v3 = 722;
  unsigned int v134 = v3 + 2;
  v135 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v133[10];
  if (v135 > 0x7F) {
    goto LABEL_223;
  }
LABEL_220:
  *((unsigned char *)v3 + 2) = (_BYTE)v135;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001C18FC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v133, (uint64_t)v3 + 3, a3);
  int v86 = *((_DWORD *)this + 76);
  if ((v86 & 0x200) != 0) {
    goto LABEL_224;
  }
LABEL_158:
  if ((v86 & 0x400) == 0) {
    goto LABEL_238;
  }
LABEL_225:
  uint64_t v139 = *((void *)this + 32);
  if (v139)
  {
    *(_WORD *)uint64_t v3 = 738;
    unsigned int v140 = v3 + 2;
    v141 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v139 + 32);
    if (v141 <= 0x7F) {
      goto LABEL_227;
    }
LABEL_230:
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v141, v140, a3);
    int v142 = *(_DWORD *)(v139 + 36);
    if ((v142 & 1) == 0) {
      goto LABEL_232;
    }
    goto LABEL_231;
  }
  uint64_t v139 = *(void *)(qword_10047F018 + 256);
  *(_WORD *)uint64_t v3 = 738;
  unsigned int v140 = v3 + 2;
  v141 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v139 + 32);
  if (v141 > 0x7F) {
    goto LABEL_230;
  }
LABEL_227:
  *((unsigned char *)v3 + 2) = (_BYTE)v141;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
  int v142 = *(_DWORD *)(v139 + 36);
  if (v142)
  {
LABEL_231:
    uint64_t v143 = *(void *)(v139 + 16);
    *(unsigned char *)uint64_t v3 = 9;
    *(void *)((char *)v3 + 1) = v143;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
    int v142 = *(_DWORD *)(v139 + 36);
  }
LABEL_232:
  if ((v142 & 2) != 0)
  {
    uint64_t v147 = *(void *)(v139 + 24);
    *(unsigned char *)uint64_t v3 = 17;
    *(void *)((char *)v3 + 1) = v147;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
    v148 = *(void **)(v139 + 8);
    v145 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v139 + 8);
    v144 = v148;
    if (!v148) {
      goto LABEL_238;
    }
  }
  else
  {
    v146 = *(void **)(v139 + 8);
    v145 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v139 + 8);
    v144 = v146;
    if (!v146) {
      goto LABEL_238;
    }
  }
  if (*v144 != v144[1]) {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v145, v3, a3);
  }
LABEL_238:
  int v149 = *((_DWORD *)this + 76);
  if ((v149 & 0x800) != 0)
  {
    v153 = (unsigned int *)*((void *)this + 33);
    if (v153)
    {
      *(_WORD *)uint64_t v3 = 746;
      unsigned int v154 = v3 + 2;
      v155 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v153[14];
      if (v155 <= 0x7F) {
        goto LABEL_246;
      }
    }
    else
    {
      v153 = *(unsigned int **)(qword_10047F018 + 264);
      *(_WORD *)uint64_t v3 = 746;
      unsigned int v154 = v3 + 2;
      v155 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v153[14];
      if (v155 <= 0x7F)
      {
LABEL_246:
        *((unsigned char *)v3 + 2) = (_BYTE)v155;
        uint64_t v3 = sub_1001DC9D0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v153, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3), a3);
        int v149 = *((_DWORD *)this + 76);
        if ((v149 & 0x1000) != 0) {
          goto LABEL_250;
        }
LABEL_240:
        if ((v149 & 0x2000) == 0) {
          goto LABEL_241;
        }
LABEL_256:
        uint64_t v163 = *((void *)this + 35);
        if (v163)
        {
          *(_WORD *)uint64_t v3 = 762;
          unsigned int v164 = v3 + 2;
          v165 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v163 + 44);
          if (v165 <= 0x7F) {
            goto LABEL_258;
          }
        }
        else
        {
          uint64_t v163 = *(void *)(qword_10047F018 + 280);
          *(_WORD *)uint64_t v3 = 762;
          unsigned int v164 = v3 + 2;
          v165 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v163 + 44);
          if (v165 <= 0x7F)
          {
LABEL_258:
            *((unsigned char *)v3 + 2) = (_BYTE)v165;
            uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001DB57C(v163, (uint64_t)v3 + 3, a3);
            if ((*((_DWORD *)this + 76) & 0x4000) != 0) {
              goto LABEL_262;
            }
LABEL_242:
            v152 = (void *)*((void *)this + 1);
            v151 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
            v150 = v152;
            if (!v152) {
              return v3;
            }
            goto LABEL_268;
          }
        }
        uint64_t v166 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v165, v164, a3);
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001DB57C(v163, v166, v167);
        if ((*((_DWORD *)this + 76) & 0x4000) != 0) {
          goto LABEL_262;
        }
        goto LABEL_242;
      }
    }
    v156 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v155, v154, a3);
    uint64_t v3 = sub_1001DC9D0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v153, v156, v157);
    int v149 = *((_DWORD *)this + 76);
    if ((v149 & 0x1000) != 0) {
      goto LABEL_250;
    }
    goto LABEL_240;
  }
  if ((v149 & 0x1000) == 0) {
    goto LABEL_240;
  }
LABEL_250:
  v158 = (unsigned int *)*((void *)this + 34);
  if (v158)
  {
    *(_WORD *)uint64_t v3 = 754;
    unsigned int v159 = v3 + 2;
    v160 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v158[10];
    if (v160 <= 0x7F) {
      goto LABEL_252;
    }
LABEL_255:
    v161 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v160, v159, a3);
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001DE3BC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v158, v161, v162);
    int v149 = *((_DWORD *)this + 76);
    if ((v149 & 0x2000) != 0) {
      goto LABEL_256;
    }
    goto LABEL_241;
  }
  v158 = *(unsigned int **)(qword_10047F018 + 272);
  *(_WORD *)uint64_t v3 = 754;
  unsigned int v159 = v3 + 2;
  v160 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v158[10];
  if (v160 > 0x7F) {
    goto LABEL_255;
  }
LABEL_252:
  *((unsigned char *)v3 + 2) = (_BYTE)v160;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001DE3BC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v158, (unsigned char *)v3 + 3, a3);
  int v149 = *((_DWORD *)this + 76);
  if ((v149 & 0x2000) != 0) {
    goto LABEL_256;
  }
LABEL_241:
  if ((v149 & 0x4000) == 0) {
    goto LABEL_242;
  }
LABEL_262:
  uint64_t v168 = *((void *)this + 36);
  if (v168)
  {
    *(_WORD *)uint64_t v3 = 898;
    unsigned int v169 = v3 + 2;
    v170 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v168 + 52);
    if (v170 <= 0x7F) {
      goto LABEL_264;
    }
  }
  else
  {
    uint64_t v168 = *(void *)(qword_10047F018 + 288);
    *(_WORD *)uint64_t v3 = 898;
    unsigned int v169 = v3 + 2;
    v170 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v168 + 52);
    if (v170 <= 0x7F)
    {
LABEL_264:
      *((unsigned char *)v3 + 2) = (_BYTE)v170;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001DBF40(v168, (uint64_t)v3 + 3, a3);
      v171 = (void *)*((void *)this + 1);
      v151 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      v150 = v171;
      if (!v171) {
        return v3;
      }
      goto LABEL_268;
    }
  }
  uint64_t v172 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v170, v169, a3);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001DBF40(v168, v172, v173);
  v174 = (void *)*((void *)this + 1);
  v151 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v150 = v174;
  if (!v174) {
    return v3;
  }
LABEL_268:
  if (*v150 == v150[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v151, v3, a3);
}

uint64_t sub_1001C7AA8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 300);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    goto LABEL_57;
  }
  if (v3)
  {
    unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 300);
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    unsigned int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
    int v3 = *(_DWORD *)(a1 + 300);
  }
  else
  {
    int v7 = 1;
  }
  v4 += v7 + 1;
LABEL_11:
  if ((v3 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if ((v8 & 0x80000000) != 0)
    {
      v4 += 11;
      if ((v3 & 8) != 0) {
        goto LABEL_22;
      }
    }
    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
      int v3 = *(_DWORD *)(a1 + 300);
      v4 += v9 + 1;
      if ((v3 & 8) != 0) {
        goto LABEL_22;
      }
    }
    else
    {
      v4 += 2;
      if ((v3 & 8) != 0) {
        goto LABEL_22;
      }
    }
LABEL_13:
    if ((v3 & 0x10) == 0) {
      goto LABEL_35;
    }
LABEL_29:
    unint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if ((v12 & 0x80000000) != 0)
    {
      int v13 = 10;
    }
    else if (v12 >= 0x80)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
      int v3 = *(_DWORD *)(a1 + 300);
    }
    else
    {
      int v13 = 1;
    }
    v4 += v13 + 1;
    goto LABEL_35;
  }
  if ((v3 & 8) == 0) {
    goto LABEL_13;
  }
LABEL_22:
  unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if ((v10 & 0x80000000) != 0)
  {
    v4 += 11;
    if ((v3 & 0x10) == 0) {
      goto LABEL_35;
    }
    goto LABEL_29;
  }
  if (v10 < 0x80)
  {
    v4 += 2;
    if ((v3 & 0x10) == 0) {
      goto LABEL_35;
    }
    goto LABEL_29;
  }
  int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
  int v3 = *(_DWORD *)(a1 + 300);
  v4 += v11 + 1;
  if ((v3 & 0x10) != 0) {
    goto LABEL_29;
  }
LABEL_35:
  unsigned int v14 = v4 + 5;
  if ((v3 & 0x20) == 0) {
    unsigned int v14 = v4;
  }
  if ((v3 & 0x40) != 0) {
    uint64_t v5 = v14 + 5;
  }
  else {
    uint64_t v5 = v14;
  }
  if ((v3 & 0x80) != 0)
  {
    uint64_t v15 = *(void *)(a1 + 48);
    if (!v15) {
      uint64_t v15 = *(void *)(qword_10047F018 + 48);
    }
    int v16 = *(unsigned __int8 *)(v15 + 32);
    int v17 = (v16 << 31 >> 31) & 5;
    if ((v16 & 2) != 0) {
      v17 += 5;
    }
    if ((v16 & 4) != 0) {
      v17 += 5;
    }
    if (*(unsigned char *)(v15 + 32)) {
      LODWORD(v18) = v17;
    }
    else {
      LODWORD(v18) = 0;
    }
    uint64_t v19 = *(void **)(v15 + 8);
    if (!v19 || *v19 == v19[1])
    {
      *(_DWORD *)(v15 + 28) = v18;
      int v20 = 1;
    }
    else
    {
      unsigned int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v15 + 8), a2)+ v18);
      *(_DWORD *)(v15 + 28) = v18;
      if (v18 >= 0x80) {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
      }
      else {
        int v20 = 1;
      }
    }
    uint64_t v5 = (v5 + v18 + v20 + 1);
    int v3 = *(_DWORD *)(a1 + 300);
  }
LABEL_57:
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_142;
  }
  if ((v3 & 0x100) == 0)
  {
    if ((v3 & 0x200) == 0) {
      goto LABEL_60;
    }
LABEL_74:
    uint64_t v24 = *(void *)(a1 + 64);
    if (v24)
    {
      int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C1B38(v24, a2);
      if (v25 < 0x80) {
        goto LABEL_76;
      }
    }
    else
    {
      int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C1B38(*(void *)(qword_10047F018 + 64), a2);
      if (v25 < 0x80)
      {
LABEL_76:
        LODWORD(v5) = v5 + v25 + 2;
        int v3 = *(_DWORD *)(a1 + 300);
        if ((v3 & 0x400) != 0) {
          goto LABEL_80;
        }
LABEL_61:
        if ((v3 & 0x800) != 0) {
          unsigned int v21 = v5 + 5;
        }
        else {
          unsigned int v21 = v5;
        }
        if ((v3 & 0x1000) == 0) {
          goto LABEL_65;
        }
LABEL_89:
        uint64_t v30 = *(void *)(a1 + 80);
        if (v30)
        {
          int v31 = *(unsigned __int8 *)(v30 + 44);
          if (*(unsigned char *)(v30 + 44)) {
            goto LABEL_91;
          }
        }
        else
        {
          uint64_t v30 = *(void *)(qword_10047F018 + 80);
          int v31 = *(unsigned __int8 *)(v30 + 44);
          if (*(unsigned char *)(v30 + 44))
          {
LABEL_91:
            int v32 = (v31 << 31 >> 31) & 5;
            if ((v31 & 2) != 0) {
              v32 += 5;
            }
            if ((v31 & 4) != 0) {
              v32 += 5;
            }
            if ((v31 & 8) != 0) {
              v32 += 5;
            }
            if ((v31 & 0x10) != 0) {
              v32 += 5;
            }
            if ((v31 & 0x20) != 0) {
              int v33 = v32 + 2;
            }
            else {
              int v33 = v32;
            }
            signed int v34 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v30 + 8);
            unsigned int v35 = *(void **)(v30 + 8);
            if (!v35) {
              goto LABEL_110;
            }
            goto LABEL_106;
          }
        }
        int v33 = 0;
        signed int v34 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v30 + 8);
        unsigned int v35 = *(void **)(v30 + 8);
        if (!v35) {
          goto LABEL_110;
        }
LABEL_106:
        if (*v35 != v35[1])
        {
          uint64_t v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v34, a2)+ v33);
          *(_DWORD *)(v30 + 40) = v36;
          if (v36 >= 0x80)
          {
            v21 += v36
                 + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36, a2)+ 1;
            int v3 = *(_DWORD *)(a1 + 300);
            if ((v3 & 0x2000) != 0) {
              goto LABEL_113;
            }
          }
          else
          {
            v21 += v36 + 1 + 1;
            int v3 = *(_DWORD *)(a1 + 300);
            if ((v3 & 0x2000) != 0) {
              goto LABEL_113;
            }
          }
          goto LABEL_66;
        }
LABEL_110:
        *(_DWORD *)(v30 + 40) = v33;
        v21 += v33 + 1 + 1;
        int v3 = *(_DWORD *)(a1 + 300);
        if ((v3 & 0x2000) != 0) {
          goto LABEL_113;
        }
LABEL_66:
        if ((v3 & 0x4000) == 0) {
          goto LABEL_139;
        }
LABEL_119:
        uint64_t v39 = *(void *)(a1 + 104);
        if (v39)
        {
          LOBYTE(v40) = *(unsigned char *)(v39 + 40);
          if ((_BYTE)v40) {
            goto LABEL_121;
          }
        }
        else
        {
          uint64_t v39 = *(void *)(qword_10047F018 + 104);
          LOBYTE(v40) = *(unsigned char *)(v39 + 40);
          if ((_BYTE)v40)
          {
LABEL_121:
            if (v40)
            {
              LODWORD(v41) = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v39 + 16), (unint64_t)a2)+ 1;
              int v40 = *(_DWORD *)(v39 + 40);
              if ((v40 & 2) == 0) {
                goto LABEL_129;
              }
            }
            else
            {
              LODWORD(v41) = 0;
              if ((v40 & 2) == 0)
              {
LABEL_129:
                if ((v40 & 4) != 0) {
                  unint64_t v41 = (v41 + 5);
                }
                else {
                  unint64_t v41 = v41;
                }
                uint64_t v42 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v39 + 8);
                unsigned int v43 = *(void **)(v39 + 8);
                if (v43)
                {
LABEL_133:
                  if (*v43 != v43[1]) {
                    unint64_t v41 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v42, a2)+ v41;
                  }
                }
LABEL_135:
                *(_DWORD *)(v39 + 36) = v41;
                if (v41 >= 0x80) {
                  int v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v41, a2);
                }
                else {
                  int v44 = 1;
                }
                v21 += v41 + v44 + 2;
                int v3 = *(_DWORD *)(a1 + 300);
                goto LABEL_139;
              }
            }
            LODWORD(v41) = v41
                         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v39 + 24), (unint64_t)a2)+ 1;
            int v40 = *(_DWORD *)(v39 + 40);
            goto LABEL_129;
          }
        }
        unint64_t v41 = 0;
        uint64_t v42 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v39 + 8);
        unsigned int v43 = *(void **)(v39 + 8);
        if (v43) {
          goto LABEL_133;
        }
        goto LABEL_135;
      }
    }
    LODWORD(v5) = v5
                + v25
                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 300);
    if ((v3 & 0x400) != 0) {
      goto LABEL_80;
    }
    goto LABEL_61;
  }
  uint64_t v22 = *(void *)(a1 + 56);
  if (v22)
  {
    uint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C0D00(v22, a2);
    if (v23 < 0x80) {
      goto LABEL_70;
    }
LABEL_73:
    LODWORD(v5) = v5
                + v23
                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 300);
    if ((v3 & 0x200) != 0) {
      goto LABEL_74;
    }
    goto LABEL_60;
  }
  uint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C0D00(*(void *)(qword_10047F018 + 56), a2);
  if (v23 >= 0x80) {
    goto LABEL_73;
  }
LABEL_70:
  LODWORD(v5) = v5 + v23 + 2;
  int v3 = *(_DWORD *)(a1 + 300);
  if ((v3 & 0x200) != 0) {
    goto LABEL_74;
  }
LABEL_60:
  if ((v3 & 0x400) == 0) {
    goto LABEL_61;
  }
LABEL_80:
  uint64_t v26 = *(void *)(a1 + 72);
  if (v26)
  {
    uint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001BF7E0(v26, a2);
    if (v27 < 0x80)
    {
LABEL_82:
      int v28 = 1;
      goto LABEL_85;
    }
  }
  else
  {
    uint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001BF7E0(*(void *)(qword_10047F018 + 72), a2);
    if (v27 < 0x80) {
      goto LABEL_82;
    }
  }
  int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2);
LABEL_85:
  unsigned int v29 = v5 + v27 + v28 + 1;
  int v3 = *(_DWORD *)(a1 + 300);
  if ((v3 & 0x800) != 0) {
    unsigned int v21 = v29 + 5;
  }
  else {
    unsigned int v21 = v29;
  }
  if ((v3 & 0x1000) != 0) {
    goto LABEL_89;
  }
LABEL_65:
  if ((v3 & 0x2000) == 0) {
    goto LABEL_66;
  }
LABEL_113:
  uint64_t v37 = *(void *)(a1 + 88);
  if (v37)
  {
    int v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C3A3C(v37, a2);
    if (v38 < 0x80) {
      goto LABEL_115;
    }
LABEL_118:
    v21 += v38
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38, a2)
         + 1;
    int v3 = *(_DWORD *)(a1 + 300);
    if ((v3 & 0x4000) == 0) {
      goto LABEL_139;
    }
    goto LABEL_119;
  }
  int v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C3A3C(*(void *)(qword_10047F018 + 88), a2);
  if (v38 >= 0x80) {
    goto LABEL_118;
  }
LABEL_115:
  v21 += v38 + 2;
  int v3 = *(_DWORD *)(a1 + 300);
  if ((v3 & 0x4000) != 0) {
    goto LABEL_119;
  }
LABEL_139:
  if ((v3 & 0x8000) != 0) {
    uint64_t v5 = v21 + 10;
  }
  else {
    uint64_t v5 = v21;
  }
LABEL_142:
  if ((v3 & 0xFF0000) != 0)
  {
    if ((v3 & 0x10000) != 0)
    {
      uint64_t v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 100);
      if ((v45 & 0x80000000) != 0)
      {
        int v46 = 10;
      }
      else if (v45 >= 0x80)
      {
        int v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45, a2);
        int v3 = *(_DWORD *)(a1 + 300);
      }
      else
      {
        int v46 = 1;
      }
      LODWORD(v5) = v5 + v46 + 2;
    }
    unsigned int v47 = v5 + 6;
    if ((v3 & 0x20000) == 0) {
      unsigned int v47 = v5;
    }
    if ((v3 & 0x40000) != 0) {
      v47 += 6;
    }
    if ((v3 & 0x80000) != 0) {
      v47 += 6;
    }
    if ((v3 & 0x100000) != 0) {
      v47 += 6;
    }
    if ((v3 & 0x200000) != 0) {
      uint64_t v5 = v47 + 6;
    }
    else {
      uint64_t v5 = v47;
    }
    if ((v3 & 0x400000) != 0)
    {
      uint64_t v48 = *(void *)(a1 + 144);
      if (!v48) {
        uint64_t v48 = *(void *)(qword_10047F018 + 144);
      }
      int v49 = *(void **)(v48 + 8);
      LODWORD(v50) = (*(unsigned __int8 *)(v48 + 24) << 31 >> 31) & 5;
      if (!v49 || *v49 == v49[1])
      {
        *(_DWORD *)(v48 + 20) = v50;
        int v51 = 1;
      }
      else
      {
        int v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v48 + 8), a2)+ v50);
        *(_DWORD *)(v48 + 20) = v50;
        if (v50 >= 0x80) {
          int v51 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v50, a2);
        }
        else {
          int v51 = 1;
        }
      }
      uint64_t v5 = (v5 + v50 + v51 + 2);
      int v3 = *(_DWORD *)(a1 + 300);
    }
    if ((v3 & 0x800000) != 0)
    {
      int v52 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 140);
      if ((v52 & 0x80000000) != 0)
      {
        int v53 = 10;
      }
      else if (v52 >= 0x80)
      {
        int v53 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v52, a2);
        int v3 = *(_DWORD *)(a1 + 300);
      }
      else
      {
        int v53 = 1;
      }
      uint64_t v5 = (v5 + v53 + 2);
    }
  }
  if (HIBYTE(v3))
  {
    if ((v3 & 0x1000000) != 0) {
      unsigned int v54 = v5 + 10;
    }
    else {
      unsigned int v54 = v5;
    }
    if ((v3 & 0x2000000) == 0)
    {
      if ((v3 & 0x4000000) == 0) {
        goto LABEL_184;
      }
LABEL_213:
      uint64_t v64 = *(void *)(a1 + 168);
      if (v64)
      {
        int v65 = *(unsigned __int8 *)(v64 + 56);
        if (*(unsigned char *)(v64 + 56)) {
          goto LABEL_215;
        }
      }
      else
      {
        uint64_t v64 = *(void *)(qword_10047F018 + 168);
        int v65 = *(unsigned __int8 *)(v64 + 56);
        if (*(unsigned char *)(v64 + 56))
        {
LABEL_215:
          int v66 = (v65 << 31 >> 31) & 9;
          if ((v65 & 2) != 0) {
            v66 += 9;
          }
          if ((v65 & 4) != 0) {
            v66 += 9;
          }
          if ((v65 & 8) != 0) {
            v66 += 9;
          }
          if ((v65 & 0x10) != 0) {
            int v67 = v66 + 2;
          }
          else {
            int v67 = v66;
          }
          int v68 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v64 + 8);
          uint64_t v69 = *(void **)(v64 + 8);
          if (!v69) {
            goto LABEL_232;
          }
          goto LABEL_228;
        }
      }
      int v67 = 0;
      int v68 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v64 + 8);
      uint64_t v69 = *(void **)(v64 + 8);
      if (!v69) {
        goto LABEL_232;
      }
LABEL_228:
      if (*v69 != v69[1])
      {
        int v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v68, a2)+ v67);
        *(_DWORD *)(v64 + 52) = v70;
        if (v70 >= 0x80)
        {
          v54 += v70
               + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v70, a2)+ 2;
          int v3 = *(_DWORD *)(a1 + 300);
          if ((v3 & 0x8000000) == 0)
          {
LABEL_260:
            unsigned int v78 = v54 + 3;
            if ((v3 & 0x10000000) == 0) {
              unsigned int v78 = v54;
            }
            if ((v3 & 0x20000000) != 0) {
              v78 += 10;
            }
            if ((v3 & 0x40000000) != 0) {
              v78 += 3;
            }
            if (v3 >= 0) {
              uint64_t v5 = v78;
            }
            else {
              uint64_t v5 = v78 + 6;
            }
            goto LABEL_269;
          }
        }
        else
        {
          v54 += v70 + 1 + 2;
          int v3 = *(_DWORD *)(a1 + 300);
          if ((v3 & 0x8000000) == 0) {
            goto LABEL_260;
          }
        }
LABEL_235:
        uint64_t v71 = *(void *)(a1 + 176);
        if (v71)
        {
          int v72 = *(unsigned __int8 *)(v71 + 76);
          if (*(unsigned char *)(v71 + 76)) {
            goto LABEL_237;
          }
        }
        else
        {
          uint64_t v71 = *(void *)(qword_10047F018 + 176);
          int v72 = *(unsigned __int8 *)(v71 + 76);
          if (*(unsigned char *)(v71 + 76))
          {
LABEL_237:
            int v73 = (v72 << 31 >> 31) & 9;
            if ((v72 & 2) != 0) {
              v73 += 9;
            }
            if ((v72 & 4) != 0) {
              v73 += 9;
            }
            if ((v72 & 8) != 0) {
              v73 += 9;
            }
            if ((v72 & 0x10) != 0) {
              v73 += 9;
            }
            if ((v72 & 0x20) != 0) {
              v73 += 9;
            }
            if ((v72 & 0x40) != 0) {
              LODWORD(v74) = v73 + 9;
            }
            else {
              LODWORD(v74) = v73;
            }
            int v75 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v71 + 8);
            int v76 = *(void **)(v71 + 8);
            if (!v76) {
              goto LABEL_257;
            }
LABEL_254:
            if (*v76 != v76[1])
            {
              int v74 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v75, a2)
                                                                                    + v74);
              *(_DWORD *)(v71 + 72) = v74;
              if (v74 >= 0x80) {
                int v77 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v74, a2);
              }
              else {
                int v77 = 1;
              }
              goto LABEL_259;
            }
LABEL_257:
            *(_DWORD *)(v71 + 72) = v74;
            int v77 = 1;
LABEL_259:
            v54 += v74 + v77 + 2;
            int v3 = *(_DWORD *)(a1 + 300);
            goto LABEL_260;
          }
        }
        LODWORD(v74) = 0;
        int v75 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v71 + 8);
        int v76 = *(void **)(v71 + 8);
        if (!v76) {
          goto LABEL_257;
        }
        goto LABEL_254;
      }
LABEL_232:
      *(_DWORD *)(v64 + 52) = v67;
      v54 += v67 + 1 + 2;
      int v3 = *(_DWORD *)(a1 + 300);
      if ((v3 & 0x8000000) == 0) {
        goto LABEL_260;
      }
      goto LABEL_235;
    }
    uint64_t v55 = *(void *)(a1 + 160);
    if (v55)
    {
      int v56 = *(unsigned __int8 *)(v55 + 44);
      if (*(unsigned char *)(v55 + 44)) {
        goto LABEL_188;
      }
    }
    else
    {
      uint64_t v55 = *(void *)(qword_10047F018 + 160);
      int v56 = *(unsigned __int8 *)(v55 + 44);
      if (*(unsigned char *)(v55 + 44))
      {
LABEL_188:
        if ((v56 & 2) != 0) {
          int v57 = ((v56 << 31 >> 31) & 5) + 5;
        }
        else {
          int v57 = (v56 << 31 >> 31) & 5;
        }
        if ((v56 & 4) != 0)
        {
          int v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v55 + 24);
          if (v58 >= 0x80)
          {
            int v59 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v58, a2)+ 1;
            int v56 = *(_DWORD *)(v55 + 44);
          }
          else
          {
            int v59 = 2;
          }
          v57 += v59;
        }
        unsigned int v63 = v57 + 5;
        if ((v56 & 8) == 0) {
          unsigned int v63 = v57;
        }
        if ((v56 & 0x10) != 0) {
          v63 += 5;
        }
        if ((v56 & 0x20) != 0) {
          unint64_t v60 = v63 + 2;
        }
        else {
          unint64_t v60 = v63;
        }
        int v61 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v55 + 8);
        int v62 = *(void **)(v55 + 8);
        if (!v62)
        {
LABEL_209:
          *(_DWORD *)(v55 + 40) = v60;
          if (v60 >= 0x80)
          {
            v54 += v60
                 + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v60, a2)+ 2;
            int v3 = *(_DWORD *)(a1 + 300);
            if ((v3 & 0x4000000) != 0) {
              goto LABEL_213;
            }
          }
          else
          {
            v54 += v60 + 3;
            int v3 = *(_DWORD *)(a1 + 300);
            if ((v3 & 0x4000000) != 0) {
              goto LABEL_213;
            }
          }
LABEL_184:
          if ((v3 & 0x8000000) == 0) {
            goto LABEL_260;
          }
          goto LABEL_235;
        }
LABEL_207:
        if (*v62 != v62[1]) {
          unint64_t v60 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v61, a2)+ v60;
        }
        goto LABEL_209;
      }
    }
    unint64_t v60 = 0;
    int v61 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v55 + 8);
    int v62 = *(void **)(v55 + 8);
    if (!v62) {
      goto LABEL_209;
    }
    goto LABEL_207;
  }
LABEL_269:
  int v79 = *(_DWORD *)(a1 + 304);
  if (!(_BYTE)v79) {
    goto LABEL_283;
  }
  if ((v79 & 1) == 0)
  {
    if ((v79 & 2) != 0) {
      unsigned int v80 = v5 + 3;
    }
    else {
      unsigned int v80 = v5;
    }
    if ((v79 & 4) == 0) {
      goto LABEL_275;
    }
LABEL_320:
    uint64_t v89 = *(_DWORD **)(a1 + 208);
    if (v89)
    {
      v90 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001CA07C(v89, a2);
      if (v90 < 0x80) {
        goto LABEL_322;
      }
    }
    else
    {
      v90 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001CA07C(*(_DWORD **)(qword_10047F018 + 208), a2);
      if (v90 < 0x80)
      {
LABEL_322:
        v80 += v90 + 3;
        int v79 = *(_DWORD *)(a1 + 304);
        if ((v79 & 8) != 0) {
          goto LABEL_326;
        }
LABEL_276:
        if ((v79 & 0x10) != 0) {
          v80 += 6;
        }
        if ((v79 & 0x20) == 0) {
          goto LABEL_279;
        }
        goto LABEL_334;
      }
    }
    v80 += v90
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v90, a2)
         + 2;
    int v79 = *(_DWORD *)(a1 + 304);
    if ((v79 & 8) != 0) {
      goto LABEL_326;
    }
    goto LABEL_276;
  }
  int v81 = *(_DWORD **)(a1 + 200);
  if (v81)
  {
    int v82 = v81[11];
    if ((_BYTE)v82) {
      goto LABEL_287;
    }
LABEL_307:
    if ((v82 & 0x100) != 0) {
      LODWORD(v84) = 5;
    }
    else {
      LODWORD(v84) = 0;
    }
    int v85 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v81 + 2);
    int v86 = (void *)*((void *)v81 + 1);
    if (!v86) {
      goto LABEL_314;
    }
    goto LABEL_311;
  }
  int v81 = *(_DWORD **)(qword_10047F018 + 200);
  int v82 = v81[11];
  if (!(_BYTE)v82) {
    goto LABEL_307;
  }
LABEL_287:
  int v83 = 2 * (v82 & 1);
  if ((v82 & 2) != 0) {
    v83 += 2;
  }
  if ((v82 & 4) != 0) {
    v83 += 5;
  }
  if ((v82 & 8) != 0) {
    v83 += 5;
  }
  if ((v82 & 0x10) != 0) {
    v83 += 5;
  }
  if ((v82 & 0x20) != 0) {
    v83 += 2;
  }
  if ((v82 & 0x40) != 0) {
    v83 += 2;
  }
  if ((v82 & 0x80) != 0) {
    v83 += 5;
  }
  if ((v82 & 0x100) != 0) {
    LODWORD(v84) = v83 + 5;
  }
  else {
    LODWORD(v84) = v83;
  }
  int v85 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v81 + 2);
  int v86 = (void *)*((void *)v81 + 1);
  if (!v86) {
    goto LABEL_314;
  }
LABEL_311:
  if (*v86 != v86[1])
  {
    int v84 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v85, a2)+ v84);
    v81[10] = v84;
    if (v84 >= 0x80) {
      int v87 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v84, a2);
    }
    else {
      int v87 = 1;
    }
    goto LABEL_316;
  }
LABEL_314:
  v81[10] = v84;
  int v87 = 1;
LABEL_316:
  unsigned int v88 = v5 + v84 + v87 + 2;
  int v79 = *(_DWORD *)(a1 + 304);
  if ((v79 & 2) != 0) {
    unsigned int v80 = v88 + 3;
  }
  else {
    unsigned int v80 = v88;
  }
  if ((v79 & 4) != 0) {
    goto LABEL_320;
  }
LABEL_275:
  if ((v79 & 8) == 0) {
    goto LABEL_276;
  }
LABEL_326:
  uint64_t v91 = *(void *)(a1 + 216);
  if (v91)
  {
    int v92 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001CA994(v91, a2);
    if (v92 < 0x80)
    {
LABEL_328:
      int v93 = 1;
      goto LABEL_331;
    }
  }
  else
  {
    int v92 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001CA994(*(void *)(qword_10047F018 + 216), a2);
    if (v92 < 0x80) {
      goto LABEL_328;
    }
  }
  int v93 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v92, a2);
LABEL_331:
  v80 += v92 + v93 + 2;
  int v79 = *(_DWORD *)(a1 + 304);
  if ((v79 & 0x10) != 0) {
    v80 += 6;
  }
  if ((v79 & 0x20) == 0)
  {
LABEL_279:
    if ((v79 & 0x40) != 0) {
      uint64_t v5 = v80 + 6;
    }
    else {
      uint64_t v5 = v80;
    }
    if ((v79 & 0x80) == 0) {
      goto LABEL_283;
    }
LABEL_369:
    uint64_t v102 = *(void *)(a1 + 240);
    if (v102)
    {
      uint64_t v103 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C1B38(v102, a2);
      if (v103 < 0x80)
      {
LABEL_371:
        int v104 = 1;
        goto LABEL_374;
      }
    }
    else
    {
      uint64_t v103 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C1B38(*(void *)(qword_10047F018 + 240), a2);
      if (v103 < 0x80) {
        goto LABEL_371;
      }
    }
    int v104 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v103, a2);
LABEL_374:
    uint64_t v5 = (v5 + v103 + v104 + 2);
    int v79 = *(_DWORD *)(a1 + 304);
    if ((v79 & 0xFF00) == 0) {
      goto LABEL_385;
    }
LABEL_375:
    unsigned int v105 = v5 + 6;
    if ((v79 & 0x100) == 0) {
      unsigned int v105 = v5;
    }
    if ((v79 & 0x200) != 0) {
      uint64_t v5 = v105 + 6;
    }
    else {
      uint64_t v5 = v105;
    }
    if ((v79 & 0x400) == 0)
    {
      if ((v79 & 0x800) == 0) {
        goto LABEL_382;
      }
LABEL_402:
      uint64_t v115 = *(void *)(a1 + 264);
      if (v115)
      {
        unsigned int v116 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001DCAD0(v115, a2);
        if (v116 < 0x80) {
          goto LABEL_404;
        }
      }
      else
      {
        unsigned int v116 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001DCAD0(*(void *)(qword_10047F018 + 264), a2);
        if (v116 < 0x80)
        {
LABEL_404:
          uint64_t v5 = (v5 + v116 + 3);
          int v79 = *(_DWORD *)(a1 + 304);
          if ((v79 & 0x1000) != 0) {
            goto LABEL_408;
          }
LABEL_383:
          if ((v79 & 0x2000) == 0) {
            goto LABEL_384;
          }
LABEL_414:
          uint64_t v119 = *(void *)(a1 + 280);
          if (!v119) {
            uint64_t v119 = *(void *)(qword_10047F018 + 280);
          }
          int v120 = *(unsigned __int8 *)(v119 + 48);
          int v121 = (v120 << 31 >> 31) & 9 | v120 & 2;
          if ((v120 & 4) != 0) {
            v121 += 9;
          }
          if ((v120 & 8) != 0) {
            v121 += 9;
          }
          if (*(unsigned char *)(v119 + 48)) {
            int v122 = v121;
          }
          else {
            int v122 = 0;
          }
          uint64_t v123 = *(void **)(v119 + 8);
          if (!v123 || *v123 == v123[1])
          {
            *(_DWORD *)(v119 + 44) = v122;
            uint64_t v5 = (v5 + v122 + 1 + 2);
            if ((*(_DWORD *)(a1 + 304) & 0x4000) == 0) {
              goto LABEL_385;
            }
          }
          else
          {
            v124 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v119 + 8), a2)+ v122);
            *(_DWORD *)(v119 + 44) = v124;
            if (v124 >= 0x80)
            {
              uint64_t v5 = v5
                 + v124
                 + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v124, a2)+ 2;
              if ((*(_DWORD *)(a1 + 304) & 0x4000) == 0) {
                goto LABEL_385;
              }
            }
            else
            {
              uint64_t v5 = (v5 + v124 + 1 + 2);
              if ((*(_DWORD *)(a1 + 304) & 0x4000) == 0) {
                goto LABEL_385;
              }
            }
          }
LABEL_431:
          uint64_t v125 = *(void *)(a1 + 288);
          if (v125)
          {
            int v126 = *(unsigned __int8 *)(v125 + 56);
            if (*(unsigned char *)(v125 + 56)) {
              goto LABEL_433;
            }
          }
          else
          {
            uint64_t v125 = *(void *)(qword_10047F018 + 288);
            int v126 = *(unsigned __int8 *)(v125 + 56);
            if (*(unsigned char *)(v125 + 56))
            {
LABEL_433:
              int v127 = (v126 << 31 >> 31) & 9 | v126 & 2;
              if ((v126 & 4) != 0) {
                v127 += 9;
              }
              if ((v126 & 8) != 0) {
                v127 += 9;
              }
              if ((v126 & 0x10) != 0) {
                v127 += 9;
              }
              if ((v126 & 0x20) != 0) {
                LODWORD(v128) = v127 + 2;
              }
              else {
                LODWORD(v128) = v127;
              }
              v129 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v125 + 8);
              v130 = *(void **)(v125 + 8);
              if (!v130) {
                goto LABEL_449;
              }
LABEL_446:
              if (*v130 != v130[1])
              {
                unsigned int v128 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v129, a2)
                                                                                       + v128);
                *(_DWORD *)(v125 + 52) = v128;
                if (v128 >= 0x80) {
                  int v131 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v128, a2);
                }
                else {
                  int v131 = 1;
                }
LABEL_451:
                uint64_t v5 = (v5 + v128 + v131 + 2);
                uint64_t v106 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
                char v107 = *(void **)(a1 + 8);
                if (!v107) {
                  goto LABEL_386;
                }
                goto LABEL_452;
              }
LABEL_449:
              *(_DWORD *)(v125 + 52) = v128;
              int v131 = 1;
              goto LABEL_451;
            }
          }
          LODWORD(v128) = 0;
          v129 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v125 + 8);
          v130 = *(void **)(v125 + 8);
          if (!v130) {
            goto LABEL_449;
          }
          goto LABEL_446;
        }
      }
      uint64_t v5 = v5
         + v116
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v116, a2)+ 2;
      int v79 = *(_DWORD *)(a1 + 304);
      if ((v79 & 0x1000) != 0) {
        goto LABEL_408;
      }
      goto LABEL_383;
    }
    uint64_t v109 = *(void *)(a1 + 256);
    if (!v109) {
      uint64_t v109 = *(void *)(qword_10047F018 + 256);
    }
    int v110 = *(unsigned __int8 *)(v109 + 36);
    int v111 = (v110 << 31 >> 31) & 9;
    if ((v110 & 2) != 0) {
      v111 += 9;
    }
    if (*(unsigned char *)(v109 + 36)) {
      int v112 = v111;
    }
    else {
      int v112 = 0;
    }
    v113 = *(void **)(v109 + 8);
    if (!v113 || *v113 == v113[1])
    {
      *(_DWORD *)(v109 + 32) = v112;
      uint64_t v5 = (v5 + v112 + 1 + 2);
      int v79 = *(_DWORD *)(a1 + 304);
      if ((v79 & 0x800) != 0) {
        goto LABEL_402;
      }
    }
    else
    {
      char v114 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v109 + 8), a2)+ v112);
      *(_DWORD *)(v109 + 32) = v114;
      if (v114 >= 0x80)
      {
        uint64_t v5 = v5
           + v114
           + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v114, a2)+ 2;
        int v79 = *(_DWORD *)(a1 + 304);
        if ((v79 & 0x800) != 0) {
          goto LABEL_402;
        }
      }
      else
      {
        uint64_t v5 = (v5 + v114 + 1 + 2);
        int v79 = *(_DWORD *)(a1 + 304);
        if ((v79 & 0x800) != 0) {
          goto LABEL_402;
        }
      }
    }
LABEL_382:
    if ((v79 & 0x1000) == 0) {
      goto LABEL_383;
    }
LABEL_408:
    uint64_t v117 = *(void *)(a1 + 272);
    if (v117)
    {
      v118 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001DE5F4(v117, a2);
      if (v118 < 0x80) {
        goto LABEL_410;
      }
    }
    else
    {
      v118 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001DE5F4(*(void *)(qword_10047F018 + 272), a2);
      if (v118 < 0x80)
      {
LABEL_410:
        uint64_t v5 = (v5 + v118 + 3);
        int v79 = *(_DWORD *)(a1 + 304);
        if ((v79 & 0x2000) != 0) {
          goto LABEL_414;
        }
LABEL_384:
        if ((v79 & 0x4000) == 0) {
          goto LABEL_385;
        }
        goto LABEL_431;
      }
    }
    uint64_t v5 = v5
       + v118
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v118, a2)+ 2;
    int v79 = *(_DWORD *)(a1 + 304);
    if ((v79 & 0x2000) != 0) {
      goto LABEL_414;
    }
    goto LABEL_384;
  }
LABEL_334:
  int v94 = *(_DWORD **)(a1 + 232);
  if (v94)
  {
    int v95 = v94[11];
    if ((_BYTE)v95) {
      goto LABEL_336;
    }
LABEL_356:
    if ((v95 & 0x100) != 0) {
      LODWORD(v97) = 5;
    }
    else {
      LODWORD(v97) = 0;
    }
    uint64_t v98 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v94 + 2);
    int v99 = (void *)*((void *)v94 + 1);
    if (!v99) {
      goto LABEL_363;
    }
    goto LABEL_360;
  }
  int v94 = *(_DWORD **)(qword_10047F018 + 232);
  int v95 = v94[11];
  if (!(_BYTE)v95) {
    goto LABEL_356;
  }
LABEL_336:
  int v96 = 2 * (v95 & 1);
  if ((v95 & 2) != 0) {
    v96 += 2;
  }
  if ((v95 & 4) != 0) {
    v96 += 5;
  }
  if ((v95 & 8) != 0) {
    v96 += 5;
  }
  if ((v95 & 0x10) != 0) {
    v96 += 5;
  }
  if ((v95 & 0x20) != 0) {
    v96 += 2;
  }
  if ((v95 & 0x40) != 0) {
    v96 += 2;
  }
  if ((v95 & 0x80) != 0) {
    v96 += 5;
  }
  if ((v95 & 0x100) != 0) {
    LODWORD(v97) = v96 + 5;
  }
  else {
    LODWORD(v97) = v96;
  }
  uint64_t v98 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v94 + 2);
  int v99 = (void *)*((void *)v94 + 1);
  if (!v99) {
    goto LABEL_363;
  }
LABEL_360:
  if (*v99 != v99[1])
  {
    int v97 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v98, a2)+ v97);
    v94[10] = v97;
    if (v97 >= 0x80) {
      int v100 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v97, a2);
    }
    else {
      int v100 = 1;
    }
    goto LABEL_365;
  }
LABEL_363:
  v94[10] = v97;
  int v100 = 1;
LABEL_365:
  unsigned int v101 = v80 + v97 + v100 + 2;
  int v79 = *(_DWORD *)(a1 + 304);
  if ((v79 & 0x40) != 0) {
    uint64_t v5 = v101 + 6;
  }
  else {
    uint64_t v5 = v101;
  }
  if ((v79 & 0x80) != 0) {
    goto LABEL_369;
  }
LABEL_283:
  if ((v79 & 0xFF00) != 0) {
    goto LABEL_375;
  }
LABEL_385:
  uint64_t v106 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  char v107 = *(void **)(a1 + 8);
  if (!v107)
  {
LABEL_386:
    *(_DWORD *)(a1 + 296) = v5;
    return v5;
  }
LABEL_452:
  if (*v107 == v107[1]) {
    goto LABEL_386;
  }
  uint64_t v132 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v106, a2)
       + v5;
  *(_DWORD *)(a1 + 296) = v132;
  return v132;
}

uint64_t sub_1001C8C20(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10003E17C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001C8D00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C8D14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C8D28(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  int v4 = *(_DWORD *)(a2 + 60);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    char v9 = *(unsigned char *)(a2 + 32);
    *(_DWORD *)(a1 + 60) |= 1u;
    *(unsigned char *)(a1 + 32) = v9;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v10 = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 60) |= 2u;
  *(_DWORD *)(a1 + 16) = v10;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v11 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 60) |= 4u;
  *(_DWORD *)(a1 + 20) = v11;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v12 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 60) |= 8u;
  *(void *)(a1 + 24) = v12;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_24:
    char v14 = *(unsigned char *)(a2 + 33);
    *(_DWORD *)(a1 + 60) |= 0x20u;
    *(unsigned char *)(a1 + 33) = v14;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_23:
  int v13 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 60) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v13;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_25:
  int v15 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 60) |= 0x40u;
  *(_DWORD *)(a1 + 40) = v15;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 44);
    *(_DWORD *)(a1 + 60) |= 0x80u;
    *(_DWORD *)(a1 + 44) = v5;
    int v4 = *(_DWORD *)(a2 + 60);
  }
LABEL_13:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 48);
      *(_DWORD *)(a1 + 60) |= 0x100u;
      *(_DWORD *)(a1 + 48) = v6;
      int v4 = *(_DWORD *)(a2 + 60);
    }
    if ((v4 & 0x200) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 52);
      *(_DWORD *)(a1 + 60) |= 0x200u;
      *(_DWORD *)(a1 + 52) = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001C8EEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C8F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C8F14(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 36))
  {
    int v7 = *(_DWORD *)(a2 + 16);
    a1[9] |= 1u;
    a1[4] = v7;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_12:
      int v9 = *(_DWORD *)(a2 + 24);
      a1[9] |= 4u;
      a1[6] = v9;
      if ((*(_DWORD *)(a2 + 36) & 8) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_8;
    }
  }
  else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *(_DWORD *)(a2 + 20);
  a1[9] |= 2u;
  a1[5] = v8;
  int v4 = *(_DWORD *)(a2 + 36);
  if ((v4 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_7:
  if ((v4 & 8) != 0)
  {
LABEL_8:
    int v5 = *(_DWORD *)(a2 + 28);
    a1[9] |= 8u;
    a1[7] = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001C9014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C9028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C903C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(void *)(a1 + 24) = v6;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001C90F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C9108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C911C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 60);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 60))
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 60) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a2 + 60) & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 60) |= 2u;
  *(void *)(a1 + 24) = v8;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_14:
    uint64_t v10 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 60) |= 8u;
    *(void *)(a1 + 40) = v10;
    if ((*(_DWORD *)(a2 + 60) & 0x10) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_9;
  }
LABEL_13:
  uint64_t v9 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 60) |= 4u;
  *(void *)(a1 + 32) = v9;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_8:
  if ((v4 & 0x10) != 0)
  {
LABEL_9:
    uint64_t v5 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 60) |= 0x10u;
    *(void *)(a1 + 48) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001C923C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C9250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C9264(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
    int v4 = *(_DWORD *)(a2 + 44);
    if (!(_BYTE)v4) {
      goto LABEL_14;
    }
  }
  else
  {
    int v4 = *(_DWORD *)(a2 + 44);
    if (!(_BYTE)v4) {
      goto LABEL_14;
    }
  }
  if (v4)
  {
    char v9 = *(unsigned char *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 1u;
    *(unsigned char *)(a1 + 24) = v9;
    int v4 = *(_DWORD *)(a2 + 44);
    if ((v4 & 2) == 0)
    {
LABEL_7:
      if ((v4 & 4) == 0) {
        goto LABEL_8;
      }
LABEL_22:
      *(_DWORD *)(a1 + 44) |= 4u;
      uint64_t v11 = *(void *)(a1 + 16);
      if (!v11) {
        operator new();
      }
      uint64_t v12 = *(void *)(a2 + 16);
      if (v12)
      {
        sub_1001DCE18(v11, v12);
        int v4 = *(_DWORD *)(a2 + 44);
        if ((v4 & 8) != 0) {
          goto LABEL_28;
        }
      }
      else
      {
        sub_1001DCE18(v11, *(void *)(qword_10047F0E0 + 16));
        int v4 = *(_DWORD *)(a2 + 44);
        if ((v4 & 8) != 0) {
          goto LABEL_28;
        }
      }
LABEL_9:
      if ((v4 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_29;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_7;
  }
  char v10 = *(unsigned char *)(a2 + 25);
  *(_DWORD *)(a1 + 44) |= 2u;
  *(unsigned char *)(a1 + 25) = v10;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 4) != 0) {
    goto LABEL_22;
  }
LABEL_8:
  if ((v4 & 8) == 0) {
    goto LABEL_9;
  }
LABEL_28:
  char v13 = *(unsigned char *)(a2 + 26);
  *(_DWORD *)(a1 + 44) |= 8u;
  *(unsigned char *)(a1 + 26) = v13;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 0x10) == 0)
  {
LABEL_10:
    if ((v4 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  char v14 = *(unsigned char *)(a2 + 27);
  *(_DWORD *)(a1 + 44) |= 0x10u;
  *(unsigned char *)(a1 + 27) = v14;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 0x20) == 0)
  {
LABEL_11:
    if ((v4 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v15 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 44) |= 0x20u;
  *(_DWORD *)(a1 + 28) = v15;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 0x40) == 0)
  {
LABEL_12:
    if ((v4 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_31:
  char v16 = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 44) |= 0x40u;
  *(unsigned char *)(a1 + 32) = v16;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 0x80) != 0)
  {
LABEL_13:
    char v5 = *(unsigned char *)(a2 + 33);
    *(_DWORD *)(a1 + 44) |= 0x80u;
    *(unsigned char *)(a1 + 33) = v5;
    int v4 = *(_DWORD *)(a2 + 44);
  }
LABEL_14:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 36);
      *(_DWORD *)(a1 + 44) |= 0x100u;
      *(_DWORD *)(a1 + 36) = v6;
      int v4 = *(_DWORD *)(a2 + 44);
    }
    if ((v4 & 0x200) != 0)
    {
      char v7 = *(unsigned char *)(a2 + 34);
      *(_DWORD *)(a1 + 44) |= 0x200u;
      *(unsigned char *)(a1 + 34) = v7;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001C94C0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001C94E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001C94FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001C9510(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    char v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001C959C()
{
  return 1;
}

uint64_t sub_1001C95A4()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DD48;
}

void sub_1001C9634(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1001C9648(uint64_t a1)
{
  *(void *)a1 = off_10045E890;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001C969C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 56) = a2;
  return result;
}

void sub_1001C96A4()
{
}

void sub_1001C9718()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001C9740(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    char v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        v26[0] = 0;
        uint64_t v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v26);
          if (!result) {
            return result;
          }
          unsigned int v12 = v26[0];
          char v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v12 = *v11;
          char v13 = v11 + 1;
          *((void *)this + 1) = v13;
        }
        *(unsigned char *)(a1 + 32) = v12 != 0;
        *(_DWORD *)(a1 + 60) |= 1u;
        if ((unint64_t)v13 >= v10 || *v13 != 21) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0) {
          return 0;
        }
        goto LABEL_45;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_37;
        }
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0) {
          return 0;
        }
LABEL_45:
        *(_DWORD *)(a1 + 16) = v26[0];
        *(_DWORD *)(a1 + 60) |= 2u;
        int v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 29) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0) {
          return 0;
        }
LABEL_48:
        *(_DWORD *)(a1 + 20) = v26[0];
        *(_DWORD *)(a1 + 60) |= 4u;
        unsigned int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 33) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
        *(void *)uint64_t v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v26) & 1) == 0)return 0; {
LABEL_51:
        }
        *(void *)(a1 + 24) = *(void *)v26;
        *(_DWORD *)(a1 + 60) |= 8u;
        uint64_t v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 45) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0) {
          return 0;
        }
LABEL_54:
        *(_DWORD *)(a1 + 36) = v26[0];
        *(_DWORD *)(a1 + 60) |= 0x10u;
        int v20 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v20 >= v14 || *v20 != 48) {
          continue;
        }
        int v15 = v20 + 1;
        *((void *)this + 1) = v15;
LABEL_57:
        v26[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v26);
          if (!result) {
            return result;
          }
          unsigned int v21 = v26[0];
          uint64_t v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
        }
        else
        {
          unsigned int v21 = *v15;
          uint64_t v22 = v15 + 1;
          *((void *)this + 1) = v22;
        }
        *(unsigned char *)(a1 + 33) = v21 != 0;
        *(_DWORD *)(a1 + 60) |= 0x20u;
        if ((unint64_t)v22 >= v14 || *v22 != 61) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0) {
          return 0;
        }
LABEL_65:
        *(_DWORD *)(a1 + 40) = v26[0];
        *(_DWORD *)(a1 + 60) |= 0x40u;
        uint64_t v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 69) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0) {
          return 0;
        }
LABEL_68:
        *(_DWORD *)(a1 + 44) = v26[0];
        *(_DWORD *)(a1 + 60) |= 0x80u;
        uint64_t v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 77) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0) {
          return 0;
        }
LABEL_71:
        *(_DWORD *)(a1 + 48) = v26[0];
        *(_DWORD *)(a1 + 60) |= 0x100u;
        int v25 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 != 85) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
LABEL_74:
        v26[0] = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26))
        {
          *(_DWORD *)(a1 + 52) = v26[0];
          *(_DWORD *)(a1 + 60) |= 0x200u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_37;
        }
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0) {
          return 0;
        }
        goto LABEL_48;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_37;
        }
        *(void *)uint64_t v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v26) & 1) == 0)return 0; {
        goto LABEL_51;
        }
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_37;
        }
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0) {
          return 0;
        }
        goto LABEL_54;
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_57;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_37;
        }
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0) {
          return 0;
        }
        goto LABEL_65;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_37;
        }
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0) {
          return 0;
        }
        goto LABEL_68;
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_37;
        }
        v26[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v26) & 1) == 0) {
          return 0;
        }
        goto LABEL_71;
      case 0xAu:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_37;
        }
        goto LABEL_74;
      default:
        int v9 = TagFallback & 7;
LABEL_37:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1001C9CB8(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 60);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 32), (BOOL)a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(float *)(v5 + 36), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 33), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(float *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(float *)(v5 + 44), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(float *)(v5 + 48), a3);
  if ((*(_DWORD *)(v5 + 60) & 0x200) == 0)
  {
LABEL_11:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    char v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(float *)(v5 + 52), a3);
  unint64_t v10 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  char v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_23:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_1001C9E34(uint64_t a1, unsigned char *a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 60);
  if (v3)
  {
    char v7 = *(unsigned char *)(a1 + 32);
    *a2 = 8;
    a2[1] = v7;
    a2 += 2;
    int v3 = *(_DWORD *)(a1 + 60);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  *a2 = 21;
  *(_DWORD *)(a2 + 1) = v8;
  a2 += 5;
  int v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  int v9 = *(_DWORD *)(a1 + 20);
  *a2 = 29;
  *(_DWORD *)(a2 + 1) = v9;
  a2 += 5;
  int v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v10 = *(void *)(a1 + 24);
  *a2 = 33;
  *(void *)(a2 + 1) = v10;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  int v11 = *(_DWORD *)(a1 + 36);
  *a2 = 45;
  *(_DWORD *)(a2 + 1) = v11;
  a2 += 5;
  int v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 0x20) == 0)
  {
LABEL_7:
    if ((v3 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  char v12 = *(unsigned char *)(a1 + 33);
  *a2 = 48;
  a2[1] = v12;
  a2 += 2;
  int v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 0x40) == 0)
  {
LABEL_8:
    if ((v3 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v13 = *(_DWORD *)(a1 + 40);
  *a2 = 61;
  *(_DWORD *)(a2 + 1) = v13;
  a2 += 5;
  int v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 0x80) == 0)
  {
LABEL_9:
    if ((v3 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v14 = *(_DWORD *)(a1 + 44);
  *a2 = 69;
  *(_DWORD *)(a2 + 1) = v14;
  a2 += 5;
  int v3 = *(_DWORD *)(a1 + 60);
  if ((v3 & 0x100) == 0)
  {
LABEL_10:
    if ((v3 & 0x200) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    int v16 = *(_DWORD *)(a1 + 52);
    *a2 = 85;
    *(_DWORD *)(a2 + 1) = v16;
    a2 += 5;
    int v17 = *(void **)(a1 + 8);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v5 = v17;
    if (!v17) {
      return (uint64_t)a2;
    }
    goto LABEL_23;
  }
LABEL_21:
  int v15 = *(_DWORD *)(a1 + 48);
  *a2 = 77;
  *(_DWORD *)(a2 + 1) = v15;
  a2 += 5;
  if ((*(_DWORD *)(a1 + 60) & 0x200) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  int v6 = *(void **)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v5 = v6;
  if (!v6) {
    return (uint64_t)a2;
  }
LABEL_23:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return (uint64_t)a2;
}

uint64_t sub_1001CA07C(_DWORD *a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = a1[15];
  if ((_BYTE)v3)
  {
    unsigned int v4 = 2 * (v3 & 1);
    if ((v3 & 2) != 0) {
      unsigned int v4 = (2 * (v3 & 1)) | 5;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x20) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x40) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x80) != 0) {
      v4 += 5;
    }
  }
  else
  {
    unsigned int v4 = 0;
  }
  unsigned int v5 = v4 + 5;
  if ((v3 & 0x100) == 0) {
    unsigned int v5 = v4;
  }
  if ((v3 & 0x200) != 0) {
    v5 += 5;
  }
  if ((v3 & 0xFF00) != 0) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = v4;
  }
  char v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  int v8 = (void *)*((void *)a1 + 1);
  if (v8 && *v8 != v8[1]) {
    uint64_t v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v7, a2)
  }
       + v6;
  a1[14] = v6;
  return v6;
}

uint64_t sub_1001CA154(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001C8D28((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001CA234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CA248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CA25C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001CA2E8()
{
  return 1;
}

uint64_t sub_1001CA2F0()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DD58;
}

void sub_1001CA380(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1001CA394(uint64_t a1)
{
  *(void *)a1 = off_10045E940;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001CA3E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_1001CA3F0()
{
}

void sub_1001CA454()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001CA47C(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    char v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_25;
        }
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        a1[4] = v20;
        a1[9] |= 1u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 21) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_25;
        }
LABEL_15:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        a1[5] = v20;
        a1[9] |= 2u;
        char v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v12 >= v11 || *v12 != 24) {
          continue;
        }
        int v13 = v12 + 1;
        *((void *)this + 1) = v13;
LABEL_21:
        unsigned int v20 = 0;
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20);
          if (!result) {
            return result;
          }
          unsigned int v14 = v20;
          int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v14 = *v13;
          int v15 = v13 + 1;
          *((void *)this + 1) = v15;
        }
        a1[6] = -(v14 & 1) ^ (v14 >> 1);
        a1[9] |= 4u;
        if ((unint64_t)v15 >= v11 || *v15 != 32) {
          continue;
        }
        int v16 = v15 + 1;
        *((void *)this + 1) = v16;
        unsigned int v20 = 0;
        if ((unint64_t)v16 >= v11) {
          goto LABEL_37;
        }
LABEL_35:
        if (*v16 < 0)
        {
LABEL_37:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20);
          if (!result) {
            return result;
          }
          unsigned int v18 = v20;
          uint64_t v19 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v18 = *v16;
          uint64_t v19 = (unsigned __int8 *)(v16 + 1);
          *((void *)this + 1) = v19;
        }
        a1[7] = -(v18 & 1) ^ (v18 >> 1);
        a1[9] |= 8u;
        if (v19 != (unsigned __int8 *)v11 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_21;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        unsigned int v20 = 0;
        if ((unint64_t)v16 >= v11) {
          goto LABEL_37;
        }
        goto LABEL_35;
      default:
        int v9 = TagFallback & 7;
LABEL_25:
        if (v9 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t sub_1001CA758(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(result + 16), a3);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 24), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 8) == 0)
  {
LABEL_5:
    int v9 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    char v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 28), (int)a2, a4);
  uint64_t v10 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  char v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_11:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_1001CA82C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 9);
  if (v4)
  {
    int v9 = *((_DWORD *)this + 4);
    *(unsigned char *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v9;
    a2 += 5;
    int v4 = *((_DWORD *)this + 9);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v10 = *((_DWORD *)this + 5);
  *(unsigned char *)a2 = 21;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  if ((*((_DWORD *)this + 9) & 4) == 0)
  {
LABEL_4:
    if ((*((unsigned char *)this + 36) & 8) == 0) {
      goto LABEL_5;
    }
LABEL_16:
    int v13 = *((_DWORD *)this + 7);
    *(unsigned char *)a2 = 32;
    unsigned int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v13) ^ (v13 >> 31));
    if (v14 > 0x7F)
    {
      a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)a2 + 1, a3);
      int v16 = (void *)*((void *)this + 1);
      int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      uint64_t v5 = v16;
      if (!v16) {
        return a2;
      }
    }
    else
    {
      *(unsigned char *)(a2 + 1) = (2 * v13) ^ (v13 >> 31);
      a2 += 2;
      int v15 = (void *)*((void *)this + 1);
      int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      uint64_t v5 = v15;
      if (!v15) {
        return a2;
      }
    }
    goto LABEL_6;
  }
LABEL_12:
  int v11 = *((_DWORD *)this + 6);
  *(unsigned char *)a2 = 24;
  char v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v11) ^ (v11 >> 31));
  if (v12 > 0x7F)
  {
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)a2 + 1, a3);
    if ((*((unsigned char *)this + 36) & 8) != 0) {
      goto LABEL_16;
    }
  }
  else
  {
    *(unsigned char *)(a2 + 1) = (2 * v11) ^ (v11 >> 31);
    a2 += 2;
    if ((*((unsigned char *)this + 36) & 8) != 0) {
      goto LABEL_16;
    }
  }
LABEL_5:
  char v7 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v7;
  if (!v7) {
    return a2;
  }
LABEL_6:
  if (*v5 == v5[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1001CA994(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 36);
  if (!*(unsigned char *)(a1 + 36))
  {
    uint64_t v5 = 0;
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    char v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
  unsigned int v4 = (v3 << 31 >> 31) & 5;
  if ((v3 & 2) != 0) {
    uint64_t v5 = v4 + 5;
  }
  else {
    uint64_t v5 = v4;
  }
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_7;
    }
LABEL_15:
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *(_DWORD *)(a1 + 28)) ^ (*(int *)(a1 + 28) >> 31));
    if (v10 >= 0x80)
    {
      uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2)+ 1+ v5;
      int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      char v7 = *(void **)(a1 + 8);
      if (!v7) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v5 = (v5 + 2);
      int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      char v7 = *(void **)(a1 + 8);
      if (!v7) {
        goto LABEL_8;
      }
    }
    goto LABEL_19;
  }
  int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *(_DWORD *)(a1 + 24)) ^ (*(int *)(a1 + 24) >> 31));
  if (v9 >= 0x80)
  {
    uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2)+ 1+ v5;
    if ((*(_DWORD *)(a1 + 36) & 8) != 0) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v5 = (v5 + 2);
    if ((v3 & 8) != 0) {
      goto LABEL_15;
    }
  }
LABEL_7:
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  char v7 = *(void **)(a1 + 8);
  if (!v7)
  {
LABEL_8:
    *(_DWORD *)(a1 + 32) = v5;
    return v5;
  }
LABEL_19:
  if (*v7 == v7[1]) {
    goto LABEL_8;
  }
  uint64_t v11 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 32) = v11;
  return v11;
}

uint64_t sub_1001CAAA8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001C8F14(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001CAB88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CAB9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CABB0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001CAC3C()
{
  return 1;
}

uint64_t sub_1001CAC44()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DD68;
}

void sub_1001CACD4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CACE8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((*(unsigned char *)(a2 + 44) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    uint64_t v8 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(void *)(a1 + 24) = v8;
    if ((*(_DWORD *)(a2 + 44) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 44) |= 1u;
  *(void *)(a1 + 16) = v7;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
LABEL_7:
    uint64_t v5 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(void *)(a1 + 32) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001CADC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CADDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CADF0(uint64_t a1)
{
  *(void *)a1 = off_10045E9F0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001CAE44(uint64_t a1)
{
  *(void *)a1 = off_10045E9F0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1001CAEAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1001CAEB4()
{
}

void sub_1001CAF30()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001CAF58(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    *(_OWORD *)(a1 + 16) = xmmword_1003F20D0;
    *(void *)(a1 + 32) = 0xC05390D4FDF3B646;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001CAF94(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_28;
        }
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 17)
        {
          *((void *)this + 1) = v11 + 1;
          goto LABEL_19;
        }
      }
      if (v9 == 2) {
        break;
      }
      if (v9 == 3)
      {
        int v10 = TagFallback & 7;
        if (v10 == 1)
        {
          unint64_t v14 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
            return 0;
          }
          goto LABEL_23;
        }
      }
      else
      {
        int v10 = TagFallback & 7;
      }
LABEL_28:
      if (v10 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v10 = TagFallback & 7;
    if (v10 != 1) {
      goto LABEL_28;
    }
LABEL_19:
    unint64_t v14 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 24) = v14;
    *(_DWORD *)(a1 + 44) |= 2u;
    char v12 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v12 < *((void *)this + 2) && *v12 == 25)
    {
      *((void *)this + 1) = v12 + 1;
      unint64_t v14 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
        return 0;
      }
LABEL_23:
      *(void *)(a1 + 32) = v14;
      *(_DWORD *)(a1 + 44) |= 4u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1001CB1A0(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 44);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    int v5 = *(_DWORD *)(v4 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  if ((*(_DWORD *)(v4 + 44) & 4) == 0)
  {
LABEL_4:
    uint64_t v8 = *(void **)(v4 + 8);
    uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    unsigned int v6 = v8;
    if (!v8) {
      return result;
    }
    goto LABEL_9;
  }
LABEL_8:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
  unsigned int v9 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_9:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_1001CB258(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 44);
  if (v3)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v7;
    a2 += 9;
    int v3 = *(_DWORD *)(a1 + 44);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t v9 = *(void *)(a1 + 32);
      *(unsigned char *)a2 = 25;
      *(void *)(a2 + 1) = v9;
      a2 += 9;
      int v10 = *(void **)(a1 + 8);
      uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v5 = v10;
      if (!v10) {
        return a2;
      }
      goto LABEL_9;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(a1 + 24);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v8;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 44) & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  unsigned int v6 = *(void **)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_9:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_1001CB388(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 44);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if ((v3 & 4) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 44)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

uint64_t sub_1001CB3FC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001CACE8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001CB4DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CB4F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CB504(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001CB590()
{
  return 1;
}

uint64_t sub_1001CB598()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DD78;
}

void sub_1001CB628(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CB63C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      int v5 = *(_DWORD *)(a2 + 16);
      a1[7] |= 1u;
      a1[4] = v5;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 20);
      a1[7] |= 2u;
      a1[5] = v6;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001CB6F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CB708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CB71C(uint64_t a1)
{
  *(void *)a1 = off_10045EAA0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001CB770(uint64_t a1)
{
  *(void *)a1 = off_10045EAA0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1001CB7D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_1001CB7E0()
{
}

void sub_1001CB84C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001CB874(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 28)) {
    *(void *)(a1 + 16) = 0x42852A7F415A872BLL;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 5) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001CB89C(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v9 = TagFallback & 7;
        if (v9 == 5)
        {
          unsigned int v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0) {
            return 0;
          }
          goto LABEL_17;
        }
      }
      else
      {
        int v9 = TagFallback & 7;
      }
LABEL_22:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v9 = TagFallback & 7;
    if (v9 != 5) {
      goto LABEL_22;
    }
    unsigned int v13 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v13) & 1) == 0) {
      return 0;
    }
    a1[4] = v13;
    a1[7] |= 1u;
    int v10 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 21)
    {
      *((void *)this + 1) = v10 + 1;
      unsigned int v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0) {
        return 0;
      }
LABEL_17:
      a1[5] = v12;
      a1[7] |= 2u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1001CBA48(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 28);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(result + 16), a3);
    if ((*(_DWORD *)(v4 + 28) & 2) == 0)
    {
LABEL_3:
      uint64_t v8 = *(void **)(v4 + 8);
      uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      unsigned int v6 = v8;
      if (!v8) {
        return result;
      }
      goto LABEL_7;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v4 + 20), a3);
  int v9 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_7:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_1001CBAE4(_DWORD *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = a1[7];
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    int v8 = a1[5];
    *(unsigned char *)a2 = 21;
    *(_DWORD *)(a2 + 1) = v8;
    a2 += 5;
    int v9 = (void *)*((void *)a1 + 1);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
    int v5 = v9;
    if (!v9) {
      return a2;
    }
    goto LABEL_7;
  }
  int v7 = a1[4];
  *(unsigned char *)a2 = 13;
  *(_DWORD *)(a2 + 1) = v7;
  a2 += 5;
  if ((a1[7] & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  unsigned int v6 = (void *)*((void *)a1 + 1);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_7:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_1001CBB7C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 28);
  unsigned int v4 = (v3 << 31 >> 31) & 5;
  if ((v3 & 2) != 0) {
    v4 += 5;
  }
  if (*(unsigned char *)(a1 + 28)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  int v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 24) = v5;
  return v5;
}

uint64_t sub_1001CBBE4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001CB63C(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001CBCC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CBCD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CBCEC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001CBD78()
{
  return 1;
}

uint64_t sub_1001CBD80()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DD88;
}

void sub_1001CBE10(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CBE24(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      int v5 = *(_DWORD *)(a2 + 16);
      a1[7] |= 1u;
      a1[4] = v5;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 20);
      a1[7] |= 2u;
      a1[5] = v6;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001CBEDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CBEF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CBF04(uint64_t a1)
{
  *(void *)a1 = off_10045EB50;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001CBF58(uint64_t a1)
{
  *(void *)a1 = off_10045EB50;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1001CBFC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_1001CBFC8()
{
}

void sub_1001CC034()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001CC05C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 28)) {
    *(void *)(a1 + 16) = 0x4120000040200000;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 5) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001CC084(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v9 = TagFallback & 7;
        if (v9 == 5)
        {
          unsigned int v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0) {
            return 0;
          }
          goto LABEL_17;
        }
      }
      else
      {
        int v9 = TagFallback & 7;
      }
LABEL_22:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v9 = TagFallback & 7;
    if (v9 != 5) {
      goto LABEL_22;
    }
    unsigned int v13 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v13) & 1) == 0) {
      return 0;
    }
    a1[4] = v13;
    a1[7] |= 1u;
    int v10 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 21)
    {
      *((void *)this + 1) = v10 + 1;
      unsigned int v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0) {
        return 0;
      }
LABEL_17:
      a1[5] = v12;
      a1[7] |= 2u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1001CC230(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 28);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(result + 16), a3);
    if ((*(_DWORD *)(v4 + 28) & 2) == 0)
    {
LABEL_3:
      int v8 = *(void **)(v4 + 8);
      int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      unsigned int v6 = v8;
      if (!v8) {
        return result;
      }
      goto LABEL_7;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v4 + 20), a3);
  int v9 = *(void **)(v4 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_7:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_1001CC2CC(_DWORD *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = a1[7];
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    int v8 = a1[5];
    *(unsigned char *)a2 = 21;
    *(_DWORD *)(a2 + 1) = v8;
    a2 += 5;
    int v9 = (void *)*((void *)a1 + 1);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
    int v5 = v9;
    if (!v9) {
      return a2;
    }
    goto LABEL_7;
  }
  int v7 = a1[4];
  *(unsigned char *)a2 = 13;
  *(_DWORD *)(a2 + 1) = v7;
  a2 += 5;
  if ((a1[7] & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  unsigned int v6 = (void *)*((void *)a1 + 1);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_7:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_1001CC364(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 28);
  unsigned int v4 = (v3 << 31 >> 31) & 5;
  if ((v3 & 2) != 0) {
    v4 += 5;
  }
  if (*(unsigned char *)(a1 + 28)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  int v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 24) = v5;
  return v5;
}

uint64_t sub_1001CC3CC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001CBE24(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001CC4AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CC4C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CC4D4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001CC560()
{
  return 1;
}

uint64_t sub_1001CC568()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DD98;
}

void sub_1001CC5F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CC60C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      int v5 = *(_DWORD *)(a2 + 16);
      a1[7] |= 1u;
      a1[4] = v5;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 20);
      a1[7] |= 2u;
      a1[5] = v6;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001CC6C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CC6D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CC6EC(uint64_t a1)
{
  *(void *)a1 = off_10045EC00;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001CC740(uint64_t a1)
{
  *(void *)a1 = off_10045EC00;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1001CC7A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_1001CC7B0()
{
}

void sub_1001CC81C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001CC844(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 28)) {
    *(void *)(a1 + 16) = 0xC24800003FC00000;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 5) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001CC86C(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v9 = TagFallback & 7;
        if (v9 == 5)
        {
          unsigned int v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0) {
            return 0;
          }
          goto LABEL_17;
        }
      }
      else
      {
        int v9 = TagFallback & 7;
      }
LABEL_22:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v9 = TagFallback & 7;
    if (v9 != 5) {
      goto LABEL_22;
    }
    unsigned int v13 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v13) & 1) == 0) {
      return 0;
    }
    a1[4] = v13;
    a1[7] |= 1u;
    int v10 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 21)
    {
      *((void *)this + 1) = v10 + 1;
      unsigned int v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0) {
        return 0;
      }
LABEL_17:
      a1[5] = v12;
      a1[7] |= 2u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1001CCA18(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 28);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(result + 16), a3);
    if ((*(_DWORD *)(v4 + 28) & 2) == 0)
    {
LABEL_3:
      int v8 = *(void **)(v4 + 8);
      int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      unsigned int v6 = v8;
      if (!v8) {
        return result;
      }
      goto LABEL_7;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v4 + 20), a3);
  int v9 = *(void **)(v4 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_7:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_1001CCAB4(_DWORD *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = a1[7];
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    int v8 = a1[5];
    *(unsigned char *)a2 = 21;
    *(_DWORD *)(a2 + 1) = v8;
    a2 += 5;
    int v9 = (void *)*((void *)a1 + 1);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
    int v5 = v9;
    if (!v9) {
      return a2;
    }
    goto LABEL_7;
  }
  int v7 = a1[4];
  *(unsigned char *)a2 = 13;
  *(_DWORD *)(a2 + 1) = v7;
  a2 += 5;
  if ((a1[7] & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  unsigned int v6 = (void *)*((void *)a1 + 1);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_7:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_1001CCB4C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 28);
  unsigned int v4 = (v3 << 31 >> 31) & 5;
  if ((v3 & 2) != 0) {
    v4 += 5;
  }
  if (*(unsigned char *)(a1 + 28)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  int v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 24) = v5;
  return v5;
}

uint64_t sub_1001CCBB4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001CC60C(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001CCC94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CCCA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CCCBC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001CCD48()
{
  return 1;
}

uint64_t sub_1001CCD50()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DDA8;
}

void sub_1001CCDE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CCDF4(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 28);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 28))
    {
      int v5 = *(_DWORD *)(a2 + 16);
      a1[7] |= 1u;
      a1[4] = v5;
      int v4 = *(_DWORD *)(a2 + 28);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *(_DWORD *)(a2 + 20);
      a1[7] |= 2u;
      a1[5] = v6;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001CCEAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CCEC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CCED4(uint64_t a1)
{
  *(void *)a1 = off_10045ECB0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001CCF28(uint64_t a1)
{
  *(void *)a1 = off_10045ECB0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1001CCF90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_1001CCF98()
{
}

void sub_1001CD004()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001CD02C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 28)) {
    *(void *)(a1 + 16) = 0xC3C800003DCCCCCDLL;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 5) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001CD054(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v9 = TagFallback & 7;
        if (v9 == 5)
        {
          unsigned int v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0) {
            return 0;
          }
          goto LABEL_17;
        }
      }
      else
      {
        int v9 = TagFallback & 7;
      }
LABEL_22:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v9 = TagFallback & 7;
    if (v9 != 5) {
      goto LABEL_22;
    }
    unsigned int v13 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v13) & 1) == 0) {
      return 0;
    }
    a1[4] = v13;
    a1[7] |= 1u;
    int v10 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 21)
    {
      *((void *)this + 1) = v10 + 1;
      unsigned int v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v12) & 1) == 0) {
        return 0;
      }
LABEL_17:
      a1[5] = v12;
      a1[7] |= 2u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1001CD200(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 28);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(result + 16), a3);
    if ((*(_DWORD *)(v4 + 28) & 2) == 0)
    {
LABEL_3:
      int v8 = *(void **)(v4 + 8);
      int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      unsigned int v6 = v8;
      if (!v8) {
        return result;
      }
      goto LABEL_7;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v4 + 20), a3);
  int v9 = *(void **)(v4 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_7:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_1001CD29C(_DWORD *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = a1[7];
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    int v8 = a1[5];
    *(unsigned char *)a2 = 21;
    *(_DWORD *)(a2 + 1) = v8;
    a2 += 5;
    int v9 = (void *)*((void *)a1 + 1);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
    int v5 = v9;
    if (!v9) {
      return a2;
    }
    goto LABEL_7;
  }
  int v7 = a1[4];
  *(unsigned char *)a2 = 13;
  *(_DWORD *)(a2 + 1) = v7;
  a2 += 5;
  if ((a1[7] & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  unsigned int v6 = (void *)*((void *)a1 + 1);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_7:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_1001CD334(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 28);
  unsigned int v4 = (v3 << 31 >> 31) & 5;
  if ((v3 & 2) != 0) {
    v4 += 5;
  }
  if (*(unsigned char *)(a1 + 28)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  int v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 24) = v5;
  return v5;
}

uint64_t sub_1001CD39C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001CCDF4(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001CD47C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CD490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CD4A4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001CD530()
{
  return 1;
}

uint64_t sub_1001CD538()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DDB8;
}

void sub_1001CD5C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CD5DC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
    LOBYTE(v4) = *(unsigned char *)(a2 + 52);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 52);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 52) |= 1u;
    uint64_t v5 = *(_DWORD **)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047F058 + 16);
    }
    sub_1001CB63C(v5, v6);
    int v4 = *(_DWORD *)(a2 + 52);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 52) |= 2u;
    int v7 = *(_DWORD **)(a1 + 24);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10047F058 + 24);
    }
    sub_1001CBE24(v7, v8);
    int v4 = *(_DWORD *)(a2 + 52);
  }
  if ((v4 & 4) != 0)
  {
    *(_DWORD *)(a1 + 52) |= 4u;
    int v9 = *(_DWORD **)(a1 + 32);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = *(void *)(a2 + 32);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_10047F058 + 32);
    }
    sub_1001CC60C(v9, v10);
    int v4 = *(_DWORD *)(a2 + 52);
  }
  if ((v4 & 8) != 0)
  {
    *(_DWORD *)(a1 + 52) |= 8u;
    uint64_t v11 = *(_DWORD **)(a1 + 40);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 40);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_10047F058 + 40);
    }
    sub_1001CCDF4(v11, v12);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001CD8C0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001CD8F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CD908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CD91C(void *a1)
{
  *a1 = off_10045ED60;
  if ((void *)qword_10047F058 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = a1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = a1[4];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = a1[5];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001CDA38(void *a1)
{
  sub_1001CD91C(a1);

  operator delete();
}

uint64_t sub_1001CDA70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_1001CDA78()
{
}

void sub_1001CDAE0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001CDB08(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 52))
  {
    if (*(unsigned char *)(this + 52))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 28)) {
          *(void *)(this + 16) = 0x42852A7F415A872BLL;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 20) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 52) & 2) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this)
      {
        if (*(unsigned char *)(this + 28)) {
          *(void *)(this + 16) = 0x4120000040200000;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 20) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 52) & 4) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        if (*(unsigned char *)(this + 28)) {
          *(void *)(this + 16) = 0xC24800003FC00000;
        }
        uint64_t v4 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 20) = 0;
        if (v4) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 52) & 8) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this)
      {
        if (*(unsigned char *)(this + 28)) {
          *(void *)(this + 16) = 0xC3C800003DCCCCCDLL;
        }
        uint64_t v5 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 20) = 0;
        if (v5) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
  }
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v6 + 11) = 0;
  if (v7)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
  }
  return this;
}

uint64_t sub_1001CDC28(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 < *((void *)this + 2) && (*v7 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        uint64_t v10 = *(_DWORD **)(a1 + 16);
        if (!v10) {
          operator new();
        }
        unsigned int v51 = 0;
        uint64_t v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
        }
          }
        else
        {
          unsigned int v51 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v18 = *((_DWORD *)this + 14);
        int v19 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v18 + 1;
        if (v18 >= v19) {
          return 0;
        }
        int v20 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51);
        if (!sub_1001CB89C(v10, this, v21, v22) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v20);
        int v23 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v23, 1);
        int v25 = v23 - 1;
        if (v25 < 0 == v24) {
          *((_DWORD *)this + 14) = v25;
        }
        uint64_t v26 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 != 18) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
        *(_DWORD *)(a1 + 52) |= 2u;
        uint64_t v12 = *(_DWORD **)(a1 + 24);
        if (!v12) {
LABEL_39:
        }
          operator new();
LABEL_16:
        unsigned int v51 = 0;
        unsigned int v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
        }
          }
        else
        {
          unsigned int v51 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        int v27 = *((_DWORD *)this + 14);
        int v28 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v27 + 1;
        if (v27 >= v28) {
          return 0;
        }
        int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51);
        if (!sub_1001CC084(v12, this, v30, v31) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
        int v32 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v32, 1);
        int v33 = v32 - 1;
        if (v33 < 0 == v24) {
          *((_DWORD *)this + 14) = v33;
        }
        signed int v34 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 != 26) {
          continue;
        }
        *((void *)this + 1) = v34 + 1;
        *(_DWORD *)(a1 + 52) |= 4u;
        unint64_t v14 = *(_DWORD **)(a1 + 32);
        if (!v14) {
LABEL_51:
        }
          operator new();
LABEL_20:
        unsigned int v51 = 0;
        int v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
        }
          }
        else
        {
          unsigned int v51 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51);
        if (!sub_1001CC86C(v14, this, v38, v39) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v40 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v40, 1);
        int v41 = v40 - 1;
        if (v41 < 0 == v24) {
          *((_DWORD *)this + 14) = v41;
        }
        uint64_t v42 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 != 34) {
          continue;
        }
        *((void *)this + 1) = v42 + 1;
        *(_DWORD *)(a1 + 52) |= 8u;
        int v16 = *(_DWORD **)(a1 + 40);
        if (!v16) {
LABEL_63:
        }
          operator new();
LABEL_24:
        unsigned int v51 = 0;
        int v17 = (char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
        }
          }
        else
        {
          unsigned int v51 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        int v43 = *((_DWORD *)this + 14);
        int v44 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v43 + 1;
        if (v43 >= v44) {
          return 0;
        }
        int v45 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v51);
        if (!sub_1001CD054(v16, this, v46, v47) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v45);
        int v48 = *((_DWORD *)this + 14);
        BOOL v24 = __OFSUB__(v48, 1);
        int v49 = v48 - 1;
        if (v49 < 0 == v24) {
          *((_DWORD *)this + 14) = v49;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 52) |= 2u;
        uint64_t v12 = *(_DWORD **)(a1 + 24);
        if (v12) {
          goto LABEL_16;
        }
        goto LABEL_39;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 52) |= 4u;
        unint64_t v14 = *(_DWORD **)(a1 + 32);
        if (v14) {
          goto LABEL_20;
        }
        goto LABEL_51;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 52) |= 8u;
        int v16 = *(_DWORD **)(a1 + 40);
        if (v16) {
          goto LABEL_24;
        }
        goto LABEL_63;
      default:
        int v9 = TagFallback & 7;
LABEL_27:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_1001CE230()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001CE274(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 52);
      if ((v6 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047F058 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 52);
      if ((v6 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
LABEL_15:
    uint64_t v12 = *(void *)(v5 + 32);
    if (v12)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v12, a2, a4);
      if ((*(_DWORD *)(v5 + 52) & 8) != 0) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(qword_10047F058 + 32), a2, a4);
      if ((*(_DWORD *)(v5 + 52) & 8) != 0) {
        goto LABEL_19;
      }
    }
LABEL_5:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_23;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_11:
  uint64_t v11 = *(void *)(v5 + 24);
  if (v11)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v11, a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 4) != 0) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(qword_10047F058 + 24), a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 4) != 0) {
      goto LABEL_15;
    }
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    goto LABEL_5;
  }
LABEL_19:
  uint64_t v13 = *(void *)(v5 + 40);
  if (v13)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v13, a2, a4);
    unint64_t v14 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v14;
    if (!v14) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(qword_10047F058 + 40), a2, a4);
    int v15 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v15;
    if (!v15) {
      return result;
    }
  }
LABEL_23:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001CE3E8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if ((*((unsigned char *)this + 52) & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v5 = (_DWORD *)*((void *)this + 2);
  if (v5)
  {
    *(unsigned char *)a2 = 10;
    unsigned int v6 = a2 + 1;
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v5[6];
    if (v7 <= 0x7F) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v5 = *(_DWORD **)(qword_10047F058 + 16);
    *(unsigned char *)a2 = 10;
    unsigned int v6 = a2 + 1;
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v5[6];
    if (v7 <= 0x7F)
    {
LABEL_4:
      *((unsigned char *)v3 + 1) = (_BYTE)v7;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      int v8 = v5[7];
      if ((v8 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
  }
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, v6, a3);
  int v8 = v5[7];
  if (v8)
  {
LABEL_8:
    int v9 = v5[4];
    *(unsigned char *)uint64_t v3 = 13;
    *(_DWORD *)((char *)v3 + 1) = v9;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    int v8 = v5[7];
  }
LABEL_9:
  if ((v8 & 2) != 0)
  {
    int v13 = v5[5];
    *(unsigned char *)uint64_t v3 = 21;
    *(_DWORD *)((char *)v3 + 1) = v13;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    unint64_t v14 = (void *)*((void *)v5 + 1);
    uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 2);
    uint64_t v10 = v14;
    if (!v14) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v12 = (void *)*((void *)v5 + 1);
    uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 2);
    uint64_t v10 = v12;
    if (!v12) {
      goto LABEL_15;
    }
  }
  if (*v10 != v10[1]) {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v11, v3, a3);
  }
LABEL_15:
  if ((*((unsigned char *)this + 52) & 2) == 0) {
    goto LABEL_29;
  }
  int v15 = (_DWORD *)*((void *)this + 3);
  if (v15)
  {
    *(unsigned char *)uint64_t v3 = 18;
    unsigned int v16 = v3 + 1;
    int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15[6];
    if (v17 <= 0x7F) {
      goto LABEL_18;
    }
LABEL_21:
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, v16, a3);
    int v18 = v15[7];
    if ((v18 & 1) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  int v15 = *(_DWORD **)(qword_10047F058 + 24);
  *(unsigned char *)uint64_t v3 = 18;
  unsigned int v16 = v3 + 1;
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15[6];
  if (v17 > 0x7F) {
    goto LABEL_21;
  }
LABEL_18:
  *((unsigned char *)v3 + 1) = (_BYTE)v17;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  int v18 = v15[7];
  if (v18)
  {
LABEL_22:
    int v19 = v15[4];
    *(unsigned char *)uint64_t v3 = 13;
    *(_DWORD *)((char *)v3 + 1) = v19;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    int v18 = v15[7];
  }
LABEL_23:
  if ((v18 & 2) != 0)
  {
    int v23 = v15[5];
    *(unsigned char *)uint64_t v3 = 21;
    *(_DWORD *)((char *)v3 + 1) = v23;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    BOOL v24 = (void *)*((void *)v15 + 1);
    uint64_t v21 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v15 + 2);
    int v20 = v24;
    if (!v24) {
      goto LABEL_29;
    }
  }
  else
  {
    uint64_t v22 = (void *)*((void *)v15 + 1);
    uint64_t v21 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v15 + 2);
    int v20 = v22;
    if (!v22) {
      goto LABEL_29;
    }
  }
  if (*v20 != v20[1]) {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v21, v3, a3);
  }
LABEL_29:
  if ((*((unsigned char *)this + 52) & 4) == 0) {
    goto LABEL_43;
  }
  int v25 = (_DWORD *)*((void *)this + 4);
  if (v25)
  {
    *(unsigned char *)uint64_t v3 = 26;
    unsigned int v26 = v3 + 1;
    int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25[6];
    if (v27 <= 0x7F) {
      goto LABEL_32;
    }
LABEL_35:
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, v26, a3);
    int v28 = v25[7];
    if ((v28 & 1) == 0) {
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  int v25 = *(_DWORD **)(qword_10047F058 + 32);
  *(unsigned char *)uint64_t v3 = 26;
  unsigned int v26 = v3 + 1;
  int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25[6];
  if (v27 > 0x7F) {
    goto LABEL_35;
  }
LABEL_32:
  *((unsigned char *)v3 + 1) = (_BYTE)v27;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  int v28 = v25[7];
  if (v28)
  {
LABEL_36:
    int v29 = v25[4];
    *(unsigned char *)uint64_t v3 = 13;
    *(_DWORD *)((char *)v3 + 1) = v29;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    int v28 = v25[7];
  }
LABEL_37:
  if ((v28 & 2) != 0)
  {
    int v33 = v25[5];
    *(unsigned char *)uint64_t v3 = 21;
    *(_DWORD *)((char *)v3 + 1) = v33;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    signed int v34 = (void *)*((void *)v25 + 1);
    int v31 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v25 + 2);
    uint64_t v30 = v34;
    if (!v34) {
      goto LABEL_43;
    }
  }
  else
  {
    int v32 = (void *)*((void *)v25 + 1);
    int v31 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v25 + 2);
    uint64_t v30 = v32;
    if (!v32) {
      goto LABEL_43;
    }
  }
  if (*v30 != v30[1]) {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v31, v3, a3);
  }
LABEL_43:
  if ((*((unsigned char *)this + 52) & 8) == 0) {
    goto LABEL_57;
  }
  int v35 = (_DWORD *)*((void *)this + 5);
  if (v35)
  {
    *(unsigned char *)uint64_t v3 = 34;
    unsigned int v36 = v3 + 1;
    int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v35[6];
    if (v37 <= 0x7F) {
      goto LABEL_46;
    }
  }
  else
  {
    int v35 = *(_DWORD **)(qword_10047F058 + 40);
    *(unsigned char *)uint64_t v3 = 34;
    unsigned int v36 = v3 + 1;
    int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v35[6];
    if (v37 <= 0x7F)
    {
LABEL_46:
      *((unsigned char *)v3 + 1) = (_BYTE)v37;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      int v38 = v35[7];
      if ((v38 & 1) == 0) {
        goto LABEL_51;
      }
      goto LABEL_50;
    }
  }
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v37, v36, a3);
  int v38 = v35[7];
  if (v38)
  {
LABEL_50:
    int v39 = v35[4];
    *(unsigned char *)uint64_t v3 = 13;
    *(_DWORD *)((char *)v3 + 1) = v39;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    int v38 = v35[7];
  }
LABEL_51:
  if ((v38 & 2) != 0)
  {
    int v43 = v35[5];
    *(unsigned char *)uint64_t v3 = 21;
    *(_DWORD *)((char *)v3 + 1) = v43;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 5);
    int v44 = (void *)*((void *)v35 + 1);
    int v41 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v35 + 2);
    int v40 = v44;
    if (!v44) {
      goto LABEL_57;
    }
  }
  else
  {
    uint64_t v42 = (void *)*((void *)v35 + 1);
    int v41 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v35 + 2);
    int v40 = v42;
    if (!v42) {
      goto LABEL_57;
    }
  }
  if (*v40 != v40[1]) {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v41, v3, a3);
  }
LABEL_57:
  unsigned int v47 = (void *)*((void *)this + 1);
  uint64_t v46 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v45 = v47;
  if (!v47 || *v45 == v45[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v46, v3, a3);
}

uint64_t sub_1001CE848(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    unsigned int v6 = *(void **)(a1 + 8);
    if (!v6) {
      goto LABEL_39;
    }
    goto LABEL_69;
  }
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v7 = *(void *)(a1 + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_10047F058 + 16);
    }
    int v8 = *(unsigned __int8 *)(v7 + 28);
    int v9 = (v8 << 31 >> 31) & 5;
    if ((v8 & 2) != 0) {
      v9 += 5;
    }
    if (*(unsigned char *)(v7 + 28)) {
      int v10 = v9;
    }
    else {
      int v10 = 0;
    }
    uint64_t v11 = *(void **)(v7 + 8);
    if (!v11 || *v11 == v11[1])
    {
      *(_DWORD *)(v7 + 24) = v10;
      uint64_t v4 = (v10 + 2);
      int v3 = *(_DWORD *)(a1 + 52);
      if ((v3 & 2) == 0) {
        goto LABEL_36;
      }
    }
    else
    {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v7 + 8), a2)+ v10);
      *(_DWORD *)(v7 + 24) = v12;
      if (v12 >= 0x80)
      {
        uint64_t v4 = v12
           + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2)+ 1;
        int v3 = *(_DWORD *)(a1 + 52);
        if ((v3 & 2) == 0) {
          goto LABEL_36;
        }
      }
      else
      {
        uint64_t v4 = (v12 + 2);
        int v3 = *(_DWORD *)(a1 + 52);
        if ((v3 & 2) == 0) {
          goto LABEL_36;
        }
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
      goto LABEL_36;
    }
  }
  uint64_t v13 = *(void *)(a1 + 24);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_10047F058 + 24);
  }
  int v14 = *(unsigned __int8 *)(v13 + 28);
  int v15 = (v14 << 31 >> 31) & 5;
  if ((v14 & 2) != 0) {
    v15 += 5;
  }
  if (*(unsigned char *)(v13 + 28)) {
    LODWORD(v16) = v15;
  }
  else {
    LODWORD(v16) = 0;
  }
  int v17 = *(void **)(v13 + 8);
  if (!v17 || *v17 == v17[1])
  {
    *(_DWORD *)(v13 + 24) = v16;
    int v18 = 1;
  }
  else
  {
    unsigned int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v13 + 8), a2)+ v16);
    *(_DWORD *)(v13 + 24) = v16;
    if (v16 >= 0x80) {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
    }
    else {
      int v18 = 1;
    }
  }
  uint64_t v4 = (v4 + v16 + v18 + 1);
  int v3 = *(_DWORD *)(a1 + 52);
LABEL_36:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_38;
    }
LABEL_55:
    uint64_t v26 = *(void *)(a1 + 40);
    if (!v26) {
      uint64_t v26 = *(void *)(qword_10047F058 + 40);
    }
    int v27 = *(unsigned __int8 *)(v26 + 28);
    int v28 = (v27 << 31 >> 31) & 5;
    if ((v27 & 2) != 0) {
      v28 += 5;
    }
    if (*(unsigned char *)(v26 + 28)) {
      LODWORD(v29) = v28;
    }
    else {
      LODWORD(v29) = 0;
    }
    uint64_t v30 = *(void **)(v26 + 8);
    if (!v30 || *v30 == v30[1])
    {
      *(_DWORD *)(v26 + 24) = v29;
      int v31 = 1;
    }
    else
    {
      int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v26 + 8), a2)+ v29);
      *(_DWORD *)(v26 + 24) = v29;
      if (v29 >= 0x80) {
        int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2);
      }
      else {
        int v31 = 1;
      }
    }
    uint64_t v4 = (v4 + v29 + v31 + 1);
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    unsigned int v6 = *(void **)(a1 + 8);
    if (!v6) {
      goto LABEL_39;
    }
    goto LABEL_69;
  }
  uint64_t v20 = *(void *)(a1 + 32);
  if (!v20) {
    uint64_t v20 = *(void *)(qword_10047F058 + 32);
  }
  int v21 = *(unsigned __int8 *)(v20 + 28);
  int v22 = (v21 << 31 >> 31) & 5;
  if ((v21 & 2) != 0) {
    v22 += 5;
  }
  if (*(unsigned char *)(v20 + 28)) {
    int v23 = v22;
  }
  else {
    int v23 = 0;
  }
  BOOL v24 = *(void **)(v20 + 8);
  if (!v24 || *v24 == v24[1])
  {
    *(_DWORD *)(v20 + 24) = v23;
    uint64_t v4 = (v4 + v23 + 2);
    if ((*(_DWORD *)(a1 + 52) & 8) != 0) {
      goto LABEL_55;
    }
  }
  else
  {
    int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v20 + 8), a2)+ v23);
    *(_DWORD *)(v20 + 24) = v25;
    if (v25 >= 0x80)
    {
      uint64_t v4 = v4
         + v25
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2)+ 1;
      if ((*(_DWORD *)(a1 + 52) & 8) != 0) {
        goto LABEL_55;
      }
    }
    else
    {
      uint64_t v4 = (v4 + v25 + 2);
      if ((*(_DWORD *)(a1 + 52) & 8) != 0) {
        goto LABEL_55;
      }
    }
  }
LABEL_38:
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v6 = *(void **)(a1 + 8);
  if (!v6)
  {
LABEL_39:
    *(_DWORD *)(a1 + 48) = v4;
    return v4;
  }
LABEL_69:
  if (*v6 == v6[1]) {
    goto LABEL_39;
  }
  uint64_t v32 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
      + v4;
  *(_DWORD *)(a1 + 48) = v32;
  return v32;
}

uint64_t sub_1001CEB78(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001CD5DC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001CEC58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CEC6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CEC80(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001CED0C()
{
  return 1;
}

uint64_t sub_1001CED14()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DDC8;
}

void sub_1001CEDA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CEDB8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
    LOBYTE(v4) = *(unsigned char *)(a2 + 52);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 52);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 52) |= 1u;
    *(void *)(a1 + 16) = v5;
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 2) == 0)
    {
LABEL_7:
      if ((v4 & 4) == 0) {
        goto LABEL_8;
      }
LABEL_12:
      *(_DWORD *)(a1 + 52) |= 4u;
      uint64_t v7 = *(void *)(a1 + 32);
      if (!v7) {
        operator new();
      }
      uint64_t v8 = *(void *)(a2 + 32);
      if (v8)
      {
        sub_1001CACE8(v7, v8);
        if ((*(_DWORD *)(a2 + 52) & 8) == 0) {
          return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
        }
      }
      else
      {
        sub_1001CACE8(v7, *(void *)(qword_10047F060 + 32));
        if ((*(_DWORD *)(a2 + 52) & 8) == 0) {
          return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
        }
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 52) |= 2u;
  *(void *)(a1 + 24) = v6;
  int v4 = *(_DWORD *)(a2 + 52);
  if ((v4 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_8:
  if ((v4 & 8) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
LABEL_18:
  *(_DWORD *)(a1 + 52) |= 8u;
  uint64_t v9 = *(void *)(a1 + 40);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = *(void *)(a2 + 40);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_10047F060 + 40);
  }
  sub_1001CD5DC(v9, v10);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001CEFD8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001CF000()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001CF028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CF03C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CF050(void *a1)
{
  *a1 = off_10045EE10;
  if ((void *)qword_10047F060 != a1)
  {
    uint64_t v2 = a1[4];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = a1[5];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001CF110(void *a1)
{
  *a1 = off_10045EE10;
  if ((void *)qword_10047F060 != a1)
  {
    uint64_t v2 = a1[4];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = a1[5];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1001CF1E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_1001CF1EC()
{
}

void sub_1001CF25C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001CF284(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 52);
  if (v2)
  {
    *(_OWORD *)(this + 16) = xmmword_1003F20E0;
    if ((v2 & 4) != 0)
    {
      this = *(void *)(this + 32);
      if (this)
      {
        if (*(unsigned char *)(this + 44))
        {
          *(_OWORD *)(this + 16) = xmmword_1003F20D0;
          *(void *)(this + 32) = 0xC05390D4FDF3B646;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 36) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 52) & 8) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this) {
        this = sub_1001CDB08(this);
      }
    }
  }
  uint64_t v5 = *(void *)(v1 + 8);
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 11) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_1001CF33C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 < *((void *)this + 2) && (*v7 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_27;
        }
        *(void *)signed int v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v34) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v34;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
LABEL_15:
        *(void *)signed int v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v34) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v34;
        }
        int v11 = *(_DWORD *)(a1 + 52) | 2;
        *(_DWORD *)(a1 + 52) = v11;
        uint64_t v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 26) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
        *(_DWORD *)(a1 + 52) = v11 | 4;
        uint64_t v13 = *(void *)(a1 + 32);
        if (!v13) {
LABEL_22:
        }
          operator new();
LABEL_23:
        v34[0] = 0;
        int v14 = (char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v34))return 0; {
        }
          }
        else
        {
          v34[0] = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        int v15 = *((_DWORD *)this + 14);
        int v16 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0;
        }
        int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34[0]);
        if (!sub_1001CAF94(v13, this, v18, v19) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
        int v20 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)this + 14) = v22;
        }
        int v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 34) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
LABEL_39:
        *(_DWORD *)(a1 + 52) |= 8u;
        uint64_t v24 = *(void *)(a1 + 40);
        if (!v24) {
          operator new();
        }
        v34[0] = 0;
        int v25 = (char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v34))return 0; {
        }
          }
        else
        {
          v34[0] = *v25;
          *((void *)this + 1) = v25 + 1;
        }
        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34[0]);
        if (!sub_1001CDC28(v24, this, v29, v30) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v31 = *((_DWORD *)this + 14);
        BOOL v21 = __OFSUB__(v31, 1);
        int v32 = v31 - 1;
        if (v32 < 0 == v21) {
          *((_DWORD *)this + 14) = v32;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_15;
        }
        goto LABEL_27;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 52) |= 4u;
        uint64_t v13 = *(void *)(a1 + 32);
        if (!v13) {
          goto LABEL_22;
        }
        goto LABEL_23;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_27;
        }
        goto LABEL_39;
      default:
        int v9 = TagFallback & 7;
LABEL_27:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_1001CF774()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001CF79C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001CF7D4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_9:
      uint64_t v10 = *(void *)(v5 + 32);
      if (v10)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v10, a2, a4);
        if ((*(_DWORD *)(v5 + 52) & 8) != 0) {
          goto LABEL_13;
        }
      }
      else
      {
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(qword_10047F060 + 32), a2, a4);
        if ((*(_DWORD *)(v5 + 52) & 8) != 0) {
          goto LABEL_13;
        }
      }
LABEL_5:
      int v9 = *(void **)(v5 + 8);
      uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
      uint64_t v7 = v9;
      if (!v9) {
        return result;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) != 0) {
    goto LABEL_9;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    goto LABEL_5;
  }
LABEL_13:
  uint64_t v11 = *(void *)(v5 + 40);
  if (v11)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v11, a2, a4);
    uint64_t v12 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v12;
    if (!v12) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(qword_10047F060 + 40), a2, a4);
    uint64_t v13 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v13;
    if (!v13) {
      return result;
    }
  }
LABEL_17:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001CF8F8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 13);
  if (v5)
  {
    uint64_t v9 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)((char *)a2 + 1) = v9;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
    int v5 = *((_DWORD *)this + 13);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_9:
      uint64_t v11 = *((void *)this + 4);
      if (v11)
      {
        *(unsigned char *)uint64_t v3 = 26;
        unsigned int v12 = v3 + 1;
        uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v11 + 40);
        if (v13 <= 0x7F) {
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v11 = *(void *)(qword_10047F060 + 32);
        *(unsigned char *)uint64_t v3 = 26;
        unsigned int v12 = v3 + 1;
        uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v11 + 40);
        if (v13 <= 0x7F)
        {
LABEL_11:
          *((unsigned char *)v3 + 1) = (_BYTE)v13;
          uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001CB258(v11, (uint64_t)v3 + 2, a3);
          if ((*((_DWORD *)this + 13) & 8) != 0) {
            goto LABEL_15;
          }
LABEL_5:
          uint64_t v8 = (void *)*((void *)this + 1);
          uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
          int v6 = v8;
          if (!v8) {
            return v3;
          }
          goto LABEL_21;
        }
      }
      uint64_t v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v12, a3);
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001CB258(v11, v14, v15);
      if ((*((_DWORD *)this + 13) & 8) != 0) {
        goto LABEL_15;
      }
      goto LABEL_5;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v10 = *((void *)this + 3);
  *(unsigned char *)uint64_t v3 = 17;
  *(void *)((char *)v3 + 1) = v10;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v5 = *((_DWORD *)this + 13);
  if ((v5 & 4) != 0) {
    goto LABEL_9;
  }
LABEL_4:
  if ((v5 & 8) == 0) {
    goto LABEL_5;
  }
LABEL_15:
  int v16 = (unsigned int *)*((void *)this + 5);
  if (v16)
  {
    *(unsigned char *)uint64_t v3 = 34;
    unsigned int v17 = v3 + 1;
    uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[12];
    if (v18 <= 0x7F) {
      goto LABEL_17;
    }
  }
  else
  {
    int v16 = *(unsigned int **)(qword_10047F060 + 40);
    *(unsigned char *)uint64_t v3 = 34;
    unsigned int v17 = v3 + 1;
    uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[12];
    if (v18 <= 0x7F)
    {
LABEL_17:
      *((unsigned char *)v3 + 1) = (_BYTE)v18;
      uint64_t v3 = sub_1001CE3E8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2), a3);
      int v19 = (void *)*((void *)this + 1);
      uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      int v6 = v19;
      if (!v19) {
        return v3;
      }
      goto LABEL_21;
    }
  }
  int v20 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, v17, a3);
  uint64_t v3 = sub_1001CE3E8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, v20, v21);
  int v22 = (void *)*((void *)this + 1);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v6 = v22;
  if (!v22) {
    return v3;
  }
LABEL_21:
  if (*v6 == v6[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v7, v3, a3);
}

uint64_t sub_1001CFB18(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 52);
  if (!*(unsigned char *)(a1 + 52))
  {
    uint64_t v5 = 0;
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_8;
    }
    goto LABEL_34;
  }
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    uint64_t v5 = v4 + 9;
  }
  else {
    uint64_t v5 = v4;
  }
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_7;
    }
LABEL_28:
    uint64_t v15 = *(void *)(a1 + 40);
    if (v15)
    {
      int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001CE848(v15, a2);
      if (v16 < 0x80)
      {
LABEL_30:
        int v17 = 1;
        goto LABEL_33;
      }
    }
    else
    {
      int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001CE848(*(void *)(qword_10047F060 + 40), a2);
      if (v16 < 0x80) {
        goto LABEL_30;
      }
    }
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
LABEL_33:
    uint64_t v5 = (v5 + v16 + v17 + 1);
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_8;
    }
    goto LABEL_34;
  }
  uint64_t v9 = *(void *)(a1 + 32);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10047F060 + 32);
  }
  int v10 = *(unsigned __int8 *)(v9 + 44);
  int v11 = (v10 << 31 >> 31) & 9;
  if ((v10 & 2) != 0) {
    v11 += 9;
  }
  if ((v10 & 4) != 0) {
    v11 += 9;
  }
  if (*(unsigned char *)(v9 + 44)) {
    int v12 = v11;
  }
  else {
    int v12 = 0;
  }
  uint64_t v13 = *(void **)(v9 + 8);
  if (!v13 || *v13 == v13[1])
  {
    *(_DWORD *)(v9 + 40) = v12;
    uint64_t v5 = (v5 + v12 + 1 + 1);
    if ((*(_DWORD *)(a1 + 52) & 8) != 0) {
      goto LABEL_28;
    }
  }
  else
  {
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8), a2)+ v12);
    *(_DWORD *)(v9 + 40) = v14;
    if (v14 >= 0x80)
    {
      uint64_t v5 = v5
         + v14
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2)+ 1;
      if ((*(_DWORD *)(a1 + 52) & 8) != 0) {
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v5 = (v5 + v14 + 1 + 1);
      if ((*(_DWORD *)(a1 + 52) & 8) != 0) {
        goto LABEL_28;
      }
    }
  }
LABEL_7:
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = *(void **)(a1 + 8);
  if (!v7)
  {
LABEL_8:
    *(_DWORD *)(a1 + 48) = v5;
    return v5;
  }
LABEL_34:
  if (*v7 == v7[1]) {
    goto LABEL_8;
  }
  uint64_t v18 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 48) = v18;
  return v18;
}

uint64_t sub_1001CFCE0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001CEDB8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001CFDC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001CFDD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CFDE8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001CFE74()
{
  return 1;
}

uint64_t sub_1001CFE7C()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DDD8;
}

void sub_1001CFF0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CFF20(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 40))
  {
    int v7 = *(_DWORD *)(a2 + 16);
    a1[10] |= 1u;
    a1[4] = v7;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a2 + 40) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *(_DWORD *)(a2 + 20);
  a1[10] |= 2u;
  a1[5] = v8;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_14:
    int v10 = *(_DWORD *)(a2 + 28);
    a1[10] |= 8u;
    a1[7] = v10;
    if ((*(_DWORD *)(a2 + 40) & 0x10) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_9;
  }
LABEL_13:
  int v9 = *(_DWORD *)(a2 + 24);
  a1[10] |= 4u;
  a1[6] = v9;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_8:
  if ((v4 & 0x10) != 0)
  {
LABEL_9:
    int v5 = *(_DWORD *)(a2 + 32);
    a1[10] |= 0x10u;
    a1[8] = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001D0040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D0054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D0068(uint64_t a1)
{
  *(void *)a1 = off_10045EEC0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001D00BC(uint64_t a1)
{
  *(void *)a1 = off_10045EEC0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1001D0124(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_1001D012C()
{
}

void sub_1001D01A0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001D01C8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    *(_DWORD *)(a1 + 16) = 10;
    *(_OWORD *)(a1 + 20) = xmmword_1003F20F0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 8) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001D01F8(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = a1 + 4;
  unsigned int v7 = a1 + 8;
  while (2)
  {
    int v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v12 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v12 < v11 && (*v12 & 0x80000000) == 0)
        {
          *int v6 = *v12;
          uint64_t v13 = v12 + 1;
          *((void *)this + 1) = v13;
          a1[10] |= 1u;
          if ((unint64_t)v13 >= v11) {
            continue;
          }
          goto LABEL_29;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (result)
        {
          uint64_t v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
          a1[10] |= 1u;
          if ((unint64_t)v13 >= v15) {
            continue;
          }
LABEL_29:
          if (*v13 != 21) {
            continue;
          }
          *((void *)this + 1) = v13 + 1;
          unsigned int v19 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v19) & 1) == 0) {
            return 0;
          }
          goto LABEL_31;
        }
        return result;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 5) {
          goto LABEL_24;
        }
        unsigned int v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v19) & 1) == 0) {
          return 0;
        }
LABEL_31:
        a1[5] = v19;
        a1[10] |= 2u;
        int v16 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 != 29) {
          continue;
        }
        *((void *)this + 1) = v16 + 1;
        unsigned int v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v19) & 1) == 0) {
          return 0;
        }
LABEL_34:
        a1[6] = v19;
        a1[10] |= 4u;
        int v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 37) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        unsigned int v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v19) & 1) == 0) {
          return 0;
        }
LABEL_37:
        a1[7] = v19;
        a1[10] |= 8u;
        uint64_t v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 45) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
LABEL_40:
        unsigned int v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v19) & 1) == 0) {
          return 0;
        }
        a1[8] = v19;
        a1[10] |= 0x10u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v10 = TagFallback & 7;
        if (v10 != 5) {
          goto LABEL_24;
        }
        unsigned int v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v19) & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 != 5) {
          goto LABEL_24;
        }
        unsigned int v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v19) & 1) == 0) {
          return 0;
        }
        goto LABEL_37;
      case 5u:
        int v10 = TagFallback & 7;
        if (v10 != 5) {
          goto LABEL_24;
        }
        goto LABEL_40;
      default:
        int v10 = TagFallback & 7;
LABEL_24:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1001D0534(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 28), a3);
  if ((*(_DWORD *)(v5 + 40) & 0x10) == 0)
  {
LABEL_6:
    int v9 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    unsigned int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(float *)(v5 + 32), a3);
  int v10 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_13:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

unsigned char *sub_1001D0624(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 40))
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    *a2 = 8;
    if (v8 > 0x7F)
    {
      a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)a2 + 1, a3);
      int v4 = *((_DWORD *)this + 10);
      if ((v4 & 2) != 0) {
        goto LABEL_12;
      }
    }
    else
    {
      a2[1] = (_BYTE)v8;
      a2 += 2;
      int v4 = *((_DWORD *)this + 10);
      if ((v4 & 2) != 0) {
        goto LABEL_12;
      }
    }
LABEL_3:
    if ((v4 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_13;
  }
  int v4 = *((_DWORD *)this + 10);
  if ((v4 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_12:
  int v9 = *((_DWORD *)this + 5);
  *a2 = 21;
  *(_DWORD *)(a2 + 1) = v9;
  a2 += 5;
  int v4 = *((_DWORD *)this + 10);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  int v10 = *((_DWORD *)this + 6);
  *a2 = 29;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  int v4 = *((_DWORD *)this + 10);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  int v11 = *((_DWORD *)this + 7);
  *a2 = 37;
  *(_DWORD *)(a2 + 1) = v11;
  a2 += 5;
  if ((*((_DWORD *)this + 10) & 0x10) == 0)
  {
LABEL_6:
    unsigned int v7 = (void *)*((void *)this + 1);
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = v7;
    if (!v7) {
      return a2;
    }
    goto LABEL_16;
  }
LABEL_15:
  int v12 = *((_DWORD *)this + 8);
  *a2 = 45;
  *(_DWORD *)(a2 + 1) = v12;
  a2 += 5;
  uint64_t v13 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v13;
  if (!v13) {
    return a2;
  }
LABEL_16:
  if (*v5 == v5[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1001D07AC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 40))
    {
      int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if (v9 >= 0x80)
      {
        unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2)
           + 1;
        int v3 = *(_DWORD *)(a1 + 40);
      }
      else
      {
        unsigned int v4 = 2;
      }
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 5;
    }
    if ((v3 & 4) != 0) {
      v4 += 5;
    }
    if ((v3 & 8) != 0) {
      v4 += 5;
    }
    if ((v3 & 0x10) != 0) {
      uint64_t v5 = v4 + 5;
    }
    else {
      uint64_t v5 = v4;
    }
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    unsigned int v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v5 = 0;
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    unsigned int v7 = *(void **)(a1 + 8);
    if (!v7)
    {
LABEL_5:
      *(_DWORD *)(a1 + 36) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1]) {
    goto LABEL_5;
  }
  uint64_t v10 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 36) = v10;
  return v10;
}

uint64_t sub_1001D087C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001CFF20(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001D095C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D0970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D0984(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001D0A10()
{
  return 1;
}

uint64_t sub_1001D0A18()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DDE8;
}

void sub_1001D0AA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D0ABC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
    LOBYTE(v4) = *(unsigned char *)(a2 + 48);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 48);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 48) |= 1u;
    *(void *)(a1 + 16) = v5;
    int v4 = *(_DWORD *)(a2 + 48);
    if ((v4 & 2) == 0)
    {
LABEL_7:
      if ((v4 & 4) == 0) {
        goto LABEL_8;
      }
LABEL_12:
      int v7 = *(_DWORD *)(a2 + 40);
      *(_DWORD *)(a1 + 48) |= 4u;
      *(_DWORD *)(a1 + 40) = v7;
      if ((*(_DWORD *)(a2 + 48) & 8) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 48) |= 2u;
  *(void *)(a1 + 24) = v6;
  int v4 = *(_DWORD *)(a2 + 48);
  if ((v4 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_8:
  if ((v4 & 8) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
LABEL_13:
  *(_DWORD *)(a1 + 48) |= 8u;
  int v8 = *(_DWORD **)(a1 + 32);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = *(void *)(a2 + 32);
  if (!v9) {
    uint64_t v9 = *(void *)(qword_10047F070 + 32);
  }
  sub_1001CFF20(v8, v9);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001D0C50()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001D0C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D0C8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D0CA0(void *a1)
{
  *a1 = off_10045EF70;
  if ((void *)qword_10047F070 != a1)
  {
    uint64_t v2 = a1[4];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001D0D34(void *a1)
{
  *a1 = off_10045EF70;
  if ((void *)qword_10047F070 != a1)
  {
    uint64_t v2 = a1[4];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1001D0DDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 44) = a2;
  return result;
}

void sub_1001D0DE4()
{
}

void sub_1001D0E54()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001D0E7C(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 48);
  if (v2)
  {
    *(_OWORD *)(this + 16) = xmmword_1003F2100;
    *(_DWORD *)(this + 40) = 0;
    if ((v2 & 8) != 0)
    {
      this = *(void *)(this + 32);
      if (this)
      {
        if (*(unsigned char *)(this + 40))
        {
          *(_DWORD *)(this + 16) = 10;
          *(_OWORD *)(this + 20) = xmmword_1003F20F0;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 32) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
  }
  uint64_t v5 = *(void *)(v1 + 8);
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 10) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_1001D0F18(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_26;
        }
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 48) |= 1u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_26;
        }
LABEL_15:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v27) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v27;
        }
        *(_DWORD *)(a1 + 48) |= 2u;
        int v12 = (unsigned char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v12 >= v11 || *v12 != 24) {
          continue;
        }
        uint64_t v13 = v12 + 1;
        *((void *)this + 1) = v13;
LABEL_21:
        v27[0] = 0;
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27);
          if (!result) {
            return result;
          }
          unsigned int v14 = v27[0];
          if (v27[0] <= 1)
          {
LABEL_24:
            *(_DWORD *)(a1 + 48) |= 4u;
            *(_DWORD *)(a1 + 40) = v14;
            goto LABEL_32;
          }
        }
        else
        {
          unsigned int v14 = *v13;
          *((void *)this + 1) = v13 + 1;
          if (v14 <= 1) {
            goto LABEL_24;
          }
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 3, (int)v14);
LABEL_32:
        int v16 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 != 34) {
          continue;
        }
        *((void *)this + 1) = v16 + 1;
LABEL_35:
        *(_DWORD *)(a1 + 48) |= 8u;
        int v17 = *(_DWORD **)(a1 + 32);
        if (!v17) {
          operator new();
        }
        v27[0] = 0;
        uint64_t v18 = (char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v27))return 0; {
        }
          }
        else
        {
          v27[0] = *v18;
          *((void *)this + 1) = v18 + 1;
        }
        int v19 = *((_DWORD *)this + 14);
        int v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v27[0]);
        if (!sub_1001D01F8(v17, this, v22, v23) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
        int v24 = *((_DWORD *)this + 14);
        BOOL v25 = __OFSUB__(v24, 1);
        int v26 = v24 - 1;
        if (v26 < 0 == v25) {
          *((_DWORD *)this + 14) = v26;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_21;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_26;
        }
        goto LABEL_35;
      default:
        int v9 = TagFallback & 7;
LABEL_26:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_1001D12AC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001D12E4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 40), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 8) == 0)
  {
LABEL_5:
    int v9 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_14;
  }
LABEL_10:
  uint64_t v10 = *(void *)(v5 + 32);
  if (v10)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
    unint64_t v11 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v11;
    if (!v11) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(qword_10047F070 + 32), a2, a4);
    int v12 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v12;
    if (!v12) {
      return result;
    }
  }
LABEL_14:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001D13E0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  int v5 = *((_DWORD *)this + 12);
  if (v5)
  {
    uint64_t v9 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)((char *)a2 + 1) = v9;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
    int v5 = *((_DWORD *)this + 12);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_9:
      unint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 10);
      *(unsigned char *)uint64_t v3 = 24;
      unint64_t v12 = (unint64_t)v3 + 1;
      if ((v11 & 0x80000000) != 0)
      {
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v11, v12, a3);
        if ((*((unsigned char *)this + 48) & 8) != 0) {
          goto LABEL_16;
        }
      }
      else if (v11 > 0x7F)
      {
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v12, a3);
        if ((*((unsigned char *)this + 48) & 8) != 0) {
          goto LABEL_16;
        }
      }
      else
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v11;
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
        if ((*((unsigned char *)this + 48) & 8) != 0) {
          goto LABEL_16;
        }
      }
LABEL_5:
      int v8 = (void *)*((void *)this + 1);
      int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      int v6 = v8;
      if (!v8) {
        return v3;
      }
      goto LABEL_22;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v10 = *((void *)this + 3);
  *(unsigned char *)uint64_t v3 = 17;
  *(void *)((char *)v3 + 1) = v10;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  if ((*((_DWORD *)this + 12) & 4) != 0) {
    goto LABEL_9;
  }
LABEL_4:
  if ((*((unsigned char *)this + 48) & 8) == 0) {
    goto LABEL_5;
  }
LABEL_16:
  uint64_t v13 = (unsigned int *)*((void *)this + 4);
  if (v13)
  {
    *(unsigned char *)uint64_t v3 = 34;
    unsigned int v14 = v3 + 1;
    unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[9];
    if (v15 <= 0x7F) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v13 = *(unsigned int **)(qword_10047F070 + 32);
    *(unsigned char *)uint64_t v3 = 34;
    unsigned int v14 = v3 + 1;
    unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[9];
    if (v15 <= 0x7F)
    {
LABEL_18:
      *((unsigned char *)v3 + 1) = (_BYTE)v15;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001D0624((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, (unsigned char *)v3 + 2, a3);
      int v16 = (void *)*((void *)this + 1);
      int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      int v6 = v16;
      if (!v16) {
        return v3;
      }
      goto LABEL_22;
    }
  }
  int v17 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, v14, a3);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1001D0624((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v17, v18);
  int v19 = (void *)*((void *)this + 1);
  int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v6 = v19;
  if (!v19) {
    return v3;
  }
LABEL_22:
  if (*v6 == v6[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v7, v3, a3);
}

uint64_t sub_1001D15D8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 48);
  if (!*(unsigned char *)(a1 + 48))
  {
    uint64_t v5 = 0;
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_8;
    }
    goto LABEL_44;
  }
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    uint64_t v5 = v4 + 9;
  }
  else {
    uint64_t v5 = v4;
  }
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_7;
    }
LABEL_18:
    uint64_t v10 = *(void *)(a1 + 32);
    if (v10)
    {
      LOBYTE(v11) = *(unsigned char *)(v10 + 40);
      if ((_BYTE)v11) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v10 = *(void *)(qword_10047F070 + 32);
      LOBYTE(v11) = *(unsigned char *)(v10 + 40);
      if ((_BYTE)v11)
      {
LABEL_20:
        if (v11)
        {
          int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v10 + 16);
          if (v16 >= 0x80)
          {
            unsigned int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2)+ 1;
            int v11 = *(_DWORD *)(v10 + 40);
          }
          else
          {
            unsigned int v12 = 2;
          }
        }
        else
        {
          unsigned int v12 = 0;
        }
        if ((v11 & 2) != 0) {
          v12 += 5;
        }
        if ((v11 & 4) != 0) {
          v12 += 5;
        }
        if ((v11 & 8) != 0) {
          v12 += 5;
        }
        if ((v11 & 0x10) != 0) {
          uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v12 + 5);
        }
        else {
          uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12;
        }
        unsigned int v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v10 + 8);
        unint64_t v15 = *(void **)(v10 + 8);
        if (!v15)
        {
LABEL_40:
          *(_DWORD *)(v10 + 36) = v13;
          if (v13 >= 0x80) {
            int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
          }
          else {
            int v17 = 1;
          }
          uint64_t v5 = (v5 + v13 + v17 + 1);
          int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
          int v7 = *(void **)(a1 + 8);
          if (!v7) {
            goto LABEL_8;
          }
          goto LABEL_44;
        }
LABEL_38:
        if (*v15 != v15[1]) {
          uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v14, a2)+ v13);
        }
        goto LABEL_40;
      }
    }
    uint64_t v13 = 0;
    unsigned int v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v10 + 8);
    unint64_t v15 = *(void **)(v10 + 8);
    if (!v15) {
      goto LABEL_40;
    }
    goto LABEL_38;
  }
  uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if ((v9 & 0x80000000) != 0)
  {
    uint64_t v5 = (v5 + 11);
    if ((v3 & 8) != 0) {
      goto LABEL_18;
    }
  }
  else if (v9 >= 0x80)
  {
    uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2)+ 1+ v5;
    if ((*(_DWORD *)(a1 + 48) & 8) != 0) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v5 = (v5 + 2);
    if ((v3 & 8) != 0) {
      goto LABEL_18;
    }
  }
LABEL_7:
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = *(void **)(a1 + 8);
  if (!v7)
  {
LABEL_8:
    *(_DWORD *)(a1 + 44) = v5;
    return v5;
  }
LABEL_44:
  if (*v7 == v7[1]) {
    goto LABEL_8;
  }
  uint64_t v18 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 44) = v18;
  return v18;
}

uint64_t sub_1001D17A8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001D0ABC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001D1888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D189C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D18B0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001D193C()
{
  return 1;
}

uint64_t sub_1001D1944()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DDF8;
}

void sub_1001D19D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D19E8(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
  }
  uint64_t v4 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      while (1)
      {
        uint64_t v9 = *(const std::string **)(*(void *)(a2 + 16) + 8 * v5);
        int v10 = a1[7];
        uint64_t v11 = (int)a1[6];
        if ((int)v11 >= v10) {
          break;
        }
        uint64_t v12 = *((void *)a1 + 2);
        a1[6] = v11 + 1;
        uint64_t v4 = std::string::operator=(*(std::string **)(v12 + 8 * v11), v9);
        if (++v5 >= *(int *)(a2 + 24)) {
          goto LABEL_11;
        }
      }
      if (v10 == a1[8])
      {
        uint64_t v4 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), v10 + 1);
        int v10 = a1[7];
      }
      a1[7] = v10 + 1;
      int v6 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)v4);
      uint64_t v7 = *((void *)a1 + 2);
      uint64_t v8 = (int)a1[6];
      a1[6] = v8 + 1;
      *(void *)(v7 + 8 * v8) = v6;
      uint64_t v4 = std::string::operator=(v6, v9);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
LABEL_11:
  uint64_t v13 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 10), *(_DWORD *)(a2 + 48) + a1[12]);
  if (*(int *)(a2 + 48) >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      while (1)
      {
        uint64_t v18 = *(const std::string **)(*(void *)(a2 + 40) + 8 * v14);
        int v19 = a1[13];
        uint64_t v20 = (int)a1[12];
        if ((int)v20 >= v19) {
          break;
        }
        uint64_t v21 = *((void *)a1 + 5);
        a1[12] = v20 + 1;
        uint64_t v13 = std::string::operator=(*(std::string **)(v21 + 8 * v20), v18);
        if (++v14 >= *(int *)(a2 + 48)) {
          return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
        }
      }
      if (v19 == a1[14])
      {
        uint64_t v13 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 10), v19 + 1);
        int v19 = a1[13];
      }
      a1[13] = v19 + 1;
      unint64_t v15 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)v13);
      uint64_t v16 = *((void *)a1 + 5);
      uint64_t v17 = (int)a1[12];
      a1[12] = v17 + 1;
      *(void *)(v16 + 8 * v17) = v15;
      uint64_t v13 = std::string::operator=(v15, v18);
      ++v14;
    }
    while (v14 < *(int *)(a2 + 48));
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001D1C04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D1C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D1C2C(uint64_t a1)
{
  *(void *)a1 = off_10045F020;
  if (*(int *)(a1 + 52) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete();
      ++v2;
    }
    while (v2 < *(int *)(a1 + 52));
  }
  if (*(void *)(a1 + 40)) {
    operator delete[]();
  }
  if (*(int *)(a1 + 28) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete();
      ++v3;
    }
    while (v3 < *(int *)(a1 + 28));
  }
  if (*(void *)(a1 + 16)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001D1D20(uint64_t a1)
{
  sub_1001D1C2C(a1);

  operator delete();
}

uint64_t sub_1001D1D58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 64) = a2;
  return result;
}

void sub_1001D1D60()
{
}

void sub_1001D1DD0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001D1DF8(uint64_t a1)
{
  if (*(int *)(a1 + 24) >= 1)
  {
    uint64_t v1 = 0;
    do
    {
      while (1)
      {
        uint64_t v2 = *(void *)(*(void *)(a1 + 16) + 8 * v1);
        if (*(char *)(v2 + 23) < 0) {
          break;
        }
        *(unsigned char *)uint64_t v2 = 0;
        *(unsigned char *)(v2 + 23) = 0;
        if (++v1 >= *(int *)(a1 + 24)) {
          goto LABEL_6;
        }
      }
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      ++v1;
    }
    while (v1 < *(int *)(a1 + 24));
  }
LABEL_6:
  *(_DWORD *)(a1 + 24) = 0;
  if (*(int *)(a1 + 48) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      while (1)
      {
        uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8 * v3);
        if (*(char *)(v4 + 23) < 0) {
          break;
        }
        *(unsigned char *)uint64_t v4 = 0;
        *(unsigned char *)(v4 + 23) = 0;
        if (++v3 >= *(int *)(a1 + 48)) {
          goto LABEL_11;
        }
      }
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      ++v3;
    }
    while (v3 < *(int *)(a1 + 48));
  }
LABEL_11:
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 10) = 0;
  *((_DWORD *)result + 15) = 0;
  if (v6) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001D1EC4(uint64_t result, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5 = result;
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 16);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 40);
  unsigned int v8 = result + 8;
  while (1)
  {
LABEL_2:
    uint64_t v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      int v10 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)result;
      *((_DWORD *)this + 8) = result;
      if (!result) {
        return 1;
      }
    }
    else
    {
      int v10 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)this + 8) = v10;
      *((void *)this + 1) = v9 + 1;
      if (!v10) {
        return 1;
      }
    }
    if (v10 >> 3 == 1) {
      break;
    }
    if (v10 >> 3 == 2)
    {
      int v11 = v10 & 7;
      if (v11 == 2)
      {
        int v12 = *(_DWORD *)(v5 + 52);
        int v13 = *(_DWORD *)(v5 + 48);
        if (v13 >= v12) {
          goto LABEL_30;
        }
LABEL_11:
        *(_DWORD *)(v5 + 48) = v13 + 1;
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result) {
          goto LABEL_33;
        }
        return result;
      }
    }
    else
    {
      int v11 = v10 & 7;
    }
LABEL_25:
    if (v11 == 4) {
      return 1;
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, v10, v8, a4);
    if ((result & 1) == 0) {
      return 0;
    }
  }
  int v11 = v10 & 7;
  if (v11 != 2) {
    goto LABEL_25;
  }
  int v14 = *(_DWORD *)(v5 + 28);
  int v15 = *(_DWORD *)(v5 + 24);
  if (v15 >= v14)
  {
    while (1)
    {
      if (v14 == *(_DWORD *)(v5 + 32))
      {
        uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v14 + 1);
        int v14 = *(_DWORD *)(v5 + 28);
      }
      *(_DWORD *)(v5 + 28) = v14 + 1;
      uint64_t v16 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)result);
      uint64_t v17 = *(void *)(v5 + 16);
      uint64_t v18 = *(int *)(v5 + 24);
      *(_DWORD *)(v5 + 24) = v18 + 1;
      *(void *)(v17 + 8 * v18) = v16;
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        break;
      }
LABEL_20:
      int v19 = (unsigned char *)*((void *)this + 1);
      if ((unint64_t)v19 >= *((void *)this + 2)) {
        goto LABEL_2;
      }
      int v20 = *v19;
      if (v20 != 10)
      {
        if (v20 != 18) {
          goto LABEL_2;
        }
        while (1)
        {
          *((void *)this + 1) = v19 + 1;
          int v12 = *(_DWORD *)(v5 + 52);
          int v13 = *(_DWORD *)(v5 + 48);
          if (v13 < v12) {
            goto LABEL_11;
          }
LABEL_30:
          if (v12 == *(_DWORD *)(v5 + 56))
          {
            uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v12 + 1);
            int v12 = *(_DWORD *)(v5 + 52);
          }
          *(_DWORD *)(v5 + 52) = v12 + 1;
          uint64_t v21 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)result);
          uint64_t v22 = *(void *)(v5 + 40);
          uint64_t v23 = *(int *)(v5 + 48);
          *(_DWORD *)(v5 + 48) = v23 + 1;
          *(void *)(v22 + 8 * v23) = v21;
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
          if (!result) {
            return result;
          }
LABEL_33:
          int v19 = (unsigned char *)*((void *)this + 1);
          int v24 = (unsigned char *)*((void *)this + 2);
          if (v19 >= v24 || *v19 != 18)
          {
            if (v19 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
            goto LABEL_2;
          }
        }
      }
      *((void *)this + 1) = v19 + 1;
      int v14 = *(_DWORD *)(v5 + 28);
      int v15 = *(_DWORD *)(v5 + 24);
      if (v15 < v14) {
        goto LABEL_15;
      }
    }
  }
  else
  {
LABEL_15:
    *(_DWORD *)(v5 + 24) = v15 + 1;
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
    if (result) {
      goto LABEL_20;
    }
  }
  return result;
}

uint64_t sub_1001D2150(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = (int *)result;
  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      ++v5;
    }
    while (v5 < v4[6]);
  }
  if (v4[12] >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      ++v6;
    }
    while (v6 < v4[12]);
  }
  uint64_t v9 = (void *)*((void *)v4 + 1);
  unsigned int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 2);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001D2220(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  if (*((int *)this + 6) >= 1)
  {
    for (uint64_t i = 0; i < *((int *)this + 6); ++i)
    {
      uint64_t v11 = *(void *)(*((void *)this + 2) + 8 * i);
      *(unsigned char *)a2 = 10;
      if (*(char *)(v11 + 23) < 0)
      {
        int v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v11 + 8);
        if (v12 <= 0x7F)
        {
LABEL_15:
          *((unsigned char *)a2 + 1) = (_BYTE)v12;
          int v7 = a2 + 2;
          goto LABEL_4;
        }
      }
      else
      {
        int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v11 + 23);
        if (*(unsigned __int8 *)(v11 + 23) <= 0x7Fu) {
          goto LABEL_15;
        }
      }
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)a2 + 1, a3);
LABEL_4:
      int v8 = *(char *)(v11 + 23);
      if (v8 >= 0) {
        uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11;
      }
      else {
        uint64_t v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v11;
      }
      if (v8 >= 0) {
        int v10 = (const void *)*(unsigned __int8 *)(v11 + 23);
      }
      else {
        int v10 = (const void *)*(unsigned int *)(v11 + 8);
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v9, v10, v7, a4);
    }
  }
  if (*((int *)this + 12) >= 1)
  {
    for (uint64_t j = 0; j < *((int *)this + 12); ++j)
    {
      uint64_t v18 = *(void *)(*((void *)this + 5) + 8 * j);
      *(unsigned char *)a2 = 18;
      if (*(char *)(v18 + 23) < 0)
      {
        int v19 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v18 + 8);
        if (v19 <= 0x7F)
        {
LABEL_30:
          *((unsigned char *)a2 + 1) = (_BYTE)v19;
          int v14 = a2 + 2;
          goto LABEL_19;
        }
      }
      else
      {
        int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v18 + 23);
        if (*(unsigned __int8 *)(v18 + 23) <= 0x7Fu) {
          goto LABEL_30;
        }
      }
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)a2 + 1, a3);
LABEL_19:
      int v15 = *(char *)(v18 + 23);
      if (v15 >= 0) {
        uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18;
      }
      else {
        uint64_t v16 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v18;
      }
      if (v15 >= 0) {
        uint64_t v17 = (const void *)*(unsigned __int8 *)(v18 + 23);
      }
      else {
        uint64_t v17 = (const void *)*(unsigned int *)(v18 + 8);
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v16, v17, v14, a4);
    }
  }
  uint64_t v22 = (void *)*((void *)this + 1);
  uint64_t v21 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v20 = v22;
  if (!v22 || *v20 == v20[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v21, a2, a3);
}

uint64_t sub_1001D23B4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 24);
  if (v3 < 1)
  {
    int v5 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    uint64_t v4 = 0;
    int v5 = *(_DWORD *)(a1 + 24);
    do
    {
      uint64_t v10 = *(void *)(*(void *)(a1 + 16) + 8 * v4);
      int v7 = *(unsigned __int8 *)(v10 + 23);
      char v9 = v7;
      uint64_t v8 = *(void *)(v10 + 8);
      if ((v7 & 0x80u) == 0) {
        unint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      }
      else {
        unint64_t v11 = v8;
      }
      if (v11 >= 0x80)
      {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
        int v7 = *(unsigned __int8 *)(v10 + 23);
        uint64_t v8 = *(void *)(v10 + 8);
        int v3 = *(_DWORD *)(a1 + 24);
        char v9 = *(unsigned char *)(v10 + 23);
      }
      else
      {
        int v6 = 1;
      }
      if (v9 < 0) {
        int v7 = v8;
      }
      v5 += v6 + v7;
      ++v4;
    }
    while (v4 < v3);
  }
  int v12 = *(_DWORD *)(a1 + 48);
  uint64_t v13 = (v12 + v5);
  if (v12 >= 1)
  {
    for (uint64_t i = 0; i < v12; ++i)
    {
      uint64_t v19 = *(void *)(*(void *)(a1 + 40) + 8 * i);
      int v16 = *(unsigned __int8 *)(v19 + 23);
      char v18 = v16;
      uint64_t v17 = *(void *)(v19 + 8);
      if ((v16 & 0x80u) == 0) {
        unint64_t v20 = *(unsigned __int8 *)(v19 + 23);
      }
      else {
        unint64_t v20 = v17;
      }
      if (v20 >= 0x80)
      {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20, a2);
        int v16 = *(unsigned __int8 *)(v19 + 23);
        uint64_t v17 = *(void *)(v19 + 8);
        int v12 = *(_DWORD *)(a1 + 48);
        char v18 = *(unsigned char *)(v19 + 23);
      }
      else
      {
        int v15 = 1;
      }
      if (v18 < 0) {
        int v16 = v17;
      }
      uint64_t v13 = (v15 + v13 + v16);
    }
  }
  uint64_t v21 = *(void **)(a1 + 8);
  if (v21 && *v21 != v21[1]) {
    uint64_t v13 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v13;
  }
  *(_DWORD *)(a1 + 64) = v13;
  return v13;
}

uint64_t sub_1001D24F8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001D19E8(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001D25D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D25EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D2600(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001D268C()
{
  return 1;
}

uint64_t sub_1001D2694()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DE08;
}

void sub_1001D2724(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D2738(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
    LOBYTE(v4) = *(unsigned char *)(a2 + 44);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 44);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    int v5 = *(_DWORD **)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047F080 + 16);
    }
    sub_1001D19E8(v5, v6);
    int v4 = *(_DWORD *)(a2 + 44);
  }
  if ((v4 & 2) == 0)
  {
    if ((v4 & 4) == 0) {
      goto LABEL_12;
    }
LABEL_16:
    char v10 = *(unsigned char *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(unsigned char *)(a1 + 32) = v10;
    if ((*(_DWORD *)(a2 + 44) & 8) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_13;
  }
  uint64_t v9 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 44) |= 2u;
  *(void *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_12:
  if ((v4 & 8) != 0)
  {
LABEL_13:
    int v7 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 44) |= 8u;
    *(_DWORD *)(a1 + 36) = v7;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001D28C4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001D28EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D2900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D2914(void *a1)
{
  *a1 = off_10045F0D0;
  if ((void *)qword_10047F080 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001D29A8(void *a1)
{
  *a1 = off_10045F0D0;
  if ((void *)qword_10047F080 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1001D2A50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1001D2A58()
{
}

void sub_1001D2AD4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001D2AFC(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 44))
  {
    if (*(unsigned char *)(this + 44))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(int *)(this + 24) >= 1)
        {
          uint64_t v2 = 0;
          do
          {
            while (1)
            {
              uint64_t v3 = *(void *)(*(void *)(this + 16) + 8 * v2);
              if (*(char *)(v3 + 23) < 0) {
                break;
              }
              *(unsigned char *)uint64_t v3 = 0;
              *(unsigned char *)(v3 + 23) = 0;
              if (++v2 >= *(int *)(this + 24)) {
                goto LABEL_9;
              }
            }
            **(unsigned char **)uint64_t v3 = 0;
            *(void *)(v3 + 8) = 0;
            ++v2;
          }
          while (v2 < *(int *)(this + 24));
        }
LABEL_9:
        *(_DWORD *)(this + 24) = 0;
        if (*(int *)(this + 48) >= 1)
        {
          uint64_t v4 = 0;
          do
          {
            while (1)
            {
              uint64_t v5 = *(void *)(*(void *)(this + 40) + 8 * v4);
              if (*(char *)(v5 + 23) < 0) {
                break;
              }
              *(unsigned char *)uint64_t v5 = 0;
              *(unsigned char *)(v5 + 23) = 0;
              if (++v4 >= *(int *)(this + 48)) {
                goto LABEL_14;
              }
            }
            **(unsigned char **)uint64_t v5 = 0;
            *(void *)(v5 + 8) = 0;
            ++v4;
          }
          while (v4 < *(int *)(this + 48));
        }
LABEL_14:
        uint64_t v6 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 40) = 0;
        *(_DWORD *)(this + 60) = 0;
        if (v6) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(void *)(v1 + 24) = 0x4049000000000000;
    *(unsigned char *)(v1 + 32) = 1;
    *(_DWORD *)(v1 + 36) = 307200;
  }
  uint64_t v8 = *(void *)(v1 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v7 + 9) = 0;
  if (v8)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v7);
  }
  return this;
}

uint64_t sub_1001D2C40(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (unsigned int *)(a1 + 36);
  unsigned int v7 = a1 + 8;
  while (2)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_22;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v11 = *(void *)(a1 + 16);
        if (!v11) {
          operator new();
        }
        v32[0] = 0;
        int v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v32))return 0; {
        }
          }
        else
        {
          v32[0] = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        int v16 = *((_DWORD *)this + 14);
        int v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0;
        }
        int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v32[0]);
        if (!sub_1001D1EC4(v11, this, v19, v20) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        int v21 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)this + 14) = v23;
        }
        int v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 17) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
        goto LABEL_36;
        }
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_22;
        }
        *(void *)int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v32) & 1) == 0)return 0; {
LABEL_36:
        }
        *(void *)(a1 + 24) = *(void *)v32;
        *(_DWORD *)(a1 + 44) |= 2u;
        BOOL v25 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v25 >= v13 || *v25 != 24) {
          continue;
        }
        int v14 = v25 + 1;
        *((void *)this + 1) = v14;
        v32[0] = 0;
        if ((unint64_t)v14 >= v13) {
          goto LABEL_41;
        }
LABEL_39:
        if (*v14 < 0)
        {
LABEL_41:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v32);
          if (!result) {
            return result;
          }
          unsigned int v26 = v32[0];
          int v27 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int v26 = *v14;
          int v27 = v14 + 1;
          *((void *)this + 1) = v27;
        }
        *(unsigned char *)(a1 + 32) = v26 != 0;
        *(_DWORD *)(a1 + 44) |= 4u;
        if ((unint64_t)v27 >= v13 || *v27 != 32) {
          continue;
        }
        int v15 = v27 + 1;
        *((void *)this + 1) = v15;
        if ((unint64_t)v15 >= v13) {
          goto LABEL_49;
        }
LABEL_46:
        if ((*v15 & 0x80000000) == 0)
        {
          *uint64_t v6 = *v15;
          uint64_t v29 = (unsigned __int8 *)(v15 + 1);
          *((void *)this + 1) = v29;
          *(_DWORD *)(a1 + 44) |= 8u;
          if (v29 == (unsigned __int8 *)v13) {
            goto LABEL_51;
          }
          continue;
        }
LABEL_49:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
        if (!result) {
          return result;
        }
        uint64_t v31 = *((void *)this + 1);
        uint64_t v30 = *((void *)this + 2);
        *(_DWORD *)(a1 + 44) |= 8u;
        if (v31 != v30) {
          continue;
        }
LABEL_51:
        if (!*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        v32[0] = 0;
        if ((unint64_t)v14 >= v13) {
          goto LABEL_41;
        }
        goto LABEL_39;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v15 >= v13) {
          goto LABEL_49;
        }
        goto LABEL_46;
      default:
        int v10 = TagFallback & 7;
LABEL_22:
        if (v10 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4))continue; {
        return 0;
        }
    }
  }
}

void sub_1001D300C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001D3044(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 44);
      if ((v6 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047F080 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 44);
      if ((v6 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 32), (BOOL)a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 8) == 0)
  {
LABEL_5:
    uint64_t v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    unsigned int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 36), a2, a4);
  uint64_t v11 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v11;
  if (!v11) {
    return result;
  }
LABEL_14:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001D3140(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v5 = *((_DWORD *)this + 11);
  if (v5)
  {
    uint64_t v10 = (unsigned int *)*((void *)this + 2);
    if (v10)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v11 = a2 + 1;
      int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[16];
      if (v12 <= 0x7F) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v10 = *(unsigned int **)(qword_10047F080 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v11 = a2 + 1;
      int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[16];
      if (v12 <= 0x7F)
      {
LABEL_12:
        *((unsigned char *)a2 + 1) = (_BYTE)v12;
        a2 = sub_1001D2220((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2), a3, a4);
        int v5 = *((_DWORD *)this + 11);
        if ((v5 & 2) != 0) {
          goto LABEL_16;
        }
LABEL_3:
        if ((v5 & 4) == 0) {
          goto LABEL_4;
        }
        goto LABEL_17;
      }
    }
    unint64_t v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v11, a3);
    a2 = sub_1001D2220((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v13, v14, v15);
    int v5 = *((_DWORD *)this + 11);
    if ((v5 & 2) != 0) {
      goto LABEL_16;
    }
    goto LABEL_3;
  }
  if ((v5 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_16:
  uint64_t v16 = *((void *)this + 3);
  *(unsigned char *)a2 = 17;
  *(void *)((char *)a2 + 1) = v16;
  a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
  int v5 = *((_DWORD *)this + 11);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_18:
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    *(unsigned char *)a2 = 32;
    if (v18 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)a2 + 1, a3);
      unint64_t v20 = (void *)*((void *)this + 1);
      unsigned int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      int v6 = v20;
      if (!v20) {
        return a2;
      }
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v18;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      uint64_t v19 = (void *)*((void *)this + 1);
      unsigned int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      int v6 = v19;
      if (!v19) {
        return a2;
      }
    }
    goto LABEL_6;
  }
LABEL_17:
  char v17 = *((unsigned char *)this + 32);
  *(unsigned char *)a2 = 24;
  *((unsigned char *)a2 + 1) = v17;
  a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  if ((*((_DWORD *)this + 11) & 8) != 0) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v8 = (void *)*((void *)this + 1);
  unsigned int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v6 = v8;
  if (!v8) {
    return a2;
  }
LABEL_6:
  if (*v6 == v6[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v7, a2, a3);
}

uint64_t sub_1001D32E0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 44);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    goto LABEL_21;
  }
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v6 = *(void *)(a1 + 16);
    if (v6)
    {
      unsigned int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001D23B4(v6, a2);
      if (v7 < 0x80)
      {
LABEL_7:
        int v8 = 1;
LABEL_10:
        unsigned int v4 = v7 + v8 + 1;
        int v3 = *(_DWORD *)(a1 + 44);
        goto LABEL_11;
      }
    }
    else
    {
      unsigned int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001D23B4(*(void *)(qword_10047F080 + 16), a2);
      if (v7 < 0x80) {
        goto LABEL_7;
      }
    }
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
    goto LABEL_10;
  }
  unsigned int v4 = 0;
LABEL_11:
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if ((v3 & 4) != 0) {
    uint64_t v5 = v4 + 2;
  }
  else {
    uint64_t v5 = v4;
  }
  if ((v3 & 8) != 0)
  {
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if (v9 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2)
    }
          + 1;
    else {
      int v10 = 2;
    }
    uint64_t v5 = (v10 + v5);
  }
LABEL_21:
  unsigned int v11 = *(void **)(a1 + 8);
  if (v11 && *v11 != v11[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

uint64_t sub_1001D33D0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001D2738((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001D34B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D34C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D34D8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001D3564()
{
  return 1;
}

uint64_t sub_1001D356C()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DE18;
}

void sub_1001D35FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D3610(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  uint64_t v4 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      while (1)
      {
        uint64_t v9 = *(const std::string **)(*(void *)(a2 + 16) + 8 * v5);
        int v10 = *(_DWORD *)(a1 + 28);
        uint64_t v11 = *(int *)(a1 + 24);
        if ((int)v11 >= v10) {
          break;
        }
        uint64_t v12 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v11 + 1;
        uint64_t v4 = std::string::operator=(*(std::string **)(v12 + 8 * v11), v9);
        if (++v5 >= *(int *)(a2 + 24)) {
          goto LABEL_11;
        }
      }
      if (v10 == *(_DWORD *)(a1 + 32))
      {
        uint64_t v4 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v10 + 1);
        int v10 = *(_DWORD *)(a1 + 28);
      }
      *(_DWORD *)(a1 + 28) = v10 + 1;
      uint64_t v6 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)v4);
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v8 = *(int *)(a1 + 24);
      *(_DWORD *)(a1 + 24) = v8 + 1;
      *(void *)(v7 + 8 * v8) = v6;
      uint64_t v4 = std::string::operator=(v6, v9);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
LABEL_11:
  if (*(unsigned char *)(a2 + 48))
  {
    char v13 = *(unsigned char *)(a2 + 40);
    *(_DWORD *)(a1 + 48) |= 1u;
    *(unsigned char *)(a1 + 40) = v13;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001D3780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D3794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D37A8(uint64_t a1)
{
  *(void *)a1 = off_10045F180;
  if (*(int *)(a1 + 28) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete();
      ++v2;
    }
    while (v2 < *(int *)(a1 + 28));
  }
  if (*(void *)(a1 + 16)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001D384C(uint64_t a1)
{
  *(void *)a1 = off_10045F180;
  if (*(int *)(a1 + 28) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete();
      ++v2;
    }
    while (v2 < *(int *)(a1 + 28));
  }
  if (*(void *)(a1 + 16)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1001D3904(uint64_t result, int a2)
{
  *(_DWORD *)(result + 44) = a2;
  return result;
}

void sub_1001D390C()
{
}

void sub_1001D397C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001D39A4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48)) {
    *(unsigned char *)(a1 + 40) = 1;
  }
  if (*(int *)(a1 + 24) >= 1)
  {
    uint64_t v1 = 0;
    do
    {
      while (1)
      {
        uint64_t v2 = *(void *)(*(void *)(a1 + 16) + 8 * v1);
        if (*(char *)(v2 + 23) < 0) {
          break;
        }
        *(unsigned char *)uint64_t v2 = 0;
        *(unsigned char *)(v2 + 23) = 0;
        if (++v1 >= *(int *)(a1 + 24)) {
          goto LABEL_8;
        }
      }
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      ++v1;
    }
    while (v1 < *(int *)(a1 + 24));
  }
LABEL_8:
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 10) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001D3A24(uint64_t result, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5 = result;
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 16);
  unsigned int v7 = result + 8;
  do
  {
    while (1)
    {
LABEL_2:
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)result;
        *((_DWORD *)this + 8) = result;
        if (!result) {
          return 1;
        }
      }
      else
      {
        uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
        *((_DWORD *)this + 8) = v9;
        *((void *)this + 1) = v8 + 1;
        if (!v9) {
          return 1;
        }
      }
      if (v9 >> 3 == 1) {
        break;
      }
      if (v9 >> 3 == 2)
      {
        int v10 = v9 & 7;
        if (v10 == 2)
        {
          int v11 = *(_DWORD *)(v5 + 28);
          int v12 = *(_DWORD *)(v5 + 24);
          if (v12 >= v11) {
            goto LABEL_26;
          }
          goto LABEL_11;
        }
      }
      else
      {
        int v10 = v9 & 7;
      }
LABEL_18:
      if (v10 == 4) {
        return 1;
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, v9, v7, a4);
      if ((result & 1) == 0) {
        return 0;
      }
    }
    int v10 = v9 & 7;
    if ((v9 & 7) != 0) {
      goto LABEL_18;
    }
    unsigned int v21 = 0;
    char v13 = (char *)*((void *)this + 1);
    unint64_t v14 = *((void *)this + 2);
    if ((unint64_t)v13 >= v14 || *v13 < 0)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v21);
      if (!result) {
        return result;
      }
      unsigned int v15 = v21;
      uint64_t v16 = (unsigned char *)*((void *)this + 1);
      unint64_t v14 = *((void *)this + 2);
    }
    else
    {
      unsigned int v15 = *v13;
      uint64_t v16 = v13 + 1;
      *((void *)this + 1) = v16;
    }
    *(unsigned char *)(v5 + 40) = v15 != 0;
    *(_DWORD *)(v5 + 48) |= 1u;
  }
  while ((unint64_t)v16 >= v14 || *v16 != 18);
  while (1)
  {
    *((void *)this + 1) = v16 + 1;
    int v11 = *(_DWORD *)(v5 + 28);
    int v12 = *(_DWORD *)(v5 + 24);
    if (v12 < v11) {
      break;
    }
LABEL_26:
    if (v11 == *(_DWORD *)(v5 + 32))
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v11 + 1);
      int v11 = *(_DWORD *)(v5 + 28);
    }
    *(_DWORD *)(v5 + 28) = v11 + 1;
    uint64_t v17 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)result);
    uint64_t v18 = *(void *)(v5 + 16);
    uint64_t v19 = *(int *)(v5 + 24);
    *(_DWORD *)(v5 + 24) = v19 + 1;
    *(void *)(v18 + 8 * v19) = v17;
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
    if (!result) {
      return result;
    }
LABEL_29:
    uint64_t v16 = (unsigned char *)*((void *)this + 1);
    unint64_t v20 = (unsigned char *)*((void *)this + 2);
    if (v16 >= v20 || *v16 != 18)
    {
      if (v16 == v20 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
      goto LABEL_2;
    }
  }
LABEL_11:
  *(_DWORD *)(v5 + 24) = v12 + 1;
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
  if (result) {
    goto LABEL_29;
  }
  return result;
}

uint64_t sub_1001D3C5C(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 48)) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 40), (BOOL)a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      ++v6;
    }
    while (v6 < *(int *)(v5 + 24));
  }
  uint64_t v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001D3D10(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 48))
  {
    char v6 = *((unsigned char *)this + 40);
    *(unsigned char *)a2 = 8;
    *((unsigned char *)a2 + 1) = v6;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  }
  if (*((int *)this + 6) >= 1)
  {
    for (uint64_t i = 0; i < *((int *)this + 6); ++i)
    {
      uint64_t v12 = *(void *)(*((void *)this + 2) + 8 * i);
      *(unsigned char *)uint64_t v4 = 18;
      if (*(char *)(v12 + 23) < 0)
      {
        char v13 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v12 + 8);
        if (v13 <= 0x7F)
        {
LABEL_17:
          *((unsigned char *)v4 + 1) = (_BYTE)v13;
          int v8 = v4 + 2;
          goto LABEL_6;
        }
      }
      else
      {
        char v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v12 + 23);
        if (*(unsigned __int8 *)(v12 + 23) <= 0x7Fu) {
          goto LABEL_17;
        }
      }
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)v4 + 1, a3);
LABEL_6:
      int v9 = *(char *)(v12 + 23);
      if (v9 >= 0) {
        int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12;
      }
      else {
        int v10 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v12;
      }
      if (v9 >= 0) {
        int v11 = (const void *)*(unsigned __int8 *)(v12 + 23);
      }
      else {
        int v11 = (const void *)*(unsigned int *)(v12 + 8);
      }
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v10, v11, v8, a4);
    }
  }
  uint64_t v16 = (void *)*((void *)this + 1);
  unsigned int v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  unint64_t v14 = v16;
  if (!v16 || *v14 == v14[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v15, v4, a3);
}

uint64_t sub_1001D3E2C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = 2 * (*(_DWORD *)(a1 + 48) & 1);
  if (!*(_DWORD *)(a1 + 48)) {
    int v3 = 0;
  }
  int v4 = *(_DWORD *)(a1 + 24);
  uint64_t v5 = (v3 + v4);
  if (v4 >= 1)
  {
    for (uint64_t i = 0; i < v4; ++i)
    {
      uint64_t v11 = *(void *)(*(void *)(a1 + 16) + 8 * i);
      int v8 = *(unsigned __int8 *)(v11 + 23);
      char v10 = v8;
      uint64_t v9 = *(void *)(v11 + 8);
      if ((v8 & 0x80u) == 0) {
        unint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      }
      else {
        unint64_t v12 = v9;
      }
      if (v12 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12, a2);
        int v8 = *(unsigned __int8 *)(v11 + 23);
        uint64_t v9 = *(void *)(v11 + 8);
        int v4 = *(_DWORD *)(a1 + 24);
        char v10 = *(unsigned char *)(v11 + 23);
      }
      else
      {
        int v7 = 1;
      }
      if (v10 < 0) {
        int v8 = v9;
      }
      uint64_t v5 = (v7 + v5 + v8);
    }
  }
  char v13 = *(void **)(a1 + 8);
  if (v13 && *v13 != v13[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 44) = v5;
  return v5;
}

uint64_t sub_1001D3F04(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001D3610((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001D3FE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D3FF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D400C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001D4098()
{
  return 1;
}

uint64_t sub_1001D40A0()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DE28;
}

void sub_1001D4130(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D4144(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
    int v4 = *(_DWORD *)(a2 + 92);
    if (!(_BYTE)v4) {
      goto LABEL_30;
    }
  }
  else
  {
    int v4 = *(_DWORD *)(a2 + 92);
    if (!(_BYTE)v4) {
      goto LABEL_30;
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 92) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047F090 + 16);
    }
    sub_1001CEDB8(v5, v6);
    int v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 2u;
    uint64_t v7 = *(void *)(a1 + 24);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10047F090 + 24);
    }
    sub_1001D0ABC(v7, v8);
    int v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 4) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 4u;
    uint64_t v9 = *(void *)(a1 + 32);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = *(void *)(a2 + 32);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_10047F090 + 32);
    }
    sub_1001D2738(v9, v10);
    int v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 8) != 0)
  {
    *(_DWORD *)(a1 + 92) |= 8u;
    uint64_t v11 = *(void *)(a1 + 40);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 40);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_10047F090 + 40);
    }
    sub_1001D3610(v11, v12);
    int v4 = *(_DWORD *)(a2 + 92);
  }
  if ((v4 & 0x10) != 0)
  {
    uint64_t v21 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 92) |= 0x10u;
    *(void *)(a1 + 48) = v21;
    int v4 = *(_DWORD *)(a2 + 92);
    if ((v4 & 0x20) == 0)
    {
LABEL_27:
      if ((v4 & 0x40) == 0) {
        goto LABEL_28;
      }
      goto LABEL_47;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_27;
  }
  uint64_t v22 = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 92) |= 0x20u;
  *(void *)(a1 + 56) = v22;
  int v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x40) == 0)
  {
LABEL_28:
    if ((v4 & 0x80) == 0) {
      goto LABEL_30;
    }
    goto LABEL_29;
  }
LABEL_47:
  int v23 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 92) |= 0x40u;
  *(_DWORD *)(a1 + 64) = v23;
  int v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x80) != 0)
  {
LABEL_29:
    char v13 = *(unsigned char *)(a2 + 68);
    *(_DWORD *)(a1 + 92) |= 0x80u;
    *(unsigned char *)(a1 + 68) = v13;
    int v4 = *(_DWORD *)(a2 + 92);
  }
LABEL_30:
  if ((v4 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 0x100) != 0)
  {
    char v16 = *(unsigned char *)(a2 + 69);
    *(_DWORD *)(a1 + 92) |= 0x100u;
    *(unsigned char *)(a1 + 69) = v16;
    int v4 = *(_DWORD *)(a2 + 92);
    if ((v4 & 0x200) == 0)
    {
LABEL_33:
      if ((v4 & 0x400) == 0) {
        goto LABEL_34;
      }
      goto LABEL_41;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_33;
  }
  char v17 = *(unsigned char *)(a2 + 70);
  *(_DWORD *)(a1 + 92) |= 0x200u;
  *(unsigned char *)(a1 + 70) = v17;
  int v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x400) == 0)
  {
LABEL_34:
    if ((v4 & 0x800) == 0) {
      goto LABEL_35;
    }
    goto LABEL_42;
  }
LABEL_41:
  char v18 = *(unsigned char *)(a2 + 71);
  *(_DWORD *)(a1 + 92) |= 0x400u;
  *(unsigned char *)(a1 + 71) = v18;
  int v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x800) == 0)
  {
LABEL_35:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_36;
    }
LABEL_43:
    char v20 = *(unsigned char *)(a2 + 80);
    *(_DWORD *)(a1 + 92) |= 0x1000u;
    *(unsigned char *)(a1 + 80) = v20;
    if ((*(_DWORD *)(a2 + 92) & 0x2000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_37;
  }
LABEL_42:
  uint64_t v19 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 92) |= 0x800u;
  *(void *)(a1 + 72) = v19;
  int v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x1000) != 0) {
    goto LABEL_43;
  }
LABEL_36:
  if ((v4 & 0x2000) != 0)
  {
LABEL_37:
    int v14 = *(_DWORD *)(a2 + 84);
    *(_DWORD *)(a1 + 92) |= 0x2000u;
    *(_DWORD *)(a1 + 84) = v14;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001D4594()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001D45BC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001D45E4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001D460C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001D4634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D4648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D465C(void *a1)
{
  *a1 = off_10045F230;
  if ((void *)qword_10047F090 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = a1[3];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = a1[4];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = a1[5];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001D4778(void *a1)
{
  sub_1001D465C(a1);

  operator delete();
}

uint64_t sub_1001D47B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 88) = a2;
  return result;
}

void sub_1001D47B8()
{
}

void sub_1001D4848()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001D4870(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 92);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3)
      {
        char v4 = *(unsigned char *)(v3 + 52);
        if (v4)
        {
          *(_OWORD *)(v3 + 16) = xmmword_1003F20E0;
          if ((v4 & 4) != 0)
          {
            this = *(void *)(v3 + 32);
            if (this)
            {
              if (*(unsigned char *)(this + 44))
              {
                *(_OWORD *)(this + 16) = xmmword_1003F20D0;
                *(void *)(this + 32) = 0xC05390D4FDF3B646;
              }
              uint64_t v5 = *(void *)(this + 8);
              this += 8;
              *(_DWORD *)(this + 36) = 0;
              if (v5) {
                this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
              }
            }
          }
          if ((*(unsigned char *)(v3 + 52) & 8) != 0)
          {
            this = *(void *)(v3 + 40);
            if (this) {
              this = sub_1001CDB08(this);
            }
          }
        }
        uint64_t v7 = *(void *)(v3 + 8);
        uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v3 + 8);
        *((_DWORD *)v6 + 11) = 0;
        if (v7) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 92) & 2) != 0)
    {
      uint64_t v8 = *(void *)(v1 + 24);
      if (v8)
      {
        char v9 = *(unsigned char *)(v8 + 48);
        if (v9)
        {
          *(_OWORD *)(v8 + 16) = xmmword_1003F2100;
          *(_DWORD *)(v8 + 40) = 0;
          if ((v9 & 8) != 0)
          {
            this = *(void *)(v8 + 32);
            if (this)
            {
              if (*(unsigned char *)(this + 40))
              {
                *(_DWORD *)(this + 16) = 10;
                *(_OWORD *)(this + 20) = xmmword_1003F20F0;
              }
              uint64_t v10 = *(void *)(this + 8);
              this += 8;
              *(_DWORD *)(this + 32) = 0;
              if (v10) {
                this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
              }
            }
          }
        }
        uint64_t v12 = *(void *)(v8 + 8);
        uint64_t v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v8 + 8);
        *((_DWORD *)v11 + 10) = 0;
        if (v12) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v11);
        }
      }
    }
    int v13 = *(_DWORD *)(v1 + 92);
    if ((v13 & 4) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        this = sub_1001D2AFC(this);
        int v13 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v13 & 8) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this)
      {
        if (*(unsigned char *)(this + 48)) {
          *(unsigned char *)(this + 40) = 1;
        }
        if (*(int *)(this + 24) >= 1)
        {
          uint64_t v14 = 0;
          do
          {
            while (1)
            {
              uint64_t v15 = *(void *)(*(void *)(this + 16) + 8 * v14);
              if (*(char *)(v15 + 23) < 0) {
                break;
              }
              *(unsigned char *)uint64_t v15 = 0;
              *(unsigned char *)(v15 + 23) = 0;
              if (++v14 >= *(int *)(this + 24)) {
                goto LABEL_39;
              }
            }
            **(unsigned char **)uint64_t v15 = 0;
            *(void *)(v15 + 8) = 0;
            ++v14;
          }
          while (v14 < *(int *)(this + 24));
        }
LABEL_39:
        uint64_t v16 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 16) = 0;
        *(_DWORD *)(this + 40) = 0;
        if (v16) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(_OWORD *)(v1 + 48) = xmmword_1003F2170;
    *(_DWORD *)(v1 + 64) = 15;
    *(unsigned char *)(v1 + 68) = 1;
    int v2 = *(_DWORD *)(v1 + 92);
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_DWORD *)(v1 + 76) = 0;
    *(void *)(v1 + 69) = 0;
    *(unsigned char *)(v1 + 80) = 1;
    *(_DWORD *)(v1 + 84) = 0;
  }
  uint64_t v18 = *(void *)(v1 + 8);
  char v17 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v17 + 21) = 0;
  if (v18)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v17);
  }
  return this;
}

uint64_t sub_1001D4AA4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (unsigned int *)(a1 + 64);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 92) |= 1u;
        uint64_t v11 = *(void *)(a1 + 16);
        if (!v11) {
          operator new();
        }
        v81[0] = 0;
        uint64_t v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81))return 0; {
        }
          }
        else
        {
          v81[0] = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        int v27 = *((_DWORD *)this + 14);
        int v28 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v27 + 1;
        if (v27 >= v28) {
          return 0;
        }
        int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v81[0]);
        if (!sub_1001CF33C(v11, this, v30, v31) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
        int v32 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v32, 1);
        int v34 = v32 - 1;
        if (v34 < 0 == v33) {
          *((_DWORD *)this + 14) = v34;
        }
        int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 18) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
        *(_DWORD *)(a1 + 92) |= 2u;
        uint64_t v13 = *(void *)(a1 + 24);
        if (!v13) {
LABEL_60:
        }
          operator new();
LABEL_16:
        v81[0] = 0;
        uint64_t v14 = (char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81))return 0; {
        }
          }
        else
        {
          v81[0] = *v14;
          *((void *)this + 1) = v14 + 1;
        }
        int v36 = *((_DWORD *)this + 14);
        int v37 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v36 + 1;
        if (v36 >= v37) {
          return 0;
        }
        int v38 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v81[0]);
        if (!sub_1001D0F18(v13, this, v39, v40) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v38);
        int v41 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v41, 1);
        int v42 = v41 - 1;
        if (v42 < 0 == v33) {
          *((_DWORD *)this + 14) = v42;
        }
        int v43 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v43 >= *((void *)this + 2) || *v43 != 25) {
          continue;
        }
        *((void *)this + 1) = v43 + 1;
        *(void *)int v81 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v81) & 1) == 0)return 0; {
LABEL_72:
        }
        *(void *)(a1 + 48) = *(void *)v81;
        *(_DWORD *)(a1 + 92) |= 0x10u;
        int v44 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v44 >= *((void *)this + 2) || *v44 != 33) {
          continue;
        }
        *((void *)this + 1) = v44 + 1;
        *(void *)int v81 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v81) & 1) == 0)return 0; {
LABEL_75:
        }
        *(void *)(a1 + 56) = *(void *)v81;
        *(_DWORD *)(a1 + 92) |= 0x20u;
        int v45 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v45 >= v15 || *v45 != 40) {
          continue;
        }
        uint64_t v16 = v45 + 1;
        *((void *)this + 1) = v16;
LABEL_78:
        v81[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
          if (!result) {
            return result;
          }
          unsigned int v46 = v81[0];
          unsigned int v47 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v46 = *v16;
          unsigned int v47 = v16 + 1;
          *((void *)this + 1) = v47;
        }
        *(unsigned char *)(a1 + 68) = v46 != 0;
        *(_DWORD *)(a1 + 92) |= 0x80u;
        if ((unint64_t)v47 >= v15 || *v47 != 48) {
          continue;
        }
        char v17 = v47 + 1;
        *((void *)this + 1) = v17;
LABEL_86:
        v81[0] = 0;
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
          if (!result) {
            return result;
          }
          unsigned int v49 = v81[0];
          int v50 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v49 = *v17;
          int v50 = v17 + 1;
          *((void *)this + 1) = v50;
        }
        *(unsigned char *)(a1 + 69) = v49 != 0;
        *(_DWORD *)(a1 + 92) |= 0x100u;
        if ((unint64_t)v50 >= v15 || *v50 != 56) {
          continue;
        }
        uint64_t v18 = v50 + 1;
        *((void *)this + 1) = v18;
LABEL_94:
        if ((unint64_t)v18 >= v15 || (char)*v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v51 = (unsigned char *)*((void *)this + 1);
          unint64_t v53 = *((void *)this + 2);
          int v52 = *(_DWORD *)(a1 + 92) | 0x40;
          *(_DWORD *)(a1 + 92) = v52;
          if ((unint64_t)v51 < v53) {
            goto LABEL_100;
          }
          continue;
        }
        *uint64_t v6 = *v18;
        unsigned int v51 = v18 + 1;
        *((void *)this + 1) = v51;
        int v52 = *(_DWORD *)(a1 + 92) | 0x40;
        *(_DWORD *)(a1 + 92) = v52;
        if ((unint64_t)v51 >= v15) {
          continue;
        }
LABEL_100:
        if (*v51 != 66) {
          continue;
        }
        *((void *)this + 1) = v51 + 1;
        *(_DWORD *)(a1 + 92) = v52 | 4;
        uint64_t v19 = *(void *)(a1 + 32);
        if (!v19) {
LABEL_102:
        }
          operator new();
LABEL_103:
        v81[0] = 0;
        unsigned int v54 = (char *)*((void *)this + 1);
        if ((unint64_t)v54 >= *((void *)this + 2) || *v54 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81))return 0; {
        }
          }
        else
        {
          v81[0] = *v54;
          *((void *)this + 1) = v54 + 1;
        }
        int v55 = *((_DWORD *)this + 14);
        int v56 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v55 + 1;
        if (v55 >= v56) {
          return 0;
        }
        int v57 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v81[0]);
        if (!sub_1001D2C40(v19, this, v58, v59) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v57);
        int v60 = *((_DWORD *)this + 14);
        BOOL v33 = __OFSUB__(v60, 1);
        int v61 = v60 - 1;
        if (v61 < 0 == v33) {
          *((_DWORD *)this + 14) = v61;
        }
        int v62 = (unsigned char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        if ((unint64_t)v62 >= v20 || *v62 != 72) {
          continue;
        }
        uint64_t v21 = v62 + 1;
        *((void *)this + 1) = v21;
LABEL_115:
        v81[0] = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
          if (!result) {
            return result;
          }
          unsigned int v63 = v81[0];
          uint64_t v64 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          unsigned int v63 = *v21;
          uint64_t v64 = v21 + 1;
          *((void *)this + 1) = v64;
        }
        *(unsigned char *)(a1 + 70) = v63 != 0;
        *(_DWORD *)(a1 + 92) |= 0x200u;
        if ((unint64_t)v64 >= v20 || *v64 != 80) {
          continue;
        }
        uint64_t v22 = v64 + 1;
        *((void *)this + 1) = v22;
LABEL_123:
        v81[0] = 0;
        if ((unint64_t)v22 >= v20 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
          if (!result) {
            return result;
          }
          unsigned int v65 = v81[0];
          int v66 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          unsigned int v65 = *v22;
          int v66 = v22 + 1;
          *((void *)this + 1) = v66;
        }
        *(unsigned char *)(a1 + 71) = v65 != 0;
        int v67 = *(_DWORD *)(a1 + 92) | 0x400;
        *(_DWORD *)(a1 + 92) = v67;
        if ((unint64_t)v66 >= v20 || *v66 != 90) {
          continue;
        }
        *((void *)this + 1) = v66 + 1;
        *(_DWORD *)(a1 + 92) = v67 | 8;
        uint64_t v23 = *(void *)(a1 + 40);
        if (!v23) {
LABEL_131:
        }
          operator new();
LABEL_132:
        v81[0] = 0;
        int v68 = (char *)*((void *)this + 1);
        if ((unint64_t)v68 >= *((void *)this + 2) || *v68 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81))return 0; {
        }
          }
        else
        {
          v81[0] = *v68;
          *((void *)this + 1) = v68 + 1;
        }
        int v69 = *((_DWORD *)this + 14);
        int v70 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v69 + 1;
        if (v69 < v70)
        {
          int v71 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v81[0]);
          if (sub_1001D3A24(v23, this, v72, v73))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v71);
              int v74 = *((_DWORD *)this + 14);
              BOOL v33 = __OFSUB__(v74, 1);
              int v75 = v74 - 1;
              if (v75 < 0 == v33) {
                *((_DWORD *)this + 14) = v75;
              }
              int v76 = (unsigned char *)*((void *)this + 1);
              if ((unint64_t)v76 < *((void *)this + 2) && *v76 == 97)
              {
                *((void *)this + 1) = v76 + 1;
                *(void *)int v81 = 0;
                if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v81) & 1) == 0)return 0; {
LABEL_144:
                }
                *(void *)(a1 + 72) = *(void *)v81;
                *(_DWORD *)(a1 + 92) |= 0x800u;
                int v77 = (unsigned char *)*((void *)this + 1);
                unint64_t v24 = *((void *)this + 2);
                if ((unint64_t)v77 < v24 && *v77 == 104)
                {
                  BOOL v25 = v77 + 1;
                  *((void *)this + 1) = v25;
LABEL_147:
                  v81[0] = 0;
                  if ((unint64_t)v25 >= v24 || *v25 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
                    if (!result) {
                      return result;
                    }
                    unsigned int v78 = v81[0];
                    int v79 = (unsigned char *)*((void *)this + 1);
                    unint64_t v24 = *((void *)this + 2);
                  }
                  else
                  {
                    unsigned int v78 = *v25;
                    int v79 = v25 + 1;
                    *((void *)this + 1) = v79;
                  }
                  *(unsigned char *)(a1 + 80) = v78 != 0;
                  *(_DWORD *)(a1 + 92) |= 0x1000u;
                  if ((unint64_t)v79 < v24 && *v79 == 112)
                  {
                    unsigned int v26 = v79 + 1;
                    *((void *)this + 1) = v26;
LABEL_155:
                    v81[0] = 0;
                    if ((unint64_t)v26 >= v24 || *v26 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v81);
                      if (!result) {
                        return result;
                      }
                      unsigned int v80 = v81[0];
                      if (v81[0] <= 3) {
                        goto LABEL_158;
                      }
LABEL_162:
                      wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v7, 14, (int)v80);
                      if (*((void *)this + 1) == *((void *)this + 2)) {
                        goto LABEL_163;
                      }
                    }
                    else
                    {
                      unsigned int v80 = *v26;
                      *((void *)this + 1) = v26 + 1;
                      if (v80 > 3) {
                        goto LABEL_162;
                      }
LABEL_158:
                      *(_DWORD *)(a1 + 92) |= 0x2000u;
                      *(_DWORD *)(a1 + 84) = v80;
                      if (*((void *)this + 1) == *((void *)this + 2))
                      {
LABEL_163:
                        if (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
                        {
                          *((_DWORD *)this + 8) = 0;
                          uint64_t result = 1;
                          *((unsigned char *)this + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 92) |= 2u;
        uint64_t v13 = *(void *)(a1 + 24);
        if (v13) {
          goto LABEL_16;
        }
        goto LABEL_60;
      case 3u:
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_48;
        }
        *(void *)int v81 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v81) & 1) == 0)return 0; {
        goto LABEL_72;
        }
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_48;
        }
        *(void *)int v81 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v81) & 1) == 0)return 0; {
        goto LABEL_75;
        }
      case 5u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_78;
      case 6u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        char v17 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_86;
      case 7u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        uint64_t v18 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_94;
      case 8u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 92) |= 4u;
        uint64_t v19 = *(void *)(a1 + 32);
        if (!v19) {
          goto LABEL_102;
        }
        goto LABEL_103;
      case 9u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        uint64_t v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_115;
      case 0xAu:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        uint64_t v22 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_123;
      case 0xBu:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 92) |= 8u;
        uint64_t v23 = *(void *)(a1 + 40);
        if (!v23) {
          goto LABEL_131;
        }
        goto LABEL_132;
      case 0xCu:
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_48;
        }
        *(void *)int v81 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v81) & 1) == 0)return 0; {
        goto LABEL_144;
        }
      case 0xDu:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        BOOL v25 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_147;
      case 0xEu:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_48;
        }
        unsigned int v26 = (char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_155;
      default:
        int v10 = TagFallback & 7;
LABEL_48:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_1001D559C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001D55C4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001D55EC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001D5614()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001D5674(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 92);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_21:
    uint64_t v11 = *(void *)(v5 + 24);
    if (v11)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v11, a2, a4);
      int v6 = *(_DWORD *)(v5 + 92);
      if ((v6 & 0x10) != 0) {
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(qword_10047F090 + 24), a2, a4);
      int v6 = *(_DWORD *)(v5 + 92);
      if ((v6 & 0x10) != 0) {
        goto LABEL_25;
      }
    }
LABEL_4:
    if ((v6 & 0x20) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
  uint64_t v10 = *(void *)(result + 16);
  if (v10)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) != 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047F090 + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) != 0) {
      goto LABEL_21;
    }
  }
LABEL_3:
  if ((v6 & 0x10) == 0) {
    goto LABEL_4;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_5:
    if ((v6 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_6:
    if ((v6 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 68), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 69), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_30:
    uint64_t v12 = *(void *)(v5 + 32);
    if (v12)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v12, a2, a4);
      int v6 = *(_DWORD *)(v5 + 92);
      if ((v6 & 0x200) != 0) {
        goto LABEL_34;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(qword_10047F090 + 32), a2, a4);
      int v6 = *(_DWORD *)(v5 + 92);
      if ((v6 & 0x200) != 0) {
        goto LABEL_34;
      }
    }
LABEL_10:
    if ((v6 & 0x400) == 0) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }
LABEL_29:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 64), a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) != 0) {
    goto LABEL_30;
  }
LABEL_9:
  if ((v6 & 0x200) == 0) {
    goto LABEL_10;
  }
LABEL_34:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 70), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x400) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
LABEL_36:
    uint64_t v13 = *(void *)(v5 + 40);
    if (v13)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v13, a2, a4);
      int v6 = *(_DWORD *)(v5 + 92);
      if ((v6 & 0x800) != 0) {
        goto LABEL_40;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(void *)(qword_10047F090 + 40), a2, a4);
      int v6 = *(_DWORD *)(v5 + 92);
      if ((v6 & 0x800) != 0) {
        goto LABEL_40;
      }
    }
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_41;
  }
LABEL_35:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 71), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) != 0) {
    goto LABEL_36;
  }
LABEL_12:
  if ((v6 & 0x800) == 0) {
    goto LABEL_13;
  }
LABEL_40:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (int)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned __int8 *)(v5 + 80), (BOOL)a2, a4);
  if ((*(_DWORD *)(v5 + 92) & 0x2000) == 0)
  {
LABEL_15:
    char v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(_DWORD *)(v5 + 84), (int)a2, a4);
  uint64_t v14 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v14;
  if (!v14) {
    return result;
  }
LABEL_43:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001D5900(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  char v4 = a2;
  int v6 = *((_DWORD *)this + 23);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_23:
    uint64_t v16 = (unsigned int *)*((void *)this + 3);
    if (v16)
    {
      *(unsigned char *)char v4 = 18;
      unsigned int v17 = v4 + 1;
      uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[11];
      if (v18 <= 0x7F) {
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v16 = *(unsigned int **)(qword_10047F090 + 24);
      *(unsigned char *)char v4 = 18;
      unsigned int v17 = v4 + 1;
      uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16[11];
      if (v18 <= 0x7F)
      {
LABEL_25:
        *((unsigned char *)v4 + 1) = (_BYTE)v18;
        char v4 = sub_1001D13E0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3);
        int v6 = *((_DWORD *)this + 23);
        if ((v6 & 0x10) != 0) {
          goto LABEL_29;
        }
LABEL_4:
        if ((v6 & 0x20) == 0) {
          goto LABEL_5;
        }
        goto LABEL_30;
      }
    }
    uint64_t v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, v17, a3);
    char v4 = sub_1001D13E0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v16, v19, v20);
    int v6 = *((_DWORD *)this + 23);
    if ((v6 & 0x10) != 0) {
      goto LABEL_29;
    }
    goto LABEL_4;
  }
  uint64_t v11 = (unsigned int *)*((void *)this + 2);
  if (v11)
  {
    *(unsigned char *)a2 = 10;
    unsigned int v12 = a2 + 1;
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[12];
    if (v13 <= 0x7F) {
      goto LABEL_19;
    }
LABEL_22:
    uint64_t v14 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v12, a3);
    char v4 = sub_1001CF8F8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v14, v15);
    int v6 = *((_DWORD *)this + 23);
    if ((v6 & 2) != 0) {
      goto LABEL_23;
    }
    goto LABEL_3;
  }
  uint64_t v11 = *(unsigned int **)(qword_10047F090 + 16);
  *(unsigned char *)a2 = 10;
  unsigned int v12 = a2 + 1;
  uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[12];
  if (v13 > 0x7F) {
    goto LABEL_22;
  }
LABEL_19:
  *((unsigned char *)v4 + 1) = (_BYTE)v13;
  char v4 = sub_1001CF8F8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3);
  int v6 = *((_DWORD *)this + 23);
  if ((v6 & 2) != 0) {
    goto LABEL_23;
  }
LABEL_3:
  if ((v6 & 0x10) == 0) {
    goto LABEL_4;
  }
LABEL_29:
  uint64_t v21 = *((void *)this + 6);
  *(unsigned char *)char v4 = 25;
  *(void *)((char *)v4 + 1) = v21;
  char v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 23);
  if ((v6 & 0x20) == 0)
  {
LABEL_5:
    if ((v6 & 0x80) == 0) {
      goto LABEL_6;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v22 = *((void *)this + 7);
  *(unsigned char *)char v4 = 33;
  *(void *)((char *)v4 + 1) = v22;
  char v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 23);
  if ((v6 & 0x80) == 0)
  {
LABEL_6:
    if ((v6 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_32;
  }
LABEL_31:
  char v23 = *((unsigned char *)this + 68);
  *(unsigned char *)char v4 = 40;
  *((unsigned char *)v4 + 1) = v23;
  char v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  int v6 = *((_DWORD *)this + 23);
  if ((v6 & 0x100) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_33;
  }
LABEL_32:
  char v24 = *((unsigned char *)this + 69);
  *(unsigned char *)char v4 = 48;
  *((unsigned char *)v4 + 1) = v24;
  char v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  if ((*((_DWORD *)this + 23) & 0x40) == 0)
  {
LABEL_8:
    int v7 = *((_DWORD *)this + 23);
    if ((v7 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_37:
    unsigned int v26 = (unsigned int *)*((void *)this + 4);
    if (v26)
    {
      *(unsigned char *)char v4 = 66;
      unsigned int v27 = v4 + 1;
      int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26[10];
      if (v28 <= 0x7F) {
        goto LABEL_39;
      }
    }
    else
    {
      unsigned int v26 = *(unsigned int **)(qword_10047F090 + 32);
      *(unsigned char *)char v4 = 66;
      unsigned int v27 = v4 + 1;
      int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26[10];
      if (v28 <= 0x7F)
      {
LABEL_39:
        *((unsigned char *)v4 + 1) = (_BYTE)v28;
        char v4 = sub_1001D3140((wireless_diagnostics::google::protobuf::internal::WireFormat *)v26, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3, a4);
        int v7 = *((_DWORD *)this + 23);
        if ((v7 & 0x200) != 0) {
          goto LABEL_43;
        }
LABEL_10:
        if ((v7 & 0x400) == 0) {
          goto LABEL_11;
        }
        goto LABEL_44;
      }
    }
    int v29 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v28, v27, a3);
    char v4 = sub_1001D3140((wireless_diagnostics::google::protobuf::internal::WireFormat *)v26, v29, v30, v31);
    int v7 = *((_DWORD *)this + 23);
    if ((v7 & 0x200) != 0) {
      goto LABEL_43;
    }
    goto LABEL_10;
  }
LABEL_33:
  BOOL v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  *(unsigned char *)char v4 = 56;
  if (v25 > 0x7F)
  {
    char v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, (int)v4 + 1, a3);
    int v7 = *((_DWORD *)this + 23);
    if ((v7 & 4) != 0) {
      goto LABEL_37;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v25;
    char v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    int v7 = *((_DWORD *)this + 23);
    if ((v7 & 4) != 0) {
      goto LABEL_37;
    }
  }
LABEL_9:
  if ((v7 & 0x200) == 0) {
    goto LABEL_10;
  }
LABEL_43:
  char v32 = *((unsigned char *)this + 70);
  *(unsigned char *)char v4 = 72;
  *((unsigned char *)v4 + 1) = v32;
  char v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  int v7 = *((_DWORD *)this + 23);
  if ((v7 & 0x400) == 0)
  {
LABEL_11:
    if ((v7 & 8) == 0) {
      goto LABEL_12;
    }
LABEL_45:
    int v34 = (unsigned int *)*((void *)this + 5);
    if (v34)
    {
      *(unsigned char *)char v4 = 90;
      unsigned int v35 = v4 + 1;
      int v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34[11];
      if (v36 <= 0x7F) {
        goto LABEL_47;
      }
    }
    else
    {
      int v34 = *(unsigned int **)(qword_10047F090 + 40);
      *(unsigned char *)char v4 = 90;
      unsigned int v35 = v4 + 1;
      int v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34[11];
      if (v36 <= 0x7F)
      {
LABEL_47:
        *((unsigned char *)v4 + 1) = (_BYTE)v36;
        char v4 = sub_1001D3D10((wireless_diagnostics::google::protobuf::internal::WireFormat *)v34, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3, a4);
        int v7 = *((_DWORD *)this + 23);
        if ((v7 & 0x800) != 0) {
          goto LABEL_51;
        }
LABEL_13:
        if ((v7 & 0x1000) == 0) {
          goto LABEL_14;
        }
        goto LABEL_52;
      }
    }
    int v37 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v36, v35, a3);
    char v4 = sub_1001D3D10((wireless_diagnostics::google::protobuf::internal::WireFormat *)v34, v37, v38, v39);
    int v7 = *((_DWORD *)this + 23);
    if ((v7 & 0x800) != 0) {
      goto LABEL_51;
    }
    goto LABEL_13;
  }
LABEL_44:
  char v33 = *((unsigned char *)this + 71);
  *(unsigned char *)char v4 = 80;
  *((unsigned char *)v4 + 1) = v33;
  char v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  int v7 = *((_DWORD *)this + 23);
  if ((v7 & 8) != 0) {
    goto LABEL_45;
  }
LABEL_12:
  if ((v7 & 0x800) == 0) {
    goto LABEL_13;
  }
LABEL_51:
  uint64_t v40 = *((void *)this + 9);
  *(unsigned char *)char v4 = 97;
  *(void *)((char *)v4 + 1) = v40;
  char v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v7 = *((_DWORD *)this + 23);
  if ((v7 & 0x1000) == 0)
  {
LABEL_14:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_53;
  }
LABEL_52:
  char v41 = *((unsigned char *)this + 80);
  *(unsigned char *)char v4 = 104;
  *((unsigned char *)v4 + 1) = v41;
  char v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  if ((*((_DWORD *)this + 23) & 0x2000) == 0)
  {
LABEL_15:
    uint64_t v10 = (void *)*((void *)this + 1);
    char v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v8 = v10;
    if (!v10) {
      return v4;
    }
    goto LABEL_60;
  }
LABEL_53:
  int v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 21);
  *(unsigned char *)char v4 = 112;
  unint64_t v43 = (unint64_t)v4 + 1;
  if ((v42 & 0x80000000) != 0)
  {
    char v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v42, v43, a3);
    int v45 = (void *)*((void *)this + 1);
    char v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v8 = v45;
    if (!v45) {
      return v4;
    }
  }
  else if (v42 > 0x7F)
  {
    char v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v42, v43, a3);
    unsigned int v46 = (void *)*((void *)this + 1);
    char v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v8 = v46;
    if (!v46) {
      return v4;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v42;
    char v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    int v44 = (void *)*((void *)this + 1);
    char v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v8 = v44;
    if (!v44) {
      return v4;
    }
  }
LABEL_60:
  if (*v8 == v8[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, v4, a3);
}

uint64_t sub_1001D5DBC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 92);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    if ((v3 & 0xFF00) == 0) {
      goto LABEL_82;
    }
    goto LABEL_64;
  }
  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_19;
    }
LABEL_13:
    uint64_t v8 = *(void *)(a1 + 24);
    if (v8)
    {
      char v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001D15D8(v8, a2);
      if (v9 < 0x80)
      {
LABEL_15:
        int v10 = 1;
LABEL_18:
        v4 += v9 + v10 + 1;
        int v3 = *(_DWORD *)(a1 + 92);
        goto LABEL_19;
      }
    }
    else
    {
      char v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001D15D8(*(void *)(qword_10047F090 + 24), a2);
      if (v9 < 0x80) {
        goto LABEL_15;
      }
    }
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001CFB18(v6, a2);
    if (v7 < 0x80) {
      goto LABEL_9;
    }
LABEL_12:
    int v4 = v7
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2)
       + 1;
    int v3 = *(_DWORD *)(a1 + 92);
    if ((v3 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }
  int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001CFB18(*(void *)(qword_10047F090 + 16), a2);
  if (v7 >= 0x80) {
    goto LABEL_12;
  }
LABEL_9:
  int v4 = v7 + 2;
  int v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 2) != 0) {
    goto LABEL_13;
  }
LABEL_19:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_50;
    }
    goto LABEL_28;
  }
  uint64_t v11 = *(void *)(a1 + 32);
  if (v11)
  {
    unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001D32E0(v11, a2);
    if (v12 < 0x80) {
      goto LABEL_24;
    }
  }
  else
  {
    unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001D32E0(*(void *)(qword_10047F090 + 32), a2);
    if (v12 < 0x80)
    {
LABEL_24:
      v4 += v12 + 2;
      int v3 = *(_DWORD *)(a1 + 92);
      if ((v3 & 8) == 0) {
        goto LABEL_50;
      }
      goto LABEL_28;
    }
  }
  v4 += v12
      + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2)
      + 1;
  int v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 8) == 0) {
    goto LABEL_50;
  }
LABEL_28:
  uint64_t v13 = *(void *)(a1 + 40);
  if (!v13) {
    uint64_t v13 = *(void *)(qword_10047F090 + 40);
  }
  int v14 = 2 * (*(_DWORD *)(v13 + 48) & 1);
  if (!*(_DWORD *)(v13 + 48)) {
    int v14 = 0;
  }
  int v15 = *(_DWORD *)(v13 + 24);
  unint64_t v16 = (v14 + v15);
  if (v15 >= 1)
  {
    for (uint64_t i = 0; i < v15; ++i)
    {
      uint64_t v22 = *(void *)(*(void *)(v13 + 16) + 8 * i);
      int v19 = *(unsigned __int8 *)(v22 + 23);
      char v21 = v19;
      uint64_t v20 = *(void *)(v22 + 8);
      if ((v19 & 0x80u) == 0) {
        unint64_t v23 = *(unsigned __int8 *)(v22 + 23);
      }
      else {
        unint64_t v23 = v20;
      }
      if (v23 >= 0x80)
      {
        int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23, a2);
        int v19 = *(unsigned __int8 *)(v22 + 23);
        uint64_t v20 = *(void *)(v22 + 8);
        int v15 = *(_DWORD *)(v13 + 24);
        char v21 = *(unsigned char *)(v22 + 23);
      }
      else
      {
        int v18 = 1;
      }
      if (v21 < 0) {
        int v19 = v20;
      }
      unint64_t v16 = (v18 + v16 + v19);
    }
  }
  char v24 = *(void **)(v13 + 8);
  if (v24 && *v24 != v24[1]) {
    unint64_t v16 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v13 + 8), a2)+ v16;
  }
  *(_DWORD *)(v13 + 44) = v16;
  if (v16 >= 0x80) {
    int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16, a2);
  }
  else {
    int v25 = 1;
  }
  v4 += v16 + v25 + 1;
  int v3 = *(_DWORD *)(a1 + 92);
LABEL_50:
  int v26 = v4 + 9;
  if ((v3 & 0x10) == 0) {
    int v26 = v4;
  }
  if ((v3 & 0x20) != 0) {
    LODWORD(v5) = v26 + 9;
  }
  else {
    LODWORD(v5) = v26;
  }
  if ((v3 & 0x40) != 0)
  {
    unsigned int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if (v27 >= 0x80)
    {
      int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 92);
    }
    else
    {
      int v28 = 2;
    }
    LODWORD(v5) = v28 + v5;
  }
  if ((v3 & 0x80) != 0) {
    uint64_t v5 = (v5 + 2);
  }
  else {
    uint64_t v5 = v5;
  }
  if ((v3 & 0xFF00) != 0)
  {
LABEL_64:
    unsigned int v29 = v5 + 2;
    if ((v3 & 0x100) == 0) {
      unsigned int v29 = v5;
    }
    if ((v3 & 0x200) != 0) {
      v29 += 2;
    }
    if ((v3 & 0x400) != 0) {
      v29 += 2;
    }
    if ((v3 & 0x800) != 0) {
      v29 += 9;
    }
    if ((v3 & 0x1000) != 0) {
      uint64_t v5 = v29 + 2;
    }
    else {
      uint64_t v5 = v29;
    }
    if ((v3 & 0x2000) != 0)
    {
      uint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 84);
      if ((v30 & 0x80000000) != 0)
      {
        int v31 = 11;
      }
      else if (v30 >= 0x80)
      {
        int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2)
            + 1;
      }
      else
      {
        int v31 = 2;
      }
      uint64_t v5 = (v31 + v5);
    }
  }
LABEL_82:
  char v32 = *(void **)(a1 + 8);
  if (v32 && *v32 != v32[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 88) = v5;
  return v5;
}

uint64_t sub_1001D6118(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001D4144((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001D61F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D620C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D6220(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001D62AC()
{
  return 1;
}

uint64_t sub_1001D62B4()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DE38;
}

void sub_1001D6344(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D6358(uint64_t a1, unsigned char *a2)
{
  if (a2 == (unsigned char *)a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = a2[24];
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((a2[24] & 1) == 0)
  {
    if ((a2[24] & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    char v8 = a2[17];
    *(_DWORD *)(a1 + 24) |= 2u;
    *(unsigned char *)(a1 + 17) = v8;
    if ((*((_DWORD *)a2 + 6) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_7;
  }
  char v7 = a2[16];
  *(_DWORD *)(a1 + 24) |= 1u;
  *(unsigned char *)(a1 + 16) = v7;
  int v4 = *((_DWORD *)a2 + 6);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
LABEL_7:
    char v5 = a2[18];
    *(_DWORD *)(a1 + 24) |= 4u;
    *(unsigned char *)(a1 + 18) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001D6438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D644C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D6460(uint64_t a1)
{
  *(void *)a1 = off_10045F2E0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001D64B4(uint64_t a1)
{
  *(void *)a1 = off_10045F2E0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1001D651C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 20) = a2;
  return result;
}

void sub_1001D6524()
{
}

void sub_1001D6594()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001D65BC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 24))
  {
    *(_WORD *)(a1 + 16) = 257;
    *(unsigned char *)(a1 + 18) = 1;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001D65E8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        char v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        unsigned int v24 = 0;
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
          if (!result) {
            return result;
          }
          unsigned int v14 = v24;
          int v15 = (unsigned char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
        }
        else
        {
          unsigned int v14 = *v13;
          int v15 = v13 + 1;
          *((void *)this + 1) = v15;
        }
        *(unsigned char *)(a1 + 16) = v14 != 0;
        *(_DWORD *)(a1 + 24) |= 1u;
        if ((unint64_t)v15 < v11 && *v15 == 16)
        {
          unint64_t v16 = v15 + 1;
          *((void *)this + 1) = v16;
          unsigned int v23 = 0;
          if ((unint64_t)v16 >= v11) {
            goto LABEL_31;
          }
          goto LABEL_29;
        }
      }
      if (v9 != 2) {
        break;
      }
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_21;
      }
      unint64_t v16 = (unsigned __int8 *)*((void *)this + 1);
      unint64_t v11 = *((void *)this + 2);
      unsigned int v23 = 0;
      if ((unint64_t)v16 >= v11)
      {
LABEL_31:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v23);
        if (!result) {
          return result;
        }
        unsigned int v17 = v23;
        int v18 = (unsigned char *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        goto LABEL_33;
      }
LABEL_29:
      if ((char)*v16 < 0) {
        goto LABEL_31;
      }
      unsigned int v17 = *v16;
      int v18 = v16 + 1;
      *((void *)this + 1) = v18;
LABEL_33:
      *(unsigned char *)(a1 + 17) = v17 != 0;
      *(_DWORD *)(a1 + 24) |= 2u;
      if ((unint64_t)v18 < v11 && *v18 == 24)
      {
        unsigned int v12 = v18 + 1;
        *((void *)this + 1) = v12;
        unsigned int v22 = 0;
        if ((unint64_t)v12 >= v11) {
          goto LABEL_38;
        }
LABEL_36:
        if ((char)*v12 < 0)
        {
LABEL_38:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v22);
          if (!result) {
            return result;
          }
          unsigned int v19 = v22;
          uint64_t v20 = (char *)*((void *)this + 1);
          unint64_t v11 = *((void *)this + 2);
          goto LABEL_40;
        }
        unsigned int v19 = *v12;
        uint64_t v20 = (char *)(v12 + 1);
        *((void *)this + 1) = v20;
LABEL_40:
        *(unsigned char *)(a1 + 18) = v19 != 0;
        *(_DWORD *)(a1 + 24) |= 4u;
        if (v20 == (char *)v11 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v9 == 3)
    {
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        unsigned int v12 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v11 = *((void *)this + 2);
        unsigned int v22 = 0;
        if ((unint64_t)v12 >= v11) {
          goto LABEL_38;
        }
        goto LABEL_36;
      }
    }
    else
    {
      int v10 = TagFallback & 7;
    }
LABEL_21:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_1001D6870(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 24);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 16), (BOOL)a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 17), (BOOL)a2, a4);
  if ((*(_DWORD *)(v5 + 24) & 4) == 0)
  {
LABEL_4:
    unsigned int v9 = *(void **)(v5 + 8);
    char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    char v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_9;
  }
LABEL_8:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 18), (BOOL)a2, a4);
  int v10 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  char v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_9:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_1001D6928(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 24);
  if (v3)
  {
    char v7 = *(unsigned char *)(a1 + 16);
    *(unsigned char *)a2 = 8;
    *((unsigned char *)a2 + 1) = v7;
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    int v3 = *(_DWORD *)(a1 + 24);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      char v9 = *(unsigned char *)(a1 + 18);
      *(unsigned char *)a2 = 24;
      *((unsigned char *)a2 + 1) = v9;
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      int v10 = *(void **)(a1 + 8);
      int v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      uint64_t v5 = v10;
      if (!v10) {
        return (uint64_t)a2;
      }
      goto LABEL_9;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v8 = *(unsigned char *)(a1 + 17);
  *(unsigned char *)a2 = 16;
  *((unsigned char *)a2 + 1) = v8;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  if ((*(_DWORD *)(a1 + 24) & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  int v6 = *(void **)(a1 + 8);
  int v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v5 = v6;
  if (!v6) {
    return (uint64_t)a2;
  }
LABEL_9:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, a2, a3);
  }
  return (uint64_t)a2;
}

uint64_t sub_1001D69B0(_DWORD *a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = a1[6];
  unsigned int v4 = 2 * (v3 & 1);
  if ((v3 & 2) != 0) {
    v4 += 2;
  }
  if ((v3 & 4) != 0) {
    v4 += 2;
  }
  if (a1[6]) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  char v8 = (void *)*((void *)a1 + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2);
  char v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  a1[5] = v5;
  return v5;
}

uint64_t sub_1001D6A1C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001D6358((uint64_t)a1, v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001D6AFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D6B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D6B24(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001D6BB0()
{
  return 1;
}

uint64_t sub_1001D6BB8()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DE48;
}

void sub_1001D6C48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D6C5C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v27);
  }
  int v4 = *(_DWORD *)(a2 + 156);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    int v13 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 156) |= 1u;
    *(_DWORD *)(a1 + 16) = v13;
    int v4 = *(_DWORD *)(a2 + 156);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_38;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v14 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 156) |= 2u;
  *(_DWORD *)(a1 + 20) = v14;
  int v4 = *(_DWORD *)(a2 + 156);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t v15 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 156) |= 4u;
  *(void *)(a1 + 24) = v15;
  int v4 = *(_DWORD *)(a2 + 156);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v16 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 156) |= 8u;
  *(void *)(a1 + 32) = v16;
  int v4 = *(_DWORD *)(a2 + 156);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_41:
    uint64_t v18 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 156) |= 0x20u;
    *(void *)(a1 + 48) = v18;
    int v4 = *(_DWORD *)(a2 + 156);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_42;
  }
LABEL_40:
  uint64_t v17 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 156) |= 0x10u;
  *(void *)(a1 + 40) = v17;
  int v4 = *(_DWORD *)(a2 + 156);
  if ((v4 & 0x20) != 0) {
    goto LABEL_41;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_42:
  uint64_t v19 = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 156) |= 0x40u;
  *(void *)(a1 + 56) = v19;
  int v4 = *(_DWORD *)(a2 + 156);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *(_DWORD *)(a2 + 88);
    *(_DWORD *)(a1 + 156) |= 0x80u;
    *(_DWORD *)(a1 + 88) = v5;
    int v4 = *(_DWORD *)(a2 + 156);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_23;
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t v20 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 156) |= 0x100u;
    *(void *)(a1 + 64) = v20;
    int v4 = *(_DWORD *)(a2 + 156);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_46;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  uint64_t v21 = *(void *)(a2 + 72);
  *(_DWORD *)(a1 + 156) |= 0x200u;
  *(void *)(a1 + 72) = v21;
  int v4 = *(_DWORD *)(a2 + 156);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t v22 = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 156) |= 0x400u;
  *(void *)(a1 + 80) = v22;
  int v4 = *(_DWORD *)(a2 + 156);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t v23 = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 156) |= 0x800u;
  *(void *)(a1 + 96) = v23;
  int v4 = *(_DWORD *)(a2 + 156);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_49;
  }
LABEL_48:
  uint64_t v24 = *(void *)(a2 + 104);
  *(_DWORD *)(a1 + 156) |= 0x1000u;
  *(void *)(a1 + 104) = v24;
  int v4 = *(_DWORD *)(a2 + 156);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_50;
  }
LABEL_49:
  char v25 = *(unsigned char *)(a2 + 92);
  *(_DWORD *)(a1 + 156) |= 0x2000u;
  *(unsigned char *)(a1 + 92) = v25;
  int v4 = *(_DWORD *)(a2 + 156);
  if ((v4 & 0x4000) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_50:
  uint64_t v26 = *(void *)(a2 + 112);
  *(_DWORD *)(a1 + 156) |= 0x4000u;
  *(void *)(a1 + 112) = v26;
  int v4 = *(_DWORD *)(a2 + 156);
  if ((v4 & 0x8000) != 0)
  {
LABEL_22:
    int v6 = *(_DWORD *)(a2 + 120);
    *(_DWORD *)(a1 + 156) |= 0x8000u;
    *(_DWORD *)(a1 + 120) = v6;
    int v4 = *(_DWORD *)(a2 + 156);
  }
LABEL_23:
  if ((v4 & 0xFF0000) != 0)
  {
    if ((v4 & 0x10000) != 0)
    {
      int v7 = *(_DWORD *)(a2 + 124);
      *(_DWORD *)(a1 + 156) |= 0x10000u;
      *(_DWORD *)(a1 + 124) = v7;
      int v4 = *(_DWORD *)(a2 + 156);
    }
    if ((v4 & 0x20000) != 0)
    {
      *(_DWORD *)(a1 + 156) |= 0x20000u;
      uint64_t v8 = *(void *)(a1 + 128);
      if (!v8) {
        operator new();
      }
      char v9 = *(unsigned char **)(a2 + 128);
      if (!v9) {
        char v9 = *(unsigned char **)(qword_10047F0A0 + 128);
      }
      sub_1001D6358(v8, v9);
      int v4 = *(_DWORD *)(a2 + 156);
    }
    if ((v4 & 0x40000) != 0)
    {
      uint64_t v10 = *(void *)(a2 + 136);
      *(_DWORD *)(a1 + 156) |= 0x40000u;
      *(void *)(a1 + 136) = v10;
      int v4 = *(_DWORD *)(a2 + 156);
    }
    if ((v4 & 0x80000) != 0)
    {
      uint64_t v11 = *(void *)(a2 + 144);
      *(_DWORD *)(a1 + 156) |= 0x80000u;
      *(void *)(a1 + 144) = v11;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001D6FE4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001D700C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D7020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D7034(void *a1)
{
  *a1 = off_10045F390;
  if ((void *)qword_10047F0A0 != a1)
  {
    uint64_t v2 = a1[16];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001D70C8(void *a1)
{
  *a1 = off_10045F390;
  if ((void *)qword_10047F0A0 != a1)
  {
    uint64_t v2 = a1[16];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1001D7170(uint64_t result, int a2)
{
  *(_DWORD *)(result + 152) = a2;
  return result;
}

void sub_1001D7178()
{
}

void sub_1001D7250()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001D7278(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 156);
  if ((_BYTE)v2)
  {
    *(void *)(this + 16) = 0x6400000014;
    *(_OWORD *)(this + 24) = xmmword_1003F2110;
    *(_OWORD *)(this + 40) = xmmword_1003F2120;
    *(void *)(this + 56) = 0x4014000000000000;
    *(_DWORD *)(this + 88) = 7;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_OWORD *)(this + 64) = xmmword_1003F2180;
    *(void *)(this + 80) = 0xC03E000000000000;
    *(_OWORD *)(this + 96) = xmmword_1003F2150;
    *(unsigned char *)(this + 92) = 0;
    *(void *)(this + 112) = 0x4059000000000000;
    *(_DWORD *)(this + 120) = 15;
  }
  if ((v2 & 0xFF0000) != 0)
  {
    *(_DWORD *)(this + 124) = 30;
    if ((v2 & 0x20000) != 0)
    {
      this = *(void *)(this + 128);
      if (this)
      {
        if (*(unsigned char *)(this + 24))
        {
          *(_WORD *)(this + 16) = 257;
          *(unsigned char *)(this + 18) = 1;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 16) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(_OWORD *)(v1 + 136) = xmmword_1003F2160;
  }
  uint64_t v5 = *(void *)(v1 + 8);
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 37) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_1001D7390(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (unsigned int *)(a1 + 16);
  int v7 = (unsigned int *)(a1 + 20);
  uint64_t v8 = (unsigned int *)(a1 + 88);
  char v9 = (unsigned int *)(a1 + 120);
  uint64_t v10 = (unsigned int *)(a1 + 124);
  unsigned int v11 = a1 + 8;
  while (1)
  {
    unsigned int v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 < *((void *)this + 2) && (*v12 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_77;
        }
        uint64_t v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
          *(_DWORD *)(a1 + 156) |= 1u;
          if ((unint64_t)v17 >= v15) {
            continue;
          }
        }
        else
        {
          *int v6 = *v16;
          uint64_t v17 = v16 + 1;
          *((void *)this + 1) = v17;
          *(_DWORD *)(a1 + 156) |= 1u;
          if ((unint64_t)v17 >= v15) {
            continue;
          }
        }
        if (*v17 != 16) {
          continue;
        }
        uint64_t v18 = v17 + 1;
        *((void *)this + 1) = v18;
        if ((unint64_t)v18 >= v15) {
          goto LABEL_105;
        }
LABEL_102:
        if (*v18 < 0)
        {
LABEL_105:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unint64_t v43 = (unsigned char *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
          *(_DWORD *)(a1 + 156) |= 2u;
          if ((unint64_t)v43 >= v44) {
            continue;
          }
        }
        else
        {
          *int v7 = *v18;
          unint64_t v43 = v18 + 1;
          *((void *)this + 1) = v43;
          *(_DWORD *)(a1 + 156) |= 2u;
          if ((unint64_t)v43 >= v15) {
            continue;
          }
        }
        if (*v43 != 25) {
          continue;
        }
        *((void *)this + 1) = v43 + 1;
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
LABEL_109:
        }
        *(void *)(a1 + 24) = *(void *)v63;
        *(_DWORD *)(a1 + 156) |= 4u;
        int v45 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v45 >= *((void *)this + 2) || *v45 != 33) {
          continue;
        }
        *((void *)this + 1) = v45 + 1;
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
LABEL_112:
        }
        *(void *)(a1 + 136) = *(void *)v63;
        *(_DWORD *)(a1 + 156) |= 0x40000u;
        unsigned int v46 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v46 >= *((void *)this + 2) || *v46 != 41) {
          continue;
        }
        *((void *)this + 1) = v46 + 1;
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
LABEL_115:
        }
        *(void *)(a1 + 32) = *(void *)v63;
        *(_DWORD *)(a1 + 156) |= 8u;
        unsigned int v47 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v47 >= *((void *)this + 2) || *v47 != 49) {
          continue;
        }
        *((void *)this + 1) = v47 + 1;
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
LABEL_118:
        }
        *(void *)(a1 + 144) = *(void *)v63;
        *(_DWORD *)(a1 + 156) |= 0x80000u;
        int v48 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v48 >= *((void *)this + 2) || *v48 != 57) {
          continue;
        }
        *((void *)this + 1) = v48 + 1;
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
LABEL_121:
        }
        *(void *)(a1 + 40) = *(void *)v63;
        *(_DWORD *)(a1 + 156) |= 0x10u;
        unsigned int v49 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v49 >= *((void *)this + 2) || *v49 != 65) {
          continue;
        }
        *((void *)this + 1) = v49 + 1;
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
LABEL_124:
        }
        *(void *)(a1 + 48) = *(void *)v63;
        *(_DWORD *)(a1 + 156) |= 0x20u;
        int v50 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v50 >= *((void *)this + 2) || *v50 != 73) {
          continue;
        }
        *((void *)this + 1) = v50 + 1;
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
LABEL_127:
        }
        *(void *)(a1 + 56) = *(void *)v63;
        *(_DWORD *)(a1 + 156) |= 0x40u;
        unsigned int v51 = (unsigned char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        if ((unint64_t)v51 >= v19 || *v51 != 80) {
          continue;
        }
        uint64_t v20 = v51 + 1;
        *((void *)this + 1) = v20;
LABEL_130:
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v52 = (unsigned char *)*((void *)this + 1);
          unint64_t v53 = *((void *)this + 2);
          *(_DWORD *)(a1 + 156) |= 0x80u;
          if ((unint64_t)v52 >= v53) {
            continue;
          }
        }
        else
        {
          *uint64_t v8 = *v20;
          int v52 = v20 + 1;
          *((void *)this + 1) = v52;
          *(_DWORD *)(a1 + 156) |= 0x80u;
          if ((unint64_t)v52 >= v19) {
            continue;
          }
        }
        if (*v52 != 89) {
          continue;
        }
        *((void *)this + 1) = v52 + 1;
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
LABEL_138:
        }
        *(void *)(a1 + 64) = *(void *)v63;
        *(_DWORD *)(a1 + 156) |= 0x100u;
        unsigned int v54 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v54 >= *((void *)this + 2) || *v54 != 97) {
          continue;
        }
        *((void *)this + 1) = v54 + 1;
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
LABEL_141:
        }
        *(void *)(a1 + 72) = *(void *)v63;
        *(_DWORD *)(a1 + 156) |= 0x200u;
        int v55 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v55 >= *((void *)this + 2) || *v55 != 105) {
          continue;
        }
        *((void *)this + 1) = v55 + 1;
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
LABEL_144:
        }
        *(void *)(a1 + 80) = *(void *)v63;
        *(_DWORD *)(a1 + 156) |= 0x400u;
        int v56 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v56 >= *((void *)this + 2) || *v56 != 113) {
          continue;
        }
        *((void *)this + 1) = v56 + 1;
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
LABEL_147:
        }
        *(void *)(a1 + 96) = *(void *)v63;
        *(_DWORD *)(a1 + 156) |= 0x800u;
        int v57 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v57 >= *((void *)this + 2) || *v57 != 121) {
          continue;
        }
        *((void *)this + 1) = v57 + 1;
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
LABEL_150:
        }
        *(void *)(a1 + 104) = *(void *)v63;
        *(_DWORD *)(a1 + 156) |= 0x1000u;
        uint64_t v58 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        if ((int)v21 - (int)v58 < 2 || *v58 != 128 || v58[1] != 1) {
          continue;
        }
        uint64_t v22 = v58 + 2;
        *((void *)this + 1) = v22;
        if ((unint64_t)v22 >= v21) {
          goto LABEL_157;
        }
LABEL_154:
        if ((char)*v22 < 0)
        {
LABEL_157:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
          if (!result) {
            return result;
          }
          int v59 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
          *(_DWORD *)(a1 + 156) |= 0x8000u;
          if ((int)v21 - (int)v59 < 2) {
            continue;
          }
        }
        else
        {
          unsigned int *v9 = *v22;
          int v59 = v22 + 1;
          *((void *)this + 1) = v59;
          *(_DWORD *)(a1 + 156) |= 0x8000u;
          if ((int)v21 - (int)v59 < 2) {
            continue;
          }
        }
        if (*v59 != 136 || v59[1] != 1) {
          continue;
        }
        uint64_t v23 = v59 + 2;
        *((void *)this + 1) = v23;
        v63[0] = 0;
        if ((unint64_t)v23 >= v21) {
          goto LABEL_164;
        }
LABEL_162:
        if ((char)*v23 < 0)
        {
LABEL_164:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v63);
          if (!result) {
            return result;
          }
          unsigned int v60 = v63[0];
          int v61 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
        }
        else
        {
          unsigned int v60 = *v23;
          int v61 = v23 + 1;
          *((void *)this + 1) = v61;
        }
        *(unsigned char *)(a1 + 92) = v60 != 0;
        *(_DWORD *)(a1 + 156) |= 0x2000u;
        if ((int)v21 - (int)v61 >= 2 && *v61 == 145 && v61[1] == 1)
        {
          *((void *)this + 1) = v61 + 2;
          *(void *)unsigned int v63 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
LABEL_63:
          }
          *(void *)(a1 + 112) = *(void *)v63;
          *(_DWORD *)(a1 + 156) |= 0x4000u;
          char v25 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
          if ((int)v24 - (int)v25 >= 2 && *v25 == 152 && v25[1] == 1)
          {
            uint64_t v26 = v25 + 2;
            *((void *)this + 1) = v26;
LABEL_69:
            if ((unint64_t)v26 >= v24 || (char)*v26 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
              if (!result) {
                return result;
              }
              unsigned int v27 = (unsigned __int8 *)*((void *)this + 1);
              uint64_t v34 = *((void *)this + 2);
              int v28 = *(_DWORD *)(a1 + 156) | 0x10000;
              *(_DWORD *)(a1 + 156) = v28;
              if ((int)v34 - (int)v27 < 2) {
                continue;
              }
            }
            else
            {
              *uint64_t v10 = *v26;
              unsigned int v27 = v26 + 1;
              *((void *)this + 1) = v27;
              int v28 = *(_DWORD *)(a1 + 156) | 0x10000;
              *(_DWORD *)(a1 + 156) = v28;
              if ((int)v24 - (int)v27 < 2) {
                continue;
              }
            }
            if (*v27 == 162 && v27[1] == 1)
            {
              int v62 = v8;
              unsigned int v29 = v7;
              uint64_t v30 = v6;
              *((void *)this + 1) = v27 + 2;
              *(_DWORD *)(a1 + 156) = v28 | 0x20000;
              uint64_t v31 = *(void *)(a1 + 128);
              if (!v31) {
LABEL_85:
              }
                operator new();
LABEL_75:
              v63[0] = 0;
              char v32 = (char *)*((void *)this + 1);
              if ((unint64_t)v32 >= *((void *)this + 2) || *v32 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v63))return 0; {
              }
                }
              else
              {
                v63[0] = *v32;
                *((void *)this + 1) = v32 + 1;
              }
              int v35 = *((_DWORD *)this + 14);
              int v36 = *((_DWORD *)this + 15);
              *((_DWORD *)this + 14) = v35 + 1;
              if (v35 >= v36) {
                return 0;
              }
              int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v63[0]);
              if (!sub_1001D65E8(v31, this, v38, v39) || !*((unsigned char *)this + 36)) {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
              int v40 = *((_DWORD *)this + 14);
              BOOL v41 = __OFSUB__(v40, 1);
              int v42 = v40 - 1;
              if (v42 < 0 == v41) {
                *((_DWORD *)this + 14) = v42;
              }
              int v6 = v30;
              int v7 = v29;
              uint64_t v8 = v62;
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
            }
          }
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_77;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v18 >= v15) {
          goto LABEL_105;
        }
        goto LABEL_102;
      case 3u:
        int v14 = TagFallback & 7;
        if (v14 != 1) {
          goto LABEL_77;
        }
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
        goto LABEL_109;
        }
      case 4u:
        int v14 = TagFallback & 7;
        if (v14 != 1) {
          goto LABEL_77;
        }
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
        goto LABEL_112;
        }
      case 5u:
        int v14 = TagFallback & 7;
        if (v14 != 1) {
          goto LABEL_77;
        }
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
        goto LABEL_115;
        }
      case 6u:
        int v14 = TagFallback & 7;
        if (v14 != 1) {
          goto LABEL_77;
        }
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
        goto LABEL_118;
        }
      case 7u:
        int v14 = TagFallback & 7;
        if (v14 != 1) {
          goto LABEL_77;
        }
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
        goto LABEL_121;
        }
      case 8u:
        int v14 = TagFallback & 7;
        if (v14 != 1) {
          goto LABEL_77;
        }
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
        goto LABEL_124;
        }
      case 9u:
        int v14 = TagFallback & 7;
        if (v14 != 1) {
          goto LABEL_77;
        }
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
        goto LABEL_127;
        }
      case 0xAu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_77;
        }
        uint64_t v20 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        goto LABEL_130;
      case 0xBu:
        int v14 = TagFallback & 7;
        if (v14 != 1) {
          goto LABEL_77;
        }
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
        goto LABEL_138;
        }
      case 0xCu:
        int v14 = TagFallback & 7;
        if (v14 != 1) {
          goto LABEL_77;
        }
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
        goto LABEL_141;
        }
      case 0xDu:
        int v14 = TagFallback & 7;
        if (v14 != 1) {
          goto LABEL_77;
        }
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
        goto LABEL_144;
        }
      case 0xEu:
        int v14 = TagFallback & 7;
        if (v14 != 1) {
          goto LABEL_77;
        }
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
        goto LABEL_147;
        }
      case 0xFu:
        int v14 = TagFallback & 7;
        if (v14 != 1) {
          goto LABEL_77;
        }
        *(void *)unsigned int v63 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63) & 1) == 0)return 0; {
        goto LABEL_150;
        }
      case 0x10u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_77;
        }
        uint64_t v22 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        if ((unint64_t)v22 >= v21) {
          goto LABEL_157;
        }
        goto LABEL_154;
      case 0x11u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_77;
        }
        uint64_t v23 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        v63[0] = 0;
        if ((unint64_t)v23 >= v21) {
          goto LABEL_164;
        }
        goto LABEL_162;
      case 0x12u:
        int v14 = TagFallback & 7;
        if (v14 != 1) {
          goto LABEL_77;
        }
        *(void *)unsigned int v63 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v63))goto LABEL_63; {
        return 0;
        }
      case 0x13u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_77;
        }
        uint64_t v26 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        goto LABEL_69;
      case 0x14u:
        int v14 = TagFallback & 7;
        if (v14 != 2) {
          goto LABEL_77;
        }
        int v62 = v8;
        unsigned int v29 = v7;
        uint64_t v30 = v6;
        *(_DWORD *)(a1 + 156) |= 0x20000u;
        uint64_t v31 = *(void *)(a1 + 128);
        if (v31) {
          goto LABEL_75;
        }
        goto LABEL_85;
      default:
        int v14 = TagFallback & 7;
LABEL_77:
        if (v14 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v11, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_1001D7F20()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001D7F98(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 156);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 156);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_25;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), a2, a4);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x40000) == 0)
  {
LABEL_5:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 136), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 8) == 0)
  {
LABEL_6:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x80000) == 0)
  {
LABEL_7:
    if ((v6 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 144), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x10) == 0)
  {
LABEL_8:
    if ((v6 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x20) == 0)
  {
LABEL_9:
    if ((v6 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x40) == 0)
  {
LABEL_10:
    if ((v6 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x80) == 0)
  {
LABEL_11:
    if ((v6 & 0x100) == 0) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 88), a2, a4);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x100) == 0)
  {
LABEL_12:
    if ((v6 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x200) == 0)
  {
LABEL_13:
    if ((v6 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (int)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x400) == 0)
  {
LABEL_14:
    if ((v6 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (int)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x800) == 0)
  {
LABEL_15:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (int)a2, *(double *)(v5 + 96), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x1000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (int)a2, *(double *)(v5 + 104), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(_DWORD *)(v5 + 120), a2, a4);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x2000) == 0)
  {
LABEL_18:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned __int8 *)(v5 + 92), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x4000) == 0)
  {
LABEL_19:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, (int)a2, *(double *)(v5 + 112), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x10000) == 0)
  {
LABEL_20:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(_DWORD *)(v5 + 124), a2, a4);
  if ((*(_DWORD *)(v5 + 156) & 0x20000) == 0)
  {
LABEL_21:
    char v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_46;
  }
LABEL_42:
  uint64_t v10 = *(void *)(v5 + 128);
  if (v10)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, v10, a2, a4);
    unsigned int v11 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v11;
    if (!v11) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(void *)(qword_10047F0A0 + 128), a2, a4);
    unsigned int v12 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v12;
    if (!v12) {
      return result;
    }
  }
LABEL_46:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001D8254(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if ((*((unsigned char *)this + 156) & 1) == 0)
  {
    if ((*((unsigned char *)this + 156) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_29:
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *(unsigned char *)uint64_t v3 = 16;
    if (v14 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v3 + 1, a3);
      int v5 = *((_DWORD *)this + 39);
      if ((v5 & 4) != 0) {
        goto LABEL_33;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v14;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      int v5 = *((_DWORD *)this + 39);
      if ((v5 & 4) != 0) {
        goto LABEL_33;
      }
    }
LABEL_4:
    if ((v5 & 0x40000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_34;
  }
  unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  *(unsigned char *)a2 = 8;
  unsigned int v13 = a2 + 1;
  if (v12 > 0x7F)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v13, a3);
    if ((*((unsigned char *)this + 156) & 2) != 0) {
      goto LABEL_29;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v12;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((unsigned char *)this + 156) & 2) != 0) {
      goto LABEL_29;
    }
  }
LABEL_3:
  int v5 = *((_DWORD *)this + 39);
  if ((v5 & 4) == 0) {
    goto LABEL_4;
  }
LABEL_33:
  uint64_t v15 = *((void *)this + 3);
  *(unsigned char *)uint64_t v3 = 25;
  *(void *)((char *)v3 + 1) = v15;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v5 = *((_DWORD *)this + 39);
  if ((v5 & 0x40000) == 0)
  {
LABEL_5:
    if ((v5 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t v16 = *((void *)this + 17);
  *(unsigned char *)uint64_t v3 = 33;
  *(void *)((char *)v3 + 1) = v16;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v5 = *((_DWORD *)this + 39);
  if ((v5 & 8) == 0)
  {
LABEL_6:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t v17 = *((void *)this + 4);
  *(unsigned char *)uint64_t v3 = 41;
  *(void *)((char *)v3 + 1) = v17;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v5 = *((_DWORD *)this + 39);
  if ((v5 & 0x80000) == 0)
  {
LABEL_7:
    if ((v5 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t v18 = *((void *)this + 18);
  *(unsigned char *)uint64_t v3 = 49;
  *(void *)((char *)v3 + 1) = v18;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v5 = *((_DWORD *)this + 39);
  if ((v5 & 0x10) == 0)
  {
LABEL_8:
    if ((v5 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t v19 = *((void *)this + 5);
  *(unsigned char *)uint64_t v3 = 57;
  *(void *)((char *)v3 + 1) = v19;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v5 = *((_DWORD *)this + 39);
  if ((v5 & 0x20) == 0)
  {
LABEL_9:
    if ((v5 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t v20 = *((void *)this + 6);
  *(unsigned char *)uint64_t v3 = 65;
  *(void *)((char *)v3 + 1) = v20;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v5 = *((_DWORD *)this + 39);
  if ((v5 & 0x40) == 0)
  {
LABEL_10:
    if ((v5 & 0x80) == 0) {
      goto LABEL_11;
    }
LABEL_40:
    uint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
    *(unsigned char *)uint64_t v3 = 80;
    if (v22 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, (int)v3 + 1, a3);
      int v6 = *((_DWORD *)this + 39);
      if ((v6 & 0x100) != 0) {
        goto LABEL_44;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v22;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      int v6 = *((_DWORD *)this + 39);
      if ((v6 & 0x100) != 0) {
        goto LABEL_44;
      }
    }
LABEL_12:
    if ((v6 & 0x200) == 0) {
      goto LABEL_13;
    }
    goto LABEL_45;
  }
LABEL_39:
  uint64_t v21 = *((void *)this + 7);
  *(unsigned char *)uint64_t v3 = 73;
  *(void *)((char *)v3 + 1) = v21;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  if ((*((_DWORD *)this + 39) & 0x80) != 0) {
    goto LABEL_40;
  }
LABEL_11:
  int v6 = *((_DWORD *)this + 39);
  if ((v6 & 0x100) == 0) {
    goto LABEL_12;
  }
LABEL_44:
  uint64_t v23 = *((void *)this + 8);
  *(unsigned char *)uint64_t v3 = 89;
  *(void *)((char *)v3 + 1) = v23;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v6 = *((_DWORD *)this + 39);
  if ((v6 & 0x200) == 0)
  {
LABEL_13:
    if ((v6 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t v24 = *((void *)this + 9);
  *(unsigned char *)uint64_t v3 = 97;
  *(void *)((char *)v3 + 1) = v24;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v6 = *((_DWORD *)this + 39);
  if ((v6 & 0x400) == 0)
  {
LABEL_14:
    if ((v6 & 0x800) == 0) {
      goto LABEL_15;
    }
    goto LABEL_47;
  }
LABEL_46:
  uint64_t v25 = *((void *)this + 10);
  *(unsigned char *)uint64_t v3 = 105;
  *(void *)((char *)v3 + 1) = v25;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v6 = *((_DWORD *)this + 39);
  if ((v6 & 0x800) == 0)
  {
LABEL_15:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_48;
  }
LABEL_47:
  uint64_t v26 = *((void *)this + 12);
  *(unsigned char *)uint64_t v3 = 113;
  *(void *)((char *)v3 + 1) = v26;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  int v6 = *((_DWORD *)this + 39);
  if ((v6 & 0x1000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
LABEL_49:
    int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 30);
    *(_WORD *)uint64_t v3 = 384;
    if (v28 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v28, (int)v3 + 2, a3);
      int v7 = *((_DWORD *)this + 39);
      if ((v7 & 0x2000) != 0) {
        goto LABEL_53;
      }
    }
    else
    {
      *((unsigned char *)v3 + 2) = (_BYTE)v28;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
      int v7 = *((_DWORD *)this + 39);
      if ((v7 & 0x2000) != 0) {
        goto LABEL_53;
      }
    }
LABEL_18:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_54;
  }
LABEL_48:
  uint64_t v27 = *((void *)this + 13);
  *(unsigned char *)uint64_t v3 = 121;
  *(void *)((char *)v3 + 1) = v27;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 9);
  if ((*((_DWORD *)this + 39) & 0x8000) != 0) {
    goto LABEL_49;
  }
LABEL_17:
  int v7 = *((_DWORD *)this + 39);
  if ((v7 & 0x2000) == 0) {
    goto LABEL_18;
  }
LABEL_53:
  char v29 = *((unsigned char *)this + 92);
  *(_WORD *)uint64_t v3 = 392;
  *((unsigned char *)v3 + 2) = v29;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
  int v7 = *((_DWORD *)this + 39);
  if ((v7 & 0x4000) == 0)
  {
LABEL_19:
    if ((v7 & 0x10000) == 0) {
      goto LABEL_20;
    }
LABEL_55:
    uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 31);
    *(_WORD *)uint64_t v3 = 408;
    if (v31 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, (int)v3 + 2, a3);
      if ((*((unsigned char *)this + 158) & 2) == 0) {
        goto LABEL_71;
      }
    }
    else
    {
      *((unsigned char *)v3 + 2) = (_BYTE)v31;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
      if ((*((unsigned char *)this + 158) & 2) == 0) {
        goto LABEL_71;
      }
    }
    goto LABEL_21;
  }
LABEL_54:
  uint64_t v30 = *((void *)this + 14);
  *(_WORD *)uint64_t v3 = 401;
  *(void *)((char *)v3 + 2) = v30;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 10);
  if ((*((_DWORD *)this + 39) & 0x10000) != 0) {
    goto LABEL_55;
  }
LABEL_20:
  if ((*((unsigned char *)this + 158) & 2) == 0) {
    goto LABEL_71;
  }
LABEL_21:
  uint64_t v8 = *((void *)this + 16);
  if (v8)
  {
    *(_WORD *)uint64_t v3 = 418;
    unsigned int v9 = v3 + 2;
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v8 + 20);
    if (v10 <= 0x7F) {
      goto LABEL_23;
    }
LABEL_61:
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, v9, a3);
    int v11 = *(_DWORD *)(v8 + 24);
    if ((v11 & 1) == 0) {
      goto LABEL_63;
    }
    goto LABEL_62;
  }
  uint64_t v8 = *(void *)(qword_10047F0A0 + 128);
  *(_WORD *)uint64_t v3 = 418;
  unsigned int v9 = v3 + 2;
  uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v8 + 20);
  if (v10 > 0x7F) {
    goto LABEL_61;
  }
LABEL_23:
  *((unsigned char *)v3 + 2) = (_BYTE)v10;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
  int v11 = *(_DWORD *)(v8 + 24);
  if (v11)
  {
LABEL_62:
    char v32 = *(unsigned char *)(v8 + 16);
    *(unsigned char *)uint64_t v3 = 8;
    *((unsigned char *)v3 + 1) = v32;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    int v11 = *(_DWORD *)(v8 + 24);
  }
LABEL_63:
  if ((v11 & 2) == 0)
  {
    if ((v11 & 4) == 0) {
      goto LABEL_65;
    }
LABEL_68:
    char v37 = *(unsigned char *)(v8 + 18);
    *(unsigned char *)uint64_t v3 = 24;
    *((unsigned char *)v3 + 1) = v37;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    uint64_t v38 = *(void **)(v8 + 8);
    uint64_t v34 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v8 + 8);
    char v33 = v38;
    if (!v38) {
      goto LABEL_71;
    }
    goto LABEL_69;
  }
  char v36 = *(unsigned char *)(v8 + 17);
  *(unsigned char *)uint64_t v3 = 16;
  *((unsigned char *)v3 + 1) = v36;
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
  if ((*(_DWORD *)(v8 + 24) & 4) != 0) {
    goto LABEL_68;
  }
LABEL_65:
  int v35 = *(void **)(v8 + 8);
  uint64_t v34 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v8 + 8);
  char v33 = v35;
  if (!v35) {
    goto LABEL_71;
  }
LABEL_69:
  if (*v33 != v33[1]) {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v34, v3, a3);
  }
LABEL_71:
  BOOL v41 = (void *)*((void *)this + 1);
  int v40 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v39 = v41;
  if (!v41 || *v39 == v39[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v40, v3, a3);
}

uint64_t sub_1001D8994(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 156);
  if (!(_BYTE)v3)
  {
    uint64_t v5 = 0;
    goto LABEL_30;
  }
  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_14;
    }
LABEL_10:
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 156);
    }
    else
    {
      int v9 = 2;
    }
    v4 += v9;
    goto LABEL_14;
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
  if (v6 < 0x80)
  {
    int v4 = 2;
    if ((v3 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
  int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
  int v3 = *(_DWORD *)(a1 + 156);
  int v4 = v7 + 1;
  if ((v3 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_14:
  unsigned int v10 = v4 + 9;
  if ((v3 & 4) == 0) {
    unsigned int v10 = v4;
  }
  if ((v3 & 8) != 0) {
    v10 += 9;
  }
  if ((v3 & 0x10) != 0) {
    v10 += 9;
  }
  if ((v3 & 0x20) != 0) {
    v10 += 9;
  }
  if ((v3 & 0x40) != 0) {
    uint64_t v5 = v10 + 9;
  }
  else {
    uint64_t v5 = v10;
  }
  if ((v3 & 0x80) != 0)
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
    if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 156);
    }
    else
    {
      int v12 = 2;
    }
    uint64_t v5 = (v12 + v5);
  }
LABEL_30:
  if ((v3 & 0xFF00) != 0)
  {
    unsigned int v13 = v5 + 9;
    if ((v3 & 0x100) == 0) {
      unsigned int v13 = v5;
    }
    if ((v3 & 0x200) != 0) {
      v13 += 9;
    }
    if ((v3 & 0x400) != 0) {
      v13 += 9;
    }
    if ((v3 & 0x800) != 0) {
      v13 += 9;
    }
    if ((v3 & 0x1000) != 0) {
      v13 += 9;
    }
    if ((v3 & 0x2000) != 0) {
      v13 += 3;
    }
    if ((v3 & 0x4000) != 0) {
      uint64_t v5 = v13 + 10;
    }
    else {
      uint64_t v5 = v13;
    }
    if ((v3 & 0x8000) != 0)
    {
      int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 120);
      if (v14 >= 0x80)
      {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2)
            + 2;
        int v3 = *(_DWORD *)(a1 + 156);
      }
      else
      {
        int v15 = 3;
      }
      uint64_t v5 = (v15 + v5);
    }
  }
  if ((v3 & 0xFF0000) != 0)
  {
    if ((v3 & 0x10000) != 0)
    {
      uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 124);
      if (v16 >= 0x80)
      {
        int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2)
            + 2;
        int v3 = *(_DWORD *)(a1 + 156);
      }
      else
      {
        int v17 = 3;
      }
      LODWORD(v5) = v17 + v5;
    }
    if ((v3 & 0x20000) != 0)
    {
      uint64_t v18 = *(_DWORD **)(a1 + 128);
      if (!v18) {
        uint64_t v18 = *(_DWORD **)(qword_10047F0A0 + 128);
      }
      int v19 = v18[6];
      int v20 = 2 * (v19 & 1);
      if ((v19 & 2) != 0) {
        v20 += 2;
      }
      if ((v19 & 4) != 0) {
        v20 += 2;
      }
      if (v18[6]) {
        LODWORD(v21) = v20;
      }
      else {
        LODWORD(v21) = 0;
      }
      uint64_t v22 = (void *)*((void *)v18 + 1);
      if (!v22 || *v22 == v22[1])
      {
        v18[5] = v21;
        int v23 = 1;
      }
      else
      {
        uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v18 + 2), a2)+ v21);
        v18[5] = v21;
        if (v21 >= 0x80) {
          int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2);
        }
        else {
          int v23 = 1;
        }
      }
      LODWORD(v5) = v5 + v21 + v23 + 2;
      int v3 = *(_DWORD *)(a1 + 156);
    }
    unsigned int v24 = v5 + 9;
    if ((v3 & 0x40000) == 0) {
      unsigned int v24 = v5;
    }
    if ((v3 & 0x80000) != 0) {
      uint64_t v5 = v24 + 9;
    }
    else {
      uint64_t v5 = v24;
    }
  }
  uint64_t v25 = *(void **)(a1 + 8);
  if (v25 && *v25 != v25[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v5;
  }
  *(_DWORD *)(a1 + 152) = v5;
  return v5;
}

uint64_t sub_1001D8C20(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001D6C5C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001D8D00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D8D14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D8D28(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001D8DB4()
{
  return 1;
}

uint64_t sub_1001D8DBC()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DE58;
}

void sub_1001D8E4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D8E60(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
    LOBYTE(v4) = *(unsigned char *)(a2 + 52);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 52);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 52) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047F0A8 + 16);
    }
    sub_1001D4144(v5, v6);
    int v4 = *(_DWORD *)(a2 + 52);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 52) |= 2u;
    *(void *)(a1 + 24) = v7;
    int v4 = *(_DWORD *)(a2 + 52);
    if ((v4 & 4) == 0)
    {
LABEL_12:
      if ((v4 & 8) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_20;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v8 = *(const std::string **)(a2 + 32);
  *(_DWORD *)(a1 + 52) |= 4u;
  int v9 = *(std::string **)(a1 + 32);
  if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v9, v8);
  if ((*(_DWORD *)(a2 + 52) & 8) != 0)
  {
LABEL_20:
    *(_DWORD *)(a1 + 52) |= 8u;
    uint64_t v10 = *(void *)(a1 + 40);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 40);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_10047F0A8 + 40);
    }
    sub_1001D6C5C(v10, v11);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001D9140()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001D9168()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001D9190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D91A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D91B8(void *a1)
{
  *a1 = off_10045F440;
  uint64_t v2 = a1[4];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if ((void *)qword_10047F0A8 != a1)
  {
    uint64_t v4 = a1[2];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = a1[5];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001D92BC(void *a1)
{
  sub_1001D91B8(a1);

  operator delete();
}

uint64_t sub_1001D92F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_1001D92FC()
{
}

void sub_1001D936C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001D9394(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 52);
  if (!(_BYTE)v2) {
    goto LABEL_12;
  }
  if (*(unsigned char *)(this + 52))
  {
    this = *(void *)(this + 16);
    if (this)
    {
      this = sub_1001D4870(this);
      int v2 = *(_DWORD *)(v1 + 52);
    }
  }
  *(void *)(v1 + 24) = 0;
  if ((v2 & 4) != 0)
  {
    uint64_t v3 = *(void *)(v1 + 32);
    if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)uint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
        if ((*(unsigned char *)(v1 + 52) & 8) == 0) {
          goto LABEL_12;
        }
        goto LABEL_10;
      }
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  if ((*(unsigned char *)(v1 + 52) & 8) == 0) {
    goto LABEL_12;
  }
LABEL_10:
  this = *(void *)(v1 + 40);
  if (this) {
    this = sub_1001D7278(this);
  }
LABEL_12:
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 11) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_1001D9454(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        v34[0] = 0;
        uint64_t v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v34))return 0; {
        }
          }
        else
        {
          v34[0] = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34[0]);
        if (!sub_1001D4AA4(v10, this, v27, v28) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v29 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v29, 1);
        int v30 = v29 - 1;
        if (v30 < 0 == v22) {
          *((_DWORD *)this + 14) = v30;
        }
        uint64_t v31 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 != 17) {
          continue;
        }
        *((void *)this + 1) = v31 + 1;
        *(void *)uint64_t v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v34) & 1) == 0)return 0; {
LABEL_53:
        }
        *(void *)(a1 + 24) = *(void *)v34;
        int v32 = *(_DWORD *)(a1 + 52) | 2;
        *(_DWORD *)(a1 + 52) = v32;
        char v33 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v33 >= *((void *)this + 2) || *v33 != 26) {
          continue;
        }
        *((void *)this + 1) = v33 + 1;
        *(_DWORD *)(a1 + 52) = v32 | 4;
        if (*(_UNKNOWN **)(a1 + 32) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_20:
        }
          operator new();
LABEL_21:
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unsigned int v13 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 34) {
          continue;
        }
        *((void *)this + 1) = v13 + 1;
LABEL_26:
        *(_DWORD *)(a1 + 52) |= 8u;
        uint64_t v14 = *(void *)(a1 + 40);
        if (!v14) {
          operator new();
        }
        v34[0] = 0;
        int v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v34))return 0; {
        }
          }
        else
        {
          v34[0] = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v16 = *((_DWORD *)this + 14);
        int v17 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0;
        }
        int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34[0]);
        if (!sub_1001D7390(v14, this, v19, v20) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
        int v21 = *((_DWORD *)this + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)this + 14) = v23;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_31;
        }
        *(void *)uint64_t v34 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v34) & 1) == 0)return 0; {
        goto LABEL_53;
        }
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 52) |= 4u;
        if (*(_UNKNOWN **)(a1 + 32) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          goto LABEL_20;
        }
        goto LABEL_21;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_26;
        }
        goto LABEL_31;
      default:
        int v9 = TagFallback & 7;
LABEL_31:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

void sub_1001D9974()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001D999C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001D99D4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 52);
      if ((v6 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047F0A8 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 52);
      if ((v6 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  if ((*(_DWORD *)(v5 + 52) & 8) == 0)
  {
LABEL_5:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_17;
  }
LABEL_13:
  uint64_t v11 = *(void *)(v5 + 40);
  if (v11)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v11, a2, a4);
    int v12 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v12;
    if (!v12) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(qword_10047F0A8 + 40), a2, a4);
    unsigned int v13 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v13;
    if (!v13) {
      return result;
    }
  }
LABEL_17:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001D9AF8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 13);
  if (v6)
  {
    uint64_t v10 = (unsigned int *)*((void *)this + 2);
    if (v10)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v11 = a2 + 1;
      int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[22];
      if (v12 <= 0x7F) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v10 = *(unsigned int **)(qword_10047F0A8 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v11 = a2 + 1;
      int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[22];
      if (v12 <= 0x7F)
      {
LABEL_9:
        *((unsigned char *)v4 + 1) = (_BYTE)v12;
        uint64_t v4 = sub_1001D5900((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3, a4);
        int v6 = *((_DWORD *)this + 13);
        if ((v6 & 2) != 0) {
          goto LABEL_13;
        }
LABEL_3:
        if ((v6 & 4) == 0) {
          goto LABEL_4;
        }
        goto LABEL_14;
      }
    }
    unsigned int v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v11, a3);
    uint64_t v4 = sub_1001D5900((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v13, v14, v15);
    int v6 = *((_DWORD *)this + 13);
    if ((v6 & 2) != 0) {
      goto LABEL_13;
    }
    goto LABEL_3;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_13:
  uint64_t v16 = *((void *)this + 3);
  *(unsigned char *)uint64_t v4 = 17;
  *(void *)((char *)v4 + 1) = v16;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 13);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_14:
  uint64_t v17 = *((void *)this + 4);
  *(unsigned char *)uint64_t v4 = 26;
  if (*(char *)(v17 + 23) < 0)
  {
    int v18 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v17 + 8);
    if (v18 <= 0x7F) {
      goto LABEL_16;
    }
  }
  else
  {
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v17 + 23);
    if (*(unsigned __int8 *)(v17 + 23) <= 0x7Fu)
    {
LABEL_16:
      *((unsigned char *)v4 + 1) = (_BYTE)v18;
      int v19 = v4 + 2;
      goto LABEL_19;
    }
  }
  int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)v4 + 1, a3);
LABEL_19:
  int v20 = *(char *)(v17 + 23);
  if (v20 >= 0) {
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17;
  }
  else {
    int v21 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v17;
  }
  if (v20 >= 0) {
    BOOL v22 = (const void *)*(unsigned __int8 *)(v17 + 23);
  }
  else {
    BOOL v22 = (const void *)*(unsigned int *)(v17 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v21, v22, v19, a4);
  if ((*((_DWORD *)this + 13) & 8) == 0)
  {
LABEL_5:
    int v9 = (void *)*((void *)this + 1);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return v4;
    }
    goto LABEL_32;
  }
LABEL_26:
  int v23 = (unsigned int *)*((void *)this + 5);
  if (v23)
  {
    *(unsigned char *)uint64_t v4 = 34;
    unsigned int v24 = v4 + 1;
    int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23[38];
    if (v25 <= 0x7F) {
      goto LABEL_28;
    }
  }
  else
  {
    int v23 = *(unsigned int **)(qword_10047F0A8 + 40);
    *(unsigned char *)uint64_t v4 = 34;
    unsigned int v24 = v4 + 1;
    int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23[38];
    if (v25 <= 0x7F)
    {
LABEL_28:
      *((unsigned char *)v4 + 1) = (_BYTE)v25;
      uint64_t v4 = sub_1001D8254((wireless_diagnostics::google::protobuf::internal::WireFormat *)v23, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3);
      int v26 = (void *)*((void *)this + 1);
      uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      uint64_t v7 = v26;
      if (!v26) {
        return v4;
      }
      goto LABEL_32;
    }
  }
  uint64_t v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, v24, a3);
  uint64_t v4 = sub_1001D8254((wireless_diagnostics::google::protobuf::internal::WireFormat *)v23, v27, v28);
  int v29 = (void *)*((void *)this + 1);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v7 = v29;
  if (!v29) {
    return v4;
  }
LABEL_32:
  if (*v7 == v7[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, v4, a3);
}

uint64_t sub_1001D9D34(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v6 = *(void **)(a1 + 8);
    if (!v6) {
      goto LABEL_30;
    }
    goto LABEL_37;
  }
  if ((*(unsigned char *)(a1 + 52) & 1) == 0)
  {
    if ((*(unsigned char *)(a1 + 52) & 2) != 0) {
      uint64_t v4 = 9;
    }
    else {
      uint64_t v4 = 0;
    }
    if ((*(unsigned char *)(a1 + 52) & 4) == 0) {
      goto LABEL_28;
    }
LABEL_19:
    uint64_t v10 = *(void *)(a1 + 32);
    int v11 = *(unsigned __int8 *)(v10 + 23);
    char v12 = v11;
    uint64_t v13 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      unint64_t v14 = *(unsigned __int8 *)(v10 + 23);
    }
    else {
      unint64_t v14 = v13;
    }
    if (v14 >= 0x80)
    {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14, a2);
      int v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v13 = *(void *)(v10 + 8);
      int v3 = *(_DWORD *)(a1 + 52);
      char v12 = *(unsigned char *)(v10 + 23);
    }
    else
    {
      int v15 = 1;
    }
    if (v12 < 0) {
      int v11 = v13;
    }
    uint64_t v4 = (v4 + v15 + v11 + 1);
    goto LABEL_28;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001D5DBC(v7, a2);
    if (v8 < 0x80)
    {
LABEL_12:
      int v9 = 1;
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001D5DBC(*(void *)(qword_10047F0A8 + 16), a2);
    if (v8 < 0x80) {
      goto LABEL_12;
    }
  }
  int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
LABEL_15:
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 2) != 0) {
    uint64_t v4 = (v8 + v9 + 10);
  }
  else {
    uint64_t v4 = (v8 + v9 + 1);
  }
  if ((v3 & 4) != 0) {
    goto LABEL_19;
  }
LABEL_28:
  if ((v3 & 8) != 0)
  {
    uint64_t v17 = *(void *)(a1 + 40);
    if (v17)
    {
      int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001D8994(v17, a2);
      if (v18 < 0x80)
      {
LABEL_33:
        int v19 = 1;
        goto LABEL_36;
      }
    }
    else
    {
      int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001D8994(*(void *)(qword_10047F0A8 + 40), a2);
      if (v18 < 0x80) {
        goto LABEL_33;
      }
    }
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
LABEL_36:
    uint64_t v4 = (v4 + v18 + v19 + 1);
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v6 = *(void **)(a1 + 8);
    if (!v6) {
      goto LABEL_30;
    }
    goto LABEL_37;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v6 = *(void **)(a1 + 8);
  if (!v6)
  {
LABEL_30:
    *(_DWORD *)(a1 + 48) = v4;
    return v4;
  }
LABEL_37:
  if (*v6 == v6[1]) {
    goto LABEL_30;
  }
  uint64_t v20 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
      + v4;
  *(_DWORD *)(a1 + 48) = v20;
  return v20;
}

uint64_t sub_1001D9EE8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001D8E60((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001D9FC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001D9FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D9FF0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001DA07C(uint64_t a1)
{
  return *(_DWORD *)(a1 + 52) & 1;
}

uint64_t sub_1001DA088()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DE68;
}

void sub_1001DA118(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001DA12C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 52) = a2;
  return result;
}

void sub_1001DA134()
{
}

void sub_1001DA1A0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001DA1C8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_31;
        }
        *(void *)int v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v19) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v19;
        }
        *(_DWORD *)(a1 + 56) |= 1u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_31;
        }
LABEL_15:
        *(void *)int v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v19) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v19;
        }
        *(_DWORD *)(a1 + 56) |= 2u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 25) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_20:
        *(void *)int v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v19) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v19;
        }
        *(_DWORD *)(a1 + 56) |= 4u;
        char v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 33) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_25:
        *(void *)int v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v19) & 1) == 0)return 0; {
        *(void *)(a1 + 40) = *(void *)v19;
        }
        *(_DWORD *)(a1 + 56) |= 8u;
        unint64_t v14 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 != 40) {
          continue;
        }
        int v15 = v14 + 1;
        *((void *)this + 1) = v15;
        v19[0] = 0;
        if ((unint64_t)v15 >= v13) {
          goto LABEL_37;
        }
LABEL_35:
        if (*v15 < 0)
        {
LABEL_37:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v19);
          if (!result) {
            return result;
          }
          unsigned int v16 = v19[0];
          uint64_t v17 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
        }
        else
        {
          unsigned int v16 = *v15;
          uint64_t v17 = (unsigned __int8 *)(v15 + 1);
          *((void *)this + 1) = v17;
        }
        *(unsigned char *)(a1 + 48) = v16 != 0;
        *(_DWORD *)(a1 + 56) |= 0x10u;
        if (v17 != (unsigned __int8 *)v13 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_20;
        }
        goto LABEL_31;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_25;
        }
        goto LABEL_31;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_31;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        v19[0] = 0;
        if ((unint64_t)v15 < v13) {
          goto LABEL_35;
        }
        goto LABEL_37;
      default:
        int v9 = TagFallback & 7;
LABEL_31:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1001DA4D0(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 40), a3);
  if ((*(_DWORD *)(v5 + 56) & 0x10) == 0)
  {
LABEL_6:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 48), (BOOL)a2, a4);
  uint64_t v10 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_13:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_1001DA5C0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 56);
  if (v3)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v7;
    a2 += 9;
    int v3 = *(_DWORD *)(a1 + 56);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(a1 + 24);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v8;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t v9 = *(void *)(a1 + 32);
  *(unsigned char *)a2 = 25;
  *(void *)(a2 + 1) = v9;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    char v11 = *(unsigned char *)(a1 + 48);
    *(unsigned char *)a2 = 40;
    *(unsigned char *)(a2 + 1) = v11;
    a2 += 2;
    char v12 = *(void **)(a1 + 8);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v5 = v12;
    if (!v12) {
      return a2;
    }
    goto LABEL_13;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a1 + 40);
  *(unsigned char *)a2 = 33;
  *(void *)(a2 + 1) = v10;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 56) & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  int v6 = *(void **)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_13:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_1001DA768(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 56);
  if (*(unsigned char *)(a1 + 56))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      uint64_t v5 = v4 + 2;
    }
    else {
      uint64_t v5 = v4;
    }
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v5 = 0;
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7)
    {
LABEL_12:
      *(_DWORD *)(a1 + 52) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1]) {
    goto LABEL_12;
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
     + v5;
  *(_DWORD *)(a1 + 52) = v9;
  return v9;
}

uint64_t sub_1001DA818(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10009E0CC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001DA8F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001DA90C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001DA920(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001DA9AC()
{
  return 1;
}

uint64_t sub_1001DA9B4()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DE78;
}

void sub_1001DAA44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1001DAA58(uint64_t a1)
{
  *(void *)a1 = off_10045F5A0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001DAAAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_1001DAAB4()
{
}

void sub_1001DAB18()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001DAB40(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v9 = TagFallback & 7;
        if (v9 == 1)
        {
          unint64_t v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
            return 0;
          }
          goto LABEL_17;
        }
      }
      else
      {
        int v9 = TagFallback & 7;
      }
LABEL_22:
      if (v9 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
    }
      }
    int v9 = TagFallback & 7;
    if (v9 != 1) {
      goto LABEL_22;
    }
    unint64_t v12 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
      return 0;
    }
    *(void *)(a1 + 16) = v12;
    *(_DWORD *)(a1 + 36) |= 1u;
    uint64_t v10 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v10 < *((void *)this + 2) && *v10 == 17)
    {
      *((void *)this + 1) = v10 + 1;
      unint64_t v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v12) & 1) == 0) {
        return 0;
      }
LABEL_17:
      *(void *)(a1 + 24) = v12;
      *(_DWORD *)(a1 + 36) |= 2u;
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)this + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)this + 36) = 1;
  return result;
}

uint64_t sub_1001DACEC(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 36);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 2) == 0)
    {
LABEL_3:
      uint64_t v8 = *(void **)(v4 + 8);
      uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      unsigned int v6 = v8;
      if (!v8) {
        return result;
      }
      goto LABEL_7;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  int v9 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_7:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_1001DAD88(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = *(void *)(a1 + 24);
    *(unsigned char *)a2 = 17;
    *(void *)(a2 + 1) = v8;
    a2 += 9;
    int v9 = *(void **)(a1 + 8);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v5 = v9;
    if (!v9) {
      return a2;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  *(unsigned char *)a2 = 9;
  *(void *)(a2 + 1) = v7;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 36) & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  unsigned int v6 = *(void **)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_7:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_1001DAE60(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 36);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 36)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

uint64_t sub_1001DAEC8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001C903C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001DAFA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001DAFBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001DAFD0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001DB05C()
{
  return 1;
}

uint64_t sub_1001DB064()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DE88;
}

void sub_1001DB0F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1001DB108(uint64_t a1)
{
  *(void *)a1 = off_10045F650;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001DB15C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 44) = a2;
  return result;
}

void sub_1001DB164()
{
}

void sub_1001DB1D0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001DB1F8(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_23;
        }
        *(void *)uint64_t v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v17) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v17;
        }
        *(_DWORD *)(a1 + 48) |= 1u;
        char v11 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v11 >= v10 || *v11 != 16) {
          continue;
        }
        unint64_t v12 = v11 + 1;
        *((void *)this + 1) = v12;
        goto LABEL_16;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        unint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_16:
        v17[0] = 0;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v17);
          if (!result) {
            return result;
          }
          unsigned int v13 = v17[0];
          unint64_t v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v12;
          unint64_t v14 = v12 + 1;
          *((void *)this + 1) = v14;
        }
        *(unsigned char *)(a1 + 40) = v13 != 0;
        *(_DWORD *)(a1 + 48) |= 2u;
        if ((unint64_t)v14 >= v10 || *v14 != 25) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
        *(void *)uint64_t v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v17) & 1) == 0)return 0; {
LABEL_31:
        }
        *(void *)(a1 + 24) = *(void *)v17;
        *(_DWORD *)(a1 + 48) |= 4u;
        unsigned int v16 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 != 33) {
          continue;
        }
        *((void *)this + 1) = v16 + 1;
LABEL_34:
        *(void *)uint64_t v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v17) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v17;
        }
        *(_DWORD *)(a1 + 48) |= 8u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_23;
        }
        *(void *)uint64_t v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v17) & 1) == 0)return 0; {
        goto LABEL_31;
        }
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_23;
        }
        goto LABEL_34;
      default:
        int v9 = TagFallback & 7;
LABEL_23:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1001DB4A8(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 40), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 48) & 8) == 0)
  {
LABEL_5:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  unint64_t v10 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_11:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_1001DB57C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 48);
  if (v3)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v7;
    a2 += 9;
    int v3 = *(_DWORD *)(a1 + 48);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v8 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)a2 = 16;
  *(unsigned char *)(a2 + 1) = v8;
  a2 += 2;
  int v3 = *(_DWORD *)(a1 + 48);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t v10 = *(void *)(a1 + 32);
    *(unsigned char *)a2 = 33;
    *(void *)(a2 + 1) = v10;
    a2 += 9;
    char v11 = *(void **)(a1 + 8);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v5 = v11;
    if (!v11) {
      return a2;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t v9 = *(void *)(a1 + 24);
  *(unsigned char *)a2 = 25;
  *(void *)(a2 + 1) = v9;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 48) & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  int v6 = *(void **)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_11:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_1001DB6CC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 48);
  unsigned int v4 = (v3 << 31 >> 31) & 9 | v3 & 2;
  if ((v3 & 4) != 0) {
    v4 += 9;
  }
  if ((v3 & 8) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 48)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  char v8 = *(void **)(a1 + 8);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 44) = v5;
  return v5;
}

uint64_t sub_1001DB748(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10009DEAC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001DB828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001DB83C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001DB850(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001DB8DC()
{
  return 1;
}

uint64_t sub_1001DB8E4()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DE98;
}

void sub_1001DB974(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1001DB988(uint64_t a1)
{
  *(void *)a1 = off_10045F700;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001DB9DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 52) = a2;
  return result;
}

void sub_1001DB9E4()
{
}

void sub_1001DBA50()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001DBA78(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_29;
        }
        *(void *)int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v23;
        }
        *(_DWORD *)(a1 + 56) |= 1u;
        char v11 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v11 >= v10 || *v11 != 16) {
          continue;
        }
        unint64_t v12 = v11 + 1;
        *((void *)this + 1) = v12;
        goto LABEL_16;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unint64_t v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_16:
        v23[0] = 0;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v23);
          if (!result) {
            return result;
          }
          unsigned int v13 = v23[0];
          unint64_t v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v12;
          unint64_t v14 = v12 + 1;
          *((void *)this + 1) = v14;
        }
        *(unsigned char *)(a1 + 48) = v13 != 0;
        *(_DWORD *)(a1 + 56) |= 2u;
        if ((unint64_t)v14 >= v10 || *v14 != 25) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
        *(void *)int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0; {
LABEL_38:
        }
        *(void *)(a1 + 24) = *(void *)v23;
        *(_DWORD *)(a1 + 56) |= 4u;
        int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 33) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
        *(void *)int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0; {
LABEL_41:
        }
        *(void *)(a1 + 32) = *(void *)v23;
        *(_DWORD *)(a1 + 56) |= 8u;
        int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 41) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
        *(void *)int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0; {
LABEL_44:
        }
        *(void *)(a1 + 40) = *(void *)v23;
        *(_DWORD *)(a1 + 56) |= 0x10u;
        uint64_t v20 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v20 >= v15 || *v20 != 48) {
          continue;
        }
        unsigned int v16 = v20 + 1;
        *((void *)this + 1) = v16;
LABEL_47:
        v23[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v23);
          if (!result) {
            return result;
          }
          unsigned int v21 = v23[0];
          BOOL v22 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
        }
        else
        {
          unsigned int v21 = *v16;
          BOOL v22 = (unsigned __int8 *)(v16 + 1);
          *((void *)this + 1) = v22;
        }
        *(unsigned char *)(a1 + 49) = v21 != 0;
        *(_DWORD *)(a1 + 56) |= 0x20u;
        if (v22 != (unsigned __int8 *)v15 || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_29;
        }
        *(void *)int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0; {
        goto LABEL_38;
        }
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_29;
        }
        *(void *)int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0; {
        goto LABEL_41;
        }
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_29;
        }
        *(void *)int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v23) & 1) == 0)return 0; {
        goto LABEL_44;
        }
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        goto LABEL_47;
      default:
        int v9 = TagFallback & 7;
LABEL_29:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1001DBE34(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 48), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
  if ((*(_DWORD *)(v5 + 56) & 0x20) == 0)
  {
LABEL_7:
    int v9 = *(void **)(v5 + 8);
    char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 49), (BOOL)a2, a4);
  unint64_t v10 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_15:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_1001DBF40(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 56);
  if (v3)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v7;
    a2 += 9;
    int v3 = *(_DWORD *)(a1 + 56);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v8 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)a2 = 16;
  *(unsigned char *)(a2 + 1) = v8;
  a2 += 2;
  int v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v9 = *(void *)(a1 + 24);
  *(unsigned char *)a2 = 25;
  *(void *)(a2 + 1) = v9;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t v10 = *(void *)(a1 + 32);
  *(unsigned char *)a2 = 33;
  *(void *)(a2 + 1) = v10;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 56);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    char v12 = *(unsigned char *)(a1 + 49);
    *(unsigned char *)a2 = 48;
    *(unsigned char *)(a2 + 1) = v12;
    a2 += 2;
    unsigned int v13 = *(void **)(a1 + 8);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v5 = v13;
    if (!v13) {
      return a2;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t v11 = *(void *)(a1 + 40);
  *(unsigned char *)a2 = 41;
  *(void *)(a2 + 1) = v11;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 56) & 0x20) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  int v6 = *(void **)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_15:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_1001DC108(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 56);
  if (*(unsigned char *)(a1 + 56))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9 | v3 & 2;
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      uint64_t v5 = v4 + 2;
    }
    else {
      uint64_t v5 = v4;
    }
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v5 = 0;
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7)
    {
LABEL_12:
      *(_DWORD *)(a1 + 52) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1]) {
    goto LABEL_12;
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
     + v5;
  *(_DWORD *)(a1 + 52) = v9;
  return v9;
}

uint64_t sub_1001DC1C0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10009DCA0((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001DC2A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001DC2B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001DC2C8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001DC354()
{
  return 1;
}

uint64_t sub_1001DC35C()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DEA8;
}

void sub_1001DC3EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1001DC400(uint64_t a1)
{
  *(void *)a1 = off_10045F7B0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001DC454(uint64_t result, int a2)
{
  *(_DWORD *)(result + 56) = a2;
  return result;
}

void sub_1001DC45C()
{
}

void sub_1001DC4C4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001DC4EC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (unint64_t *)(a1 + 16);
  uint64_t v7 = (unint64_t *)(a1 + 24);
  char v8 = (unint64_t *)(a1 + 32);
  uint64_t v9 = (unint64_t *)(a1 + 40);
  uint64_t v10 = (unint64_t *)(a1 + 48);
  unsigned int v11 = a1 + 8;
  while (2)
  {
    char v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v16 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v15 = *((void *)this + 2);
          *(_DWORD *)(a1 + 60) |= 1u;
          if ((unint64_t)v17 >= v15) {
            continue;
          }
        }
        else
        {
          *int v6 = *v16;
          uint64_t v17 = v16 + 1;
          *((void *)this + 1) = v17;
          *(_DWORD *)(a1 + 60) |= 1u;
          if ((unint64_t)v17 >= v15) {
            continue;
          }
        }
        if (*v17 != 16) {
          continue;
        }
        int v18 = v17 + 1;
        *((void *)this + 1) = v18;
        if ((unint64_t)v18 >= v15) {
          goto LABEL_36;
        }
        goto LABEL_33;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v18 >= v15) {
          goto LABEL_36;
        }
LABEL_33:
        if ((*v18 & 0x80000000) == 0)
        {
          *uint64_t v7 = *v18;
          BOOL v22 = v18 + 1;
          *((void *)this + 1) = v22;
          *(_DWORD *)(a1 + 60) |= 2u;
          if ((unint64_t)v22 < v15) {
            goto LABEL_38;
          }
          continue;
        }
LABEL_36:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v7);
        if (!result) {
          return result;
        }
        BOOL v22 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        *(_DWORD *)(a1 + 60) |= 2u;
        if ((unint64_t)v22 >= v15) {
          continue;
        }
LABEL_38:
        if (*v22 != 24) {
          continue;
        }
        int v19 = v22 + 1;
        *((void *)this + 1) = v19;
        if ((unint64_t)v19 >= v15) {
          goto LABEL_43;
        }
LABEL_40:
        if ((*v19 & 0x80000000) == 0)
        {
          *char v8 = *v19;
          int v23 = v19 + 1;
          *((void *)this + 1) = v23;
          *(_DWORD *)(a1 + 60) |= 4u;
          if ((unint64_t)v23 < v15) {
            goto LABEL_45;
          }
          continue;
        }
LABEL_43:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v8);
        if (!result) {
          return result;
        }
        int v23 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        *(_DWORD *)(a1 + 60) |= 4u;
        if ((unint64_t)v23 >= v15) {
          continue;
        }
LABEL_45:
        if (*v23 != 32) {
          continue;
        }
        uint64_t v20 = v23 + 1;
        *((void *)this + 1) = v20;
        if ((unint64_t)v20 >= v15) {
          goto LABEL_50;
        }
LABEL_47:
        if ((*v20 & 0x80000000) == 0)
        {
          unint64_t *v9 = *v20;
          unsigned int v24 = v20 + 1;
          *((void *)this + 1) = v24;
          *(_DWORD *)(a1 + 60) |= 8u;
          if ((unint64_t)v24 < v15) {
            goto LABEL_52;
          }
          continue;
        }
LABEL_50:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v9);
        if (!result) {
          return result;
        }
        unsigned int v24 = (unsigned char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        *(_DWORD *)(a1 + 60) |= 8u;
        if ((unint64_t)v24 >= v15) {
          continue;
        }
LABEL_52:
        if (*v24 != 40) {
          continue;
        }
        unsigned int v21 = v24 + 1;
        *((void *)this + 1) = v21;
        if ((unint64_t)v21 >= v15) {
          goto LABEL_57;
        }
LABEL_54:
        if ((*v21 & 0x80000000) == 0)
        {
          *uint64_t v10 = *v21;
          int v25 = (unsigned __int8 *)(v21 + 1);
          *((void *)this + 1) = v25;
          *(_DWORD *)(a1 + 60) |= 0x10u;
          if (v25 == (unsigned __int8 *)v15) {
            goto LABEL_59;
          }
          continue;
        }
LABEL_57:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v10);
        if (!result) {
          return result;
        }
        uint64_t v27 = *((void *)this + 1);
        uint64_t v26 = *((void *)this + 2);
        *(_DWORD *)(a1 + 60) |= 0x10u;
        if (v27 != v26) {
          continue;
        }
LABEL_59:
        if (!*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v19 >= v15) {
          goto LABEL_43;
        }
        goto LABEL_40;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v20 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v20 >= v15) {
          goto LABEL_50;
        }
        goto LABEL_47;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unsigned int v21 = (char *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v21 >= v15) {
          goto LABEL_57;
        }
        goto LABEL_54;
      default:
        int v14 = TagFallback & 7;
LABEL_24:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v11, a4))continue; {
        return 0;
        }
    }
  }
}

uint64_t sub_1001DC8E0(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 60);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(result + 16), (unint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 24), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 32), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(v5 + 40), (unint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 60) & 0x10) == 0)
  {
LABEL_6:
    uint64_t v9 = *(void **)(v5 + 8);
    char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(v5 + 48), (unint64_t)a2, a4);
  uint64_t v10 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_13:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001DC9D0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 15);
  if (v4)
  {
    char v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 2);
    *(unsigned char *)a2 = 8;
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v8, (unint64_t)a2 + 1, a3);
    int v4 = *((_DWORD *)this + 15);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 3);
  *(unsigned char *)a2 = 16;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v9, (unint64_t)a2 + 1, a3);
  int v4 = *((_DWORD *)this + 15);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 4);
  *(unsigned char *)a2 = 24;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v10, (unint64_t)a2 + 1, a3);
  int v4 = *((_DWORD *)this + 15);
  if ((v4 & 8) == 0)
  {
LABEL_5:
    if ((v4 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  unsigned int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 5);
  *(unsigned char *)a2 = 32;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v11, (unint64_t)a2 + 1, a3);
  if ((*((_DWORD *)this + 15) & 0x10) == 0)
  {
LABEL_6:
    uint64_t v7 = (void *)*((void *)this + 1);
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = v7;
    if (!v7) {
      return a2;
    }
    goto LABEL_13;
  }
LABEL_12:
  char v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 6);
  *(unsigned char *)a2 = 40;
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, (unint64_t)a2 + 1, a3);
  unsigned int v13 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v13;
  if (!v13) {
    return a2;
  }
LABEL_13:
  if (*v5 == v5[1]) {
    return a2;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, a2, a3);
}

uint64_t sub_1001DCAD0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 60);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v6 = *(void **)(a1 + 8);
    if (!v6) {
      goto LABEL_13;
    }
    goto LABEL_17;
  }
  if (*(unsigned char *)(a1 + 60))
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 16), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 60);
    if ((v3 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  uint64_t v4 = 0;
  if ((*(unsigned char *)(a1 + 60) & 2) != 0)
  {
LABEL_8:
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 60);
  }
LABEL_9:
  if ((v3 & 4) != 0)
  {
    uint64_t v4 = v4
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 32), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 60);
    if ((v3 & 8) == 0)
    {
LABEL_11:
      if ((v3 & 0x10) == 0) {
        goto LABEL_12;
      }
LABEL_16:
      uint64_t v4 = v4
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 48), (unint64_t)a2)+ 1;
      uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v6 = *(void **)(a1 + 8);
      if (!v6) {
        goto LABEL_13;
      }
      goto LABEL_17;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_11;
  }
  uint64_t v4 = v4
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 40), (unint64_t)a2)+ 1;
  if ((*(_DWORD *)(a1 + 60) & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_12:
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v6 = *(void **)(a1 + 8);
  if (!v6)
  {
LABEL_13:
    *(_DWORD *)(a1 + 56) = v4;
    return v4;
  }
LABEL_17:
  if (*v6 == v6[1]) {
    goto LABEL_13;
  }
  uint64_t v8 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
     + v4;
  *(_DWORD *)(a1 + 56) = v8;
  return v8;
}

uint64_t sub_1001DCBD8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001C911C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001DCCB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001DCCCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001DCCE0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001DCD6C()
{
  return 1;
}

uint64_t sub_1001DCD74()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DEB8;
}

void sub_1001DCE04(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001DCE18(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 36))
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 36) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
  {
    goto LABEL_6;
  }
  char v8 = *(unsigned char *)(a2 + 24);
  *(_DWORD *)(a1 + 36) |= 2u;
  *(unsigned char *)(a1 + 24) = v8;
  int v4 = *(_DWORD *)(a2 + 36);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_14:
  char v9 = *(unsigned char *)(a2 + 25);
  *(_DWORD *)(a1 + 36) |= 4u;
  *(unsigned char *)(a1 + 25) = v9;
  int v4 = *(_DWORD *)(a2 + 36);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
LABEL_16:
    char v11 = *(unsigned char *)(a2 + 27);
    *(_DWORD *)(a1 + 36) |= 0x10u;
    *(unsigned char *)(a1 + 27) = v11;
    if ((*(_DWORD *)(a2 + 36) & 0x20) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_10;
  }
LABEL_15:
  char v10 = *(unsigned char *)(a2 + 26);
  *(_DWORD *)(a1 + 36) |= 8u;
  *(unsigned char *)(a1 + 26) = v10;
  int v4 = *(_DWORD *)(a2 + 36);
  if ((v4 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_9:
  if ((v4 & 0x20) != 0)
  {
LABEL_10:
    int v5 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 36) |= 0x20u;
    *(_DWORD *)(a1 + 28) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001DCF58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001DCF6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001DCF80(uint64_t a1)
{
  *(void *)a1 = off_10045F860;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001DCFD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_1001DCFDC()
{
}

void sub_1001DD040()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001DD068(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 36))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001DD088(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_29;
        }
        *(void *)int v25 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v25) & 1) == 0)return 0; {
        *(void *)(a1 + 16) = *(void *)v25;
        }
        *(_DWORD *)(a1 + 36) |= 1u;
        char v11 = (unsigned char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v11 >= v10 || *v11 != 16) {
          continue;
        }
        char v12 = v11 + 1;
        *((void *)this + 1) = v12;
        goto LABEL_16;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        char v12 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
LABEL_16:
        v25[0] = 0;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v25);
          if (!result) {
            return result;
          }
          unsigned int v13 = v25[0];
          int v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v13 = *v12;
          int v14 = v12 + 1;
          *((void *)this + 1) = v14;
        }
        *(unsigned char *)(a1 + 24) = v13 != 0;
        *(_DWORD *)(a1 + 36) |= 2u;
        if ((unint64_t)v14 >= v10 || *v14 != 24) {
          continue;
        }
        unint64_t v15 = v14 + 1;
        *((void *)this + 1) = v15;
        v25[0] = 0;
        if ((unint64_t)v15 >= v10) {
          goto LABEL_39;
        }
LABEL_37:
        if (*v15 < 0)
        {
LABEL_39:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v25);
          if (!result) {
            return result;
          }
          unsigned int v19 = v25[0];
          uint64_t v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v19 = *v15;
          uint64_t v20 = v15 + 1;
          *((void *)this + 1) = v20;
        }
        *(unsigned char *)(a1 + 25) = v19 != 0;
        *(_DWORD *)(a1 + 36) |= 4u;
        if ((unint64_t)v20 >= v10 || *v20 != 32) {
          continue;
        }
        unsigned int v16 = v20 + 1;
        *((void *)this + 1) = v16;
        v25[0] = 0;
        if ((unint64_t)v16 >= v10) {
          goto LABEL_46;
        }
LABEL_44:
        if (*v16 < 0)
        {
LABEL_46:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v25);
          if (!result) {
            return result;
          }
          unsigned int v21 = v25[0];
          BOOL v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v21 = *v16;
          BOOL v22 = v16 + 1;
          *((void *)this + 1) = v22;
        }
        *(unsigned char *)(a1 + 26) = v21 != 0;
        *(_DWORD *)(a1 + 36) |= 8u;
        if ((unint64_t)v22 >= v10 || *v22 != 40) {
          continue;
        }
        uint64_t v17 = v22 + 1;
        *((void *)this + 1) = v17;
        v25[0] = 0;
        if ((unint64_t)v17 >= v10) {
          goto LABEL_53;
        }
LABEL_51:
        if (*v17 < 0)
        {
LABEL_53:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v25);
          if (!result) {
            return result;
          }
          unsigned int v23 = v25[0];
          unsigned int v24 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v23 = *v17;
          unsigned int v24 = v17 + 1;
          *((void *)this + 1) = v24;
        }
        *(unsigned char *)(a1 + 27) = v23 != 0;
        *(_DWORD *)(a1 + 36) |= 0x10u;
        if ((unint64_t)v24 >= v10 || *v24 != 53) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
LABEL_58:
        v25[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, v25) & 1) == 0) {
          return 0;
        }
        *(_DWORD *)(a1 + 28) = v25[0];
        *(_DWORD *)(a1 + 36) |= 0x20u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        v25[0] = 0;
        if ((unint64_t)v15 >= v10) {
          goto LABEL_39;
        }
        goto LABEL_37;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        unsigned int v16 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        v25[0] = 0;
        if ((unint64_t)v16 >= v10) {
          goto LABEL_46;
        }
        goto LABEL_44;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        v25[0] = 0;
        if ((unint64_t)v17 >= v10) {
          goto LABEL_53;
        }
        goto LABEL_51;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_29;
        }
        goto LABEL_58;
      default:
        int v9 = TagFallback & 7;
LABEL_29:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_1001DD478(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 24), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 25), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 26), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 27), (BOOL)a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 0x20) == 0)
  {
LABEL_7:
    int v9 = *(void **)(v5 + 8);
    char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(float *)(v5 + 28), a3);
  unint64_t v10 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_15:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_1001DD584(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 36);
  if (v3)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v7;
    a2 += 9;
    int v3 = *(_DWORD *)(a1 + 36);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)a2 = 16;
  *(unsigned char *)(a2 + 1) = v8;
  a2 += 2;
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  char v9 = *(unsigned char *)(a1 + 25);
  *(unsigned char *)a2 = 24;
  *(unsigned char *)(a2 + 1) = v9;
  a2 += 2;
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  char v10 = *(unsigned char *)(a1 + 26);
  *(unsigned char *)a2 = 32;
  *(unsigned char *)(a2 + 1) = v10;
  a2 += 2;
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    int v12 = *(_DWORD *)(a1 + 28);
    *(unsigned char *)a2 = 53;
    *(_DWORD *)(a2 + 1) = v12;
    a2 += 5;
    unsigned int v13 = *(void **)(a1 + 8);
    int v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v5 = v13;
    if (!v13) {
      return a2;
    }
    goto LABEL_15;
  }
LABEL_13:
  char v11 = *(unsigned char *)(a1 + 27);
  *(unsigned char *)a2 = 40;
  *(unsigned char *)(a2 + 1) = v11;
  a2 += 2;
  if ((*(_DWORD *)(a1 + 36) & 0x20) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  int v6 = *(void **)(a1 + 8);
  int v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_15:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_1001DD6BC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 36);
  if (*(unsigned char *)(a1 + 36))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9 | v3 & 2;
    if ((v3 & 4) != 0) {
      v4 += 2;
    }
    if ((v3 & 8) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 2;
    }
    if ((v3 & 0x20) != 0) {
      uint64_t v5 = v4 + 5;
    }
    else {
      uint64_t v5 = v4;
    }
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v5 = 0;
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7)
    {
LABEL_12:
      *(_DWORD *)(a1 + 32) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1]) {
    goto LABEL_12;
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
     + v5;
  *(_DWORD *)(a1 + 32) = v9;
  return v9;
}

uint64_t sub_1001DD774(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001DCE18((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001DD854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001DD868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001DD87C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001DD908()
{
  return 1;
}

uint64_t sub_1001DD910()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DEC8;
}

void sub_1001DD9A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1001DD9B4(void *a1)
{
  *a1 = off_10045F910;
  if ((void *)qword_10047F0E0 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1001DDA48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_1001DDA50()
{
}

void sub_1001DDABC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001DDAE4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 < *((void *)this + 2) && (*v7 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unsigned int v50 = 0;
        char v11 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!result) {
            return result;
          }
          unsigned int v12 = v50;
          unsigned int v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v12 = *v11;
          unsigned int v13 = v11 + 1;
          *((void *)this + 1) = v13;
        }
        *(unsigned char *)(a1 + 24) = v12 != 0;
        *(_DWORD *)(a1 + 44) |= 1u;
        if ((unint64_t)v13 >= v10 || *v13 != 16) {
          continue;
        }
        int v14 = v13 + 1;
        *((void *)this + 1) = v14;
        unsigned int v50 = 0;
        if ((unint64_t)v14 >= v10) {
          goto LABEL_47;
        }
LABEL_45:
        if (*v14 < 0)
        {
LABEL_47:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!result) {
            return result;
          }
          unsigned int v26 = v50;
          uint64_t v27 = (unsigned char *)*((void *)this + 1);
          unint64_t v10 = *((void *)this + 2);
        }
        else
        {
          unsigned int v26 = *v14;
          uint64_t v27 = v14 + 1;
          *((void *)this + 1) = v27;
        }
        *(unsigned char *)(a1 + 25) = v26 != 0;
        int v28 = *(_DWORD *)(a1 + 44) | 2;
        *(_DWORD *)(a1 + 44) = v28;
        if ((unint64_t)v27 >= v10 || *v27 != 26) {
          continue;
        }
        *((void *)this + 1) = v27 + 1;
        *(_DWORD *)(a1 + 44) = v28 | 4;
        uint64_t v15 = *(void *)(a1 + 16);
        if (!v15) {
LABEL_52:
        }
          operator new();
LABEL_18:
        unsigned int v50 = 0;
        unsigned int v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50))return 0; {
        }
          }
        else
        {
          unsigned int v50 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        int v29 = *((_DWORD *)this + 14);
        int v30 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0;
        }
        int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v50);
        if (!sub_1001DD088(v15, this, v32, v33) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
        int v34 = *((_DWORD *)this + 14);
        BOOL v35 = __OFSUB__(v34, 1);
        int v36 = v34 - 1;
        if (v36 < 0 == v35) {
          *((_DWORD *)this + 14) = v36;
        }
        char v37 = (unsigned char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v37 >= v17 || *v37 != 32) {
          continue;
        }
        int v18 = v37 + 1;
        *((void *)this + 1) = v18;
        unsigned int v50 = 0;
        if ((unint64_t)v18 >= v17) {
          goto LABEL_66;
        }
LABEL_64:
        if (*v18 < 0)
        {
LABEL_66:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!result) {
            return result;
          }
          unsigned int v38 = v50;
          uint64_t v39 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          unsigned int v38 = *v18;
          uint64_t v39 = v18 + 1;
          *((void *)this + 1) = v39;
        }
        *(unsigned char *)(a1 + 26) = v38 != 0;
        *(_DWORD *)(a1 + 44) |= 8u;
        if ((unint64_t)v39 >= v17 || *v39 != 40) {
          continue;
        }
        unsigned int v19 = v39 + 1;
        *((void *)this + 1) = v19;
LABEL_71:
        unsigned int v50 = 0;
        if ((unint64_t)v19 >= v17 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!result) {
            return result;
          }
          unsigned int v40 = v50;
          BOOL v41 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
        }
        else
        {
          unsigned int v40 = *v19;
          BOOL v41 = v19 + 1;
          *((void *)this + 1) = v41;
        }
        *(unsigned char *)(a1 + 27) = v40 != 0;
        *(_DWORD *)(a1 + 44) |= 0x10u;
        if ((unint64_t)v41 >= v17 || *v41 != 53) {
          continue;
        }
        *((void *)this + 1) = v41 + 1;
        unsigned int v50 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v50) & 1) == 0) {
          return 0;
        }
LABEL_79:
        *(_DWORD *)(a1 + 28) = v50;
        *(_DWORD *)(a1 + 44) |= 0x20u;
        int v42 = (unsigned char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        if ((unint64_t)v42 >= v20 || *v42 != 56) {
          continue;
        }
        unsigned int v21 = v42 + 1;
        *((void *)this + 1) = v21;
LABEL_82:
        unsigned int v50 = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!result) {
            return result;
          }
          unsigned int v43 = v50;
          unint64_t v44 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          unsigned int v43 = *v21;
          unint64_t v44 = v21 + 1;
          *((void *)this + 1) = v44;
        }
        *(unsigned char *)(a1 + 32) = v43 != 0;
        *(_DWORD *)(a1 + 44) |= 0x40u;
        if ((unint64_t)v44 >= v20 || *v44 != 64) {
          continue;
        }
        BOOL v22 = v44 + 1;
        *((void *)this + 1) = v22;
LABEL_90:
        unsigned int v50 = 0;
        if ((unint64_t)v22 >= v20 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
          if (!result) {
            return result;
          }
          unsigned int v45 = v50;
          unsigned int v46 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
        }
        else
        {
          unsigned int v45 = *v22;
          unsigned int v46 = v22 + 1;
          *((void *)this + 1) = v46;
        }
        *(unsigned char *)(a1 + 33) = v45 != 0;
        *(_DWORD *)(a1 + 44) |= 0x80u;
        if ((unint64_t)v46 >= v20 || *v46 != 77) {
          continue;
        }
        *((void *)this + 1) = v46 + 1;
        unsigned int v50 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v50) & 1) == 0) {
          return 0;
        }
LABEL_98:
        *(_DWORD *)(a1 + 36) = v50;
        *(_DWORD *)(a1 + 44) |= 0x100u;
        unsigned int v47 = (unsigned char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        if ((unint64_t)v47 < v23 && *v47 == 80)
        {
          unsigned int v24 = v47 + 1;
          *((void *)this + 1) = v24;
LABEL_101:
          unsigned int v50 = 0;
          if ((unint64_t)v24 >= v23 || *v24 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v50);
            if (!result) {
              return result;
            }
            unsigned int v48 = v50;
            unsigned int v49 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v23 = *((void *)this + 2);
          }
          else
          {
            unsigned int v48 = *v24;
            unsigned int v49 = (unsigned __int8 *)(v24 + 1);
            *((void *)this + 1) = v49;
          }
          *(unsigned char *)(a1 + 34) = v48 != 0;
          *(_DWORD *)(a1 + 44) |= 0x200u;
          if (v49 == (unsigned __int8 *)v23
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
        }
        continue;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v10 = *((void *)this + 2);
        unsigned int v50 = 0;
        if ((unint64_t)v14 >= v10) {
          goto LABEL_47;
        }
        goto LABEL_45;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 44) |= 4u;
        uint64_t v15 = *(void *)(a1 + 16);
        if (v15) {
          goto LABEL_18;
        }
        goto LABEL_52;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        unsigned int v50 = 0;
        if ((unint64_t)v18 >= v17) {
          goto LABEL_66;
        }
        goto LABEL_64;
      case 5u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unsigned int v19 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_71;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_36;
        }
        unsigned int v50 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v50) & 1) == 0) {
          return 0;
        }
        goto LABEL_79;
      case 7u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unsigned int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_82;
      case 8u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        BOOL v22 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_90;
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_36;
        }
        unsigned int v50 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v50) & 1) == 0) {
          return 0;
        }
        goto LABEL_98;
      case 0xAu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        unsigned int v24 = (char *)*((void *)this + 1);
        unint64_t v23 = *((void *)this + 2);
        goto LABEL_101;
      default:
        int v9 = TagFallback & 7;
LABEL_36:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        break;
        }
    }
  }
}

void sub_1001DE1C8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001DE218(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 44);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(result + 24), (BOOL)a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_15:
      uint64_t v10 = *(void *)(v5 + 16);
      if (v10)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v10, a2, a4);
        int v6 = *(_DWORD *)(v5 + 44);
        if ((v6 & 8) != 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(qword_10047F0E0 + 16), a2, a4);
        int v6 = *(_DWORD *)(v5 + 44);
        if ((v6 & 8) != 0) {
          goto LABEL_19;
        }
      }
LABEL_5:
      if ((v6 & 0x10) == 0) {
        goto LABEL_6;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 25), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) != 0) {
    goto LABEL_15;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    goto LABEL_5;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 26), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 27), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 32), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 33), (BOOL)a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(float *)(v5 + 36), a3);
  if ((*(_DWORD *)(v5 + 44) & 0x200) == 0)
  {
LABEL_11:
    int v9 = *(void **)(v5 + 8);
    char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 34), (BOOL)a2, a4);
  char v11 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v11;
  if (!v11) {
    return result;
  }
LABEL_26:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

unsigned char *sub_1001DE3BC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 11);
  if (v4)
  {
    char v8 = *((unsigned char *)this + 24);
    *a2 = 8;
    a2[1] = v8;
    a2 += 2;
    int v4 = *((_DWORD *)this + 11);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_15:
      uint64_t v10 = *((void *)this + 2);
      if (v10)
      {
        *a2 = 26;
        unsigned int v11 = a2 + 1;
        unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v10 + 32);
        if (v12 <= 0x7F) {
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v10 = *(void *)(qword_10047F0E0 + 16);
        *a2 = 26;
        unsigned int v11 = a2 + 1;
        unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v10 + 32);
        if (v12 <= 0x7F)
        {
LABEL_17:
          a2[1] = (_BYTE)v12;
          a2 = (unsigned char *)sub_1001DD584(v10, (uint64_t)(a2 + 2), a3);
          int v4 = *((_DWORD *)this + 11);
          if ((v4 & 8) != 0) {
            goto LABEL_21;
          }
LABEL_5:
          if ((v4 & 0x10) == 0) {
            goto LABEL_6;
          }
          goto LABEL_22;
        }
      }
      uint64_t v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v11, a3);
      a2 = (unsigned char *)sub_1001DD584(v10, v13, v14);
      int v4 = *((_DWORD *)this + 11);
      if ((v4 & 8) != 0) {
        goto LABEL_21;
      }
      goto LABEL_5;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v9 = *((unsigned char *)this + 25);
  *a2 = 16;
  a2[1] = v9;
  a2 += 2;
  int v4 = *((_DWORD *)this + 11);
  if ((v4 & 4) != 0) {
    goto LABEL_15;
  }
LABEL_4:
  if ((v4 & 8) == 0) {
    goto LABEL_5;
  }
LABEL_21:
  char v15 = *((unsigned char *)this + 26);
  *a2 = 32;
  a2[1] = v15;
  a2 += 2;
  int v4 = *((_DWORD *)this + 11);
  if ((v4 & 0x10) == 0)
  {
LABEL_6:
    if ((v4 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  char v16 = *((unsigned char *)this + 27);
  *a2 = 40;
  a2[1] = v16;
  a2 += 2;
  int v4 = *((_DWORD *)this + 11);
  if ((v4 & 0x20) == 0)
  {
LABEL_7:
    if ((v4 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v17 = *((_DWORD *)this + 7);
  *a2 = 53;
  *(_DWORD *)(a2 + 1) = v17;
  a2 += 5;
  int v4 = *((_DWORD *)this + 11);
  if ((v4 & 0x40) == 0)
  {
LABEL_8:
    if ((v4 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  char v18 = *((unsigned char *)this + 32);
  *a2 = 56;
  a2[1] = v18;
  a2 += 2;
  int v4 = *((_DWORD *)this + 11);
  if ((v4 & 0x80) == 0)
  {
LABEL_9:
    if ((v4 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  char v19 = *((unsigned char *)this + 33);
  *a2 = 64;
  a2[1] = v19;
  a2 += 2;
  int v4 = *((_DWORD *)this + 11);
  if ((v4 & 0x100) == 0)
  {
LABEL_10:
    if ((v4 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  int v20 = *((_DWORD *)this + 9);
  *a2 = 77;
  *(_DWORD *)(a2 + 1) = v20;
  a2 += 5;
  if ((*((_DWORD *)this + 11) & 0x200) == 0)
  {
LABEL_11:
    uint64_t v7 = (void *)*((void *)this + 1);
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = v7;
    if (!v7) {
      return a2;
    }
    goto LABEL_28;
  }
LABEL_27:
  char v21 = *((unsigned char *)this + 34);
  *a2 = 80;
  a2[1] = v21;
  a2 += 2;
  BOOL v22 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v22;
  if (!v22) {
    return a2;
  }
LABEL_28:
  if (*v5 == v5[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_1001DE5F4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 44);
  if (!(_BYTE)v3)
  {
    unsigned int v11 = 0;
    goto LABEL_38;
  }
  if ((v3 & 2) != 0) {
    int v4 = 2 * (v3 & 1) + 2;
  }
  else {
    int v4 = 2 * (v3 & 1);
  }
  if ((v3 & 4) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 16);
    if (v5)
    {
      int v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(unsigned char *)(v5 + 36)) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v5 = *(void *)(qword_10047F0E0 + 16);
      int v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(unsigned char *)(v5 + 36))
      {
LABEL_8:
        int v7 = (v6 << 31 >> 31) & 9 | v6 & 2;
        if ((v6 & 4) != 0) {
          v7 += 2;
        }
        if ((v6 & 8) != 0) {
          v7 += 2;
        }
        if ((v6 & 0x10) != 0) {
          v7 += 2;
        }
        if ((v6 & 0x20) != 0) {
          LODWORD(v8) = v7 + 5;
        }
        else {
          LODWORD(v8) = v7;
        }
        char v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
        uint64_t v10 = *(void **)(v5 + 8);
        if (!v10) {
          goto LABEL_25;
        }
LABEL_22:
        if (*v10 != v10[1])
        {
          char v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v9, a2)+ v8);
          *(_DWORD *)(v5 + 32) = v8;
          if (v8 >= 0x80) {
            int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
          }
          else {
            int v12 = 1;
          }
          goto LABEL_27;
        }
LABEL_25:
        *(_DWORD *)(v5 + 32) = v8;
        int v12 = 1;
LABEL_27:
        int v4 = (v4 | 1) + v8 + v12;
        int v3 = *(_DWORD *)(a1 + 44);
        goto LABEL_28;
      }
    }
    LODWORD(v8) = 0;
    char v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v10 = *(void **)(v5 + 8);
    if (!v10) {
      goto LABEL_25;
    }
    goto LABEL_22;
  }
LABEL_28:
  unsigned int v11 = v4 + 2;
  if ((v3 & 8) == 0) {
    unsigned int v11 = v4;
  }
  if ((v3 & 0x10) != 0) {
    v11 += 2;
  }
  if ((v3 & 0x20) != 0) {
    v11 += 5;
  }
  if ((v3 & 0x40) != 0) {
    v11 += 2;
  }
  if ((v3 & 0x80) != 0) {
    v11 += 2;
  }
LABEL_38:
  unsigned int v13 = v11 + 5;
  if ((v3 & 0x100) == 0) {
    unsigned int v13 = v11;
  }
  if ((v3 & 0x200) != 0) {
    v13 += 2;
  }
  if ((v3 & 0xFF00) != 0) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = v11;
  }
  char v15 = *(void **)(a1 + 8);
  if (v15 && *v15 != v15[1]) {
    uint64_t v14 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v14;
  }
  *(_DWORD *)(a1 + 40) = v14;
  return v14;
}

uint64_t sub_1001DE79C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001C9264((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001DE87C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001DE890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001DE8A4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001DE930()
{
  return 1;
}

uint64_t sub_1001DE938()
{
  uint64_t v0 = qword_10047DF40;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001B95A4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DED8;
}

void sub_1001DE9C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001DE9DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1001DE9E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001DE9EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_1001DE9F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1001DE9FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001DEA04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001DEA0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1001DEA14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001DEA1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_1001DEA24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_1001DEA2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_1001DEA34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001DEA3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 296);
}

uint64_t sub_1001DEA44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_1001DEA4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1001DEA54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001DEA5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1001DEA64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1001DEA6C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1001DEA74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_1001DEA7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1001DEA84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1001DEA8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1001DEA94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_1001DEA9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_1001DEAA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001DEAAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_1001DEAB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_1001DEABC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_1001DEAC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 152);
}

uint64_t sub_1001DEACC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1001DEAD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_1001DEADC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1001DEAE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_1001DEAEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_1001DEAF4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_1001DEAFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_1001DEB04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1001DEBB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
  sub_10006A9DC((uint64_t)&a10, a11);

  _Unwind_Resume(a1);
}

void sub_1001DEBE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

char *sub_1001DEBF0(uint64_t a1, uint64_t *a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  return sub_100015648((char *)a1, *a2, a2[1], 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3));
}

void *sub_1001DEC34(void *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = a1 + 1;
  return sub_1001DFBF0(a1, *(void **)a2, (void *)(a2 + 8));
}

void sub_1001DEC70(_Unwind_Exception *a1)
{
  sub_10006A9DC(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

void sub_1001DECA4(uint64_t **a1, uint64_t **a2)
{
  if (a1 != a2) {
    sub_10006D4D0(a1, *a2, a2 + 1);
  }
}

void sub_1001DEE14(uint64_t a1, int8x16_t *a2)
{
  exception = __cxa_allocate_exception(0x38uLL);
  sub_1001DEE80((uint64_t)exception, a1, a2);
}

void sub_1001DEE68(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

int8x16_t sub_1001DEE80(uint64_t a1, uint64_t a2, int8x16_t *a3)
{
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)a1 = &off_10045FDE0;
  *(void *)(a1 + 8) = off_10045FE10;
  *(void *)(a1 + 16) = off_10045FE38;
  *(_DWORD *)(a1 + 48) = a3[1].i32[0];
  int8x16_t result = vextq_s8(*a3, *a3, 8uLL);
  *(int8x16_t *)(a1 + 32) = result;
  return result;
}

std::exception *sub_1001DEEFC(std::exception *a1)
{
  a1[2].__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[3].__vftable = 0;
  }
  std::exception::~exception(a1 + 1);
  return a1;
}

void sub_1001DEF80()
{
}

void sub_1001DF0C0()
{
  std::exception::~exception(v0);
  operator delete();
}

void sub_1001DF0EC(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_1001DF120(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x38uLL);
  sub_1001DF4C4((uint64_t)exception, a1);
}

void sub_1001DF168(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1001DF17C(std::exception *a1)
{
  a1[2].__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[3].__vftable = 0;
  }
  std::exception::~exception(a1 + 1);

  operator delete();
}

void sub_1001DF220(std::exception *this)
{
  this[1].__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    this[2].__vftable = 0;
  }

  std::exception::~exception(this);
}

void sub_1001DF2AC(std::exception *this)
{
  this[1].__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    this[2].__vftable = 0;
  }
  std::exception::~exception(this);

  operator delete();
}

const char *sub_1001DF354()
{
  return "Boost.Geometry Empty-Input exception";
}

void sub_1001DF360(std::exception *a1)
{
  a1->__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  std::exception::~exception(a1 - 1);
}

void sub_1001DF3E8(std::exception *a1)
{
  a1->__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  std::exception::~exception(a1 - 1);

  operator delete();
}

void sub_1001DF48C(std::exception *a1)
{
  std::exception::~exception(a1);

  operator delete();
}

uint64_t sub_1001DF4C4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  *(void *)(a1 + 8) = &off_10045FE58;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = &off_10045FDE0;
  *(void *)(a1 + 8) = off_10045FE10;
  *(void *)(a1 + 16) = off_10045FE38;
  return a1;
}

void sub_1001DF5E0(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

double sub_1001DF5F4(double *a1, double *a2, double *a3, double *a4, double *a5, double *a6, double *a7, double *a8, double *a9, double *a10)
{
  a8[1] = -(*a8 - *a4 * *a5);
  double v10 = *a9;
  double v11 = -(*a9 - *a6 * *a7);
  a9[1] = v11;
  double v12 = a8[1];
  double v13 = v12 - v11;
  double v14 = v12 - (v12 - v11) - v11 + v12 - (v12 - v11 + v12 - (v12 - v11));
  double v15 = *a8 + v13;
  double v16 = v13 - (v15 - *a8) + *a8 - (v15 - (v15 - *a8));
  double v66 = v14;
  double v67 = v16 - (v16 - v10) - v10 + v16 - (v16 - v10 + v16 - (v16 - v10));
  double v68 = v16 - v10 - (v15 + v16 - v10 - v15) + v15 - (v15 + v16 - v10 - (v15 + v16 - v10 - v15));
  double v69 = v15 + v16 - v10;
  double result = v14 + 0.0 + v67 + v68 + v69;
  double v18 = fabs(result);
  if (v18 < *a10 * 2.22044605e-16)
  {
    a4[1] = *a1 - *a4 - *a3 + *a1 - (*a4 + *a1 - *a4);
    a5[1] = a2[1] - *a5 - a3[1] + a2[1] - (*a5 + a2[1] - *a5);
    a6[1] = a1[1] - *a6 - a3[1] + a1[1] - (*a6 + a1[1] - *a6);
    double v23 = *a7;
    double v24 = *a2 - *a7 - *a3 + *a2 - (*a7 + *a2 - *a7);
    a7[1] = v24;
    double v25 = a4[1];
    double v26 = a6[1];
    double v27 = a5[1];
    if (v25 != 0.0 || v26 != 0.0 || v27 != 0.0 || v24 != 0.0)
    {
      double v28 = v18 * 3.33066907e-16 + *a10 * 1.10933565e-31;
      double v29 = v25 * *a5;
      double v30 = v23 * v26;
      double result = result + v29 + *a4 * v27 - (v23 * v26 + *a6 * v24);
      if (fabs(result) < v28)
      {
        double v31 = -(v29 - v25 * *a5);
        double v32 = -(v30 - v26 * v23);
        double v33 = v31 - v32;
        double v34 = v31 - (v31 - v32) - v32 + v31 - (v31 - v32 + v31 - (v31 - v32));
        double v35 = v29 + v33;
        double v36 = v33 - (v29 + v33 - v29) + v29 - (v29 + v33 - (v29 + v33 - v29));
        double v59 = v34;
        double v60 = v36 - (v36 - v30) - v30 + v36 - (v36 - v30 + v36 - (v36 - v30));
        double v61 = v36 - v30 - (v35 + v36 - v30 - v35) + v35 - (v35 + v36 - v30 - (v35 + v36 - v30 - v35));
        double v62 = v35 + v36 - v30;
        int v37 = sub_1001DF9F4(&v66, &v59, v65, 4, 4);
        double v38 = a5[1];
        double v39 = a4[1];
        double v40 = *a4 * v38;
        double v41 = -(v40 - v40);
        double v42 = a7[1];
        double v43 = a6[1];
        double v44 = *a6 * v42;
        double v45 = -(v44 - v44);
        double v46 = v41 - v45;
        double v47 = v41 - (v41 - v45) - v45 + v41 - (v41 - v45 + v41 - (v41 - v45));
        double v48 = v40 + v46;
        double v49 = v46 - (v40 + v46 - v40) + v40 - (v40 + v46 - (v40 + v46 - v40));
        double v59 = v47;
        double v60 = v49 - (v49 - v44) - v44 + v49 - (v49 - v44 + v49 - (v49 - v44));
        double v61 = v49 - v44 - (v48 + v49 - v44 - v48) + v48 - (v48 + v49 - v44 - (v48 + v49 - v44 - v48));
        double v62 = v48 + v49 - v44;
        double v50 = v38 * v39;
        double v51 = -(v38 * v39 - v39 * v38);
        double v52 = v42 * v43;
        double v53 = -(v42 * v43 - v43 * v42);
        double v54 = v51 - v53;
        double v55 = v51 - (v51 - v53) - v53 + v51 - (v51 - v53 + v51 - (v51 - v53));
        double v56 = v50 + v54;
        double v57 = v54 - (v50 + v54 - v50) + v50 - (v50 + v54 - (v50 + v54 - v50));
        v63[0] = v55;
        v63[1] = v57 - (v57 - v52) - v52 + v57 - (v57 - v52 + v57 - (v57 - v52));
        unsigned int v63[2] = v57 - v52 - (v56 + v57 - v52 - v56) + v56 - (v56 + v57 - v52 - (v56 + v57 - v52 - v56));
        v63[3] = v56 + v57 - v52;
        int v58 = sub_1001DF9F4(&v59, v63, v64, 4, 4);
        return *(&v59 + (int)sub_1001DF9F4(v65, v64, &v59, v37, v58) - 1);
      }
    }
  }
  return result;
}

uint64_t sub_1001DF9F4(double *a1, double *a2, double *a3, int a4, int a5)
{
  double v6 = *a2;
  double v7 = fabs(*a2);
  double v8 = fabs(*a1);
  int v9 = v7 <= v8;
  int v10 = v7 > v8;
  if (v7 > v8) {
    double v6 = *a1;
  }
  if (v10 >= a4 || v9 >= a5)
  {
    uint64_t result = 0;
    goto LABEL_40;
  }
  double v13 = a2[v7 <= v8];
  double v14 = a1[v7 > v8];
  double v15 = fabs(v13);
  double v16 = fabs(v14);
  if (v7 > v8) {
    int v17 = 1;
  }
  else {
    int v17 = 2;
  }
  double v18 = v6 + v13;
  double v19 = v6 + v13 - v13;
  if (v7 <= v8) {
    int v20 = 1;
  }
  else {
    int v20 = 2;
  }
  double v21 = v6 + v14;
  double v22 = v6 + v14 - v14;
  if (v15 > v16)
  {
    int v10 = v20;
  }
  else
  {
    double v22 = v19;
    double v21 = v18;
    int v9 = v17;
  }
  double v23 = v6 - v22;
  if (v23 == 0.0)
  {
    uint64_t result = 0;
    double v6 = v21;
    if (v10 >= a4 || v9 >= a5) {
      goto LABEL_40;
    }
  }
  else
  {
    *a3 = v23;
    uint64_t result = 1;
    double v6 = v21;
    if (v10 >= a4 || v9 >= a5) {
      goto LABEL_40;
    }
  }
  do
  {
    double v26 = a2[v9];
    double v27 = a1[v10];
    BOOL v28 = fabs(v26) <= fabs(v27);
    double v29 = v6 + v26;
    double v30 = v6 + v26 - v6;
    double v31 = v6 + v26 - v30;
    double v32 = v26 - v30;
    double v33 = v6 + v27;
    double v34 = v6 + v27 - v6;
    double v35 = v6 + v27 - v34;
    double v36 = v27 - v34;
    if (!v28)
    {
      double v31 = v35;
      double v32 = v36;
    }
    double v37 = v6 - v31;
    if (v28) {
      double v6 = v29;
    }
    else {
      double v6 = v33;
    }
    if (v28) {
      ++v9;
    }
    else {
      ++v10;
    }
    double v38 = v32 + v37;
    if (v38 != 0.0)
    {
      a3[(int)result] = v38;
      uint64_t result = (result + 1);
    }
  }
  while (v10 < a4 && v9 < a5);
LABEL_40:
  if (v10 < a4)
  {
    double v39 = &a1[v10];
    uint64_t v40 = a4 - (uint64_t)v10;
    do
    {
      double v41 = v6;
      double v6 = v6 + *v39;
      double v42 = *v39 - (v6 - v41) + v41 - (v6 - (v6 - v41));
      if (v42 != 0.0)
      {
        a3[(int)result] = v42;
        uint64_t result = (result + 1);
      }
      ++v39;
      --v40;
    }
    while (v40);
  }
  if (v9 < a5)
  {
    double v43 = &a2[v9];
    uint64_t v44 = a5 - (uint64_t)v9;
    do
    {
      double v45 = v6;
      double v6 = v6 + *v43;
      double v46 = *v43 - (v6 - v45) + v45 - (v6 - (v6 - v45));
      if (v46 != 0.0)
      {
        a3[(int)result] = v46;
        uint64_t result = (result + 1);
      }
      ++v43;
      --v44;
    }
    while (v44);
  }
  if (v6 != 0.0 || result == 0)
  {
    a3[(int)result] = v6;
    return (result + 1);
  }
  return result;
}

void *sub_1001DFBF0(void *result, void *a2, void *a3)
{
  if (a2 != a3)
  {
    v18[7] = v3;
    v18[8] = v4;
    double v6 = a2;
    double v7 = (void **)result;
    double v8 = result + 1;
    do
    {
      uint64_t result = sub_1001DFD04(v7, v8, v18, &v17, v6 + 4);
      if (*result)
      {
        int v9 = (void *)v6[1];
        if (v9) {
          goto LABEL_11;
        }
      }
      else
      {
        int v10 = (uint64_t **)result;
        double v11 = (uint64_t *)operator new(0x28uLL);
        v11[4] = v6[4];
        uint64_t v12 = v18[0];
        *double v11 = 0;
        v11[1] = 0;
        v11[2] = v12;
        *int v10 = v11;
        double v13 = (void *)**v7;
        if (v13)
        {
          *double v7 = v13;
          double v14 = *v10;
        }
        else
        {
          double v14 = v11;
        }
        uint64_t result = sub_1000619B8(v7[1], v14);
        v7[2] = (void *)((char *)v7[2] + 1);
        int v9 = (void *)v6[1];
        if (v9)
        {
          do
          {
LABEL_11:
            double v15 = v9;
            int v9 = (void *)*v9;
          }
          while (v9);
          goto LABEL_3;
        }
      }
      do
      {
        double v15 = (void *)v6[2];
        BOOL v16 = *v15 == (void)v6;
        double v6 = v15;
      }
      while (!v16);
LABEL_3:
      double v6 = v15;
    }
    while (v15 != a3);
  }
  return result;
}

void *sub_1001DFD04(void *a1, void *a2, void *a3, void *a4, unint64_t *a5)
{
  long long v5 = a1 + 1;
  if (a1 + 1 == a2 || (unint64_t v6 = *a5, v7 = a2[4], *a5 < v7))
  {
    uint64_t v8 = *a2;
    if ((void *)*a1 == a2)
    {
      int v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v8)
    {
      int v9 = (void *)*a2;
      do
      {
        int v10 = v9;
        int v9 = (void *)v9[1];
      }
      while (v9);
    }
    else
    {
      double v14 = a2;
      do
      {
        int v10 = (void *)v14[2];
        BOOL v15 = *v10 == (void)v14;
        double v14 = v10;
      }
      while (v15);
    }
    unint64_t v16 = *a5;
    if (v10[4] < *a5) {
      goto LABEL_17;
    }
    double v18 = (void *)*v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          double v19 = v18;
          unint64_t v20 = v18[4];
          if (v16 >= v20) {
            break;
          }
          double v18 = (void *)*v19;
          long long v5 = v19;
          if (!*v19) {
            goto LABEL_25;
          }
        }
        if (v20 >= v16) {
          break;
        }
        long long v5 = v19 + 1;
        double v18 = (void *)v19[1];
      }
      while (v18);
LABEL_25:
      *a3 = v19;
      return v5;
    }
    else
    {
      *a3 = v5;
      return a1 + 1;
    }
  }
  else if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = a2;
    return a4;
  }
  else
  {
    uint64_t v11 = a2[1];
    if (v11)
    {
      uint64_t v12 = (void *)a2[1];
      do
      {
        double v13 = v12;
        uint64_t v12 = (void *)*v12;
      }
      while (v12);
    }
    else
    {
      double v21 = a2;
      do
      {
        double v13 = (void *)v21[2];
        BOOL v15 = *v13 == (void)v21;
        double v21 = v13;
      }
      while (!v15);
    }
    if (v13 == v5 || v6 < v13[4])
    {
      if (v11)
      {
        *a3 = v13;
        return v13;
      }
      else
      {
        *a3 = a2;
        return a2 + 1;
      }
    }
    else
    {
      double v22 = (void *)*v5;
      if (*v5)
      {
        do
        {
          while (1)
          {
            double v23 = v22;
            unint64_t v24 = v22[4];
            if (v6 >= v24) {
              break;
            }
            double v22 = (void *)*v23;
            long long v5 = v23;
            if (!*v23) {
              goto LABEL_41;
            }
          }
          if (v24 >= v6) {
            break;
          }
          long long v5 = v23 + 1;
          double v22 = (void *)v23[1];
        }
        while (v22);
LABEL_41:
        *a3 = v23;
        return v5;
      }
      else
      {
        *a3 = v5;
        return a1 + 1;
      }
    }
  }
}

char *sub_1001DFEB4(void **a1, const char **a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_1000A9108();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) >= 0x555555555555555) {
    unint64_t v6 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL) {
      sub_1000A6A10();
    }
    unint64_t v7 = (char *)operator new(24 * v6);
  }
  else
  {
    unint64_t v7 = 0;
  }
  uint64_t v8 = &v7[24 * v3];
  double v22 = v8;
  double v23 = v8;
  unint64_t v24 = &v7[24 * v6];
  int v9 = *a2;
  size_t v10 = strlen(*a2);
  if (v10 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  size_t v11 = v10;
  if (v10 >= 0x17)
  {
    uint64_t v16 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17) {
      uint64_t v16 = v10 | 7;
    }
    uint64_t v17 = v16 + 1;
    double v18 = (char *)operator new(v16 + 1);
    *((void *)v8 + 1) = v11;
    *((void *)v8 + 2) = v17 | 0x8000000000000000;
    *(void *)uint64_t v8 = v18;
    uint64_t v8 = v18;
  }
  else
  {
    v8[23] = v10;
    if (!v10)
    {
      *uint64_t v8 = 0;
      uint64_t v12 = v8;
      double v13 = v8 + 24;
      double v14 = (char *)*a1;
      BOOL v15 = (char *)a1[1];
      if (v15 == *a1) {
        goto LABEL_23;
      }
      goto LABEL_20;
    }
  }
  memmove(v8, v9, v11);
  v8[v11] = 0;
  uint64_t v12 = v22;
  double v13 = v23 + 24;
  double v14 = (char *)*a1;
  BOOL v15 = (char *)a1[1];
  if (v15 == *a1)
  {
LABEL_23:
    *a1 = v12;
    a1[1] = v13;
    a1[2] = v24;
    goto LABEL_28;
  }
  do
  {
LABEL_20:
    long long v19 = *(_OWORD *)(v15 - 24);
    *((void *)v12 - 1) = *((void *)v15 - 1);
    *(_OWORD *)(v12 - 24) = v19;
    v12 -= 24;
    *((void *)v15 - 2) = 0;
    *((void *)v15 - 1) = 0;
    *((void *)v15 - 3) = 0;
    v15 -= 24;
  }
  while (v15 != v14);
  unint64_t v20 = (char *)*a1;
  BOOL v15 = (char *)a1[1];
  *a1 = v12;
  a1[1] = v13;
  a1[2] = v24;
  if (v15 != v20)
  {
    do
    {
      if (*(v15 - 1) < 0) {
        operator delete(*((void **)v15 - 3));
      }
      v15 -= 24;
    }
    while (v15 != v20);
    BOOL v15 = v20;
  }
LABEL_28:
  if (v15) {
    operator delete(v15);
  }
  return v13;
}

void sub_1001E00D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000E2848((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001E0118(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E018C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1001E0280(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E035C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E0398(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E0568(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E057C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E05D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E06D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1001E0754(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E07AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E09C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E09D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E09EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E0A00(_Unwind_Exception *a1)
{
  unint64_t v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1001E0AB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1001E0C00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E0C10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E0C24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1001E0DBC()
{
  if (qword_10047BEE8 == -1)
  {
    uint64_t v0 = (void *)qword_10047BEF0;
  }
  else
  {
    dispatch_once(&qword_10047BEE8, &stru_10045FE70);
    uint64_t v0 = (void *)qword_10047BEF0;
  }
  return v0;
}

uint64_t sub_1001E0E2C(uint64_t a1)
{
  uint64_t v2 = operator new(0x90uLL);
  v2[1] = 0;
  void v2[2] = 0;
  *uint64_t v2 = off_10045FEA0;
  *(void *)a1 = sub_10006D9A4((uint64_t)(v2 + 3));
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  return a1;
}

void sub_1001E0E9C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

uint64_t sub_1001E0EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)a1 + 96);
  if (!v2) {
    uint64_t v2 = *(void *)(qword_100492AD0 + 96);
  }
  return sub_1001B89B8(a2, v2);
}

uint64_t sub_1001E0EE0(uint64_t a1)
{
  return *(unsigned int *)(*(void *)a1 + 24);
}

uint64_t sub_1001E0EEC@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  return sub_100376B64(a3, *(void *)(*(void *)(*(void *)a1 + 16) + 8 * a2));
}

void sub_1001E0F00(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Client");
  uint64_t v2 = (void *)qword_10047BEF0;
  qword_10047BEF0 = (uint64_t)v1;
}

void sub_1001E0F44(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10045FEA0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1001E0F64(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10045FEA0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_1001E0FB8(void *a1, NSObject *a2, uint64_t a3, uint64_t a4, const char *a5, const char *a6, uint8_t *a7)
{
  _os_signpost_emit_with_name_impl(a1, a2, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, a5, a6, a7, 0x26u);
}

void sub_1001E0FDC(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint8_t buf)
{
  _os_log_impl(a1, v13, OS_LOG_TYPE_INFO, a4, &buf, 0x26u);
}

void sub_1001E0FFC(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint8_t buf)
{
  _os_log_impl(a1, v13, OS_LOG_TYPE_FAULT, a4, &buf, 0x26u);
}

void sub_1001E101C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1001E1094()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_1001E110C()
{
}

int *sub_1001E1134@<X0>(uint64_t a1@<X0>, int a2@<W1>, int *a3@<X8>)
{
  return sub_10006DC38(a3, a1, a2 | 0x200u, 0, 0x1A4u);
}

void sub_1001E1150(id a1)
{
  qword_10047BEF0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Client");
}

BOOL sub_1001E11B8()
{
  os_log_t v1 = qword_10047BEF0;
  return os_log_type_enabled(v1, OS_LOG_TYPE_FAULT);
}

BOOL sub_1001E11D8()
{
  uint64_t v2 = *(NSObject **)(v0 + 3824);
  return os_log_type_enabled(v2, OS_LOG_TYPE_INFO);
}

void sub_1001E11F4(void *a1, int a2, int a3, int a4, const char *a5, const char *a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint8_t buf)
{
  _os_signpost_emit_with_name_impl(a1, v13, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, a5, a6, &buf, 0x2Cu);
}

void sub_1001E1220(void *a1, int a2, int a3, int a4, const char *a5, const char *a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint8_t buf)
{
  _os_signpost_emit_with_name_impl(a1, v13, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, a5, a6, &buf, 0x26u);
}

BOOL sub_1001E124C()
{
  uint64_t v2 = *(NSObject **)(v0 + 3824);
  return os_signpost_enabled(v2);
}

void sub_1001E127C(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint8_t buf)
{
  _os_log_impl(a1, v13, OS_LOG_TYPE_FAULT, a4, &buf, 0x2Cu);
}

void sub_1001E129C(void *a1, int a2, int a3, const char *a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint8_t buf)
{
  _os_log_impl(a1, v13, OS_LOG_TYPE_INFO, a4, &buf, 0x2Cu);
}

void sub_1001E1370(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E13FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1001E14AC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Daemon");
  uint64_t v2 = (void *)qword_10047BF00;
  qword_10047BF00 = (uint64_t)v1;
}

void sub_1001E14F0()
{
}

void sub_1001E1548(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E1634(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E16C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E17C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1001E17E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_1001E184C(void *a1, uint64_t a2)
{
  return [a1 encodeBytes:a2 length:156 forKey:@"locationInfo"];
}

id sub_1001E1860(void *a1, uint64_t a2)
{
  return [a1 encodeBytes:a2 length:560 forKey:@"locationPrivateInfo"];
}

void sub_1001E1874(void *a1@<X0>, char *a2@<X8>)
{
  unint64_t v8 = 0;
  id v5 = [a1 decodeBytesForKey:@"pipelineDiagnosticReport" returnedLength:&v8];
  if (v8 >= 0x88) {
    size_t v6 = 136;
  }
  else {
    size_t v6 = v8;
  }
  if (v8 <= 0x88) {
    size_t v7 = 136 - v8;
  }
  else {
    size_t v7 = 0;
  }
  memcpy(a2, v5, v6);
  bzero(&a2[v6], v7);
}

id sub_1001E1908(void *a1, uint64_t a2)
{
  return [a1 encodeBytes:a2 length:136 forKey:@"pipelineDiagnosticReport"];
}

id sub_1001E191C(void *a1, const char *a2)
{
  return [a1 encodeInteger:*(void *)a2 forKey:@"gpsExpiryInfo"];
}

void sub_1001E1964(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E19E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E1B60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E1B70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E1B84(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E1C24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1001E1C3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1001E1CD4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001E1DC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double sub_1001E1E04(uint64_t a1, int a2)
{
  return *(double *)(a1 + 8 * (a2 == 0));
}

void sub_1001E1E14()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1001E1E8C()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_1001E1F04(uint64_t a1@<X8>)
{
  unint64_t v12 = 0;
  unint64_t v11 = 0;
  if (mach_get_times())
  {
    if (qword_10047BED8 == -1)
    {
      uint64_t v2 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
      {
LABEL_5:
        __asm { FMOV            V0.2D, #-1.0 }
        *(_OWORD *)a1 = _Q0;
        *(void *)(a1 + 16) = 0xBFF0000000000000;
        *(void *)(a1 + 24) = 0;
        return;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_10045FF40);
      uint64_t v2 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_5;
      }
    }
    *(_WORD *)int v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "TCONV,mach_get_times failed", v9, 2u);
    goto LABEL_5;
  }
  __asm { FMOV            V0.2D, #-1.0 }
  *(_OWORD *)a1 = _Q0;
  *(void *)(a1 + 16) = 0xBFF0000000000000;
  *(unsigned char *)(a1 + 24) = 0;
  *(double *)(a1 + 16) = sub_10022ED0C(&v10);
  *(double *)(a1 + 8) = sub_10022ED40(v12);
  *(double *)a1 = sub_10022ED40(v11);
  *(unsigned char *)(a1 + 24) = 1;
}

void sub_1001E2028(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  uint64_t v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

void sub_1001E206C()
{
}

uint64_t sub_1001E2094(uint64_t a1)
{
  if ((*(_WORD *)(a1 + 192) & 0x10) == 0) {
    return 1;
  }
  unint64_t v3 = (const void **)(a1 + 64);
  std::to_string(&v24, 1u);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 87);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = *(unsigned __int8 *)(a1 + 87);
  }
  else {
    uint64_t v5 = *(void *)(a1 + 72);
  }
  std::string::size_type size = HIBYTE(v24.__r_.__value_.__r.__words[2]);
  char v7 = HIBYTE(v24.__r_.__value_.__r.__words[2]);
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v24.__r_.__value_.__l.__size_;
  }
  if (v5 != size)
  {
LABEL_19:
    std::to_string(&__p, 9u);
    uint64_t v10 = *(unsigned __int8 *)(a1 + 87);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = *(unsigned __int8 *)(a1 + 87);
    }
    else {
      uint64_t v11 = *(void *)(a1 + 72);
    }
    std::string::size_type v12 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    int v13 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v12 = __p.__r_.__value_.__l.__size_;
    }
    if (v11 != v12)
    {
      BOOL v22 = 0;
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_43;
      }
      goto LABEL_38;
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((v10 & 0x80) != 0)
    {
      BOOL v22 = memcmp(*v3, p_p, *(void *)(a1 + 72)) == 0;
    }
    else
    {
      if (!*(unsigned char *)(a1 + 87))
      {
        BOOL v22 = 1;
        if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_43:
          if ((*((unsigned char *)&v24.__r_.__value_.__s + 23) & 0x80) == 0) {
            return v22;
          }
LABEL_40:
          operator delete(v24.__r_.__value_.__l.__data_);
          return v22;
        }
LABEL_38:
        operator delete(__p.__r_.__value_.__l.__data_);
        goto LABEL_43;
      }
      uint64_t v15 = v10 - 1;
      do
      {
        int v17 = *(unsigned __int8 *)v3;
        unint64_t v3 = (const void **)((char *)v3 + 1);
        int v16 = v17;
        int v19 = p_p->__r_.__value_.__s.__data_[0];
        p_p = (std::string *)((char *)p_p + 1);
        int v18 = v19;
        BOOL v21 = v15-- != 0;
        BOOL v22 = v16 == v18;
      }
      while (v16 == v18 && v21);
    }
    if ((v13 & 0x80000000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_38;
  }
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unint64_t v8 = &v24;
  }
  else {
    unint64_t v8 = (std::string *)v24.__r_.__value_.__r.__words[0];
  }
  if ((v4 & 0x80) != 0)
  {
    if (memcmp(*v3, v8, *(void *)(a1 + 72))) {
      goto LABEL_19;
    }
  }
  else if (*(unsigned char *)(a1 + 87))
  {
    int v9 = v3;
    while (*(unsigned __int8 *)v9 == v8->__r_.__value_.__s.__data_[0])
    {
      int v9 = (const void **)((char *)v9 + 1);
      unint64_t v8 = (std::string *)((char *)v8 + 1);
      if (!--v4) {
        goto LABEL_39;
      }
    }
    goto LABEL_19;
  }
LABEL_39:
  BOOL v22 = 1;
  if (v7 < 0) {
    goto LABEL_40;
  }
  return v22;
}

void sub_1001E2260(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001E227C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_10045FF70;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  size_t v6 = *(unsigned char **)(a2 + 16);
  uint64_t v5 = *(unsigned char **)(a2 + 24);
  int64_t v7 = v5 - v6;
  if (v5 != v6)
  {
    if (v7 < 0) {
      sub_1000A9108();
    }
    unint64_t v8 = (char *)operator new(v5 - v6);
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v8;
    int v9 = &v8[8 * (v7 >> 3)];
    *(void *)(a1 + 32) = v9;
    memcpy(v8, v6, v7);
    *(void *)(a1 + 24) = v9;
  }
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

void sub_1001E2334(_Unwind_Exception *exception_object)
{
  uint64_t v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 24) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1001E2350(uint64_t a1)
{
  return *(_DWORD *)(a1 + 40) > 0;
}

uint64_t sub_1001E2360(uint64_t a1)
{
  return *(void *)(a1 + 48);
}

double sub_1001E2368(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48);
  if (!v1) {
    return 1.0 * 1.0;
  }
  uint64_t v2 = 0;
  double v3 = 1.0;
  do
  {
    double v3 = v3 * *(double *)(*(void *)(a1 + 16) + 8 * v2);
    v2 += v1--;
  }
  while (v1);
  return v3 * v3;
}

double sub_1001E23A4(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a1 + 48);
  if (v4 != sub_1002AA5A0(a2))
  {
    int64_t v7 = sub_1000AE4B0(&v13, "");
    sub_10016A2C4((uint64_t)v7, 0, 0);
    if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v13.__r_.__value_.__l.__data_);
    }
    sub_1000D11E0((uint64_t)v11);
  }
  if (strcmp(*(const char **)(a1 + 8), "L"))
  {
    sub_1000AE4B0(v11, "");
    sub_10014B894("Vector64F::lapackLSolve assumes UPLO=L for now, so that's all we support at the moment.", &v13);
    sub_10016A2C4((uint64_t)v11, (uint64_t)&v13, 1);
    if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v13.__r_.__value_.__l.__data_);
    }
    if (v12 < 0) {
      operator delete(v11[0]);
    }
    sub_1000D11E0((uint64_t)&v10);
  }
  *(_OWORD *)std::string __p = *(_OWORD *)a2;
  uint64_t v9 = a2[2];
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  sub_1002AA5FC((__CLPK_doublereal **)(a1 + 16), (uint64_t)__p, (uint64_t)&v13);
  uint64_t v5 = (void *)*a2;
  if (*a2)
  {
    a2[1] = v5;
    operator delete(v5);
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  *(std::string *)a2 = v13;
  memset(&v13, 0, sizeof(v13));
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  return sub_1002AA5BC((uint64_t)a2);
}

void sub_1001E2558(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a18 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001E25BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  __CLPK_integer __ldb = v6;
  __CLPK_integer __nrhs = v5;
  a3[1] = 0;
  a3[2] = 0;
  *a3 = 0;
  unint64_t v8 = *(const void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  int64_t v9 = v7 - *(void *)a2;
  if (v7 == *(void *)a2)
  {
    uint64_t v10 = 0;
  }
  else
  {
    if (v9 < 0) {
      sub_1000A9108();
    }
    uint64_t v10 = (char *)operator new(v7 - *(void *)a2);
    *a3 = v10;
    uint64_t v11 = &v10[8 * (v9 >> 3)];
    a3[2] = v11;
    memcpy(v10, v8, v9);
    a3[1] = v11;
  }
  a3[3] = v6;
  a3[4] = v5;
  __CLPK_integer v13 = *(void *)(a1 + 48);
  __CLPK_integer __info = 0;
  return dpptrs_(*(char **)(a1 + 8), &v13, &__nrhs, *(__CLPK_doublereal **)(a1 + 16), (__CLPK_doublereal *)v10, &__ldb, &__info);
}

void sub_1001E2688(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    *(void *)(v1 + 8) = v2;
    operator delete(v2);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1001E26B8(void *a1)
{
  *a1 = off_10045FF70;
  uint64_t v2 = (void *)a1[2];
  if (v2)
  {
    a1[3] = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_1001E2708(void *a1)
{
  *a1 = off_10045FF70;
  uint64_t v2 = (void *)a1[2];
  if (v2)
  {
    a1[3] = v2;
    operator delete(v2);
  }

  operator delete();
}

uint64_t sub_1001E2778(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 48))();
}

void sub_1001E279C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1001E2814()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

int32x2_t sub_1001E288C(uint64_t a1, uint64_t a2)
{
  double v3 = (float64x2_t *)(a1 + 24);
  sub_100359350((double *)(a1 + 24), a2);

  return sub_10014BA6C((int32x2_t *)a1, v3);
}

uint64_t sub_1001E28D0(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    double v3 = *(std::__shared_weak_count **)(a1 + 8);
    if (!v3) {
      return a1;
    }
  }
  else
  {
    double v3 = *(std::__shared_weak_count **)(a1 + 8);
    if (!v3) {
      return a1;
    }
  }
  if (atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

uint64_t sub_1001E29A0(uint64_t a1, uint64_t *a2)
{
  *(_OWORD *)a1 = xmmword_1003F5E28;
  *(_OWORD *)(a1 + 16) = unk_1003F5E38;
  *(_OWORD *)(a1 + 32) = xmmword_1003F5E48;
  *(_OWORD *)(a1 + 48) = unk_1003F5E58;
  sub_1001E2B04(a2, a1 + 64);
  uint64_t v4 = a2[1];
  uint64_t v11 = *a2;
  char v12 = (std::__shared_weak_count *)v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  sub_10007314C(a1 + 160, (uint64_t)&v11, 0.0, 0.0);
  uint64_t v5 = v12;
  if (v12 && !atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  v10[0] = sub_100072640((double *)*a2);
  v10[1] = v6;
  v10[2] = v7;
  v10[3] = v8;
  sub_100357CB0((uint64_t)v10, (int32x2_t *)(a1 + 192), *(void *)(*a2 + 64));
  *(_OWORD *)(a1 + 200) = xmmword_1003F5E28;
  *(_OWORD *)(a1 + 216) = unk_1003F5E38;
  *(_OWORD *)(a1 + 232) = xmmword_1003F5E48;
  *(_OWORD *)(a1 + 248) = unk_1003F5E58;
  return a1;
}

void sub_1001E2ACC(_Unwind_Exception *a1)
{
  sub_1000BA884(v2 - 64);
  sub_1001E35C0(v1);
  _Unwind_Resume(a1);
}

void sub_1001E2AE8(_Unwind_Exception *a1)
{
  sub_1000BA884(v2);
  sub_1001E35C0(v1);
  _Unwind_Resume(a1);
}

void sub_1001E2B04(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (std::__shared_weak_count *)a1[1];
  uint64_t v26 = *a1;
  double v27 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  int v24 = -1;
  int v25 = -1;
  sub_100073160(a2, &v26, &v25, &v24);
  uint64_t v5 = (std::__shared_weak_count *)a1[1];
  uint64_t v22 = *a1;
  double v23 = v5;
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  int v20 = -1;
  int v21 = -1;
  sub_100073160(a2 + 24, &v22, &v21, &v20);
  uint64_t v6 = (std::__shared_weak_count *)a1[1];
  uint64_t v18 = *a1;
  int v19 = v6;
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  int v16 = -1;
  int v17 = -1;
  sub_100073160(a2 + 48, &v18, &v17, &v16);
  uint64_t v7 = (std::__shared_weak_count *)a1[1];
  uint64_t v14 = *a1;
  uint64_t v15 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  int v12 = -1;
  int v13 = -1;
  sub_100073160(a2 + 72, &v14, &v13, &v12);
  uint64_t v8 = v15;
  if (v15 && !atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  int64_t v9 = v19;
  if (v19 && !atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  uint64_t v10 = v23;
  if (v23 && !atomic_fetch_add(&v23->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  uint64_t v11 = v27;
  if (v27)
  {
    if (!atomic_fetch_add(&v27->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
}

void sub_1001E2D48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v10 = va_arg(va2, void);
  uint64_t v12 = va_arg(va2, void);
  uint64_t v13 = va_arg(va2, void);
  sub_1000BA884((uint64_t)va);
  sub_1000BA884((uint64_t)va1);
  sub_1000BA884((uint64_t)va2);
  sub_1000BA884(v4 - 48);
  do
  {
    v3 -= 24;
    sub_1000BA884(v3);
  }
  while (v3 != v2);
  _Unwind_Resume(a1);
}

void sub_1001E2D98(_Unwind_Exception *a1)
{
  sub_1000BA884(v1 - 48);
  _Unwind_Resume(a1);
}

BOOL sub_1001E2DB0(int *a1, uint64_t a2, double a3, double a4)
{
  int v4 = vcvtmd_s64_f64(a3);
  int v5 = vcvtmd_s64_f64(a4);
  int v7 = *a1;
  int v6 = a1[1];
  BOOL v11 = v4 > -2 && v5 > -2 && v6 > v4 && v7 > v5;
  if (v11)
  {
    double v12 = 0.0;
    double v13 = 0.0;
    double v14 = 0.0;
    if ((v4 & 0x80000000) == 0 && (v5 & 0x80000000) == 0)
    {
      double v13 = (1.0 - vabdd_f64(a3, (double)v4)) * (1.0 - vabdd_f64(a4, (double)v5));
      double v14 = v13 + 0.0;
    }
    *(double *)(a2 + 8) = v13;
    *(_DWORD *)a2 = v6 * v5 + v4;
    int v15 = v4 + 1;
    if ((v5 & 0x80000000) == 0 && v15 < v6)
    {
      double v12 = (1.0 - vabdd_f64(a3, (double)v15)) * (1.0 - vabdd_f64(a4, (double)v5));
      double v14 = v14 + v12;
    }
    *(double *)(a2 + 24) = v12;
    *(_DWORD *)(a2 + 16) = v6 * v5 + v15;
    int v16 = v5 + 1;
    double v17 = 0.0;
    if (v4 < 0 || v16 >= v7)
    {
      double v18 = 0.0;
    }
    else
    {
      double v18 = (1.0 - vabdd_f64(a3, (double)v4)) * (1.0 - vabdd_f64(a4, (double)v16));
      double v14 = v14 + v18;
    }
    *(double *)(a2 + 40) = v18;
    *(_DWORD *)(a2 + 32) = v16 * v6 + v4;
    if (v15 < v6 && v16 < v7)
    {
      double v17 = (1.0 - vabdd_f64(a3, (double)v15)) * (1.0 - vabdd_f64(a4, (double)v16));
      double v14 = v14 + v17;
    }
    *(double *)(a2 + 56) = v17;
    *(_DWORD *)(a2 + 48) = v16 * v6 + v15;
    if (v14 <= 0.0)
    {
      sub_1000AE4B0(v22, "");
      sub_1000DB8E8("Why didn't we fail fast?", &__p);
      sub_10016A2C4((uint64_t)v22, (uint64_t)&__p, 1);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (v23 < 0) {
        operator delete(v22[0]);
      }
      sub_1000D11E0((uint64_t)&v21);
    }
    *(double *)(a2 + 8) = v13 / v14;
    *(double *)(a2 + 24) = v12 / v14;
    *(double *)(a2 + 40) = v18 / v14;
    *(double *)(a2 + 56) = v17 / v14;
  }
  return v11;
}

void sub_1001E2FF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

unsigned int *sub_1001E303C(unsigned int *a1, double *a2)
{
  int v4 = (std::__shared_weak_count *)*((void *)a2 + 4);
  v8[0] = (uint64_t)a2[3];
  v8[1] = (uint64_t)v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1001E29A0((uint64_t)a1, v8);
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
  }
  double v5 = a2[5];
  double v6 = a2[6];
  *((double *)a1 + 22) = v5;
  *((double *)a1 + 23) = v6;
  if (sub_1001E2DB0((int *)a1 + 48, (uint64_t)a1, v5, v6))
  {
    if (*((double *)a1 + 1) > 0.0) {
      sub_10014BA5C((uint64_t)(a1 + 16), (uint64_t)(a1 + 48), *a1);
    }
    if (*((double *)a1 + 3) > 0.0) {
      sub_10014BA5C((uint64_t)(a1 + 22), (uint64_t)(a1 + 48), a1[4]);
    }
    if (*((double *)a1 + 5) > 0.0) {
      sub_10014BA5C((uint64_t)(a1 + 28), (uint64_t)(a1 + 48), a1[8]);
    }
    if (*((double *)a1 + 7) > 0.0) {
      sub_10014BA5C((uint64_t)(a1 + 34), (uint64_t)(a1 + 48), a1[12]);
    }
  }
  return a1;
}

void sub_1001E3168(_Unwind_Exception *a1)
{
  sub_1001E31A4(v1);
  _Unwind_Resume(a1);
}

void sub_1001E317C(_Unwind_Exception *a1)
{
  sub_1001E31A4(v1);
  _Unwind_Resume(a1);
}

void sub_1001E3190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1001E31A4(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 168);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    sub_1001E35C0((void *)(a1 + 64));
    return a1;
  }
  else
  {
    sub_1001E35C0((void *)(a1 + 64));
    return a1;
  }
}

double sub_1001E3230(unsigned int *a1, uint64_t a2)
{
  sub_100359350((double *)a1 + 20, a2);
  if (!sub_1001E2DB0((int *)a1 + 48, (uint64_t)a1, *((double *)a1 + 22), *((double *)a1 + 23))) {
    return result;
  }
  if (*((double *)a1 + 1) > 0.0)
  {
    sub_10014BA5C((uint64_t)(a1 + 16), (uint64_t)(a1 + 48), *a1);
    if (*((double *)a1 + 3) <= 0.0)
    {
LABEL_4:
      if (*((double *)a1 + 5) <= 0.0) {
        goto LABEL_5;
      }
LABEL_11:
      sub_10014BA5C((uint64_t)(a1 + 28), (uint64_t)(a1 + 48), a1[8]);
      double result = *((double *)a1 + 7);
      if (result <= 0.0) {
        return result;
      }
      goto LABEL_6;
    }
  }
  else if (*((double *)a1 + 3) <= 0.0)
  {
    goto LABEL_4;
  }
  sub_10014BA5C((uint64_t)(a1 + 22), (uint64_t)(a1 + 48), a1[4]);
  if (*((double *)a1 + 5) > 0.0) {
    goto LABEL_11;
  }
LABEL_5:
  double result = *((double *)a1 + 7);
  if (result <= 0.0) {
    return result;
  }
LABEL_6:
  uint64_t v4 = a1[12];

  sub_10014BA5C((uint64_t)(a1 + 34), (uint64_t)(a1 + 48), v4);
  return result;
}

uint64_t sub_1001E331C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, _OWORD *a3@<X8>)
{
  int v6 = sub_1002A6204(a2, a1 + 64);
  *(_DWORD *)(a1 + 200) = v6;
  double v7 = 0.0;
  double v8 = 0.0;
  if (v6 != -1) {
    double v8 = *(double *)(a1 + 8);
  }
  *(double *)(a1 + 208) = v8;
  double v9 = v8 + 0.0;
  int v10 = sub_1002A6204(a2, a1 + 88);
  *(_DWORD *)(a1 + 216) = v10;
  if (v10 != -1) {
    double v7 = *(double *)(a1 + 24);
  }
  *(double *)(a1 + 224) = v7;
  double v11 = v7 + v9;
  int v12 = sub_1002A6204(a2, a1 + 112);
  *(_DWORD *)(a1 + 232) = v12;
  double v13 = 0.0;
  double v14 = 0.0;
  if (v12 != -1) {
    double v14 = *(double *)(a1 + 40);
  }
  *(double *)(a1 + 240) = v14;
  double v15 = v14 + v11;
  uint64_t result = sub_1002A6204(a2, a1 + 136);
  *(_DWORD *)(a1 + 248) = result;
  if (result != -1) {
    double v13 = *(double *)(a1 + 56);
  }
  *(double *)(a1 + 256) = v13;
  double v17 = v13 + v15;
  double v21 = v13 + v15;
  if (v13 + v15 < 0.0 || v17 >= 1.00000001)
  {
    sub_1000AE4B0(v23, "");
    sub_1000DB8E8("Unexpected totalWeight: ", &v25);
    sub_10016452C(&v21, &v26);
    sub_10016A2C4((uint64_t)v23, (uint64_t)&v25, 2);
    if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v26.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_20:
        if ((v24 & 0x80000000) == 0) {
          goto LABEL_21;
        }
LABEL_24:
        operator delete(v23[0]);
LABEL_21:
        sub_1000D11E0((uint64_t)&__p);
      }
    }
    else if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_20;
    }
    operator delete(v25.__r_.__value_.__l.__data_);
    if ((v24 & 0x80000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_24;
  }
  if (v17 > 0.0 && v17 < 1.0)
  {
    *(double *)(a1 + 208) = *(double *)(a1 + 208) / v17;
    *(double *)(a1 + 224) = *(double *)(a1 + 224) / v17;
    *(double *)(a1 + 240) = *(double *)(a1 + 240) / v17;
    *(double *)(a1 + 256) = *(double *)(a1 + 256) / v17;
  }
  long long v19 = *(_OWORD *)(a1 + 216);
  *a3 = *(_OWORD *)(a1 + 200);
  a3[1] = v19;
  long long v20 = *(_OWORD *)(a1 + 248);
  a3[2] = *(_OWORD *)(a1 + 232);
  a3[3] = v20;
  return result;
}

void sub_1001E3564(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1001E35C0(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[10];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = (std::__shared_weak_count *)a1[7];
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v3 = (std::__shared_weak_count *)a1[7];
    if (!v3) {
      goto LABEL_7;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
LABEL_7:
  uint64_t v4 = (std::__shared_weak_count *)a1[4];
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    double v5 = (std::__shared_weak_count *)a1[1];
    if (!v5) {
      return a1;
    }
  }
  else
  {
    double v5 = (std::__shared_weak_count *)a1[1];
    if (!v5) {
      return a1;
    }
  }
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_1001E372C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1001E37A4()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void *sub_1001E385C(void *a1)
{
  uint64_t v2 = a1[4];
  a1[4] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = a1[3];
  a1[3] = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = a1[2];
  a1[2] = 0;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
  }
  double v5 = (std::__shared_weak_count *)a1[1];
  if (!v5 || atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_1001E3968()
{
  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x50uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003F5E90;
  strcpy(v1.__r_.__value_.__l.__data_, "LocalizerType not ported to generate ParticleGenerator initialization step");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_100453630;
  sub_10018E868((uint64_t)v0);
  sub_1000CC8F4(&v2, (uint64_t)"auto newParticleGeneratorImpl(const LocalizerSpec &, const Params &, const Universal2d *)::(anonymous class)::operator()() const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/particle_generator.cpp", 34, (uint64_t)v0);
}

void sub_1001E3B84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, std::runtime_error a20,std::runtime_error a21,_UNKNOWN **a22,uint64_t a23)
{
  std::runtime_error::~runtime_error(v23);
  a22 = &off_100451DC0;
  if (a23 && (*(unsigned int (**)(uint64_t))(*(void *)a23 + 32))(a23)) {
    a23 = 0;
  }
  std::runtime_error::~runtime_error(&a21);
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a20);
  if (a19 < 0) {
    operator delete(a14);
  }
  __cxa_free_exception(v23);
  _Unwind_Resume(a1);
}

void sub_1001E3C64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v19);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x1001E3C54);
}

void sub_1001E3C88(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1001E3CA0()
{
}

void sub_1001E3F2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1001E3FEC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001E3F40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_1001E3FEC((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_1001E3F5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001E3FEC(uint64_t a1)
{
  std::runtime_error v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_1001E4098()
{
}

void sub_1001E40F4()
{
}

void sub_1001E4108(std::string *a1@<X8>)
{
  sub_1000CD728((const char *)((unint64_t)"P13LocalizerType" & 0x7FFFFFFFFFFFFFFFLL), &v11);
  if ((v11.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    v2.__i_ = (std::__wrap_iter<const char *>::iterator_type)&v11;
  }
  else {
    v2.__i_ = (std::__wrap_iter<const char *>::iterator_type)v11.__r_.__value_.__r.__words[0];
  }
  std::string::insert(&v11, v2, 91);
  std::string v12 = v11;
  memset(&v11, 0, sizeof(v11));
  uint64_t v3 = std::string::append(&v12, "] = ");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  v13.__r_.__value_.__r.__words[2] = v3->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v13.__r_.__value_.__l.__data_ = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  sub_1001E434C();
  if ((v10 & 0x80u) == 0) {
    double v5 = __p;
  }
  else {
    double v5 = (void **)__p[0];
  }
  if ((v10 & 0x80u) == 0) {
    std::string::size_type v6 = v10;
  }
  else {
    std::string::size_type v6 = (std::string::size_type)__p[1];
  }
  double v7 = std::string::append(&v13, (const std::string::value_type *)v5, v6);
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  v14.__r_.__value_.__r.__words[2] = v7->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v14.__r_.__value_.__l.__data_ = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  std::string::push_back(&v14, 10);
  *a1 = v14;
  memset(&v14, 0, sizeof(v14));
  if ((char)v10 < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_17;
    }
  }
  else if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v13.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_13:
    if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_18:
    operator delete(v11.__r_.__value_.__l.__data_);
    return;
  }
LABEL_17:
  operator delete(v12.__r_.__value_.__l.__data_);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_18;
  }
}

void sub_1001E4288(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0)
  {
    operator delete(*(void **)(v33 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a33 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_6:
  }
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001E434C()
{
  sub_1000CD96C((uint64_t)v1);
  std::ostream::operator<<();
  std::stringbuf::str();
  if (v2 < 0) {
    operator delete((void *)v1[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_1001E4480(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001E4494()
{
}

void sub_1001E4580(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    sub_1003A3598(v1);
  }
  __cxa_rethrow();
}

void sub_1001E4598(_Unwind_Exception *a1)
{
}

void sub_1001E45B0()
{
}

uint64_t sub_1001E45C4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 24))();
  }
  return result;
}

uint64_t sub_1001E45F4()
{
  return 0;
}

uint64_t sub_1001E45FC()
{
  return 0;
}

uint64_t sub_1001E4604()
{
  return 0;
}

void *sub_1001E460C(void *a1)
{
  char v2 = (void *)*a1;
  if (*a1)
  {
    uint64_t v3 = (void *)a1[1];
    long long v4 = (void *)*a1;
    if (v3 != v2)
    {
      do
      {
        uint64_t v6 = *--v3;
        uint64_t v5 = v6;
        *uint64_t v3 = 0;
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
        }
      }
      while (v3 != v2);
      long long v4 = (void *)*a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void *sub_1001E469C(void *a1, uint64_t *a2)
{
  uint64_t v3 = a1[1] - *a1;
  uint64_t v4 = v3 >> 3;
  unint64_t v5 = (v3 >> 3) + 1;
  if (v5 >> 61) {
    sub_1000A9108();
  }
  uint64_t v7 = a1[2] - *a1;
  if (v7 >> 2 > v5) {
    unint64_t v5 = v7 >> 2;
  }
  if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFF8) {
    unint64_t v8 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v8 = v5;
  }
  if (v8)
  {
    if (v8 >> 61) {
      sub_1000A6A10();
    }
    double v9 = (char *)operator new(8 * v8);
  }
  else
  {
    double v9 = 0;
  }
  unsigned __int8 v10 = &v9[8 * v4];
  std::string v11 = &v9[8 * v8];
  uint64_t v12 = *a2;
  *a2 = 0;
  *(void *)unsigned __int8 v10 = v12;
  std::string v13 = v10 + 8;
  std::string v14 = (char *)*a1;
  double v15 = (char *)a1[1];
  if (v15 == (char *)*a1)
  {
    *a1 = v10;
    a1[1] = v13;
    a1[2] = v11;
    if (!v15) {
      return v13;
    }
    goto LABEL_26;
  }
  unint64_t v16 = (unint64_t)&v15[-*a1 - 8];
  if (v16 < 0x78 || &v15[-(v16 & 0xFFFFFFFFFFFFFFF8) - 8] < v10 && &v9[v3 - (v16 & 0xFFFFFFFFFFFFFFF8) - 8] < v15) {
    goto LABEL_34;
  }
  uint64_t v17 = (v16 >> 3) + 1;
  uint64_t v18 = 8 * (v17 & 0x3FFFFFFFFFFFFFFCLL);
  v10 -= v18;
  long long v19 = &v15[-v18];
  long long v20 = v15 - 16;
  double v21 = &v9[8 * v4 - 16];
  uint64_t v22 = v17 & 0x3FFFFFFFFFFFFFFCLL;
  do
  {
    long long v24 = *((_OWORD *)v20 - 1);
    long long v23 = *(_OWORD *)v20;
    *((_OWORD *)v20 - 1) = 0uLL;
    *(_OWORD *)long long v20 = 0uLL;
    *((_OWORD *)v21 - 1) = v24;
    *(_OWORD *)double v21 = v23;
    v20 -= 32;
    v21 -= 32;
    v22 -= 4;
  }
  while (v22);
  double v15 = v19;
  if (v17 != (v17 & 0x3FFFFFFFFFFFFFFCLL))
  {
LABEL_34:
    do
    {
      uint64_t v25 = *((void *)v15 - 1);
      v15 -= 8;
      *(void *)double v15 = 0;
      *((void *)v10 - 1) = v25;
      v10 -= 8;
    }
    while (v15 != v14);
  }
  std::string v26 = (char *)*a1;
  double v15 = (char *)a1[1];
  *a1 = v10;
  a1[1] = v13;
  a1[2] = v11;
  if (v15 != v26)
  {
    do
    {
      uint64_t v28 = *((void *)v15 - 1);
      v15 -= 8;
      uint64_t v27 = v28;
      *(void *)double v15 = 0;
      if (v28) {
        (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
      }
    }
    while (v15 != v26);
    double v15 = v26;
  }
  if (v15) {
LABEL_26:
  }
    operator delete(v15);
  return v13;
}

void sub_1001E486C()
{
}

void sub_1001E4AF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1001E3FEC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001E4B0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_1001E3FEC((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_1001E4B28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001E4BC4(uint64_t *a1)
{
  uint64_t result = *a1;
  *a1 = 0;
  return result;
}

uint64_t sub_1001E4BD4()
{
  uint64_t result = *v0;
  uint64_t *v0 = 0;
  return result;
}

void sub_1001E4BE0()
{
  *(void *)uint64_t v0 = v2;
  *(_DWORD *)(v0 + 8) = v1;
}

void sub_1001E4BEC()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1001E4C64()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_1001E4CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 56))(a3);
  *(void *)a4 = off_10045DA98;
  *(void *)(a4 + 8) = 0;
  double v9 = (float64x2_t *)(a4 + 8);
  *(void *)(a4 + 16) = 0;
  *(unsigned char *)(a4 + 24) &= 0xFCu;
  if (!result)
  {
    v9->f64[0] = 0.0;
    *(void *)(a4 + 16) = 0;
    return result;
  }
  unsigned __int8 v10 = (unsigned char *)(a1 + 40);
  if (!*(unsigned char *)(a1 + 40))
  {
    sub_1001AA12C((uint64_t)v18, result + 1624);
    sub_100072B90(&v16);
    sub_100148578((uint64_t)v19, (uint64_t)v18, &v16);
    float64_t v11 = v17.f64[0];
    if (*(void *)&v17.f64[0]
      && !atomic_fetch_add((atomic_ullong *volatile)(*(void *)&v17.f64[0] + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      (*(void (**)(float64_t))(**(void **)&v11 + 16))(COERCE_FLOAT64_T(*(void *)&v11));
      std::__shared_weak_count::__release_weak(*(std::__shared_weak_count **)&v11);
      if (*v10) {
        goto LABEL_6;
      }
    }
    else if (*v10)
    {
LABEL_6:
      __n128 v12 = sub_1001E50BC(a1 + 40, (uint64_t)v19);
      std::string v13 = (std::__shared_weak_count *)*((void *)&v22 + 1);
      if (*((void *)&v22 + 1)
        && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v22 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *, __n128))v13->__on_zero_shared)(v13, v12);
        std::__shared_weak_count::__release_weak(v13);
      }
      goto LABEL_12;
    }
    sub_1001AA12C(a1 + 48, (uint64_t)v19);
    __n128 v12 = v21;
    long long v14 = v22;
    __n128 v21 = 0uLL;
    *(__n128 *)(a1 + 80) = v12;
    *(_OWORD *)(a1 + 96) = v14;
    long long v22 = 0uLL;
    *(unsigned char *)(a1 + 40) = 1;
LABEL_12:
    double v15 = (std::__shared_weak_count *)v21.n128_u64[1];
    if (v21.n128_u64[1])
    {
      if (!atomic_fetch_add((atomic_ullong *volatile)(v21.n128_u64[1] + 8), 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *, __n128))v15->__on_zero_shared)(v15, v12);
        std::__shared_weak_count::__release_weak(v15);
      }
    }
    nullsub_15(v19);
    nullsub_15(v18);
  }
  sub_1001E4FB8((void *)a1, a2, (uint64_t)v19);
  sub_1001E4FB8((void *)a1, a3, (uint64_t)&v16);
  float64x2_t *v9 = vsubq_f64(v20, v17);
  nullsub_17(&v16);
  return nullsub_17(v19);
}

void sub_1001E4F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va1, a5);
  va_start(va, a5);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  sub_100148DD8((uint64_t)va1);
  nullsub_15((uint64_t *)va);
  nullsub_17(v5);
  _Unwind_Resume(a1);
}

void sub_1001E4F74(_Unwind_Exception *a1)
{
  nullsub_17(v1);
  _Unwind_Resume(a1);
}

void sub_1001E4F88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  nullsub_17(va);
  nullsub_17(v9);
  _Unwind_Resume(a1);
}

void sub_1001E4FA4(_Unwind_Exception *a1)
{
  nullsub_17(v1);
  _Unwind_Resume(a1);
}

void sub_1001E4FB8(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v9[0] = a2;
  uint64_t v6 = sub_1001E51C8(a1, v9);
  if (v6)
  {
    sub_1001A9C7C(a3, (uint64_t)(v6 + 3));
  }
  else
  {
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 56))(a2);
    sub_1001AA12C((uint64_t)v8, v7 + 1624);
    sub_1001486EC((uint64_t)(a1 + 6), (uint64_t)v8, (uint64_t)v9);
    sub_100148878((uint64_t)v9, a3);
    nullsub_15(v8);
    v9[0] = a2;
    sub_1001E52DC((uint64_t)a1, v9, v9, a3);
  }
}

void sub_1001E5094(_Unwind_Exception *a1)
{
  nullsub_17(v1);
  _Unwind_Resume(a1);
}

void sub_1001E50A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  nullsub_15(va);
  _Unwind_Resume(a1);
}

__n128 sub_1001E50BC(uint64_t a1, uint64_t a2)
{
  sub_10007B704(a1 + 8, a2);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = v4;
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    __n128 result = *(__n128 *)(a2 + 48);
    *(void *)(a2 + 48) = 0;
    *(void *)(a2 + 56) = 0;
    uint64_t v7 = *(std::__shared_weak_count **)(a1 + 64);
    *(__n128 *)(a1 + 56) = result;
    if (!v7) {
      return result;
    }
  }
  else
  {
    __n128 result = *(__n128 *)(a2 + 48);
    *(void *)(a2 + 48) = 0;
    *(void *)(a2 + 56) = 0;
    uint64_t v7 = *(std::__shared_weak_count **)(a1 + 64);
    *(__n128 *)(a1 + 56) = result;
    if (!v7) {
      return result;
    }
  }
  if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  return result;
}

void *sub_1001E51C8(void *a1, uint64_t *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  uint64_t v3 = *a2;
  unint64_t v4 = HIDWORD(*a2);
  unint64_t v5 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ v4);
  unint64_t v6 = 0x9DDFEA08EB382D69
     * ((0x9DDFEA08EB382D69 * (v4 ^ (v5 >> 47) ^ v5)) ^ ((0x9DDFEA08EB382D69 * (v4 ^ (v5 >> 47) ^ v5)) >> 47));
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v2);
  v7.i16[0] = vaddlv_u8(v7);
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v8 = v6;
    if (v6 >= *(void *)&v2) {
      unint64_t v8 = v6 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v8 = v6 & (*(void *)&v2 - 1);
  }
  uint64_t v9 = *(void **)(*a1 + 8 * v8);
  if (!v9) {
    return 0;
  }
  __n128 result = (void *)*v9;
  if (*v9)
  {
    if (v7.u32[0] < 2uLL)
    {
      uint64_t v11 = *(void *)&v2 - 1;
      while (1)
      {
        uint64_t v13 = result[1];
        if (v13 == v6)
        {
          if (result[2] == v3) {
            return result;
          }
        }
        else if ((v13 & v11) != v8)
        {
          return 0;
        }
        __n128 result = (void *)*result;
        if (!result) {
          return result;
        }
      }
    }
    do
    {
      unint64_t v12 = result[1];
      if (v12 == v6)
      {
        if (result[2] == v3) {
          return result;
        }
      }
      else
      {
        if (v12 >= *(void *)&v2) {
          v12 %= *(void *)&v2;
        }
        if (v12 != v8) {
          return 0;
        }
      }
      __n128 result = (void *)*result;
    }
    while (result);
  }
  return result;
}

void *sub_1001E52DC(uint64_t a1, uint64_t *a2, void *a3, uint64_t a4)
{
  uint64_t v8 = *a2;
  unint64_t v9 = HIDWORD(*a2);
  unint64_t v10 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ v9);
  unint64_t v11 = 0x9DDFEA08EB382D69
      * ((0x9DDFEA08EB382D69 * (v9 ^ (v10 >> 47) ^ v10)) ^ ((0x9DDFEA08EB382D69 * (v9 ^ (v10 >> 47) ^ v10)) >> 47));
  unint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    if (v13.u32[0] > 1uLL)
    {
      unint64_t v4 = 0x9DDFEA08EB382D69
         * ((0x9DDFEA08EB382D69 * (v9 ^ (v10 >> 47) ^ v10)) ^ ((0x9DDFEA08EB382D69 * (v9 ^ (v10 >> 47) ^ v10)) >> 47));
      if (v11 >= v12) {
        unint64_t v4 = v11 % v12;
      }
    }
    else
    {
      unint64_t v4 = v11 & (v12 - 1);
    }
    long long v14 = *(void **)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      __n128 result = (void *)*v14;
      if (*v14)
      {
        if (v13.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v17 = result[1];
            if (v17 == v11)
            {
              if (result[2] == v8) {
                return result;
              }
            }
            else if ((v17 & (v12 - 1)) != v4)
            {
              goto LABEL_23;
            }
            __n128 result = (void *)*result;
            if (!result) {
              goto LABEL_23;
            }
          }
        }
        do
        {
          unint64_t v16 = result[1];
          if (v16 == v11)
          {
            if (result[2] == v8) {
              return result;
            }
          }
          else
          {
            if (v16 >= v12) {
              v16 %= v12;
            }
            if (v16 != v4) {
              break;
            }
          }
          __n128 result = (void *)*result;
        }
        while (result);
      }
    }
  }
LABEL_23:
  double v32 = operator new(0x38uLL);
  *double v32 = 0;
  v32[1] = v11;
  unsigned int v32[2] = *a3;
  sub_1001A9C7C((uint64_t)(v32 + 3), a4);
  float v18 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v19 = *(float *)(a1 + 32);
  if (!v12 || (float)(v19 * (float)v12) < v18)
  {
    BOOL v22 = 1;
    if (v12 >= 3) {
      BOOL v22 = (v12 & (v12 - 1)) != 0;
    }
    unint64_t v23 = v22 | (2 * v12);
    unint64_t v24 = vcvtps_u32_f32(v18 / v19);
    if (v23 <= v24) {
      size_t prime = v24;
    }
    else {
      size_t prime = v23;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
    }
    int8x8_t v26 = *(int8x8_t *)(a1 + 8);
    if (prime > *(void *)&v26) {
      goto LABEL_37;
    }
    if (prime < *(void *)&v26)
    {
      unint64_t v27 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(void *)&v26 < 3uLL || (uint8x8_t v28 = (uint8x8_t)vcnt_s8(v26), v28.i16[0] = vaddlv_u8(v28), v28.u32[0] > 1uLL))
      {
        unint64_t v27 = std::__next_prime(v27);
      }
      else
      {
        uint64_t v29 = 1 << -(char)__clz(v27 - 1);
        if (v27 >= 2) {
          unint64_t v27 = v29;
        }
      }
      if (prime <= v27) {
        size_t prime = v27;
      }
      if (prime < *(void *)&v26) {
LABEL_37:
      }
        sub_10006338C(a1, prime);
    }
    unint64_t v12 = *(void *)(a1 + 8);
    unint64_t v30 = v12 - 1;
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12)
      {
        unint64_t v4 = v11 % v12;
        float64x2_t v20 = *(void **)(*(void *)a1 + 8 * (v11 % v12));
        __n128 v21 = v32;
        if (v20) {
          goto LABEL_26;
        }
      }
      else
      {
        unint64_t v4 = v11;
        float64x2_t v20 = *(void **)(*(void *)a1 + 8 * v11);
        __n128 v21 = v32;
        if (v20) {
          goto LABEL_26;
        }
      }
    }
    else
    {
      unint64_t v4 = v30 & v11;
      float64x2_t v20 = *(void **)(*(void *)a1 + 8 * (v30 & v11));
      __n128 v21 = v32;
      if (v20) {
        goto LABEL_26;
      }
    }
LABEL_50:
    *__n128 v21 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v32;
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*v32)
    {
      unint64_t v31 = *(void *)(*v32 + 8);
      if ((v12 & (v12 - 1)) != 0)
      {
        if (v31 >= v12) {
          v31 %= v12;
        }
      }
      else
      {
        v31 &= v12 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v31) = v32;
    }
    goto LABEL_61;
  }
  float64x2_t v20 = *(void **)(*(void *)a1 + 8 * v4);
  __n128 v21 = v32;
  if (!v20) {
    goto LABEL_50;
  }
LABEL_26:
  *__n128 v21 = *v20;
  void *v20 = v32;
LABEL_61:
  __n128 result = v32;
  ++*(void *)(a1 + 24);
  return result;
}

void sub_1001E565C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001E5684((char **)va);
  _Unwind_Resume(a1);
}

void sub_1001E5670(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001E5684((char **)va);
  _Unwind_Resume(a1);
}

char **sub_1001E5684(char **a1)
{
  int8x8_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((unsigned char *)a1 + 16)) {
      nullsub_17(v2 + 24);
    }
    operator delete(v2);
  }
  return a1;
}

void sub_1001E56CC()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1001E5744()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void *sub_1001E57BC(void *a1)
{
  *a1 = off_1004600A0;
  int8x8_t v2 = (void *)a1[6];
  if (v2)
  {
    a1[7] = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)a1[3];
  if (v3)
  {
    do
    {
      unint64_t v4 = (void *)*v3;
      operator delete(v3);
      uint64_t v3 = v4;
    }
    while (v4);
  }
  unint64_t v5 = (void *)a1[1];
  a1[1] = 0;
  if (v5) {
    operator delete(v5);
  }
  return a1;
}

void sub_1001E5834(void *a1)
{
  *a1 = off_1004600A0;
  int8x8_t v2 = (void *)a1[6];
  if (v2)
  {
    a1[7] = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)a1[3];
  if (v3)
  {
    do
    {
      unint64_t v4 = (void *)*v3;
      operator delete(v3);
      uint64_t v3 = v4;
    }
    while (v4);
  }
  unint64_t v5 = (void *)a1[1];
  a1[1] = 0;
  if (v5) {
    operator delete(v5);
  }

  operator delete();
}

BOOL sub_1001E58CC(BOOL result)
{
  if (result) {
    return *(void *)(result + 56) != *(void *)(result + 48);
  }
  return result;
}

uint64_t *sub_1001E58E0(uint64_t a1, int *a2, void *a3)
{
  uint8x8_t v7 = a2 + 2;
  int v6 = *a2;
  int v8 = *a2 >> 31;
  if (v6 >> 31 == v6)
  {
    *(void *)&long long v27 = *(void *)v7;
    int v8 = v6;
  }
  else
  {
    long long v27 = *(_OWORD *)v7;
    int v28 = a2[6];
  }
  int v26 = v8 ^ v6;
  sub_1001E6CFC((uint64_t)v29, &v26, &v26);
  unint64_t v9 = (void *)(a1 + 8);
  __n128 result = sub_1001E74C8(v9, (uint64_t)v29);
  if (result)
  {
    if (*((double *)result + 10) != 0.0)
    {
      unint64_t v12 = (_DWORD *)*a3;
      unint64_t v11 = (_DWORD *)a3[1];
      if (v12 != v11)
      {
        double v13 = 0.0;
        do
        {
          while (1)
          {
            int v14 = *a2;
            int v15 = *a2 >> 31;
            if (v14 >> 31 == v14)
            {
              *(void *)&long long v24 = *(void *)v7;
              int v15 = v14;
            }
            else
            {
              long long v24 = *(_OWORD *)v7;
              int v25 = v7[4];
            }
            int v23 = v15 ^ v14;
            uint64_t v17 = v12 + 2;
            int v16 = *v12;
            int v18 = (int)*v12 >> 31;
            if (v16 >> 31 == v16)
            {
              *(void *)&long long v21 = *v17;
              int v18 = v16;
            }
            else
            {
              long long v19 = *(_OWORD *)v17;
              int v22 = v12[6];
              long long v21 = v19;
            }
            int v20 = v16 ^ v18;
            sub_1001E6CFC((uint64_t)v29, &v23, &v20);
            __n128 result = sub_1001E74C8(v9, (uint64_t)v29);
            if (!result) {
              break;
            }
            double v13 = v13 + *((double *)result + 10);
            v12 += 52;
            if (v12 == v11) {
              return result;
            }
          }
          double v13 = v13 + 0.0;
          v12 += 52;
        }
        while (v12 != v11);
      }
    }
  }
  return result;
}

void sub_1001E5ADC(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3 = *a1;
  unint64_t v4 = (void *)a1[1];
  if ((void *)((char *)v4 - *a1) == (void *)16)
  {
    *a2 = *(void *)v3;
    uint64_t v5 = *(void *)(v3 + 8);
    a2[1] = v5;
    if (v5) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
    }
    return;
  }
  int v6 = operator new(0x60uLL);
  v6[1] = 0;
  v6[2] = 0;
  *int v6 = off_1004600F0;
  v6[3] = off_1004600A0;
  *((_OWORD *)v6 + 2) = 0u;
  *((_OWORD *)v6 + 3) = 0u;
  *((_DWORD *)v6 + 16) = 1065353216;
  v6[10] = 0;
  v6[11] = 0;
  v6[9] = 0;
  *a2 = (uint64_t)(v6 + 3);
  a2[1] = (uint64_t)v6;
  uint64_t v166 = a2;
  v167 = v4;
  v196 = 0;
  v197 = 0;
  v198 = 0;
  v194 = 0;
  uint64_t v195 = 0;
  v193 = &v194;
  if ((void *)v3 == v4)
  {
    unint64_t v135 = 0;
    long long v205 = 0uLL;
    unsigned int v134 = &v194;
    *(void *)&long long v206 = 0;
    goto LABEL_195;
  }
  unsigned int v175 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  unsigned int v10 = 0;
  unsigned int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  unsigned int v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v176 = 0;
  uint64_t v177 = 0;
  uint64_t v179 = 0;
  uint64_t v180 = 0;
  uint64_t v178 = 0;
  int v18 = (void *)v3;
  while (2)
  {
    uint64_t v168 = v18;
    long long v19 = (void *)*v18;
    int v20 = (uint64_t *)v19[3];
    unsigned int v182 = v3;
    unsigned int v184 = v12;
    unsigned int v188 = v7;
    unsigned int v190 = v11;
    unsigned int v192 = v10;
    unsigned int v172 = v14;
    unsigned int v173 = v13;
    unsigned int v170 = v16;
    unsigned int v171 = v15;
    unsigned int v169 = v17;
    unsigned int v186 = v9;
    if (v20)
    {
      while (1)
      {
        while (1)
        {
          int v24 = *((_DWORD *)v20 + 4);
          int v25 = v24;
          if (v24 >> 31 != v24)
          {
            uint64_t v207 = v20[4];
            int v208 = *((_DWORD *)v20 + 10);
            int v25 = v24 >> 31;
          }
          uint64_t v26 = v9;
          uint64_t v27 = v8;
          int v28 = *((_DWORD *)v20 + 12);
          int v29 = v28;
          if (v28 >> 31 != v28)
          {
            *(void *)&long long v205 = v20[8];
            DWORD2(v205) = *((_DWORD *)v20 + 18);
            int v29 = v28 >> 31;
          }
          uint64_t v30 = v20[3];
          int v31 = v25 ^ v24;
          uint64_t v32 = v20[7];
          int v33 = v29 ^ v28;
          long long v206 = *((_OWORD *)v20 + 5);
          double v34 = v197;
          if (v197 >= v198) {
            break;
          }
          if (v31 >> 31 == v31)
          {
            *((void *)v197 + 1) = v30;
            *(_DWORD *)double v34 = 0;
            int v35 = v33 >> 31;
            if (v33 >> 31 == v33) {
              goto LABEL_32;
            }
          }
          else
          {
            uint64_t v48 = v207;
            *((void *)v197 + 1) = v30;
            *((void *)v34 + 2) = v48;
            *((_DWORD *)v34 + 6) = v208;
            *(_DWORD *)double v34 = (v31 >> 31) ^ v31;
            int v35 = v33 >> 31;
            if (v33 >> 31 == v33)
            {
LABEL_32:
              *((void *)v34 + 5) = v32;
              int v35 = v29 ^ v28;
              goto LABEL_11;
            }
          }
          uint64_t v23 = v205;
          *((void *)v34 + 5) = v32;
          *((void *)v34 + 6) = v23;
          *((_DWORD *)v34 + 14) = DWORD2(v205);
LABEL_11:
          unsigned int v11 = v190;
          uint64_t v9 = v26;
          *((_DWORD *)v34 + 8) = v35 ^ v33;
          *((_OWORD *)v34 + 4) = v206;
          uint64_t v8 = v27;
          v197 = v34 + 80;
          int v20 = (uint64_t *)*v20;
          unint64_t v3 = v182;
          uint64_t v12 = v184;
          if (!v20) {
            goto LABEL_49;
          }
        }
        double v36 = v196;
        unint64_t v37 = 0xCCCCCCCCCCCCCCCDLL * ((v197 - v196) >> 4);
        unint64_t v38 = v37 + 1;
        if (v37 + 1 > 0x333333333333333) {
          sub_1000A9108();
        }
        uint64_t v39 = v27;
        if (0x999999999999999ALL * ((v198 - v196) >> 4) > v38) {
          unint64_t v38 = 0x999999999999999ALL * ((v198 - v196) >> 4);
        }
        if (0xCCCCCCCCCCCCCCCDLL * ((v198 - v196) >> 4) >= 0x199999999999999) {
          unint64_t v40 = 0x333333333333333;
        }
        else {
          unint64_t v40 = v38;
        }
        if (v40)
        {
          if (v40 > 0x333333333333333) {
            sub_1000A6A10();
          }
          uint64_t v41 = v32;
          unint64_t v42 = v40;
          double v43 = operator new(80 * v40);
          uint64_t v32 = v41;
          unint64_t v40 = v42;
          uint64_t v44 = (uint64_t)&v43[5 * v37];
          int v45 = v31 >> 31;
          if (v31 >> 31 == v31)
          {
LABEL_29:
            *(void *)(v44 + 8) = v30;
            *(_DWORD *)uint64_t v44 = 0;
            int v46 = v33 >> 31;
            if (v33 >> 31 == v33) {
              goto LABEL_35;
            }
            goto LABEL_30;
          }
        }
        else
        {
          double v43 = 0;
          uint64_t v44 = 16 * ((v197 - v196) >> 4);
          int v45 = v31 >> 31;
          if (v31 >> 31 == v31) {
            goto LABEL_29;
          }
        }
        uint64_t v49 = v207;
        *(void *)(v44 + 8) = v30;
        *(void *)(v44 + 16) = v49;
        *(_DWORD *)(v44 + 24) = v208;
        *(_DWORD *)uint64_t v44 = v45 ^ v31;
        int v46 = v33 >> 31;
        if (v33 >> 31 == v33)
        {
LABEL_35:
          *(void *)(v44 + 40) = v32;
          int v46 = v33;
          goto LABEL_36;
        }
LABEL_30:
        uint64_t v47 = v205;
        *(void *)(v44 + 40) = v32;
        *(void *)(v44 + 48) = v47;
        *(_DWORD *)(v44 + 56) = DWORD2(v205);
LABEL_36:
        unsigned int v11 = v190;
        *(_DWORD *)(v44 + 32) = v46 ^ v33;
        v43[5 * v37 + 4] = v206;
        uint64_t v50 = v44;
        uint64_t v8 = v39;
        uint64_t v9 = v186;
        if (v34 != v36)
        {
          uint64_t v51 = 0;
          do
          {
            double v56 = (void *)(v44 + v51 - 72);
            int v57 = *(_DWORD *)&v34[v51 - 80];
            int v58 = &v34[v51 - 72];
            if (v57 == v57 >> 31)
            {
              void *v56 = *(void *)v58;
              int v59 = v57;
            }
            else
            {
              long long v60 = *(_OWORD *)v58;
              *(_DWORD *)(v44 + v51 - 56) = *(_DWORD *)&v34[v51 - 56];
              *(_OWORD *)double v56 = v60;
              int v59 = *(_DWORD *)&v34[v51 - 80];
              int v57 = v59 >> 31;
            }
            *(_DWORD *)(v44 + v51 - 80) = v59 ^ v57;
            double v61 = (void *)(v44 + v51 - 40);
            int v54 = *(_DWORD *)&v34[v51 - 48];
            double v62 = &v34[v51 - 40];
            if (v54 == v54 >> 31)
            {
              *double v61 = *(void *)v62;
              int v53 = v54;
            }
            else
            {
              long long v52 = *(_OWORD *)v62;
              *(_DWORD *)(v44 + v51 - 24) = *(_DWORD *)&v34[v51 - 24];
              *(_OWORD *)double v61 = v52;
              int v53 = *(_DWORD *)&v34[v51 - 48];
              int v54 = v53 >> 31;
            }
            uint64_t v55 = v44 + v51;
            *(_DWORD *)(v55 - 48) = v53 ^ v54;
            *(_OWORD *)(v55 - 16) = *(_OWORD *)&v34[v51 - 16];
            v51 -= 80;
          }
          while (&v34[v51] != v36);
          double v34 = v196;
          uint64_t v50 = v44 + v51;
        }
        uint64_t v63 = v44 + 80;
        v196 = (char *)v50;
        v198 = (char *)&v43[5 * v40];
        if (v34) {
          operator delete(v34);
        }
        uint64_t v7 = v188;
        unsigned int v14 = v172;
        uint64_t v13 = v173;
        uint64_t v16 = v170;
        uint64_t v15 = v171;
        uint64_t v17 = v169;
        v197 = (char *)v63;
        int v20 = (uint64_t *)*v20;
        unint64_t v3 = v182;
        uint64_t v12 = v184;
        if (!v20)
        {
LABEL_49:
          uint64_t v21 = *(void *)(*v168 + 48);
          uint64_t v181 = *(void *)(*v168 + 56);
          uint64_t v22 = v7;
          if (v21 == v181) {
            goto LABEL_6;
          }
          goto LABEL_50;
        }
      }
    }
    uint64_t v21 = v19[6];
    uint64_t v181 = v19[7];
    uint64_t v22 = v7;
    if (v21 == v181) {
      goto LABEL_6;
    }
LABEL_50:
    uint64_t v185 = v195;
    do
    {
      uint64_t v64 = v194;
      if (!v194)
      {
        unsigned int v189 = v22;
        unsigned int v191 = v11;
        unsigned int v187 = v9;
        unsigned int v183 = v8;
        int v108 = (void *)v3;
        uint64_t v109 = v17;
        uint64_t v110 = v16;
        uint64_t v111 = v15;
        uint64_t v112 = v13;
        uint64_t v113 = v12;
        char v114 = &v194;
        double v67 = &v194;
        goto LABEL_148;
      }
      int v65 = *(_DWORD *)v21;
      int v66 = *(int *)v21 >> 31;
      do
      {
        while (1)
        {
          double v67 = (void **)v64;
          int v68 = *((_DWORD *)v64 + 8);
          int v69 = v68 >> 31;
          int v70 = v68;
          if (v68 >> 31 != v68)
          {
            uint64_t v22 = *((unsigned __int8 *)v67 + 48);
            uint64_t v8 = *((unsigned __int8 *)v67 + 49);
            uint64_t v9 = *((unsigned __int8 *)v67 + 50);
            unsigned int v192 = *((unsigned __int8 *)v67 + 51);
            unsigned int v11 = *((unsigned __int8 *)v67 + 52);
            uint64_t v12 = *((unsigned __int8 *)v67 + 53);
            uint64_t v13 = *((unsigned __int8 *)v67 + 54);
            unsigned int v14 = *((unsigned __int8 *)v67 + 55);
            uint64_t v15 = *((unsigned __int8 *)v67 + 56);
            uint64_t v16 = *((unsigned __int8 *)v67 + 57);
            uint64_t v17 = *((unsigned __int8 *)v67 + 58);
            int v70 = v68 >> 31;
            unint64_t v3 = *((unsigned __int8 *)v67 + 59);
          }
          unint64_t v71 = (unint64_t)v67[5];
          unint64_t v72 = HIBYTE(v71);
          int v73 = v70 ^ v68;
          int v74 = v73 >> 31;
          if (v66 == v65) {
            break;
          }
          if (v74 != v73)
          {
            unsigned int v89 = *(unsigned __int8 *)(v21 + 8);
            if (v89 < v71) {
              goto LABEL_53;
            }
            if (v89 <= v71)
            {
              unsigned int v90 = *(unsigned __int8 *)(v21 + 9);
              if (v90 < BYTE1(v71)) {
                goto LABEL_53;
              }
              if (v90 <= BYTE1(v71))
              {
                unsigned int v91 = *(unsigned __int8 *)(v21 + 10);
                if (v91 < BYTE2(v71)) {
                  goto LABEL_53;
                }
                if (v91 <= BYTE2(v71))
                {
                  unsigned int v92 = *(unsigned __int8 *)(v21 + 11);
                  if (v92 < BYTE3(v71)) {
                    goto LABEL_53;
                  }
                  if (v92 <= BYTE3(v71))
                  {
                    unsigned int v93 = *(unsigned __int8 *)(v21 + 12);
                    if (v93 < BYTE4(v71)) {
                      goto LABEL_53;
                    }
                    if (v93 <= BYTE4(v71))
                    {
                      unsigned int v94 = *(unsigned __int8 *)(v21 + 13);
                      if (v94 < BYTE5(v71)) {
                        goto LABEL_53;
                      }
                      if (v94 <= BYTE5(v71))
                      {
                        unsigned int v95 = *(unsigned __int8 *)(v21 + 14);
                        if (v95 < BYTE6(v71)) {
                          goto LABEL_53;
                        }
                        if (v95 <= BYTE6(v71))
                        {
                          unsigned int v96 = *(unsigned __int8 *)(v21 + 15);
                          if (v96 < v72) {
                            goto LABEL_53;
                          }
                          if (v96 <= v72)
                          {
                            unsigned int v97 = *(unsigned __int8 *)(v21 + 16);
                            if (v97 < v22) {
                              goto LABEL_53;
                            }
                            if (v22 >= v97)
                            {
                              unsigned int v98 = *(unsigned __int8 *)(v21 + 17);
                              if (v98 < v8) {
                                goto LABEL_53;
                              }
                              if (v8 >= v98)
                              {
                                unsigned int v99 = *(unsigned __int8 *)(v21 + 18);
                                if (v99 < v9) {
                                  goto LABEL_53;
                                }
                                if (v9 >= v99)
                                {
                                  unsigned int v100 = *(unsigned __int8 *)(v21 + 19);
                                  if (v100 < v192) {
                                    goto LABEL_53;
                                  }
                                  if (v192 >= v100)
                                  {
                                    unsigned int v101 = *(unsigned __int8 *)(v21 + 20);
                                    if (v101 < v11) {
                                      goto LABEL_53;
                                    }
                                    if (v11 >= v101)
                                    {
                                      unsigned int v102 = *(unsigned __int8 *)(v21 + 21);
                                      if (v102 < v12) {
                                        goto LABEL_53;
                                      }
                                      if (v12 >= v102)
                                      {
                                        unsigned int v103 = *(unsigned __int8 *)(v21 + 22);
                                        if (v103 < v13) {
                                          goto LABEL_53;
                                        }
                                        if (v13 >= v103)
                                        {
                                          unsigned int v104 = *(unsigned __int8 *)(v21 + 23);
                                          if (v104 < v14) {
                                            goto LABEL_53;
                                          }
                                          if (v14 >= v104)
                                          {
                                            unsigned int v105 = *(unsigned __int8 *)(v21 + 24);
                                            if (v105 < v15) {
                                              goto LABEL_53;
                                            }
                                            if (v15 >= v105)
                                            {
                                              unsigned int v106 = *(unsigned __int8 *)(v21 + 25);
                                              if (v106 < v16) {
                                                goto LABEL_53;
                                              }
                                              if (v16 >= v106)
                                              {
                                                unsigned int v107 = *(unsigned __int8 *)(v21 + 26);
                                                if (v107 < v17
                                                  || v17 >= v107
                                                  && *(unsigned __int8 *)(v21 + 27) < v3)
                                                {
                                                  goto LABEL_53;
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          LODWORD(v180) = *(unsigned __int8 *)(v21 + 17);
          HIDWORD(v180) = *(unsigned __int8 *)(v21 + 16);
          LODWORD(v179) = *(unsigned __int8 *)(v21 + 19);
          HIDWORD(v179) = *(unsigned __int8 *)(v21 + 18);
          LODWORD(v178) = *(unsigned __int8 *)(v21 + 21);
          HIDWORD(v178) = *(unsigned __int8 *)(v21 + 20);
          LODWORD(v177) = *(unsigned __int8 *)(v21 + 23);
          HIDWORD(v177) = *(unsigned __int8 *)(v21 + 22);
          LODWORD(v176) = *(unsigned __int8 *)(v21 + 25);
          HIDWORD(v176) = *(unsigned __int8 *)(v21 + 24);
          unsigned __int8 v174 = *(unsigned char *)(v21 + 27);
          unsigned int v175 = *(unsigned __int8 *)(v21 + 26);
          unint64_t v75 = *(void *)(v21 + 8);
          int v76 = v66 ^ v65;
          int v77 = (v66 ^ v65) >> 31;
          if (v69 == v68)
          {
LABEL_142:
            if (v77 == v76 && v71 >= v75) {
              goto LABEL_176;
            }
            goto LABEL_144;
          }
LABEL_60:
          if (v77 == v76) {
            goto LABEL_176;
          }
          if (v71 >= v75)
          {
            if (v71 > v75) {
              goto LABEL_176;
            }
            if (BYTE1(v71) >= BYTE1(v75))
            {
              if (BYTE1(v71) > BYTE1(v75)) {
                goto LABEL_176;
              }
              if (BYTE2(v71) >= BYTE2(v75))
              {
                if (BYTE2(v71) > BYTE2(v75)) {
                  goto LABEL_176;
                }
                if (BYTE3(v71) >= BYTE3(v75))
                {
                  if (BYTE3(v71) > BYTE3(v75)) {
                    goto LABEL_176;
                  }
                  if (BYTE4(v71) >= BYTE4(v75))
                  {
                    if (BYTE4(v71) > BYTE4(v75)) {
                      goto LABEL_176;
                    }
                    if (BYTE5(v71) >= BYTE5(v75))
                    {
                      if (BYTE5(v71) > BYTE5(v75)) {
                        goto LABEL_176;
                      }
                      if (BYTE6(v71) >= BYTE6(v75))
                      {
                        if (BYTE6(v71) > BYTE6(v75)) {
                          goto LABEL_176;
                        }
                        if (v72 >= HIBYTE(v75))
                        {
                          if (v72 > HIBYTE(v75)) {
                            goto LABEL_176;
                          }
                          unsigned int v78 = *((unsigned __int8 *)v67 + 48);
                          if (v78 >= HIDWORD(v180))
                          {
                            if (HIDWORD(v180) < v78) {
                              goto LABEL_176;
                            }
                            unsigned int v79 = *((unsigned __int8 *)v67 + 49);
                            if (v79 >= v180)
                            {
                              if (v180 < v79) {
                                goto LABEL_176;
                              }
                              unsigned int v80 = *((unsigned __int8 *)v67 + 50);
                              if (v80 >= HIDWORD(v179))
                              {
                                if (HIDWORD(v179) < v80) {
                                  goto LABEL_176;
                                }
                                unsigned int v81 = *((unsigned __int8 *)v67 + 51);
                                if (v81 >= v179)
                                {
                                  if (v179 < v81) {
                                    goto LABEL_176;
                                  }
                                  unsigned int v82 = *((unsigned __int8 *)v67 + 52);
                                  if (v82 >= HIDWORD(v178))
                                  {
                                    if (HIDWORD(v178) < v82) {
                                      goto LABEL_176;
                                    }
                                    unsigned int v83 = *((unsigned __int8 *)v67 + 53);
                                    if (v83 >= v178)
                                    {
                                      if (v178 < v83) {
                                        goto LABEL_176;
                                      }
                                      unsigned int v84 = *((unsigned __int8 *)v67 + 54);
                                      if (v84 >= HIDWORD(v177))
                                      {
                                        if (HIDWORD(v177) < v84) {
                                          goto LABEL_176;
                                        }
                                        unsigned int v85 = *((unsigned __int8 *)v67 + 55);
                                        if (v85 >= v177)
                                        {
                                          if (v177 < v85) {
                                            goto LABEL_176;
                                          }
                                          unsigned int v86 = *((unsigned __int8 *)v67 + 56);
                                          if (v86 >= HIDWORD(v176))
                                          {
                                            if (HIDWORD(v176) < v86) {
                                              goto LABEL_176;
                                            }
                                            unsigned int v87 = *((unsigned __int8 *)v67 + 57);
                                            if (v87 >= v176)
                                            {
                                              if (v176 < v87) {
                                                goto LABEL_176;
                                              }
                                              unsigned int v88 = *((unsigned __int8 *)v67 + 58);
                                              if (v88 >= v175
                                                && (v175 < v88 || *((unsigned __int8 *)v67 + 59) >= v174))
                                              {
                                                goto LABEL_176;
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
LABEL_144:
          uint64_t v64 = v67[1];
          if (!v64)
          {
            unsigned int v189 = v22;
            unsigned int v191 = v11;
            unsigned int v187 = v9;
            unsigned int v183 = v8;
            int v108 = (void *)v3;
            uint64_t v109 = v17;
            uint64_t v110 = v16;
            uint64_t v111 = v15;
            uint64_t v112 = v13;
            uint64_t v113 = v12;
            char v114 = v67 + 1;
            goto LABEL_148;
          }
        }
        if (v74 == v73 && *(void *)(v21 + 8) >= v71)
        {
          unint64_t v75 = *(void *)(v21 + 8);
          int v76 = 0;
          int v77 = 0;
          if (v69 == v68) {
            goto LABEL_142;
          }
          goto LABEL_60;
        }
LABEL_53:
        uint64_t v64 = *v67;
      }
      while (*v67);
      unsigned int v189 = v22;
      unsigned int v191 = v11;
      unsigned int v187 = v9;
      unsigned int v183 = v8;
      int v108 = (void *)v3;
      uint64_t v109 = v17;
      uint64_t v110 = v16;
      uint64_t v111 = v15;
      uint64_t v112 = v13;
      uint64_t v113 = v12;
      char v114 = v67;
LABEL_148:
      uint64_t v115 = operator new(0x40uLL);
      unsigned int v116 = v115 + 5;
      v118 = (void *)(v21 + 8);
      int v117 = *(_DWORD *)v21;
      int v119 = *(int *)v21 >> 31;
      if (v117 >> 31 == v117)
      {
        *unsigned int v116 = *v118;
        int v119 = v117;
      }
      else
      {
        long long v120 = *(_OWORD *)v118;
        *((_DWORD *)v115 + 14) = *(_DWORD *)(v21 + 24);
        *(_OWORD *)unsigned int v116 = v120;
      }
      *((_DWORD *)v115 + 8) = v119 ^ v117;
      *uint64_t v115 = 0;
      v115[1] = 0;
      v115[2] = v67;
      *char v114 = v115;
      if (*v193)
      {
        v193 = (void **)*v193;
        uint64_t v115 = (void *)*v114;
      }
      int v121 = v194;
      BOOL v153 = v115 == v194;
      *((unsigned char *)v115 + 24) = v115 == v194;
      uint64_t v12 = v113;
      uint64_t v13 = v112;
      uint64_t v15 = v111;
      uint64_t v16 = v110;
      uint64_t v17 = v109;
      unint64_t v3 = (unint64_t)v108;
      uint64_t v8 = v183;
      uint64_t v9 = v187;
      uint64_t v22 = v189;
      unsigned int v11 = v191;
      if (!v153)
      {
        do
        {
          uint64_t v122 = v115[2];
          if (*(unsigned char *)(v122 + 24)) {
            break;
          }
          uint64_t v123 = *(void **)(v122 + 16);
          uint64_t v124 = *v123;
          if (*v123 == v122)
          {
            uint64_t v127 = v123[1];
            if (!v127 || (v128 = *(unsigned __int8 *)(v127 + 24), uint64_t v125 = (unsigned char *)(v127 + 24), v128))
            {
              if (*(void **)v122 == v115)
              {
                *(unsigned char *)(v122 + 24) = 1;
                *((unsigned char *)v123 + 24) = 0;
                uint64_t v131 = *(void *)(v122 + 8);
                *uint64_t v123 = v131;
                if (v131) {
                  goto LABEL_168;
                }
              }
              else
              {
                v129 = *(uint64_t **)(v122 + 8);
                uint64_t v130 = *v129;
                *(void *)(v122 + 8) = *v129;
                if (v130)
                {
                  *(void *)(v130 + 16) = v122;
                  uint64_t v123 = *(void **)(v122 + 16);
                }
                v129[2] = (uint64_t)v123;
                *(void *)(*(void *)(v122 + 16) + 8 * (**(void **)(v122 + 16) != v122)) = v129;
                uint64_t *v129 = v122;
                *(void *)(v122 + 16) = v129;
                uint64_t v123 = (void *)v129[2];
                uint64_t v122 = *v123;
                *((unsigned char *)v129 + 24) = 1;
                *((unsigned char *)v123 + 24) = 0;
                uint64_t v131 = *(void *)(v122 + 8);
                *uint64_t v123 = v131;
                if (v131) {
LABEL_168:
                }
                  *(void *)(v131 + 16) = v123;
              }
              *(void *)(v122 + 16) = v123[2];
              *(void *)(v123[2] + 8 * (*(void *)v123[2] != (void)v123)) = v122;
              *(void *)(v122 + 8) = v123;
LABEL_174:
              v123[2] = v122;
              break;
            }
          }
          else if (!v124 || (v126 = *(unsigned __int8 *)(v124 + 24), uint64_t v125 = (unsigned char *)(v124 + 24), v126))
          {
            if (*(void **)v122 == v115)
            {
              uint64_t v133 = v115[1];
              *(void *)uint64_t v122 = v133;
              if (v133)
              {
                *(void *)(v133 + 16) = v122;
                uint64_t v123 = *(void **)(v122 + 16);
              }
              v115[2] = v123;
              *(void *)(*(void *)(v122 + 16) + 8 * (**(void **)(v122 + 16) != v122)) = v115;
              v115[1] = v122;
              *(void *)(v122 + 16) = v115;
              uint64_t v123 = (void *)v115[2];
              *((unsigned char *)v115 + 24) = 1;
              *((unsigned char *)v123 + 24) = 0;
              uint64_t v122 = v123[1];
              uint64_t v132 = *(void **)v122;
              v123[1] = *(void *)v122;
              if (v132) {
LABEL_172:
              }
                v132[2] = v123;
            }
            else
            {
              *(unsigned char *)(v122 + 24) = 1;
              *((unsigned char *)v123 + 24) = 0;
              uint64_t v122 = v123[1];
              uint64_t v132 = *(void **)v122;
              v123[1] = *(void *)v122;
              if (v132) {
                goto LABEL_172;
              }
            }
            *(void *)(v122 + 16) = v123[2];
            *(void *)(v123[2] + 8 * (*(void *)v123[2] != (void)v123)) = v122;
            *(void *)uint64_t v122 = v123;
            goto LABEL_174;
          }
          *(unsigned char *)(v122 + 24) = 1;
          uint64_t v115 = v123;
          *((unsigned char *)v123 + 24) = v123 == v121;
          *uint64_t v125 = 1;
        }
        while (v123 != v121);
      }
      uint64_t v195 = ++v185;
LABEL_176:
      v21 += 32;
    }
    while (v21 != v181);
LABEL_6:
    uint64_t v7 = v22;
    int v18 = v168 + 2;
    unsigned int v10 = v192;
    if (v168 + 2 != v167) {
      continue;
    }
    break;
  }
  unsigned int v134 = v193;
  long long v205 = 0uLL;
  *(void *)&long long v206 = 0;
  if (v193 == &v194)
  {
    unint64_t v135 = 0;
  }
  else
  {
    unint64_t v135 = 0;
    uint64_t v136 = v193;
    do
    {
      v137 = v136[1];
      if (v137)
      {
        do
        {
          int v138 = (void **)v137;
          v137 = (void *)*v137;
        }
        while (v137);
      }
      else
      {
        do
        {
          int v138 = (void **)v136[2];
          BOOL v153 = *v138 == v136;
          uint64_t v136 = v138;
        }
        while (!v153);
      }
      ++v135;
      uint64_t v136 = v138;
    }
    while (v138 != &v194);
  }
LABEL_195:
  sub_1001E7964(&v205, v134, &v194, v135);
  uint64_t v139 = *v166;
  uint64_t v141 = *v166 + 48;
  unsigned int v140 = *(void **)v141;
  if (*(void *)v141)
  {
    *(void *)(v139 + 56) = v140;
    operator delete(v140);
    *(void *)uint64_t v141 = 0;
    *(void *)(v141 + 8) = 0;
    *(void *)(v141 + 16) = 0;
  }
  int v142 = v196;
  unint64_t v143 = (unint64_t)v197;
  unint64_t v144 = (v197 - v196) / 80;
  unint64_t v145 = 126 - 2 * __clz(v144);
  BOOL v153 = v197 == v196;
  *(_OWORD *)(v139 + 48) = v205;
  *(void *)(v139 + 64) = v206;
  if (v153) {
    uint64_t v146 = 0;
  }
  else {
    uint64_t v146 = v145;
  }
  sub_1001E7A80((unint64_t)v142, v143, v146, 1);
  if ((char *)v143 != v142)
  {
    int v147 = 0;
    unint64_t v148 = v144 - 1;
    if (v144 <= 1) {
      unint64_t v144 = 1;
    }
    int v149 = v142 + 120;
    double v150 = 0.0;
    while (1)
    {
      int v151 = *((_DWORD *)v149 - 12);
      double v150 = v150 + (double)v151 * *((double *)v149 - 7);
      v147 += v151;
      DWORD2(v205) = v147;
      if (!v148) {
        goto LABEL_229;
      }
      int v152 = *((_DWORD *)v149 - 30);
      if ((*((_DWORD *)v149 - 10) ^ (*((int *)v149 - 10) >> 31)) != ((v152 >> 31) ^ v152)) {
        goto LABEL_229;
      }
      if (v152 >> 31 == v152)
      {
        if (*((void *)v149 - 4) != *((void *)v149 - 14)) {
          goto LABEL_229;
        }
      }
      else
      {
        BOOL v153 = *((void *)v149 - 4) == *((void *)v149 - 14) && *((void *)v149 - 3) == *((void *)v149 - 13);
        if (!v153 || *((_DWORD *)v149 - 4) != (unint64_t)*((unsigned int *)v149 - 24)) {
          goto LABEL_229;
        }
      }
      int v155 = *((_DWORD *)v149 - 22);
      if ((*((_DWORD *)v149 - 2) ^ (*((int *)v149 - 2) >> 31)) != ((v155 >> 31) ^ v155)) {
        goto LABEL_229;
      }
      if (v155 >> 31 == v155)
      {
        if (*(void *)v149 == *((void *)v149 - 10)) {
          goto LABEL_204;
        }
LABEL_229:
        if (v147)
        {
          *(double *)&long long v205 = v150 / (double)v147;
          int v158 = *((_DWORD *)v149 - 30);
          int v159 = v158 >> 31;
          v160 = v149 - 112;
          if (v158 >> 31 == v158)
          {
            *(void *)&long long v200 = *(void *)v160;
            int v159 = v158;
          }
          else
          {
            long long v161 = *(_OWORD *)v160;
            int v201 = *((_DWORD *)v149 - 24);
            long long v200 = v161;
          }
          int v199 = v158 ^ v159;
          int v162 = *((_DWORD *)v149 - 22);
          int v163 = v162 >> 31;
          unsigned int v164 = v149 - 80;
          if (v162 >> 31 == v162)
          {
            *(void *)&long long v203 = *(void *)v164;
            int v163 = v162;
          }
          else
          {
            long long v165 = *(_OWORD *)v164;
            int v204 = *((_DWORD *)v149 - 16);
            long long v203 = v165;
          }
          int v202 = v162 ^ v163;
          sub_1001E6B04(v139, &v199, &v205);
        }
        int v147 = 0;
        *(void *)&long long v205 = 0;
        DWORD2(v205) = 0;
        double v150 = 0.0;
        v149 += 80;
        --v148;
        if (!--v144)
        {
LABEL_238:
          sub_10006A9DC((uint64_t)&v193, v194);
          goto LABEL_240;
        }
      }
      else
      {
        if (*(void *)v149 != *((void *)v149 - 10)
          || *((void *)v149 + 1) != *((void *)v149 - 9)
          || *((_DWORD *)v149 + 4) != (unint64_t)*((unsigned int *)v149 - 16))
        {
          goto LABEL_229;
        }
LABEL_204:
        v149 += 80;
        --v148;
        if (!--v144) {
          goto LABEL_238;
        }
      }
    }
  }
  sub_10006A9DC((uint64_t)&v193, v194);
  if (v142) {
LABEL_240:
  }
    operator delete(v142);
}

void sub_1001E6AC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,void *a30,uint64_t a31,void *__p,uint64_t a33)
{
  if (__p)
  {
    a33 = (uint64_t)__p;
    operator delete(__p);
  }
  sub_1000BA884(a10);
  _Unwind_Resume(a1);
}

void *sub_1001E6B04(uint64_t a1, _DWORD *a2, _OWORD *a3)
{
  return sub_1001EFCDC(a1 + 8, (uint64_t)a2, a2, a3);
}

void sub_1001E6C8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001E6CFC(uint64_t a1, _DWORD *a2, _DWORD *a3)
{
  unint64_t v4 = (long long *)(a1 + 8);
  int v6 = a2 + 2;
  int v5 = *a2;
  if (v5 == v5 >> 31)
  {
    *(void *)unint64_t v4 = *v6;
    int v7 = v5;
  }
  else
  {
    long long v8 = *(_OWORD *)v6;
    *(_DWORD *)(a1 + 24) = a2[6];
    long long *v4 = v8;
    int v7 = *a2;
    int v5 = (int)*a2 >> 31;
  }
  int v9 = v7 ^ v5;
  *(_DWORD *)a1 = v9;
  unsigned int v10 = (void *)(a1 + 40);
  uint64_t v12 = a3 + 2;
  int v11 = *a3;
  if (v11 == v11 >> 31)
  {
    *unsigned int v10 = *v12;
    int v13 = v11;
  }
  else
  {
    long long v14 = *(_OWORD *)v12;
    *(_DWORD *)(a1 + 56) = a3[6];
    *(_OWORD *)unsigned int v10 = v14;
    int v13 = *a3;
    int v11 = (int)*a3 >> 31;
  }
  int v15 = v13 ^ v11;
  *(_DWORD *)(a1 + 32) = v15;
  int v16 = v9 >> 31;
  if (v9 >> 31 == v9)
  {
    *(void *)&long long v25 = *(void *)v4;
    int v17 = 0;
    int v18 = 0;
    if (v15 != v15 >> 31) {
      goto LABEL_9;
    }
  }
  else
  {
    long long v25 = *v4;
    int v26 = *(_DWORD *)(a1 + 24);
    int v17 = v16 ^ v9;
    int v18 = (v16 ^ v9) >> 31;
    if (v15 != v15 >> 31)
    {
LABEL_9:
      if (v18 == v17 || !sub_1001E6FAC((unsigned __int8 *)(a1 + 40), (unsigned __int8 *)&v25)) {
        return a1;
      }
      int v9 = *(_DWORD *)a1;
      int v16 = *(int *)a1 >> 31;
      goto LABEL_15;
    }
  }
  if (v18 == v17 && *v10 >= (unint64_t)v25) {
    return a1;
  }
LABEL_15:
  uint64_t v19 = *(void *)v4;
  if (v16 == v9)
  {
    int v20 = *(_DWORD *)(a1 + 32);
    if (v9 == v20)
    {
      int v21 = 0;
      *(void *)unint64_t v4 = *v10;
      int v22 = 0;
      if (v9) {
        goto LABEL_28;
      }
      goto LABEL_25;
    }
    int v21 = 0;
  }
  else
  {
    uint64_t v27 = *(void *)(a1 + 16);
    int v28 = *(_DWORD *)(a1 + 24);
    int v21 = v16 ^ v9;
    int v20 = *(_DWORD *)(a1 + 32);
    if (v9 == v20)
    {
      long long *v4 = *(_OWORD *)v10;
      *((_DWORD *)v4 + 4) = *(_DWORD *)(a1 + 56);
      int v22 = v21 >> 31;
      if (v9 != v21)
      {
LABEL_28:
        *unsigned int v10 = v19;
        if (v22 != v21)
        {
          *(void *)(a1 + 48) = v27;
          *(_DWORD *)(a1 + 56) = v28;
          *(_DWORD *)(a1 + 32) = v22 ^ v21;
        }
        else
        {
          *(_DWORD *)(a1 + 32) = 0;
        }
        return a1;
      }
      goto LABEL_25;
    }
  }
  int v9 = v20;
  int v23 = v20 ^ (v20 >> 31);
  if (v23)
  {
    long long *v4 = *(_OWORD *)v10;
    *((_DWORD *)v4 + 4) = *(_DWORD *)(a1 + 56);
    *(_DWORD *)a1 = v23;
    int v22 = v21 >> 31;
    if (v9 != v21) {
      goto LABEL_28;
    }
  }
  else
  {
    *(void *)(a1 + 8) = *(void *)(a1 + 40);
    *(_DWORD *)a1 = 0;
    int v22 = v21 >> 31;
    if (v9 != v21) {
      goto LABEL_28;
    }
  }
LABEL_25:
  *unsigned int v10 = v19;
  if (v22 != v9)
  {
    *(void *)(a1 + 48) = v27;
    *(_DWORD *)(a1 + 56) = v28;
  }
  return a1;
}

BOOL sub_1001E6FAC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  if (v2 < v3) {
    return 1;
  }
  if (v3 < v2) {
    return 0;
  }
  unsigned int v5 = a1[1];
  unsigned int v6 = a2[1];
  if (v5 < v6) {
    return 1;
  }
  if (v6 < v5) {
    return 0;
  }
  unsigned int v7 = a1[2];
  unsigned int v8 = a2[2];
  if (v7 < v8) {
    return 1;
  }
  if (v8 < v7) {
    return 0;
  }
  unsigned int v9 = a1[3];
  unsigned int v10 = a2[3];
  if (v9 < v10) {
    return 1;
  }
  if (v10 < v9) {
    return 0;
  }
  unsigned int v11 = a1[4];
  unsigned int v12 = a2[4];
  if (v11 < v12) {
    return 1;
  }
  if (v12 < v11) {
    return 0;
  }
  unsigned int v13 = a1[5];
  unsigned int v14 = a2[5];
  if (v13 < v14) {
    return 1;
  }
  if (v14 < v13) {
    return 0;
  }
  unsigned int v15 = a1[6];
  unsigned int v16 = a2[6];
  if (v15 < v16) {
    return 1;
  }
  if (v16 < v15) {
    return 0;
  }
  unsigned int v17 = a1[7];
  unsigned int v18 = a2[7];
  if (v17 < v18) {
    return 1;
  }
  if (v18 < v17) {
    return 0;
  }
  unsigned int v19 = a1[8];
  unsigned int v20 = a2[8];
  if (v19 < v20) {
    return 1;
  }
  if (v20 < v19) {
    return 0;
  }
  unsigned int v21 = a1[9];
  unsigned int v22 = a2[9];
  if (v21 < v22) {
    return 1;
  }
  if (v22 < v21) {
    return 0;
  }
  unsigned int v23 = a1[10];
  unsigned int v24 = a2[10];
  if (v23 < v24) {
    return 1;
  }
  if (v24 < v23) {
    return 0;
  }
  unsigned int v25 = a1[11];
  unsigned int v26 = a2[11];
  if (v25 < v26) {
    return 1;
  }
  if (v26 < v25) {
    return 0;
  }
  unsigned int v27 = a1[12];
  unsigned int v28 = a2[12];
  if (v27 < v28) {
    return 1;
  }
  if (v28 < v27) {
    return 0;
  }
  unsigned int v29 = a1[13];
  unsigned int v30 = a2[13];
  if (v29 < v30) {
    return 1;
  }
  if (v30 < v29) {
    return 0;
  }
  unsigned int v31 = a1[14];
  unsigned int v32 = a2[14];
  if (v31 < v32) {
    return 1;
  }
  if (v32 < v31) {
    return 0;
  }
  unsigned int v33 = a1[15];
  unsigned int v34 = a2[15];
  if (v33 < v34) {
    return 1;
  }
  if (v34 < v33) {
    return 0;
  }
  unsigned int v35 = a1[16];
  unsigned int v36 = a2[16];
  if (v35 < v36) {
    return 1;
  }
  if (v36 < v35) {
    return 0;
  }
  unsigned int v37 = a1[17];
  unsigned int v38 = a2[17];
  if (v37 < v38) {
    return 1;
  }
  if (v38 < v37) {
    return 0;
  }
  unsigned int v39 = a1[18];
  unsigned int v40 = a2[18];
  if (v39 < v40) {
    return 1;
  }
  if (v40 >= v39) {
    return a1[19] < a2[19];
  }
  return 0;
}

void sub_1001E72B8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1004600F0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1001E72D8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1004600F0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1001E732C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1001E7354()
{
  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003F5F30;
  strcpy(v1.__r_.__value_.__l.__data_, "unsupported conversion for beacon mac address ");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_100453860;
  sub_10018E868((uint64_t)v0);
  sub_1000D1698(&v2, (uint64_t)"uint64_t RawRadioAddressVisitor::Uint64::operator()(const RawBeaconAddress &) const", (uint64_t)"../../../common/sensors/mac_address_util.h", 131, (uint64_t)v0);
}

void sub_1001E7428(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void sub_1001E7490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x1001E7480);
}

void sub_1001E74B4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_1001E74C8(void *a1, uint64_t a2)
{
  unsigned int v33 = &v32;
  unsigned int v3 = (unint64_t *)(a2 + 8);
  if (*(_DWORD *)a2 != *(int *)a2 >> 31) {
    sub_1001E7354();
  }
  unint64_t v4 = *v3;
  unsigned int v33 = &v32;
  unsigned int v5 = (uint64_t *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32) != *(int *)(a2 + 32) >> 31) {
    sub_1001E7354();
  }
  int8x8_t v10 = (int8x8_t)a1[1];
  if (!*(void *)&v10) {
    return 0;
  }
  uint64_t v9 = *v5;
  unint64_t v6 = (v9 ^ v4 ^ ((v9 ^ v4) >> 32)) + 31;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v10);
  v7.i16[0] = vaddlv_u8(v7);
  if (v7.u32[0] > 1uLL)
  {
    uint64_t v8 = (v9 ^ v4 ^ ((v9 ^ v4) >> 32)) + 31;
    if (v6 >= *(void *)&v10) {
      uint64_t v8 = v6 % *(void *)&v10;
    }
  }
  else
  {
    uint64_t v8 = (*(void *)&v10 - 1) & v6;
  }
  unsigned int v12 = *(uint64_t ***)(*a1 + 8 * v8);
  if (!v12) {
    return 0;
  }
  __n128 result = *v12;
  if (*v12)
  {
    int v13 = *(_DWORD *)a2 ^ (*(int *)a2 >> 31);
    uint64_t v14 = *(void *)(a2 + 8);
    int v15 = *(_DWORD *)(a2 + 32) ^ (*(int *)(a2 + 32) >> 31);
    uint64_t v16 = *(void *)(a2 + 40);
    if (v7.u32[0] < 2uLL)
    {
      uint64_t v17 = *(void *)&v10 - 1;
      while (1)
      {
        uint64_t v25 = result[1];
        if (v6 != v25)
        {
          if ((v25 & v17) != v8) {
            return 0;
          }
          goto LABEL_46;
        }
        int v26 = *((_DWORD *)result + 4);
        if (v13 == ((v26 >> 31) ^ v26))
        {
          if (v26 >> 31 == v26)
          {
            if (v14 != result[3]) {
              goto LABEL_46;
            }
          }
          else if (*v3 != result[3] {
                 || *(void *)(a2 + 16) != result[4]
          }
                 || *(_DWORD *)(a2 + 24) != (unint64_t)*((unsigned int *)result + 10))
          {
            goto LABEL_46;
          }
          int v29 = *((_DWORD *)result + 12);
          if (v15 == ((v29 >> 31) ^ v29))
          {
            if (v29 >> 31 == v29)
            {
              if (v16 == result[7]) {
                return result;
              }
            }
            else if (*v5 == result[7] {
                   && *(void *)(a2 + 48) == result[8]
            }
                   && *(_DWORD *)(a2 + 56) == (unint64_t)*((unsigned int *)result + 18))
            {
              return result;
            }
          }
        }
LABEL_46:
        __n128 result = (uint64_t *)*result;
        if (!result) {
          return result;
        }
      }
    }
    do
    {
      unint64_t v18 = result[1];
      if (v6 == v18)
      {
        int v19 = *((_DWORD *)result + 4);
        if (v13 == ((v19 >> 31) ^ v19))
        {
          if (v19 >> 31 == v19)
          {
            if (v14 != result[3]) {
              goto LABEL_16;
            }
          }
          else if (*v3 != result[3] {
                 || *(void *)(a2 + 16) != result[4]
          }
                 || *(_DWORD *)(a2 + 24) != (unint64_t)*((unsigned int *)result + 10))
          {
            goto LABEL_16;
          }
          int v22 = *((_DWORD *)result + 12);
          if (v15 == ((v22 >> 31) ^ v22))
          {
            if (v22 >> 31 == v22)
            {
              if (v16 == result[7]) {
                return result;
              }
            }
            else if (*v5 == result[7] {
                   && *(void *)(a2 + 48) == result[8]
            }
                   && *(_DWORD *)(a2 + 56) == (unint64_t)*((unsigned int *)result + 18))
            {
              return result;
            }
          }
        }
      }
      else
      {
        if (v18 >= *(void *)&v10) {
          v18 %= *(void *)&v10;
        }
        if (v18 != v8) {
          return 0;
        }
      }
LABEL_16:
      __n128 result = (uint64_t *)*result;
    }
    while (result);
  }
  return result;
}

_DWORD *sub_1001E77C4(void **a1, int *a2)
{
  unint64_t v4 = (char *)*a1;
  unsigned int v3 = (char *)a1[1];
  uint64_t v5 = (v3 - (unsigned char *)*a1) >> 5;
  unint64_t v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) >> 59) {
    sub_1000A9108();
  }
  uint64_t v8 = (unsigned char *)a1[2] - v4;
  if (v8 >> 4 > v6) {
    unint64_t v6 = v8 >> 4;
  }
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFE0) {
    unint64_t v9 = 0x7FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v9 = v6;
  }
  if (!v9)
  {
    int8x8_t v10 = 0;
    unsigned int v11 = (int *)(32 * v5);
    uint64_t v12 = 32 * v5 + 8;
    uint64_t v14 = a2 + 2;
    int v13 = *a2;
    int v16 = *a2 >> 31;
    if (v16 == *a2) {
      goto LABEL_10;
    }
LABEL_20:
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v14;
    *(_DWORD *)(v12 + 16) = v14[4];
    uint64_t v17 = &v10[32 * v9];
    *unsigned int v11 = v16 ^ v13;
    unint64_t v18 = v11 + 8;
    if (v3 != v4) {
      goto LABEL_11;
    }
LABEL_21:
    *a1 = v11;
    a1[1] = v18;
    a1[2] = v17;
    if (!v3) {
      return v18;
    }
    goto LABEL_17;
  }
  if (v9 >> 59) {
    sub_1000A6A10();
  }
  int8x8_t v10 = (char *)operator new(32 * v9);
  unsigned int v11 = (int *)&v10[32 * v5];
  uint64_t v12 = (uint64_t)(v11 + 2);
  int v15 = *a2;
  uint64_t v14 = a2 + 2;
  int v13 = v15;
  int v16 = v15 >> 31;
  if (v15 >> 31 != v15) {
    goto LABEL_20;
  }
LABEL_10:
  *(void *)uint64_t v12 = *(void *)v14;
  uint64_t v17 = &v10[32 * v9];
  *unsigned int v11 = 0;
  unint64_t v18 = v11 + 8;
  if (v3 == v4) {
    goto LABEL_21;
  }
LABEL_11:
  int v19 = v3;
  do
  {
    int v24 = *((_DWORD *)v19 - 8);
    v19 -= 32;
    int v22 = v24;
    uint64_t v25 = v11 - 6;
    int v26 = v19 + 8;
    if (v24 == v24 >> 31)
    {
      *(void *)uint64_t v25 = *v26;
      int v21 = v22;
    }
    else
    {
      long long v20 = *(_OWORD *)v26;
      *(v11 - 2) = *((_DWORD *)v19 + 6);
      *(_OWORD *)uint64_t v25 = v20;
      int v21 = *((_DWORD *)v3 - 8);
      int v22 = v21 >> 31;
    }
    unsigned int v23 = v11 - 8;
    *(v11 - 8) = v21 ^ v22;
    unsigned int v3 = v19;
    v11 -= 8;
  }
  while (v19 != v4);
  unsigned int v3 = (char *)*a1;
  *a1 = v23;
  a1[1] = v18;
  a1[2] = v17;
  if (v3) {
LABEL_17:
  }
    operator delete(v3);
  return v18;
}

_DWORD *sub_1001E7964(_DWORD *result, void *a2, void *a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v5 = result;
    if (a4 >> 59) {
      sub_1000A9108();
    }
    __n128 result = operator new(32 * a4);
    void *v5 = result;
    v5[1] = result;
    v5[2] = &result[8 * a4];
    if (a2 == a3)
    {
LABEL_4:
      v5[1] = result;
      return result;
    }
    while (1)
    {
      uint64_t v8 = result + 2;
      unint64_t v9 = a2 + 5;
      if (*((_DWORD *)a2 + 8) == *((int *)a2 + 8) >> 31)
      {
        *uint64_t v8 = *v9;
        *__n128 result = 0;
        int8x8_t v10 = (void *)a2[1];
        if (v10) {
          goto LABEL_11;
        }
      }
      else
      {
        long long v11 = *(_OWORD *)v9;
        result[6] = *((_DWORD *)a2 + 14);
        *(_OWORD *)uint64_t v8 = v11;
        *__n128 result = *((_DWORD *)a2 + 8) ^ (*((int *)a2 + 8) >> 31);
        int8x8_t v10 = (void *)a2[1];
        if (v10)
        {
          do
          {
LABEL_11:
            uint64_t v12 = v10;
            int8x8_t v10 = (void *)*v10;
          }
          while (v10);
          goto LABEL_6;
        }
      }
      do
      {
        uint64_t v12 = (void *)a2[2];
        BOOL v13 = *v12 == (void)a2;
        a2 = v12;
      }
      while (!v13);
LABEL_6:
      result += 8;
      a2 = v12;
      if (v12 == a3) {
        goto LABEL_4;
      }
    }
  }
  return result;
}

void sub_1001E7A64(_Unwind_Exception *exception_object)
{
  unsigned int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001E7A80(unint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  int8x8_t v10 = &v836[8];
  long long v11 = &v848[8];
LABEL_2:
  uint64_t v728 = a1 + 160;
  uint64_t v729 = a1 + 80;
  unint64_t v736 = a1 + 64;
  uint64_t v727 = a1 - 80;
  uint64_t v747 = a1;
  unint64_t v731 = a1 + 40;
  unint64_t v732 = a1 + 8;
  unint64_t v12 = a2;
  while (1)
  {
    uint64_t v13 = v12 - v747;
    uint64_t v14 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v12 - v747) >> 4);
    a2 = v12;
    if (v5 || !v4)
    {
      switch(v14)
      {
        case 0:
        case 1:
          return;
        case 2:
          uint64_t v422 = v12 - 80;
          if (sub_1001EEE44(v12 - 80, v747))
          {
            sub_1001EF058(v747, v422);
            *(_OWORD *)v836 = *(_OWORD *)(v747 + 64);
            uint64_t v423 = *(void *)(a2 - 16);
            *(_DWORD *)(v747 + 72) = *(_DWORD *)(a2 - 8);
            *(void *)(v747 + 64) = v423;
            uint64_t v424 = *(void *)v836;
            *(_DWORD *)(a2 - 8) = *(_DWORD *)&v836[8];
            *(void *)(a2 - 16) = v424;
          }
          break;
        case 3:
          sub_1001EE7A4(v747, v747 + 80, v12 - 80);
          break;
        case 4:
          sub_1001EF334((__n128 *)v747, v747 + 80, v747 + 160, v12 - 80);
          break;
        case 5:
          sub_1001EE63C((__n128 *)v747, v747 + 80, v747 + 160, v747 + 240, v12 - 80);
          break;
        default:
          JUMPOUT(0);
      }
      return;
    }
    if (v13 <= 1919) {
      break;
    }
    if (!a3)
    {
      if (v747 == v12) {
        return;
      }
      int64_t v428 = (unint64_t)(v14 - 2) >> 1;
      int64_t v429 = v428;
      uint64_t v430 = v747;
LABEL_834:
      int64_t v433 = v429;
      if (v428 < v429) {
        goto LABEL_833;
      }
      uint64_t v6 = (2 * v429) | 1;
      uint64_t v434 = v430 + 80 * v6;
      if (2 * v429 + 2 < v14)
      {
        if (sub_1001EEE44(v430 + 80 * v6, v434 + 80))
        {
          v434 += 80;
          uint64_t v6 = 2 * v433 + 2;
        }
        uint64_t v430 = v747;
      }
      uint64_t v435 = v430 + 80 * v433;
      BOOL v436 = sub_1001EEE44(v434, v435);
      uint64_t v430 = v747;
      if (v436) {
        goto LABEL_833;
      }
      v438 = (void *)(v435 + 8);
      int v437 = *(_DWORD *)v435;
      int v439 = *(int *)v435 >> 31;
      if (v437 >> 31 == v437)
      {
        *(void *)&v836[8] = *v438;
        int v439 = v437;
      }
      else
      {
        long long v440 = *(_OWORD *)v438;
        int v837 = *(_DWORD *)(v435 + 24);
        *(_OWORD *)&v836[8] = v440;
      }
      *(_DWORD *)v836 = v439 ^ v437;
      int v441 = *(_DWORD *)(v435 + 32);
      int v442 = v441 >> 31;
      v443 = (void *)(v435 + 40);
      if (v441 >> 31 == v441)
      {
        *(void *)&long long v839 = *v443;
        int v442 = v441;
      }
      else
      {
        long long v444 = *(_OWORD *)v443;
        int v840 = *(_DWORD *)(v435 + 56);
        long long v839 = v444;
      }
      int v838 = v442 ^ v441;
      long long v841 = *(_OWORD *)(v747 + 80 * v433 + 64);
      while (1)
      {
        uint64_t v445 = v434;
        if (*(_DWORD *)v435 == *(_DWORD *)v434)
        {
          v446 = (void *)(v434 + 8);
          v447 = (void *)(v435 + 8);
          if (*(_DWORD *)v435 == *(int *)v435 >> 31)
          {
            void *v447 = *v446;
            int v448 = *(_DWORD *)(v435 + 32);
            int v449 = *(_DWORD *)(v434 + 32);
            if (v448 != v449) {
              goto LABEL_850;
            }
          }
          else
          {
            long long v458 = *(_OWORD *)v446;
            *(_DWORD *)(v435 + 24) = *(_DWORD *)(v434 + 24);
            *(_OWORD *)v447 = v458;
            int v448 = *(_DWORD *)(v435 + 32);
            int v449 = *(_DWORD *)(v434 + 32);
            if (v448 != v449) {
              goto LABEL_850;
            }
          }
        }
        else
        {
          int v453 = *(_DWORD *)v434 ^ (*(int *)v434 >> 31);
          v454 = (long long *)(v434 + 8);
          if (v453)
          {
            long long v455 = *v454;
            *(_DWORD *)(v435 + 24) = *(_DWORD *)(v434 + 24);
            *(_OWORD *)(v435 + 8) = v455;
            *(_DWORD *)uint64_t v435 = v453;
            int v448 = *(_DWORD *)(v435 + 32);
            int v449 = *(_DWORD *)(v434 + 32);
            if (v448 != v449) {
              goto LABEL_850;
            }
          }
          else
          {
            *(void *)(v435 + 8) = *(void *)v454;
            *(_DWORD *)uint64_t v435 = 0;
            int v448 = *(_DWORD *)(v435 + 32);
            int v449 = *(_DWORD *)(v434 + 32);
            if (v448 != v449)
            {
LABEL_850:
              int v450 = v449 ^ (v449 >> 31);
              v451 = (long long *)(v434 + 40);
              if (v450)
              {
                long long v452 = *v451;
                *(_DWORD *)(v435 + 56) = *(_DWORD *)(v434 + 56);
                *(_OWORD *)(v435 + 40) = v452;
                *(_DWORD *)(v435 + 32) = v450;
              }
              else
              {
                *(void *)(v435 + 40) = *(void *)v451;
                *(_DWORD *)(v435 + 32) = 0;
              }
              goto LABEL_860;
            }
          }
        }
        v456 = (void *)(v434 + 40);
        v457 = (void *)(v435 + 40);
        if (v448 == v448 >> 31)
        {
          void *v457 = *v456;
        }
        else
        {
          long long v459 = *(_OWORD *)v456;
          *(_DWORD *)(v435 + 56) = *(_DWORD *)(v434 + 56);
          *(_OWORD *)v457 = v459;
        }
LABEL_860:
        uint64_t v460 = *(void *)(v434 + 64);
        *(_DWORD *)(v435 + 72) = *(_DWORD *)(v434 + 72);
        *(void *)(v435 + 64) = v460;
        if (v428 >= v6)
        {
          uint64_t v461 = (2 * v6) | 1;
          uint64_t v434 = v747 + 80 * v461;
          uint64_t v6 = 2 * v6 + 2;
          if (v6 < v14)
          {
            if (sub_1001EEE44(v747 + 80 * v461, v434 + 80)) {
              v434 += 80;
            }
            else {
              uint64_t v6 = v461;
            }
          }
          else
          {
            uint64_t v6 = v461;
          }
          uint64_t v435 = v445;
          if (!sub_1001EEE44(v434, (uint64_t)v836)) {
            continue;
          }
        }
        if (*(_DWORD *)v445 == *(_DWORD *)v836)
        {
          v462 = (void *)(v445 + 8);
          if (*(_DWORD *)v445 == *(int *)v445 >> 31)
          {
            void *v462 = *(void *)&v836[8];
            int v463 = *(_DWORD *)(v445 + 32);
            int v464 = v838;
            if (v463 != v838)
            {
LABEL_873:
              int v465 = v464 ^ (v464 >> 31);
              if (v465)
              {
                long long v466 = v839;
                *(_DWORD *)(v445 + 56) = v840;
                *(_OWORD *)(v445 + 40) = v466;
                *(_DWORD *)(v445 + 32) = v465;
              }
              else
              {
                *(void *)(v445 + 40) = v839;
                *(_DWORD *)(v445 + 32) = 0;
              }
              goto LABEL_832;
            }
          }
          else
          {
            long long v470 = *(_OWORD *)&v836[8];
            *(_DWORD *)(v445 + 24) = v837;
            *(_OWORD *)v462 = v470;
            int v463 = *(_DWORD *)(v445 + 32);
            int v464 = v838;
            if (v463 != v838) {
              goto LABEL_873;
            }
          }
        }
        else
        {
          int v467 = *(_DWORD *)v836 ^ (*(int *)v836 >> 31);
          if (v467)
          {
            long long v468 = *(_OWORD *)&v836[8];
            *(_DWORD *)(v445 + 24) = v837;
            *(_OWORD *)(v445 + 8) = v468;
            *(_DWORD *)uint64_t v445 = v467;
            int v463 = *(_DWORD *)(v445 + 32);
            int v464 = v838;
            if (v463 != v838) {
              goto LABEL_873;
            }
          }
          else
          {
            *(void *)(v445 + 8) = *(void *)&v836[8];
            *(_DWORD *)uint64_t v445 = 0;
            int v463 = *(_DWORD *)(v445 + 32);
            int v464 = v838;
            if (v463 != v838) {
              goto LABEL_873;
            }
          }
        }
        v469 = (void *)(v445 + 40);
        if (v463 == v463 >> 31)
        {
          void *v469 = v839;
        }
        else
        {
          long long v431 = v839;
          *(_DWORD *)(v445 + 56) = v840;
          *(_OWORD *)v469 = v431;
        }
LABEL_832:
        uint64_t v430 = v747;
        uint64_t v432 = v841;
        *(_DWORD *)(v445 + 72) = DWORD2(v841);
        *(void *)(v445 + 64) = v432;
LABEL_833:
        int64_t v429 = v433 - 1;
        if (v433) {
          goto LABEL_834;
        }
        unint64_t v824 = 0;
        unint64_t v823 = 0;
        unint64_t v822 = 0;
        LODWORD(v821) = 0;
        uint64_t v820 = 0;
        uint64_t v819 = 0;
        LODWORD(v818) = 0;
        LODWORD(v830) = 0;
        LODWORD(v829) = 0;
        LODWORD(v828) = 0;
        LODWORD(v827) = 0;
        long long v826 = 0uLL;
        unint64_t v825 = 0;
        int64_t v524 = v13 / 0x50uLL;
        uint64_t v807 = v430 + 16;
        unint64_t v806 = v430 + 48;
        v810 = (long long *)(v430 + 64);
        unint64_t v525 = a2;
LABEL_960:
        uint64_t v526 = v747;
        int v527 = *(_DWORD *)v747;
        int v528 = *(int *)v747 >> 31;
        *(void *)&v813[12] = *(void *)(v747 + 8);
        if (v527 >> 31 == v527)
        {
          int v528 = *(_DWORD *)v747;
          int v529 = *(_DWORD *)(v747 + 32);
          int v530 = v529 >> 31;
          int v531 = v529;
          *(_DWORD *)&v813[4] = v529;
          if (v529 >> 31 == v529)
          {
LABEL_965:
            *(_DWORD *)v813 = v531;
            uint64_t v533 = 0;
            *(_DWORD *)&v813[8] = v528 ^ v527;
            uint64_t v814 = *(void *)(v747 + 40);
            long long v833 = *v810;
            while (1)
            {
              uint64_t v537 = v526;
              v526 += 80 * v533 + 80;
              uint64_t v538 = 2 * v533;
              uint64_t v533 = (2 * v533) | 1;
              uint64_t v539 = v538 + 2;
              if (v538 + 2 >= v524) {
                goto LABEL_1073;
              }
              int v540 = *(_DWORD *)(v526 + 80);
              int v541 = v540 >> 31;
              int v542 = v540;
              if (v540 >> 31 != v540)
              {
                LODWORD(v830) = *(unsigned __int8 *)(v526 + 96);
                LODWORD(v829) = *(unsigned __int8 *)(v526 + 97);
                LODWORD(v828) = *(unsigned __int8 *)(v526 + 98);
                LODWORD(v827) = *(unsigned __int8 *)(v526 + 99);
                HIDWORD(v826) = *(unsigned __int8 *)(v526 + 100);
                DWORD2(v826) = *(unsigned __int8 *)(v526 + 101);
                DWORD1(v826) = *(unsigned __int8 *)(v526 + 102);
                LODWORD(v826) = *(unsigned __int8 *)(v526 + 103);
                HIDWORD(v825) = *(unsigned __int8 *)(v526 + 104);
                LODWORD(v825) = *(unsigned __int8 *)(v526 + 105);
                HIDWORD(v824) = *(unsigned __int8 *)(v526 + 106);
                int v542 = v540 >> 31;
                LOBYTE(v6) = *(unsigned char *)(v526 + 107);
              }
              unint64_t v543 = *(void *)(v526 + 88);
              unint64_t v544 = HIBYTE(v543);
              int v545 = v542 ^ v540;
              int v546 = *(int *)v526 >> 31;
              int v547 = (v542 ^ v540) >> 31;
              if (v546 == *(_DWORD *)v526)
              {
                if (v547 != v545) {
                  goto LABEL_1072;
                }
                unint64_t v548 = *(void *)(v526 + 8);
                if (v548 < v543) {
                  goto LABEL_1072;
                }
                int v549 = 0;
                int v550 = 0;
                if (v541 == v540) {
                  goto LABEL_1018;
                }
              }
              else
              {
                if (v547 != v545)
                {
                  unsigned int v566 = *(unsigned __int8 *)(v526 + 8);
                  if (v566 < v543) {
                    goto LABEL_1072;
                  }
                  if (v566 <= v543)
                  {
                    unsigned int v567 = *(unsigned __int8 *)(v526 + 9);
                    if (v567 < BYTE1(v543)) {
                      goto LABEL_1072;
                    }
                    if (v567 <= BYTE1(v543))
                    {
                      unsigned int v568 = *(unsigned __int8 *)(v526 + 10);
                      if (v568 < BYTE2(v543)) {
                        goto LABEL_1072;
                      }
                      if (v568 <= BYTE2(v543))
                      {
                        unsigned int v569 = *(unsigned __int8 *)(v526 + 11);
                        if (v569 < BYTE3(v543)) {
                          goto LABEL_1072;
                        }
                        if (v569 <= BYTE3(v543))
                        {
                          unsigned int v570 = *(unsigned __int8 *)(v526 + 12);
                          if (v570 < BYTE4(v543)) {
                            goto LABEL_1072;
                          }
                          if (v570 <= BYTE4(v543))
                          {
                            unsigned int v571 = *(unsigned __int8 *)(v526 + 13);
                            if (v571 < BYTE5(v543)) {
                              goto LABEL_1072;
                            }
                            if (v571 <= BYTE5(v543))
                            {
                              unsigned int v572 = *(unsigned __int8 *)(v526 + 14);
                              if (v572 < BYTE6(v543)) {
                                goto LABEL_1072;
                              }
                              if (v572 <= BYTE6(v543))
                              {
                                unsigned int v573 = *(unsigned __int8 *)(v526 + 15);
                                if (v573 < v544) {
                                  goto LABEL_1072;
                                }
                                if (v573 <= v544)
                                {
                                  unsigned int v574 = *(unsigned __int8 *)(v526 + 16);
                                  if (v574 < v830) {
                                    goto LABEL_1072;
                                  }
                                  if (v830 >= v574)
                                  {
                                    unsigned int v575 = *(unsigned __int8 *)(v526 + 17);
                                    if (v575 < v829) {
                                      goto LABEL_1072;
                                    }
                                    if (v829 >= v575)
                                    {
                                      unsigned int v576 = *(unsigned __int8 *)(v526 + 18);
                                      if (v576 < v828) {
                                        goto LABEL_1072;
                                      }
                                      if (v828 >= v576)
                                      {
                                        unsigned int v577 = *(unsigned __int8 *)(v526 + 19);
                                        if (v577 < v827
                                          || v827 >= v577
                                          && ((unsigned int v578 = *(unsigned __int8 *)(v526 + 20), v578 < HIDWORD(v826))
                                           || HIDWORD(v826) >= v578
                                           && ((unsigned int v579 = *(unsigned __int8 *)(v526 + 21), v579 < DWORD2(v826))
                                            || DWORD2(v826) >= v579
                                            && ((unsigned int v580 = *(unsigned __int8 *)(v526 + 22), v580 < DWORD1(v826))
                                             || DWORD1(v826) >= v580
                                             && ((unsigned int v581 = *(unsigned __int8 *)(v526 + 23), v581 < v826)
                                              || v826 >= v581
                                              && ((unsigned int v582 = *(unsigned __int8 *)(v526 + 24), v582 < HIDWORD(v825))
                                               || HIDWORD(v825) >= v582
                                               && ((unsigned int v583 = *(unsigned __int8 *)(v526 + 25), v583 < v825)
                                                || v825 >= v583
                                                && ((unsigned int v584 = *(unsigned __int8 *)(v526 + 26), v584 < HIDWORD(v824))
                                                 || HIDWORD(v824) >= v584
                                                 && *(unsigned __int8 *)(v526 + 27) < v6))))))))
                                        {
LABEL_1072:
                                          v526 += 80;
                                          uint64_t v533 = v539;
                                          goto LABEL_1073;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                LODWORD(v824) = *(unsigned __int8 *)(v526 + 16);
                HIDWORD(v823) = *(unsigned __int8 *)(v526 + 17);
                LODWORD(v823) = *(unsigned __int8 *)(v526 + 18);
                HIDWORD(v822) = *(unsigned __int8 *)(v526 + 19);
                LODWORD(v822) = *(unsigned __int8 *)(v526 + 20);
                LODWORD(v821) = *(unsigned __int8 *)(v526 + 21);
                HIDWORD(v820) = *(unsigned __int8 *)(v526 + 22);
                LODWORD(v820) = *(unsigned __int8 *)(v526 + 23);
                HIDWORD(v819) = *(unsigned __int8 *)(v526 + 24);
                LODWORD(v819) = *(unsigned __int8 *)(v526 + 25);
                LODWORD(v818) = *(unsigned __int8 *)(v526 + 26);
                LOBYTE(v817) = *(unsigned char *)(v526 + 27);
                unint64_t v548 = *(void *)(v526 + 8);
                int v549 = v546 ^ *(_DWORD *)v526;
                int v550 = v549 >> 31;
                if (v541 == v540)
                {
LABEL_1018:
                  if (v550 != v549 || v543 < v548) {
                    goto LABEL_1073;
                  }
                  goto LABEL_1023;
                }
              }
              if (v550 != v549)
              {
                if (v543 < v548) {
                  goto LABEL_1073;
                }
                if (v543 <= v548)
                {
                  if (BYTE1(v543) < BYTE1(v548)) {
                    goto LABEL_1073;
                  }
                  if (BYTE1(v543) <= BYTE1(v548))
                  {
                    if (BYTE2(v543) < BYTE2(v548)) {
                      goto LABEL_1073;
                    }
                    if (BYTE2(v543) <= BYTE2(v548))
                    {
                      if (BYTE3(v543) < BYTE3(v548)) {
                        goto LABEL_1073;
                      }
                      if (BYTE3(v543) <= BYTE3(v548))
                      {
                        if (BYTE4(v543) < BYTE4(v548)) {
                          goto LABEL_1073;
                        }
                        if (BYTE4(v543) <= BYTE4(v548))
                        {
                          if (BYTE5(v543) < BYTE5(v548)) {
                            goto LABEL_1073;
                          }
                          if (BYTE5(v543) <= BYTE5(v548))
                          {
                            if (BYTE6(v543) < BYTE6(v548)) {
                              goto LABEL_1073;
                            }
                            if (BYTE6(v543) <= BYTE6(v548))
                            {
                              if (v544 < HIBYTE(v548)) {
                                goto LABEL_1073;
                              }
                              if (v544 <= HIBYTE(v548))
                              {
                                unsigned int v551 = *(unsigned __int8 *)(v526 + 96);
                                if (v551 < v824) {
                                  goto LABEL_1073;
                                }
                                if (v824 >= v551)
                                {
                                  unsigned int v552 = *(unsigned __int8 *)(v526 + 97);
                                  if (v552 < HIDWORD(v823)) {
                                    goto LABEL_1073;
                                  }
                                  if (HIDWORD(v823) >= v552)
                                  {
                                    unsigned int v553 = *(unsigned __int8 *)(v526 + 98);
                                    if (v553 < v823) {
                                      goto LABEL_1073;
                                    }
                                    if (v823 >= v553)
                                    {
                                      unsigned int v554 = *(unsigned __int8 *)(v526 + 99);
                                      if (v554 < HIDWORD(v822)) {
                                        goto LABEL_1073;
                                      }
                                      if (HIDWORD(v822) >= v554)
                                      {
                                        unsigned int v555 = *(unsigned __int8 *)(v526 + 100);
                                        if (v555 < v822) {
                                          goto LABEL_1073;
                                        }
                                        if (v822 >= v555)
                                        {
                                          unsigned int v556 = *(unsigned __int8 *)(v526 + 101);
                                          if (v556 < v821) {
                                            goto LABEL_1073;
                                          }
                                          if (v821 >= v556)
                                          {
                                            unsigned int v557 = *(unsigned __int8 *)(v526 + 102);
                                            if (v557 < HIDWORD(v820)) {
                                              goto LABEL_1073;
                                            }
                                            if (HIDWORD(v820) >= v557)
                                            {
                                              unsigned int v558 = *(unsigned __int8 *)(v526 + 103);
                                              if (v558 < v820) {
                                                goto LABEL_1073;
                                              }
                                              if (v820 >= v558)
                                              {
                                                unsigned int v559 = *(unsigned __int8 *)(v526 + 104);
                                                if (v559 < HIDWORD(v819)) {
                                                  goto LABEL_1073;
                                                }
                                                if (HIDWORD(v819) >= v559)
                                                {
                                                  unsigned int v560 = *(unsigned __int8 *)(v526 + 105);
                                                  if (v560 < v819) {
                                                    goto LABEL_1073;
                                                  }
                                                  if (v819 >= v560)
                                                  {
                                                    unsigned int v561 = *(unsigned __int8 *)(v526 + 106);
                                                    if (v561 < v818
                                                      || v818 >= v561
                                                      && *(unsigned __int8 *)(v526 + 107) < v817)
                                                    {
                                                      goto LABEL_1073;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
LABEL_1023:
              int v563 = *(_DWORD *)(v526 + 112);
              int v564 = v563 >> 31;
              v565 = (void *)(v526 + 120);
              if (v563 >> 31 == v563)
              {
                *(void *)&v836[8] = *v565;
                int v564 = v563;
              }
              else
              {
                long long v585 = *(_OWORD *)v565;
                int v837 = *(_DWORD *)(v526 + 136);
                *(_OWORD *)&v836[8] = v585;
              }
              int v586 = v564 ^ v563;
              *(_DWORD *)v836 = v586;
              v587 = (unsigned __int8 *)(v526 + 40);
              int v588 = v586 >> 31;
              if (*(_DWORD *)(v526 + 32) == *(int *)(v526 + 32) >> 31)
              {
                if (v588 != v586 || *(void *)v587 < *(void *)&v836[8]) {
                  goto LABEL_1072;
                }
              }
              else if (v588 != v586 && sub_1001E6FAC(v587, &v836[8]))
              {
                goto LABEL_1072;
              }
LABEL_1073:
              if (*(_DWORD *)v537 == *(_DWORD *)v526)
              {
                v589 = (void *)(v526 + 8);
                v590 = (void *)(v537 + 8);
                if (*(_DWORD *)v537 == *(int *)v537 >> 31)
                {
                  void *v590 = *v589;
                  int v591 = *(_DWORD *)(v537 + 32);
                  int v592 = *(_DWORD *)(v526 + 32);
                  if (v591 == v592) {
                    goto LABEL_1080;
                  }
                }
                else
                {
                  long long v601 = *(_OWORD *)v589;
                  *(_DWORD *)(v537 + 24) = *(_DWORD *)(v526 + 24);
                  *(_OWORD *)v590 = v601;
                  int v591 = *(_DWORD *)(v537 + 32);
                  int v592 = *(_DWORD *)(v526 + 32);
                  if (v591 == v592) {
                    goto LABEL_1080;
                  }
                }
              }
              else
              {
                int v596 = *(_DWORD *)v526 ^ (*(int *)v526 >> 31);
                v597 = (long long *)(v526 + 8);
                if (v596)
                {
                  long long v598 = *v597;
                  *(_DWORD *)(v537 + 24) = *(_DWORD *)(v526 + 24);
                  *(_OWORD *)(v537 + 8) = v598;
                  *(_DWORD *)uint64_t v537 = v596;
                  int v591 = *(_DWORD *)(v537 + 32);
                  int v592 = *(_DWORD *)(v526 + 32);
                  if (v591 == v592) {
                    goto LABEL_1080;
                  }
                }
                else
                {
                  *(void *)(v537 + 8) = *(void *)v597;
                  *(_DWORD *)uint64_t v537 = 0;
                  int v591 = *(_DWORD *)(v537 + 32);
                  int v592 = *(_DWORD *)(v526 + 32);
                  if (v591 == v592)
                  {
LABEL_1080:
                    v599 = (void *)(v526 + 40);
                    v600 = (void *)(v537 + 40);
                    if (v591 == v591 >> 31)
                    {
                      void *v600 = *v599;
                    }
                    else
                    {
                      long long v534 = *(_OWORD *)v599;
                      *(_DWORD *)(v537 + 56) = *(_DWORD *)(v526 + 56);
                      *(_OWORD *)v600 = v534;
                    }
                    goto LABEL_967;
                  }
                }
              }
              int v593 = v592 ^ (v592 >> 31);
              v594 = (long long *)(v526 + 40);
              if (v593)
              {
                long long v595 = *v594;
                *(_DWORD *)(v537 + 56) = *(_DWORD *)(v526 + 56);
                *(_OWORD *)(v537 + 40) = v595;
                *(_DWORD *)(v537 + 32) = v593;
              }
              else
              {
                *(void *)(v537 + 40) = *(void *)v594;
                *(_DWORD *)(v537 + 32) = 0;
              }
LABEL_967:
              v536 = (void *)(v526 + 64);
              uint64_t v535 = *(void *)(v526 + 64);
              *(_DWORD *)(v537 + 72) = *(_DWORD *)(v526 + 72);
              *(void *)(v537 + 64) = v535;
              if (v533 > (uint64_t)((unint64_t)(v524 - 2) >> 1))
              {
                int v602 = *(_DWORD *)v813 ^ *(_DWORD *)&v813[4];
                int v603 = *(_DWORD *)v526;
                if (v526 == v525 - 80)
                {
                  unint64_t v604 = v525 - 80;
                  int v613 = *(int *)&v813[8] >> 31;
                  if (v603 == *(_DWORD *)&v813[8])
                  {
                    if (v613 == *(_DWORD *)&v813[8])
                    {
                      *(void *)(v526 + 8) = *(void *)&v813[12];
                      int v614 = v602 >> 31;
                      if (*(_DWORD *)(v526 + 32) != v602)
                      {
LABEL_1096:
                        int v615 = v614 ^ v602;
                        *(void *)(v526 + 40) = v814;
                        if (v615)
                        {
                          *(void *)(v526 + 48) = v831;
                          *(_DWORD *)(v526 + 56) = v832;
                          *(_DWORD *)(v526 + 32) = v615;
                        }
                        else
                        {
                          *(_DWORD *)(v526 + 32) = 0;
                        }
LABEL_958:
                        *(_DWORD *)(v526 + 72) = DWORD2(v833);
                        void *v536 = v833;
                        goto LABEL_959;
                      }
                    }
                    else
                    {
                      *(void *)(v526 + 8) = *(void *)&v813[12];
                      *(void *)(v526 + 16) = v834;
                      *(_DWORD *)(v526 + 24) = v835;
                      int v614 = v602 >> 31;
                      if (*(_DWORD *)(v526 + 32) != v602) {
                        goto LABEL_1096;
                      }
                    }
                  }
                  else if (v613 != *(_DWORD *)&v813[8])
                  {
                    *(void *)(v526 + 8) = *(void *)&v813[12];
                    *(void *)(v526 + 16) = v834;
                    *(_DWORD *)(v526 + 24) = v835;
                    *(_DWORD *)uint64_t v526 = v613 ^ *(_DWORD *)&v813[8];
                    int v614 = v602 >> 31;
                    if (*(_DWORD *)(v526 + 32) != v602) {
                      goto LABEL_1096;
                    }
                  }
                  else
                  {
                    *(void *)(v526 + 8) = *(void *)&v813[12];
                    *(_DWORD *)uint64_t v526 = 0;
                    int v614 = v602 >> 31;
                    if (*(_DWORD *)(v526 + 32) != v602) {
                      goto LABEL_1096;
                    }
                  }
                  *(void *)(v526 + 40) = v814;
                  if (v614 != v602)
                  {
                    *(void *)(v526 + 48) = v831;
                    *(_DWORD *)(v526 + 56) = v832;
                  }
                  goto LABEL_958;
                }
                unint64_t v604 = v525 - 80;
                int v605 = *(_DWORD *)(v525 - 80);
                if (v603 == v605)
                {
                  v606 = (void *)(v525 - 72);
                  v607 = (void *)(v526 + 8);
                  if (v603 == v603 >> 31)
                  {
                    void *v607 = *v606;
                    int v608 = *(_DWORD *)(v526 + 32);
                    int v609 = *(_DWORD *)(v525 - 48);
                    if (v608 != v609)
                    {
LABEL_1091:
                      int v610 = v609 ^ (v609 >> 31);
                      v611 = (long long *)(v525 - 40);
                      if (v610)
                      {
                        long long v612 = *v611;
                        *(_DWORD *)(v526 + 56) = *(_DWORD *)(v525 - 24);
                        *(_OWORD *)(v526 + 40) = v612;
                        *(_DWORD *)(v526 + 32) = v610;
                      }
                      else
                      {
                        *(void *)(v526 + 40) = *(void *)v611;
                        *(_DWORD *)(v526 + 32) = 0;
                      }
                      goto LABEL_1110;
                    }
                  }
                  else
                  {
                    long long v621 = *(_OWORD *)v606;
                    *(_DWORD *)(v526 + 24) = *(_DWORD *)(v525 - 56);
                    *(_OWORD *)v607 = v621;
                    int v608 = *(_DWORD *)(v526 + 32);
                    int v609 = *(_DWORD *)(v525 - 48);
                    if (v608 != v609) {
                      goto LABEL_1091;
                    }
                  }
                }
                else
                {
                  int v616 = v605 ^ (v605 >> 31);
                  v617 = (long long *)(v525 - 72);
                  if (v616)
                  {
                    long long v618 = *v617;
                    *(_DWORD *)(v526 + 24) = *(_DWORD *)(v525 - 56);
                    *(_OWORD *)(v526 + 8) = v618;
                    *(_DWORD *)uint64_t v526 = v616;
                    int v608 = *(_DWORD *)(v526 + 32);
                    int v609 = *(_DWORD *)(v525 - 48);
                    if (v608 != v609) {
                      goto LABEL_1091;
                    }
                  }
                  else
                  {
                    *(void *)(v526 + 8) = *(void *)v617;
                    *(_DWORD *)uint64_t v526 = 0;
                    int v608 = *(_DWORD *)(v526 + 32);
                    int v609 = *(_DWORD *)(v525 - 48);
                    if (v608 != v609) {
                      goto LABEL_1091;
                    }
                  }
                }
                v619 = (void *)(v525 - 40);
                v620 = (void *)(v526 + 40);
                if (v608 == v608 >> 31)
                {
                  void *v620 = *v619;
                }
                else
                {
                  long long v622 = *(_OWORD *)v619;
                  *(_DWORD *)(v526 + 56) = *(_DWORD *)(v525 - 24);
                  *(_OWORD *)v620 = v622;
                }
LABEL_1110:
                uint64_t v623 = *(void *)(v525 - 16);
                *(_DWORD *)(v526 + 72) = *(_DWORD *)(v525 - 8);
                void *v536 = v623;
                int v624 = *(int *)&v813[8] >> 31;
                if (*(_DWORD *)(v525 - 80) == *(_DWORD *)&v813[8])
                {
                  if (v624 == *(_DWORD *)&v813[8])
                  {
                    *(void *)(v525 - 72) = *(void *)&v813[12];
                    int v625 = v602 >> 31;
                    if (*(_DWORD *)(v525 - 48) != v602)
                    {
LABEL_1113:
                      int v626 = v625 ^ v602;
                      *(void *)(v525 - 40) = v814;
                      if (v626)
                      {
                        *(_DWORD *)(v525 - 24) = v832;
                        *(void *)(v525 - 32) = v831;
                        *(_DWORD *)(v525 - 48) = v626;
                      }
                      else
                      {
                        *(_DWORD *)(v525 - 48) = 0;
                      }
                      goto LABEL_1125;
                    }
                  }
                  else
                  {
                    *(void *)(v525 - 72) = *(void *)&v813[12];
                    *(_DWORD *)(v525 - 56) = v835;
                    *(void *)(v525 - 64) = v834;
                    int v625 = v602 >> 31;
                    if (*(_DWORD *)(v525 - 48) != v602) {
                      goto LABEL_1113;
                    }
                  }
                }
                else
                {
                  int v627 = v624 ^ *(_DWORD *)&v813[8];
                  if (v627)
                  {
                    *(void *)(v525 - 72) = *(void *)&v813[12];
                    *(_DWORD *)(v525 - 56) = v835;
                    *(void *)(v525 - 64) = v834;
                    *(_DWORD *)(v525 - 80) = v627;
                    int v625 = v602 >> 31;
                    if (*(_DWORD *)(v525 - 48) != v602) {
                      goto LABEL_1113;
                    }
                  }
                  else
                  {
                    *(void *)(v525 - 72) = *(void *)&v813[12];
                    *(_DWORD *)(v525 - 80) = 0;
                    int v625 = v602 >> 31;
                    if (*(_DWORD *)(v525 - 48) != v602) {
                      goto LABEL_1113;
                    }
                  }
                }
                *(void *)(v525 - 40) = v814;
                if (v625 != v602)
                {
                  *(_DWORD *)(v525 - 24) = v832;
                  *(void *)(v525 - 32) = v831;
                }
LABEL_1125:
                *(_DWORD *)(v525 - 8) = DWORD2(v833);
                *(void *)(v525 - 16) = v833;
                uint64_t v628 = v526 + 80 - v747;
                if (v628 < 81) {
                  goto LABEL_959;
                }
                unint64_t v629 = (v628 / 0x50uLL - 2) >> 1;
                uint64_t v630 = v747 + 80 * v629;
                if (!sub_1001EEE44(v630, v526)) {
                  goto LABEL_959;
                }
                v632 = (void *)(v526 + 8);
                int v631 = *(_DWORD *)v526;
                int v633 = *(int *)v526 >> 31;
                if (v631 >> 31 == v631)
                {
                  *(void *)&v836[8] = *v632;
                  int v633 = v631;
                }
                else
                {
                  long long v634 = *(_OWORD *)v632;
                  int v837 = *(_DWORD *)(v526 + 24);
                  *(_OWORD *)&v836[8] = v634;
                }
                *(_DWORD *)v836 = v633 ^ v631;
                int v635 = *(_DWORD *)(v526 + 32);
                int v636 = v635 >> 31;
                v637 = (void *)(v526 + 40);
                if (v635 >> 31 == v635)
                {
                  *(void *)&long long v839 = *v637;
                  int v636 = v635;
                }
                else
                {
                  long long v638 = *(_OWORD *)v637;
                  int v840 = *(_DWORD *)(v526 + 56);
                  long long v839 = v638;
                }
                int v838 = v636 ^ v635;
                long long v841 = *(_OWORD *)v536;
                while (2)
                {
                  while (2)
                  {
                    uint64_t v639 = v630;
                    if (*(_DWORD *)v526 != *(_DWORD *)v630)
                    {
                      int v649 = *(_DWORD *)v630 ^ (*(int *)v630 >> 31);
                      v650 = (long long *)(v630 + 8);
                      if (v649)
                      {
                        long long v651 = *v650;
                        *(_DWORD *)(v526 + 24) = *(_DWORD *)(v630 + 24);
                        *(_OWORD *)(v526 + 8) = v651;
                        *(_DWORD *)uint64_t v526 = v649;
                        int v642 = *(_DWORD *)(v526 + 32);
                        int v643 = *(_DWORD *)(v630 + 32);
                        if (v642 != v643) {
                          goto LABEL_1142;
                        }
                      }
                      else
                      {
                        *(void *)(v526 + 8) = *(void *)v650;
                        *(_DWORD *)uint64_t v526 = 0;
                        int v642 = *(_DWORD *)(v526 + 32);
                        int v643 = *(_DWORD *)(v630 + 32);
                        if (v642 != v643) {
                          goto LABEL_1142;
                        }
                      }
                      goto LABEL_1147;
                    }
                    v640 = (long long *)(v630 + 8);
                    v641 = (_OWORD *)(v526 + 8);
                    if (*(_DWORD *)v526 != *(int *)v526 >> 31)
                    {
                      long long v655 = *v640;
                      *(_DWORD *)(v526 + 24) = *(_DWORD *)(v630 + 24);
                      _OWORD *v641 = v655;
                      int v642 = *(_DWORD *)(v526 + 32);
                      int v643 = *(_DWORD *)(v630 + 32);
                      if (v642 != v643) {
                        goto LABEL_1142;
                      }
LABEL_1147:
                      v652 = (void *)(v630 + 40);
                      v653 = (void *)(v526 + 40);
                      if (v642 == v642 >> 31)
                      {
                        void *v653 = *v652;
                        uint64_t v648 = v630 + 64;
                        uint64_t v654 = *(void *)(v630 + 64);
                        *(_DWORD *)(v526 + 72) = *(_DWORD *)(v630 + 72);
                        *(void *)(v526 + 64) = v654;
                        if (!v629) {
                          goto LABEL_1185;
                        }
                      }
                      else
                      {
                        long long v656 = *(_OWORD *)v652;
                        *(_DWORD *)(v526 + 56) = *(_DWORD *)(v630 + 56);
                        *(_OWORD *)v653 = v656;
                        uint64_t v648 = v630 + 64;
                        uint64_t v657 = *(void *)(v630 + 64);
                        *(_DWORD *)(v526 + 72) = *(_DWORD *)(v630 + 72);
                        *(void *)(v526 + 64) = v657;
                        if (!v629) {
                          goto LABEL_1185;
                        }
                      }
                      goto LABEL_1155;
                    }
                    *(void *)v641 = *(void *)v640;
                    int v642 = *(_DWORD *)(v526 + 32);
                    int v643 = *(_DWORD *)(v630 + 32);
                    if (v642 == v643) {
                      goto LABEL_1147;
                    }
LABEL_1142:
                    int v644 = v643 ^ (v643 >> 31);
                    v645 = (long long *)(v630 + 40);
                    if (v644)
                    {
                      long long v646 = *v645;
                      *(_DWORD *)(v526 + 56) = *(_DWORD *)(v630 + 56);
                      *(_OWORD *)(v526 + 40) = v646;
                      *(_DWORD *)(v526 + 32) = v644;
                      uint64_t v648 = v630 + 64;
                      uint64_t v647 = *(void *)(v630 + 64);
                      *(_DWORD *)(v526 + 72) = *(_DWORD *)(v630 + 72);
                      *(void *)(v526 + 64) = v647;
                      if (!v629) {
                        goto LABEL_1185;
                      }
                    }
                    else
                    {
                      *(void *)(v526 + 40) = *(void *)v645;
                      *(_DWORD *)(v526 + 32) = 0;
                      uint64_t v648 = v630 + 64;
                      uint64_t v658 = *(void *)(v630 + 64);
                      *(_DWORD *)(v526 + 72) = *(_DWORD *)(v630 + 72);
                      *(void *)(v526 + 64) = v658;
                      if (!v629) {
                        goto LABEL_1185;
                      }
                    }
LABEL_1155:
                    int v659 = *(int *)v836 >> 31;
                    if (*(int *)v836 >> 31 == *(_DWORD *)v836)
                    {
                      *(void *)&v848[8] = *(void *)&v836[8];
                      int v659 = *(_DWORD *)v836;
                    }
                    else
                    {
                      *(_OWORD *)&v848[8] = *(_OWORD *)&v836[8];
                      int v849 = v837;
                    }
                    unint64_t v629 = (v629 - 1) >> 1;
                    uint64_t v630 = v747 + 80 * v629;
                    int v660 = v659 ^ *(_DWORD *)v836;
                    *(_DWORD *)v848 = v660;
                    v662 = (uint64_t *)(v630 + 8);
                    int v661 = *(_DWORD *)v630;
                    int v663 = *(int *)v630 >> 31;
                    int v664 = v660 >> 31;
                    if (v663 != *(_DWORD *)v630)
                    {
                      if (v664 != v660)
                      {
                        if (sub_1001E6FAC((unsigned __int8 *)(v630 + 8), &v848[8])) {
                          goto LABEL_1138;
                        }
                        int v661 = *(_DWORD *)v630;
                        int v663 = *(int *)v630 >> 31;
                      }
                      if (v663 == v661)
                      {
                        uint64_t v665 = *v662;
                        goto LABEL_1167;
                      }
                      long long v668 = *(_OWORD *)v662;
                      int v847 = *(_DWORD *)(v630 + 24);
                      long long v846 = v668;
                      int v666 = v663 ^ v661;
                      int v845 = v666;
                      int v667 = v666 >> 31;
                      if (*(_DWORD *)v836 != *(int *)v836 >> 31) {
                        goto LABEL_1174;
                      }
LABEL_1168:
                      if (v667 != v666 || *(void *)&v836[8] < (unint64_t)v846) {
                        goto LABEL_1185;
                      }
LABEL_1176:
                      int v669 = v838 >> 31;
                      if (v838 >> 31 == v838)
                      {
                        *(void *)&long long v843 = v839;
                        int v669 = v838;
                      }
                      else
                      {
                        long long v843 = v839;
                        int v844 = v840;
                      }
                      int v670 = v669 ^ v838;
                      int v842 = v669 ^ v838;
                      v671 = (unsigned __int8 *)(v630 + 40);
                      int v672 = (v669 ^ v838) >> 31;
                      if (*(_DWORD *)(v630 + 32) == *(int *)(v630 + 32) >> 31)
                      {
                        if (v672 != v670) {
                          goto LABEL_1138;
                        }
                        uint64_t v526 = v639;
                        if (*(void *)v671 >= (unint64_t)v843) {
                          goto LABEL_1185;
                        }
                      }
                      else
                      {
                        if (v672 == v670) {
                          goto LABEL_1185;
                        }
                        uint64_t v526 = v639;
                        if (!sub_1001E6FAC(v671, (unsigned __int8 *)&v843)) {
                          goto LABEL_1185;
                        }
                      }
                      continue;
                    }
                    break;
                  }
                  if (v664 != v660 || (uint64_t v665 = *v662, (unint64_t)*v662 < *(void *)&v848[8]))
                  {
LABEL_1138:
                    uint64_t v526 = v639;
                    continue;
                  }
                  break;
                }
LABEL_1167:
                *(void *)&long long v846 = v665;
                int v666 = 0;
                int v845 = 0;
                int v667 = 0;
                if (*(_DWORD *)v836 == *(int *)v836 >> 31) {
                  goto LABEL_1168;
                }
LABEL_1174:
                if (v667 == v666 || !sub_1001E6FAC(&v836[8], (unsigned __int8 *)&v846)) {
                  goto LABEL_1176;
                }
LABEL_1185:
                if (*(_DWORD *)v639 == *(_DWORD *)v836)
                {
                  v673 = (void *)(v639 + 8);
                  if (*(_DWORD *)v639 == *(int *)v639 >> 31)
                  {
                    void *v673 = *(void *)&v836[8];
                    int v674 = *(_DWORD *)(v639 + 32);
                    int v675 = v838;
                    if (v674 != v838)
                    {
LABEL_1188:
                      int v676 = v675 ^ (v675 >> 31);
                      if (v676)
                      {
                        long long v677 = v839;
                        *(_DWORD *)(v639 + 56) = v840;
                        *(_OWORD *)(v639 + 40) = v677;
                        *(_DWORD *)(v639 + 32) = v676;
                      }
                      else
                      {
                        *(void *)(v639 + 40) = v839;
                        *(_DWORD *)(v639 + 32) = 0;
                      }
                      goto LABEL_1201;
                    }
                  }
                  else
                  {
                    long long v681 = *(_OWORD *)&v836[8];
                    *(_DWORD *)(v639 + 24) = v837;
                    *(_OWORD *)v673 = v681;
                    int v674 = *(_DWORD *)(v639 + 32);
                    int v675 = v838;
                    if (v674 != v838) {
                      goto LABEL_1188;
                    }
                  }
                }
                else
                {
                  int v678 = *(_DWORD *)v836 ^ (*(int *)v836 >> 31);
                  if (v678)
                  {
                    long long v679 = *(_OWORD *)&v836[8];
                    *(_DWORD *)(v639 + 24) = v837;
                    *(_OWORD *)(v639 + 8) = v679;
                    *(_DWORD *)uint64_t v639 = v678;
                    int v674 = *(_DWORD *)(v639 + 32);
                    int v675 = v838;
                    if (v674 != v838) {
                      goto LABEL_1188;
                    }
                  }
                  else
                  {
                    *(void *)(v639 + 8) = *(void *)&v836[8];
                    *(_DWORD *)uint64_t v639 = 0;
                    int v674 = *(_DWORD *)(v639 + 32);
                    int v675 = v838;
                    if (v674 != v838) {
                      goto LABEL_1188;
                    }
                  }
                }
                v680 = (void *)(v639 + 40);
                if (v674 == v674 >> 31)
                {
                  void *v680 = v839;
                }
                else
                {
                  long long v682 = v839;
                  *(_DWORD *)(v639 + 56) = v840;
                  *(_OWORD *)v680 = v682;
                }
LABEL_1201:
                uint64_t v683 = v841;
                *(_DWORD *)(v648 + 8) = DWORD2(v841);
                *(void *)uint64_t v648 = v683;
LABEL_959:
                BOOL v169 = v524-- <= 2;
                unint64_t v525 = v604;
                if (v169) {
                  return;
                }
                goto LABEL_960;
              }
            }
          }
        }
        else
        {
          uint64_t v834 = *(void *)v807;
          int v835 = *(_DWORD *)(v807 + 8);
          int v532 = *(_DWORD *)(v747 + 32);
          int v530 = v532 >> 31;
          int v531 = v532;
          *(_DWORD *)&v813[4] = v532;
          if (v532 >> 31 == v532) {
            goto LABEL_965;
          }
        }
        uint64_t v831 = *(void *)v806;
        int v832 = *(_DWORD *)(v806 + 8);
        int v531 = v530;
        goto LABEL_965;
      }
    }
    unint64_t v15 = (unint64_t)v14 >> 1;
    uint64_t v16 = v747 + 80 * ((unint64_t)v14 >> 1);
    uint64_t v17 = v12 - 80;
    if ((unint64_t)v13 < 0x2801)
    {
      sub_1001EE7A4(v16, v747, v12 - 80);
      unint64_t v18 = (int *)v747;
      uint64_t v22 = a3 - 1;
      uint64_t v735 = v22;
      if (a4) {
        goto LABEL_12;
      }
LABEL_11:
      BOOL v23 = sub_1001EEE44(v727, (uint64_t)v18);
      unint64_t v18 = (int *)v747;
      if (v23) {
        goto LABEL_12;
      }
      v268 = (void *)(v747 + 8);
      int v267 = *(_DWORD *)v747;
      int v269 = *(int *)v747 >> 31;
      v725 = (void *)(v747 + 8);
      if (v267 >> 31 == v267)
      {
        *(void *)&v836[8] = *v268;
        int v269 = v267;
      }
      else
      {
        long long v270 = *(_OWORD *)v268;
        int v837 = *(_DWORD *)(v747 + 24);
        *(_OWORD *)&v836[8] = v270;
      }
      *(_DWORD *)v836 = v269 ^ v267;
      int v271 = *(_DWORD *)(v747 + 32);
      int v272 = v271 >> 31;
      v273 = (void *)(v747 + 40);
      v726 = (void *)(v747 + 40);
      if (v271 >> 31 == v271)
      {
        *(void *)&long long v839 = *v273;
        int v272 = v271;
      }
      else
      {
        long long v274 = *(_OWORD *)v273;
        int v840 = *(_DWORD *)(v747 + 56);
        long long v839 = v274;
      }
      int v838 = v272 ^ v271;
      long long v841 = *(_OWORD *)(v747 + 64);
      if (sub_1001EEE44((uint64_t)v836, v17))
      {
        a1 = v747;
        do
          a1 += 80;
        while (!sub_1001EEE44((uint64_t)v836, a1));
      }
      else
      {
        unint64_t v275 = v747 + 80;
        do
        {
          a1 = v275;
          if (v275 >= a2) {
            break;
          }
          BOOL v276 = sub_1001EEE44((uint64_t)v836, v275);
          unint64_t v275 = a1 + 80;
        }
        while (!v276);
      }
      unint64_t v277 = a2;
      if (a1 < a2)
      {
        unint64_t v277 = a2;
        do
          v277 -= 80;
        while (sub_1001EEE44((uint64_t)v836, v277));
      }
      if (a1 < v277)
      {
        unsigned int v751 = 0;
        unsigned int v750 = 0;
        unsigned int v749 = 0;
        unsigned int v748 = 0;
        unint64_t v745 = 0;
        unint64_t v746 = 0;
        unint64_t v743 = 0;
        unint64_t v744 = 0;
        uint64_t v278 = 0;
        LODWORD(v828) = 0;
        long long v826 = 0uLL;
        unint64_t v825 = 0;
        LODWORD(v819) = 0;
        unint64_t v824 = 0;
        uint64_t v279 = 0;
        LODWORD(v829) = 0;
        uint64_t v783 = 0;
        unsigned int v280 = 0;
        LODWORD(v6) = 0;
        HIDWORD(v822) = 0;
        unint64_t v823 = 0;
        unsigned int v281 = 0;
        int v282 = 0;
        uint64_t v780 = 0;
        unsigned int v779 = 0;
        unsigned int v790 = 0;
        unint64_t v792 = 0;
        LODWORD(v793) = 0;
        unsigned int v773 = 0;
        uint64_t v771 = 0;
        uint64_t v772 = 0;
        uint64_t v769 = 0;
        uint64_t v770 = 0;
        unsigned int v768 = 0;
        unsigned int v767 = 0;
        unsigned int v766 = 0;
        unsigned int v787 = 0;
        memset(v791, 0, sizeof(v791));
        unsigned int v283 = 0;
        unsigned int v284 = 0;
        unsigned int v285 = 0;
        unsigned int v286 = 0;
        unsigned int v287 = 0;
        unsigned int v288 = 0;
        unsigned int v289 = 0;
        unsigned int v290 = 0;
        unsigned int v291 = 0;
        unsigned int v292 = 0;
        unsigned int v293 = 0;
        LODWORD(v294) = 0;
        unsigned int v786 = 0;
        unsigned int v789 = 0;
        LODWORD(v794) = 0;
        do
        {
          LODWORD(v830) = v282;
          unsigned int v778 = v294;
          unsigned int v802 = v293;
          LODWORD(v801) = v292;
          LODWORD(v800) = v291;
          LODWORD(v799) = v290;
          unsigned int v798 = v289;
          LODWORD(v797) = v288;
          unint64_t v796 = __PAIR64__(v287, v286);
          unint64_t v795 = __PAIR64__(v285, v284);
          HIDWORD(v794) = v283;
          sub_1001EF058(a1, v277);
          uint64_t v295 = v279;
          unsigned int v296 = v819;
          *(_OWORD *)v848 = *(_OWORD *)(a1 + 64);
          int v297 = *(_DWORD *)(v277 + 72);
          *(void *)(a1 + 64) = *(void *)(v277 + 64);
          *(_DWORD *)(a1 + 72) = v297;
          *(void *)(v277 + 64) = *(void *)v848;
          unint64_t v806 = v277;
          *(_DWORD *)(v277 + 72) = *(_DWORD *)&v848[8];
          unsigned __int8 v775 = v836[8];
          int v763 = v836[9];
          int v760 = v836[11];
          int v757 = v836[12];
          int v754 = v836[13];
          int v742 = v836[14];
          LODWORD(v815) = v836[16];
          LODWORD(v814) = v836[17];
          LODWORD(v810) = v837;
          LODWORD(v809) = BYTE1(v837);
          LODWORD(v808) = BYTE2(v837);
          int v784 = v838 >> 31;
          int v758 = v839;
          int v755 = BYTE1(v839);
          int v752 = BYTE2(v839);
          unint64_t v298 = a1;
          LODWORD(v816) = v836[10];
          unsigned __int8 v777 = v836[12];
          int v765 = v836[13];
          LODWORD(v805) = *(_DWORD *)&v836[8];
          uint64_t v761 = HIBYTE(*(void *)&v836[8]);
          unsigned __int8 v774 = v839;
          int v759 = BYTE3(v839);
          int v756 = BYTE4(v839);
          int v753 = BYTE5(v839);
          int v741 = BYTE6(v839);
          int v764 = v839;
          unint64_t v739 = BYTE7(v839);
          HIDWORD(v819) = *(int *)v836 >> 31;
          LODWORD(v818) = (*(int *)v836 >> 31) ^ *(_DWORD *)v836;
          int v817 = (int)v818 >> 31;
          unsigned int v299 = v823;
          *(_DWORD *)&v813[12] = v836[18];
          *(_DWORD *)&v813[8] = v836[19];
          *(_DWORD *)&v813[4] = v836[20];
          *(_DWORD *)v813 = v836[21];
          LODWORD(v812) = v836[22];
          LODWORD(v811) = v836[23];
          unsigned int v803 = v836[8];
          LODWORD(v804) = v836[9];
          while (1)
          {
            while (1)
            {
LABEL_480:
              while (1)
              {
                unint64_t v300 = v298 + 80;
                unint64_t v762 = v298;
                unint64_t v301 = v298;
                unsigned int v302 = HIDWORD(v823);
LABEL_482:
                uint64_t v303 = v278;
                int v304 = v828;
                unsigned int v305 = HIDWORD(v826);
                unsigned int v306 = DWORD2(v826);
                unsigned int v307 = DWORD1(v826);
                unsigned int v308 = v826;
                unsigned int v309 = HIDWORD(v825);
                unsigned int v310 = v825;
                unsigned int v311 = v296;
                unsigned int v312 = HIDWORD(v824);
                uint64_t v313 = v295;
                LODWORD(v819) = v824;
                int v314 = *(_DWORD *)v300;
                int v315 = *(int *)v300 >> 31;
                int v316 = *(_DWORD *)v300;
                unsigned int v317 = HIDWORD(v822);
                if (v315 != *(_DWORD *)v300)
                {
                  HIDWORD(v783) = *(unsigned __int8 *)(v300 + 16);
                  unsigned int v280 = *(unsigned __int8 *)(v300 + 17);
                  LODWORD(v6) = *(unsigned __int8 *)(v300 + 18);
                  unsigned int v317 = *(unsigned __int8 *)(v300 + 19);
                  unsigned int v302 = *(unsigned __int8 *)(v300 + 20);
                  unsigned int v281 = *(unsigned __int8 *)(v300 + 21);
                  unsigned int v299 = *(unsigned __int8 *)(v300 + 22);
                  LODWORD(v830) = *(unsigned __int8 *)(v300 + 23);
                  LODWORD(v783) = *(unsigned __int8 *)(v300 + 24);
                  HIDWORD(v780) = *(unsigned __int8 *)(v300 + 25);
                  LODWORD(v780) = *(unsigned __int8 *)(v300 + 26);
                  int v316 = v314 >> 31;
                  unsigned int v779 = *(unsigned __int8 *)(v300 + 27);
                }
                unint64_t v823 = __PAIR64__(v302, v299);
                HIDWORD(v820) = v281;
                LODWORD(v821) = v6;
                unint64_t v822 = __PAIR64__(v317, v280);
                unint64_t v827 = v300;
                unint64_t v318 = *(void *)(v300 + 8);
                unsigned int v319 = BYTE1(v318);
                unsigned int v320 = BYTE2(v318);
                unsigned int v321 = BYTE3(v318);
                unint64_t v322 = HIBYTE(v318);
                int v323 = v316 ^ v314;
                int v324 = (v316 ^ v314) >> 31;
                if (HIDWORD(v819) == *(_DWORD *)v836)
                {
                  BOOL v325 = v324 == v323 && *(void *)&v836[8] >= v318;
                  uint64_t v278 = v303;
                  uint64_t v326 = v313;
                  a1 = v827;
                  if (!v325)
                  {
LABEL_630:
                    uint64_t v278 = v303;
                    LODWORD(v828) = v304;
                    *((void *)&v826 + 1) = __PAIR64__(v305, v306);
                    *(void *)&long long v826 = __PAIR64__(v307, v308);
                    unint64_t v825 = __PAIR64__(v309, v310);
                    unsigned int v296 = v311;
                    uint64_t v295 = v313;
                    unint64_t v824 = __PAIR64__(v312, v819);
                    long long v11 = &v848[8];
                    goto LABEL_631;
                  }
                }
                else
                {
                  uint64_t v278 = v836[16];
                  LODWORD(v828) = v836[17];
                  long long v826 = *(_OWORD *)v813;
                  HIDWORD(v825) = v836[22];
                  LODWORD(v825) = v836[23];
                  unsigned int v296 = v837;
                  HIDWORD(v824) = BYTE1(v837);
                  uint64_t v326 = BYTE2(v837);
                  LODWORD(v824) = HIBYTE(v837);
                  BOOL v5 = v324 == v323;
                  a1 = v827;
                  if (!v5)
                  {
                    if (v836[8] < v318) {
                      goto LABEL_630;
                    }
                    uint64_t v278 = v836[16];
                    LODWORD(v828) = v836[17];
                    long long v826 = *(_OWORD *)v813;
                    HIDWORD(v825) = v836[22];
                    LODWORD(v825) = v836[23];
                    unsigned int v296 = v837;
                    HIDWORD(v824) = BYTE1(v837);
                    uint64_t v326 = BYTE2(v837);
                    LODWORD(v824) = HIBYTE(v837);
                    if (v836[8] <= v318)
                    {
                      if (v836[9] < BYTE1(v318)) {
                        goto LABEL_630;
                      }
                      uint64_t v278 = v836[16];
                      LODWORD(v828) = v836[17];
                      long long v826 = *(_OWORD *)v813;
                      HIDWORD(v825) = v836[22];
                      LODWORD(v825) = v836[23];
                      unsigned int v296 = v837;
                      HIDWORD(v824) = BYTE1(v837);
                      uint64_t v326 = BYTE2(v837);
                      LODWORD(v824) = HIBYTE(v837);
                      if (v836[9] <= BYTE1(v318))
                      {
                        if (v836[10] < BYTE2(v318)) {
                          goto LABEL_630;
                        }
                        uint64_t v278 = v836[16];
                        LODWORD(v828) = v836[17];
                        long long v826 = *(_OWORD *)v813;
                        HIDWORD(v825) = v836[22];
                        LODWORD(v825) = v836[23];
                        unsigned int v296 = v837;
                        HIDWORD(v824) = BYTE1(v837);
                        uint64_t v326 = BYTE2(v837);
                        LODWORD(v824) = HIBYTE(v837);
                        if (v836[10] <= BYTE2(v318))
                        {
                          if (v836[11] < BYTE3(v318)) {
                            goto LABEL_630;
                          }
                          uint64_t v278 = v836[16];
                          LODWORD(v828) = v836[17];
                          long long v826 = *(_OWORD *)v813;
                          HIDWORD(v825) = v836[22];
                          LODWORD(v825) = v836[23];
                          unsigned int v296 = v837;
                          HIDWORD(v824) = BYTE1(v837);
                          uint64_t v326 = BYTE2(v837);
                          LODWORD(v824) = HIBYTE(v837);
                          if (v836[11] <= BYTE3(v318))
                          {
                            if (v836[12] < BYTE4(v318)) {
                              goto LABEL_630;
                            }
                            uint64_t v278 = v836[16];
                            LODWORD(v828) = v836[17];
                            long long v826 = *(_OWORD *)v813;
                            HIDWORD(v825) = v836[22];
                            LODWORD(v825) = v836[23];
                            unsigned int v296 = v837;
                            HIDWORD(v824) = BYTE1(v837);
                            uint64_t v326 = BYTE2(v837);
                            LODWORD(v824) = HIBYTE(v837);
                            if (v836[12] <= BYTE4(v318))
                            {
                              if (v836[13] < BYTE5(v318)) {
                                goto LABEL_630;
                              }
                              uint64_t v278 = v836[16];
                              LODWORD(v828) = v836[17];
                              long long v826 = *(_OWORD *)v813;
                              HIDWORD(v825) = v836[22];
                              LODWORD(v825) = v836[23];
                              unsigned int v296 = v837;
                              HIDWORD(v824) = BYTE1(v837);
                              uint64_t v326 = BYTE2(v837);
                              LODWORD(v824) = HIBYTE(v837);
                              if (v836[13] <= BYTE5(v318))
                              {
                                if (v836[14] < BYTE6(v318)) {
                                  goto LABEL_630;
                                }
                                uint64_t v278 = v836[16];
                                LODWORD(v828) = v836[17];
                                long long v826 = *(_OWORD *)v813;
                                HIDWORD(v825) = v836[22];
                                LODWORD(v825) = v836[23];
                                unsigned int v296 = v837;
                                HIDWORD(v824) = BYTE1(v837);
                                uint64_t v326 = BYTE2(v837);
                                LODWORD(v824) = HIBYTE(v837);
                                if (v836[14] <= BYTE6(v318))
                                {
                                  if (v836[15] < v322) {
                                    goto LABEL_630;
                                  }
                                  uint64_t v278 = v836[16];
                                  LODWORD(v828) = v836[17];
                                  long long v826 = *(_OWORD *)v813;
                                  HIDWORD(v825) = v836[22];
                                  LODWORD(v825) = v836[23];
                                  unsigned int v296 = v837;
                                  HIDWORD(v824) = BYTE1(v837);
                                  uint64_t v326 = BYTE2(v837);
                                  LODWORD(v824) = HIBYTE(v837);
                                  if (v836[15] <= v322)
                                  {
                                    if (v836[16] < HIDWORD(v783)) {
                                      goto LABEL_630;
                                    }
                                    uint64_t v278 = v836[16];
                                    LODWORD(v828) = v836[17];
                                    long long v826 = *(_OWORD *)v813;
                                    HIDWORD(v825) = v836[22];
                                    LODWORD(v825) = v836[23];
                                    unsigned int v296 = v837;
                                    HIDWORD(v824) = BYTE1(v837);
                                    uint64_t v326 = BYTE2(v837);
                                    LODWORD(v824) = HIBYTE(v837);
                                    if (HIDWORD(v783) >= v836[16])
                                    {
                                      if (v836[17] < v822)
                                      {
                                        uint64_t v278 = v303;
                                        LODWORD(v828) = v304;
                                        *((void *)&v826 + 1) = __PAIR64__(v305, v306);
                                        *(void *)&long long v826 = __PAIR64__(v307, v308);
                                        unint64_t v825 = __PAIR64__(v309, v310);
                                        unsigned int v296 = v311;
                                        uint64_t v295 = v313;
                                        unint64_t v824 = __PAIR64__(v312, v819);
                                        long long v11 = &v848[8];
                                        unsigned int v280 = v822;
                                        goto LABEL_632;
                                      }
                                      uint64_t v278 = v836[16];
                                      LODWORD(v828) = v836[17];
                                      long long v826 = *(_OWORD *)v813;
                                      HIDWORD(v825) = v836[22];
                                      LODWORD(v825) = v836[23];
                                      unsigned int v296 = v837;
                                      HIDWORD(v824) = BYTE1(v837);
                                      uint64_t v326 = BYTE2(v837);
                                      LODWORD(v824) = HIBYTE(v837);
                                      if (v822 >= v836[17])
                                      {
                                        if (v836[18] < v821)
                                        {
                                          uint64_t v278 = v303;
                                          LODWORD(v828) = v304;
                                          *((void *)&v826 + 1) = __PAIR64__(v305, v306);
                                          *(void *)&long long v826 = __PAIR64__(v307, v308);
                                          unint64_t v825 = __PAIR64__(v309, v310);
                                          unsigned int v296 = v311;
                                          uint64_t v295 = v313;
                                          unint64_t v824 = __PAIR64__(v312, v819);
                                          long long v11 = &v848[8];
                                          unsigned int v280 = v822;
                                          LODWORD(v6) = v821;
                                          goto LABEL_633;
                                        }
                                        uint64_t v278 = v836[16];
                                        LODWORD(v828) = v836[17];
                                        HIDWORD(v826) = v836[18];
                                        *(void *)((char *)&v826 + 4) = *(void *)&v813[4];
                                        LODWORD(v826) = v836[21];
                                        HIDWORD(v825) = v836[22];
                                        LODWORD(v825) = v836[23];
                                        unsigned int v296 = v837;
                                        HIDWORD(v824) = BYTE1(v837);
                                        uint64_t v326 = BYTE2(v837);
                                        LODWORD(v824) = HIBYTE(v837);
                                        if (v821 >= v836[18])
                                        {
                                          if (v836[19] < HIDWORD(v822)) {
                                            goto LABEL_630;
                                          }
                                          uint64_t v278 = v836[16];
                                          LODWORD(v828) = v836[17];
                                          HIDWORD(v826) = v836[18];
                                          DWORD2(v826) = v836[19];
                                          *(void *)&long long v826 = *(void *)v813;
                                          HIDWORD(v825) = v836[22];
                                          LODWORD(v825) = v836[23];
                                          unsigned int v296 = v837;
                                          HIDWORD(v824) = BYTE1(v837);
                                          uint64_t v326 = BYTE2(v837);
                                          LODWORD(v824) = HIBYTE(v837);
                                          if (HIDWORD(v822) >= v836[19])
                                          {
                                            if (v836[20] < HIDWORD(v823)) {
                                              goto LABEL_630;
                                            }
                                            uint64_t v278 = v836[16];
                                            LODWORD(v828) = v836[17];
                                            *((void *)&v826 + 1) = *(void *)&v813[8];
                                            DWORD1(v826) = v836[20];
                                            LODWORD(v826) = v836[21];
                                            HIDWORD(v825) = v836[22];
                                            LODWORD(v825) = v836[23];
                                            unsigned int v296 = v837;
                                            HIDWORD(v824) = BYTE1(v837);
                                            uint64_t v326 = BYTE2(v837);
                                            LODWORD(v824) = HIBYTE(v837);
                                            if (HIDWORD(v823) >= v836[20])
                                            {
                                              if (v836[21] < v281) {
                                                goto LABEL_630;
                                              }
                                              uint64_t v278 = v836[16];
                                              LODWORD(v828) = v836[17];
                                              *((void *)&v826 + 1) = *(void *)&v813[8];
                                              DWORD1(v826) = v836[20];
                                              LODWORD(v826) = v836[21];
                                              HIDWORD(v825) = v836[22];
                                              LODWORD(v825) = v836[23];
                                              unsigned int v296 = v837;
                                              HIDWORD(v824) = BYTE1(v837);
                                              uint64_t v326 = BYTE2(v837);
                                              LODWORD(v824) = HIBYTE(v837);
                                              if (v281 >= v836[21])
                                              {
                                                if (v836[22] < v299) {
                                                  goto LABEL_630;
                                                }
                                                uint64_t v278 = v836[16];
                                                LODWORD(v828) = v836[17];
                                                long long v826 = *(_OWORD *)v813;
                                                HIDWORD(v825) = v836[22];
                                                LODWORD(v825) = v836[23];
                                                unsigned int v296 = v837;
                                                HIDWORD(v824) = BYTE1(v837);
                                                uint64_t v326 = BYTE2(v837);
                                                LODWORD(v824) = HIBYTE(v837);
                                                if (v299 >= v836[22])
                                                {
                                                  if (v836[23] < v830) {
                                                    goto LABEL_630;
                                                  }
                                                  uint64_t v278 = v836[16];
                                                  LODWORD(v828) = v836[17];
                                                  long long v826 = *(_OWORD *)v813;
                                                  HIDWORD(v825) = v836[22];
                                                  LODWORD(v825) = v836[23];
                                                  unsigned int v296 = v837;
                                                  HIDWORD(v824) = BYTE1(v837);
                                                  uint64_t v326 = BYTE2(v837);
                                                  LODWORD(v824) = HIBYTE(v837);
                                                  if (v830 >= v836[23])
                                                  {
                                                    if (v837 < v783) {
                                                      goto LABEL_785;
                                                    }
                                                    uint64_t v278 = v836[16];
                                                    LODWORD(v828) = v836[17];
                                                    long long v826 = *(_OWORD *)v813;
                                                    HIDWORD(v825) = v836[22];
                                                    LODWORD(v825) = v836[23];
                                                    unsigned int v296 = v837;
                                                    HIDWORD(v824) = BYTE1(v837);
                                                    uint64_t v326 = BYTE2(v837);
                                                    LODWORD(v824) = HIBYTE(v837);
                                                    a1 = v827;
                                                    if (v783 >= v837)
                                                    {
                                                      if (BYTE1(v837) < HIDWORD(v780)) {
                                                        goto LABEL_785;
                                                      }
                                                      uint64_t v278 = v836[16];
                                                      LODWORD(v828) = v836[17];
                                                      long long v826 = *(_OWORD *)v813;
                                                      HIDWORD(v825) = v836[22];
                                                      LODWORD(v825) = v836[23];
                                                      unsigned int v296 = v837;
                                                      HIDWORD(v824) = BYTE1(v837);
                                                      uint64_t v326 = BYTE2(v837);
                                                      LODWORD(v824) = HIBYTE(v837);
                                                      a1 = v827;
                                                      if (HIDWORD(v780) >= BYTE1(v837))
                                                      {
                                                        if (BYTE2(v837) < v780)
                                                        {
LABEL_785:
                                                          uint64_t v278 = v303;
                                                          LODWORD(v828) = v304;
                                                          *((void *)&v826 + 1) = __PAIR64__(v305, v306);
                                                          *(void *)&long long v826 = __PAIR64__(v307, v308);
                                                          unint64_t v825 = __PAIR64__(v309, v310);
                                                          unsigned int v296 = v311;
                                                          uint64_t v295 = v313;
                                                          unint64_t v824 = __PAIR64__(v312, v819);
                                                          long long v11 = &v848[8];
                                                          a1 = v827;
LABEL_631:
                                                          unsigned int v280 = v822;
LABEL_632:
                                                          LODWORD(v6) = v821;
LABEL_633:
                                                          unsigned int v327 = v836[8];
                                                          LODWORD(v7) = v836[9];
                                                          goto LABEL_634;
                                                        }
                                                        uint64_t v278 = v836[16];
                                                        LODWORD(v828) = v836[17];
                                                        long long v826 = *(_OWORD *)v813;
                                                        HIDWORD(v825) = v836[22];
                                                        LODWORD(v825) = v836[23];
                                                        unsigned int v296 = v837;
                                                        HIDWORD(v824) = BYTE1(v837);
                                                        uint64_t v326 = BYTE2(v837);
                                                        LODWORD(v824) = HIBYTE(v837);
                                                        a1 = v827;
                                                        if (v780 >= BYTE2(v837))
                                                        {
                                                          LODWORD(v828) = v836[17];
                                                          long long v826 = *(_OWORD *)v813;
                                                          HIDWORD(v825) = v836[22];
                                                          LODWORD(v825) = v836[23];
                                                          unsigned int v296 = v837;
                                                          HIDWORD(v824) = BYTE1(v837);
                                                          uint64_t v326 = BYTE2(v837);
                                                          LODWORD(v824) = HIBYTE(v837);
                                                          uint64_t v278 = v836[16];
                                                          if (HIBYTE(v837) < v779) {
                                                            goto LABEL_630;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                if (v315 != v314) {
                  break;
                }
                unint64_t v298 = a1;
                long long v11 = &v848[8];
                unsigned int v280 = v822;
                LODWORD(v6) = v821;
                unsigned int v327 = v836[8];
                LODWORD(v7) = v836[9];
                uint64_t v295 = v326;
                if (v817 == v818)
                {
                  unint64_t v298 = a1;
                  if (v318 >= *(void *)&v836[8])
                  {
                    unint64_t v301 = a1 - 80;
                    goto LABEL_579;
                  }
                }
              }
              unsigned int v327 = v836[8];
              uint64_t v295 = v326;
              if (v817 == v818)
              {
                unint64_t v301 = v762;
                long long v11 = &v848[8];
                unsigned int v280 = v822;
                LODWORD(v6) = v821;
LABEL_576:
                LODWORD(v7) = v836[9];
                goto LABEL_579;
              }
              BOOL v4 = v318 >= v803;
              BOOL v328 = v318 > v803;
              unsigned int v302 = HIDWORD(v823);
              LODWORD(v7) = v836[9];
              if (!v4) {
                goto LABEL_481;
              }
              if (v328) {
                goto LABEL_577;
              }
              BOOL v329 = v319 > v836[9];
              if (v319 < v836[9]) {
                goto LABEL_481;
              }
              long long v11 = &v848[8];
              if (v329) {
                goto LABEL_578;
              }
              if (v320 < v836[10]) {
                goto LABEL_481;
              }
              long long v11 = &v848[8];
              if (v320 > v836[10]) {
                goto LABEL_578;
              }
              if (v321 < v836[11]) {
                goto LABEL_481;
              }
              long long v11 = &v848[8];
              if (v321 > v836[11]) {
                goto LABEL_578;
              }
              if (BYTE4(v318) < v836[12]) {
                goto LABEL_481;
              }
              long long v11 = &v848[8];
              if (BYTE4(v318) > v836[12]) {
                goto LABEL_578;
              }
              if (BYTE5(v318) < v836[13]) {
                goto LABEL_481;
              }
              long long v11 = &v848[8];
              if (BYTE5(v318) > v836[13]) {
                goto LABEL_578;
              }
              if (BYTE6(v318) < v836[14]) {
                goto LABEL_481;
              }
              long long v11 = &v848[8];
              if (BYTE6(v318) > v836[14]) {
                goto LABEL_578;
              }
              if (v322 < v761) {
                goto LABEL_481;
              }
              long long v11 = &v848[8];
              if (v322 > v761) {
                goto LABEL_578;
              }
              unsigned int v330 = *(unsigned __int8 *)(a1 + 16);
              if (v330 < v278) {
                goto LABEL_481;
              }
              long long v11 = &v848[8];
              if (v278 < v330) {
                goto LABEL_578;
              }
              unsigned int v331 = *(unsigned __int8 *)(a1 + 17);
              if (v331 < v828) {
                goto LABEL_481;
              }
              long long v11 = &v848[8];
              if (v828 < v331) {
                goto LABEL_578;
              }
              unsigned int v332 = *(unsigned __int8 *)(a1 + 18);
              if (v332 < HIDWORD(v826)) {
                goto LABEL_481;
              }
              long long v11 = &v848[8];
              if (HIDWORD(v826) < v332) {
                goto LABEL_578;
              }
              unsigned int v333 = *(unsigned __int8 *)(a1 + 19);
              if (v333 < DWORD2(v826)) {
                goto LABEL_481;
              }
              long long v11 = &v848[8];
              if (DWORD2(v826) < v333) {
                goto LABEL_578;
              }
              unsigned int v334 = *(unsigned __int8 *)(a1 + 20);
              if (v334 < DWORD1(v826)) {
                goto LABEL_481;
              }
              if (DWORD1(v826) < v334) {
                goto LABEL_577;
              }
              unsigned int v335 = *(unsigned __int8 *)(a1 + 21);
              if (v335 < v826) {
                goto LABEL_481;
              }
              if (v826 < v335) {
                goto LABEL_577;
              }
              unsigned int v336 = *(unsigned __int8 *)(a1 + 22);
              if (v336 < HIDWORD(v825)) {
                goto LABEL_481;
              }
              if (HIDWORD(v825) < v336) {
                goto LABEL_577;
              }
              unsigned int v337 = *(unsigned __int8 *)(a1 + 23);
              if (v337 < v825) {
                goto LABEL_481;
              }
              if (v825 < v337) {
                goto LABEL_577;
              }
              unsigned int v338 = *(unsigned __int8 *)(a1 + 24);
              if (v338 < v296) {
                goto LABEL_481;
              }
              if (v296 < v338)
              {
LABEL_577:
                long long v11 = &v848[8];
LABEL_578:
                unsigned int v280 = v822;
                LODWORD(v6) = v821;
                goto LABEL_579;
              }
              unsigned int v339 = *(unsigned __int8 *)(a1 + 25);
              if (v339 < HIDWORD(v824)) {
                goto LABEL_481;
              }
              if (HIDWORD(v824) < v339)
              {
                a1 = v827;
                unint64_t v301 = v827 - 80;
                long long v11 = &v848[8];
LABEL_627:
                unsigned int v280 = v822;
                LODWORD(v6) = v821;
                uint64_t v295 = v326;
                unsigned int v327 = v836[8];
                goto LABEL_576;
              }
              a1 = v827;
              unsigned int v340 = *(unsigned __int8 *)(v827 + 26);
              unsigned int v302 = HIDWORD(v823);
              if (v340 < v326)
              {
LABEL_481:
                v301 += 80;
                unint64_t v300 = a1 + 80;
                unsigned int v280 = v822;
                LODWORD(v6) = v821;
                goto LABEL_482;
              }
              unint64_t v301 = v827 - 80;
              if (v326 < v340)
              {
                long long v11 = &v848[8];
                a1 = v827;
                goto LABEL_627;
              }
              a1 = v827;
              unint64_t v298 = v827;
              long long v11 = &v848[8];
              unsigned int v280 = v822;
              LODWORD(v6) = v821;
              uint64_t v295 = v326;
              unsigned int v327 = v836[8];
              LODWORD(v7) = v836[9];
              if (*(unsigned __int8 *)(v827 + 27) < v824) {
                continue;
              }
LABEL_579:
              int v341 = *(_DWORD *)(v301 + 112);
              int v342 = v341;
              if (v341 >> 31 != v341)
              {
                unsigned int v751 = *(unsigned __int8 *)(v301 + 128);
                unsigned int v750 = *(unsigned __int8 *)(v301 + 129);
                unsigned int v749 = *(unsigned __int8 *)(v301 + 130);
                unsigned int v748 = *(unsigned __int8 *)(v301 + 131);
                HIDWORD(v746) = *(unsigned __int8 *)(v301 + 132);
                LODWORD(v746) = *(unsigned __int8 *)(v301 + 133);
                HIDWORD(v745) = *(unsigned __int8 *)(v301 + 134);
                HIDWORD(v744) = *(unsigned __int8 *)(v301 + 136);
                LODWORD(v745) = *(unsigned __int8 *)(v301 + 135);
                HIDWORD(v743) = *(unsigned __int8 *)(v301 + 138);
                LODWORD(v744) = *(unsigned __int8 *)(v301 + 137);
                int v342 = v341 >> 31;
                LODWORD(v743) = *(unsigned __int8 *)(v301 + 139);
              }
              unint64_t v343 = *(void *)(v301 + 120);
              int v344 = v342 ^ v341;
              int v345 = v344 >> 31;
              if (v784 != v838) {
                break;
              }
              if (v345 == v344)
              {
                unint64_t v298 = a1;
                if ((unint64_t)v839 >= v343) {
                  continue;
                }
              }
              goto LABEL_634;
            }
            unint64_t v298 = a1;
            if (v345 == v344) {
              goto LABEL_480;
            }
            if (v839 < *(void *)(v301 + 120)) {
              break;
            }
            unint64_t v298 = a1;
            if (v839 > *(void *)(v301 + 120)) {
              goto LABEL_480;
            }
            if (BYTE1(v839) < BYTE1(v343)) {
              break;
            }
            unint64_t v298 = a1;
            if (BYTE1(v839) > BYTE1(v343)) {
              goto LABEL_480;
            }
            if (BYTE2(v839) < BYTE2(v343)) {
              break;
            }
            unint64_t v298 = a1;
            if (BYTE2(v839) > BYTE2(v343)) {
              goto LABEL_480;
            }
            if (BYTE3(v839) < BYTE3(v343)) {
              break;
            }
            unint64_t v298 = a1;
            if (BYTE3(v839) > BYTE3(v343)) {
              goto LABEL_480;
            }
            if (BYTE4(v839) < BYTE4(v343)) {
              break;
            }
            unint64_t v298 = a1;
            if (BYTE4(v839) > BYTE4(v343)) {
              goto LABEL_480;
            }
            if (BYTE5(v839) < BYTE5(v343)) {
              break;
            }
            unint64_t v298 = a1;
            if (BYTE5(v839) > BYTE5(v343)) {
              goto LABEL_480;
            }
            if (BYTE6(v839) < BYTE6(v343)) {
              break;
            }
            unint64_t v298 = a1;
            if (BYTE6(v839) > BYTE6(v343)) {
              goto LABEL_480;
            }
            unint64_t v346 = HIBYTE(v343);
            if (BYTE7(v839) < v346) {
              break;
            }
            unint64_t v298 = a1;
            if (BYTE7(v839) > v346) {
              goto LABEL_480;
            }
            if (BYTE8(v839) < v751) {
              break;
            }
            unint64_t v298 = a1;
            if (v751 < BYTE8(v839)) {
              goto LABEL_480;
            }
            if (BYTE9(v839) < v750) {
              break;
            }
            unint64_t v298 = a1;
            if (v750 < BYTE9(v839)) {
              goto LABEL_480;
            }
            if (BYTE10(v839) < v749) {
              break;
            }
            unint64_t v298 = a1;
            if (v749 < BYTE10(v839)) {
              goto LABEL_480;
            }
            if (BYTE11(v839) < v748) {
              break;
            }
            unint64_t v298 = a1;
            if (v748 < BYTE11(v839)) {
              goto LABEL_480;
            }
            if (BYTE12(v839) < HIDWORD(v746)) {
              break;
            }
            unint64_t v298 = a1;
            if (HIDWORD(v746) < BYTE12(v839)) {
              goto LABEL_480;
            }
            if (BYTE13(v839) < v746) {
              goto LABEL_788;
            }
            unint64_t v298 = v827;
            unsigned int v280 = v822;
            LODWORD(v6) = v821;
            if (v746 < BYTE13(v839)) {
              goto LABEL_480;
            }
            if (BYTE14(v839) < HIDWORD(v745)) {
              goto LABEL_788;
            }
            unint64_t v298 = v827;
            unsigned int v280 = v822;
            LODWORD(v6) = v821;
            if (HIDWORD(v745) < BYTE14(v839)) {
              goto LABEL_480;
            }
            if (HIBYTE(v839) < v745) {
              goto LABEL_788;
            }
            unint64_t v298 = v827;
            unsigned int v280 = v822;
            LODWORD(v6) = v821;
            if (v745 < HIBYTE(v839)) {
              goto LABEL_480;
            }
            if (v840 < HIDWORD(v744)) {
              goto LABEL_788;
            }
            unint64_t v298 = v827;
            unsigned int v280 = v822;
            LODWORD(v6) = v821;
            if (HIDWORD(v744) < v840) {
              goto LABEL_480;
            }
            if (BYTE1(v840) < v744) {
              goto LABEL_788;
            }
            unint64_t v298 = v827;
            unsigned int v280 = v822;
            LODWORD(v6) = v821;
            if (v744 < BYTE1(v840)) {
              goto LABEL_480;
            }
            if (BYTE2(v840) < HIDWORD(v743))
            {
LABEL_788:
              long long v11 = &v848[8];
              a1 = v827;
              unsigned int v280 = v822;
              LODWORD(v6) = v821;
              goto LABEL_633;
            }
            a1 = v827;
            unint64_t v298 = v827;
            long long v11 = &v848[8];
            unsigned int v280 = v822;
            LODWORD(v6) = v821;
            unsigned int v327 = v836[8];
            LODWORD(v7) = v836[9];
            if (HIDWORD(v743) >= BYTE2(v840))
            {
              unint64_t v298 = v827;
              if (HIBYTE(v840) < v743) {
                break;
              }
            }
          }
LABEL_634:
          uint64_t v279 = v295;
          LODWORD(v819) = v296;
          unsigned int v776 = v278;
          uint64_t v347 = v778;
          while (1)
          {
            while (1)
            {
              while (1)
              {
                do
                {
                  while (2)
                  {
                    unint64_t v348 = v806;
                    if (HIDWORD(v819) != *(_DWORD *)v836)
                    {
                      unsigned int v778 = v347;
                      unint64_t v372 = v806;
                      unsigned int v373 = v794;
                      unsigned int v374 = v793;
                      unsigned int v375 = HIDWORD(v792);
                      unsigned int v376 = v792;
                      unsigned int v377 = *(_DWORD *)&v791[8];
                      unsigned int v378 = *(_DWORD *)&v791[4];
                      unsigned int v379 = *(_DWORD *)v791;
                      unsigned int v380 = v790;
                      unsigned int v381 = v789;
                      unsigned int v382 = v787;
                      unsigned int v383 = v786;
                      while (1)
                      {
                        unint64_t v348 = v372;
                        int v385 = *(_DWORD *)(v372 - 80);
                        v372 -= 80;
                        int v384 = v385;
                        int v386 = v385 >> 31;
                        int v387 = v385;
                        BOOL v388 = v385 >> 31 == v385;
                        if (v385 >> 31 != v385)
                        {
                          unsigned int v373 = *(unsigned __int8 *)(v348 - 64);
                          unsigned int v377 = *(unsigned __int8 *)(v348 - 63);
                          unsigned int v378 = *(unsigned __int8 *)(v348 - 62);
                          unsigned int v381 = *(unsigned __int8 *)(v348 - 61);
                          unsigned int v383 = *(unsigned __int8 *)(v348 - 60);
                          unsigned int v375 = *(unsigned __int8 *)(v348 - 59);
                          unsigned int v379 = *(unsigned __int8 *)(v348 - 58);
                          unsigned int v382 = *(unsigned __int8 *)(v348 - 57);
                          unsigned int v374 = *(unsigned __int8 *)(v348 - 56);
                          unsigned int v376 = *(unsigned __int8 *)(v348 - 55);
                          unsigned int v380 = *(unsigned __int8 *)(v348 - 54);
                          int v387 = v386;
                          LODWORD(v829) = *(unsigned __int8 *)(v348 - 53);
                        }
                        unint64_t v351 = *(void *)(v348 - 72);
                        unsigned int v353 = v351;
                        int v282 = v830;
                        if ((v387 ^ v384) == (v387 ^ v384) >> 31)
                        {
LABEL_729:
                          unsigned int v786 = v383;
                          unsigned int v787 = v382;
                          unsigned int v789 = v381;
                          unsigned int v790 = v380;
                          *(_DWORD *)v791 = v379;
                          *(void *)&v791[4] = __PAIR64__(v377, v378);
                          unint64_t v792 = __PAIR64__(v375, v376);
                          LODWORD(v793) = v374;
                          LODWORD(v794) = v373;
                          unint64_t v806 = v348 - 80;
                          unsigned int v283 = v836[16];
                          unsigned int v284 = v836[17];
                          unsigned int v285 = v836[18];
                          unsigned int v286 = v836[19];
                          unsigned int v287 = v836[20];
                          unsigned int v288 = v836[21];
                          unsigned int v289 = v836[22];
                          unsigned int v290 = v836[23];
                          unsigned int v291 = v837;
                          unsigned int v292 = BYTE1(v837);
                          unsigned int v293 = BYTE2(v837);
                          uint64_t v294 = HIBYTE(v837);
                          uint64_t v278 = v776;
                          goto LABEL_730;
                        }
                        if (v327 >= v351)
                        {
                          if (v327 > v351) {
                            goto LABEL_729;
                          }
                          if (v7 >= BYTE1(v351))
                          {
                            if (v7 > BYTE1(v351)) {
                              goto LABEL_729;
                            }
                            if (v836[10] >= BYTE2(v351))
                            {
                              if (v836[10] > BYTE2(v351)) {
                                goto LABEL_729;
                              }
                              if (v836[11] >= BYTE3(v351))
                              {
                                if (v836[11] > BYTE3(v351)) {
                                  goto LABEL_729;
                                }
                                if (v836[12] >= BYTE4(v351))
                                {
                                  if (v836[12] > BYTE4(v351)) {
                                    goto LABEL_729;
                                  }
                                  if (v836[13] >= BYTE5(v351))
                                  {
                                    if (v836[13] > BYTE5(v351)) {
                                      goto LABEL_729;
                                    }
                                    if (v836[14] >= BYTE6(v351))
                                    {
                                      if (v836[14] > BYTE6(v351)) {
                                        goto LABEL_729;
                                      }
                                      if (v761 >= HIBYTE(v351))
                                      {
                                        if (v761 > HIBYTE(v351)) {
                                          goto LABEL_729;
                                        }
                                        if (v836[16] >= v373)
                                        {
                                          if (v373 < v836[16]) {
                                            goto LABEL_729;
                                          }
                                          if (v836[17] >= v377)
                                          {
                                            if (v377 < v836[17]) {
                                              goto LABEL_729;
                                            }
                                            if (v836[18] >= v378)
                                            {
                                              if (v378 < v836[18]) {
                                                goto LABEL_729;
                                              }
                                              if (v836[19] >= v381)
                                              {
                                                if (v381 < v836[19]) {
                                                  goto LABEL_729;
                                                }
                                                if (v836[20] >= v383)
                                                {
                                                  if (v383 < v836[20]) {
                                                    goto LABEL_729;
                                                  }
                                                  if (v836[21] >= v375)
                                                  {
                                                    if (v375 < v836[21]) {
                                                      goto LABEL_729;
                                                    }
                                                    if (v836[22] >= v379)
                                                    {
                                                      if (v379 < v836[22]) {
                                                        goto LABEL_729;
                                                      }
                                                      if (v836[23] >= v382)
                                                      {
                                                        if (v382 < v836[23]) {
                                                          goto LABEL_729;
                                                        }
                                                        if (v837 >= v374)
                                                        {
                                                          if (v374 < v837) {
                                                            goto LABEL_729;
                                                          }
                                                          if (BYTE1(v837) >= v376)
                                                          {
                                                            if (v376 < BYTE1(v837)) {
                                                              goto LABEL_729;
                                                            }
                                                            if (BYTE2(v837) >= v380) {
                                                              break;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                      unsigned __int8 v775 = v279;
                      unsigned int v786 = v383;
                      unsigned int v787 = v382;
                      unsigned int v789 = v381;
                      *(_DWORD *)v791 = v379;
                      *(void *)&v791[4] = __PAIR64__(v377, v378);
                      unint64_t v792 = __PAIR64__(v375, v376);
                      LODWORD(v793) = v374;
                      LODWORD(v794) = v373;
                      unint64_t v806 = v348 - 80;
                      unsigned int v790 = v380;
                      if (v380 >= BYTE2(v837))
                      {
                        unsigned int v283 = v836[16];
                        unsigned int v284 = v836[17];
                        unsigned int v285 = v836[18];
                        unsigned int v286 = v836[19];
                        unsigned int v287 = v836[20];
                        unsigned int v288 = v836[21];
                        unsigned int v289 = v836[22];
                        unsigned int v290 = v836[23];
                        unsigned int v291 = v837;
                        unsigned int v292 = BYTE1(v837);
                        unsigned int v293 = BYTE2(v837);
                        uint64_t v294 = HIBYTE(v837);
                        long long v11 = &v848[8];
                        a1 = v827;
                        unsigned int v280 = v822;
                        LODWORD(v6) = v821;
                        unsigned int v281 = HIDWORD(v820);
                        int v282 = v830;
                        uint64_t v278 = v776;
                        uint64_t v279 = v279;
                        unsigned int v327 = v836[8];
                        LODWORD(v7) = v836[9];
                        uint64_t v347 = v778;
                        if (HIBYTE(v837) < v829) {
                          continue;
                        }
LABEL_730:
                        if (!v388) {
                          goto LABEL_644;
                        }
                        goto LABEL_731;
                      }
                      unsigned int v283 = v836[16];
                      unsigned int v284 = v836[17];
                      unsigned int v285 = v836[18];
                      unsigned int v286 = v836[19];
                      unsigned int v287 = v836[20];
                      unsigned int v288 = v836[21];
                      unsigned int v289 = v836[22];
                      unsigned int v290 = v836[23];
                      unsigned int v291 = v837;
                      unsigned int v292 = BYTE1(v837);
                      unsigned int v293 = BYTE2(v837);
                      uint64_t v294 = HIBYTE(v837);
                      long long v11 = &v848[8];
                      a1 = v827;
                      unsigned int v280 = v822;
                      LODWORD(v6) = v821;
                      unsigned int v281 = HIDWORD(v820);
                      int v282 = v830;
                      uint64_t v278 = v776;
                      uint64_t v279 = v279;
                      unsigned int v327 = v836[8];
                      LODWORD(v7) = v836[9];
                      if (v388) {
                        goto LABEL_731;
                      }
                      goto LABEL_644;
                    }
                    break;
                  }
                  int v349 = *(_DWORD *)(v806 - 80);
                  v806 -= 80;
                  int v350 = v349;
                  if (v349 >> 31 != v349)
                  {
                    LODWORD(v794) = *(unsigned __int8 *)(v348 - 64);
                    *(_DWORD *)&v791[8] = *(unsigned __int8 *)(v348 - 63);
                    *(_DWORD *)&v791[4] = *(unsigned __int8 *)(v348 - 62);
                    unsigned int v789 = *(unsigned __int8 *)(v348 - 61);
                    unsigned int v786 = *(unsigned __int8 *)(v348 - 60);
                    HIDWORD(v792) = *(unsigned __int8 *)(v348 - 59);
                    *(_DWORD *)v791 = *(unsigned __int8 *)(v348 - 58);
                    unsigned int v787 = *(unsigned __int8 *)(v348 - 57);
                    LODWORD(v793) = *(unsigned __int8 *)(v348 - 56);
                    LODWORD(v792) = *(unsigned __int8 *)(v348 - 55);
                    unsigned int v790 = *(unsigned __int8 *)(v348 - 54);
                    int v350 = v349 >> 31;
                    LODWORD(v829) = *(unsigned __int8 *)(v348 - 53);
                  }
                  unint64_t v351 = *(void *)(v348 - 72);
                  BOOL v352 = (v350 ^ v349) == (v350 ^ v349) >> 31 && *(void *)&v836[8] >= v351;
                  int v282 = v830;
                }
                while (!v352);
                unsigned int v353 = *(void *)(v348 - 72);
                unsigned int v283 = HIDWORD(v794);
                unsigned int v284 = v795;
                unsigned int v285 = HIDWORD(v795);
                unsigned int v286 = v796;
                unsigned int v287 = HIDWORD(v796);
                unsigned int v288 = v797;
                unsigned int v289 = v798;
                unsigned int v290 = v799;
                unsigned int v291 = v800;
                unsigned int v292 = v801;
                unsigned int v293 = v802;
                uint64_t v294 = v347;
                if (v349 >> 31 == v349)
                {
LABEL_731:
                  if (v817 != v818 || v351 < *(void *)&v836[8]) {
                    goto LABEL_478;
                  }
                  goto LABEL_733;
                }
LABEL_644:
                if (v817 != v818)
                {
                  if (v353 < v327) {
                    goto LABEL_478;
                  }
                  if (v353 <= v327)
                  {
                    unsigned int v354 = *(unsigned __int8 *)(v348 - 71);
                    if (v354 < v7) {
                      goto LABEL_478;
                    }
                    if (v354 <= v7)
                    {
                      unsigned int v355 = *(unsigned __int8 *)(v348 - 70);
                      if (v355 < v836[10]) {
                        goto LABEL_478;
                      }
                      if (v355 <= v836[10])
                      {
                        unsigned int v356 = *(unsigned __int8 *)(v348 - 69);
                        if (v356 < v836[11]) {
                          goto LABEL_478;
                        }
                        if (v356 <= v836[11])
                        {
                          unsigned int v357 = *(unsigned __int8 *)(v348 - 68);
                          if (v357 < v836[12]) {
                            goto LABEL_478;
                          }
                          if (v357 <= v836[12])
                          {
                            unsigned int v358 = *(unsigned __int8 *)(v348 - 67);
                            if (v358 < v836[13]) {
                              goto LABEL_478;
                            }
                            if (v358 <= v836[13])
                            {
                              unsigned int v359 = *(unsigned __int8 *)(v348 - 66);
                              if (v359 < v836[14]) {
                                goto LABEL_478;
                              }
                              if (v359 <= v836[14])
                              {
                                unsigned int v360 = *(unsigned __int8 *)(v348 - 65);
                                if (v360 < v761) {
                                  goto LABEL_478;
                                }
                                if (v360 <= v761)
                                {
                                  unsigned int v361 = *(unsigned __int8 *)(v348 - 64);
                                  if (v361 < v283) {
                                    goto LABEL_478;
                                  }
                                  if (v283 >= v361)
                                  {
                                    unsigned int v362 = *(unsigned __int8 *)(v348 - 63);
                                    if (v362 < v284) {
                                      goto LABEL_478;
                                    }
                                    if (v284 >= v362)
                                    {
                                      unsigned int v363 = *(unsigned __int8 *)(v348 - 62);
                                      if (v363 < v285) {
                                        goto LABEL_478;
                                      }
                                      if (v285 >= v363)
                                      {
                                        unsigned int v364 = *(unsigned __int8 *)(v348 - 61);
                                        if (v364 < v286) {
                                          goto LABEL_478;
                                        }
                                        if (v286 >= v364)
                                        {
                                          unsigned int v365 = *(unsigned __int8 *)(v348 - 60);
                                          if (v365 < v287) {
                                            goto LABEL_478;
                                          }
                                          if (v287 >= v365)
                                          {
                                            unsigned int v366 = *(unsigned __int8 *)(v348 - 59);
                                            if (v366 < v288) {
                                              goto LABEL_478;
                                            }
                                            if (v288 >= v366)
                                            {
                                              unsigned int v367 = *(unsigned __int8 *)(v348 - 58);
                                              if (v367 < v289) {
                                                goto LABEL_478;
                                              }
                                              if (v289 >= v367)
                                              {
                                                unsigned int v368 = *(unsigned __int8 *)(v348 - 57);
                                                if (v368 < v290) {
                                                  goto LABEL_786;
                                                }
                                                long long v11 = &v848[8];
                                                a1 = v827;
                                                unsigned int v280 = v822;
                                                LODWORD(v6) = v821;
                                                unsigned int v281 = HIDWORD(v820);
                                                uint64_t v278 = v776;
                                                unsigned int v327 = v836[8];
                                                LODWORD(v7) = v836[9];
                                                if (v290 >= v368)
                                                {
                                                  unsigned int v369 = *(unsigned __int8 *)(v348 - 56);
                                                  if (v369 < v291) {
                                                    goto LABEL_786;
                                                  }
                                                  long long v11 = &v848[8];
                                                  a1 = v827;
                                                  unsigned int v280 = v822;
                                                  LODWORD(v6) = v821;
                                                  unsigned int v281 = HIDWORD(v820);
                                                  uint64_t v278 = v776;
                                                  unsigned int v327 = v836[8];
                                                  LODWORD(v7) = v836[9];
                                                  if (v291 >= v369)
                                                  {
                                                    unsigned int v370 = *(unsigned __int8 *)(v348 - 55);
                                                    if (v370 < v292) {
                                                      goto LABEL_786;
                                                    }
                                                    long long v11 = &v848[8];
                                                    a1 = v827;
                                                    unsigned int v280 = v822;
                                                    LODWORD(v6) = v821;
                                                    unsigned int v281 = HIDWORD(v820);
                                                    uint64_t v278 = v776;
                                                    unsigned int v327 = v836[8];
                                                    LODWORD(v7) = v836[9];
                                                    if (v292 >= v370)
                                                    {
                                                      unsigned int v371 = *(unsigned __int8 *)(v348 - 54);
                                                      if (v371 < v293) {
                                                        goto LABEL_786;
                                                      }
                                                      long long v11 = &v848[8];
                                                      a1 = v827;
                                                      unsigned int v280 = v822;
                                                      LODWORD(v6) = v821;
                                                      unsigned int v281 = HIDWORD(v820);
                                                      int v282 = v830;
                                                      uint64_t v278 = v776;
                                                      unsigned int v327 = v836[8];
                                                      LODWORD(v7) = v836[9];
                                                      if (v293 >= v371
                                                        && *(unsigned __int8 *)(v348 - 53) < v294)
                                                      {
                                                        goto LABEL_478;
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
LABEL_733:
                int v389 = *(_DWORD *)(v348 - 48);
                int v390 = v389;
                if (v389 >> 31 != v389)
                {
                  unsigned int v773 = *(unsigned __int8 *)(v348 - 32);
                  HIDWORD(v772) = *(unsigned __int8 *)(v348 - 31);
                  LODWORD(v772) = *(unsigned __int8 *)(v348 - 30);
                  HIDWORD(v771) = *(unsigned __int8 *)(v348 - 29);
                  LODWORD(v771) = *(unsigned __int8 *)(v348 - 28);
                  HIDWORD(v770) = *(unsigned __int8 *)(v348 - 27);
                  LODWORD(v770) = *(unsigned __int8 *)(v348 - 26);
                  HIDWORD(v769) = *(unsigned __int8 *)(v348 - 25);
                  LODWORD(v769) = *(unsigned __int8 *)(v348 - 24);
                  unsigned int v768 = *(unsigned __int8 *)(v348 - 23);
                  unsigned int v767 = *(unsigned __int8 *)(v348 - 22);
                  int v390 = v389 >> 31;
                  unsigned int v766 = *(unsigned __int8 *)(v348 - 21);
                }
                unint64_t v391 = *(void *)(v348 - 40);
                int v392 = v390 ^ v389;
                int v393 = v392 >> 31;
                if (v784 != v838) {
                  break;
                }
                uint64_t v347 = v294;
                unsigned int v802 = v293;
                LODWORD(v801) = v292;
                LODWORD(v800) = v291;
                LODWORD(v799) = v290;
                unsigned int v798 = v289;
                LODWORD(v797) = v288;
                unint64_t v796 = __PAIR64__(v287, v286);
                unint64_t v795 = __PAIR64__(v285, v284);
                HIDWORD(v794) = v283;
                BOOL v5 = v393 == v392;
                int v282 = v830;
                if (v5)
                {
                  uint64_t v347 = v294;
                  unsigned int v802 = v293;
                  LODWORD(v801) = v292;
                  LODWORD(v800) = v291;
                  LODWORD(v799) = v290;
                  unsigned int v798 = v289;
                  LODWORD(v797) = v288;
                  unint64_t v796 = __PAIR64__(v287, v286);
                  unint64_t v795 = __PAIR64__(v285, v284);
                  HIDWORD(v794) = v283;
                  if ((unint64_t)v839 >= v391) {
                    goto LABEL_478;
                  }
                }
              }
              if (v393 == v392)
              {
                int v282 = v830;
                goto LABEL_478;
              }
              uint64_t v347 = v294;
              unsigned int v802 = v293;
              LODWORD(v801) = v292;
              LODWORD(v800) = v291;
              LODWORD(v799) = v290;
              unsigned int v798 = v289;
              LODWORD(v797) = v288;
              unint64_t v796 = __PAIR64__(v287, v286);
              unint64_t v795 = __PAIR64__(v285, v284);
              HIDWORD(v794) = v283;
              int v282 = v830;
              if (v839 >= v391)
              {
                if (v839 > v391) {
                  goto LABEL_478;
                }
                uint64_t v347 = v294;
                unsigned int v802 = v293;
                LODWORD(v801) = v292;
                LODWORD(v800) = v291;
                LODWORD(v799) = v290;
                unsigned int v798 = v289;
                LODWORD(v797) = v288;
                unint64_t v796 = __PAIR64__(v287, v286);
                unint64_t v795 = __PAIR64__(v285, v284);
                HIDWORD(v794) = v283;
                int v282 = v830;
                if (BYTE1(v839) >= BYTE1(v391))
                {
                  if (BYTE1(v839) > BYTE1(v391)) {
                    goto LABEL_478;
                  }
                  uint64_t v347 = v294;
                  unsigned int v802 = v293;
                  LODWORD(v801) = v292;
                  LODWORD(v800) = v291;
                  LODWORD(v799) = v290;
                  unsigned int v798 = v289;
                  LODWORD(v797) = v288;
                  unint64_t v796 = __PAIR64__(v287, v286);
                  unint64_t v795 = __PAIR64__(v285, v284);
                  HIDWORD(v794) = v283;
                  int v282 = v830;
                  if (BYTE2(v839) >= BYTE2(v391))
                  {
                    if (BYTE2(v839) > BYTE2(v391)) {
                      goto LABEL_478;
                    }
                    uint64_t v347 = v294;
                    unsigned int v802 = v293;
                    LODWORD(v801) = v292;
                    LODWORD(v800) = v291;
                    LODWORD(v799) = v290;
                    unsigned int v798 = v289;
                    LODWORD(v797) = v288;
                    unint64_t v796 = __PAIR64__(v287, v286);
                    unint64_t v795 = __PAIR64__(v285, v284);
                    HIDWORD(v794) = v283;
                    int v282 = v830;
                    if (BYTE3(v839) >= BYTE3(v391))
                    {
                      if (BYTE3(v839) > BYTE3(v391)) {
                        goto LABEL_478;
                      }
                      uint64_t v347 = v294;
                      unsigned int v802 = v293;
                      LODWORD(v801) = v292;
                      LODWORD(v800) = v291;
                      LODWORD(v799) = v290;
                      unsigned int v798 = v289;
                      LODWORD(v797) = v288;
                      unint64_t v796 = __PAIR64__(v287, v286);
                      unint64_t v795 = __PAIR64__(v285, v284);
                      HIDWORD(v794) = v283;
                      int v282 = v830;
                      if (BYTE4(v839) >= BYTE4(v391))
                      {
                        if (BYTE4(v839) > BYTE4(v391)) {
                          goto LABEL_478;
                        }
                        uint64_t v347 = v294;
                        unsigned int v802 = v293;
                        LODWORD(v801) = v292;
                        LODWORD(v800) = v291;
                        LODWORD(v799) = v290;
                        unsigned int v798 = v289;
                        LODWORD(v797) = v288;
                        unint64_t v796 = __PAIR64__(v287, v286);
                        unint64_t v795 = __PAIR64__(v285, v284);
                        HIDWORD(v794) = v283;
                        int v282 = v830;
                        if (BYTE5(v839) >= BYTE5(v391))
                        {
                          if (BYTE5(v839) > BYTE5(v391)) {
                            goto LABEL_478;
                          }
                          uint64_t v347 = v294;
                          unsigned int v802 = v293;
                          LODWORD(v801) = v292;
                          LODWORD(v800) = v291;
                          LODWORD(v799) = v290;
                          unsigned int v798 = v289;
                          LODWORD(v797) = v288;
                          unint64_t v796 = __PAIR64__(v287, v286);
                          unint64_t v795 = __PAIR64__(v285, v284);
                          HIDWORD(v794) = v283;
                          int v282 = v830;
                          if (BYTE6(v839) >= BYTE6(v391))
                          {
                            if (BYTE6(v839) > BYTE6(v391)) {
                              goto LABEL_478;
                            }
                            unint64_t v394 = HIBYTE(v391);
                            uint64_t v347 = v294;
                            unsigned int v802 = v293;
                            LODWORD(v801) = v292;
                            LODWORD(v800) = v291;
                            LODWORD(v799) = v290;
                            unsigned int v798 = v289;
                            LODWORD(v797) = v288;
                            unint64_t v796 = __PAIR64__(v287, v286);
                            unint64_t v795 = __PAIR64__(v285, v284);
                            HIDWORD(v794) = v283;
                            if (v739 >= v394)
                            {
                              if (v739 > v394) {
                                goto LABEL_478;
                              }
                              uint64_t v347 = v294;
                              unsigned int v802 = v293;
                              LODWORD(v801) = v292;
                              LODWORD(v800) = v291;
                              LODWORD(v799) = v290;
                              unsigned int v798 = v289;
                              LODWORD(v797) = v288;
                              unint64_t v796 = __PAIR64__(v287, v286);
                              unint64_t v795 = __PAIR64__(v285, v284);
                              HIDWORD(v794) = v283;
                              if (BYTE8(v839) >= v773)
                              {
                                if (v773 < BYTE8(v839)) {
                                  goto LABEL_478;
                                }
                                uint64_t v347 = v294;
                                unsigned int v802 = v293;
                                LODWORD(v801) = v292;
                                LODWORD(v800) = v291;
                                LODWORD(v799) = v290;
                                unsigned int v798 = v289;
                                LODWORD(v797) = v288;
                                unint64_t v796 = __PAIR64__(v287, v286);
                                unint64_t v795 = __PAIR64__(v285, v284);
                                HIDWORD(v794) = v283;
                                if (BYTE9(v839) >= HIDWORD(v772))
                                {
                                  if (HIDWORD(v772) < BYTE9(v839)) {
                                    goto LABEL_478;
                                  }
                                  uint64_t v347 = v294;
                                  unsigned int v802 = v293;
                                  LODWORD(v801) = v292;
                                  LODWORD(v800) = v291;
                                  LODWORD(v799) = v290;
                                  unsigned int v798 = v289;
                                  LODWORD(v797) = v288;
                                  unint64_t v796 = __PAIR64__(v287, v286);
                                  unint64_t v795 = __PAIR64__(v285, v284);
                                  HIDWORD(v794) = v283;
                                  if (BYTE10(v839) >= v772)
                                  {
                                    if (v772 < BYTE10(v839)) {
                                      goto LABEL_478;
                                    }
                                    uint64_t v347 = v294;
                                    unsigned int v802 = v293;
                                    LODWORD(v801) = v292;
                                    LODWORD(v800) = v291;
                                    LODWORD(v799) = v290;
                                    unsigned int v798 = v289;
                                    LODWORD(v797) = v288;
                                    unint64_t v796 = __PAIR64__(v287, v286);
                                    unint64_t v795 = __PAIR64__(v285, v284);
                                    HIDWORD(v794) = v283;
                                    if (BYTE11(v839) >= HIDWORD(v771))
                                    {
                                      if (HIDWORD(v771) < BYTE11(v839)) {
                                        goto LABEL_478;
                                      }
                                      uint64_t v347 = v294;
                                      unsigned int v802 = v293;
                                      LODWORD(v801) = v292;
                                      LODWORD(v800) = v291;
                                      LODWORD(v799) = v290;
                                      unsigned int v798 = v289;
                                      LODWORD(v797) = v288;
                                      unint64_t v796 = __PAIR64__(v287, v286);
                                      unint64_t v795 = __PAIR64__(v285, v284);
                                      HIDWORD(v794) = v283;
                                      if (BYTE12(v839) >= v771)
                                      {
                                        if (v771 < BYTE12(v839)) {
                                          goto LABEL_478;
                                        }
                                        uint64_t v347 = v294;
                                        unsigned int v802 = v293;
                                        LODWORD(v801) = v292;
                                        LODWORD(v800) = v291;
                                        LODWORD(v799) = v290;
                                        unsigned int v798 = v289;
                                        LODWORD(v797) = v288;
                                        unint64_t v796 = __PAIR64__(v287, v286);
                                        unint64_t v795 = __PAIR64__(v285, v284);
                                        HIDWORD(v794) = v283;
                                        if (BYTE13(v839) >= HIDWORD(v770))
                                        {
                                          if (HIDWORD(v770) < BYTE13(v839)) {
                                            goto LABEL_478;
                                          }
                                          uint64_t v347 = v294;
                                          unsigned int v802 = v293;
                                          LODWORD(v801) = v292;
                                          LODWORD(v800) = v291;
                                          LODWORD(v799) = v290;
                                          unsigned int v798 = v289;
                                          LODWORD(v797) = v288;
                                          unint64_t v796 = __PAIR64__(v287, v286);
                                          unint64_t v795 = __PAIR64__(v285, v284);
                                          HIDWORD(v794) = v283;
                                          if (BYTE14(v839) >= v770)
                                          {
                                            if (v770 < BYTE14(v839)) {
                                              goto LABEL_478;
                                            }
                                            uint64_t v347 = v294;
                                            unsigned int v802 = v293;
                                            LODWORD(v801) = v292;
                                            LODWORD(v800) = v291;
                                            LODWORD(v799) = v290;
                                            unsigned int v798 = v289;
                                            LODWORD(v797) = v288;
                                            unint64_t v796 = __PAIR64__(v287, v286);
                                            unint64_t v795 = __PAIR64__(v285, v284);
                                            HIDWORD(v794) = v283;
                                            if (HIBYTE(v839) >= HIDWORD(v769))
                                            {
                                              if (HIDWORD(v769) < HIBYTE(v839)) {
                                                goto LABEL_786;
                                              }
                                              uint64_t v347 = v294;
                                              unsigned int v802 = v293;
                                              LODWORD(v801) = v292;
                                              LODWORD(v800) = v291;
                                              LODWORD(v799) = v290;
                                              unsigned int v798 = v289;
                                              LODWORD(v797) = v288;
                                              unint64_t v796 = __PAIR64__(v287, v286);
                                              unint64_t v795 = __PAIR64__(v285, v284);
                                              HIDWORD(v794) = v283;
                                              long long v11 = &v848[8];
                                              a1 = v827;
                                              unsigned int v280 = v822;
                                              LODWORD(v6) = v821;
                                              unsigned int v281 = HIDWORD(v820);
                                              uint64_t v278 = v776;
                                              unsigned int v327 = v836[8];
                                              LODWORD(v7) = v836[9];
                                              if (v840 >= v769)
                                              {
                                                if (v769 < v840) {
                                                  goto LABEL_786;
                                                }
                                                uint64_t v347 = v294;
                                                unsigned int v802 = v293;
                                                LODWORD(v801) = v292;
                                                LODWORD(v800) = v291;
                                                LODWORD(v799) = v290;
                                                unsigned int v798 = v289;
                                                LODWORD(v797) = v288;
                                                unint64_t v796 = __PAIR64__(v287, v286);
                                                unint64_t v795 = __PAIR64__(v285, v284);
                                                HIDWORD(v794) = v283;
                                                long long v11 = &v848[8];
                                                a1 = v827;
                                                unsigned int v280 = v822;
                                                LODWORD(v6) = v821;
                                                unsigned int v281 = HIDWORD(v820);
                                                uint64_t v278 = v776;
                                                unsigned int v327 = v836[8];
                                                LODWORD(v7) = v836[9];
                                                if (BYTE1(v840) >= v768)
                                                {
                                                  if (v768 < BYTE1(v840)) {
                                                    goto LABEL_786;
                                                  }
                                                  uint64_t v347 = v294;
                                                  unsigned int v802 = v293;
                                                  LODWORD(v801) = v292;
                                                  LODWORD(v800) = v291;
                                                  LODWORD(v799) = v290;
                                                  unsigned int v798 = v289;
                                                  LODWORD(v797) = v288;
                                                  unint64_t v796 = __PAIR64__(v287, v286);
                                                  unint64_t v795 = __PAIR64__(v285, v284);
                                                  HIDWORD(v794) = v283;
                                                  long long v11 = &v848[8];
                                                  a1 = v827;
                                                  unsigned int v280 = v822;
                                                  LODWORD(v6) = v821;
                                                  unsigned int v281 = HIDWORD(v820);
                                                  uint64_t v278 = v776;
                                                  unsigned int v327 = v836[8];
                                                  LODWORD(v7) = v836[9];
                                                  if (BYTE2(v840) >= v767) {
                                                    break;
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            if (v767 < BYTE2(v840)) {
              break;
            }
            uint64_t v347 = v294;
            unsigned int v802 = v293;
            LODWORD(v801) = v292;
            LODWORD(v800) = v291;
            LODWORD(v799) = v290;
            unsigned int v798 = v289;
            LODWORD(v797) = v288;
            unint64_t v796 = __PAIR64__(v287, v286);
            unint64_t v795 = __PAIR64__(v285, v284);
            HIDWORD(v794) = v283;
            long long v11 = &v848[8];
            a1 = v827;
            unsigned int v280 = v822;
            LODWORD(v6) = v821;
            unsigned int v281 = HIDWORD(v820);
            int v282 = v830;
            uint64_t v278 = v776;
            unsigned int v327 = v836[8];
            LODWORD(v7) = v836[9];
            if (HIBYTE(v840) >= v766) {
              goto LABEL_478;
            }
          }
LABEL_786:
          long long v11 = &v848[8];
          a1 = v827;
          unsigned int v280 = v822;
          LODWORD(v6) = v821;
          unsigned int v281 = HIDWORD(v820);
          int v282 = v830;
          uint64_t v278 = v776;
LABEL_478:
          unint64_t v277 = v806;
        }
        while (a1 < v806);
      }
      v395 = (int *)(a1 - 80);
      a3 = v735;
      int8x8_t v10 = &v836[8];
      if (a1 - 80 != v747)
      {
        if (*(_DWORD *)v747 == *v395)
        {
          v396 = (void *)(a1 - 72);
          if (*(_DWORD *)v747 == *(int *)v747 >> 31)
          {
            void *v725 = *v396;
          }
          else
          {
            long long v400 = *(_OWORD *)v396;
            *(_DWORD *)(v747 + 24) = *(_DWORD *)(a1 - 56);
            *(_OWORD *)v725 = v400;
          }
        }
        else
        {
          int v397 = *v395 ^ (*v395 >> 31);
          v398 = (long long *)(a1 - 72);
          if (v397)
          {
            long long v399 = *v398;
            *(_DWORD *)(v747 + 24) = *(_DWORD *)(a1 - 56);
            *(_OWORD *)v725 = v399;
            *(_DWORD *)uint64_t v747 = v397;
          }
          else
          {
            *(void *)(v747 + 8) = *(void *)v398;
            *(_DWORD *)uint64_t v747 = 0;
          }
        }
        int v401 = *(_DWORD *)(v747 + 32);
        int v402 = *(_DWORD *)(a1 - 48);
        if (v401 == v402)
        {
          v403 = (void *)(a1 - 40);
          if (v401 == v401 >> 31)
          {
            void *v726 = *v403;
          }
          else
          {
            long long v407 = *(_OWORD *)v403;
            *(_DWORD *)(v747 + 56) = *(_DWORD *)(a1 - 24);
            *(_OWORD *)v726 = v407;
          }
        }
        else
        {
          int v404 = v402 ^ (v402 >> 31);
          v405 = (long long *)(a1 - 40);
          if (v404)
          {
            long long v406 = *v405;
            *(_DWORD *)(v747 + 56) = *(_DWORD *)(a1 - 24);
            *(_OWORD *)v726 = v406;
            *(_DWORD *)(v747 + 32) = v404;
          }
          else
          {
            *(void *)(v747 + 40) = *(void *)v405;
            *(_DWORD *)(v747 + 32) = 0;
          }
        }
        uint64_t v408 = *(void *)(a1 - 16);
        *(_DWORD *)(v747 + 72) = *(_DWORD *)(a1 - 8);
        *(void *)(v747 + 64) = v408;
      }
      int v409 = *v395;
      if (*v395 == *(_DWORD *)v836)
      {
        v410 = (void *)(a1 - 72);
        if (v409 == v409 >> 31)
        {
          void *v410 = *(void *)&v836[8];
        }
        else
        {
          long long v414 = *(_OWORD *)&v836[8];
          *(_DWORD *)(a1 - 56) = v837;
          *(_OWORD *)v410 = v414;
        }
      }
      else
      {
        int v411 = *(_DWORD *)v836 ^ (*(int *)v836 >> 31);
        v412 = (_OWORD *)(a1 - 72);
        if (v411)
        {
          long long v413 = *(_OWORD *)&v836[8];
          *(_DWORD *)(a1 - 56) = v837;
          _OWORD *v412 = v413;
          int *v395 = v411;
        }
        else
        {
          *(void *)v412 = *(void *)&v836[8];
          int *v395 = 0;
        }
      }
      int v415 = *(_DWORD *)(a1 - 48);
      BOOL v4 = v415 >= v838;
      BOOL v5 = v415 == v838;
      if (v415 == v838)
      {
        v416 = (void *)(a1 - 40);
        BOOL v4 = v415 >= (v415 >> 31);
        BOOL v5 = v415 == v415 >> 31;
        if (v415 == v415 >> 31)
        {
          void *v416 = v839;
        }
        else
        {
          long long v420 = v839;
          *(_DWORD *)(a1 - 24) = v840;
          *(_OWORD *)v416 = v420;
        }
      }
      else
      {
        int v417 = v838 ^ (v838 >> 31);
        if (v417)
        {
          unint64_t v418 = a1 - 40;
          long long v419 = v839;
          *(_DWORD *)(v418 + 16) = v840;
          *(_OWORD *)unint64_t v418 = v419;
          *(_DWORD *)(a1 - 48) = v417;
        }
        else
        {
          *(void *)(a1 - 40) = v839;
          *(_DWORD *)(a1 - 48) = 0;
        }
      }
      a4 = 0;
      uint64_t v421 = v841;
      *(_DWORD *)(a1 - 8) = DWORD2(v841);
      *(void *)(a1 - 16) = v421;
      goto LABEL_2;
    }
    sub_1001EE7A4(v747, v16, v12 - 80);
    uint64_t v7 = v747 + 80 * v15 - 80;
    sub_1001EE7A4(v729, v7, a2 - 160);
    uint64_t v6 = v747 + 80 * v15 + 80;
    sub_1001EE7A4(v728, v6, a2 - 240);
    sub_1001EE7A4(v7, v16, v6);
    unint64_t v18 = (int *)v747;
    sub_1001EF058(v747, v16);
    uint64_t v19 = v747 + 80 * v15;
    *(_OWORD *)v836 = *(_OWORD *)v736;
    uint64_t v20 = *(void *)(v19 + 64);
    *(_DWORD *)(v736 + 8) = *(_DWORD *)(v19 + 72);
    *(void *)unint64_t v736 = v20;
    uint64_t v21 = *(void *)v836;
    *(_DWORD *)(v19 + 72) = *(_DWORD *)&v836[8];
    *(void *)(v19 + 64) = v21;
    uint64_t v22 = a3 - 1;
    uint64_t v735 = v22;
    if ((a4 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_12:
    int v24 = *v18;
    int v25 = *v18 >> 31;
    unint64_t v26 = a2;
    if (v25 == *v18)
    {
      *(void *)&v836[8] = *(void *)v732;
      int v27 = 0;
      *(_DWORD *)v836 = 0;
      int v28 = v18[8];
      int v29 = v28 >> 31;
      if (v28 >> 31 == v28) {
        goto LABEL_16;
      }
    }
    else
    {
      long long v31 = *(_OWORD *)v732;
      int v837 = *(_DWORD *)(v732 + 16);
      *(_OWORD *)&v836[8] = v31;
      int v27 = v25 ^ v24;
      *(_DWORD *)v836 = v27;
      int v28 = v18[8];
      int v29 = v28 >> 31;
      if (v28 >> 31 == v28)
      {
LABEL_16:
        *(void *)&long long v839 = *(void *)v731;
        int v29 = v28;
        goto LABEL_17;
      }
    }
    long long v30 = *(_OWORD *)v731;
    int v840 = *(_DWORD *)(v731 + 16);
    long long v839 = v30;
LABEL_17:
    uint64_t v32 = 0;
    int v838 = v29 ^ v28;
    long long v841 = *(_OWORD *)v736;
    while (1)
    {
      int v33 = v27 >> 31;
      if (v27 >> 31 == v27)
      {
        *(void *)&v848[8] = *(void *)&v836[8];
        int v33 = v27;
      }
      else
      {
        *(_OWORD *)&v848[8] = *(_OWORD *)&v836[8];
        int v849 = v837;
      }
      unsigned int v34 = &v18[v32];
      int v35 = v33 ^ v27;
      *(_DWORD *)v848 = v35;
      int v36 = v18[v32 + 20];
      int v37 = v36 >> 31;
      uint64_t v38 = (uint64_t)&v18[v32 + 22];
      int v39 = v35 >> 31;
      if (v36 >> 31 == v36)
      {
        if (v39 != v35) {
          goto LABEL_18;
        }
        int v37 = v18[v32 + 20];
        if (*(void *)v38 < *(void *)&v848[8]) {
          goto LABEL_18;
        }
LABEL_30:
        *(void *)&long long v846 = *(void *)v38;
        int v41 = v37 ^ v36;
        int v845 = v41;
        int v42 = v41 >> 31;
        if (*(_DWORD *)v836 == *(int *)v836 >> 31) {
          goto LABEL_31;
        }
        goto LABEL_35;
      }
      if (v39 != v35)
      {
        BOOL v40 = sub_1001E6FAC((unsigned __int8 *)&v18[v32 + 22], &v848[8]);
        unint64_t v18 = (int *)v747;
        unint64_t v26 = a2;
        if (v40) {
          goto LABEL_18;
        }
        int v36 = v34[20];
        int v37 = v36 >> 31;
      }
      if (v37 == v36) {
        goto LABEL_30;
      }
      long long v43 = *(_OWORD *)v38;
      int v847 = *(_DWORD *)(v38 + 16);
      long long v846 = v43;
      int v41 = v37 ^ v36;
      int v845 = v41;
      int v42 = v41 >> 31;
      if (*(_DWORD *)v836 == *(int *)v836 >> 31)
      {
LABEL_31:
        if (v42 != v41 || *(void *)&v836[8] < (unint64_t)v846) {
          break;
        }
        goto LABEL_37;
      }
LABEL_35:
      if (v42 != v41)
      {
        BOOL v44 = sub_1001E6FAC(&v836[8], (unsigned __int8 *)&v846);
        unint64_t v18 = (int *)v747;
        unint64_t v26 = a2;
        if (v44) {
          break;
        }
      }
LABEL_37:
      int v45 = v838 >> 31;
      if (v838 >> 31 == v838)
      {
        *(void *)&long long v843 = v839;
        int v45 = v838;
      }
      else
      {
        long long v843 = v839;
        int v844 = v840;
      }
      int v46 = v45 ^ v838;
      int v842 = v45 ^ v838;
      uint64_t v47 = (unsigned __int8 *)&v18[v32 + 30];
      int v48 = (v45 ^ v838) >> 31;
      if (v18[v32 + 28] == v18[v32 + 28] >> 31)
      {
        if (v48 == v46 && *(void *)v47 >= (unint64_t)v843) {
          break;
        }
      }
      else
      {
        if (v48 == v46) {
          break;
        }
        BOOL v49 = sub_1001E6FAC(v47, (unsigned __int8 *)&v843);
        unint64_t v18 = (int *)v747;
        unint64_t v26 = a2;
        if (!v49) {
          break;
        }
      }
LABEL_18:
      int v27 = *(_DWORD *)v836;
      v32 += 20;
    }
    unint64_t v50 = (unint64_t)&v18[v32 + 20];
    unint64_t v51 = v26;
    if (v32 * 4)
    {
      do
        v51 -= 80;
      while (!sub_1001EEE44(v51, (uint64_t)v836));
    }
    else
    {
      unint64_t v51 = a2;
      do
      {
        if (v50 >= v51) {
          break;
        }
        v51 -= 80;
      }
      while (!sub_1001EEE44(v51, (uint64_t)v836));
    }
    unint64_t v733 = v51;
    unint64_t v734 = (unint64_t)&v18[v32 + 20];
    if (v50 < v51)
    {
      unint64_t v52 = v51;
      a1 = v50;
      while (1)
      {
        sub_1001EF058(a1, v52);
        *(_OWORD *)v848 = *(_OWORD *)(a1 + 64);
        int v55 = *(_DWORD *)(v52 + 72);
        *(void *)(a1 + 64) = *(void *)(v52 + 64);
        unint64_t v827 = a1;
        *(_DWORD *)(a1 + 72) = v55;
        *(void *)(v52 + 64) = *(void *)v848;
        uint64_t v818 = v52;
        *(_DWORD *)(v52 + 72) = *(_DWORD *)&v848[8];
        int v56 = *(int *)v836 >> 31;
        int v57 = v836[17];
        LODWORD(v823) = v836[8];
        LOBYTE(v817) = v836[10];
        HIDWORD(v824) = BYTE2(v837);
        LODWORD(v824) = HIBYTE(v837);
        uint64_t v740 = HIBYTE(*(void *)&v836[8]);
        HIDWORD(v820) = (*(int *)v836 >> 31) ^ *(_DWORD *)v836;
        LODWORD(v820) = SHIDWORD(v820) >> 31;
        unint64_t v737 = BYTE7(v839);
        LODWORD(v792) = v838 >> 31;
        int v782 = (v838 >> 31) ^ v838;
        int v781 = v782 >> 31;
        unsigned int v58 = HIDWORD(v746);
        unsigned int v59 = v746;
        unsigned int v60 = HIDWORD(v745);
        unsigned int v62 = HIDWORD(v744);
        unsigned int v61 = v745;
        unsigned int v64 = HIDWORD(v743);
        unsigned int v63 = v744;
        int v66 = v742;
        unsigned int v65 = v743;
        int v67 = v741;
        while (1)
        {
LABEL_57:
          unint64_t v68 = v827;
          unint64_t v69 = v827 + 80;
          int v70 = *(_DWORD *)(v827 + 80);
          if (v56 != *(_DWORD *)v836)
          {
            int v67 = HIBYTE(v837);
            LODWORD(v10) = BYTE2(v837);
            LODWORD(v16) = BYTE1(v837);
            LODWORD(v50) = v837;
            LODWORD(v11) = v836[23];
            LODWORD(v22) = v836[22];
            LODWORD(v18) = v836[21];
            LODWORD(v6) = v836[20];
            LODWORD(v7) = v836[19];
          }
          int v71 = v828;
          if (v56 != *(_DWORD *)v836) {
            int v71 = v836[18];
          }
          LODWORD(v828) = v71;
          int v72 = v829;
          if (v56 != *(_DWORD *)v836) {
            int v72 = v57;
          }
          LODWORD(v829) = v72;
          int v73 = v830;
          if (v56 != *(_DWORD *)v836) {
            int v73 = v836[16];
          }
          LODWORD(v830) = v73;
          int v74 = v70 >> 31;
          unint64_t v75 = (unint64_t *)(v827 + 88);
          if (v70 >> 31 != v70) {
            break;
          }
          v827 += 80;
          int v57 = v836[17];
          if (v820 == HIDWORD(v820))
          {
LABEL_67:
            unint64_t v76 = *v75;
            if (v76 >= *(void *)&v836[8])
            {
              int v77 = 0;
              int v78 = 0;
              if (v56 != *(_DWORD *)v836) {
                goto LABEL_127;
              }
LABEL_69:
              if (v78 != v77 || *(void *)&v836[8] < v76) {
                goto LABEL_233;
              }
LABEL_165:
              int v102 = v808;
              if (v792 != v838) {
                int v102 = HIBYTE(v840);
              }
              LODWORD(v808) = v102;
              int v103 = v809;
              if (v792 != v838) {
                int v103 = BYTE2(v840);
              }
              LODWORD(v809) = v103;
              int v104 = (int)v810;
              if (v792 != v838) {
                int v104 = BYTE1(v840);
              }
              LODWORD(v810) = v104;
              int v105 = v811;
              if (v792 != v838) {
                int v105 = v840;
              }
              LODWORD(v811) = v105;
              int v106 = v812;
              if (v792 != v838) {
                int v106 = HIBYTE(v839);
              }
              LODWORD(v812) = v106;
              int v107 = *(_DWORD *)v813;
              if (v792 != v838) {
                int v107 = BYTE14(v839);
              }
              *(_DWORD *)v813 = v107;
              int v108 = *(_DWORD *)&v813[4];
              if (v792 != v838) {
                int v108 = BYTE13(v839);
              }
              *(_DWORD *)&v813[4] = v108;
              int v109 = *(_DWORD *)&v813[8];
              if (v792 != v838) {
                int v109 = BYTE12(v839);
              }
              *(_DWORD *)&v813[8] = v109;
              int v110 = *(_DWORD *)&v813[12];
              if (v792 != v838) {
                int v110 = BYTE11(v839);
              }
              *(_DWORD *)&v813[12] = v110;
              int v111 = v814;
              if (v792 != v838) {
                int v111 = BYTE10(v839);
              }
              LODWORD(v814) = v111;
              if (v792 != v838) {
                unsigned int v58 = BYTE9(v839);
              }
              int v112 = v815;
              if (v792 != v838) {
                int v112 = BYTE8(v839);
              }
              LODWORD(v815) = v112;
              if (*(_DWORD *)(v68 + 112) == *(int *)(v68 + 112) >> 31)
              {
                if (v781 == v782 && *(void *)(v68 + 120) >= (unint64_t)v839) {
                  goto LABEL_233;
                }
              }
              else
              {
                if (v781 == v782) {
                  goto LABEL_233;
                }
                unsigned int v113 = *(unsigned __int8 *)(v68 + 120);
                if (v113 >= v839)
                {
                  if (v113 > v839) {
                    goto LABEL_233;
                  }
                  unsigned int v114 = *(unsigned __int8 *)(v68 + 121);
                  if (v114 >= BYTE1(v839))
                  {
                    if (v114 > BYTE1(v839)) {
                      goto LABEL_233;
                    }
                    unsigned int v115 = *(unsigned __int8 *)(v68 + 122);
                    if (v115 >= BYTE2(v839))
                    {
                      if (v115 > BYTE2(v839)) {
                        goto LABEL_233;
                      }
                      unsigned int v116 = *(unsigned __int8 *)(v68 + 123);
                      if (v116 >= BYTE3(v839))
                      {
                        if (v116 > BYTE3(v839)) {
                          goto LABEL_233;
                        }
                        unsigned int v117 = *(unsigned __int8 *)(v68 + 124);
                        if (v117 >= BYTE4(v839))
                        {
                          if (v117 > BYTE4(v839)) {
                            goto LABEL_233;
                          }
                          unsigned int v118 = *(unsigned __int8 *)(v68 + 125);
                          if (v118 >= BYTE5(v839))
                          {
                            if (v118 > BYTE5(v839)) {
                              goto LABEL_233;
                            }
                            unsigned int v119 = *(unsigned __int8 *)(v68 + 126);
                            if (v119 >= BYTE6(v839))
                            {
                              if (v119 > BYTE6(v839)) {
                                goto LABEL_233;
                              }
                              unsigned int v120 = *(unsigned __int8 *)(v68 + 127);
                              if (v120 >= v737)
                              {
                                if (v120 > v737) {
                                  goto LABEL_233;
                                }
                                unsigned int v121 = *(unsigned __int8 *)(v68 + 128);
                                if (v121 >= v112)
                                {
                                  if (v121 > v112) {
                                    goto LABEL_233;
                                  }
                                  unsigned int v122 = *(unsigned __int8 *)(v68 + 129);
                                  if (v122 >= v58)
                                  {
                                    if (v122 > v58) {
                                      goto LABEL_233;
                                    }
                                    unsigned int v123 = *(unsigned __int8 *)(v68 + 130);
                                    if (v123 >= v814)
                                    {
                                      if (v123 > v814) {
                                        goto LABEL_233;
                                      }
                                      unsigned int v124 = *(unsigned __int8 *)(v68 + 131);
                                      if (v124 >= v813[12])
                                      {
                                        if (v124 > v813[12]) {
                                          goto LABEL_233;
                                        }
                                        unsigned int v125 = *(unsigned __int8 *)(v68 + 132);
                                        if (v125 >= v813[8])
                                        {
                                          if (v125 > v813[8]) {
                                            goto LABEL_233;
                                          }
                                          unsigned int v126 = *(unsigned __int8 *)(v68 + 133);
                                          if (v126 >= v813[4])
                                          {
                                            if (v126 > v813[4]) {
                                              goto LABEL_233;
                                            }
                                            unsigned int v127 = *(unsigned __int8 *)(v68 + 134);
                                            if (v127 >= v813[0])
                                            {
                                              if (v127 > v813[0]) {
                                                goto LABEL_233;
                                              }
                                              unsigned int v128 = *(unsigned __int8 *)(v68 + 135);
                                              if (v128 >= v812)
                                              {
                                                if (v128 > v812) {
                                                  goto LABEL_233;
                                                }
                                                unsigned int v129 = *(unsigned __int8 *)(v68 + 136);
                                                if (v129 >= v811)
                                                {
                                                  if (v129 > v811) {
                                                    goto LABEL_233;
                                                  }
                                                  unsigned int v130 = *(unsigned __int8 *)(v68 + 137);
                                                  if (v130 >= v810)
                                                  {
                                                    if (v130 > v810) {
                                                      goto LABEL_233;
                                                    }
                                                    unsigned int v131 = *(unsigned __int8 *)(v68 + 138);
                                                    if (v131 >= v809
                                                      && (v131 > v809
                                                       || *(unsigned __int8 *)(v68 + 139) >= v808))
                                                    {
                                                      goto LABEL_233;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        v827 += 80;
        int v57 = v836[17];
        if (v820 != HIDWORD(v820))
        {
          while (1)
          {
            unsigned int v83 = *(unsigned __int8 *)(v69 + 8);
            if (v83 >= v823)
            {
              unint64_t v827 = v69;
              if (v83 > v823) {
                goto LABEL_125;
              }
              unsigned int v84 = *(unsigned __int8 *)(v69 + 9);
              if (v84 >= v836[9])
              {
                if (v84 > v836[9]) {
                  goto LABEL_125;
                }
                unsigned int v85 = *(unsigned __int8 *)(v69 + 10);
                if (v85 >= v836[10])
                {
                  if (v85 > v836[10]) {
                    goto LABEL_125;
                  }
                  unsigned int v86 = *(unsigned __int8 *)(v69 + 11);
                  if (v86 >= v836[11])
                  {
                    if (v86 > v836[11]) {
                      goto LABEL_125;
                    }
                    unsigned int v87 = *(unsigned __int8 *)(v69 + 12);
                    if (v87 >= v836[12])
                    {
                      if (v87 > v836[12]) {
                        goto LABEL_125;
                      }
                      unsigned int v88 = *(unsigned __int8 *)(v69 + 13);
                      if (v88 >= v836[13])
                      {
                        if (v88 > v836[13]) {
                          goto LABEL_125;
                        }
                        unsigned int v89 = *(unsigned __int8 *)(v69 + 14);
                        if (v89 >= v836[14])
                        {
                          if (v89 > v836[14]) {
                            goto LABEL_125;
                          }
                          unsigned int v90 = *(unsigned __int8 *)(v69 + 15);
                          if (v90 >= v740)
                          {
                            if (v90 > v740) {
                              goto LABEL_125;
                            }
                            unsigned int v91 = *(unsigned __int8 *)(v69 + 16);
                            if (v91 >= v830)
                            {
                              if (v91 > v830) {
                                goto LABEL_125;
                              }
                              unsigned int v92 = *(unsigned __int8 *)(v69 + 17);
                              if (v92 >= v829)
                              {
                                if (v92 > v829) {
                                  goto LABEL_125;
                                }
                                unsigned int v93 = *(unsigned __int8 *)(v69 + 18);
                                if (v93 >= v828)
                                {
                                  if (v93 > v828) {
                                    goto LABEL_125;
                                  }
                                  unsigned int v94 = *(unsigned __int8 *)(v69 + 19);
                                  if (v94 >= v7)
                                  {
                                    if (v94 > v7) {
                                      goto LABEL_125;
                                    }
                                    unsigned int v95 = *(unsigned __int8 *)(v69 + 20);
                                    if (v95 >= v6)
                                    {
                                      if (v95 > v6) {
                                        goto LABEL_125;
                                      }
                                      unsigned int v96 = *(unsigned __int8 *)(v69 + 21);
                                      if (v96 >= v18)
                                      {
                                        if (v96 > v18) {
                                          goto LABEL_125;
                                        }
                                        unsigned int v97 = *(unsigned __int8 *)(v69 + 22);
                                        if (v97 >= v22)
                                        {
                                          if (v97 > v22) {
                                            goto LABEL_125;
                                          }
                                          unsigned int v98 = *(unsigned __int8 *)(v69 + 23);
                                          if (v98 >= v11)
                                          {
                                            if (v98 > v11) {
                                              goto LABEL_125;
                                            }
                                            unsigned int v99 = *(unsigned __int8 *)(v69 + 24);
                                            if (v99 >= v50)
                                            {
                                              if (v99 > v50) {
                                                goto LABEL_125;
                                              }
                                              unsigned int v100 = *(unsigned __int8 *)(v69 + 25);
                                              if (v100 >= v16)
                                              {
                                                if (v100 > v16)
                                                {
LABEL_125:
                                                  unint64_t v75 = (unint64_t *)(v69 + 8);
                                                  unint64_t v68 = v69 - 80;
                                                  goto LABEL_126;
                                                }
                                                unsigned int v101 = *(unsigned __int8 *)(v69 + 26);
                                                if (v101 >= v10) {
                                                  break;
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            unint64_t v68 = v69;
            int v79 = *(_DWORD *)(v69 + 80);
            v69 += 80;
            int v70 = v79;
            if (v56 != *(_DWORD *)v836)
            {
              int v67 = HIBYTE(v837);
              LODWORD(v10) = BYTE2(v837);
              LODWORD(v16) = BYTE1(v837);
              LODWORD(v50) = v837;
              LODWORD(v11) = v836[23];
              LODWORD(v22) = v836[22];
              LODWORD(v18) = v836[21];
              LODWORD(v6) = v836[20];
              LODWORD(v7) = v836[19];
            }
            int v80 = v828;
            if (v56 != *(_DWORD *)v836) {
              int v80 = v836[18];
            }
            LODWORD(v828) = v80;
            int v81 = v829;
            if (v56 != *(_DWORD *)v836) {
              int v81 = v57;
            }
            LODWORD(v829) = v81;
            int v82 = v830;
            if (v56 != *(_DWORD *)v836) {
              int v82 = v836[16];
            }
            int v57 = v836[17];
            LODWORD(v830) = v82;
            int v74 = v70 >> 31;
            if (v70 >> 31 == v70)
            {
              unint64_t v75 = (unint64_t *)(v69 + 8);
              unint64_t v827 = v69;
              if (v820 != HIDWORD(v820)) {
                goto LABEL_57;
              }
              goto LABEL_67;
            }
          }
          unint64_t v75 = (unint64_t *)(v69 + 8);
          unint64_t v68 = v69 - 80;
          if (v101 <= v10 && *(unsigned __int8 *)(v69 + 27) < v67) {
            goto LABEL_57;
          }
        }
LABEL_126:
        unsigned int v59 = *(unsigned __int8 *)(v68 + 96);
        LOBYTE(v778) = *(unsigned char *)(v68 + 97);
        unsigned int v60 = *(unsigned __int8 *)(v68 + 98);
        unsigned int v61 = *(unsigned __int8 *)(v68 + 99);
        unsigned int v62 = *(unsigned __int8 *)(v68 + 100);
        unsigned int v63 = *(unsigned __int8 *)(v68 + 101);
        unsigned int v64 = *(unsigned __int8 *)(v68 + 102);
        unsigned int v65 = *(unsigned __int8 *)(v68 + 103);
        int v66 = *(unsigned __int8 *)(v68 + 104);
        unsigned __int8 v777 = *(unsigned char *)(v68 + 105);
        LOBYTE(v776) = *(unsigned char *)(v68 + 106);
        unsigned __int8 v775 = *(unsigned char *)(v68 + 107);
        unint64_t v76 = *v75;
        int v77 = v74 ^ v70;
        int v78 = (v74 ^ v70) >> 31;
        if (v56 == *(_DWORD *)v836) {
          goto LABEL_69;
        }
LABEL_127:
        if (v78 == v77) {
          goto LABEL_165;
        }
        if (v823 >= v76)
        {
          if (v823 > v76) {
            goto LABEL_165;
          }
          if (v836[9] >= BYTE1(v76))
          {
            if (v836[9] > BYTE1(v76)) {
              goto LABEL_165;
            }
            if (v836[10] >= BYTE2(v76))
            {
              if (v836[10] > BYTE2(v76)) {
                goto LABEL_165;
              }
              if (v836[11] >= BYTE3(v76))
              {
                if (v836[11] > BYTE3(v76)) {
                  goto LABEL_165;
                }
                if (v836[12] >= BYTE4(v76))
                {
                  if (v836[12] > BYTE4(v76)) {
                    goto LABEL_165;
                  }
                  if (v836[13] >= BYTE5(v76))
                  {
                    if (v836[13] > BYTE5(v76)) {
                      goto LABEL_165;
                    }
                    if (v836[14] >= BYTE6(v76))
                    {
                      if (v836[14] > BYTE6(v76)) {
                        goto LABEL_165;
                      }
                      if (v740 >= HIBYTE(v76))
                      {
                        if (v740 > HIBYTE(v76)) {
                          goto LABEL_165;
                        }
                        if (v836[16] >= v59)
                        {
                          int v57 = v836[17];
                          if (v836[16] > v59
                            || v836[17] >= v778
                            && (v836[17] > v778
                             || v836[18] >= v60
                             && (v836[18] > v60
                              || v836[19] >= v61
                              && (v836[19] > v61
                               || v836[20] >= v62
                               && (v836[20] > v62
                                || v836[21] >= v63
                                && (v836[21] > v63
                                 || v836[22] >= v64
                                 && (v836[22] > v64
                                  || v836[23] >= v65
                                  && (v836[23] > v65
                                   || v837 >= v66
                                   && (v837 > v66
                                    || BYTE1(v837) >= v777
                                    && (BYTE1(v837) > v777
                                     || v824 >= __PAIR64__(v776, v775)))))))))))
                          {
                            goto LABEL_165;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
LABEL_233:
        unint64_t v794 = __PAIR64__(v11, v16);
        LODWORD(v799) = v50;
        unint64_t v795 = __PAIR64__(v18, v22);
        unsigned int v798 = v6;
        unint64_t v796 = __PAIR64__(v10, v7);
        LODWORD(v819) = *(int *)v836 >> 31;
        int v742 = v66;
        unint64_t v743 = __PAIR64__(v64, v65);
        unint64_t v744 = __PAIR64__(v62, v63);
        unint64_t v745 = __PAIR64__(v60, v61);
        unint64_t v746 = __PAIR64__(v58, v59);
        uint64_t v132 = v818;
        int v133 = HIDWORD(v819);
        uint64_t v134 = v836[20];
        while (2)
        {
          uint64_t v135 = 0;
          uint64_t v818 = v132;
          int v136 = v801;
          int v137 = v800;
          unsigned int v138 = v803;
          unsigned int v139 = v816;
          int v140 = v765;
          unsigned int v141 = v805;
          int v142 = v764;
          int v143 = v804;
          int v144 = v763;
          int v145 = v762;
          unsigned int v146 = v836[16];
          uint64_t v147 = v836[17];
          unsigned int v148 = v836[18];
          uint64_t v149 = v134;
          int v150 = v836[21];
          int v151 = v836[22];
          int v152 = v836[23];
          int v153 = HIBYTE(v837);
          unsigned int v154 = BYTE1(v837);
          int v155 = BYTE2(v837);
          int v156 = v837;
          int v157 = v802;
          while (1)
          {
            uint64_t v821 = v135;
            uint64_t v158 = v132 + v135;
            if (v819 != *(_DWORD *)v836) {
              unsigned int v139 = v146;
            }
            LODWORD(v816) = v139;
            if (v819 == *(_DWORD *)v836) {
              int v159 = v140;
            }
            else {
              int v159 = v147;
            }
            if (v819 != *(_DWORD *)v836) {
              unsigned int v141 = v148;
            }
            LODWORD(v805) = v141;
            if (v819 != *(_DWORD *)v836)
            {
              int v142 = v836[19];
              int v143 = v149;
            }
            LODWORD(v804) = v143;
            if (v819 != *(_DWORD *)v836)
            {
              int v144 = v150;
              int v145 = v151;
              int v137 = v152;
              int v133 = v156;
            }
            HIDWORD(v819) = v133;
            if (v819 != *(_DWORD *)v836) {
              unsigned int v138 = v154;
            }
            unsigned int v803 = v138;
            if (v819 != *(_DWORD *)v836)
            {
              int v157 = v155;
              int v136 = v153;
            }
            LODWORD(v801) = v136;
            int v160 = *(_DWORD *)(v158 - 80);
            int v161 = v160 >> 31;
            LODWORD(v800) = v137;
            uint64_t v162 = v147;
            uint64_t v134 = v149;
            unsigned int v802 = v157;
            if (v160 >> 31 == v160)
            {
              LODWORD(v7) = v796;
              LODWORD(v18) = HIDWORD(v795);
              LODWORD(v22) = v795;
              LODWORD(v11) = HIDWORD(v794);
              LODWORD(v50) = v799;
              LODWORD(v16) = v794;
              if (v820 != HIDWORD(v820))
              {
                LODWORD(v6) = v798;
LABEL_416:
                unsigned int v54 = v779;
                uint64_t v53 = v132;
                LODWORD(v10) = HIDWORD(v796);
                goto LABEL_55;
              }
              unint64_t v163 = *(void *)(v158 - 72);
              LODWORD(v6) = v798;
              if (v163 < *(void *)&v836[8]) {
                goto LABEL_416;
              }
              unsigned int v164 = v836[18];
              LODWORD(v10) = HIDWORD(v796);
              int v165 = 0;
              int v166 = 0;
              unsigned int v167 = v836[16];
              if (v819 == *(_DWORD *)v836) {
                goto LABEL_340;
              }
            }
            else
            {
              unsigned int v164 = v836[18];
              LODWORD(v7) = v796;
              LODWORD(v18) = HIDWORD(v795);
              LODWORD(v22) = v795;
              LODWORD(v11) = HIDWORD(v794);
              LODWORD(v50) = v799;
              LODWORD(v16) = v794;
              uint64_t v53 = v132;
              LODWORD(v10) = HIDWORD(v796);
              if (v820 != HIDWORD(v820))
              {
                unsigned int v168 = *(unsigned __int8 *)(v158 - 72);
                BOOL v169 = v168 > v823;
                if (v168 < v823) {
                  goto LABEL_54;
                }
                uint64_t v53 = v818;
                if (!v169)
                {
                  unsigned int v170 = *(unsigned __int8 *)(v818 + v821 - 71);
                  BOOL v171 = v170 > v836[9];
                  if (v170 < v836[9]) {
                    goto LABEL_54;
                  }
                  uint64_t v53 = v818;
                  if (!v171)
                  {
                    unsigned int v172 = *(unsigned __int8 *)(v818 + v821 - 70);
                    BOOL v173 = v172 > v836[10];
                    if (v172 < v836[10]) {
                      goto LABEL_54;
                    }
                    uint64_t v53 = v818;
                    if (!v173)
                    {
                      unsigned int v174 = *(unsigned __int8 *)(v818 + v821 - 69);
                      BOOL v175 = v174 > v836[11];
                      if (v174 < v836[11]) {
                        goto LABEL_54;
                      }
                      uint64_t v53 = v818;
                      if (!v175)
                      {
                        unsigned int v176 = *(unsigned __int8 *)(v818 + v821 - 68);
                        BOOL v177 = v176 > v836[12];
                        if (v176 < v836[12]) {
                          goto LABEL_54;
                        }
                        uint64_t v53 = v818;
                        if (!v177)
                        {
                          unsigned int v178 = *(unsigned __int8 *)(v818 + v821 - 67);
                          BOOL v179 = v178 > v836[13];
                          if (v178 < v836[13]) {
                            goto LABEL_54;
                          }
                          uint64_t v53 = v818;
                          if (!v179)
                          {
                            unsigned int v180 = *(unsigned __int8 *)(v818 + v821 - 66);
                            BOOL v181 = v180 > v836[14];
                            if (v180 < v836[14]) {
                              goto LABEL_54;
                            }
                            uint64_t v53 = v818;
                            if (!v181)
                            {
                              unsigned int v182 = *(unsigned __int8 *)(v818 + v821 - 65);
                              BOOL v183 = v182 > v740;
                              if (v182 < v740) {
                                goto LABEL_54;
                              }
                              uint64_t v53 = v818;
                              if (!v183)
                              {
                                unsigned int v184 = *(unsigned __int8 *)(v818 + v821 - 64);
                                BOOL v185 = v184 > v816;
                                if (v184 < v816) {
                                  goto LABEL_54;
                                }
                                uint64_t v53 = v818;
                                if (!v185)
                                {
                                  unsigned int v186 = *(unsigned __int8 *)(v818 + v821 - 63);
                                  BOOL v187 = v186 > v159;
                                  if (v186 < v159) {
                                    goto LABEL_54;
                                  }
                                  uint64_t v53 = v818;
                                  if (!v187)
                                  {
                                    unsigned int v188 = *(unsigned __int8 *)(v818 + v821 - 62);
                                    BOOL v189 = v188 > v141;
                                    if (v188 < v141) {
                                      goto LABEL_54;
                                    }
                                    uint64_t v53 = v818;
                                    if (!v189)
                                    {
                                      unsigned int v190 = *(unsigned __int8 *)(v818 + v821 - 61);
                                      BOOL v191 = v190 > v142;
                                      if (v190 < v142) {
                                        goto LABEL_54;
                                      }
                                      uint64_t v53 = v818;
                                      if (!v191)
                                      {
                                        unsigned int v192 = *(unsigned __int8 *)(v818 + v821 - 60);
                                        BOOL v193 = v192 > v143;
                                        if (v192 < v143) {
                                          goto LABEL_54;
                                        }
                                        uint64_t v53 = v818;
                                        if (!v193)
                                        {
                                          unsigned int v194 = *(unsigned __int8 *)(v818 + v821 - 59);
                                          BOOL v195 = v194 > v144;
                                          if (v194 < v144) {
                                            goto LABEL_54;
                                          }
                                          uint64_t v53 = v818;
                                          if (!v195)
                                          {
                                            unsigned int v196 = *(unsigned __int8 *)(v818 + v821 - 58);
                                            BOOL v197 = v196 > v145;
                                            if (v196 < v145) {
                                              goto LABEL_54;
                                            }
                                            uint64_t v53 = v818;
                                            if (!v197)
                                            {
                                              unsigned int v198 = *(unsigned __int8 *)(v818 + v821 - 57);
                                              BOOL v199 = v198 > v137;
                                              if (v198 < v137) {
                                                goto LABEL_54;
                                              }
                                              uint64_t v53 = v818;
                                              if (!v199)
                                              {
                                                unsigned int v200 = *(unsigned __int8 *)(v818 + v821 - 56);
                                                BOOL v201 = v200 > BYTE4(v819);
                                                if (v200 < BYTE4(v819)) {
                                                  goto LABEL_54;
                                                }
                                                uint64_t v53 = v818;
                                                if (!v201)
                                                {
                                                  unsigned int v202 = *(unsigned __int8 *)(v818 + v821 - 55);
                                                  BOOL v203 = v202 > v138;
                                                  if (v202 < v138) {
                                                    goto LABEL_54;
                                                  }
                                                  uint64_t v53 = v818;
                                                  if (!v203)
                                                  {
                                                    unsigned int v204 = *(unsigned __int8 *)(v818 + v821 - 54);
                                                    BOOL v205 = v204 > v802;
                                                    if (v204 < v802)
                                                    {
LABEL_54:
                                                      uint64_t v53 = v818;
                                                      LODWORD(v6) = v798;
                                                      unsigned int v54 = v779;
                                                      goto LABEL_55;
                                                    }
                                                    uint64_t v53 = v818;
                                                    if (!v205)
                                                    {
                                                      uint64_t v53 = v818;
                                                      if (*(unsigned __int8 *)(v818 + v821 - 53) < v801)
                                                      {
                                                        LODWORD(v6) = v798;
                                                        unsigned int v54 = v779;
                                                        goto LABEL_55;
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              uint64_t v206 = v53 + v821;
              unsigned int v779 = *(unsigned __int8 *)(v206 - 64);
              unsigned __int8 v774 = *(unsigned char *)(v206 - 63);
              LOBYTE(v773) = *(unsigned char *)(v206 - 62);
              BYTE4(v772) = *(unsigned char *)(v206 - 61);
              LOBYTE(v772) = *(unsigned char *)(v206 - 60);
              BYTE4(v771) = *(unsigned char *)(v206 - 59);
              LOBYTE(v771) = *(unsigned char *)(v206 - 58);
              BYTE4(v770) = *(unsigned char *)(v206 - 57);
              LOBYTE(v770) = *(unsigned char *)(v206 - 56);
              BYTE4(v769) = *(unsigned char *)(v206 - 55);
              LOBYTE(v769) = *(unsigned char *)(v206 - 54);
              LOBYTE(v768) = *(unsigned char *)(v206 - 53);
              unint64_t v163 = *(void *)(v158 - 72);
              LODWORD(v6) = v798;
              int v165 = v161 ^ v160;
              int v166 = (v161 ^ v160) >> 31;
              unsigned int v167 = v836[16];
              if (v819 == *(_DWORD *)v836)
              {
LABEL_340:
                int v133 = HIDWORD(v819);
                if (v166 != v165)
                {
                  uint64_t v53 = v818;
                  goto LABEL_395;
                }
                uint64_t v207 = v818;
                if (*(void *)&v836[8] < v163)
                {
                  uint64_t v53 = v818;
                  goto LABEL_395;
                }
                goto LABEL_342;
              }
            }
            int v133 = HIDWORD(v819);
            if (v166 == v165) {
              goto LABEL_339;
            }
            if (v823 >= v163)
            {
              if (v823 > v163) {
                goto LABEL_339;
              }
              if (v836[9] >= BYTE1(v163))
              {
                if (v836[9] > BYTE1(v163)) {
                  goto LABEL_339;
                }
                if (v836[10] >= BYTE2(v163))
                {
                  if (v836[10] > BYTE2(v163)) {
                    goto LABEL_339;
                  }
                  if (v836[11] >= BYTE3(v163))
                  {
                    if (v836[11] > BYTE3(v163)) {
                      goto LABEL_339;
                    }
                    if (v836[12] >= BYTE4(v163))
                    {
                      if (v836[12] > BYTE4(v163)) {
                        goto LABEL_339;
                      }
                      if (v836[13] >= BYTE5(v163))
                      {
                        if (v836[13] > BYTE5(v163)) {
                          goto LABEL_339;
                        }
                        if (v836[14] >= BYTE6(v163))
                        {
                          if (v836[14] > BYTE6(v163)) {
                            goto LABEL_339;
                          }
                          if (v740 >= HIBYTE(v163))
                          {
                            if (v740 > HIBYTE(v163)) {
                              goto LABEL_339;
                            }
                            if (v167 >= v779)
                            {
                              if (v167 > v779) {
                                goto LABEL_339;
                              }
                              if (v162 >= v774)
                              {
                                if (v162 > v774) {
                                  goto LABEL_339;
                                }
                                if (v164 >= v773)
                                {
                                  if (v164 > v773) {
                                    goto LABEL_339;
                                  }
                                  if (v836[19] >= BYTE4(v772))
                                  {
                                    if (v836[19] > BYTE4(v772)) {
                                      goto LABEL_339;
                                    }
                                    if (v149 >= v772)
                                    {
                                      if (v149 > v772) {
                                        goto LABEL_339;
                                      }
                                      if (v836[21] >= BYTE4(v771))
                                      {
                                        if (v836[21] > BYTE4(v771)) {
                                          goto LABEL_339;
                                        }
                                        if (v836[22] >= v771)
                                        {
                                          if (v836[22] > v771) {
                                            goto LABEL_339;
                                          }
                                          if (v836[23] >= BYTE4(v770))
                                          {
                                            if (v836[23] > BYTE4(v770)) {
                                              goto LABEL_339;
                                            }
                                            if (v837 >= v770)
                                            {
                                              if (v837 > v770) {
                                                goto LABEL_339;
                                              }
                                              if (BYTE1(v837) >= BYTE4(v769))
                                              {
                                                if (BYTE1(v837) > BYTE4(v769))
                                                {
LABEL_339:
                                                  uint64_t v207 = v818 + v821;
                                                  goto LABEL_342;
                                                }
                                                if (BYTE2(v837) >= v769) {
                                                  break;
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
            uint64_t v135 = v821 - 80;
            unsigned int v139 = v167;
            int v140 = v162;
            unsigned int v141 = v164;
            int v142 = v836[19];
            int v143 = v149;
            int v144 = v836[21];
            int v151 = v836[22];
            int v145 = v836[22];
            int v152 = v836[23];
            int v137 = v836[23];
            int v156 = v837;
            int v133 = v837;
            int v150 = v836[21];
            unsigned int v148 = v164;
            uint64_t v147 = v162;
            unsigned int v146 = v167;
            unsigned int v154 = BYTE1(v837);
            unsigned int v138 = BYTE1(v837);
            int v155 = BYTE2(v837);
            int v157 = BYTE2(v837);
            int v153 = HIBYTE(v837);
            int v136 = HIBYTE(v837);
            uint64_t v132 = v818;
          }
          uint64_t v207 = v818 + v821;
          if (BYTE2(v837) <= v769 && HIBYTE(v837) < v768)
          {
            uint64_t v53 = v818;
LABEL_395:
            LODWORD(v762) = v145;
            int v763 = v144;
            int v764 = v142;
            int v765 = v159;
            uint64_t v132 = v53 + v821 - 80;
            continue;
          }
          break;
        }
LABEL_342:
        int v208 = v752;
        if (v792 != v838) {
          int v208 = HIBYTE(v840);
        }
        int v752 = v208;
        int v209 = v753;
        if (v792 != v838) {
          int v209 = BYTE2(v840);
        }
        int v753 = v209;
        int v210 = v754;
        if (v792 != v838) {
          int v210 = BYTE1(v840);
        }
        int v754 = v210;
        int v211 = v755;
        if (v792 != v838) {
          int v211 = v840;
        }
        int v755 = v211;
        int v212 = v756;
        if (v792 != v838) {
          int v212 = HIBYTE(v839);
        }
        int v756 = v212;
        int v213 = v757;
        if (v792 != v838) {
          int v213 = BYTE14(v839);
        }
        int v757 = v213;
        int v214 = v758;
        if (v792 != v838) {
          int v214 = BYTE13(v839);
        }
        int v758 = v214;
        int v215 = v759;
        if (v792 != v838) {
          int v215 = BYTE12(v839);
        }
        int v759 = v215;
        int v216 = v760;
        if (v792 != v838) {
          int v216 = BYTE11(v839);
        }
        int v217 = v761;
        if (v792 != v838) {
          int v217 = BYTE10(v839);
        }
        LODWORD(v761) = v217;
        unsigned int v218 = v750;
        if (v792 == v838)
        {
          unsigned int v219 = v751;
        }
        else
        {
          unsigned int v218 = BYTE9(v839);
          unsigned int v219 = BYTE8(v839);
        }
        unsigned int v751 = v219;
        unsigned int v750 = v218;
        int v760 = v216;
        if (*(_DWORD *)(v207 - 48) != *(int *)(v207 - 48) >> 31)
        {
          if (v781 != v782)
          {
            unsigned int v220 = *(unsigned __int8 *)(v207 - 40);
            LODWORD(v50) = v799;
            if (v220 < v839) {
              goto LABEL_418;
            }
            if (v220 <= v839)
            {
              unsigned int v221 = *(unsigned __int8 *)(v207 - 39);
              if (v221 < BYTE1(v839)) {
                goto LABEL_418;
              }
              if (v221 <= BYTE1(v839))
              {
                unsigned int v222 = *(unsigned __int8 *)(v207 - 38);
                if (v222 < BYTE2(v839)) {
                  goto LABEL_418;
                }
                if (v222 <= BYTE2(v839))
                {
                  unsigned int v223 = *(unsigned __int8 *)(v207 - 37);
                  if (v223 < BYTE3(v839)) {
                    goto LABEL_418;
                  }
                  if (v223 <= BYTE3(v839))
                  {
                    unsigned int v224 = *(unsigned __int8 *)(v207 - 36);
                    if (v224 < BYTE4(v839)) {
                      goto LABEL_418;
                    }
                    if (v224 <= BYTE4(v839))
                    {
                      unsigned int v225 = *(unsigned __int8 *)(v207 - 35);
                      if (v225 < BYTE5(v839)) {
                        goto LABEL_418;
                      }
                      if (v225 <= BYTE5(v839))
                      {
                        unsigned int v226 = *(unsigned __int8 *)(v207 - 34);
                        if (v226 < BYTE6(v839)) {
                          goto LABEL_418;
                        }
                        if (v226 <= BYTE6(v839))
                        {
                          unsigned int v227 = *(unsigned __int8 *)(v207 - 33);
                          if (v227 < v737) {
                            goto LABEL_418;
                          }
                          if (v227 <= v737)
                          {
                            unsigned int v228 = *(unsigned __int8 *)(v207 - 32);
                            if (v228 < v219) {
                              goto LABEL_418;
                            }
                            if (v228 <= v219)
                            {
                              unsigned int v229 = *(unsigned __int8 *)(v207 - 31);
                              if (v229 < v218) {
                                goto LABEL_418;
                              }
                              if (v229 <= v218)
                              {
                                unsigned int v230 = *(unsigned __int8 *)(v207 - 30);
                                if (v230 < v761) {
                                  goto LABEL_418;
                                }
                                uint64_t v134 = v836[20];
                                if (v230 <= v761)
                                {
                                  unsigned int v231 = *(unsigned __int8 *)(v207 - 29);
                                  if (v231 >= v216)
                                  {
                                    if (v231 > v216) {
                                      goto LABEL_394;
                                    }
                                    unsigned int v232 = *(unsigned __int8 *)(v207 - 28);
                                    if (v232 >= v759)
                                    {
                                      if (v232 > v759) {
                                        goto LABEL_412;
                                      }
                                      unsigned int v233 = *(unsigned __int8 *)(v207 - 27);
                                      if (v233 >= v758)
                                      {
                                        if (v233 > v758) {
                                          goto LABEL_412;
                                        }
                                        unsigned int v234 = *(unsigned __int8 *)(v207 - 26);
                                        if (v234 >= v757)
                                        {
                                          if (v234 > v757) {
                                            goto LABEL_412;
                                          }
                                          unsigned int v235 = *(unsigned __int8 *)(v207 - 25);
                                          if (v235 >= v756)
                                          {
                                            if (v235 > v756) {
                                              goto LABEL_412;
                                            }
                                            unsigned int v236 = *(unsigned __int8 *)(v207 - 24);
                                            if (v236 >= v755)
                                            {
                                              if (v236 <= v755)
                                              {
                                                unsigned int v237 = *(unsigned __int8 *)(v207 - 23);
                                                if (v237 < v754) {
                                                  goto LABEL_419;
                                                }
                                                if (v237 > v754) {
                                                  goto LABEL_412;
                                                }
                                                unsigned int v238 = *(unsigned __int8 *)(v207 - 22);
                                                if (v238 < v753)
                                                {
LABEL_419:
                                                  uint64_t v53 = v818;
                                                  unsigned int v54 = v779;
                                                  LODWORD(v7) = v796;
                                                  LODWORD(v6) = v798;
                                                  LODWORD(v18) = HIDWORD(v795);
                                                  LODWORD(v22) = v795;
                                                  LODWORD(v11) = HIDWORD(v794);
                                                  LODWORD(v50) = v799;
                                                  LODWORD(v16) = v794;
                                                  LODWORD(v10) = HIDWORD(v796);
                                                  goto LABEL_55;
                                                }
                                                if (v238 <= v753)
                                                {
                                                  uint64_t v53 = v818;
                                                  int v133 = HIDWORD(v819);
                                                  uint64_t v134 = v836[20];
                                                  LODWORD(v7) = v796;
                                                  LODWORD(v6) = v798;
                                                  LODWORD(v18) = HIDWORD(v795);
                                                  LODWORD(v22) = v795;
                                                  LODWORD(v11) = HIDWORD(v794);
                                                  LODWORD(v16) = v794;
                                                  LODWORD(v10) = HIDWORD(v796);
                                                  if (*(unsigned __int8 *)(v207 - 21) >= v752) {
                                                    goto LABEL_395;
                                                  }
                                                  goto LABEL_414;
                                                }
                                              }
LABEL_412:
                                              uint64_t v53 = v818;
                                              int v133 = HIDWORD(v819);
                                              uint64_t v134 = v836[20];
                                              goto LABEL_395;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
LABEL_418:
                                  uint64_t v53 = v818;
                                  unsigned int v54 = v779;
                                  goto LABEL_55;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
LABEL_394:
          uint64_t v53 = v818;
          int v133 = HIDWORD(v819);
          goto LABEL_395;
        }
        if (v781 == v782)
        {
          uint64_t v53 = v818;
          int v133 = HIDWORD(v819);
          if (*(void *)(v207 - 40) >= (unint64_t)v839) {
            goto LABEL_395;
          }
LABEL_414:
          unsigned int v54 = v779;
          LODWORD(v50) = v799;
        }
        else
        {
          uint64_t v53 = v818;
          unsigned int v54 = v779;
          LODWORD(v50) = v799;
        }
LABEL_55:
        int v741 = v67;
        LODWORD(v762) = v145;
        int v763 = v144;
        int v764 = v142;
        int v765 = v159;
        unsigned int v779 = v54;
        unint64_t v52 = v53 + v821 - 80;
        a1 = v827;
        if (v827 >= v52) {
          goto LABEL_421;
        }
      }
    }
    a1 = (unint64_t)&v18[v32 + 20];
LABEL_421:
    v239 = (int *)(a1 - 80);
    uint64_t v240 = v747;
    a3 = v735;
    int8x8_t v10 = &v836[8];
    long long v11 = &v848[8];
    if (a1 - 80 != v747)
    {
      if (*(_DWORD *)v747 == *v239)
      {
        v241 = (void *)(a1 - 72);
        if (*(_DWORD *)v747 == *(int *)v747 >> 31)
        {
          *(void *)unint64_t v732 = *v241;
          int v242 = *(_DWORD *)(v747 + 32);
          int v243 = *(_DWORD *)(a1 - 48);
          if (v242 != v243)
          {
LABEL_425:
            int v244 = v243 ^ (v243 >> 31);
            v245 = (long long *)(a1 - 40);
            if (v244)
            {
              long long v246 = *v245;
              *(_DWORD *)(v731 + 16) = *(_DWORD *)(a1 - 24);
              *(_OWORD *)unint64_t v731 = v246;
              *(_DWORD *)(v747 + 32) = v244;
            }
            else
            {
              *(void *)(v747 + 40) = *(void *)v245;
              *(_DWORD *)(v747 + 32) = 0;
            }
            goto LABEL_435;
          }
        }
        else
        {
          long long v251 = *(_OWORD *)v241;
          *(_DWORD *)(v732 + 16) = *(_DWORD *)(a1 - 56);
          *(_OWORD *)unint64_t v732 = v251;
          int v242 = *(_DWORD *)(v747 + 32);
          int v243 = *(_DWORD *)(a1 - 48);
          if (v242 != v243) {
            goto LABEL_425;
          }
        }
      }
      else
      {
        int v247 = *v239 ^ (*v239 >> 31);
        v248 = (long long *)(a1 - 72);
        if (v247)
        {
          long long v249 = *v248;
          *(_DWORD *)(v732 + 16) = *(_DWORD *)(a1 - 56);
          *(_OWORD *)unint64_t v732 = v249;
          *(_DWORD *)uint64_t v747 = v247;
          int v242 = *(_DWORD *)(v747 + 32);
          int v243 = *(_DWORD *)(a1 - 48);
          if (v242 != v243) {
            goto LABEL_425;
          }
        }
        else
        {
          *(void *)(v747 + 8) = *(void *)v248;
          *(_DWORD *)uint64_t v747 = 0;
          int v242 = *(_DWORD *)(v747 + 32);
          int v243 = *(_DWORD *)(a1 - 48);
          if (v242 != v243) {
            goto LABEL_425;
          }
        }
      }
      v250 = (void *)(a1 - 40);
      if (v242 == v242 >> 31)
      {
        *(void *)unint64_t v731 = *v250;
      }
      else
      {
        long long v252 = *(_OWORD *)v250;
        *(_DWORD *)(v731 + 16) = *(_DWORD *)(a1 - 24);
        *(_OWORD *)unint64_t v731 = v252;
      }
LABEL_435:
      uint64_t v253 = *(void *)(a1 - 16);
      *(_DWORD *)(v736 + 8) = *(_DWORD *)(a1 - 8);
      *(void *)unint64_t v736 = v253;
    }
    if (*v239 == *(_DWORD *)v836)
    {
      v254 = (void *)(a1 - 72);
      if (*v239 == *v239 >> 31)
      {
        void *v254 = *(void *)&v836[8];
        int v255 = *(_DWORD *)(a1 - 48);
        int v256 = v838;
        if (v255 != v838)
        {
LABEL_439:
          int v257 = v256 ^ (v256 >> 31);
          if (v257)
          {
            unint64_t v258 = a1 - 40;
            long long v259 = v839;
            *(_DWORD *)(v258 + 16) = v840;
            *(_OWORD *)unint64_t v258 = v259;
            *(_DWORD *)(a1 - 48) = v257;
          }
          else
          {
            *(void *)(a1 - 40) = v839;
            *(_DWORD *)(a1 - 48) = 0;
          }
          goto LABEL_449;
        }
      }
      else
      {
        long long v264 = *(_OWORD *)&v836[8];
        *(_DWORD *)(a1 - 56) = v837;
        *(_OWORD *)v254 = v264;
        int v255 = *(_DWORD *)(a1 - 48);
        int v256 = v838;
        if (v255 != v838) {
          goto LABEL_439;
        }
      }
    }
    else
    {
      int v260 = *(_DWORD *)v836 ^ (*(int *)v836 >> 31);
      v261 = (_OWORD *)(a1 - 72);
      if (v260)
      {
        long long v262 = *(_OWORD *)&v836[8];
        *(_DWORD *)(a1 - 56) = v837;
        _OWORD *v261 = v262;
        int *v239 = v260;
        int v255 = *(_DWORD *)(a1 - 48);
        int v256 = v838;
        if (v255 != v838) {
          goto LABEL_439;
        }
      }
      else
      {
        *(void *)v261 = *(void *)&v836[8];
        int *v239 = 0;
        int v255 = *(_DWORD *)(a1 - 48);
        int v256 = v838;
        if (v255 != v838) {
          goto LABEL_439;
        }
      }
    }
    v263 = (void *)(a1 - 40);
    if (v255 == v255 >> 31)
    {
      void *v263 = v839;
    }
    else
    {
      long long v265 = v839;
      *(_DWORD *)(a1 - 24) = v840;
      *(_OWORD *)v263 = v265;
    }
LABEL_449:
    uint64_t v266 = v841;
    *(_DWORD *)(a1 - 8) = DWORD2(v841);
    *(void *)(a1 - 16) = v266;
    if (v734 < v733) {
      goto LABEL_458;
    }
    LODWORD(v7) = sub_1001EE93C(v747, a1 - 80);
    if (!sub_1001EE93C(a1, a2))
    {
      uint64_t v240 = v747;
      if ((v7 & 1) == 0)
      {
LABEL_458:
        sub_1001E7A80(v240, a1 - 80, v735, a4 & 1);
        a4 = 0;
      }
      goto LABEL_2;
    }
    unint64_t v12 = a1 - 80;
    if (v7) {
      return;
    }
  }
  if ((a4 & 1) == 0)
  {
    if (v747 == v12) {
      return;
    }
    uint64_t v684 = v747 + 80;
    if (v747 + 80 == v12) {
      return;
    }
    LODWORD(v806) = 0;
    LODWORD(v807) = 0;
    LODWORD(v808) = 0;
    LODWORD(v809) = 0;
    LODWORD(v810) = 0;
    LODWORD(v811) = 0;
    LODWORD(v812) = 0;
    *(_DWORD *)v813 = 0;
    *(void *)&v813[4] = 0;
    *(_DWORD *)&v813[12] = 0;
    LODWORD(v814) = 0;
    memset(v791, 0, sizeof(v791));
    unint64_t v792 = 0;
    LODWORD(v793) = 0;
    unint64_t v794 = 0;
    unint64_t v795 = 0;
    unint64_t v796 = 0;
    LODWORD(v816) = 0;
    int v817 = 0;
    LODWORD(v818) = 0;
    uint64_t v819 = 0;
    uint64_t v820 = 0;
    LODWORD(v821) = 0;
    unint64_t v822 = 0;
    unint64_t v823 = 0;
    LODWORD(v830) = 0;
    LODWORD(v829) = 0;
    LODWORD(v828) = 0;
    LODWORD(v827) = 0;
    long long v826 = 0uLL;
    unint64_t v825 = 0;
    unint64_t v824 = 0;
    while (1)
    {
      while (1)
      {
        v685 = (int *)v684;
        if (sub_1001EEE44(v684, v747)) {
          break;
        }
        uint64_t v684 = (uint64_t)(v685 + 20);
        uint64_t v747 = (uint64_t)v685;
        if (v685 + 20 == (int *)a2) {
          return;
        }
      }
      int v686 = *v685;
      int v687 = *v685;
      uint64_t v688 = v747;
      if (*v685 >> 31 != *v685)
      {
        HIDWORD(v823) = *(unsigned __int8 *)(v747 + 96);
        LODWORD(v823) = *(unsigned __int8 *)(v747 + 97);
        HIDWORD(v822) = *(unsigned __int8 *)(v747 + 98);
        LODWORD(v822) = *(unsigned __int8 *)(v747 + 99);
        LODWORD(v821) = *(unsigned __int8 *)(v747 + 100);
        HIDWORD(v820) = *(unsigned __int8 *)(v747 + 101);
        LODWORD(v820) = *(unsigned __int8 *)(v747 + 102);
        HIDWORD(v819) = *(unsigned __int8 *)(v747 + 103);
        LODWORD(v819) = *(unsigned __int8 *)(v747 + 104);
        LODWORD(v818) = *(unsigned __int8 *)(v747 + 105);
        int v817 = *(unsigned __int8 *)(v747 + 106);
        int v687 = v686 >> 31;
        LODWORD(v816) = *(unsigned __int8 *)(v747 + 107);
      }
      int v689 = *(_DWORD *)(v747 + 112);
      int v690 = v689;
      if (v689 >> 31 != v689)
      {
        HIDWORD(v796) = *(unsigned __int8 *)(v747 + 128);
        LODWORD(v796) = *(unsigned __int8 *)(v747 + 129);
        HIDWORD(v795) = *(unsigned __int8 *)(v747 + 130);
        LODWORD(v795) = *(unsigned __int8 *)(v747 + 131);
        HIDWORD(v794) = *(unsigned __int8 *)(v747 + 132);
        LODWORD(v794) = *(unsigned __int8 *)(v747 + 133);
        LODWORD(v793) = *(unsigned __int8 *)(v747 + 134);
        HIDWORD(v792) = *(unsigned __int8 *)(v747 + 135);
        LODWORD(v792) = *(unsigned __int8 *)(v747 + 136);
        *(_DWORD *)&v791[8] = *(unsigned __int8 *)(v747 + 137);
        *(_DWORD *)&v791[4] = *(unsigned __int8 *)(v747 + 138);
        int v690 = v689 >> 31;
        *(_DWORD *)v791 = *(unsigned __int8 *)(v747 + 139);
      }
      unint64_t v691 = *(void *)(v747 + 88);
      unint64_t v785 = HIBYTE(v691);
      int v692 = v687 ^ v686;
      unint64_t v693 = *(void *)(v747 + 120);
      unint64_t v788 = HIBYTE(v693);
      int v694 = v690 ^ v689;
      *(_OWORD *)&v848[4] = *(_OWORD *)(v747 + 144);
      int v695 = (v687 ^ v686) >> 31;
      int v696 = (v690 ^ v689) >> 31;
      while (1)
      {
        if (v686 == *(_DWORD *)v688)
        {
          v697 = (void *)(v688 + 8);
          v698 = (void *)(v688 + 88);
          if (v686 == v686 >> 31)
          {
            void *v698 = *v697;
            int v699 = *(_DWORD *)(v688 + 112);
            int v700 = *(_DWORD *)(v688 + 32);
            if (v699 != v700) {
              goto LABEL_1218;
            }
          }
          else
          {
            *(_OWORD *)v698 = *(_OWORD *)v697;
            *(_DWORD *)(v688 + 104) = *(_DWORD *)(v688 + 24);
            int v699 = *(_DWORD *)(v688 + 112);
            int v700 = *(_DWORD *)(v688 + 32);
            if (v699 != v700) {
              goto LABEL_1218;
            }
          }
        }
        else
        {
          int v702 = *(_DWORD *)v688 ^ (*(int *)v688 >> 31);
          if (v702)
          {
            *(_OWORD *)(v688 + 88) = *(_OWORD *)(v688 + 8);
            *(_DWORD *)(v688 + 104) = *(_DWORD *)(v688 + 24);
            *(_DWORD *)(v688 + 80) = v702;
            int v699 = *(_DWORD *)(v688 + 112);
            int v700 = *(_DWORD *)(v688 + 32);
            if (v699 != v700) {
              goto LABEL_1218;
            }
          }
          else
          {
            *(void *)(v688 + 88) = *(void *)(v688 + 8);
            *(_DWORD *)(v688 + 80) = 0;
            int v699 = *(_DWORD *)(v688 + 112);
            int v700 = *(_DWORD *)(v688 + 32);
            if (v699 != v700)
            {
LABEL_1218:
              int v701 = v700 ^ (v700 >> 31);
              if (v701)
              {
                *(_OWORD *)(v688 + 120) = *(_OWORD *)(v688 + 40);
                *(_DWORD *)(v688 + 136) = *(_DWORD *)(v688 + 56);
                *(_DWORD *)(v688 + 112) = v701;
              }
              else
              {
                *(void *)(v688 + 120) = *(void *)(v688 + 40);
                *(_DWORD *)(v688 + 112) = 0;
              }
              goto LABEL_1228;
            }
          }
        }
        v703 = (void *)(v688 + 40);
        v704 = (void *)(v688 + 120);
        if (v699 == v699 >> 31)
        {
          void *v704 = *v703;
        }
        else
        {
          *(_OWORD *)v704 = *(_OWORD *)v703;
          *(_DWORD *)(v688 + 136) = *(_DWORD *)(v688 + 56);
        }
LABEL_1228:
        *(void *)(v688 + 144) = *(void *)(v688 + 64);
        *(_DWORD *)(v688 + 152) = *(_DWORD *)(v688 + 72);
        uint64_t v705 = v688;
        int v707 = *(_DWORD *)(v688 - 80);
        v688 -= 80;
        int v706 = v707;
        int v708 = v707 >> 31;
        int v709 = v707;
        if (v707 >> 31 != v707)
        {
          LODWORD(v830) = *(unsigned __int8 *)(v705 - 64);
          LODWORD(v829) = *(unsigned __int8 *)(v705 - 63);
          LODWORD(v828) = *(unsigned __int8 *)(v705 - 62);
          LODWORD(v827) = *(unsigned __int8 *)(v705 - 61);
          HIDWORD(v826) = *(unsigned __int8 *)(v705 - 60);
          DWORD2(v826) = *(unsigned __int8 *)(v705 - 59);
          DWORD1(v826) = *(unsigned __int8 *)(v705 - 58);
          LODWORD(v826) = *(unsigned __int8 *)(v705 - 57);
          HIDWORD(v825) = *(unsigned __int8 *)(v705 - 56);
          LODWORD(v825) = *(unsigned __int8 *)(v705 - 55);
          HIDWORD(v824) = *(unsigned __int8 *)(v705 - 54);
          int v709 = v708;
          LODWORD(v824) = *(unsigned __int8 *)(v705 - 53);
        }
        v710 = (unsigned __int8 *)(v688 + 8);
        unint64_t v711 = *(void *)(v688 + 8);
        int v712 = v709 ^ v706;
        int v713 = v712 >> 31;
        if (v695 == v692)
        {
          if (v713 != v712 || v691 < v711) {
            goto LABEL_1214;
          }
          *(void *)&v836[8] = v691;
          int v714 = 0;
          *(_DWORD *)v836 = 0;
          int v715 = 0;
          if (v708 != v706) {
            goto LABEL_1234;
          }
        }
        else
        {
          if (v713 != v712)
          {
            if (v691 < *(void *)(v688 + 8)) {
              goto LABEL_1214;
            }
            if (v691 <= *(void *)(v688 + 8))
            {
              if (BYTE1(v691) < BYTE1(v711)) {
                goto LABEL_1214;
              }
              if (BYTE1(v691) <= BYTE1(v711))
              {
                if (BYTE2(v691) < BYTE2(v711)) {
                  goto LABEL_1214;
                }
                if (BYTE2(v691) <= BYTE2(v711))
                {
                  if (BYTE3(v691) < BYTE3(v711)) {
                    goto LABEL_1214;
                  }
                  if (BYTE3(v691) <= BYTE3(v711))
                  {
                    if (BYTE4(v691) < BYTE4(v711)) {
                      goto LABEL_1214;
                    }
                    if (BYTE4(v691) <= BYTE4(v711))
                    {
                      if (BYTE5(v691) < BYTE5(v711)) {
                        goto LABEL_1214;
                      }
                      if (BYTE5(v691) <= BYTE5(v711))
                      {
                        if (BYTE6(v691) < BYTE6(v711)) {
                          goto LABEL_1214;
                        }
                        if (BYTE6(v691) <= BYTE6(v711))
                        {
                          unint64_t v722 = HIBYTE(v711);
                          if (v785 < v722
                            || v785 <= v722
                            && (HIDWORD(v823) < v830
                             || v830 >= HIDWORD(v823)
                             && (v823 < v829
                              || v829 >= v823
                              && (HIDWORD(v822) < v828
                               || v828 >= HIDWORD(v822)
                               && (v822 < v827
                                || v827 >= v822
                                && (v821 < HIDWORD(v826)
                                 || HIDWORD(v826) >= v821
                                 && (HIDWORD(v820) < DWORD2(v826)
                                  || DWORD2(v826) >= HIDWORD(v820)
                                  && (v820 < DWORD1(v826)
                                   || DWORD1(v826) >= v820
                                   && (HIDWORD(v819) < v826
                                    || v826 >= HIDWORD(v819)
                                    && (v819 < HIDWORD(v825)
                                     || HIDWORD(v825) >= v819
                                     && (v818 < v825
                                      || v825 >= v818 && __PAIR64__(v817, v816) < v824)))))))))))
                          {
                            goto LABEL_1214;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          *(void *)&v836[8] = v691;
          v836[16] = BYTE4(v823);
          v836[17] = v823;
          v836[18] = BYTE4(v822);
          v836[19] = v822;
          v836[20] = v821;
          v836[21] = BYTE4(v820);
          v836[22] = v820;
          v836[23] = BYTE4(v819);
          LOBYTE(v837) = v819;
          BYTE1(v837) = v818;
          BYTE2(v837) = v817;
          HIBYTE(v837) = v816;
          int v714 = v695 ^ v692;
          *(_DWORD *)v836 = v695 ^ v692;
          int v715 = (v695 ^ v692) >> 31;
          if (v708 != v706)
          {
LABEL_1234:
            if (v715 != v714 && sub_1001E6FAC(v710, &v836[8])) {
              break;
            }
            goto LABEL_1243;
          }
        }
        if (v715 != v714 || *(void *)v710 < v691) {
          break;
        }
LABEL_1243:
        int v716 = *(_DWORD *)(v705 - 48);
        int v717 = v716;
        if (v716 >> 31 != v716)
        {
          LODWORD(v814) = *(unsigned __int8 *)(v705 - 32);
          *(_DWORD *)&v813[12] = *(unsigned __int8 *)(v705 - 31);
          *(_DWORD *)&v813[8] = *(unsigned __int8 *)(v705 - 30);
          *(_DWORD *)&v813[4] = *(unsigned __int8 *)(v705 - 29);
          *(_DWORD *)v813 = *(unsigned __int8 *)(v705 - 28);
          LODWORD(v812) = *(unsigned __int8 *)(v705 - 27);
          LODWORD(v811) = *(unsigned __int8 *)(v705 - 26);
          LODWORD(v810) = *(unsigned __int8 *)(v705 - 25);
          LODWORD(v809) = *(unsigned __int8 *)(v705 - 24);
          LODWORD(v808) = *(unsigned __int8 *)(v705 - 23);
          LODWORD(v807) = *(unsigned __int8 *)(v705 - 22);
          int v717 = v716 >> 31;
          LODWORD(v806) = *(unsigned __int8 *)(v705 - 21);
        }
        unint64_t v718 = *(void *)(v705 - 40);
        int v719 = v717 ^ v716;
        int v720 = v719 >> 31;
        if (v696 == v694)
        {
          if (v720 == v719 && v693 >= v718) {
            break;
          }
        }
        else
        {
          if (v720 == v719) {
            break;
          }
          if (v693 >= *(void *)(v705 - 40))
          {
            if (*(void *)(v705 - 40) < v693) {
              break;
            }
            if (BYTE1(v693) >= BYTE1(v718))
            {
              if (BYTE1(v718) < BYTE1(v693)) {
                break;
              }
              if (BYTE2(v693) >= BYTE2(v718))
              {
                if (BYTE2(v718) < BYTE2(v693)) {
                  break;
                }
                if (BYTE3(v693) >= BYTE3(v718))
                {
                  if (BYTE3(v718) < BYTE3(v693)) {
                    break;
                  }
                  if (BYTE4(v693) >= BYTE4(v718))
                  {
                    if (BYTE4(v718) < BYTE4(v693)) {
                      break;
                    }
                    if (BYTE5(v693) >= BYTE5(v718))
                    {
                      if (BYTE5(v718) < BYTE5(v693)) {
                        break;
                      }
                      if (BYTE6(v693) >= BYTE6(v718))
                      {
                        if (BYTE6(v718) < BYTE6(v693)) {
                          break;
                        }
                        unint64_t v721 = HIBYTE(v718);
                        if (v788 >= v721
                          && (v721 < v788
                           || HIDWORD(v796) >= v814
                           && (v814 < HIDWORD(v796)
                            || v796 >= *(_DWORD *)&v813[12]
                            && (*(_DWORD *)&v813[12] < v796
                             || HIDWORD(v795) >= *(_DWORD *)&v813[8]
                             && (*(_DWORD *)&v813[8] < HIDWORD(v795)
                              || v795 >= *(_DWORD *)&v813[4]
                              && (*(_DWORD *)&v813[4] < v795
                               || HIDWORD(v794) >= *(_DWORD *)v813
                               && (*(_DWORD *)v813 < HIDWORD(v794)
                                || v794 >= v812
                                && (v812 < v794
                                 || v793 >= v811
                                 && (v811 < v793
                                  || HIDWORD(v792) >= v810
                                  && (v810 < HIDWORD(v792)
                                   || v792 >= v809
                                   && (v809 < v792
                                    || *(_DWORD *)&v791[8] >= v808
                                    && (v808 < *(_DWORD *)&v791[8]
                                     || *(void *)v791 >= __PAIR64__(v807, v806)))))))))))))
                        {
                          break;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
LABEL_1214:
        int v686 = *(_DWORD *)v705;
      }
      if (*(_DWORD *)v705 != v692)
      {
        if (v695 != v692)
        {
          *(void *)(v705 + 8) = v691;
          *(unsigned char *)(v705 + 16) = BYTE4(v823);
          *(unsigned char *)(v705 + 17) = v823;
          *(unsigned char *)(v705 + 18) = BYTE4(v822);
          *(unsigned char *)(v705 + 19) = v822;
          *(unsigned char *)(v705 + 20) = v821;
          *(unsigned char *)(v705 + 21) = BYTE4(v820);
          *(unsigned char *)(v705 + 22) = v820;
          *(unsigned char *)(v705 + 23) = BYTE4(v819);
          *(unsigned char *)(v705 + 24) = v819;
          *(unsigned char *)(v705 + 25) = v818;
          *(unsigned char *)(v705 + 26) = v817;
          *(unsigned char *)(v705 + 27) = v816;
          *(_DWORD *)uint64_t v705 = v695 ^ v692;
          v723 = (int *)a2;
          if (*(_DWORD *)(v705 + 32) != v694) {
            goto LABEL_1329;
          }
        }
        else
        {
          *(void *)(v705 + 8) = v691;
          *(_DWORD *)uint64_t v705 = 0;
          v723 = (int *)a2;
          if (*(_DWORD *)(v705 + 32) != v694) {
            goto LABEL_1329;
          }
        }
        goto LABEL_1333;
      }
      if (v695 != v692)
      {
        *(void *)(v705 + 8) = v691;
        *(unsigned char *)(v705 + 16) = BYTE4(v823);
        *(unsigned char *)(v705 + 17) = v823;
        *(unsigned char *)(v705 + 18) = BYTE4(v822);
        *(unsigned char *)(v705 + 19) = v822;
        *(unsigned char *)(v705 + 20) = v821;
        *(unsigned char *)(v705 + 21) = BYTE4(v820);
        *(unsigned char *)(v705 + 22) = v820;
        *(unsigned char *)(v705 + 23) = BYTE4(v819);
        *(unsigned char *)(v705 + 24) = v819;
        *(unsigned char *)(v705 + 25) = v818;
        *(unsigned char *)(v705 + 26) = v817;
        *(unsigned char *)(v705 + 27) = v816;
        v723 = (int *)a2;
        if (*(_DWORD *)(v705 + 32) != v694) {
          goto LABEL_1329;
        }
LABEL_1333:
        *(void *)(v705 + 40) = v693;
        if (v696 != v694)
        {
          *(unsigned char *)(v705 + 48) = BYTE4(v796);
          *(unsigned char *)(v705 + 49) = v796;
          *(unsigned char *)(v705 + 50) = BYTE4(v795);
          *(unsigned char *)(v705 + 51) = v795;
          *(unsigned char *)(v705 + 52) = BYTE4(v794);
          *(unsigned char *)(v705 + 53) = v794;
          *(unsigned char *)(v705 + 54) = v793;
          *(unsigned char *)(v705 + 55) = BYTE4(v792);
          *(unsigned char *)(v705 + 56) = v792;
          *(unsigned char *)(v705 + 57) = v791[8];
          *(unsigned char *)(v705 + 58) = v791[4];
          *(unsigned char *)(v705 + 59) = v791[0];
        }
        goto LABEL_1339;
      }
      *(void *)(v705 + 8) = v691;
      v723 = (int *)a2;
      if (*(_DWORD *)(v705 + 32) == v694) {
        goto LABEL_1333;
      }
LABEL_1329:
      *(void *)(v705 + 40) = v693;
      if (v696 != v694)
      {
        *(unsigned char *)(v705 + 48) = BYTE4(v796);
        *(unsigned char *)(v705 + 49) = v796;
        *(unsigned char *)(v705 + 50) = BYTE4(v795);
        *(unsigned char *)(v705 + 51) = v795;
        *(unsigned char *)(v705 + 52) = BYTE4(v794);
        *(unsigned char *)(v705 + 53) = v794;
        *(unsigned char *)(v705 + 54) = v793;
        *(unsigned char *)(v705 + 55) = BYTE4(v792);
        *(unsigned char *)(v705 + 56) = v792;
        *(unsigned char *)(v705 + 57) = v791[8];
        *(unsigned char *)(v705 + 58) = v791[4];
        *(unsigned char *)(v705 + 59) = v791[0];
        *(_DWORD *)(v705 + 32) = v696 ^ v694;
      }
      else
      {
        *(_DWORD *)(v705 + 32) = 0;
      }
LABEL_1339:
      uint64_t v724 = *(void *)&v848[4];
      *(_DWORD *)(v705 + 72) = *(_DWORD *)&v848[12];
      *(void *)(v705 + 64) = v724;
      uint64_t v684 = (uint64_t)(v685 + 20);
      uint64_t v747 = (uint64_t)v685;
      if (v685 + 20 == v723) {
        return;
      }
    }
  }
  if (v747 == v12) {
    return;
  }
  uint64_t v425 = v747 + 80;
  if (v747 + 80 == v12) {
    return;
  }
  uint64_t v426 = 0;
  uint64_t v427 = v747;
  while (2)
  {
    v473 = (int *)v425;
    if (!sub_1001EEE44(v425, v427)) {
      goto LABEL_887;
    }
    int v474 = *v473;
    int v475 = *v473 >> 31;
    v476 = (void *)(v427 + 88);
    if (v474 >> 31 == v474)
    {
      *(void *)&v836[8] = *v476;
      int v475 = v474;
    }
    else
    {
      *(_OWORD *)&v836[8] = *(_OWORD *)v476;
      int v837 = *(_DWORD *)(v427 + 104);
    }
    *(_DWORD *)v836 = v475 ^ v474;
    int v477 = *(_DWORD *)(v427 + 112);
    int v478 = v477 >> 31;
    v479 = (void *)(v427 + 120);
    if (v477 >> 31 == v477)
    {
      *(void *)&long long v839 = *v479;
      int v478 = v477;
    }
    else
    {
      long long v839 = *(_OWORD *)v479;
      int v840 = *(_DWORD *)(v427 + 136);
    }
    int v838 = v478 ^ v477;
    long long v841 = *(_OWORD *)(v427 + 144);
    uint64_t v480 = v426;
    while (2)
    {
      v481 = (_DWORD *)(v747 + v480);
      int v482 = *(_DWORD *)(v747 + v480);
      if (v474 == v482)
      {
        v483 = v481 + 2;
        v484 = v481 + 22;
        if (v474 == v474 >> 31)
        {
          void *v484 = *v483;
          v485 = (_DWORD *)(v747 + v480);
          int v486 = *(_DWORD *)(v747 + v480 + 112);
          int v487 = *(_DWORD *)(v747 + v480 + 32);
          if (v486 != v487)
          {
LABEL_900:
            int v488 = v487 ^ (v487 >> 31);
            v489 = v485 + 10;
            v490 = v485 + 30;
            if (v488)
            {
              _OWORD *v490 = *v489;
              v485[34] = v485[14];
              v485[28] = v488;
            }
            else
            {
              *(void *)v490 = *(void *)v489;
              v485[28] = 0;
            }
            goto LABEL_910;
          }
        }
        else
        {
          *(_OWORD *)v484 = *(_OWORD *)v483;
          v481[26] = v481[6];
          v485 = (_DWORD *)(v747 + v480);
          int v486 = *(_DWORD *)(v747 + v480 + 112);
          int v487 = *(_DWORD *)(v747 + v480 + 32);
          if (v486 != v487) {
            goto LABEL_900;
          }
        }
      }
      else
      {
        int v491 = v482 ^ (v482 >> 31);
        v492 = v481 + 2;
        v493 = v481 + 22;
        if (v491)
        {
          _OWORD *v493 = *v492;
          v481[26] = v481[6];
          v481[20] = v491;
          v485 = (_DWORD *)(v747 + v480);
          int v486 = *(_DWORD *)(v747 + v480 + 112);
          int v487 = *(_DWORD *)(v747 + v480 + 32);
          if (v486 != v487) {
            goto LABEL_900;
          }
        }
        else
        {
          *(void *)v493 = *(void *)v492;
          v481[20] = 0;
          v485 = (_DWORD *)(v747 + v480);
          int v486 = *(_DWORD *)(v747 + v480 + 112);
          int v487 = *(_DWORD *)(v747 + v480 + 32);
          if (v486 != v487) {
            goto LABEL_900;
          }
        }
      }
      v494 = v485 + 10;
      v495 = v485 + 30;
      if (v486 == v486 >> 31)
      {
        *(void *)v495 = *(void *)v494;
      }
      else
      {
        *(_OWORD *)v495 = *(_OWORD *)v494;
        v495[4] = v494[4];
      }
LABEL_910:
      uint64_t v496 = v747 + v480;
      *(void *)(v496 + 144) = *(void *)(v747 + v480 + 64);
      *(_DWORD *)(v496 + 152) = *(_DWORD *)(v747 + v480 + 72);
      if (!v480)
      {
        uint64_t v427 = v747;
        int v513 = *(_DWORD *)v747;
        int v514 = *(_DWORD *)v836;
        if (*(_DWORD *)v747 == *(_DWORD *)v836) {
          goto LABEL_942;
        }
LABEL_947:
        int v520 = v514 ^ (v514 >> 31);
        if (v520)
        {
          long long v521 = *(_OWORD *)&v836[8];
          *(_DWORD *)(v427 + 24) = v837;
          *(_OWORD *)(v427 + 8) = v521;
          *(_DWORD *)uint64_t v427 = v520;
          int v516 = *(_DWORD *)(v427 + 32);
          int v517 = v838;
          if (v516 == v838) {
            goto LABEL_949;
          }
        }
        else
        {
          *(void *)(v427 + 8) = *(void *)&v836[8];
          *(_DWORD *)uint64_t v427 = 0;
          int v516 = *(_DWORD *)(v427 + 32);
          int v517 = v838;
          if (v516 == v838) {
            goto LABEL_949;
          }
        }
        goto LABEL_944;
      }
      int v497 = *(_DWORD *)(v496 - 80);
      int v498 = v497 >> 31;
      v499 = (void *)(v496 - 72);
      if (v497 >> 31 == v497)
      {
        *(void *)&v848[8] = *v499;
        int v498 = v497;
      }
      else
      {
        long long v500 = *(_OWORD *)v499;
        int v849 = *(_DWORD *)(v496 - 56);
        *(_OWORD *)&v848[8] = v500;
      }
      int v501 = v498 ^ v497;
      *(_DWORD *)v848 = v501;
      int v502 = *(_DWORD *)v836;
      int v503 = *(int *)v836 >> 31;
      int v504 = v501 >> 31;
      if (*(int *)v836 >> 31 != *(_DWORD *)v836)
      {
        if (v504 != v501)
        {
          if (sub_1001E6FAC(&v836[8], &v848[8]))
          {
LABEL_896:
            v427 -= 80;
            int v474 = *v481;
            v480 -= 80;
            continue;
          }
          int v502 = *(_DWORD *)v836;
          int v503 = *(int *)v836 >> 31;
        }
        if (v503 == v502)
        {
          uint64_t v505 = *(void *)&v836[8];
          goto LABEL_923;
        }
        long long v846 = *(_OWORD *)&v836[8];
        int v847 = v837;
        int v506 = v503 ^ v502;
        int v845 = v506;
        int v507 = v506 >> 31;
        if (*(_DWORD *)(v496 - 80) != *(int *)(v496 - 80) >> 31) {
          goto LABEL_930;
        }
LABEL_924:
        if (v507 != v506 || *v499 < (unint64_t)v846) {
          goto LABEL_940;
        }
LABEL_932:
        int v508 = *(_DWORD *)(v747 + v480 - 48);
        v509 = (void *)(v747 + v480 - 40);
        if (v508 >> 31 == v508)
        {
          *(void *)&long long v843 = *v509;
          int v510 = 0;
          int v842 = 0;
          int v511 = 0;
          if (v838 != v838 >> 31) {
            goto LABEL_934;
          }
        }
        else
        {
          long long v512 = *(_OWORD *)v509;
          int v844 = *(_DWORD *)(v747 + v480 - 24);
          long long v843 = v512;
          int v510 = (v508 >> 31) ^ v508;
          int v842 = v510;
          int v511 = v510 >> 31;
          if (v838 != v838 >> 31)
          {
LABEL_934:
            if (v511 == v510) {
              goto LABEL_940;
            }
            if (!sub_1001E6FAC((unsigned __int8 *)&v839, (unsigned __int8 *)&v843)) {
              goto LABEL_941;
            }
            goto LABEL_896;
          }
        }
        if (v511 == v510 && (unint64_t)v839 >= (unint64_t)v843) {
          goto LABEL_940;
        }
        goto LABEL_896;
      }
      break;
    }
    if (v504 != v501) {
      goto LABEL_896;
    }
    uint64_t v505 = *(void *)&v836[8];
    if (*(void *)&v836[8] < *(void *)&v848[8]) {
      goto LABEL_896;
    }
LABEL_923:
    *(void *)&long long v846 = v505;
    int v506 = 0;
    int v845 = 0;
    int v507 = 0;
    if (*(_DWORD *)(v496 - 80) == *(int *)(v496 - 80) >> 31) {
      goto LABEL_924;
    }
LABEL_930:
    if (v507 == v506 || !sub_1001E6FAC((unsigned __int8 *)(v496 - 72), (unsigned __int8 *)&v846)) {
      goto LABEL_932;
    }
LABEL_940:
    uint64_t v427 = v747 + v480;
LABEL_941:
    int v513 = *(_DWORD *)v427;
    int v514 = *(_DWORD *)v836;
    if (*(_DWORD *)v427 != *(_DWORD *)v836) {
      goto LABEL_947;
    }
LABEL_942:
    v515 = (_OWORD *)(v427 + 8);
    if (v513 != v513 >> 31)
    {
      long long v523 = *(_OWORD *)&v836[8];
      *(_DWORD *)(v427 + 24) = v837;
      _OWORD *v515 = v523;
      int v516 = *(_DWORD *)(v427 + 32);
      int v517 = v838;
      if (v516 == v838) {
        goto LABEL_949;
      }
LABEL_944:
      int v518 = v517 ^ (v517 >> 31);
      if (v518)
      {
        long long v519 = v839;
        *(_DWORD *)(v427 + 56) = v840;
        *(_OWORD *)(v427 + 40) = v519;
        *(_DWORD *)(v427 + 32) = v518;
      }
      else
      {
        *(void *)(v427 + 40) = v839;
        *(_DWORD *)(v427 + 32) = 0;
      }
      goto LABEL_886;
    }
    *(void *)v515 = *(void *)&v836[8];
    int v516 = *(_DWORD *)(v427 + 32);
    int v517 = v838;
    if (v516 != v838) {
      goto LABEL_944;
    }
LABEL_949:
    v522 = (void *)(v427 + 40);
    if (v516 == v516 >> 31)
    {
      void *v522 = v839;
    }
    else
    {
      long long v471 = v839;
      *(_DWORD *)(v427 + 56) = v840;
      *(_OWORD *)v522 = v471;
    }
LABEL_886:
    uint64_t v472 = v841;
    *(_DWORD *)(v496 + 72) = DWORD2(v841);
    *(void *)(v496 + 64) = v472;
LABEL_887:
    uint64_t v425 = (uint64_t)(v473 + 20);
    v426 += 80;
    uint64_t v427 = (uint64_t)v473;
    if (v473 + 20 != (int *)a2) {
      continue;
    }
    break;
  }
}

__n128 sub_1001EE63C(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1001EF334(a1, a2, a3, a4);
  if (sub_1001EEE44(a5, a4))
  {
    sub_1001EF058(a4, a5);
    long long v15 = *(_OWORD *)(a4 + 64);
    int v11 = *(_DWORD *)(a5 + 72);
    *(void *)(a4 + 64) = *(void *)(a5 + 64);
    *(_DWORD *)(a4 + 72) = v11;
    *(void *)(a5 + 64) = v15;
    *(_DWORD *)(a5 + 72) = DWORD2(v15);
    if (sub_1001EEE44(a4, a3))
    {
      sub_1001EF058(a3, a4);
      long long v16 = *(_OWORD *)(a3 + 64);
      int v12 = *(_DWORD *)(a4 + 72);
      *(void *)(a3 + 64) = *(void *)(a4 + 64);
      *(_DWORD *)(a3 + 72) = v12;
      *(void *)(a4 + 64) = v16;
      *(_DWORD *)(a4 + 72) = DWORD2(v16);
      if (sub_1001EEE44(a3, a2))
      {
        sub_1001EF058(a2, a3);
        long long v17 = *(_OWORD *)(a2 + 64);
        int v13 = *(_DWORD *)(a3 + 72);
        *(void *)(a2 + 64) = *(void *)(a3 + 64);
        *(_DWORD *)(a2 + 72) = v13;
        *(void *)(a3 + 64) = v17;
        *(_DWORD *)(a3 + 72) = DWORD2(v17);
        if (sub_1001EEE44(a2, (uint64_t)a1))
        {
          sub_1001EF058((uint64_t)a1, a2);
          __n128 result = a1[4];
          unsigned __int32 v14 = *(_DWORD *)(a2 + 72);
          a1[4].n128_u64[0] = *(void *)(a2 + 64);
          a1[4].n128_u32[2] = v14;
          *(void *)(a2 + 64) = result.n128_u64[0];
          *(_DWORD *)(a2 + 72) = result.n128_u32[2];
        }
      }
    }
  }
  return result;
}

uint64_t sub_1001EE7A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v6 = sub_1001EEE44(a2, a1);
  uint64_t result = sub_1001EEE44(a3, a2);
  if (v6)
  {
    uint64_t v8 = a1 + 64;
    if (result)
    {
      uint64_t result = sub_1001EF058(a1, a3);
      long long v15 = *(_OWORD *)v8;
      int v9 = *(_DWORD *)(a3 + 72);
      *(void *)uint64_t v8 = *(void *)(a3 + 64);
      *(_DWORD *)(a1 + 72) = v9;
LABEL_10:
      *(void *)(a3 + 64) = v15;
      *(_DWORD *)(a3 + 72) = DWORD2(v15);
      return result;
    }
    sub_1001EF058(a1, a2);
    int v12 = (long long *)(a2 + 64);
    long long v18 = *(_OWORD *)v8;
    int v13 = *(_DWORD *)(a2 + 72);
    *(void *)uint64_t v8 = *(void *)(a2 + 64);
    *(_DWORD *)(v8 + 8) = v13;
    *(void *)(a2 + 64) = v18;
    *(_DWORD *)(a2 + 72) = DWORD2(v18);
    uint64_t result = sub_1001EEE44(a3, a2);
    if (result)
    {
      uint64_t result = sub_1001EF058(a2, a3);
      long long v15 = *v12;
      int v14 = *(_DWORD *)(a3 + 72);
      *(void *)int v12 = *(void *)(a3 + 64);
      *(_DWORD *)(a2 + 72) = v14;
      goto LABEL_10;
    }
  }
  else if (result)
  {
    sub_1001EF058(a2, a3);
    long long v16 = *(_OWORD *)(a2 + 64);
    int v10 = *(_DWORD *)(a3 + 72);
    *(void *)(a2 + 64) = *(void *)(a3 + 64);
    *(_DWORD *)(a2 + 72) = v10;
    *(void *)(a3 + 64) = v16;
    *(_DWORD *)(a3 + 72) = DWORD2(v16);
    uint64_t result = sub_1001EEE44(a2, a1);
    if (result)
    {
      uint64_t result = sub_1001EF058(a1, a2);
      long long v17 = *(_OWORD *)(a1 + 64);
      int v11 = *(_DWORD *)(a2 + 72);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(_DWORD *)(a1 + 72) = v11;
      *(void *)(a2 + 64) = v17;
      *(_DWORD *)(a2 + 72) = DWORD2(v17);
    }
  }
  return result;
}

BOOL sub_1001EE93C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (a2 - a1) >> 4;
  BOOL result = 1;
  switch(0xCCCCCCCCCCCCCCCDLL * v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      if (sub_1001EEE44(a2 - 80, a1))
      {
        sub_1001EF058(a1, a2 - 80);
        *(_OWORD *)BOOL v44 = *(_OWORD *)(a1 + 64);
        int v6 = *(_DWORD *)(a2 - 8);
        *(void *)(a1 + 64) = *(void *)(a2 - 16);
        *(_DWORD *)(a1 + 72) = v6;
        *(void *)(a2 - 16) = *(void *)v44;
        *(_DWORD *)(a2 - 8) = *(_DWORD *)&v44[8];
      }
      return 1;
    case 3uLL:
      sub_1001EE7A4(a1, a1 + 80, a2 - 80);
      return 1;
    case 4uLL:
      sub_1001EF334((__n128 *)a1, a1 + 80, a1 + 160, a2 - 80);
      return 1;
    case 5uLL:
      sub_1001EE63C((__n128 *)a1, a1 + 80, a1 + 160, a1 + 240, a2 - 80);
      return 1;
    default:
      uint64_t v7 = a1 + 160;
      sub_1001EE7A4(a1, a1 + 80, a1 + 160);
      uint64_t v8 = a1 + 240;
      if (a1 + 240 == a2) {
        return 1;
      }
      uint64_t v9 = 0;
      int v10 = 0;
      break;
  }
  while (2)
  {
    if (!sub_1001EEE44(v8, v7)) {
      goto LABEL_8;
    }
    int v12 = (void *)(v8 + 8);
    int v11 = *(_DWORD *)v8;
    int v13 = *(int *)v8 >> 31;
    if (v11 >> 31 == v11)
    {
      *(void *)&v44[8] = *v12;
      int v13 = v11;
    }
    else
    {
      *(_OWORD *)&v44[8] = *(_OWORD *)v12;
      int v45 = *(_DWORD *)(v8 + 24);
    }
    *(_DWORD *)BOOL v44 = v13 ^ v11;
    int v14 = *(_DWORD *)(v8 + 32);
    int v15 = v14 >> 31;
    long long v16 = (void *)(v8 + 40);
    if (v14 >> 31 == v14)
    {
      *(void *)&long long v47 = *v16;
      int v15 = v14;
    }
    else
    {
      long long v47 = *(_OWORD *)v16;
      int v48 = *(_DWORD *)(v8 + 56);
    }
    int v46 = v14 ^ v15;
    long long v49 = *(_OWORD *)(v8 + 64);
    uint64_t v17 = v9;
    while (1)
    {
      long long v18 = (_DWORD *)(a1 + v17);
      int v19 = *(_DWORD *)(a1 + v17 + 240);
      int v20 = *(_DWORD *)(a1 + v17 + 160);
      if (v19 == v20)
      {
        uint64_t v21 = v18 + 42;
        uint64_t v22 = v18 + 62;
        if (v19 == v19 >> 31)
        {
          *(void *)uint64_t v22 = *(void *)v21;
          BOOL v23 = (_DWORD *)(a1 + v17);
          int v24 = *(_DWORD *)(a1 + v17 + 272);
          int v25 = *(_DWORD *)(a1 + v17 + 192);
          if (v24 != v25) {
            goto LABEL_29;
          }
        }
        else
        {
          *(_OWORD *)uint64_t v22 = *(_OWORD *)v21;
          v22[4] = v21[4];
          BOOL v23 = (_DWORD *)(a1 + v17);
          int v24 = *(_DWORD *)(a1 + v17 + 272);
          int v25 = *(_DWORD *)(a1 + v17 + 192);
          if (v24 != v25) {
            goto LABEL_29;
          }
        }
      }
      else
      {
        int v26 = v20 ^ (v20 >> 31);
        int v27 = v18 + 42;
        int v28 = v18 + 62;
        if (v26)
        {
          *int v28 = *v27;
          v18[66] = v18[46];
          v18[60] = v26;
          BOOL v23 = (_DWORD *)(a1 + v17);
          int v24 = *(_DWORD *)(a1 + v17 + 272);
          int v25 = *(_DWORD *)(a1 + v17 + 192);
          if (v24 != v25) {
            goto LABEL_29;
          }
        }
        else
        {
          *(void *)int v28 = *(void *)v27;
          v18[60] = 0;
          BOOL v23 = (_DWORD *)(a1 + v17);
          int v24 = *(_DWORD *)(a1 + v17 + 272);
          int v25 = *(_DWORD *)(a1 + v17 + 192);
          if (v24 != v25)
          {
LABEL_29:
            int v31 = v25 ^ (v25 >> 31);
            uint64_t v32 = v23 + 50;
            int v33 = v23 + 70;
            if (v31)
            {
              *int v33 = *v32;
              v23[74] = v23[54];
              v23[68] = v31;
            }
            else
            {
              *(void *)int v33 = *(void *)v32;
              v23[68] = 0;
            }
            goto LABEL_32;
          }
        }
      }
      int v29 = v23 + 50;
      long long v30 = v23 + 70;
      if (v24 == v24 >> 31)
      {
        *(void *)long long v30 = *(void *)v29;
      }
      else
      {
        *(_OWORD *)long long v30 = *(_OWORD *)v29;
        v30[4] = v29[4];
      }
LABEL_32:
      uint64_t v34 = a1 + v17;
      *(void *)(v34 + 304) = *(void *)(a1 + v17 + 224);
      *(_DWORD *)(v34 + 312) = *(_DWORD *)(a1 + v17 + 232);
      if (v17 == -160) {
        break;
      }
      v17 -= 80;
      if (!sub_1001EEE44((uint64_t)v44, v34 + 80))
      {
        uint64_t v35 = a1 + v17 + 240;
        int v36 = *(_DWORD *)v35;
        int v37 = *(_DWORD *)v44;
        if (*(_DWORD *)v35 != *(_DWORD *)v44) {
          goto LABEL_35;
        }
LABEL_39:
        int v41 = (void *)(v35 + 8);
        if (v36 == v36 >> 31)
        {
          *int v41 = *(void *)&v44[8];
          int v39 = *(_DWORD *)(v35 + 32);
          int v40 = v46;
          if (v39 != v46)
          {
LABEL_46:
            int v43 = v40 ^ (v40 >> 31);
            if (v43)
            {
              *(_OWORD *)(v35 + 40) = v47;
              *(_DWORD *)(v35 + 56) = v48;
              *(_DWORD *)(v35 + 32) = v43;
            }
            else
            {
              *(void *)(v35 + 40) = v47;
              *(_DWORD *)(v35 + 32) = 0;
            }
            goto LABEL_7;
          }
        }
        else
        {
          *(_OWORD *)int v41 = *(_OWORD *)&v44[8];
          *(_DWORD *)(v35 + 24) = v45;
          int v39 = *(_DWORD *)(v35 + 32);
          int v40 = v46;
          if (v39 != v46) {
            goto LABEL_46;
          }
        }
        goto LABEL_43;
      }
    }
    uint64_t v35 = a1;
    int v36 = *(_DWORD *)a1;
    int v37 = *(_DWORD *)v44;
    if (*(_DWORD *)a1 == *(_DWORD *)v44) {
      goto LABEL_39;
    }
LABEL_35:
    int v38 = v37 ^ (v37 >> 31);
    if (v38)
    {
      *(_OWORD *)(v35 + 8) = *(_OWORD *)&v44[8];
      *(_DWORD *)(v35 + 24) = v45;
      *(_DWORD *)uint64_t v35 = v38;
      int v39 = *(_DWORD *)(v35 + 32);
      int v40 = v46;
      if (v39 != v46) {
        goto LABEL_46;
      }
    }
    else
    {
      *(void *)(v35 + 8) = *(void *)&v44[8];
      *(_DWORD *)uint64_t v35 = 0;
      int v39 = *(_DWORD *)(v35 + 32);
      int v40 = v46;
      if (v39 != v46) {
        goto LABEL_46;
      }
    }
LABEL_43:
    uint64_t v42 = v35 + 40;
    if (v39 == v39 >> 31)
    {
      *(void *)uint64_t v42 = v47;
    }
    else
    {
      *(_OWORD *)uint64_t v42 = v47;
      *(_DWORD *)(v42 + 16) = v48;
    }
LABEL_7:
    *(void *)(v34 + 224) = v49;
    *(_DWORD *)(v34 + 232) = DWORD2(v49);
    if (++v10 == 8) {
      return v8 + 80 == a2;
    }
LABEL_8:
    uint64_t v7 = v8;
    v9 += 80;
    v8 += 80;
    if (v8 != a2) {
      continue;
    }
    return 1;
  }
}

BOOL sub_1001EEE44(uint64_t a1, uint64_t a2)
{
  BOOL v5 = (void *)(a2 + 8);
  int v4 = *(_DWORD *)a2;
  int v6 = *(int *)a2 >> 31;
  if (v4 >> 31 == v4)
  {
    *(void *)&long long v27 = *v5;
    int v6 = v4;
  }
  else
  {
    long long v27 = *(_OWORD *)v5;
    int v28 = *(_DWORD *)(a2 + 24);
  }
  int v7 = v6 ^ v4;
  int v26 = v7;
  uint64_t v9 = (void *)(a1 + 8);
  int v8 = *(_DWORD *)a1;
  int v10 = *(int *)a1 >> 31;
  int v11 = v7 >> 31;
  if (v10 != *(_DWORD *)a1)
  {
    if (v11 == v7) {
      goto LABEL_11;
    }
    if (!sub_1001E6FAC((unsigned __int8 *)(a1 + 8), (unsigned __int8 *)&v27))
    {
      int v8 = *(_DWORD *)a1;
      int v10 = *(int *)a1 >> 31;
      goto LABEL_11;
    }
    return 1;
  }
  if (v11 != v7 || *v9 < (unint64_t)v27) {
    return 1;
  }
LABEL_11:
  if (v10 != v8)
  {
    long long v24 = *(_OWORD *)v9;
    int v25 = *(_DWORD *)(a1 + 24);
    int v12 = v10 ^ v8;
    int v23 = v12;
    int v13 = v12 >> 31;
    if (*(_DWORD *)a2 != *(int *)a2 >> 31) {
      goto LABEL_13;
    }
LABEL_17:
    if (v13 != v12 || *v5 < (unint64_t)v24) {
      return 0;
    }
    goto LABEL_19;
  }
  *(void *)&long long v24 = *v9;
  int v12 = 0;
  int v23 = 0;
  int v13 = 0;
  if (*(_DWORD *)a2 == *(int *)a2 >> 31) {
    goto LABEL_17;
  }
LABEL_13:
  if (v13 != v12 && sub_1001E6FAC((unsigned __int8 *)(a2 + 8), (unsigned __int8 *)&v24)) {
    return 0;
  }
LABEL_19:
  int v14 = *(_DWORD *)(a2 + 32);
  int v15 = v14 >> 31;
  long long v16 = (void *)(a2 + 40);
  if (v14 >> 31 == v14)
  {
    *(void *)&long long v21 = *v16;
    int v15 = v14;
  }
  else
  {
    long long v21 = *(_OWORD *)v16;
    int v22 = *(_DWORD *)(a2 + 56);
  }
  int v17 = v15 ^ v14;
  long long v18 = (unsigned __int8 *)(a1 + 40);
  int v19 = v17 >> 31;
  if (*(_DWORD *)(a1 + 32) == *(int *)(a1 + 32) >> 31)
  {
    if (v19 == v17) {
      return *(void *)v18 < (unint64_t)v21;
    }
    return 1;
  }
  if (v19 != v17) {
    return sub_1001E6FAC(v18, (unsigned __int8 *)&v21);
  }
  return 0;
}

uint64_t sub_1001EF058(uint64_t result, uint64_t a2)
{
  int v2 = *(_DWORD *)result;
  int v3 = *(int *)result >> 31;
  int v4 = *(_DWORD *)result;
  if (v3 != *(_DWORD *)result)
  {
    uint64_t v28 = *(void *)(result + 16);
    int v29 = *(_DWORD *)(result + 24);
    int v4 = v2 >> 31;
  }
  int v6 = (void *)(result + 40);
  uint64_t v5 = *(void *)(result + 40);
  int v7 = *(_DWORD *)(result + 32);
  int v8 = v7;
  if (v7 >> 31 != v7)
  {
    uint64_t v26 = *(void *)(result + 48);
    int v27 = *(_DWORD *)(result + 56);
    int v8 = v7 >> 31;
  }
  int v10 = (void *)(result + 8);
  uint64_t v9 = *(void *)(result + 8);
  if (v2 == *(_DWORD *)a2)
  {
    int v11 = (void *)(a2 + 8);
    if (v3 == v2)
    {
      *int v10 = *v11;
      int v12 = v4 ^ v2;
      int v13 = *(_DWORD *)(a2 + 32);
      if (v7 != v13) {
        goto LABEL_19;
      }
    }
    else
    {
      long long v17 = *(_OWORD *)v11;
      *(_DWORD *)(result + 24) = *(_DWORD *)(a2 + 24);
      *(_OWORD *)int v10 = v17;
      int v12 = v4 ^ v2;
      int v13 = *(_DWORD *)(a2 + 32);
      if (v7 != v13) {
        goto LABEL_19;
      }
    }
LABEL_13:
    long long v18 = (void *)(a2 + 40);
    if (v7 >> 31 == v7)
    {
      *int v6 = *v18;
      int v19 = v8 ^ v7;
      int v20 = v12 >> 31;
      if (*(_DWORD *)a2 == v12) {
        goto LABEL_21;
      }
    }
    else
    {
      long long v21 = *(_OWORD *)v18;
      *(_DWORD *)(result + 56) = *(_DWORD *)(a2 + 56);
      *(_OWORD *)int v6 = v21;
      int v19 = v8 ^ v7;
      int v20 = v12 >> 31;
      if (*(_DWORD *)a2 == v12) {
        goto LABEL_21;
      }
    }
    goto LABEL_25;
  }
  int v14 = *(_DWORD *)a2 ^ (*(int *)a2 >> 31);
  int v15 = (void *)(a2 + 8);
  if (!v14)
  {
    *(void *)(result + 8) = *v15;
    *(_DWORD *)BOOL result = 0;
    int v12 = v4 ^ v2;
    int v13 = *(_DWORD *)(a2 + 32);
    if (v7 != v13) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }
  long long v16 = *(_OWORD *)v15;
  *(_DWORD *)(result + 24) = *(_DWORD *)(a2 + 24);
  *(_OWORD *)int v10 = v16;
  *(_DWORD *)BOOL result = v14;
  int v12 = v4 ^ v2;
  int v13 = *(_DWORD *)(a2 + 32);
  if (v7 == v13) {
    goto LABEL_13;
  }
LABEL_19:
  int v22 = v13 ^ (v13 >> 31);
  int v23 = (long long *)(a2 + 40);
  if (v22)
  {
    long long v24 = *v23;
    *(_DWORD *)(result + 56) = *(_DWORD *)(a2 + 56);
    *(_OWORD *)int v6 = v24;
    *(_DWORD *)(result + 32) = v22;
    int v19 = v8 ^ v7;
    int v20 = v12 >> 31;
    if (*(_DWORD *)a2 == v12) {
      goto LABEL_21;
    }
LABEL_25:
    *(void *)(a2 + 8) = v9;
    if (v20 == v12)
    {
      *(_DWORD *)a2 = 0;
      int v25 = v19 >> 31;
      if (*(_DWORD *)(a2 + 32) != v19) {
        goto LABEL_31;
      }
      goto LABEL_28;
    }
    *(void *)(a2 + 16) = v28;
    *(_DWORD *)(a2 + 24) = v29;
    *(_DWORD *)a2 = v20 ^ v12;
LABEL_27:
    int v25 = v19 >> 31;
    if (*(_DWORD *)(a2 + 32) != v19) {
      goto LABEL_31;
    }
    goto LABEL_28;
  }
  *(void *)(result + 40) = *(void *)v23;
  *(_DWORD *)(result + 32) = 0;
  int v19 = v8 ^ v7;
  int v20 = v12 >> 31;
  if (*(_DWORD *)a2 != v12) {
    goto LABEL_25;
  }
LABEL_21:
  *(void *)(a2 + 8) = v9;
  if (v20 == v12) {
    goto LABEL_27;
  }
  *(void *)(a2 + 16) = v28;
  *(_DWORD *)(a2 + 24) = v29;
  int v25 = v19 >> 31;
  if (*(_DWORD *)(a2 + 32) != v19)
  {
LABEL_31:
    *(void *)(a2 + 40) = v5;
    if (v25 != v19)
    {
      *(void *)(a2 + 48) = v26;
      *(_DWORD *)(a2 + 56) = v27;
      *(_DWORD *)(a2 + 32) = v25 ^ v19;
    }
    else
    {
      *(_DWORD *)(a2 + 32) = 0;
    }
    return result;
  }
LABEL_28:
  *(void *)(a2 + 40) = v5;
  if (v25 != v19)
  {
    *(void *)(a2 + 48) = v26;
    *(_DWORD *)(a2 + 56) = v27;
  }
  return result;
}

__n128 sub_1001EF334(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001EE7A4((uint64_t)a1, a2, a3);
  if (sub_1001EEE44(a4, a3))
  {
    sub_1001EF058(a3, a4);
    long long v12 = *(_OWORD *)(a3 + 64);
    int v9 = *(_DWORD *)(a4 + 72);
    *(void *)(a3 + 64) = *(void *)(a4 + 64);
    *(_DWORD *)(a3 + 72) = v9;
    *(void *)(a4 + 64) = v12;
    *(_DWORD *)(a4 + 72) = DWORD2(v12);
    if (sub_1001EEE44(a3, a2))
    {
      sub_1001EF058(a2, a3);
      long long v13 = *(_OWORD *)(a2 + 64);
      int v10 = *(_DWORD *)(a3 + 72);
      *(void *)(a2 + 64) = *(void *)(a3 + 64);
      *(_DWORD *)(a2 + 72) = v10;
      *(void *)(a3 + 64) = v13;
      *(_DWORD *)(a3 + 72) = DWORD2(v13);
      if (sub_1001EEE44(a2, (uint64_t)a1))
      {
        sub_1001EF058((uint64_t)a1, a2);
        __n128 result = a1[4];
        unsigned __int32 v11 = *(_DWORD *)(a2 + 72);
        a1[4].n128_u64[0] = *(void *)(a2 + 64);
        a1[4].n128_u32[2] = v11;
        *(void *)(a2 + 64) = result.n128_u64[0];
        *(_DWORD *)(a2 + 72) = result.n128_u32[2];
      }
    }
  }
  return result;
}

std::string *sub_1001EF448@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1001EF47C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001EF498@<X0>(int *a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  uint64_t result = sub_1001EF548(a1, a2);
  if ((result & 1) == 0)
  {
    std::bad_cast::bad_cast(&v3);
    v3.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v3);
  }
  return result;
}

void sub_1001EF51C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
  std::bad_cast::~bad_cast(&a10);
  if (*(char *)(v10 + 23) < 0) {
    operator delete(*(void **)v10);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1001EF548(int *a1, std::string *a2)
{
  long long v23 = 0u;
  long long v24 = 0u;
  memset(v22, 0, sizeof(v22));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v26 = 0u;
  uint64_t v27 = 24;
  *(void *)&long long v23 = 0;
  v22[0].n128_u64[0] = (unint64_t)off_100453E60;
  std::ios_base::init(&v29, v22);
  uint64_t v30 = 0;
  int v31 = -1;
  int v33 = (char *)&v32;
  uint64_t v34 = (char *)&v32 + 2;
  sub_1001EF7EC(v22, a1);
  uint64_t v5 = v4;
  if (v4)
  {
    int v7 = v33;
    int v6 = v34;
    unint64_t v8 = v34 - v33;
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v12 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v11 = (v12 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v11 >= v8)
      {
        unint64_t v13 = HIBYTE(v12);
LABEL_9:
        if ((v13 & 0x80u) == 0) {
          int v9 = a2;
        }
        else {
          int v9 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_12:
        if (v7 == v6)
        {
          int v14 = v9;
        }
        else
        {
          if (v8 < 0x20 || (unint64_t)((char *)v9 - v7) < 0x20)
          {
            int v14 = v9;
            int v15 = v7;
          }
          else
          {
            int v14 = (std::string *)((char *)v9 + (v8 & 0xFFFFFFFFFFFFFFE0));
            int v15 = &v7[v8 & 0xFFFFFFFFFFFFFFE0];
            long long v16 = (long long *)(v7 + 16);
            long long v17 = &v9->__r_.__value_.__r.__words[2];
            unint64_t v18 = v8 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              long long v19 = *v16;
              *((_OWORD *)v17 - 1) = *(v16 - 1);
              *(_OWORD *)long long v17 = v19;
              v16 += 2;
              v17 += 4;
              v18 -= 32;
            }
            while (v18);
            if (v8 == (v8 & 0xFFFFFFFFFFFFFFE0)) {
              goto LABEL_22;
            }
          }
          do
          {
            std::string::value_type v20 = *v15++;
            v14->__r_.__value_.__s.__data_[0] = v20;
            int v14 = (std::string *)((char *)v14 + 1);
          }
          while (v15 != v6);
        }
LABEL_22:
        v14->__r_.__value_.__s.__data_[0] = 0;
        if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
          a2->__r_.__value_.__l.__size_ = v8;
        }
        else {
          *((unsigned char *)&a2->__r_.__value_.__s + 23) = v8 & 0x7F;
        }
        goto LABEL_25;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      int v9 = a2;
      if (v8 <= 0x16) {
        goto LABEL_12;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v11 = 22;
    }
    std::string::__grow_by(a2, v11, v8 - v11, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v13) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_9;
  }
LABEL_25:
  std::ostream::~ostream();
  if (SBYTE7(v26) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v5;
}

void sub_1001EF7AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001EF7C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001EF7D4(void *a1)
{
}

__n128 sub_1001EF7EC(__n128 *a1, int *a2)
{
  uint64_t v4 = &a1[6].n128_u64[1];
  uint64_t v5 = (std::ios_base *)&a1[6].n128_i8[*(void *)(a1[6].n128_u64[1] - 24) + 8];
  v5->__exceptions_ = 1;
  std::ios_base::clear(v5, v5->__rdstate_);
  sub_1001EF930(a2, (uint64_t)__p);
  if ((v10 & 0x80u) == 0) {
    int v6 = __p;
  }
  else {
    int v6 = (void **)__p[0];
  }
  if ((v10 & 0x80u) == 0) {
    uint64_t v7 = v10;
  }
  else {
    uint64_t v7 = (uint64_t)__p[1];
  }
  sub_10002986C(v4, (uint64_t)v6, v7);
  if ((char)v10 < 0) {
    operator delete(__p[0]);
  }
  __n128 result = *(__n128 *)(*(unint64_t *)((char *)v4 + *(void *)(a1[6].n128_u64[1] - 24) + 40) + 40);
  a1[17] = result;
  return result;
}

uint64_t sub_1001EF8DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  if (v25 < 0) {
    operator delete(v24);
  }
  if (a2 != 1) {
    _Unwind_Resume(exception_object);
  }
  __cxa_begin_catch(exception_object);
  __cxa_end_catch();
  return 0;
}

uint64_t sub_1001EF930@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  std::bad_cast v3 = a1 + 2;
  if (*a1 == *a1 >> 31)
  {
    sub_100150A74((uint64_t)v9, "%012x");
    v8[0] = v3;
    v8[1] = nullsub_102;
    uint64_t v8[2] = sub_1001EFA4C;
    uint64_t v4 = (std::string *)sub_100153BCC((uint64_t)v9, (uint64_t)v8);
    sub_10014FF00(v4, a2);
    return sub_1001501E8((uint64_t)v9);
  }
  else
  {
    uint64_t v6 = (uint64_t)(a1 + 7);
    uint64_t v7 = (uint64_t)(a1 + 2);
    return sub_1001EFA54(v7, v6);
  }
}

void sub_1001EFA34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1001501E8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001EFA4C(uint64_t a1, void *a2)
{
  return std::ostream::operator<<(a1, *a2);
}

uint64_t sub_1001EFA54(uint64_t a1, uint64_t a2)
{
  sub_1000CD96C((uint64_t)v8);
  uint64_t v4 = v8[0];
  uint64_t v5 = (char *)v8 + *(void *)(v8[0] - 24);
  if (*((_DWORD *)v5 + 36) == -1)
  {
    std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(void *)(v8[0] - 24)));
    uint64_t v6 = std::locale::use_facet(&v10, &std::ctype<char>::id);
    ((void (*)(const std::locale::facet *, uint64_t))v6->__vftable[2].~facet_0)(v6, 32);
    std::locale::~locale(&v10);
    uint64_t v4 = v8[0];
  }
  *((_DWORD *)v5 + 36) = 48;
  for (*(_DWORD *)((char *)&v8[1] + *(void *)(v4 - 24)) = *(_DWORD *)((unsigned char *)&v8[1] + *(void *)(v4 - 24)) & 0xFFFFFFB5 | 8;
        a1 != a2;
        ++a1)
  {
    *(void *)((char *)&v8[3] + *(void *)(v8[0] - 24)) = 2;
    std::ostream::operator<<();
  }
  std::stringbuf::str();
  if (v9 < 0) {
    operator delete((void *)v8[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_1001EFC84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001EFC98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::locale::~locale((std::locale *)(v9 - 72));
  sub_1000CDB10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001EFCB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001EFCC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_1001EFCDC(uint64_t a1, uint64_t a2, _DWORD *a3, _OWORD *a4)
{
  unsigned int v59 = &v58;
  unint64_t v8 = (unint64_t *)(a2 + 8);
  if (*(_DWORD *)a2 != *(int *)a2 >> 31) {
    sub_1001E7354();
  }
  unint64_t v9 = *v8;
  unsigned int v59 = &v58;
  std::locale v10 = (void *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32) != *(int *)(a2 + 32) >> 31) {
    sub_1001E7354();
  }
  unint64_t v12 = *v10 ^ v9 ^ ((*v10 ^ v9) >> 32);
  unint64_t v13 = v12 + 31;
  unint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v14);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v4 = v12 + 31;
      if (v13 >= v14) {
        unint64_t v4 = v13 % v14;
      }
    }
    else
    {
      unint64_t v4 = (v14 - 1) & v13;
    }
    int v15 = *(void **)(*(void *)a1 + 8 * v4);
    if (v15)
    {
      long long v16 = (void *)*v15;
      if (*v15)
      {
        int v17 = *(_DWORD *)a2 ^ (*(int *)a2 >> 31);
        uint64_t v18 = *(void *)(a2 + 8);
        int v19 = *(_DWORD *)(a2 + 32) ^ (*(int *)(a2 + 32) >> 31);
        uint64_t v20 = *(void *)(a2 + 40);
        if (v11.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v28 = v16[1];
            if (v28 != v13)
            {
              if ((v28 & (v14 - 1)) != v4) {
                goto LABEL_73;
              }
              goto LABEL_46;
            }
            int v29 = *((_DWORD *)v16 + 4);
            if (v17 == ((v29 >> 31) ^ v29))
            {
              if (v29 >> 31 == v29)
              {
                if (v18 != v16[3]) {
                  goto LABEL_46;
                }
              }
              else if (*v8 != v16[3] {
                     || *(void *)(a2 + 16) != v16[4]
              }
                     || *(_DWORD *)(a2 + 24) != (unint64_t)*((unsigned int *)v16 + 10))
              {
                goto LABEL_46;
              }
              int v32 = *((_DWORD *)v16 + 12);
              if (v19 == ((v32 >> 31) ^ v32))
              {
                if (v32 >> 31 == v32)
                {
                  if (v20 == v16[7]) {
                    return v16;
                  }
                }
                else if (*v10 == v16[7] {
                       && *(void *)(a2 + 48) == v16[8]
                }
                       && *(_DWORD *)(a2 + 56) == (unint64_t)*((unsigned int *)v16 + 18))
                {
                  return v16;
                }
              }
            }
LABEL_46:
            long long v16 = (void *)*v16;
            if (!v16) {
              goto LABEL_73;
            }
          }
        }
        do
        {
          unint64_t v21 = v16[1];
          if (v21 == v13)
          {
            int v22 = *((_DWORD *)v16 + 4);
            if (v17 == ((v22 >> 31) ^ v22))
            {
              if (v22 >> 31 == v22)
              {
                if (v18 != v16[3]) {
                  goto LABEL_16;
                }
              }
              else if (*v8 != v16[3] {
                     || *(void *)(a2 + 16) != v16[4]
              }
                     || *(_DWORD *)(a2 + 24) != (unint64_t)*((unsigned int *)v16 + 10))
              {
                goto LABEL_16;
              }
              int v25 = *((_DWORD *)v16 + 12);
              if (v19 == ((v25 >> 31) ^ v25))
              {
                if (v25 >> 31 == v25)
                {
                  if (v20 == v16[7]) {
                    return v16;
                  }
                }
                else if (*v10 == v16[7] {
                       && *(void *)(a2 + 48) == v16[8]
                }
                       && *(_DWORD *)(a2 + 56) == (unint64_t)*((unsigned int *)v16 + 18))
                {
                  return v16;
                }
              }
            }
          }
          else
          {
            if (v21 >= v14) {
              v21 %= v14;
            }
            if (v21 != v4) {
              break;
            }
          }
LABEL_16:
          long long v16 = (void *)*v16;
        }
        while (v16);
      }
    }
  }
LABEL_73:
  uint64_t v35 = operator new(0x60uLL);
  long long v16 = v35;
  *uint64_t v35 = 0;
  v35[1] = v13;
  int v36 = v35 + 3;
  int v38 = a3 + 2;
  int v37 = *a3;
  int v39 = (int)*a3 >> 31;
  if (v37 >> 31 == v37)
  {
    void *v36 = *v38;
    int v39 = v37;
  }
  else
  {
    *(_OWORD *)int v36 = *(_OWORD *)v38;
    *((_DWORD *)v35 + 10) = a3[6];
  }
  *((_DWORD *)v35 + 4) = v39 ^ v37;
  int v40 = v35 + 7;
  int v41 = a3[8];
  int v42 = v41 >> 31;
  int v43 = a3 + 10;
  if (v41 >> 31 == v41)
  {
    *int v40 = *v43;
    int v42 = v41;
  }
  else
  {
    *(_OWORD *)int v40 = *(_OWORD *)v43;
    *((_DWORD *)v35 + 18) = a3[14];
  }
  *((_DWORD *)v35 + 12) = v42 ^ v41;
  *((_OWORD *)v35 + 5) = *a4;
  float v44 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v45 = *(float *)(a1 + 32);
  if (v14 && (float)(v45 * (float)v14) >= v44)
  {
    uint64_t v46 = *(void *)a1;
    long long v47 = *(void **)(*(void *)a1 + 8 * v4);
    if (v47)
    {
LABEL_82:
      *long long v16 = *v47;
LABEL_117:
      void *v47 = v16;
      goto LABEL_118;
    }
  }
  else
  {
    BOOL v48 = 1;
    if (v14 >= 3) {
      BOOL v48 = (v14 & (v14 - 1)) != 0;
    }
    unint64_t v49 = v48 | (2 * v14);
    unint64_t v50 = vcvtps_u32_f32(v44 / v45);
    if (v49 <= v50) {
      size_t prime = v50;
    }
    else {
      size_t prime = v49;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
      unint64_t v14 = *(void *)(a1 + 8);
    }
    if (prime > v14) {
      goto LABEL_93;
    }
    if (prime < v14)
    {
      unint64_t v52 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v14 < 3 || (uint8x8_t v53 = (uint8x8_t)vcnt_s8((int8x8_t)v14), v53.i16[0] = vaddlv_u8(v53), v53.u32[0] > 1uLL))
      {
        unint64_t v52 = std::__next_prime(v52);
      }
      else
      {
        uint64_t v54 = 1 << -(char)__clz(v52 - 1);
        if (v52 >= 2) {
          unint64_t v52 = v54;
        }
      }
      if (prime <= v52) {
        size_t prime = v52;
      }
      if (prime < v14) {
LABEL_93:
      }
        sub_10006338C(a1, prime);
    }
    unint64_t v14 = *(void *)(a1 + 8);
    unint64_t v55 = v14 - 1;
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v13 >= v14)
      {
        unint64_t v4 = v13 % v14;
        uint64_t v46 = *(void *)a1;
        long long v47 = *(void **)(*(void *)a1 + 8 * (v13 % v14));
        if (v47) {
          goto LABEL_82;
        }
      }
      else
      {
        unint64_t v4 = v13;
        uint64_t v46 = *(void *)a1;
        long long v47 = *(void **)(*(void *)a1 + 8 * v13);
        if (v47) {
          goto LABEL_82;
        }
      }
    }
    else
    {
      unint64_t v4 = v55 & v13;
      uint64_t v46 = *(void *)a1;
      long long v47 = *(void **)(*(void *)a1 + 8 * (v55 & v13));
      if (v47) {
        goto LABEL_82;
      }
    }
  }
  *long long v16 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v16;
  *(void *)(v46 + 8 * v4) = a1 + 16;
  if (*v16)
  {
    unint64_t v56 = *(void *)(*v16 + 8);
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v56 >= v14) {
        v56 %= v14;
      }
    }
    else
    {
      v56 &= v14 - 1;
    }
    long long v47 = (void *)(*(void *)a1 + 8 * v56);
    goto LABEL_117;
  }
LABEL_118:
  ++*(void *)(a1 + 24);
  return v16;
}

void sub_1001F0238(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_1001F024C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1001F02C4()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

int64x2_t sub_1001F033C@<Q0>(uint64_t a1@<X0>, int64x2_t *a2@<X8>)
{
  int64x2_t result = vdupq_n_s64(1uLL);
  *a2 = result;
  a2[1].i64[0] = a1;
  return result;
}

uint64_t sub_1001F0350(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = a3[1];
  uint64_t v4 = a3[2];
  if (*a3 >= 1 && v3 >= 1 && v4 >= 1)
  {
    if (v3 < (unint64_t)*a3)
    {
      sub_1000AE4B0(v16, "");
      sub_1001F07EC("For now, dwellWithSignal allows us to wait additional time for a high quality fix if we think we can get one.", &__p);
      sub_10016A2C4((uint64_t)v16, (uint64_t)&__p, 1);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (v17 < 0) {
        operator delete(v16[0]);
      }
      sub_10014B3FC((uint64_t)v15);
    }
    if (v4 < v3)
    {
      sub_1000AE4B0(v16, "");
      sub_1001F083C("We can't be *more* than 100% duty cycle", &__p);
      sub_10016A2C4((uint64_t)v16, (uint64_t)&__p, 1);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (v17 < 0) {
        operator delete(v16[0]);
      }
      sub_10014B3FC((uint64_t)v15);
    }
  }
  uint64_t v7 = *a1;
  if (*a3 >= 1 && v3 >= 1 && v4 >= 1)
  {
    unint64_t v12 = (void *)(v7 + 16);
    if (*(unsigned char *)(*a1 + 8))
    {
      if (*v12 == *a3 && *(void *)(v7 + 24) == v3 && *(void *)(v7 + 32) == v4) {
        return 0;
      }
      long long v13 = *(_OWORD *)a3;
      *(void *)(v7 + 32) = a3[2];
      *(_OWORD *)unint64_t v12 = v13;
      uint64_t v10 = *a1;
      *(void *)uint64_t v10 = a2;
      if (!*(unsigned char *)(v10 + 40)) {
        return 1;
      }
    }
    else
    {
      long long v14 = *(_OWORD *)a3;
      *(void *)(v7 + 32) = a3[2];
      *(_OWORD *)unint64_t v12 = v14;
      *(unsigned char *)(v7 + 8) = 1;
      uint64_t v10 = *a1;
      *(void *)uint64_t v10 = a2;
      if (!*(unsigned char *)(v10 + 40)) {
        return 1;
      }
    }
LABEL_20:
    *(unsigned char *)(v10 + 40) = 0;
    return 1;
  }
  if (!*(unsigned char *)(*a1 + 8)) {
    return 0;
  }
  *(unsigned char *)(v7 + 8) = 0;
  uint64_t v10 = *a1;
  *(void *)uint64_t v10 = a2;
  if (*(unsigned char *)(v10 + 40)) {
    goto LABEL_20;
  }
  return 1;
}

void sub_1001F059C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1001F05E8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *a1;
  if (!*(unsigned char *)(*a1 + 8)) {
    return 0;
  }
  if (*(uint64_t *)(v3 + 16) < 1 || *(void *)(v3 + 24) < 1) {
    return 0;
  }
  uint64_t v5 = *(void *)(v3 + 32);
  if (v5 < 1) {
    return 0;
  }
  uint64_t v6 = a3 - a2;
  if (a3 < a2)
  {
    sub_1000AE4B0(v12, "");
    sub_10014C790("Must travel forward in time. Required: a <= b", &__p);
    sub_10016A2C4((uint64_t)v12, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v13 < 0) {
      operator delete(v12[0]);
    }
    sub_10014B3FC((uint64_t)&v11);
  }
  if (v6 >= v5) {
    return 1;
  }
  uint64_t v7 = ((a2 - *(void *)v3) % v5 + v5) % v5;
  if (*(unsigned char *)(v3 + 40))
  {
    uint64_t v9 = *(void *)(v3 + 16);
    unint64_t v8 = (uint64_t *)(v3 + 16);
    if (a2 - v8[4] < v9) {
      ++v8;
    }
    if (v7 < *v8) {
      return 1;
    }
  }
  else if (v7 < *(void *)(v3 + 16))
  {
    return 1;
  }
  return v6 >= v5 - v7;
}

void sub_1001F0778(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1001F07BC(uint64_t a1)
{
  if (!*(unsigned char *)a1) {
    return 0;
  }
  uint64_t v1 = *(void *)(a1 + 16);
  if (*(uint64_t *)(a1 + 8) >= 1)
  {
    BOOL v3 = __OFSUB__(v1, 1);
    BOOL v2 = v1 - 1 < 0;
  }
  else
  {
    BOOL v3 = 0;
    BOOL v2 = 1;
  }
  return v2 == v3 && *(void *)(a1 + 24) > 0;
}

std::string *sub_1001F07EC@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1001F0820(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_1001F083C@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1001F0870(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001F088C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1001F0904()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_1001F097C(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)int64x2_t result = a2;
  *(void *)(result + 8) = a3;
  *(_DWORD *)(result + 16) = a4;
  return result;
}

void sub_1001F0988(int *a1@<X0>, int **a2@<X8>)
{
  BOOL v3 = a2;
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  while (sub_10028CFF0(a1) && !sub_10028CF94((uint64_t)a1, 1))
  {
    uint64_t v4 = v3;
    sub_10028CFE0((uint64_t)a1, 1);
    int v5 = sub_10028CF40((uint64_t)a1, a1[4]);
    if (sub_10028CFF0(a1))
    {
      int v6 = 0;
      do
      {
        if (!sub_10028CF94((uint64_t)a1, 1)) {
          break;
        }
        sub_10028CFE0((uint64_t)a1, 1);
        int v7 = sub_10028CF40((uint64_t)a1, 1);
        if (v7) {
          int v8 = 6;
        }
        else {
          int v8 = 2;
        }
        int v9 = sub_10028CF40((uint64_t)a1, v8);
        BOOL v10 = sub_10028CFF0(a1);
        int v11 = v6 + 5;
        if (!v7) {
          int v11 = v6 + 1;
        }
        int v6 = v11 + v9;
      }
      while (v10);
      if (v6 >= 1)
      {
        char v13 = v3[1];
        unint64_t v12 = v3[2];
        if (v13 >= v12)
        {
          int v15 = *v3;
          uint64_t v16 = (char *)v13 - (char *)*v3;
          uint64_t v17 = v16 >> 2;
          unint64_t v18 = (v16 >> 2) + 1;
          if (v18 >> 62) {
            goto LABEL_63;
          }
          uint64_t v19 = (char *)v12 - (char *)v15;
          if (v19 >> 1 > v18) {
            unint64_t v18 = v19 >> 1;
          }
          if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v20 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v20 = v18;
          }
          if (v20)
          {
            if (v20 >> 62) {
              goto LABEL_64;
            }
            unint64_t v21 = v20;
            int v22 = operator new(4 * v20);
            unint64_t v20 = v21;
            long long v23 = (int *)&v22[4 * v17];
            *long long v23 = v5;
            long long v14 = v23 + 1;
            if (v13 != v15)
            {
LABEL_26:
              unint64_t v24 = (char *)(v13 - 1) - (char *)v15;
              if (v24 < 0x2C)
              {
                BOOL v3 = v4;
                goto LABEL_34;
              }
              unint64_t v25 = (char *)v13 - &v22[v16];
              BOOL v3 = v4;
              if (v25 < 0x20) {
                goto LABEL_67;
              }
              uint64_t v26 = (v24 >> 2) + 1;
              uint64_t v27 = 4 * (v26 & 0x7FFFFFFFFFFFFFF8);
              uint64_t v28 = &v13[v27 / 0xFFFFFFFFFFFFFFFCLL];
              long long v23 = (int *)((char *)v23 - v27);
              int v29 = &v22[4 * v17 - 16];
              uint64_t v30 = v13 - 4;
              uint64_t v31 = v26 & 0x7FFFFFFFFFFFFFF8;
              do
              {
                long long v32 = *(_OWORD *)v30;
                *(v29 - 1) = *((_OWORD *)v30 - 1);
                *int v29 = v32;
                v29 -= 2;
                v30 -= 8;
                v31 -= 8;
              }
              while (v31);
              char v13 = v28;
              if (v26 != (v26 & 0x7FFFFFFFFFFFFFF8))
              {
LABEL_67:
                do
                {
LABEL_34:
                  int v33 = *--v13;
                  *--long long v23 = v33;
                }
                while (v13 != v15);
              }
LABEL_35:
              unint64_t v12 = (int *)&v22[4 * v20];
              *BOOL v3 = v23;
              v3[1] = v14;
              v3[2] = v12;
              if (v15)
              {
                operator delete(v15);
                unint64_t v12 = v3[2];
              }
              goto LABEL_37;
            }
          }
          else
          {
            int v22 = 0;
            long long v23 = (int *)(4 * v17);
            *(_DWORD *)(4 * v17) = v5;
            long long v14 = (int *)(4 * v17 + 4);
            if (v13 != v15) {
              goto LABEL_26;
            }
          }
          BOOL v3 = v4;
          goto LABEL_35;
        }
        *char v13 = v5;
        long long v14 = v13 + 1;
LABEL_37:
        v3[1] = v14;
        if (v14 < v12)
        {
          *long long v14 = v6;
          v3[1] = v14 + 1;
        }
        else
        {
          uint64_t v34 = *v3;
          uint64_t v35 = (char *)v14 - (char *)*v3;
          uint64_t v36 = v35 >> 2;
          unint64_t v37 = (v35 >> 2) + 1;
          if (v37 >> 62) {
LABEL_63:
          }
            sub_1000A9108();
          uint64_t v38 = (char *)v12 - (char *)v34;
          if (v38 >> 1 > v37) {
            unint64_t v37 = v38 >> 1;
          }
          if ((unint64_t)v38 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v39 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v39 = v37;
          }
          if (v39)
          {
            if (v39 >> 62) {
LABEL_64:
            }
              sub_1000A6A10();
            unint64_t v40 = v39;
            int v41 = operator new(4 * v39);
            unint64_t v39 = v40;
            int v42 = (int *)&v41[4 * v36];
            *int v42 = v6;
            uint64_t v43 = (uint64_t)(v42 + 1);
            BOOL v3 = v4;
            if (v14 == v34) {
              goto LABEL_57;
            }
          }
          else
          {
            int v41 = 0;
            int v42 = (int *)(4 * v36);
            *(_DWORD *)(4 * v36) = v6;
            uint64_t v43 = 4 * v36 + 4;
            BOOL v3 = v4;
            if (v14 == v34) {
              goto LABEL_57;
            }
          }
          unint64_t v44 = (char *)(v14 - 1) - (char *)v34;
          if (v44 >= 0x2C)
          {
            if ((unint64_t)((char *)v14 - v41 - v35) >= 0x20)
            {
              uint64_t v46 = (v44 >> 2) + 1;
              uint64_t v47 = 4 * (v46 & 0x7FFFFFFFFFFFFFF8);
              float v45 = &v14[v47 / 0xFFFFFFFFFFFFFFFCLL];
              int v42 = (int *)((char *)v42 - v47);
              BOOL v48 = &v41[4 * v36 - 16];
              unint64_t v49 = v14 - 4;
              uint64_t v50 = v46 & 0x7FFFFFFFFFFFFFF8;
              do
              {
                long long v51 = *(_OWORD *)v49;
                *(v48 - 1) = *((_OWORD *)v49 - 1);
                _OWORD *v48 = v51;
                v48 -= 2;
                v49 -= 8;
                v50 -= 8;
              }
              while (v50);
              if (v46 == (v46 & 0x7FFFFFFFFFFFFFF8)) {
                goto LABEL_57;
              }
            }
            else
            {
              float v45 = v14;
            }
          }
          else
          {
            float v45 = v14;
          }
          do
          {
            int v52 = *--v45;
            *--int v42 = v52;
          }
          while (v45 != v34);
LABEL_57:
          *BOOL v3 = v42;
          v3[1] = (int *)v43;
          v3[2] = (int *)&v41[4 * v39];
          if (v34) {
            operator delete(v34);
          }
          v3[1] = (int *)v43;
        }
      }
    }
  }

  sub_1001F0D88((uint64_t)v3);
}

void sub_1001F0D54(_Unwind_Exception *exception_object)
{
  BOOL v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001F0D88(uint64_t a1)
{
  uint64_t v1 = *(unsigned char **)(a1 + 8);
  BOOL v2 = *(unsigned char **)a1;
  uint64_t v3 = (uint64_t)&v1[-*(void *)a1];
  uint64_t v4 = v3 >> 2;
  if (v3 >> 2 >= (unint64_t)((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 2)) {
    return;
  }
  int64_t v6 = v1 - v2;
  if (v1 == v2)
  {
    uint64_t v8 = 4 * v4;
    uint64_t v9 = 4 * v4;
    goto LABEL_12;
  }
  if (v3 < 0) {
    sub_1000A6A10();
  }
  int v7 = (char *)operator new((size_t)&v1[-*(void *)a1]);
  uint64_t v8 = (uint64_t)&v7[4 * v4];
  if ((unint64_t)(v6 - 4) < 0x2C)
  {
    uint64_t v9 = (uint64_t)&v7[4 * v4];
    do
    {
LABEL_11:
      int v17 = *((_DWORD *)v1 - 1);
      v1 -= 4;
      *(_DWORD *)(v9 - 4) = v17;
      v9 -= 4;
    }
    while (v1 != v2);
    goto LABEL_12;
  }
  uint64_t v9 = (uint64_t)&v7[4 * v4];
  if ((unint64_t)(&v1[-v3] - v7) < 0x20) {
    goto LABEL_11;
  }
  unint64_t v10 = ((unint64_t)(v6 - 4) >> 2) + 1;
  uint64_t v11 = 4 * (v10 & 0x7FFFFFFFFFFFFFF8);
  unint64_t v12 = &v1[-v11];
  uint64_t v9 = v8 - v11;
  char v13 = &v7[4 * v4 - 16];
  long long v14 = (long long *)(v1 - 16);
  uint64_t v15 = v10 & 0x7FFFFFFFFFFFFFF8;
  do
  {
    long long v16 = *v14;
    *((_OWORD *)v13 - 1) = *(v14 - 1);
    *(_OWORD *)char v13 = v16;
    v13 -= 32;
    v14 -= 2;
    v15 -= 8;
  }
  while (v15);
  uint64_t v1 = v12;
  if (v10 != (v10 & 0x7FFFFFFFFFFFFFF8)) {
    goto LABEL_11;
  }
LABEL_12:
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v8;
  if (v2)
  {
    operator delete(v2);
  }
}

uint64_t sub_1001F0EC4(uint64_t result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)int64x2_t result = v3;
  *(_DWORD *)(result + 16) = v2;
  double v4 = 1.0 / *(double *)&v3;
  BOOL v5 = *(double *)&v3 == 0.0;
  double v6 = 0.0;
  if (!v5) {
    double v6 = v4;
  }
  *(double *)(result + 24) = v6;
  return result;
}

double sub_1001F0EF0(uint64_t a1, unint64_t a2)
{
  unint64_t v3 = a2;
  if (1 << *(_DWORD *)(a1 + 16) <= a2)
  {
    sub_1000AE4B0(v5, "");
    sub_1001F110C("You tried to convert ", &v7);
    sub_1001F115C(&v3, &v8);
    sub_1001F1308(" to a float, which is outside the range of our spec", &v9);
    sub_10016A2C4((uint64_t)v5, (uint64_t)&v7, 3);
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v9.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v8.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_5:
        if ((SHIBYTE(v7.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_6;
        }
        goto LABEL_10;
      }
    }
    else if ((SHIBYTE(v8.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v8.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v7.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_6:
      if ((v6 & 0x80000000) == 0) {
        goto LABEL_7;
      }
LABEL_11:
      operator delete(v5[0]);
LABEL_7:
      sub_1000D11E0((uint64_t)&__p);
    }
LABEL_10:
    operator delete(v7.__r_.__value_.__l.__data_);
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_11;
  }
  return *(double *)(a1 + 8) + (double)a2 * *(double *)a1;
}

void sub_1001F104C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001F1090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  while (1)
  {
    if (*((char *)v17 - 1) < 0) {
      operator delete(*(v17 - 3));
    }
    v17 -= 3;
    if (v17 == (void **)&a17) {
      JUMPOUT(0x1001F106CLL);
    }
  }
}

std::string *sub_1001F10BC@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1001F10F0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_1001F110C@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1001F1140(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001F115C(void *a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  unint64_t v20 = v18;
  unint64_t v21 = v19;
  v14[0] = *a1;
  v14[1] = v19;
  char v15 = 48;
  int v16 = 48;
  uint64_t v3 = sub_100169AA8((uint64_t)v14);
  unint64_t v20 = (unsigned char *)v3;
  unint64_t v21 = v19;
  double v4 = &v19[-v3];
  BOOL v5 = a2;
  if ((unint64_t)&v19[-v3] >= 0x17)
  {
    std::string::__grow_by(a2, 0x16uLL, (std::string::size_type)(v4 - 22), 0, 0, 0, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      BOOL v5 = a2;
    }
    else {
      BOOL v5 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
  }
  if ((unsigned char *)v3 == v19)
  {
    std::string v7 = v5;
  }
  else
  {
    unint64_t v6 = (unint64_t)&v18[-v3 + 42];
    if (v6 < 0x20 || (unint64_t)v5 - v3 < 0x20)
    {
      std::string v7 = v5;
      std::string v8 = (char *)v3;
    }
    else
    {
      std::string v7 = (std::string *)((char *)v5 + (v6 & 0xFFFFFFFFFFFFFFE0));
      std::string v8 = (char *)(v3 + (v6 & 0xFFFFFFFFFFFFFFE0));
      std::string v9 = (long long *)(v3 + 16);
      unint64_t v10 = &v5->__r_.__value_.__r.__words[2];
      unint64_t v11 = v6 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        long long v12 = *v9;
        *((_OWORD *)v10 - 1) = *(v9 - 1);
        *(_OWORD *)unint64_t v10 = v12;
        v9 += 2;
        v10 += 4;
        v11 -= 32;
      }
      while (v11);
      if (v6 == (v6 & 0xFFFFFFFFFFFFFFE0)) {
        goto LABEL_15;
      }
    }
    do
    {
      std::string::value_type v13 = *v8++;
      v7->__r_.__value_.__s.__data_[0] = v13;
      std::string v7 = (std::string *)((char *)v7 + 1);
    }
    while (v8 != v19);
  }
LABEL_15:
  v7->__r_.__value_.__s.__data_[0] = 0;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v4;
  }
  else {
    *((unsigned char *)&a2->__r_.__value_.__s + 23) = v4 & 0x7F;
  }
}

void sub_1001F12EC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_1001F1308@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1001F133C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001F1358()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1001F13D0()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void *sub_1001F1448(void *a1, uint64_t a2)
{
  *a1 = 0;
  a1[2] = 0;
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v10 = 0;
  a1[2] += (*(unsigned int (**)(uint64_t, void **))(*(void *)a2 + 200))(a2, __p);
  int v8 = 0;
  __int16 v7 = 0;
  a1[2] += (*(unsigned int (**)(uint64_t, void **, int *, __int16 *))(*(void *)a2 + 216))(a2, __p, &v8, &v7);
  if (!v8)
  {
    sub_1000AE4B0(&v12, "");
    sub_10015F140("Trying to read past end-of-stream", &v14);
    sub_10016A2C4((uint64_t)&v12, (uint64_t)&v14, 1);
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v14.__r_.__value_.__l.__data_);
    }
    if (v13 < 0) {
      operator delete(v12.__vftable);
    }
    sub_1000D11E0((uint64_t)&v11);
  }
  if (v7 != 1 || v8 != 15)
  {
    __cxa_allocate_exception(0x40uLL);
    sub_1000AE4B0(&v14, "SensorLog thrift modified?  I only know how to parse a basic one");
    std::runtime_error::runtime_error(&v12, &v14);
    v12.__vftable = (std::runtime_error_vtbl *)&off_100453630;
    sub_10018E868((uint64_t)v6);
    sub_1000CC8F4(&v12, (uint64_t)"streaming::SensorLog::SensorLog(::apache::thrift::protocol::TProtocol *)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/util/thrift/streaming_inertial_types.cpp", 32, (uint64_t)v6);
  }
  LODWORD(v14.__r_.__value_.__l.__data_) = 0;
  LODWORD(v12.__vftable) = 0;
  uint64_t v4 = a1[2]
     + (*(unsigned int (**)(uint64_t, std::runtime_error *, std::string *))(*(void *)a2 + 248))(a2, &v12, &v14);
  a1[1] = LODWORD(v14.__r_.__value_.__l.__data_);
  a1[2] = v4;
  if (SHIBYTE(v10) < 0) {
    operator delete(__p[0]);
  }
  return a1;
}

void sub_1001F16C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,std::runtime_error a26,int a27,__int16 a28,char a29,char a30)
{
  if (a25 < 0) {
    operator delete(__p);
  }
  if (a19 < 0) {
    operator delete(a14);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001F1790(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 == a1[1])
  {
    sub_1000AE4B0(v14, "");
    sub_10015F140("Trying to read past end-of-stream", &v16);
    sub_10016A2C4((uint64_t)v14, (uint64_t)&v16, 1);
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v16.__r_.__value_.__l.__data_);
    }
    if (v15 < 0) {
      operator delete(v14[0]);
    }
    sub_1000D11E0((uint64_t)v13);
  }
  *(void *)a4 = off_10045D918;
  *(void *)(a4 + 80) = 0;
  *(_OWORD *)(a4 + 8) = 0u;
  *(_OWORD *)(a4 + 24) = 0u;
  *(_DWORD *)(a4 + 40) = 0;
  *(void *)(a4 + 56) = 0;
  *(void *)(a4 + 64) = 0;
  *(void *)(a4 + 48) = 0;
  *(_DWORD *)(a4 + 72) = 0;
  *(_WORD *)(a4 + 88) &= 0xFC00u;
  *a3 += sub_1001A7038(a4, a2);
  uint64_t v7 = a1[1];
  uint64_t v8 = *a1 + 1;
  *a1 = v8;
  if (v8 == v7)
  {
    *a3 += (*(unsigned int (**)(uint64_t *))(*a2 + 256))(a2);
    *a3 += (*(unsigned int (**)(uint64_t *))(*a2 + 224))(a2);
    __p[0] = 0;
    __p[1] = 0;
    uint64_t v12 = 0;
    int v10 = 0;
    __int16 v9 = 0;
    *a3 += (*(unsigned int (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v10, &v9);
    if (v10)
    {
      sub_1000AE4B0(v14, "");
      sub_1001F1B10("Didn't get STOP as expected", &v16);
      sub_10016A2C4((uint64_t)v14, (uint64_t)&v16, 1);
      if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v16.__r_.__value_.__l.__data_);
      }
      if (v15 < 0) {
        operator delete(v14[0]);
      }
      sub_1000D11E0((uint64_t)v13);
    }
    *a3 += (*(unsigned int (**)(uint64_t *))(*a2 + 208))(a2);
    if (SHIBYTE(v12) < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_1001F1A64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    nullsub_9(v27);
    _Unwind_Resume(a1);
  }
  nullsub_9(v27);
  _Unwind_Resume(a1);
}

std::string *sub_1001F1B10@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1001F1B44(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001F1B60()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1001F1BD8()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_1001F1C50(void **a1@<X0>, char **a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  unint64_t v6 = a4;
  unint64_t v7 = (uint64_t)(a3[1] - *a3) >> 5;
  *(_OWORD *)&buf.__r_.__value_.__l.__data_ = 0uLL;
  sub_1001F2AB0(a4, v7, (unint64_t *)&buf);
  std::string::size_type size = (std::__shared_weak_count *)buf.__r_.__value_.__l.__size_;
  if (buf.__r_.__value_.__l.__size_
    && !atomic_fetch_add((atomic_ullong *volatile)(buf.__r_.__value_.__l.__size_ + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
    std::__shared_weak_count::__release_weak(size);
  }
  unsigned int v96 = 0;
  unsigned int v97 = 0;
  unsigned int v98 = 0;
  unsigned int v93 = 0;
  unsigned int v94 = 0;
  unsigned int v95 = 0;
  uint64_t v9 = a3[1];
  int64_t v10 = v9 - *a3;
  unsigned int v85 = v6;
  if (v9 != *a3)
  {
    if (v10 < 0) {
      sub_1000A9108();
    }
    unsigned int v96 = operator new(v10);
    unsigned int v97 = (char *)v96;
    unsigned int v98 = (char *)v96 + 32 * (v10 >> 5);
    unsigned int v93 = operator new((unint64_t)v10 >> 2);
    unsigned int v94 = (unint64_t *)v93;
    unsigned int v95 = (char *)v93 + 8 * (v10 >> 5);
  }
  (*(void (**)(void **__return_ptr))(*a1[2] + 16))(&v91);
  unint64_t v11 = (char *)v91;
  uint64_t v12 = (uint64_t)(a3[1] - *a3) >> 5;
  unsigned int v88 = (void *)(0xAAAAAAAAAAAAAAABLL * ((v92 - (unsigned char *)v91) >> 3));
  uint64_t v90 = v12;
  if (v88 != (void *)v12)
  {
    sub_1000AE4B0(v100, "");
    sub_1000DB8E8("Number of cache entries ", &buf);
    sub_1001F3080(&v88, &v103);
    sub_1001F34DC(" != num macs, ", &v104);
    sub_1001F3080(&v90, &v105);
    sub_10016A2C4((uint64_t)v100, (uint64_t)&buf, 4);
    if (SHIBYTE(v105.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v105.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v104.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_49:
        if ((SHIBYTE(v103.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_50;
        }
        goto LABEL_137;
      }
    }
    else if ((SHIBYTE(v104.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_49;
    }
    operator delete(v104.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v103.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_50:
      if ((SHIBYTE(buf.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_51;
      }
      goto LABEL_138;
    }
LABEL_137:
    operator delete(v103.__r_.__value_.__l.__data_);
    if ((SHIBYTE(buf.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_51:
      if ((v101 & 0x80000000) == 0) {
        goto LABEL_52;
      }
LABEL_139:
      operator delete(v100[0]);
LABEL_52:
      sub_1000D11E0((uint64_t)__p);
    }
LABEL_138:
    operator delete(buf.__r_.__value_.__l.__data_);
    if ((v101 & 0x80000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_139;
  }
  unsigned int v84 = a2;
  if (v92 != v91)
  {
    std::string::size_type v13 = 0;
    unint64_t v14 = 0;
    while (1)
    {
      std::string v16 = &v11[24 * v14];
      if (*v16)
      {
        uint64_t v17 = *v6;
        uint64_t v18 = *((void *)v16 + 1);
        uint64_t v19 = *((void *)v16 + 2);
        if (v19) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v19 + 8), 1uLL, memory_order_relaxed);
        }
        unint64_t v20 = (void *)(v17 + 16 * v14);
        unint64_t v21 = (std::__shared_weak_count *)v20[1];
        ++v13;
        void *v20 = v18;
        v20[1] = v19;
        if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
          std::__shared_weak_count::__release_weak(v21);
        }
        goto LABEL_12;
      }
      if (v14 >= (uint64_t)(a3[1] - *a3) >> 5) {
        sub_1001F352C();
      }
      int v22 = (int *)(*a3 + 32 * v14);
      long long v23 = (int *)v97;
      if (v97 >= v98)
      {
        unsigned int v97 = (char *)sub_1001E77C4(&v96, v22);
        int v29 = v94;
        uint64_t v28 = v95;
        if (v94 >= (unint64_t *)v95) {
          goto LABEL_27;
        }
      }
      else
      {
        unint64_t v24 = v97 + 8;
        uint64_t v26 = v22 + 2;
        int v25 = *v22;
        if (v25 == v25 >> 31)
        {
          *unint64_t v24 = *v26;
          int v27 = v25;
        }
        else
        {
          long long v30 = *(_OWORD *)v26;
          *((_DWORD *)v97 + 6) = v22[6];
          *(_OWORD *)unint64_t v24 = v30;
          int v27 = *v22;
          int v25 = *v22 >> 31;
        }
        *long long v23 = v27 ^ v25;
        unsigned int v97 = (char *)(v23 + 8);
        int v29 = v94;
        uint64_t v28 = v95;
        if (v94 >= (unint64_t *)v95)
        {
LABEL_27:
          uint64_t v31 = (unint64_t *)v93;
          int64_t v32 = (char *)v29 - (unsigned char *)v93;
          uint64_t v33 = ((char *)v29 - (unsigned char *)v93) >> 3;
          unint64_t v34 = v33 + 1;
          if ((unint64_t)(v33 + 1) >> 61) {
            sub_1000A9108();
          }
          uint64_t v35 = v28 - (unsigned char *)v93;
          if (v35 >> 2 > v34) {
            unint64_t v34 = v35 >> 2;
          }
          if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v36 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v36 = v34;
          }
          if (v36)
          {
            if (v36 >> 61) {
              sub_1000A6A10();
            }
            unint64_t v37 = operator new(8 * v36);
            uint64_t v38 = (unint64_t *)&v37[8 * v33];
            unint64_t *v38 = v14;
            uint64_t v15 = (uint64_t)(v38 + 1);
            if (v29 != v31)
            {
LABEL_36:
              unint64_t v39 = (char *)(v29 - 1) - (char *)v31;
              if (v39 < 0x58)
              {
                unint64_t v6 = v85;
                goto LABEL_44;
              }
              unint64_t v40 = (char *)v29 - &v37[v32];
              unint64_t v6 = v85;
              if (v40 < 0x20) {
                goto LABEL_152;
              }
              uint64_t v41 = (v39 >> 3) + 1;
              uint64_t v42 = 8 * (v41 & 0x3FFFFFFFFFFFFFFCLL);
              uint64_t v43 = &v29[v42 / 0xFFFFFFFFFFFFFFF8];
              uint64_t v38 = (unint64_t *)((char *)v38 - v42);
              unint64_t v44 = &v37[8 * v33 - 16];
              float v45 = v29 - 2;
              uint64_t v46 = v41 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                long long v47 = *(_OWORD *)v45;
                *(v44 - 1) = *((_OWORD *)v45 - 1);
                *unint64_t v44 = v47;
                v44 -= 2;
                v45 -= 4;
                v46 -= 4;
              }
              while (v46);
              int v29 = v43;
              if (v41 != (v41 & 0x3FFFFFFFFFFFFFFCLL))
              {
LABEL_152:
                do
                {
LABEL_44:
                  unint64_t v48 = *--v29;
                  *--uint64_t v38 = v48;
                }
                while (v29 != v31);
              }
LABEL_45:
              unsigned int v93 = v38;
              unsigned int v94 = (unint64_t *)v15;
              unsigned int v95 = &v37[8 * v36];
              if (v31) {
                operator delete(v31);
              }
              goto LABEL_11;
            }
          }
          else
          {
            unint64_t v37 = 0;
            uint64_t v38 = (unint64_t *)(8 * v33);
            *(void *)(8 * v33) = v14;
            uint64_t v15 = 8 * v33 + 8;
            if (v29 != v31) {
              goto LABEL_36;
            }
          }
          unint64_t v6 = v85;
          goto LABEL_45;
        }
      }
      *int v29 = v14;
      uint64_t v15 = (uint64_t)(v29 + 1);
      unint64_t v6 = v85;
LABEL_11:
      unsigned int v94 = (unint64_t *)v15;
LABEL_12:
      ++v14;
      unint64_t v11 = (char *)v91;
      if (v14 >= 0xAAAAAAAAAAAAAAABLL * ((v92 - (unsigned char *)v91) >> 3)) {
        goto LABEL_54;
      }
    }
  }
  std::string::size_type v13 = 0;
LABEL_54:
  if (qword_10047BF08 != -1) {
    dispatch_once(&qword_10047BF08, &stru_1004601D0);
  }
  unint64_t v49 = qword_10047BF10;
  if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_DEBUG))
  {
    uint64_t v50 = (uint64_t)(a3[1] - *a3) >> 5;
    LODWORD(buf.__r_.__value_.__l.__data_) = 134218752;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v50;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2048;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = 0xAAAAAAAAAAAAAAABLL
                                                                               * ((v92 - (unsigned char *)v91) >> 3);
    HIWORD(buf.__r_.__value_.__r.__words[2]) = 2048;
    v103.__r_.__value_.__r.__words[0] = v13;
    LOWORD(v103.__r_.__value_.__r.__words[1]) = 2048;
    *(std::string::size_type *)((char *)&v103.__r_.__value_.__r.__words[1] + 2) = (v97 - (unsigned char *)v96) >> 5;
    _os_log_impl((void *)&_mh_execute_header, v49, OS_LOG_TYPE_DEBUG, "found macs in cache, num macs=%zu num cacheEntries=%zu num foundInCache=%lu num macsToQuery=%zu", (uint8_t *)&buf, 0x2Au);
  }
  long long v51 = v91;
  if (v91)
  {
    int v52 = v92;
    uint8x8_t v53 = v91;
    if (v92 != v91)
    {
      uint64_t v54 = v92;
      do
      {
        int v55 = *(v54 - 24);
        v54 -= 24;
        if (v55)
        {
          unint64_t v56 = (std::__shared_weak_count *)*((void *)v52 - 1);
          if (v56 && !atomic_fetch_add(&v56->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
            std::__shared_weak_count::__release_weak(v56);
          }
          *(v52 - 24) = 0;
        }
        int v52 = v54;
      }
      while (v54 != v51);
      uint8x8_t v53 = v91;
    }
    unsigned int v92 = v51;
    operator delete(v53);
  }
  if (v96 != v97)
  {
    *(_OWORD *)&buf.__r_.__value_.__l.__data_ = 0uLL;
    sub_1001F2AB0(&v91, (v97 - (unsigned char *)v96) >> 5, (unint64_t *)&buf);
    int v57 = (std::__shared_weak_count *)buf.__r_.__value_.__l.__size_;
    if (buf.__r_.__value_.__l.__size_
      && !atomic_fetch_add((atomic_ullong *volatile)(buf.__r_.__value_.__l.__size_ + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
      std::__shared_weak_count::__release_weak(v57);
    }
    if (qword_10047BF08 == -1)
    {
      char v58 = qword_10047BF10;
      if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_76;
      }
    }
    else
    {
      dispatch_once(&qword_10047BF08, &stru_1004601D0);
      char v58 = qword_10047BF10;
      if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_DEBUG))
      {
LABEL_76:
        (*(void (**)(void **__return_ptr))(*a1[1] + 16))(&v88);
        unsigned int v61 = (char *)v88;
        unsigned int v60 = v89;
        uint64_t v90 = (v89 - (unsigned char *)v88) >> 4;
        uint64_t v87 = (v97 - (unsigned char *)v96) >> 5;
        if (v90 == v87)
        {
          if (v89 != v88)
          {
            uint64_t v62 = 0;
            std::string::size_type v63 = 0;
            while (1)
            {
              if (!*(void *)&v61[16 * v62]) {
                goto LABEL_80;
              }
              ((void (*)(std::string *__return_ptr))(*a1)[6])(&buf);
              unsigned int v64 = (char *)v91 + 16 * v62;
              long long v65 = *(_OWORD *)&buf.__r_.__value_.__l.__data_;
              *(_OWORD *)&buf.__r_.__value_.__l.__data_ = 0uLL;
              int v66 = (std::__shared_weak_count *)*((void *)v64 + 1);
              *(_OWORD *)unsigned int v64 = v65;
              if (v66 && !atomic_fetch_add(&v66->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
              {
                ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
                std::__shared_weak_count::__release_weak(v66);
                int v67 = (std::__shared_weak_count *)buf.__r_.__value_.__l.__size_;
                if (buf.__r_.__value_.__l.__size_)
                {
LABEL_85:
                  if (!atomic_fetch_add(&v67->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                  {
                    ((void (*)(std::__shared_weak_count *))v67->__on_zero_shared)(v67);
                    std::__shared_weak_count::__release_weak(v67);
                  }
                }
              }
              else
              {
                int v67 = (std::__shared_weak_count *)buf.__r_.__value_.__l.__size_;
                if (buf.__r_.__value_.__l.__size_) {
                  goto LABEL_85;
                }
              }
              ++v63;
              unsigned int v61 = (char *)v88;
              unsigned int v60 = v89;
LABEL_80:
              if (++v62 >= (unint64_t)((v60 - v61) >> 4)) {
                goto LABEL_98;
              }
            }
          }
          std::string::size_type v63 = 0;
LABEL_98:
          if (qword_10047BF08 == -1)
          {
            unint64_t v68 = v85;
            unint64_t v69 = qword_10047BF10;
            if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_DEBUG))
            {
LABEL_101:
              int v70 = (char *)v88;
              if (v88)
              {
                int v71 = v89;
                int v72 = v88;
                if (v89 != v88)
                {
                  do
                  {
                    int v73 = (std::__shared_weak_count *)*((void *)v71 - 1);
                    if (v73 && !atomic_fetch_add(&v73->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                    {
                      ((void (*)(std::__shared_weak_count *))v73->__on_zero_shared)(v73);
                      std::__shared_weak_count::__release_weak(v73);
                    }
                    v71 -= 16;
                  }
                  while (v71 != v70);
                  int v72 = v88;
                }
                unsigned int v89 = v70;
                operator delete(v72);
              }
              (*(void (**)(void *, char **, void **, void **))(*a1[2] + 24))(a1[2], v84, &v96, &v91);
              unint64_t v75 = (char *)v91;
              int v74 = v92;
              if (v92 == v91)
              {
                unint64_t v75 = v92;
              }
              else
              {
                uint64_t v76 = 0;
                unint64_t v77 = 0;
                do
                {
                  int v78 = &v75[v76];
                  uint64_t v79 = *(void *)&v75[v76];
                  if (v79)
                  {
                    if (v77 >= ((char *)v94 - (unsigned char *)v93) >> 3) {
                      sub_1001F352C();
                    }
                    int v80 = (void *)(*v68 + 16 * *((void *)v93 + v77));
                    uint64_t v81 = *(void *)&v75[v76 + 8];
                    *(void *)int v78 = 0;
                    *((void *)v78 + 1) = 0;
                    int v82 = (std::__shared_weak_count *)v80[1];
                    *int v80 = v79;
                    v80[1] = v81;
                    if (v82 && !atomic_fetch_add(&v82->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                    {
                      ((void (*)(std::__shared_weak_count *))v82->__on_zero_shared)(v82);
                      std::__shared_weak_count::__release_weak(v82);
                    }
                  }
                  ++v77;
                  unint64_t v75 = (char *)v91;
                  int v74 = v92;
                  v76 += 16;
                }
                while (v77 < (v92 - (unsigned char *)v91) >> 4);
              }
              if (v75)
              {
                if (v74 != v75)
                {
                  do
                  {
                    unsigned int v83 = (std::__shared_weak_count *)*((void *)v74 - 1);
                    if (v83 && !atomic_fetch_add(&v83->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                    {
                      ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
                      std::__shared_weak_count::__release_weak(v83);
                    }
                    v74 -= 16;
                  }
                  while (v74 != v75);
                  int v74 = (char *)v91;
                }
                unsigned int v92 = v75;
                operator delete(v74);
              }
              goto LABEL_128;
            }
          }
          else
          {
            dispatch_once(&qword_10047BF08, &stru_1004601D0);
            unint64_t v68 = v85;
            unint64_t v69 = qword_10047BF10;
            if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_DEBUG)) {
              goto LABEL_101;
            }
          }
          LODWORD(buf.__r_.__value_.__l.__data_) = 134217984;
          *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v63;
          _os_log_impl((void *)&_mh_execute_header, v69, OS_LOG_TYPE_DEBUG, "found macs in database and converted heat maps from purpleslam::ApRssiMap to SingleApRadioMap. numFoundInDb=%lu", (uint8_t *)&buf, 0xCu);
          goto LABEL_101;
        }
        sub_1000AE4B0(v100, "");
        sub_1001F1B10("Number of queried rssi maps", &buf);
        sub_1001F3080(&v90, &v103);
        sub_1001EF448(" != num. macs, ", &v104);
        sub_1001F3080(&v87, &v105);
        sub_10016A2C4((uint64_t)v100, (uint64_t)&buf, 4);
        if (SHIBYTE(v105.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v105.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v104.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_93:
            if ((SHIBYTE(v103.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
              goto LABEL_94;
            }
            goto LABEL_142;
          }
        }
        else if ((SHIBYTE(v104.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
          goto LABEL_93;
        }
        operator delete(v104.__r_.__value_.__l.__data_);
        if ((SHIBYTE(v103.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_94:
          if ((SHIBYTE(buf.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_95;
          }
          goto LABEL_143;
        }
LABEL_142:
        operator delete(v103.__r_.__value_.__l.__data_);
        if ((SHIBYTE(buf.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_95:
          if ((v101 & 0x80000000) == 0) {
            goto LABEL_96;
          }
LABEL_144:
          operator delete(v100[0]);
LABEL_96:
          sub_1000D11E0((uint64_t)__p);
        }
LABEL_143:
        operator delete(buf.__r_.__value_.__l.__data_);
        if ((v101 & 0x80000000) == 0) {
          goto LABEL_96;
        }
        goto LABEL_144;
      }
    }
    unsigned int v59 = sub_1000900B8(v84);
    LODWORD(buf.__r_.__value_.__l.__data_) = 136380931;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v59;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2048;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (v97 - (unsigned char *)v96) >> 5;
    _os_log_impl((void *)&_mh_execute_header, v58, OS_LOG_TYPE_DEBUG, "decoding ApRssiMap into SingleApRadioMap, locationId=%{private}s, num. macs=%zu", (uint8_t *)&buf, 0x16u);
    goto LABEL_76;
  }
LABEL_128:
  if (v93)
  {
    unsigned int v94 = (unint64_t *)v93;
    operator delete(v93);
  }
  if (v96)
  {
    unsigned int v97 = (char *)v96;
    operator delete(v96);
  }
}

void sub_1001F293C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void **a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,char a39)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  sub_1000D8DD8(&a14);
  sub_1000D8DD8(&a18);
  if (a21)
  {
    a22 = (uint64_t)a21;
    operator delete(a21);
    unint64_t v40 = a24;
    if (!a24)
    {
LABEL_5:
      sub_1000D8DD8(a11);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    unint64_t v40 = a24;
    if (!a24) {
      goto LABEL_5;
    }
  }
  a25 = (uint64_t)v40;
  operator delete(v40);
  sub_1000D8DD8(a11);
  _Unwind_Resume(a1);
}

void *sub_1001F2AB0(void *a1, unint64_t a2, unint64_t *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    if (a2 >> 60) {
      sub_1000A9108();
    }
    unint64_t v6 = operator new(16 * a2);
    *a1 = v6;
    a1[1] = v6;
    unint64_t v7 = &v6[2 * a2];
    a1[2] = v7;
    unint64_t v8 = a3[1];
    if (v8)
    {
      *unint64_t v6 = *a3;
      v6[1] = v8;
LABEL_5:
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
      while (1)
      {
        v6 += 2;
        if (v6 == v7) {
          break;
        }
        unint64_t v8 = a3[1];
        *unint64_t v6 = *a3;
        v6[1] = v8;
        if (v8) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      uint64_t v9 = *a3;
      unint64_t v10 = (a2 - 1) & 0xFFFFFFFFFFFFFFFLL;
      if (v10 < 3) {
        goto LABEL_19;
      }
      unint64_t v11 = v10 + 1;
      long long v12 = *a3;
      std::string::size_type v13 = v6 + 4;
      uint64_t v14 = v11 & 0x1FFFFFFFFFFFFFFCLL;
      do
      {
        *(v13 - 2) = v12;
        *(v13 - 1) = v12;
        *std::string::size_type v13 = v12;
        v13[1] = v12;
        v13 += 4;
        v14 -= 4;
      }
      while (v14);
      v6 += 2 * (v11 & 0x1FFFFFFFFFFFFFFCLL);
      if (v11 != (v11 & 0x1FFFFFFFFFFFFFFCLL))
      {
LABEL_19:
        do
        {
          *unint64_t v6 = v9;
          v6[1] = 0;
          v6 += 2;
        }
        while (v6 != v7);
      }
    }
    a1[1] = v7;
  }
  return a1;
}

void sub_1001F2BB0(_Unwind_Exception *exception_object)
{
  if (*(void *)v1) {
    sub_1003A48D4((void **)(v1 + 8), *(char **)v1, (void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void **sub_1001F2BD0(void **a1)
{
  int v2 = (char *)*a1;
  if (*a1)
  {
    uint64_t v3 = (char *)a1[1];
    uint64_t v4 = *a1;
    if (v3 != v2)
    {
      BOOL v5 = (char *)a1[1];
      do
      {
        int v6 = *(v5 - 24);
        v5 -= 24;
        if (v6)
        {
          unint64_t v7 = (std::__shared_weak_count *)*((void *)v3 - 1);
          if (v7 && !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
            std::__shared_weak_count::__release_weak(v7);
          }
          *(v3 - 24) = 0;
        }
        uint64_t v3 = v5;
      }
      while (v5 != v2);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_1001F2C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = operator new(0x20uLL);
  void *v9 = off_100460200;
  v9[1] = a3;
  v9[2] = a4;
  uint64_t v9[3] = a1;
  long long v12 = v9;
  (*(void (**)(uint64_t, uint64_t, void *))(*(void *)v8 + 24))(v8, a2, v11);
  uint64_t result = (uint64_t)v12;
  if (v12 == v11) {
    return (*(uint64_t (**)(void *))(v11[0] + 32))(v11);
  }
  if (v12) {
    return (*(uint64_t (**)(void))(*v12 + 40))();
  }
  return result;
}

void sub_1001F2DCC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1001F2DE0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_1001F2DE0(void *a1)
{
  int v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

uint64_t sub_1001F2E70(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 40))();
}

void sub_1001F2E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1001F2F34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    sub_1003A4988(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1001F2F50(void *a1)
{
  *a1 = off_100460150;
  uint64_t v2 = a1[2];
  a1[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_1001F2FC0(void *a1)
{
  *a1 = off_100460150;
  uint64_t v2 = a1[2];
  a1[2] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  operator delete();
}

void sub_1001F3050(id a1)
{
  qword_10047BF10 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Database");
}

void sub_1001F3080(void *a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  unint64_t v20 = v18;
  unint64_t v21 = v19;
  v14[0] = *a1;
  v14[1] = v19;
  char v15 = 48;
  int v16 = 48;
  uint64_t v3 = sub_1001F322C((uint64_t)v14);
  unint64_t v20 = (unsigned char *)v3;
  unint64_t v21 = v19;
  uint64_t v4 = &v19[-v3];
  BOOL v5 = a2;
  if ((unint64_t)&v19[-v3] >= 0x17)
  {
    std::string::__grow_by(a2, 0x16uLL, (std::string::size_type)(v4 - 22), 0, 0, 0, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      BOOL v5 = a2;
    }
    else {
      BOOL v5 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
  }
  if ((unsigned char *)v3 == v19)
  {
    unint64_t v7 = v5;
  }
  else
  {
    unint64_t v6 = (unint64_t)&v18[-v3 + 42];
    if (v6 < 0x20 || (unint64_t)v5 - v3 < 0x20)
    {
      unint64_t v7 = v5;
      uint64_t v8 = (char *)v3;
    }
    else
    {
      unint64_t v7 = (std::string *)((char *)v5 + (v6 & 0xFFFFFFFFFFFFFFE0));
      uint64_t v8 = (char *)(v3 + (v6 & 0xFFFFFFFFFFFFFFE0));
      uint64_t v9 = (long long *)(v3 + 16);
      unint64_t v10 = &v5->__r_.__value_.__r.__words[2];
      unint64_t v11 = v6 & 0xFFFFFFFFFFFFFFE0;
      do
      {
        long long v12 = *v9;
        *((_OWORD *)v10 - 1) = *(v9 - 1);
        *(_OWORD *)unint64_t v10 = v12;
        v9 += 2;
        v10 += 4;
        v11 -= 32;
      }
      while (v11);
      if (v6 == (v6 & 0xFFFFFFFFFFFFFFE0)) {
        goto LABEL_15;
      }
    }
    do
    {
      std::string::value_type v13 = *v8++;
      v7->__r_.__value_.__s.__data_[0] = v13;
      unint64_t v7 = (std::string *)((char *)v7 + 1);
    }
    while (v8 != v19);
  }
LABEL_15:
  v7->__r_.__value_.__s.__data_[0] = 0;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
    a2->__r_.__value_.__l.__size_ = (std::string::size_type)v4;
  }
  else {
    *((unsigned char *)&a2->__r_.__value_.__s + 23) = v4 & 0x7F;
  }
}

void sub_1001F3210(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001F322C(uint64_t a1)
{
  std::locale::locale(&v27);
  uint64_t v2 = std::locale::classic();
  if (std::locale::operator==(&v27, v2))
  {
    unint64_t v3 = *(void *)a1;
    do
    {
      uint64_t v4 = *(void *)(a1 + 8);
      *(void *)(a1 + 8) = v4 - 1;
      *(unsigned char *)(v4 - 1) = *(_DWORD *)(a1 + 20)
                         + v3
                         - 10 * (((v3 * (unsigned __int128)0xCCCCCCCCCCCCCCCDLL) >> 64) >> 3);
      unint64_t v5 = *(void *)a1;
      unint64_t v3 = *(void *)a1 / 0xAuLL;
      *(void *)a1 = v3;
    }
    while (v5 > 9);
    uint64_t v6 = *(void *)(a1 + 8);
    goto LABEL_28;
  }
  unint64_t v7 = std::locale::use_facet(&v27, &std::numpunct<char>::id);
  ((void (*)(void **__return_ptr))v7->__vftable[1].__on_zero_shared)(&__p);
  if ((char)v26 < 0)
  {
    unint64_t v8 = v25;
    if (!v25 || *(char *)__p <= 0) {
      goto LABEL_24;
    }
LABEL_11:
    char v9 = ((uint64_t (*)(const std::locale::facet *))v7->__vftable[1].~facet_0)(v7);
    uint64_t v10 = 0;
    p_p = __p;
    if ((v26 & 0x80u) == 0) {
      p_p = &__p;
    }
    long long v12 = (uint64_t *)(a1 + 8);
    LOBYTE(v13) = *p_p;
    char v14 = *p_p;
    do
    {
      if (!v14)
      {
        if (++v10 < v8)
        {
          uint64_t v19 = (v26 & 0x80u) == 0 ? &__p : (void **)__p;
          int v13 = *((char *)v19 + v10);
          if (v13 < 1) {
            LOBYTE(v13) = 127;
          }
        }
        char v15 = (unsigned char *)(*v12 - 1);
        uint64_t *v12 = (uint64_t)v15;
        *char v15 = v9;
        char v14 = v13;
      }
      --v14;
      unint64_t v17 = *(void *)a1;
      uint64_t v16 = *(void *)(a1 + 8);
      *(void *)(a1 + 8) = v16 - 1;
      *(unsigned char *)(v16 - 1) = *(_DWORD *)(a1 + 20)
                          + v17
                          - 10 * (((v17 * (unsigned __int128)0xCCCCCCCCCCCCCCCDLL) >> 64) >> 3);
      unint64_t v18 = *(void *)a1;
      *(void *)a1 /= 0xAuLL;
    }
    while (v18 > 9);
    goto LABEL_26;
  }
  unint64_t v8 = v26;
  if (v26 && (char)__p > 0) {
    goto LABEL_11;
  }
LABEL_24:
  long long v12 = (uint64_t *)(a1 + 8);
  unint64_t v20 = *(void *)a1;
  do
  {
    uint64_t v21 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v21 - 1;
    *(unsigned char *)(v21 - 1) = *(_DWORD *)(a1 + 20)
                        + v20
                        - 10 * (((v20 * (unsigned __int128)0xCCCCCCCCCCCCCCCDLL) >> 64) >> 3);
    unint64_t v22 = *(void *)a1;
    unint64_t v20 = *(void *)a1 / 0xAuLL;
    *(void *)a1 = v20;
  }
  while (v22 > 9);
LABEL_26:
  uint64_t v6 = *v12;
  if ((char)v26 < 0) {
    operator delete(__p);
  }
LABEL_28:
  std::locale::~locale(&v27);
  return v6;
}

void sub_1001F349C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    std::locale::~locale(&a15);
    _Unwind_Resume(a1);
  }
  std::locale::~locale(&a15);
  _Unwind_Resume(a1);
}

std::string *sub_1001F34DC@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1001F3510(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001F352C()
{
}

void sub_1001F3548()
{
}

__n128 sub_1001F355C(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)uint64_t v2 = off_100460200;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  *((void *)v2 + 3) = *(void *)(a1 + 24);
  return result;
}

__n128 sub_1001F35B0(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_100460200;
  __n128 result = *(__n128 *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_1001F35E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  (*(void (**)(uint64_t *__return_ptr, void, uint64_t, void))(**(void **)(a1 + 24) + 48))(&v9, *(void *)(a1 + 24), a3, *(void *)(a1 + 8));
  uint64_t v5 = *(void *)(v4 + 24);
  if (!v5) {
    sub_10008F39C();
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *))(*(void *)v5 + 48))(v5, a2, &v9);
  uint64_t v7 = result;
  unint64_t v8 = v10;
  if (v10)
  {
    if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
      return v7;
    }
  }
  return result;
}

void sub_1001F36EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    sub_1003A37A8(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001F3704(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN25CachingSingleApRadioMapDb15foreachRadioMapERK10LocationIdRK30SingleApRadioMapBuildingParamsNSt3"
                     "__18functionIFbRK10MacAddressNS6_10shared_ptrI16SingleApRadioMapEEEEEE3$_0")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN25CachingSingleApRadioMapDb15foreachRadioMapERK10LocationIdRK30SingleApRadioMapBuildin"
                                "gParamsNSt3__18functionIFbRK10MacAddressNS6_10shared_ptrI16SingleApRadioMapEEEEEE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN25CachingSingleApRadioMapDb15foreachRadioMapERK10LocationIdRK30SingleApRadioMapBuildingParamsNSt3__18functionIFbRK10MacAddressNS6_10shared_ptrI16SingleApRadioMapEEEEEE3$_0"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN25CachingSingleApRadioMapDb15foreachRadioMapERK10LocationIdRK30SingleApRadioMapBuildingParamsNSt3__18functionIFbRK10MacAddressNS6_10shared_ptrI16SingleApRadioMapEEEEEE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

_UNKNOWN **sub_1001F3774()
{
}

void sub_1001F3784(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1001F37BC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t sub_1001F37EC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteI16SingleApRadioMapEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteI16SingleApRadioMapEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteI16SingleApRadioMapEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteI16SingleApRadioMapEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_1001F3860()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1001F38D8()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_1001F3950(uint64_t result, uint64_t a2, double a3)
{
  if (*(unsigned char *)result)
  {
    if (!*(unsigned char *)(result + 16)) {
      goto LABEL_6;
    }
  }
  else
  {
    *(unsigned char *)uint64_t result = 1;
    *(void *)(result + 8) = a2;
    if (!*(unsigned char *)(result + 16)) {
      goto LABEL_6;
    }
  }
  if (*(void *)(result + 24) > a2)
  {
    sub_1000AE4B0(__p, "");
    sub_10016A2C4((uint64_t)__p, 0, 0);
    if (v5 < 0) {
      operator delete(__p[0]);
    }
    sub_10014B3FC((uint64_t)v3);
  }
LABEL_6:
  if (a3 > 0.0)
  {
    sub_1000AE4B0(__p, "");
    sub_10016A2C4((uint64_t)__p, 0, 0);
    if (v5 < 0) {
      operator delete(__p[0]);
    }
    sub_10014B3FC((uint64_t)v3);
  }
  ++*(void *)(result + 32);
  *(double *)(result + 40) = *(double *)(result + 40) + a3;
  if (!*(unsigned char *)(result + 16)) {
    *(unsigned char *)(result + 16) = 1;
  }
  *(void *)(result + 24) = a2;
  return result;
}

void sub_1001F3AA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001F3AC8()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1001F3B40()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void *sub_1001F3BB8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100085D38(a2);
  char v5 = operator new(0x30uLL);
  v5[3] = 0;
  v5[1] = 0;
  v5[2] = 0;
  void *v5 = off_1004602E0;
  v5[4] = 0;
  v5[5] = 0;
  sub_1001F3E0C(v5 + 3, *(void *)(v4 + 8), *(void *)(v4 + 16), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(v4 + 16) - *(void *)(v4 + 8)) >> 4));
  *a1 = v5 + 3;
  a1[1] = v5;
  a1[2] = sub_10028FF98(a2);
  return a1;
}

void sub_1001F3C64(_Unwind_Exception *a1)
{
  sub_1000BA884(v1);
  _Unwind_Resume(a1);
}

void sub_1001F3C78(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

uint64_t sub_1001F3C94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10025CF90(a2, *a1, a1[2]);
}

unint64_t sub_1001F3CA4(uint64_t a1)
{
  return 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(*(void *)a1 + 8) - **(void **)a1) >> 4);
}

void sub_1001F3CC4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1004602E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1001F3CE4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1004602E0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_1001F3D38(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  if (v1)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void **)(a1 + 24);
    if (v3 != v1)
    {
      do
      {
        char v5 = *(std::__shared_weak_count **)(v3 - 16);
        if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 80;
      }
      while (v3 != v1);
      uint64_t v4 = *(void **)(a1 + 24);
    }
    *(void *)(a1 + 32) = v1;
    operator delete(v4);
  }
}

void sub_1001F3E0C(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    if (a4 >= 0x333333333333334) {
      sub_1000A9108();
    }
    unint64_t v8 = (char *)operator new(80 * a4);
    *a1 = v8;
    a1[1] = v8;
    a1[2] = &v8[80 * a4];
    if (a2 != a3)
    {
      uint64_t v9 = 0;
      do
      {
        sub_100033728((__n128 *)&v8[v9], (__n128 *)(a2 + v9));
        long long v10 = *(_OWORD *)(a2 + v9 + 32);
        *(_OWORD *)(v11 + 16) = *(_OWORD *)(a2 + v9 + 16);
        *(_OWORD *)(v11 + 32) = v10;
        *(_WORD *)(v11 + 48) = *(_WORD *)(a2 + v9 + 48);
        uint64_t v12 = *(void *)(a2 + v9 + 64);
        *(void *)(v11 + 56) = *(void *)(a2 + v9 + 56);
        *(void *)(v11 + 64) = v12;
        if (v12) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v12 + 8), 1uLL, memory_order_relaxed);
        }
        *(void *)&v8[v9 + 72] = *(void *)(a2 + v9 + 72);
        v9 += 80;
      }
      while (a2 + v9 != a3);
      v8 += v9;
    }
    a1[1] = v8;
  }
}

void sub_1001F3F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_1001F3F2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  if (v11) {
    sub_1003A49C0(v10 + v11, v10);
  }
  *(void *)(v9 + 8) = v10;
  sub_1001F3F54(&a9);
  _Unwind_Resume(a1);
}

void ***sub_1001F3F54(void ***result)
{
  uint64_t v1 = result;
  if (!*((unsigned char *)result + 8))
  {
    uint64_t v2 = *result;
    uint64_t v3 = (char *)**result;
    if (v3)
    {
      uint64_t v4 = (char *)v2[1];
      char v5 = **result;
      if (v4 != v3)
      {
        do
        {
          uint64_t v6 = (std::__shared_weak_count *)*((void *)v4 - 2);
          if (v6)
          {
            if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
              std::__shared_weak_count::__release_weak(v6);
            }
          }
          v4 -= 80;
        }
        while (v4 != v3);
        char v5 = **v1;
      }
      v2[1] = v3;
      operator delete(v5);
      return v1;
    }
  }
  return result;
}

void sub_1001F4030()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1001F40A8()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

BOOL sub_1001F4120(uint64_t a1, int a2)
{
  BOOL v2 = *(_DWORD *)(a1 + 32) != a2;
  *(_DWORD *)(a1 + 32) = a2;
  return v2;
}

void sub_1001F4138()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1001F41B0()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_1001F4228(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  for (uint64_t i = *(unsigned __int8 ***)(a2 + 16); i; uint64_t i = (unsigned __int8 **)*i)
  {
    unint64_t v5 = *(void *)a1;
    unint64_t v6 = *(void *)(a1 + 8);
    if (*(void *)a1 != v6)
    {
      while ((sub_1000706F4((const void ***)v5, (unsigned __int8 ***)i + 2) & 1) == 0)
      {
        v5 += 16;
        if (v5 == v6)
        {
          unint64_t v5 = v6;
          break;
        }
      }
      unint64_t v7 = v5;
      unint64_t v5 = *(void *)(a1 + 8);
      if (v7 != v5) {
        continue;
      }
    }
    if (v5 >= *(void *)(a1 + 16))
    {
      uint64_t v9 = sub_100017420(a1, i + 2);
    }
    else
    {
      unint64_t v8 = i[3];
      *(void *)unint64_t v5 = i[2];
      *(void *)(v5 + 8) = v8;
      if (v8) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)v8 + 1, 1uLL, memory_order_relaxed);
      }
      uint64_t v9 = (void *)(v5 + 16);
    }
    *(void *)(a1 + 8) = v9;
    uint64_t v10 = *(void *)(*(uint64_t (**)(unsigned __int8 *))(*(void *)i[4] + 40))(i[4]);
    if (v10 && ((*(uint64_t (**)(uint64_t))(*(void *)v10 + 40))(v10) & 1) == 0)
    {
      uint64_t v11 = *(void **)(a1 + 32);
      if ((unint64_t)v11 >= *(void *)(a1 + 40))
      {
        uint64_t v4 = sub_1001F4898(a1 + 24, (long long *)i + 2);
      }
      else
      {
        uint64_t v12 = i[5];
        *uint64_t v11 = i[4];
        v11[1] = v12;
        if (v12) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)v12 + 1, 1uLL, memory_order_relaxed);
        }
        uint64_t v4 = v11 + 2;
      }
      *(void *)(a1 + 32) = v4;
    }
  }
  return a1;
}

void sub_1001F43A8(_Unwind_Exception *a1)
{
  sub_1000D8DD8(v2);
  sub_1000D8DD8(v1);
  _Unwind_Resume(a1);
}

void sub_1001F43D0(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  sub_100097908((uint64_t)a2, (uint64_t)(*(void *)(a1 + 32) - *(void *)(a1 + 24)) >> 4);
  uint64_t v5 = *(void *)(a1 + 24);
  for (uint64_t i = *(void *)(a1 + 32); v5 != i; v5 += 16)
  {
    while (1)
    {
      uint64_t v6 = (*(uint64_t (**)(void))(**(void **)v5 + 40))();
      unint64_t v7 = (void *)a2[1];
      if ((unint64_t)v7 < a2[2]) {
        break;
      }
      a2[1] = sub_1001F4898((uint64_t)a2, (long long *)v6);
      v5 += 16;
      if (v5 == i) {
        return;
      }
    }
    uint64_t v8 = *(void *)(v6 + 8);
    *unint64_t v7 = *(void *)v6;
    v7[1] = v8;
    if (v8) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
    }
    a2[1] = v7 + 2;
  }
}

void sub_1001F44A4(_Unwind_Exception *a1)
{
  sub_1000D8DD8(v1);
  _Unwind_Resume(a1);
}

void sub_1001F44B8(_Unwind_Exception *a1)
{
  sub_1000D8DD8(v1);
  _Unwind_Resume(a1);
}

void sub_1001F44CC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)a3 = 0u;
  uint64_t v3 = *(void **)(a1 + 24);
  uint64_t v4 = *(void **)(a1 + 32);
  if (v3 != v4)
  {
    uint64_t v6 = (void **)(a3 + 24);
    do
    {
      unint64_t v7 = (uint64_t *)(*(uint64_t (**)(void, uint64_t))(*(void *)*v3 + 40))(*v3, a2);
      uint64_t v9 = *v7;
      uint64_t v8 = (std::__shared_weak_count *)v7[1];
      if (v8) {
        atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 112))(v9);
      if (sub_1001E58CC(*(void *)v10))
      {
        uint64_t v12 = *(void **)(a3 + 8);
        if ((unint64_t)v12 >= *(void *)(a3 + 16))
        {
          char v14 = sub_1001F4898(a3, (long long *)v10);
        }
        else
        {
          void *v12 = *(void *)v10;
          uint64_t v13 = *(void *)(v10 + 8);
          v12[1] = v13;
          if (v13) {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(v13 + 8), 1uLL, memory_order_relaxed);
          }
          char v14 = v12 + 2;
        }
        *(void *)(a3 + 8) = v14;
      }
      double v15 = (*(double (**)(void, uint64_t))(*(void *)*v3 + 32))(*v3, v11);
      double v16 = (*(double (**)(uint64_t))(*(void *)v9 + 120))(v9);
      double v17 = v16;
      uint64_t v19 = *(double **)(a3 + 32);
      unint64_t v18 = *(void *)(a3 + 40);
      if ((unint64_t)v19 < v18)
      {
        double *v19 = v15;
        v19[1] = v16;
        unint64_t v20 = v19 + 2;
        goto LABEL_26;
      }
      uint64_t v21 = (double *)*v6;
      uint64_t v22 = ((char *)v19 - (unsigned char *)*v6) >> 4;
      unint64_t v23 = v22 + 1;
      if ((unint64_t)(v22 + 1) >> 60) {
        sub_1000A9108();
      }
      uint64_t v24 = v18 - (void)v21;
      if (v24 >> 3 > v23) {
        unint64_t v23 = v24 >> 3;
      }
      if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v25 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v25 = v23;
      }
      if (v25)
      {
        if (v25 >> 60) {
          sub_1000A6A10();
        }
        unsigned __int8 v26 = (char *)operator new(16 * v25);
        std::locale v27 = (double *)&v26[16 * v22];
        *std::locale v27 = v15;
        v27[1] = v17;
        uint64_t v28 = (uint64_t)v27;
        if (v19 == v21)
        {
LABEL_24:
          unint64_t v20 = v27 + 2;
          *(void *)(a3 + 24) = v28;
          *(void *)(a3 + 32) = v27 + 2;
          *(void *)(a3 + 40) = &v26[16 * v25];
          if (v19) {
            goto LABEL_25;
          }
          goto LABEL_26;
        }
      }
      else
      {
        unsigned __int8 v26 = 0;
        std::locale v27 = (double *)(16 * v22);
        *std::locale v27 = v15;
        v27[1] = v16;
        uint64_t v28 = 16 * v22;
        if (v19 == v21) {
          goto LABEL_24;
        }
      }
      do
      {
        *(_OWORD *)(v28 - 16) = *((_OWORD *)v19 - 1);
        v28 -= 16;
        v19 -= 2;
      }
      while (v19 != v21);
      uint64_t v19 = (double *)*v6;
      unint64_t v20 = v27 + 2;
      *(void *)(a3 + 24) = v28;
      *(void *)(a3 + 32) = v27 + 2;
      *(void *)(a3 + 40) = &v26[16 * v25];
      if (v19) {
LABEL_25:
      }
        operator delete(v19);
LABEL_26:
      *(void *)(a3 + 32) = v20;
      if (v8)
      {
        if (!atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
      v3 += 2;
    }
    while (v3 != v4);
  }
}

void sub_1001F479C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000BA884((uint64_t)&a9);
  sub_1001F47D4(v9);
  _Unwind_Resume(a1);
}

void **sub_1001F47D4(void **a1)
{
  BOOL v2 = a1[3];
  if (v2)
  {
    a1[4] = v2;
    operator delete(v2);
  }
  uint64_t v3 = (char *)*a1;
  if (*a1)
  {
    uint64_t v4 = (char *)a1[1];
    uint64_t v5 = *a1;
    if (v4 != v3)
    {
      do
      {
        uint64_t v6 = (std::__shared_weak_count *)*((void *)v4 - 1);
        if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
          std::__shared_weak_count::__release_weak(v6);
        }
        v4 -= 16;
      }
      while (v4 != v3);
      uint64_t v5 = *a1;
    }
    a1[1] = v3;
    operator delete(v5);
  }
  return a1;
}

_OWORD *sub_1001F4898(uint64_t a1, long long *a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void **)(a1 + 8);
  uint64_t v5 = ((uint64_t)v4 - *(void *)a1) >> 4;
  unint64_t v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) >> 60) {
    sub_1000A9108();
  }
  uint64_t v7 = *(void *)(a1 + 16) - (void)v3;
  if (v7 >> 3 > v6) {
    unint64_t v6 = v7 >> 3;
  }
  if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFF0) {
    unint64_t v6 = 0xFFFFFFFFFFFFFFFLL;
  }
  if (v6 >> 60) {
    sub_1000A6A10();
  }
  uint64_t v9 = 16 * v6;
  uint64_t v10 = (char *)operator new(16 * v6);
  uint64_t v11 = &v10[16 * v5];
  long long v12 = *a2;
  *(_OWORD *)uint64_t v11 = *a2;
  if (*((void *)&v12 + 1))
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v12 + 1) + 8), 1uLL, memory_order_relaxed);
    uint64_t v3 = *(void **)a1;
    uint64_t v4 = *(void **)(a1 + 8);
  }
  uint64_t v13 = &v10[v9];
  char v14 = v11 + 16;
  if (v4 == v3)
  {
    *(void *)a1 = v11;
    *(void *)(a1 + 8) = v14;
    *(void *)(a1 + 16) = v13;
    if (!v3) {
      return v14;
    }
    goto LABEL_19;
  }
  do
  {
    long long v15 = *((_OWORD *)v4 - 1);
    v4 -= 2;
    *((_OWORD *)v11 - 1) = v15;
    v11 -= 16;
    void *v4 = 0;
    v4[1] = 0;
  }
  while (v4 != v3);
  double v16 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  *(void *)a1 = v11;
  *(void *)(a1 + 8) = v14;
  *(void *)(a1 + 16) = v13;
  if (v3 != v16)
  {
    do
    {
      double v17 = (std::__shared_weak_count *)*(v3 - 1);
      if (v17 && !atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
        std::__shared_weak_count::__release_weak(v17);
      }
      v3 -= 2;
    }
    while (v3 != v16);
    uint64_t v3 = v16;
  }
  if (v3) {
LABEL_19:
  }
    operator delete(v3);
  return v14;
}

void sub_1001F4A04()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1001F4A7C()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

dispatch_object_t *sub_1001F4AF4(dispatch_object_t *a1)
{
  sub_100359A24(a1 + 4);
  BOOL v2 = *a1;
  if (*a1)
  {
    uint64_t v3 = a1[1];
    dispatch_object_t v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        isa = (std::__shared_weak_count *)v3[-1].isa;
        if (isa && !atomic_fetch_add(&isa->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))isa->__on_zero_shared)(isa);
          std::__shared_weak_count::__release_weak(isa);
        }
        v3 -= 2;
      }
      while (v3 != v2);
      dispatch_object_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_1001F4BB0(uint64_t a1)
{
  *(void *)a1 = off_100460330;
  *(void *)(a1 + 8) = off_1004603C8;
  uint64_t v2 = *(void *)(a1 + 72);
  *(void *)(a1 + 72) = 0;
  if (v2)
  {
    sub_10022F044();
    operator delete();
  }
  uint64_t v3 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  sub_100359A24((dispatch_object_t *)(a1 + 48));
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    unint64_t v6 = *(void **)(a1 + 16);
    if (v5 != v4)
    {
      do
      {
        uint64_t v7 = *(std::__shared_weak_count **)(v5 - 8);
        if (v7 && !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
        v5 -= 16;
      }
      while (v5 != v4);
      unint64_t v6 = *(void **)(a1 + 16);
    }
    *(void *)(a1 + 24) = v4;
    operator delete(v6);
  }
  return a1;
}

void *sub_1001F4D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = sub_10009BD78(*(void *)(a1 + 64));
  sub_10035EFD0((uint64_t)v10, a2, v6, a3);
  uint64_t v7 = (char *)operator new(0x108uLL);
  sub_1001F5498((uint64_t)v7, (uint64_t)v10);
  long long v12 = v7 + 24;
  uint64_t v13 = (std::__shared_weak_count *)v7;
  v15[0] = 0;
  v15[1] = v15;
  v15[2] = 0x3802000000;
  v15[3] = sub_10009657C;
  v15[4] = nullsub_25;
  v15[5] = a1 + 16;
  v15[6] = &v12;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 0x40000000;
  void v14[2] = sub_1000170B8;
  v14[3] = &unk_100460438;
  v14[4] = v15;
  sub_100045DE8((dispatch_queue_t *)(a1 + 48), v14);
  _Block_object_dispose(v15, 8);
  uint64_t v8 = v13;
  if (v13 && !atomic_fetch_add(&v13->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  return sub_1000748BC(v11);
}

void sub_1001F4E7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  operator delete(v3);
  sub_1000748BC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1001F4E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000748BC((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001F4EB4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 128))();
}

void sub_1001F4ED8(uint64_t a1, uint64_t a2)
{
}

void sub_1001F4EE0(uint64_t a1, uint64_t a2)
{
}

void sub_1001F4EE8(uint64_t a1, uint64_t a2)
{
}

void sub_1001F4EF0(uint64_t a1, uint64_t a2)
{
}

void sub_1001F4EF8(uint64_t a1, uint64_t a2)
{
}

void sub_1001F4F00(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1001F4F08(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = (void *)a2[3];
  if (v3)
  {
    if (v3 == a2)
    {
      int v6 = v5;
      (*(void (**)(void *, void *))(*a2 + 24))(a2, v5);
    }
    else
    {
      int v6 = (void *)a2[3];
      a2[3] = 0;
    }
  }
  else
  {
    int v6 = 0;
  }
  sub_10022F048(v2, v5);
  uint64_t result = (uint64_t)v6;
  if (v6 == v5) {
    return (*(uint64_t (**)(void *))(v5[0] + 32))(v5);
  }
  if (v6) {
    return (*(uint64_t (**)(void))(*v6 + 40))();
  }
  return result;
}

void sub_1001F5038(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  if (a2) {
    sub_1000A6954(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1001F505C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

void *sub_1001F50EC(uint64_t a1)
{
  v4[0] = 0;
  v4[1] = v4;
  v4[2] = 0x3802000000;
  v4[3] = sub_1001F55F4;
  v4[4] = nullsub_105;
  v4[5] = a1 + 16;
  v4[6] = &v2;
  uint64_t v2 = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 0x40000000;
  v3[2] = sub_1001F5604;
  v3[3] = &unk_100460460;
  v3[4] = v4;
  sub_100045DE8((dispatch_queue_t *)(a1 + 48), v3);
  _Block_object_dispose(v4, 8);
  return sub_100017318(*v2);
}

void sub_1001F51C4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v8[0] = 0;
  v8[1] = v8;
  uint64_t v8[2] = 0x3802000000;
  void v8[3] = sub_1001F55F4;
  v8[4] = nullsub_105;
  v8[5] = a1 + 16;
  v8[6] = &v6;
  int v6 = 0;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 0x40000000;
  v7[2] = sub_1001F5604;
  v7[3] = &unk_100460460;
  v7[4] = v8;
  sub_100045DE8((dispatch_queue_t *)(a1 + 48), v7);
  _Block_object_dispose(v8, 8);
  char v3 = (char)v6;
  if (!v6) {
    goto LABEL_4;
  }
  uint64_t v4 = v6[1];
  *(void *)(a2 + 8) = *v6;
  *(void *)(a2 + 16) = v4;
  if (v4)
  {
    uint64_t v5 = (atomic_ullong *)(v4 + 8);
    char v3 = 1;
    atomic_fetch_add_explicit(v5, 1uLL, memory_order_relaxed);
LABEL_4:
    *(unsigned char *)a2 = v3;
    return;
  }
  *(unsigned char *)a2 = 1;
}

void sub_1001F52D4(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v4 = a1;
  memset(&v5, 0, sizeof(v5));
  if ((sub_10015E6D8((uint64_t)&v4, &v5) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v6);
    v6.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v6);
  }
  char v3 = std::string::insert(&v5, 0, "BaseLocalizer ");
  *a2 = *v3;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v5.__r_.__value_.__l.__data_);
  }
}

void sub_1001F53A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, std::bad_cast a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001F53D8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
}

uint64_t sub_1001F53E0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  while (v2)
  {
    char v3 = v2;
    uint64_t v2 = (void *)*v2;
    sub_100074A24(v3 + 4);
    uint64_t v4 = (std::__shared_weak_count *)v3[3];
    if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    operator delete(v3);
  }
  std::string v5 = *(void **)a1;
  *(void *)a1 = 0;
  if (v5) {
    operator delete(v5);
  }
  return a1;
}

uint64_t sub_1001F5498(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_100454870;
  *(void *)(a1 + 32) = *(void *)a2;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 48) = *(void *)(a2 + 16);
  *(void *)(a1 + 56) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  sub_1000771DC(a1 + 64, a2 + 32);
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 104) = *(void *)(a2 + 72);
  *(void *)(a1 + 112) = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 88);
  *(_DWORD *)(a1 + 24) = 11;
  return a1;
}

void sub_1001F553C(_Unwind_Exception *a1)
{
  shared_owners = (std::__shared_weak_count *)v1[2].__shared_owners_;
  if (shared_owners) {
    sub_1003A4A40(shared_owners);
  }
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001F555C(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16))
    {
      sub_100074A24(v2 + 4);
      char v3 = (std::__shared_weak_count *)v2[3];
      if (v3)
      {
        if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
          std::__shared_weak_count::__release_weak(v3);
        }
      }
    }
    operator delete(v2);
  }
  return a1;
}

__n128 sub_1001F55F4(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)(a2 + 40);
  *(__n128 *)(a1 + 40) = result;
  return result;
}

uint64_t sub_1001F5604(uint64_t result)
{
  uint64_t v1 = *(void *)(*(void *)(result + 32) + 8);
  char v3 = *(uint64_t **)(v1 + 40);
  uint64_t v2 = *(void **)(v1 + 48);
  if (*v3 == v3[1]) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = *v3;
  }
  *uint64_t v2 = v4;
  return result;
}

void sub_1001F5624()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1001F569C()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

id sub_1001F5714()
{
  if (qword_10047BF08 == -1)
  {
    uint64_t v0 = (void *)qword_10047BF10;
  }
  else
  {
    dispatch_once(&qword_10047BF08, &stru_100460658);
    uint64_t v0 = (void *)qword_10047BF10;
  }
  return v0;
}

uint64_t sub_1001F5784(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001F57B8(uint64_t a1)
{
  sub_1000045C8(a1, &__p);
  sub_100056B28((const char *)&__p, 0, (int *)buf);
  if (*(_DWORD *)buf <= 1u)
  {
    if (qword_10047BF08 == -1)
    {
      uint64_t v7 = qword_10047BF10;
      if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_FAULT)) {
        goto LABEL_15;
      }
    }
    else
    {
      dispatch_once(&qword_10047BF08, &stru_100460658);
      uint64_t v7 = qword_10047BF10;
      if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_FAULT))
      {
LABEL_15:
        uint64_t v8 = 0;
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          goto LABEL_16;
        }
        return v8;
      }
    }
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_FAULT, "doExpectedTablesExist, #warning expecting db to exist", buf, 2u);
    goto LABEL_15;
  }
  sub_10009FF20(&v42, &__p, 294914, 0);
  unint64_t v40 = operator new(0x40uLL);
  long long v41 = xmmword_1003F6350;
  strcpy((char *)v40, "SELECT 1 FROM sqlite_master WHERE type='table' AND name=?");
  char v39 = 6;
  strcpy((char *)v38, "venues");
  sub_100082248(&v42, (uint64_t)&v40, 0, (uint64_t)&pStmt);
  sub_100081BC0(&pStmt, 1, (uint64_t *)v38);
  BOOL v1 = 0;
  uint64_t v2 = pStmt;
  for (uint64_t i = pStmt; ; uint64_t i = pStmt)
  {
    int v4 = sqlite3_step(i);
    int v5 = v4;
    if (v4 == 100)
    {
      if (sqlite3_column_type(v2, 0) != 5) {
        BOOL v6 = sqlite3_column_int64(v2, 0) != 0;
      }
      BOOL v1 = v6;
      continue;
    }
    if (v4 == 101) {
      break;
    }
    if (v4 == 19)
    {
LABEL_54:
      if (qword_10047BF08 == -1)
      {
        unint64_t v20 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO)) {
          goto LABEL_56;
        }
      }
      else
      {
        dispatch_once(&qword_10047BF08, &stru_100460658);
        unint64_t v20 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO))
        {
LABEL_56:
          *(_WORD *)std::string buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "Query constraint violation", buf, 2u);
        }
      }
      __cxa_allocate_exception(0x40uLL);
      v46.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
      *(_OWORD *)&v46.__r_.__value_.__r.__words[1] = xmmword_1003F6340;
      strcpy(v46.__r_.__value_.__l.__data_, "Constraint violation stepping through statement");
      std::runtime_error::runtime_error((std::runtime_error *)&v51, &v46);
      v51.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100460ED8;
      sub_10018E868((uint64_t)v45);
      sub_10020E390((std::runtime_error *)&v51, (uint64_t)"auto db::resources::statement<1, 1>::run((lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:356:23) &&)::(anonymous class)::operator()() const [nCols = 1, nQueries = 1, ColumnNumberType = unsigned long]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 486, (uint64_t)v45);
    }
    sub_100088644(v4, db);
    if (v5)
    {
LABEL_58:
      uint64_t v21 = __error();
      sub_100295674(*v21, &__dst);
      __cxa_allocate_exception(0x40uLL);
      *((unsigned char *)&v49.__r_.__value_.__s + 23) = 4;
      strcpy((char *)&v49, " w/ ");
      uint64_t v22 = std::string::insert(&v49, 0, "Failed sqlite3_step");
      long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
      v50.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v23;
      v22->__r_.__value_.__l.__size_ = 0;
      v22->__r_.__value_.__r.__words[2] = 0;
      v22->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        sub_1000559FC(&v48, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
      }
      else {
        std::string v48 = __dst;
      }
      if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v24 = &v48;
      }
      else {
        uint64_t v24 = (std::string *)v48.__r_.__value_.__r.__words[0];
      }
      if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v48.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v48.__r_.__value_.__l.__size_;
      }
      unsigned __int8 v26 = std::string::append(&v50, (const std::string::value_type *)v24, size);
      long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
      v51.__r_.__value_.__r.__words[2] = v26->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v27;
      v26->__r_.__value_.__l.__size_ = 0;
      v26->__r_.__value_.__r.__words[2] = 0;
      v26->__r_.__value_.__r.__words[0] = 0;
      std::runtime_error::runtime_error(&v52, &v51);
      v52.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
      sub_10018E868((uint64_t)v47);
      sub_100204FC4(&v52, (uint64_t)"void db::resources::statement<1, 1>::run(Cb &&, ConstraintHandler &&) [nCols = 1, nQueries = 1, ColumnNumberType = unsigned long, Cb = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:356:23), ConstraintHandler = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h:485:43)]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 512, (uint64_t)v47);
    }
  }
  int v10 = sqlite3_reset(pStmt);
  sub_100088644(v10, db);
  if (v10) {
    goto LABEL_68;
  }
  if (!v1) {
    goto LABEL_37;
  }
  sub_1000819D8((uint64_t)&pStmt);

  if (v39 < 0) {
    operator delete(v38[0]);
  }
  char v39 = 6;
  strcpy((char *)v38, "venues");
  sub_100082248(&v42, (uint64_t)&v40, 0, (uint64_t)&pStmt);
  sub_100081BC0(&pStmt, 1, (uint64_t *)v38);
  BOOL v11 = 0;
  long long v12 = pStmt;
  for (uint64_t j = pStmt; ; uint64_t j = pStmt)
  {
    while (1)
    {
      int v14 = sqlite3_step(j);
      int v15 = v14;
      if (v14 != 100) {
        break;
      }
      if (sqlite3_column_type(v12, 0) != 5) {
        BOOL v16 = sqlite3_column_int64(v12, 0) != 0;
      }
      BOOL v11 = v16;
      uint64_t j = pStmt;
    }
    if (v14 == 101) {
      break;
    }
    if (v14 == 19) {
      goto LABEL_54;
    }
    sub_100088644(v14, db);
    if (v15) {
      goto LABEL_58;
    }
  }
  int v17 = sqlite3_reset(pStmt);
  sub_100088644(v17, db);
  if (v17)
  {
LABEL_68:
    uint64_t v28 = __error();
    sub_100295674(*v28, &__dst);
    __cxa_allocate_exception(0x40uLL);
    *((unsigned char *)&v49.__r_.__value_.__s + 23) = 4;
    strcpy((char *)&v49, " w/ ");
    int v29 = std::string::insert(&v49, 0, "Failed to execute query");
    long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v30;
    v29->__r_.__value_.__l.__size_ = 0;
    v29->__r_.__value_.__r.__words[2] = 0;
    v29->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&v48, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
    }
    else {
      std::string v48 = __dst;
    }
    if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v31 = &v48;
    }
    else {
      uint64_t v31 = (std::string *)v48.__r_.__value_.__r.__words[0];
    }
    if ((v48.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v32 = HIBYTE(v48.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v32 = v48.__r_.__value_.__l.__size_;
    }
    uint64_t v33 = std::string::append(&v50, (const std::string::value_type *)v31, v32);
    long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v34;
    v33->__r_.__value_.__l.__size_ = 0;
    v33->__r_.__value_.__r.__words[2] = 0;
    v33->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v52, &v51);
    v52.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v44);
    sub_100204FC4(&v52, (uint64_t)"void db::resources::statement<1, 1>::run(Cb &&, ConstraintHandler &&) [nCols = 1, nQueries = 1, ColumnNumberType = unsigned long, Cb = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:356:23), ConstraintHandler = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h:485:43)]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 518, (uint64_t)v44);
  }
  if (!v11)
  {
LABEL_37:
    if (qword_10047BF08 == -1)
    {
      unint64_t v18 = qword_10047BF10;
      if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_42;
      }
    }
    else
    {
      dispatch_once(&qword_10047BF08, &stru_100460658);
      unint64_t v18 = qword_10047BF10;
      if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_42;
      }
    }
    uint64_t v19 = v38;
    if (v39 < 0) {
      uint64_t v19 = (void **)v38[0];
    }
    *(_DWORD *)std::string buf = 136446210;
    int v55 = v19;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "#warning table %{public}s does not exist", buf, 0xCu);
LABEL_42:
    sub_1000819D8((uint64_t)&pStmt);

    if (v39 < 0)
    {
      operator delete(v38[0]);
      uint64_t v8 = 0;
      if ((SHIBYTE(v41) & 0x80000000) == 0) {
        goto LABEL_44;
      }
    }
    else
    {
      uint64_t v8 = 0;
      if ((SHIBYTE(v41) & 0x80000000) == 0) {
        goto LABEL_44;
      }
    }
    goto LABEL_35;
  }
  sub_1000819D8((uint64_t)&pStmt);

  if (v39 < 0)
  {
    operator delete(v38[0]);
    uint64_t v8 = 1;
    if ((SHIBYTE(v41) & 0x80000000) == 0) {
      goto LABEL_44;
    }
LABEL_35:
    operator delete(v40);
    sub_10009FF1C(&v42);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_16;
    }
    return v8;
  }
  uint64_t v8 = 1;
  if (SHIBYTE(v41) < 0) {
    goto LABEL_35;
  }
LABEL_44:
  sub_10009FF1C(&v42);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
LABEL_16:
  }
    operator delete(__p.__r_.__value_.__l.__data_);
  return v8;
}

void sub_1001F69BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,void *a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,void *a40,void *__p,uint64_t a42,int a43,__int16 a44,char a45,char a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,void *a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59,void *a60,uint64_t a61,int a62,__int16 a63)
{
  std::runtime_error::~runtime_error(v77);
  if (a46 < 0)
  {
    operator delete(__p);
    if ((a39 & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else if ((a39 & 0x80000000) == 0)
  {
LABEL_3:
    if (a59 < 0) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
  operator delete(a34);
  if (a59 < 0)
  {
LABEL_4:
    operator delete(a54);
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  if ((a52 & 0x80000000) == 0)
  {
LABEL_5:
    *(void *)(v79 - 192) = v78;
    if (*(char *)(v79 - 161) < 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(a47);
  *(void *)(v79 - 192) = v78;
  if (*(char *)(v79 - 161) < 0)
  {
LABEL_6:
    operator delete(*(void **)(v79 - 184));
    if ((a65 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  if ((a65 & 0x80000000) == 0)
  {
LABEL_7:
    *(void *)(v79 - 144) = &off_100451DC0;
    uint64_t v81 = *(void *)(v79 - 136);
    if (!v81) {
      goto LABEL_17;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a60);
  *(void *)(v79 - 144) = &off_100451DC0;
  uint64_t v81 = *(void *)(v79 - 136);
  if (!v81) {
    goto LABEL_17;
  }
LABEL_15:
  if ((*(unsigned int (**)(uint64_t))(*(void *)v81 + 32))(v81)) {
    *(void *)(v79 - 136) = 0;
  }
LABEL_17:
  std::runtime_error::~runtime_error((std::runtime_error *)(v79 - 160));
  if (a31)
  {
    a32 = (uint64_t)a31;
    operator delete(a31);
  }
  std::runtime_error::~runtime_error((std::runtime_error *)(v79 - 232));
  if (*(char *)(v79 - 233) < 0) {
    operator delete(*(void **)(v79 - 256));
  }
  if (a73 < 0) {
    operator delete(a72);
  }
  if (a77 < 0) {
    operator delete(a76);
  }
  if (a75 < 0) {
    operator delete(a74);
  }
  __cxa_free_exception(v77);
  if (*(char *)(v79 - 193) < 0) {
    operator delete(*(void **)(v79 - 216));
  }
  sub_1001F702C((uint64_t)&a9);
  if (a17 < 0) {
    operator delete(a12);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  sub_10009FF1C(&a24);
  if (a30 < 0) {
    operator delete(a25);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1001F702C(uint64_t a1)
{
  return a1;
}

void sub_1001F7060(char *a1@<X0>, std::string *a2@<X8>)
{
  *((unsigned char *)&v20.__r_.__value_.__s + 23) = 17;
  strcpy((char *)&v20, "DbVersion(status=");
  unint64_t v4 = *a1;
  if (v4 < 3) {
    std::string::append(&v20, (&off_100461638)[v4]);
  }
  int v5 = SHIBYTE(v20.__r_.__value_.__r.__words[2]);
  if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t size = HIBYTE(v20.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t size = v20.__r_.__value_.__l.__size_;
  }
  unint64_t v7 = size + 10;
  if (size + 10 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  if (v7 >= 0x17)
  {
    uint64_t v9 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17) {
      uint64_t v9 = v7 | 7;
    }
    uint64_t v10 = v9 + 1;
    p_dst = (std::string *)operator new(v9 + 1);
    __dst.__r_.__value_.__l.__size_ = size + 10;
    __dst.__r_.__value_.__r.__words[2] = v10 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  }
  else
  {
    memset(&__dst, 0, sizeof(__dst));
    p_dst = &__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = size + 10;
    if (!size) {
      goto LABEL_17;
    }
  }
  if (v5 >= 0) {
    BOOL v11 = &v20;
  }
  else {
    BOOL v11 = (std::string *)v20.__r_.__value_.__r.__words[0];
  }
  memmove(p_dst, v11, size);
LABEL_17:
  strcpy((char *)p_dst + size, ", version=");
  std::to_string(&__p, *((_DWORD *)a1 + 1));
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v13 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v13 = __p.__r_.__value_.__l.__size_;
  }
  int v14 = std::string::append(&__dst, (const std::string::value_type *)p_p, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v19.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v19.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  BOOL v16 = std::string::append(&v19, ")");
  *a2 = *v16;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v19.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_25:
      if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_26;
      }
      goto LABEL_30;
    }
  }
  else if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_25;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_26:
    if ((SHIBYTE(v20.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_31:
    operator delete(v20.__r_.__value_.__l.__data_);
    return;
  }
LABEL_30:
  operator delete(__dst.__r_.__value_.__l.__data_);
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_31;
  }
}

void sub_1001F726C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if ((a33 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001F7318(uint64_t a1)
{
  uint64_t v2 = *(id *)(a1 + 32);
  char v3 = std::promise<void>::promise(&v9);
  std::promise<void>::get_future(v3);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100204E70;
  block[3] = &unk_100460678;
  block[4] = &v6;
  block[5] = &v9;
  dispatch_sync(v2, block);
  std::future<void>::get(&v8);
  std::future<void>::~future(&v8);
  std::promise<void>::~promise(&v9);

  sub_100204EF4(a1 + 56);
  unint64_t v4 = *(std::__shared_weak_count **)(a1 + 48);
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);

    if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
      return a1;
    }
  }
  else
  {

    if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
      return a1;
    }
  }
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_1001F7478(void *a1)
{
  std::future<void>::~future((std::future<void> *)(v2 - 48));
  std::promise<void>::~promise((std::promise<void> *)(v2 - 40));

  sub_1000A6954(a1);
}

void sub_1001F74A4(void *a1)
{
  sub_1000A6954(a1);
}

void sub_1001F74BC(uint64_t a1)
{
  sub_1001F7318(a1);

  operator delete();
}

void sub_1001F74F4(char *__s@<X1>, uint64_t a2@<X0>, uint64_t a3@<X8>)
{
  size_t v6 = strlen(__s);
  if (v6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  unint64_t v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    uint64_t v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17) {
      uint64_t v9 = v6 | 7;
    }
    uint64_t v10 = v9 + 1;
    std::future<void> v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    unint64_t v12 = v10 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_8;
  }
  HIBYTE(v12) = v6;
  std::future<void> v8 = __dst;
  if (v6) {
LABEL_8:
  }
    memcpy(v8, __s, (size_t)v7);
  *((unsigned char *)v7 + (void)v8) = 0;
  sub_100296778(a3, (uint64_t)__dst, *(sqlite3 ***)(a2 + 40), *(NSObject **)(a2 + 32));
  if (SHIBYTE(v12) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_1001F75E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1001F7604(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

void *sub_1001F7694(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

void sub_1001F7724(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = &v5;
  uint64_t v5 = a2;
  id v2 = *(id *)(a1 + 32);
  operator new();
}

void sub_1001F78D4(_Unwind_Exception *a1)
{
  if (!atomic_fetch_add(v3, 0xFFFFFFFFFFFFFFFFLL)) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  sub_10008EEFC((uint64_t *)(v4 - 56));

  _Unwind_Resume(a1);
}

void sub_1001F793C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1001F7950(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001F7984(uint64_t a1)
{
  if (*(unsigned char *)a1)
  {
    if (*(unsigned char *)(a1 + 136)) {
      *(unsigned char *)(a1 + 136) = 0;
    }
    if (*(unsigned char *)(a1 + 120)) {
      *(unsigned char *)(a1 + 120) = 0;
    }
    if (*(unsigned char *)(a1 + 96)) {
      *(unsigned char *)(a1 + 96) = 0;
    }
    if (*(unsigned char *)(a1 + 72)) {
      *(unsigned char *)(a1 + 72) = 0;
    }
    uint64_t v2 = *(std::__shared_weak_count **)(a1 + 40);
    if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
        goto LABEL_14;
      }
    }
    else if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    {
LABEL_14:
      *(unsigned char *)a1 = 0;
      return a1;
    }
    operator delete(*(void **)(a1 + 8));
    goto LABEL_14;
  }
  return a1;
}

uint64_t sub_1001F7A48(uint64_t a1)
{
  return a1;
}

void sub_1001F7A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = a2;
  if (qword_10047BF08 == -1)
  {
    uint64_t v4 = qword_10047BF10;
    if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_4;
    }
  }
  else
  {
    dispatch_once(&qword_10047BF08, &stru_100460658);
    uint64_t v4 = qword_10047BF10;
    if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_DEBUG))
    {
LABEL_4:
      uint64_t v6 = a1;
      unint64_t v7 = &v8;
      id v5 = *(id *)(a1 + 32);
      operator new();
    }
  }
  int buf = 134217984;
  *(void *)buf_4 = a2;
  _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Requesting to remove resource %llu", (uint8_t *)&buf, 0xCu);
  goto LABEL_4;
}

void sub_1001F7CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  if (!atomic_fetch_add(v6, 0xFFFFFFFFFFFFFFFFLL)) {
    (*(void (**)(uint64_t))(*(void *)v5 + 16))(v5);
  }
  sub_10020A05C((uint64_t *)va);

  _Unwind_Resume(a1);
}

void sub_1001F7D64(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  sub_1001F7F08(a1, a2, (uint64_t)a3);
  if (*a3)
  {
    if (qword_10047BF08 == -1)
    {
      uint64_t v6 = qword_10047BF10;
      if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_DEBUG))
      {
LABEL_6:
        sub_1001F96FC(a1, (uint64_t)(a3 + 8));
        return;
      }
    }
    else
    {
      dispatch_once(&qword_10047BF08, &stru_100460658);
      uint64_t v6 = qword_10047BF10;
      if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_6;
      }
    }
    int v10 = 134217984;
    unint64_t v11 = a2;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEBUG, "Found resource %llu - removing", (uint8_t *)&v10, 0xCu);
    goto LABEL_6;
  }
  if (qword_10047BF08 == -1)
  {
    uint64_t v8 = qword_10047BF10;
    if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO)) {
      return;
    }
    goto LABEL_10;
  }
  dispatch_once(&qword_10047BF08, &stru_100460658);
  uint64_t v8 = qword_10047BF10;
  if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO))
  {
LABEL_10:
    int v10 = 134217984;
    unint64_t v11 = a2;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "WARNING: Attempt to remove local resource %llu failed because not found", (uint8_t *)&v10, 0xCu);
  }
}

void sub_1001F7EF4(_Unwind_Exception *a1)
{
  sub_1001FAD1C(v1);
  _Unwind_Resume(a1);
}

void sub_1001F7F08(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)a3 = 0;
  std::operator+<char>();
  uint64_t v6 = std::string::append(&__dst, " FROM ");
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v47.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  uint64_t v8 = std::string::append(&v47, "venues");
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v48.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  int v10 = std::string::append(&v48, " WHERE ");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v57.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v57.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047DF97 >= 0) {
    unint64_t v12 = (const std::string::value_type *)&qword_10047DF80;
  }
  else {
    unint64_t v12 = (const std::string::value_type *)qword_10047DF80;
  }
  if (byte_10047DF97 >= 0) {
    std::string::size_type v13 = byte_10047DF97;
  }
  else {
    std::string::size_type v13 = *(void *)&byte_10047DF88;
  }
  int v14 = std::string::append(&v57, v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  *(void *)&v58[16] = *((void *)&v14->__r_.__value_.__l + 2);
  *(_OWORD *)char v58 = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  BOOL v16 = std::string::append((std::string *)v58, " = ?;");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  std::string::size_type v46 = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  if ((v58[23] & 0x80000000) != 0)
  {
    operator delete(*(void **)v58);
    if ((SHIBYTE(v57.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_9:
      if ((SHIBYTE(v48.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_10;
      }
      goto LABEL_35;
    }
  }
  else if ((SHIBYTE(v57.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_9;
  }
  operator delete(v57.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v48.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_10:
    if ((SHIBYTE(v47.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_11;
    }
LABEL_36:
    operator delete(v47.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_12;
    }
LABEL_37:
    operator delete(__dst.__r_.__value_.__l.__data_);
    goto LABEL_12;
  }
LABEL_35:
  operator delete(v48.__r_.__value_.__l.__data_);
  if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_36;
  }
LABEL_11:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_37;
  }
LABEL_12:
  sub_100082248(*(sqlite3 ***)(a1 + 40), (uint64_t)__p, 0, (uint64_t)&pStmt);
  sub_10021C4AC(&pStmt, 1, a2);
  unint64_t v18 = pStmt;
  int v55 = pStmt;
  while (1)
  {
    int v19 = sqlite3_step(v18);
    int v20 = v19;
    if (v19 == 100)
    {
      sub_100217FD4(&v55, (uint64_t)v58);
      std::string v57 = *(std::string *)&v58[8];
      sub_100085B24(v58, (uint64_t)&v57);
      uint64_t v21 = *(void *)v58;
      if (*(unsigned char *)a3)
      {
        uint64_t v22 = *(void *)&v58[8];
        *(_OWORD *)char v58 = 0uLL;
        long long v23 = *(std::__shared_weak_count **)(a3 + 16);
        *(void *)(a3 + 8) = v21;
        *(void *)(a3 + 16) = v22;
        if (v23 && !atomic_fetch_add(&v23->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      else
      {
        uint64_t v24 = *(void *)&v58[8];
        *(void *)(a3 + 8) = *(void *)v58;
        *(void *)(a3 + 16) = v24;
        *(_OWORD *)char v58 = 0uLL;
        *(unsigned char *)a3 = 1;
      }
      unint64_t v25 = *(std::__shared_weak_count **)&v58[8];
      if (*(void *)&v58[8]
        && !atomic_fetch_add((atomic_ullong *volatile)(*(void *)&v58[8] + 8), 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v25->__on_zero_shared)(v25);
        std::__shared_weak_count::__release_weak(v25);
      }
      if (SHIBYTE(v57.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v57.__r_.__value_.__l.__data_);
      }
      goto LABEL_15;
    }
    if (v19 == 101) {
      break;
    }
    if (v19 == 19)
    {
      if (qword_10047BF08 == -1)
      {
        long long v27 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO)) {
          goto LABEL_40;
        }
      }
      else
      {
        dispatch_once(&qword_10047BF08, &stru_100460658);
        long long v27 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO))
        {
LABEL_40:
          *(_WORD *)char v58 = 0;
          _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_INFO, "Query constraint violation", v58, 2u);
        }
      }
      __cxa_allocate_exception(0x40uLL);
      v48.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
      *(_OWORD *)&v48.__r_.__value_.__r.__words[1] = xmmword_1003F6340;
      strcpy(v48.__r_.__value_.__l.__data_, "Constraint violation stepping through statement");
      std::runtime_error::runtime_error((std::runtime_error *)&v53, &v48);
      v53.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100460ED8;
      sub_10018E868((uint64_t)&v47);
      sub_10020E390((std::runtime_error *)&v53, (uint64_t)"auto db::resources::statement<1, 1>::run((lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:848:19) &&)::(anonymous class)::operator()() const [nCols = 1, nQueries = 1, ColumnNumberType = unsigned long]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 486, (uint64_t)&v47);
    }
    sub_100088644(v19, db);
    if (v20)
    {
      uint64_t v28 = __error();
      sub_100295674(*v28, &__dst);
      __cxa_allocate_exception(0x40uLL);
      *((unsigned char *)&v51.__r_.__value_.__s + 23) = 4;
      strcpy((char *)&v51, " w/ ");
      int v29 = std::string::insert(&v51, 0, "Failed sqlite3_step");
      long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
      v52.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v30;
      v29->__r_.__value_.__l.__size_ = 0;
      v29->__r_.__value_.__r.__words[2] = 0;
      v29->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        sub_1000559FC(&v50, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
      }
      else {
        std::string v50 = __dst;
      }
      if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v31 = &v50;
      }
      else {
        uint64_t v31 = (std::string *)v50.__r_.__value_.__r.__words[0];
      }
      if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v50.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v50.__r_.__value_.__l.__size_;
      }
      uint64_t v33 = std::string::append(&v52, (const std::string::value_type *)v31, size);
      long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
      v53.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v34;
      v33->__r_.__value_.__l.__size_ = 0;
      v33->__r_.__value_.__r.__words[2] = 0;
      v33->__r_.__value_.__r.__words[0] = 0;
      std::runtime_error::runtime_error(&v54, &v53);
      v54.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
      sub_10018E868((uint64_t)v49);
      sub_100204FC4(&v54, (uint64_t)"void db::resources::statement<1, 1>::run(Cb &&, ConstraintHandler &&) [nCols = 1, nQueries = 1, ColumnNumberType = unsigned long, Cb = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:848:19), ConstraintHandler = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h:485:43)]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 512, (uint64_t)v49);
    }
LABEL_15:
    unint64_t v18 = pStmt;
  }
  int v26 = sqlite3_reset(pStmt);
  sub_100088644(v26, db);
  if (v26)
  {
    uint64_t v35 = __error();
    sub_100295674(*v35, &__dst);
    __cxa_allocate_exception(0x40uLL);
    *((unsigned char *)&v51.__r_.__value_.__s + 23) = 4;
    strcpy((char *)&v51, " w/ ");
    unint64_t v36 = std::string::insert(&v51, 0, "Failed to execute query");
    long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
    v52.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v37;
    v36->__r_.__value_.__l.__size_ = 0;
    v36->__r_.__value_.__r.__words[2] = 0;
    v36->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&v50, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
    }
    else {
      std::string v50 = __dst;
    }
    if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v38 = &v50;
    }
    else {
      uint64_t v38 = (std::string *)v50.__r_.__value_.__r.__words[0];
    }
    if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v39 = HIBYTE(v50.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v39 = v50.__r_.__value_.__l.__size_;
    }
    unint64_t v40 = std::string::append(&v52, (const std::string::value_type *)v38, v39);
    long long v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
    v53.__r_.__value_.__r.__words[2] = v40->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v41;
    v40->__r_.__value_.__l.__size_ = 0;
    v40->__r_.__value_.__r.__words[2] = 0;
    v40->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v54, &v53);
    v54.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v49);
    sub_100204FC4(&v54, (uint64_t)"void db::resources::statement<1, 1>::run(Cb &&, ConstraintHandler &&) [nCols = 1, nQueries = 1, ColumnNumberType = unsigned long, Cb = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:848:19), ConstraintHandler = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h:485:43)]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 518, (uint64_t)v49);
  }
  sub_1000819D8((uint64_t)&pStmt);

  if (SHIBYTE(v46) < 0) {
    operator delete(__p[0]);
  }
}

void sub_1001F8FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,uint64_t a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,void *a56,uint64_t a57,uint64_t a58,void *a59,uint64_t a60,int a61,__int16 a62,char a63)
{
  std::runtime_error::~runtime_error(v75);
  if (a31 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
LABEL_3:
    if (a45 < 0) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
  operator delete(a19);
  if (a45 < 0)
  {
LABEL_4:
    operator delete(a40);
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  if ((a38 & 0x80000000) == 0)
  {
LABEL_5:
    *(void *)(v77 - 208) = v76;
    if (*(char *)(v77 - 177) < 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(a33);
  *(void *)(v77 - 208) = v76;
  if (*(char *)(v77 - 177) < 0)
  {
LABEL_6:
    operator delete(*(void **)(v77 - 200));
    if ((a51 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  if ((a51 & 0x80000000) == 0)
  {
LABEL_7:
    *(void *)(v77 - 160) = &off_100451DC0;
    uint64_t v79 = *(void *)(v77 - 152);
    if (!v79) {
      goto LABEL_17;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a46);
  *(void *)(v77 - 160) = &off_100451DC0;
  uint64_t v79 = *(void *)(v77 - 152);
  if (!v79) {
    goto LABEL_17;
  }
LABEL_15:
  if ((*(unsigned int (**)(uint64_t))(*(void *)v79 + 32))(v79)) {
    *(void *)(v77 - 152) = 0;
  }
LABEL_17:
  std::runtime_error::~runtime_error((std::runtime_error *)(v77 - 176));
  if (a56)
  {
    a57 = (uint64_t)a56;
    operator delete(a56);
  }
  std::runtime_error::~runtime_error((std::runtime_error *)(v77 - 256));
  if (a74 < 0) {
    operator delete(a73.__vftable);
  }
  if (a64 < 0) {
    operator delete(a59);
  }
  if (a72 < 0) {
    operator delete(a71);
  }
  if (a70 < 0) {
    operator delete(a65);
  }
  __cxa_free_exception(v75);
  if (*(char *)(v77 - 209) < 0) {
    operator delete(*(void **)(v77 - 232));
  }
  sub_1001F702C((uint64_t)&a10);
  if (a18 < 0) {
    operator delete(a13);
  }
  sub_1001FAD1C(v74);
  _Unwind_Resume(a1);
}

void sub_1001F96FC(uint64_t a1, uint64_t a2)
{
  *((unsigned char *)&v38.__r_.__value_.__s + 23) = 12;
  strcpy((char *)&v38, "DELETE FROM ");
  uint64_t v4 = std::string::append(&v38, "venues");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v39.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  uint64_t v6 = std::string::append(&v39, " WHERE ");
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v47.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047DF67 >= 0) {
    uint64_t v8 = (const std::string::value_type *)&qword_10047DF50;
  }
  else {
    uint64_t v8 = (const std::string::value_type *)qword_10047DF50;
  }
  if (byte_10047DF67 >= 0) {
    std::string::size_type v9 = byte_10047DF67;
  }
  else {
    std::string::size_type v9 = *(void *)&byte_10047DF58;
  }
  int v10 = std::string::append(&v47, v8, v9);
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v48.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  unint64_t v12 = std::string::append(&v48, " = ?;");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  std::string::size_type v37 = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v48.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v47.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_9:
      if ((SHIBYTE(v39.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_10;
      }
LABEL_24:
      operator delete(v39.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v38.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_11;
      }
LABEL_25:
      operator delete(v38.__r_.__value_.__l.__data_);
      goto LABEL_11;
    }
  }
  else if ((SHIBYTE(v47.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_9;
  }
  operator delete(v47.__r_.__value_.__l.__data_);
  if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_24;
  }
LABEL_10:
  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_25;
  }
LABEL_11:
  sub_1001FAFC0(*(sqlite3 ***)(a1 + 40), (uint64_t)__p, 0, (uint64_t)&pStmt);
  int v14 = (uint64_t *)sub_100085D38(a2);
  sub_10021BE24(&pStmt, 1, v14);
  while (1)
  {
    do
    {
      int v15 = sqlite3_step(pStmt);
      int v16 = v15;
    }
    while (v15 == 100);
    if (v15 == 101) {
      break;
    }
    if (v15 == 19)
    {
      if (qword_10047BF08 == -1)
      {
        uint64_t v21 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO)) {
          goto LABEL_28;
        }
      }
      else
      {
        dispatch_once(&qword_10047BF08, &stru_100460658);
        uint64_t v21 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO))
        {
LABEL_28:
          LOWORD(v48.__r_.__value_.__l.__data_) = 0;
          _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_INFO, "Query constraint violation", (uint8_t *)&v48, 2u);
        }
      }
      __cxa_allocate_exception(0x40uLL);
      v39.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
      *(_OWORD *)&v39.__r_.__value_.__r.__words[1] = xmmword_1003F6340;
      strcpy(v39.__r_.__value_.__l.__data_, "Constraint violation stepping through statement");
      std::runtime_error::runtime_error((std::runtime_error *)&v44, &v39);
      v44.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100460ED8;
      sub_10018E868((uint64_t)&v38);
      sub_10020E390((std::runtime_error *)&v44, (uint64_t)"auto db::resources::statement<0, 1>::run((lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:824:19) &&)::(anonymous class)::operator()() const [nCols = 0, nQueries = 1, ColumnNumberType = unsigned long]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 486, (uint64_t)&v38);
    }
    sub_100088644(v15, db);
    if (v16)
    {
      long long v17 = __error();
      sub_100295674(*v17, &__dst);
      __cxa_allocate_exception(0x40uLL);
      *((unsigned char *)&v42.__r_.__value_.__s + 23) = 4;
      strcpy((char *)&v42, " w/ ");
      unint64_t v18 = std::string::insert(&v42, 0, "Failed sqlite3_step");
      long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
      v43.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v19;
      v18->__r_.__value_.__l.__size_ = 0;
      v18->__r_.__value_.__r.__words[2] = 0;
      v18->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        sub_1000559FC(&v41, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
      }
      else {
        std::string v41 = __dst;
      }
      if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v22 = &v41;
      }
      else {
        uint64_t v22 = (std::string *)v41.__r_.__value_.__r.__words[0];
      }
      if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v41.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v41.__r_.__value_.__l.__size_;
      }
      uint64_t v24 = std::string::append(&v43, (const std::string::value_type *)v22, size);
      long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
      v44.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v25;
      v24->__r_.__value_.__l.__size_ = 0;
      v24->__r_.__value_.__r.__words[2] = 0;
      v24->__r_.__value_.__r.__words[0] = 0;
      std::runtime_error::runtime_error(&v45, &v44);
      v45.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
      sub_10018E868((uint64_t)v40);
      sub_100204FC4(&v45, (uint64_t)"void db::resources::statement<0, 1>::run(Cb &&, ConstraintHandler &&) [nCols = 0, nQueries = 1, ColumnNumberType = unsigned long, Cb = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:824:19), ConstraintHandler = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h:485:43)]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 512, (uint64_t)v40);
    }
  }
  int v20 = sqlite3_reset(pStmt);
  sub_100088644(v20, db);
  if (v20)
  {
    int v26 = __error();
    sub_100295674(*v26, &__dst);
    __cxa_allocate_exception(0x40uLL);
    *((unsigned char *)&v42.__r_.__value_.__s + 23) = 4;
    strcpy((char *)&v42, " w/ ");
    long long v27 = std::string::insert(&v42, 0, "Failed to execute query");
    long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
    v43.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v28;
    v27->__r_.__value_.__l.__size_ = 0;
    v27->__r_.__value_.__r.__words[2] = 0;
    v27->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&v41, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
    }
    else {
      std::string v41 = __dst;
    }
    if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v29 = &v41;
    }
    else {
      int v29 = (std::string *)v41.__r_.__value_.__r.__words[0];
    }
    if ((v41.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v30 = HIBYTE(v41.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v30 = v41.__r_.__value_.__l.__size_;
    }
    uint64_t v31 = std::string::append(&v43, (const std::string::value_type *)v29, v30);
    long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
    v44.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v44.__r_.__value_.__l.__data_ = v32;
    v31->__r_.__value_.__l.__size_ = 0;
    v31->__r_.__value_.__r.__words[2] = 0;
    v31->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v45, &v44);
    v45.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v40);
    sub_100204FC4(&v45, (uint64_t)"void db::resources::statement<0, 1>::run(Cb &&, ConstraintHandler &&) [nCols = 0, nQueries = 1, ColumnNumberType = unsigned long, Cb = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:824:19), ConstraintHandler = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h:485:43)]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 518, (uint64_t)v40);
  }
  sub_10021BC3C((uint64_t)&pStmt);

  if (SHIBYTE(v37) < 0) {
    operator delete(__p[0]);
  }
}

void sub_1001FA66C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,void *a56,uint64_t a57,uint64_t a58,void *a59,uint64_t a60,int a61,__int16 a62,char a63)
{
  std::runtime_error::~runtime_error(v72);
  if (a32 < 0)
  {
    operator delete(__p);
    if ((a25 & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else if ((a25 & 0x80000000) == 0)
  {
LABEL_3:
    if (a45 < 0) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
  operator delete(a20);
  if (a45 < 0)
  {
LABEL_4:
    operator delete(a40);
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  if ((a38 & 0x80000000) == 0)
  {
LABEL_5:
    *(void *)(v74 - 176) = v73;
    if (*(char *)(v74 - 145) < 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(a33);
  *(void *)(v74 - 176) = v73;
  if (*(char *)(v74 - 145) < 0)
  {
LABEL_6:
    operator delete(*(void **)(v74 - 168));
    if ((a51 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  if ((a51 & 0x80000000) == 0)
  {
LABEL_7:
    *(void *)(v74 - 128) = &off_100451DC0;
    uint64_t v76 = *(void *)(v74 - 120);
    if (!v76) {
      goto LABEL_17;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a46);
  *(void *)(v74 - 128) = &off_100451DC0;
  uint64_t v76 = *(void *)(v74 - 120);
  if (!v76) {
    goto LABEL_17;
  }
LABEL_15:
  if ((*(unsigned int (**)(uint64_t))(*(void *)v76 + 32))(v76)) {
    *(void *)(v74 - 120) = 0;
  }
LABEL_17:
  std::runtime_error::~runtime_error((std::runtime_error *)(v74 - 144));
  if (a56)
  {
    a57 = (uint64_t)a56;
    operator delete(a56);
  }
  std::runtime_error::~runtime_error((std::runtime_error *)(v74 - 216));
  if (*(char *)(v74 - 217) < 0)
  {
    operator delete(*(void **)(v74 - 240));
    if (a64 < 0)
    {
LABEL_21:
      operator delete(a59);
      if ((a72 & 0x80000000) == 0) {
        goto LABEL_22;
      }
      goto LABEL_26;
    }
  }
  else if (a64 < 0)
  {
    goto LABEL_21;
  }
  if ((a72 & 0x80000000) == 0)
  {
LABEL_22:
    if ((a70 & 0x80000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_23;
  }
LABEL_26:
  operator delete(a71);
  if ((a70 & 0x80000000) == 0)
  {
LABEL_27:
    __cxa_free_exception(v72);
    if (*(char *)(v74 - 177) < 0) {
      operator delete(*(void **)(v74 - 200));
    }
    sub_1001FB58C((uint64_t)&a10);
    if (a18 < 0) {
      operator delete(a13);
    }
    _Unwind_Resume(a1);
  }
LABEL_23:
  operator delete(a65);
  goto LABEL_27;
}

uint64_t sub_1001FAD1C(uint64_t a1)
{
  if (*(unsigned char *)a1)
  {
    uint64_t v2 = *(std::__shared_weak_count **)(a1 + 16);
    if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
    *(unsigned char *)a1 = 0;
  }
  return a1;
}

void sub_1001FAD94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = a2;
  id v2 = *(id *)(a1 + 32);
  operator new();
}

void sub_1001FAF44(_Unwind_Exception *a1)
{
  if (!atomic_fetch_add(v3, 0xFFFFFFFFFFFFFFFFLL)) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  sub_100209448((uint64_t *)(v4 - 56));

  _Unwind_Resume(a1);
}

void sub_1001FAFAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001FAFC0(sqlite3 **a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a3;
  std::string::size_type v9 = v8;
  if (v8) {
    os_activity_scope_enter(v8, &state);
  }
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  objc_storeStrong((id *)(a4 + 16), a3);
  int v10 = *(char *)(a2 + 23);
  if (v10 >= 0) {
    long long v11 = (const char *)a2;
  }
  else {
    long long v11 = *(const char **)a2;
  }
  if (v10 >= 0) {
    int v12 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    int v12 = *(_DWORD *)(a2 + 8);
  }
  int v13 = sqlite3_prepare_v2(*a1, v11, v12, (sqlite3_stmt **)a4, 0);
  sub_100088644(v13, *a1);
  if (v13)
  {
    int v14 = __error();
    sub_100295674(*v14, &v27);
    __cxa_allocate_exception(0x40uLL);
    sub_1000AE4B0(&v23, " w/ ");
    int v15 = std::string::insert(&v23, 0, "Failed to prepare query");
    long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    v24.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v16;
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    v15->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&__dst, v27.__r_.__value_.__l.__data_, v27.__r_.__value_.__l.__size_);
    }
    else {
      std::string __dst = v27;
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_dst = &__dst;
    }
    else {
      p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __dst.__r_.__value_.__l.__size_;
    }
    long long v19 = std::string::append(&v24, (const std::string::value_type *)p_dst, size);
    long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v25.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v26, &v25);
    v26.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v21);
    sub_100204FC4(&v26, (uint64_t)"statement<nCols, nQueries, ColumnNumberType> db::resources::handle::prepare(const std::string &, __strong os_activity_t) const [nCols = 0UL, nQueries = 1UL, ColumnNumberType = unsigned long]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 633, (uint64_t)v21);
  }
  *(void *)(a4 + 8) = *a1;
  if (v9) {
    os_activity_scope_leave(&state);
  }
}

void sub_1001FB310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,void *a62,uint64_t a63)
{
  if (a22 < 0)
  {
    operator delete(__p);
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a35 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a10);
  if ((a35 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a28 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a30);
  if ((a28 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a42 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a23);
  if ((a42 & 0x80000000) == 0)
  {
LABEL_6:
    sub_100205504((std::runtime_error *)(v71 - 184));
    uint64_t v73 = a47;
    if (!a47)
    {
LABEL_14:
      std::runtime_error::~runtime_error((std::runtime_error *)(v71 - 200));
      if (*(char *)(v71 - 201) < 0)
      {
        operator delete(*(void **)(v71 - 224));
        if ((a55 & 0x80000000) == 0)
        {
LABEL_16:
          if ((a67 & 0x80000000) == 0) {
            goto LABEL_17;
          }
          goto LABEL_22;
        }
      }
      else if ((a55 & 0x80000000) == 0)
      {
        goto LABEL_16;
      }
      operator delete(a50);
      if ((a67 & 0x80000000) == 0)
      {
LABEL_17:
        if (a61 < 0) {
          goto LABEL_18;
        }
        goto LABEL_23;
      }
LABEL_22:
      operator delete(a62);
      if (a61 < 0)
      {
LABEL_18:
        operator delete(a56);
        if ((v70 & 1) == 0)
        {
LABEL_25:
          if (*(char *)(v71 - 97) < 0)
          {
            operator delete(*(void **)(v71 - 120));
            sub_1001FB58C(v68);

            _Unwind_Resume(a1);
          }
          sub_1001FB58C(v68);

          _Unwind_Resume(a1);
        }
LABEL_24:
        __cxa_free_exception(v69);
        goto LABEL_25;
      }
LABEL_23:
      if (!v70) {
        goto LABEL_25;
      }
      goto LABEL_24;
    }
LABEL_13:
    operator delete(v73);
    goto LABEL_14;
  }
LABEL_12:
  operator delete(a37);
  sub_100205504((std::runtime_error *)(v71 - 184));
  uint64_t v73 = a47;
  if (!a47) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

uint64_t sub_1001FB58C(uint64_t a1)
{
  return a1;
}

void sub_1001FB5C0(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001FB658;
  block[3] = &unk_1004604E0;
  block[4] = a1;
  dispatch_block_t v2 = dispatch_block_create_with_qos_class(DISPATCH_BLOCK_ENFORCE_QOS_CLASS, QOS_CLASS_BACKGROUND, 0, block);
  dispatch_sync(*(dispatch_queue_t *)(a1 + 32), v2);
}

void sub_1001FB658(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  sub_10008D100(*(sqlite3 ***)(v1 + 40), "PRAGMA incremental_vacuum;", "Failed to execute incremental vacuum");
  dispatch_block_t v2 = *(sqlite3 ***)(v1 + 40);

  sub_100296084(v2);
}

void sub_1001FB6A4(uint64_t a1)
{
  uint64_t v2 = a1;
  id v1 = *(id *)(a1 + 32);
  operator new();
}

void sub_1001FB84C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  if (!atomic_fetch_add(v10, 0xFFFFFFFFFFFFFFFFLL)) {
    (*(void (**)(uint64_t))(*(void *)v9 + 16))(v9);
  }
  sub_10020A88C((uint64_t *)va);

  _Unwind_Resume(a1);
}

void sub_1001FB8B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1001FB8C8(uint64_t a1@<X0>, int64x2_t *a2@<X8>)
{
  a2->i64[0] = 0;
  a2->i64[1] = 0;
  a2[1].i64[0] = 0;
  std::operator+<char>();
  uint64_t v6 = std::string::append(&v118, ", ");
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v119.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v119.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047DF7F >= 0) {
    uint64_t v8 = (const std::string::value_type *)&qword_10047DF68;
  }
  else {
    uint64_t v8 = (const std::string::value_type *)qword_10047DF68;
  }
  if (byte_10047DF7F >= 0) {
    std::string::size_type v9 = byte_10047DF7F;
  }
  else {
    std::string::size_type v9 = *(void *)&byte_10047DF70;
  }
  int v10 = std::string::append(&v119, v8, v9);
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v120.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v120.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  int v12 = std::string::append(&v120, ", ");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v121.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v121.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047DF67 >= 0) {
    int v14 = (const std::string::value_type *)&qword_10047DF50;
  }
  else {
    int v14 = (const std::string::value_type *)qword_10047DF50;
  }
  if (byte_10047DF67 >= 0) {
    std::string::size_type v15 = byte_10047DF67;
  }
  else {
    std::string::size_type v15 = *(void *)&byte_10047DF58;
  }
  long long v16 = std::string::append(&v121, v14, v15);
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v122.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v122.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  unint64_t v18 = std::string::append(&v122, ", ");
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v123.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v123.__r_.__value_.__l.__data_ = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047E00F >= 0) {
    long long v20 = (const std::string::value_type *)&qword_10047DFF8;
  }
  else {
    long long v20 = (const std::string::value_type *)qword_10047DFF8;
  }
  if (byte_10047E00F >= 0) {
    std::string::size_type v21 = byte_10047E00F;
  }
  else {
    std::string::size_type v21 = unk_10047E000;
  }
  uint64_t v22 = std::string::append(&v123, v20, v21);
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v124.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v124.__r_.__value_.__l.__data_ = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  std::string v24 = std::string::append(&v124, ", ");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  v127.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v127.__r_.__value_.__l.__data_ = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047DFC7 >= 0) {
    std::runtime_error v26 = (const std::string::value_type *)&xmmword_10047DFB0;
  }
  else {
    std::runtime_error v26 = (const std::string::value_type *)xmmword_10047DFB0;
  }
  if (byte_10047DFC7 >= 0) {
    std::string::size_type v27 = byte_10047DFC7;
  }
  else {
    std::string::size_type v27 = *((void *)&xmmword_10047DFB0 + 1);
  }
  long long v28 = std::string::append(&v127, v26, v27);
  long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
  v128.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v128.__r_.__value_.__l.__data_ = v29;
  v28->__r_.__value_.__l.__size_ = 0;
  v28->__r_.__value_.__r.__words[2] = 0;
  v28->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v30 = std::string::append(&v128, ", ");
  long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
  v132.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v132.__r_.__value_.__l.__data_ = v31;
  v30->__r_.__value_.__l.__size_ = 0;
  v30->__r_.__value_.__r.__words[2] = 0;
  v30->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047E027 >= 0) {
    long long v32 = (const std::string::value_type *)&xmmword_10047E010;
  }
  else {
    long long v32 = (const std::string::value_type *)xmmword_10047E010;
  }
  if (byte_10047E027 >= 0) {
    std::string::size_type v33 = byte_10047E027;
  }
  else {
    std::string::size_type v33 = *((void *)&xmmword_10047E010 + 1);
  }
  long long v34 = std::string::append(&v132, v32, v33);
  long long v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
  v133.__r_.__value_.__r.__words[2] = v34->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v133.__r_.__value_.__l.__data_ = v35;
  v34->__r_.__value_.__l.__size_ = 0;
  v34->__r_.__value_.__r.__words[2] = 0;
  v34->__r_.__value_.__r.__words[0] = 0;
  unint64_t v36 = std::string::append(&v133, ", ");
  long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
  v134.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v134.__r_.__value_.__l.__data_ = v37;
  v36->__r_.__value_.__l.__size_ = 0;
  v36->__r_.__value_.__r.__words[2] = 0;
  v36->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047DFDF >= 0) {
    std::string v38 = (const std::string::value_type *)&qword_10047DFC8;
  }
  else {
    std::string v38 = (const std::string::value_type *)qword_10047DFC8;
  }
  if (byte_10047DFDF >= 0) {
    std::string::size_type v39 = byte_10047DFDF;
  }
  else {
    std::string::size_type v39 = *(void *)&dword_10047DFD0;
  }
  unint64_t v40 = std::string::append(&v134, v38, v39);
  long long v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
  v137.__r_.__value_.__r.__words[2] = v40->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v137.__r_.__value_.__l.__data_ = v41;
  v40->__r_.__value_.__l.__size_ = 0;
  v40->__r_.__value_.__r.__words[2] = 0;
  v40->__r_.__value_.__r.__words[0] = 0;
  std::string v42 = std::string::append(&v137, ", ");
  long long v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
  v138.__r_.__value_.__r.__words[2] = v42->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v138.__r_.__value_.__l.__data_ = v43;
  v42->__r_.__value_.__l.__size_ = 0;
  v42->__r_.__value_.__r.__words[2] = 0;
  v42->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047DFF7 >= 0) {
    std::string v44 = (const std::string::value_type *)&qword_10047DFE0;
  }
  else {
    std::string v44 = (const std::string::value_type *)qword_10047DFE0;
  }
  if (byte_10047DFF7 >= 0) {
    std::string::size_type v45 = byte_10047DFF7;
  }
  else {
    std::string::size_type v45 = qword_10047DFE8;
  }
  std::string::size_type v46 = std::string::append(&v138, v44, v45);
  long long v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
  v139.__r_.__value_.__r.__words[2] = v46->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v139.__r_.__value_.__l.__data_ = v47;
  v46->__r_.__value_.__l.__size_ = 0;
  v46->__r_.__value_.__r.__words[2] = 0;
  v46->__r_.__value_.__r.__words[0] = 0;
  std::string v48 = std::string::append(&v139, ", ");
  long long v49 = *(_OWORD *)&v48->__r_.__value_.__l.__data_;
  __dst.__r_.__value_.__r.__words[2] = v48->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v49;
  v48->__r_.__value_.__l.__size_ = 0;
  v48->__r_.__value_.__r.__words[2] = 0;
  v48->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047E03F >= 0) {
    std::string v50 = (const std::string::value_type *)&qword_10047E028;
  }
  else {
    std::string v50 = (const std::string::value_type *)qword_10047E028;
  }
  if (byte_10047E03F >= 0) {
    std::string::size_type v51 = byte_10047E03F;
  }
  else {
    std::string::size_type v51 = qword_10047E030;
  }
  std::string v52 = std::string::append(&__dst, v50, v51);
  long long v53 = *(_OWORD *)&v52->__r_.__value_.__l.__data_;
  v130.__r_.__value_.__r.__words[2] = v52->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v130.__r_.__value_.__l.__data_ = v53;
  v52->__r_.__value_.__l.__size_ = 0;
  v52->__r_.__value_.__r.__words[2] = 0;
  v52->__r_.__value_.__r.__words[0] = 0;
  std::runtime_error v54 = std::string::append(&v130, ", ");
  long long v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
  v131.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v131.__r_.__value_.__l.__data_ = v55;
  v54->__r_.__value_.__l.__size_ = 0;
  v54->__r_.__value_.__r.__words[2] = 0;
  v54->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047DFAF >= 0) {
    unint64_t v56 = (const std::string::value_type *)&qword_10047DF98;
  }
  else {
    unint64_t v56 = (const std::string::value_type *)qword_10047DF98;
  }
  if (byte_10047DFAF >= 0) {
    std::string::size_type v57 = byte_10047DFAF;
  }
  else {
    std::string::size_type v57 = unk_10047DFA0;
  }
  char v58 = std::string::append(&v131, v56, v57);
  long long v59 = *(_OWORD *)&v58->__r_.__value_.__l.__data_;
  v135.__r_.__value_.__r.__words[2] = v58->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v135.__r_.__value_.__l.__data_ = v59;
  v58->__r_.__value_.__l.__size_ = 0;
  v58->__r_.__value_.__r.__words[2] = 0;
  v58->__r_.__value_.__r.__words[0] = 0;
  unsigned int v60 = std::string::append(&v135, " FROM ");
  long long v61 = *(_OWORD *)&v60->__r_.__value_.__l.__data_;
  v140.__r_.__value_.__r.__words[2] = v60->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v140.__r_.__value_.__l.__data_ = v61;
  v60->__r_.__value_.__l.__size_ = 0;
  v60->__r_.__value_.__r.__words[2] = 0;
  v60->__r_.__value_.__r.__words[0] = 0;
  uint64_t v62 = std::string::append(&v140, "venues");
  long long v63 = *(_OWORD *)&v62->__r_.__value_.__l.__data_;
  std::string::size_type v126 = v62->__r_.__value_.__r.__words[2];
  long long __p = v63;
  v62->__r_.__value_.__l.__size_ = 0;
  v62->__r_.__value_.__r.__words[2] = 0;
  v62->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v140.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v135.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_57:
      if ((SHIBYTE(v131.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_58;
      }
      goto LABEL_192;
    }
  }
  else if ((SHIBYTE(v135.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_57;
  }
  operator delete(v135.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v131.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_58:
    if ((SHIBYTE(v130.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_193;
  }
LABEL_192:
  operator delete(v131.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v130.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_59:
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_194;
  }
LABEL_193:
  operator delete(v130.__r_.__value_.__l.__data_);
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_60:
    if ((SHIBYTE(v139.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_195;
  }
LABEL_194:
  operator delete(__dst.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v139.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_61:
    if ((SHIBYTE(v138.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_196;
  }
LABEL_195:
  operator delete(v139.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v138.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_62:
    if ((SHIBYTE(v137.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_197;
  }
LABEL_196:
  operator delete(v138.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v137.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_63:
    if ((SHIBYTE(v134.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_198;
  }
LABEL_197:
  operator delete(v137.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v134.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_64:
    if ((SHIBYTE(v133.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_199;
  }
LABEL_198:
  operator delete(v134.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v133.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_65:
    if ((SHIBYTE(v132.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_200;
  }
LABEL_199:
  operator delete(v133.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v132.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_66:
    if ((SHIBYTE(v128.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_201;
  }
LABEL_200:
  operator delete(v132.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v128.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_67:
    if ((SHIBYTE(v127.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_202;
  }
LABEL_201:
  operator delete(v128.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v127.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_68:
    if ((SHIBYTE(v124.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_203;
  }
LABEL_202:
  operator delete(v127.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v124.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_69:
    if ((SHIBYTE(v123.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_204;
  }
LABEL_203:
  operator delete(v124.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v123.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_70:
    if ((SHIBYTE(v122.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_205;
  }
LABEL_204:
  operator delete(v123.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v122.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_71:
    if ((SHIBYTE(v121.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_206;
  }
LABEL_205:
  operator delete(v122.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v121.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_72:
    if ((SHIBYTE(v120.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_207;
  }
LABEL_206:
  operator delete(v121.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v120.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_73:
    if ((SHIBYTE(v119.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_74;
    }
LABEL_208:
    operator delete(v119.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v118.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_75;
    }
LABEL_209:
    operator delete(v118.__r_.__value_.__l.__data_);
    goto LABEL_75;
  }
LABEL_207:
  operator delete(v120.__r_.__value_.__l.__data_);
  if (SHIBYTE(v119.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_208;
  }
LABEL_74:
  if (SHIBYTE(v118.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_209;
  }
LABEL_75:
  sub_1001FE094(*(sqlite3 ***)(a1 + 40), (uint64_t)&__p, 0, (uint64_t)&v124);
  int v64 = 0;
  int v65 = 0;
  int v66 = (sqlite3_stmt *)v124.__r_.__value_.__r.__words[0];
  v120.__r_.__value_.__r.__words[0] = v124.__r_.__value_.__r.__words[0];
  while (1)
  {
    int v67 = sqlite3_step(v66);
    int v68 = v67;
    if (v67 == 100)
    {
      if (sqlite3_column_type((sqlite3_stmt *)v120.__r_.__value_.__l.__data_, 4) == 5)
      {
        char v69 = 0;
      }
      else
      {
        uint64_t v2 = (std::__shared_weak_count *)sqlite3_column_int64((sqlite3_stmt *)v120.__r_.__value_.__l.__data_, 4);
        char v69 = 1;
      }
      if (sqlite3_column_type((sqlite3_stmt *)v120.__r_.__value_.__l.__data_, 3) == 5)
      {
        char v71 = 0;
      }
      else
      {
        sqlite3_column_type((sqlite3_stmt *)v120.__r_.__value_.__l.__data_, 3);
        time_t v72 = sqlite3_column_int64((sqlite3_stmt *)v120.__r_.__value_.__l.__data_, 3);
        std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep = std::chrono::system_clock::from_time_t(v72).__d_.__rep_;
        char v71 = 1;
      }
      sub_10021CE70(&v131, v69, (uint64_t)v2, v71, rep);
      if (sqlite3_column_type((sqlite3_stmt *)v120.__r_.__value_.__l.__data_, 6) == 5)
      {
        char v73 = 0;
      }
      else
      {
        uint64_t v2 = (std::__shared_weak_count *)sqlite3_column_int64((sqlite3_stmt *)v120.__r_.__value_.__l.__data_, 6);
        char v73 = 1;
      }
      if (sqlite3_column_type((sqlite3_stmt *)v120.__r_.__value_.__l.__data_, 5) == 5)
      {
        char v75 = 0;
      }
      else
      {
        sqlite3_column_type((sqlite3_stmt *)v120.__r_.__value_.__l.__data_, 5);
        time_t v76 = sqlite3_column_int64((sqlite3_stmt *)v120.__r_.__value_.__l.__data_, 5);
        std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v74 = std::chrono::system_clock::from_time_t(v76).__d_.__rep_;
        char v75 = 1;
      }
      sub_10021CE70(&v130, v73, (uint64_t)v2, v75, v74);
      int v77 = sqlite3_column_type((sqlite3_stmt *)v120.__r_.__value_.__l.__data_, 7);
      if (v77 != 5)
      {
        sqlite3_column_type((sqlite3_stmt *)v120.__r_.__value_.__l.__data_, 7);
        time_t v78 = sqlite3_column_int64((sqlite3_stmt *)v120.__r_.__value_.__l.__data_, 7);
        std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v3 = std::chrono::system_clock::from_time_t(v78).__d_.__rep_;
      }
      int v79 = sqlite3_column_type((sqlite3_stmt *)v120.__r_.__value_.__l.__data_, 8);
      if (v79 != 5)
      {
        sqlite3_column_type((sqlite3_stmt *)v120.__r_.__value_.__l.__data_, 8);
        time_t v80 = sqlite3_column_int64((sqlite3_stmt *)v120.__r_.__value_.__l.__data_, 8);
        std::chrono::duration<long long, std::ratio<1, 1000000>>::rep v4 = std::chrono::system_clock::from_time_t(v80).__d_.__rep_;
      }
      if (sqlite3_column_type((sqlite3_stmt *)v120.__r_.__value_.__l.__data_, 9) == 5) {
        int v81 = 0;
      }
      else {
        int v81 = sqlite3_column_int((sqlite3_stmt *)v120.__r_.__value_.__l.__data_, 9);
      }
      if (sqlite3_column_type((sqlite3_stmt *)v120.__r_.__value_.__l.__data_, 0) != 5) {
        uint64_t v2 = (std::__shared_weak_count *)sqlite3_column_int64((sqlite3_stmt *)v120.__r_.__value_.__l.__data_, 0);
      }
      sub_10008630C((sqlite3_stmt **)&v120, (uint64_t)&v135);
      *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = *(_OWORD *)&v135.__r_.__value_.__r.__words[1];
      __dst.__r_.__value_.__r.__words[2] = v136[0];
      sub_10021D000((sqlite3_stmt **)&v120, (uint64_t)&v135);
      *(_OWORD *)&v139.__r_.__value_.__l.__data_ = *(_OWORD *)&v135.__r_.__value_.__r.__words[1];
      v139.__r_.__value_.__r.__words[2] = v136[0];
      sub_100085B24(&v134, (uint64_t)&v139);
      if (v81 == 1)
      {
        int v83 = 0;
        v138.__r_.__value_.__s.__data_[0] = 0;
        if (!v131.__r_.__value_.__s.__data_[0])
        {
LABEL_112:
          v137.__r_.__value_.__s.__data_[0] = 0;
          if (v130.__r_.__value_.__s.__data_[0])
          {
            *(_OWORD *)&v137.__r_.__value_.__r.__words[1] = *(_OWORD *)&v130.__r_.__value_.__r.__words[1];
            v137.__r_.__value_.__s.__data_[0] = 1;
          }
          v133.__r_.__value_.__s.__data_[0] = 0;
          if (v77 != 5)
          {
            v133.__r_.__value_.__l.__size_ = v3;
            v133.__r_.__value_.__s.__data_[0] = 1;
          }
          v132.__r_.__value_.__s.__data_[0] = 0;
          if (v79 != 5)
          {
            v132.__r_.__value_.__l.__size_ = v4;
            v132.__r_.__value_.__s.__data_[0] = 1;
          }
          sub_1002C0BA8((uint64_t)&v140, (uint64_t)v2, (uint64_t *)&__dst, &v134, v83, (unsigned __int8 *)&v138, (unsigned __int8 *)&v137, (unsigned __int8 *)&v133, (unsigned __int8 *)&v132);
          if (v132.__r_.__value_.__s.__data_[0]) {
            v132.__r_.__value_.__s.__data_[0] = 0;
          }
          if (v133.__r_.__value_.__s.__data_[0]) {
            v133.__r_.__value_.__s.__data_[0] = 0;
          }
          if (v137.__r_.__value_.__s.__data_[0]) {
            v137.__r_.__value_.__s.__data_[0] = 0;
          }
          if (v138.__r_.__value_.__s.__data_[0]) {
            v138.__r_.__value_.__s.__data_[0] = 0;
          }
          std::string::size_type size = (std::__shared_weak_count *)v134.__r_.__value_.__l.__size_;
          if (v134.__r_.__value_.__l.__size_
            && !atomic_fetch_add((atomic_ullong *volatile)(v134.__r_.__value_.__l.__size_ + 8), 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
            std::__shared_weak_count::__release_weak(size);
            if ((SHIBYTE(v139.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            {
LABEL_129:
              if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                goto LABEL_130;
              }
              goto LABEL_137;
            }
          }
          else if ((SHIBYTE(v139.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
            goto LABEL_129;
          }
          operator delete(v139.__r_.__value_.__l.__data_);
          if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_130:
            unsigned int v85 = a2;
            unint64_t v86 = a2->u64[1];
            if (v86 < a2[1].i64[0])
            {
LABEL_131:
              if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0)
              {
                sub_1000559FC((unsigned char *)v86, v140.__r_.__value_.__l.__data_, v140.__r_.__value_.__l.__size_);
              }
              else
              {
                long long v87 = *(_OWORD *)&v140.__r_.__value_.__l.__data_;
                *(void *)(v86 + 16) = *((void *)&v140.__r_.__value_.__l + 2);
                *(_OWORD *)unint64_t v86 = v87;
              }
              *(void *)(v86 + 24) = v141;
              uint64_t v90 = v142;
              *(void *)(v86 + 32) = v142;
              if (v90) {
                atomic_fetch_add_explicit(&v90->__shared_owners_, 1uLL, memory_order_relaxed);
              }
              long long v91 = v143;
              *(_DWORD *)(v86 + 56) = v144;
              *(_OWORD *)(v86 + 40) = v91;
              *(unsigned char *)(v86 + 64) = 0;
              if (v145)
              {
                *(_OWORD *)(v86 + 72) = v146;
                *(unsigned char *)(v86 + 64) = 1;
              }
              *(unsigned char *)(v86 + 88) = 0;
              if (v147)
              {
                *(_OWORD *)(v86 + 96) = v148;
                *(unsigned char *)(v86 + 88) = 1;
              }
              *(unsigned char *)(v86 + 112) = 0;
              if (v149)
              {
                *(void *)(v86 + 120) = v150;
                *(unsigned char *)(v86 + 112) = 1;
              }
              *(unsigned char *)(v86 + 128) = 0;
              if (v151)
              {
                *(void *)(v86 + 136) = v152;
                *(unsigned char *)(v86 + 128) = 1;
              }
              uint64_t v88 = v86 + 144;
              unsigned int v89 = a2;
              a2->i64[1] = v86 + 144;
              goto LABEL_151;
            }
LABEL_138:
            uint64_t v88 = sub_10021D10C(v85, (uint64_t)&v140);
            unsigned int v89 = a2;
LABEL_151:
            v89->i64[1] = v88;
            if (qword_10047BF08 != -1) {
              dispatch_once(&qword_10047BF08, &stru_100460658);
            }
            unsigned int v92 = (id)qword_10047BF10;
            if (os_log_type_enabled(v92, OS_LOG_TYPE_DEFAULT))
            {
              uint64_t v93 = nullsub_22(&v140);
              if (*(char *)(v93 + 23) >= 0) {
                std::string::size_type v94 = v93;
              }
              else {
                std::string::size_type v94 = *(void *)v93;
              }
              unsigned int v95 = (char **)sub_10008807C((uint64_t)&v140);
              unsigned int v96 = sub_1000900B8(v95);
              if (sub_100089D70((uint64_t)&v140) == 1) {
                int v97 = 82;
              }
              else {
                int v97 = 73;
              }
              sub_10008CB5C((uint64_t)&v140, (uint64_t)&v139);
              if (v139.__r_.__value_.__s.__data_[0])
              {
                sub_10008CB5C((uint64_t)&v140, (uint64_t)&v134);
                LODWORD(v135.__r_.__value_.__l.__data_) = 136381443;
                *(std::string::size_type *)((char *)v135.__r_.__value_.__r.__words + 4) = v94;
                WORD2(v135.__r_.__value_.__r.__words[1]) = 2081;
                *(std::string::size_type *)((char *)&v135.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v96;
                HIWORD(v135.__r_.__value_.__r.__words[2]) = 1026;
                LODWORD(v136[0]) = v97;
                WORD2(v136[0]) = 2050;
                *(void *)((char *)v136 + 6) = v134.__r_.__value_.__l.__size_;
              }
              else
              {
                LODWORD(v135.__r_.__value_.__l.__data_) = 136381443;
                *(std::string::size_type *)((char *)v135.__r_.__value_.__r.__words + 4) = v94;
                WORD2(v135.__r_.__value_.__r.__words[1]) = 2081;
                *(std::string::size_type *)((char *)&v135.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v96;
                HIWORD(v135.__r_.__value_.__r.__words[2]) = 1026;
                LODWORD(v136[0]) = v97;
                WORD2(v136[0]) = 2050;
                *(void *)((char *)v136 + 6) = -1;
              }
              _os_log_impl((void *)&_mh_execute_header, v92, OS_LOG_TYPE_DEFAULT, "ResourceList, %{private}s, %{private}s, %{public}c, visit, %{public}lld ", (uint8_t *)&v135, 0x26u);
            }

            int v98 = sub_100089D70((uint64_t)&v140);
            if (v98 == 1) {
              int v99 = v65;
            }
            else {
              int v99 = v64;
            }
            if (v98 == 1) {
              int v65 = v99 + 1;
            }
            else {
              int v64 = v99 + 1;
            }
            if (v151) {
              char v151 = 0;
            }
            if (v149) {
              char v149 = 0;
            }
            if (v147) {
              char v147 = 0;
            }
            if (v145) {
              char v145 = 0;
            }
            uint64_t v2 = v142;
            if (v142 && !atomic_fetch_add(&v142->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
              std::__shared_weak_count::__release_weak(v2);
            }
            if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v140.__r_.__value_.__l.__data_);
            }
            goto LABEL_78;
          }
LABEL_137:
          operator delete(__dst.__r_.__value_.__l.__data_);
          unsigned int v85 = a2;
          unint64_t v86 = a2->u64[1];
          if (v86 < a2[1].i64[0]) {
            goto LABEL_131;
          }
          goto LABEL_138;
        }
LABEL_111:
        *(_OWORD *)&v138.__r_.__value_.__r.__words[1] = *(_OWORD *)&v131.__r_.__value_.__r.__words[1];
        v138.__r_.__value_.__s.__data_[0] = 1;
        goto LABEL_112;
      }
      if (v81 != 2)
      {
        if (qword_10047BF08 == -1)
        {
          int v82 = qword_10047BF10;
          if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR)) {
            goto LABEL_110;
          }
          goto LABEL_109;
        }
        dispatch_once(&qword_10047BF08, &stru_100460658);
        int v82 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR))
        {
LABEL_109:
          LODWORD(v135.__r_.__value_.__l.__data_) = 67109120;
          HIDWORD(v135.__r_.__value_.__r.__words[0]) = v81;
          _os_log_impl((void *)&_mh_execute_header, v82, OS_LOG_TYPE_ERROR, "location context is an unknown value, %d, will gracefully fail by assuming this is a regional tile. please file a radar", (uint8_t *)&v135, 8u);
        }
      }
LABEL_110:
      int v83 = 1;
      v138.__r_.__value_.__s.__data_[0] = 0;
      if (!v131.__r_.__value_.__s.__data_[0]) {
        goto LABEL_112;
      }
      goto LABEL_111;
    }
    if (v67 == 101) {
      break;
    }
    if (v67 == 19)
    {
      if (qword_10047BF08 == -1)
      {
        int v102 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO)) {
          goto LABEL_214;
        }
      }
      else
      {
        dispatch_once(&qword_10047BF08, &stru_100460658);
        int v102 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO))
        {
LABEL_214:
          LOWORD(v140.__r_.__value_.__l.__data_) = 0;
          _os_log_impl((void *)&_mh_execute_header, v102, OS_LOG_TYPE_INFO, "Query constraint violation", (uint8_t *)&v140, 2u);
        }
      }
      __cxa_allocate_exception(0x40uLL);
      v131.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
      *(_OWORD *)&v131.__r_.__value_.__r.__words[1] = xmmword_1003F6340;
      strcpy(v131.__r_.__value_.__l.__data_, "Constraint violation stepping through statement");
      std::runtime_error::runtime_error((std::runtime_error *)&v139, &v131);
      v139.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100460ED8;
      sub_10018E868((uint64_t)&v130);
      sub_10020E390((std::runtime_error *)&v139, (uint64_t)"auto db::resources::statement<10, 0>::run((lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:896:19) &&)::(anonymous class)::operator()() const [nCols = 10, nQueries = 0, ColumnNumberType = unsigned long]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 486, (uint64_t)&v130);
    }
    sub_100088644(v67, (sqlite3 *)v124.__r_.__value_.__l.__size_);
    if (v68)
    {
      std::string v103 = __error();
      sub_100295674(*v103, &__dst);
      __cxa_allocate_exception(0x40uLL);
      *((unsigned char *)&v137.__r_.__value_.__s + 23) = 4;
      strcpy((char *)&v137, " w/ ");
      std::string v104 = std::string::insert(&v137, 0, "Failed sqlite3_step");
      long long v105 = *(_OWORD *)&v104->__r_.__value_.__l.__data_;
      v138.__r_.__value_.__r.__words[2] = v104->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v138.__r_.__value_.__l.__data_ = v105;
      v104->__r_.__value_.__l.__size_ = 0;
      v104->__r_.__value_.__r.__words[2] = 0;
      v104->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        sub_1000559FC(&v134, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
      }
      else {
        std::string v134 = __dst;
      }
      if ((v134.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v106 = &v134;
      }
      else {
        int v106 = (std::string *)v134.__r_.__value_.__r.__words[0];
      }
      if ((v134.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v107 = HIBYTE(v134.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v107 = v134.__r_.__value_.__l.__size_;
      }
      int v108 = std::string::append(&v138, (const std::string::value_type *)v106, v107);
      long long v109 = *(_OWORD *)&v108->__r_.__value_.__l.__data_;
      v139.__r_.__value_.__r.__words[2] = v108->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v139.__r_.__value_.__l.__data_ = v109;
      v108->__r_.__value_.__l.__size_ = 0;
      v108->__r_.__value_.__r.__words[2] = 0;
      v108->__r_.__value_.__r.__words[0] = 0;
      std::runtime_error::runtime_error((std::runtime_error *)&v123, &v139);
      v123.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100460B68;
      sub_10018E868((uint64_t)&v133);
      sub_100204FC4((std::runtime_error *)&v123, (uint64_t)"void db::resources::statement<10, 0>::run(Cb &&, ConstraintHandler &&) [nCols = 10, nQueries = 0, ColumnNumberType = unsigned long, Cb = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:896:19), ConstraintHandler = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h:485:43)]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 512, (uint64_t)&v133);
    }
LABEL_78:
    int v66 = (sqlite3_stmt *)v124.__r_.__value_.__r.__words[0];
  }
  int v100 = sqlite3_reset((sqlite3_stmt *)v124.__r_.__value_.__l.__data_);
  sub_100088644(v100, (sqlite3 *)v124.__r_.__value_.__l.__size_);
  if (v100)
  {
    int v110 = __error();
    sub_100295674(*v110, &__dst);
    __cxa_allocate_exception(0x40uLL);
    *((unsigned char *)&v137.__r_.__value_.__s + 23) = 4;
    strcpy((char *)&v137, " w/ ");
    int v111 = std::string::insert(&v137, 0, "Failed to execute query");
    long long v112 = *(_OWORD *)&v111->__r_.__value_.__l.__data_;
    v138.__r_.__value_.__r.__words[2] = v111->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v138.__r_.__value_.__l.__data_ = v112;
    v111->__r_.__value_.__l.__size_ = 0;
    v111->__r_.__value_.__r.__words[2] = 0;
    v111->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&v134, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
    }
    else {
      std::string v134 = __dst;
    }
    if ((v134.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unsigned int v113 = &v134;
    }
    else {
      unsigned int v113 = (std::string *)v134.__r_.__value_.__r.__words[0];
    }
    if ((v134.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v114 = HIBYTE(v134.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v114 = v134.__r_.__value_.__l.__size_;
    }
    unsigned int v115 = std::string::append(&v138, (const std::string::value_type *)v113, v114);
    long long v116 = *(_OWORD *)&v115->__r_.__value_.__l.__data_;
    v139.__r_.__value_.__r.__words[2] = v115->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v139.__r_.__value_.__l.__data_ = v116;
    v115->__r_.__value_.__l.__size_ = 0;
    v115->__r_.__value_.__r.__words[2] = 0;
    v115->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error((std::runtime_error *)&v123, &v139);
    v123.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100460B68;
    sub_10018E868((uint64_t)&v133);
    sub_100204FC4((std::runtime_error *)&v123, (uint64_t)"void db::resources::statement<10, 0>::run(Cb &&, ConstraintHandler &&) [nCols = 10, nQueries = 0, ColumnNumberType = unsigned long, Cb = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:896:19), ConstraintHandler = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h:485:43)]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 518, (uint64_t)&v133);
  }
  if (qword_10047BF08 == -1)
  {
    char v101 = qword_10047BF10;
    if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_DEFAULT)) {
      goto LABEL_186;
    }
  }
  else
  {
    dispatch_once(&qword_10047BF08, &stru_100460658);
    char v101 = qword_10047BF10;
    if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_DEFAULT))
    {
LABEL_186:
      LODWORD(v140.__r_.__value_.__l.__data_) = 67240448;
      HIDWORD(v140.__r_.__value_.__r.__words[0]) = v64;
      LOWORD(v140.__r_.__value_.__r.__words[1]) = 1026;
      *(_DWORD *)((char *)&v140.__r_.__value_.__r.__words[1] + 2) = v65;
      _os_log_impl((void *)&_mh_execute_header, v101, OS_LOG_TYPE_DEFAULT, "ResourceList, indoor, %{public}d, regional, %{public}d", (uint8_t *)&v140, 0xEu);
    }
  }
  sub_10021CC88((uint64_t)&v124);

  if (SHIBYTE(v126) < 0) {
    operator delete((void *)__p);
  }
}

void sub_1001FD580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,std::runtime_error a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,uint64_t a48,uint64_t a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,uint64_t a56,void *a57,uint64_t a58,int a59,__int16 a60,char a61,char a62,uint64_t a63)
{
  std::runtime_error::~runtime_error(v76);
  if (a74 < 0)
  {
    operator delete(__p);
    if ((a62 & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else if ((a62 & 0x80000000) == 0)
  {
LABEL_3:
    if (SLOBYTE(STACK[0x20F]) < 0) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
  operator delete(a57);
  if (SLOBYTE(STACK[0x20F]) < 0)
  {
LABEL_4:
    operator delete(a75);
    if ((a69 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  if ((a69 & 0x80000000) == 0)
  {
LABEL_5:
    STACK[0x270] = v75;
    if (SLOBYTE(STACK[0x28F]) < 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(a64);
  STACK[0x270] = v75;
  if (SLOBYTE(STACK[0x28F]) < 0)
  {
LABEL_6:
    operator delete((void *)STACK[0x278]);
    if ((SLOBYTE(STACK[0x227]) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  if ((SLOBYTE(STACK[0x227]) & 0x80000000) == 0)
  {
LABEL_7:
    *(void *)(v77 - 240) = &off_100451DC0;
    uint64_t v79 = *(void *)(v77 - 232);
    if (!v79) {
      goto LABEL_17;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete((void *)STACK[0x210]);
  *(void *)(v77 - 240) = &off_100451DC0;
  uint64_t v79 = *(void *)(v77 - 232);
  if (!v79) {
    goto LABEL_17;
  }
LABEL_15:
  if ((*(unsigned int (**)(uint64_t))(*(void *)v79 + 32))(v79)) {
    *(void *)(v77 - 232) = 0;
  }
LABEL_17:
  std::runtime_error::~runtime_error((std::runtime_error *)(v77 - 256));
  time_t v80 = (void *)STACK[0x230];
  if (STACK[0x230])
  {
    STACK[0x238] = (unint64_t)v80;
    operator delete(v80);
  }
  std::runtime_error::~runtime_error(&a43);
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete((void *)STACK[0x2E0]);
  }
  if (SLOBYTE(STACK[0x267]) < 0) {
    operator delete((void *)STACK[0x250]);
  }
  if (SLOBYTE(STACK[0x2D7]) < 0) {
    operator delete((void *)STACK[0x2C0]);
  }
  if (SLOBYTE(STACK[0x2B7]) < 0) {
    operator delete((void *)STACK[0x2A0]);
  }
  __cxa_free_exception(v76);
  if (a72 < 0) {
    operator delete(a71);
  }
  sub_1001FE660((uint64_t)&a46);
  if (a55 < 0) {
    operator delete(a50);
  }
  STACK[0x2E0] = a23;
  sub_10021CB64((void ***)&STACK[0x2E0]);
  _Unwind_Resume(a1);
}

void sub_1001FE094(sqlite3 **a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a3;
  std::string::size_type v9 = v8;
  if (v8) {
    os_activity_scope_enter(v8, &state);
  }
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  objc_storeStrong((id *)(a4 + 16), a3);
  int v10 = *(char *)(a2 + 23);
  if (v10 >= 0) {
    long long v11 = (const char *)a2;
  }
  else {
    long long v11 = *(const char **)a2;
  }
  if (v10 >= 0) {
    int v12 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    int v12 = *(_DWORD *)(a2 + 8);
  }
  int v13 = sqlite3_prepare_v2(*a1, v11, v12, (sqlite3_stmt **)a4, 0);
  sub_100088644(v13, *a1);
  if (v13)
  {
    int v14 = __error();
    sub_100295674(*v14, &v27);
    __cxa_allocate_exception(0x40uLL);
    sub_1000AE4B0(&v23, " w/ ");
    std::string::size_type v15 = std::string::insert(&v23, 0, "Failed to prepare query");
    long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    v24.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v16;
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    v15->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&__dst, v27.__r_.__value_.__l.__data_, v27.__r_.__value_.__l.__size_);
    }
    else {
      std::string __dst = v27;
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_dst = &__dst;
    }
    else {
      p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __dst.__r_.__value_.__l.__size_;
    }
    long long v19 = std::string::append(&v24, (const std::string::value_type *)p_dst, size);
    long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v25.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v26, &v25);
    v26.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v21);
    sub_100204FC4(&v26, (uint64_t)"statement<nCols, nQueries, ColumnNumberType> db::resources::handle::prepare(const std::string &, __strong os_activity_t) const [nCols = 10UL, nQueries = 0UL, ColumnNumberType = unsigned long]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 633, (uint64_t)v21);
  }
  *(void *)(a4 + 8) = *a1;
  if (v9) {
    os_activity_scope_leave(&state);
  }
}

void sub_1001FE3E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,void *a62,uint64_t a63)
{
  if (a22 < 0)
  {
    operator delete(__p);
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a35 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a10);
  if ((a35 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a28 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a30);
  if ((a28 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a42 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a23);
  if ((a42 & 0x80000000) == 0)
  {
LABEL_6:
    sub_100205504((std::runtime_error *)(v71 - 184));
    char v73 = a47;
    if (!a47)
    {
LABEL_14:
      std::runtime_error::~runtime_error((std::runtime_error *)(v71 - 200));
      if (*(char *)(v71 - 201) < 0)
      {
        operator delete(*(void **)(v71 - 224));
        if ((a55 & 0x80000000) == 0)
        {
LABEL_16:
          if ((a67 & 0x80000000) == 0) {
            goto LABEL_17;
          }
          goto LABEL_22;
        }
      }
      else if ((a55 & 0x80000000) == 0)
      {
        goto LABEL_16;
      }
      operator delete(a50);
      if ((a67 & 0x80000000) == 0)
      {
LABEL_17:
        if (a61 < 0) {
          goto LABEL_18;
        }
        goto LABEL_23;
      }
LABEL_22:
      operator delete(a62);
      if (a61 < 0)
      {
LABEL_18:
        operator delete(a56);
        if ((v70 & 1) == 0)
        {
LABEL_25:
          if (*(char *)(v71 - 97) < 0)
          {
            operator delete(*(void **)(v71 - 120));
            sub_1001FE660(v68);

            _Unwind_Resume(a1);
          }
          sub_1001FE660(v68);

          _Unwind_Resume(a1);
        }
LABEL_24:
        __cxa_free_exception(v69);
        goto LABEL_25;
      }
LABEL_23:
      if (!v70) {
        goto LABEL_25;
      }
      goto LABEL_24;
    }
LABEL_13:
    operator delete(v73);
    goto LABEL_14;
  }
LABEL_12:
  operator delete(a37);
  sub_100205504((std::runtime_error *)(v71 - 184));
  char v73 = a47;
  if (!a47) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

uint64_t sub_1001FE660(uint64_t a1)
{
  return a1;
}

void sub_1001FE694(uint64_t a1)
{
  uint64_t v2 = a1;
  id v1 = *(id *)(a1 + 32);
  operator new();
}

void sub_1001FE834(_Unwind_Exception *a1)
{
  long long v5 = v3;
  if (!atomic_fetch_add(v5, 0xFFFFFFFFFFFFFFFFLL)) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  sub_1000ACDC8((uint64_t *)(v4 - 40));

  _Unwind_Resume(a1);
}

void sub_1001FE8A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_1001FE8B4(uint64_t a1)
{
  v42.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x20uLL);
  *(_OWORD *)&v42.__r_.__value_.__r.__words[1] = xmmword_1003E6770;
  strcpy(v42.__r_.__value_.__l.__data_, "SELECT EXISTS (SELECT 1 FROM ");
  uint64_t v2 = std::string::append(&v42, "venues");
  long long v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
  v43.__r_.__value_.__r.__words[2] = v2->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v3;
  v2->__r_.__value_.__l.__size_ = 0;
  v2->__r_.__value_.__r.__words[2] = 0;
  v2->__r_.__value_.__r.__words[0] = 0;
  uint64_t v4 = std::string::append(&v43, ")");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  std::string::size_type v32 = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)long long __p = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v43.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v42.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_3;
    }
LABEL_18:
    operator delete(v42.__r_.__value_.__l.__data_);
    goto LABEL_3;
  }
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_18;
  }
LABEL_3:
  sub_100028E94(*(sqlite3 ***)(a1 + 40), (uint64_t)__p, 0, (uint64_t)&pStmt);
  BOOL v6 = 0;
  long long v7 = pStmt;
  for (uint64_t i = pStmt; ; uint64_t i = pStmt)
  {
    while (1)
    {
      int v9 = sqlite3_step(i);
      int v10 = v9;
      if (v9 != 100) {
        break;
      }
      if (sqlite3_column_type(v7, 0) != 5)
      {
        BOOL v6 = sqlite3_column_int(v7, 0) == 1;
        goto LABEL_12;
      }
      BOOL v6 = 0;
      uint64_t i = pStmt;
    }
    if (v9 == 101) {
      break;
    }
    if (v9 == 19)
    {
      if (qword_10047BF08 == -1)
      {
        int v13 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO)) {
          goto LABEL_21;
        }
      }
      else
      {
        dispatch_once(&qword_10047BF08, &stru_100460658);
        int v13 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO))
        {
LABEL_21:
          LOWORD(v43.__r_.__value_.__l.__data_) = 0;
          _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_INFO, "Query constraint violation", (uint8_t *)&v43, 2u);
        }
      }
      __cxa_allocate_exception(0x40uLL);
      v34.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
      *(_OWORD *)&v34.__r_.__value_.__r.__words[1] = xmmword_1003F6340;
      strcpy(v34.__r_.__value_.__l.__data_, "Constraint violation stepping through statement");
      std::runtime_error::runtime_error((std::runtime_error *)&v39, &v34);
      v39.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100460ED8;
      sub_10018E868((uint64_t)&v33);
      sub_10020E390((std::runtime_error *)&v39, (uint64_t)"auto db::resources::statement<1, 0>::run((lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:955:19) &&)::(anonymous class)::operator()() const [nCols = 1, nQueries = 0, ColumnNumberType = unsigned long]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 486, (uint64_t)&v33);
    }
    sub_100088644(v9, db);
    if (v10)
    {
      int v14 = __error();
      sub_100295674(*v14, &__dst);
      __cxa_allocate_exception(0x40uLL);
      *((unsigned char *)&v37.__r_.__value_.__s + 23) = 4;
      strcpy((char *)&v37, " w/ ");
      std::string::size_type v15 = std::string::insert(&v37, 0, "Failed sqlite3_step");
      long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
      v38.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v16;
      v15->__r_.__value_.__l.__size_ = 0;
      v15->__r_.__value_.__r.__words[2] = 0;
      v15->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        sub_1000559FC(&v36, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
      }
      else {
        std::string v36 = __dst;
      }
      if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        long long v17 = &v36;
      }
      else {
        long long v17 = (std::string *)v36.__r_.__value_.__r.__words[0];
      }
      if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v36.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v36.__r_.__value_.__l.__size_;
      }
      long long v19 = std::string::append(&v38, (const std::string::value_type *)v17, size);
      long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
      v39.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v20;
      v19->__r_.__value_.__l.__size_ = 0;
      v19->__r_.__value_.__r.__words[2] = 0;
      v19->__r_.__value_.__r.__words[0] = 0;
      std::runtime_error::runtime_error(&v40, &v39);
      v40.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
      sub_10018E868((uint64_t)v35);
      sub_100204FC4(&v40, (uint64_t)"void db::resources::statement<1, 0>::run(Cb &&, ConstraintHandler &&) [nCols = 1, nQueries = 0, ColumnNumberType = unsigned long, Cb = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:955:19), ConstraintHandler = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h:485:43)]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 512, (uint64_t)v35);
    }
LABEL_12:
    ;
  }
  int v11 = sqlite3_reset(pStmt);
  sub_100088644(v11, db);
  if (v11)
  {
    std::string::size_type v21 = __error();
    sub_100295674(*v21, &__dst);
    __cxa_allocate_exception(0x40uLL);
    *((unsigned char *)&v37.__r_.__value_.__s + 23) = 4;
    strcpy((char *)&v37, " w/ ");
    uint64_t v22 = std::string::insert(&v37, 0, "Failed to execute query");
    long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v38.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&v36, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
    }
    else {
      std::string v36 = __dst;
    }
    if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string v24 = &v36;
    }
    else {
      std::string v24 = (std::string *)v36.__r_.__value_.__r.__words[0];
    }
    if ((v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v25 = HIBYTE(v36.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v25 = v36.__r_.__value_.__l.__size_;
    }
    std::runtime_error v26 = std::string::append(&v38, (const std::string::value_type *)v24, v25);
    long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
    v39.__r_.__value_.__r.__words[2] = v26->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v27;
    v26->__r_.__value_.__l.__size_ = 0;
    v26->__r_.__value_.__r.__words[2] = 0;
    v26->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v40, &v39);
    v40.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v35);
    sub_100204FC4(&v40, (uint64_t)"void db::resources::statement<1, 0>::run(Cb &&, ConstraintHandler &&) [nCols = 1, nQueries = 0, ColumnNumberType = unsigned long, Cb = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:955:19), ConstraintHandler = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h:485:43)]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 518, (uint64_t)v35);
  }
  sub_100029460((uint64_t)&pStmt);

  if (SHIBYTE(v32) < 0) {
    operator delete(__p[0]);
  }
  return v6;
}

void sub_1001FF7C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,void *a56,uint64_t a57,uint64_t a58,void *a59,uint64_t a60,int a61,__int16 a62,char a63)
{
  std::runtime_error::~runtime_error(v72);
  if (a32 < 0)
  {
    operator delete(__p);
    if ((a25 & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else if ((a25 & 0x80000000) == 0)
  {
LABEL_3:
    if (a45 < 0) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
  operator delete(a20);
  if (a45 < 0)
  {
LABEL_4:
    operator delete(a40);
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  if ((a38 & 0x80000000) == 0)
  {
LABEL_5:
    *(void *)(v74 - 176) = v73;
    if (*(char *)(v74 - 145) < 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(a33);
  *(void *)(v74 - 176) = v73;
  if (*(char *)(v74 - 145) < 0)
  {
LABEL_6:
    operator delete(*(void **)(v74 - 168));
    if ((a51 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  if ((a51 & 0x80000000) == 0)
  {
LABEL_7:
    *(void *)(v74 - 128) = &off_100451DC0;
    uint64_t v76 = *(void *)(v74 - 120);
    if (!v76) {
      goto LABEL_17;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a46);
  *(void *)(v74 - 128) = &off_100451DC0;
  uint64_t v76 = *(void *)(v74 - 120);
  if (!v76) {
    goto LABEL_17;
  }
LABEL_15:
  if ((*(unsigned int (**)(uint64_t))(*(void *)v76 + 32))(v76)) {
    *(void *)(v74 - 120) = 0;
  }
LABEL_17:
  std::runtime_error::~runtime_error((std::runtime_error *)(v74 - 144));
  if (a56)
  {
    a57 = (uint64_t)a56;
    operator delete(a56);
  }
  std::runtime_error::~runtime_error((std::runtime_error *)(v74 - 216));
  if (*(char *)(v74 - 217) < 0)
  {
    operator delete(*(void **)(v74 - 240));
    if (a64 < 0)
    {
LABEL_21:
      operator delete(a59);
      if ((a72 & 0x80000000) == 0) {
        goto LABEL_22;
      }
      goto LABEL_26;
    }
  }
  else if (a64 < 0)
  {
    goto LABEL_21;
  }
  if ((a72 & 0x80000000) == 0)
  {
LABEL_22:
    if ((a70 & 0x80000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_23;
  }
LABEL_26:
  operator delete(a71);
  if ((a70 & 0x80000000) == 0)
  {
LABEL_27:
    __cxa_free_exception(v72);
    if (*(char *)(v74 - 177) < 0) {
      operator delete(*(void **)(v74 - 200));
    }
    sub_1001F5784((uint64_t)&a10);
    if (a18 < 0) {
      operator delete(a13);
    }
    _Unwind_Resume(a1);
  }
LABEL_23:
  operator delete(a65);
  goto LABEL_27;
}

void sub_1001FFE10(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = a2;
  id v2 = *(id *)(a1 + 32);
  operator new();
}

void sub_1001FFFB8(_Unwind_Exception *a1)
{
  if (!atomic_fetch_add(v3, 0xFFFFFFFFFFFFFFFFLL)) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  sub_10020AF08((uint64_t *)(v4 - 56));

  _Unwind_Resume(a1);
}

void sub_100200020(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100200034(uint64_t a1@<X0>, unsigned int *a2@<X1>, char **a3@<X8>)
{
  *((unsigned char *)&v186.__r_.__value_.__s + 23) = 7;
  strcpy((char *)&v186, "SELECT ");
  if (byte_10047DF67 >= 0) {
    long long v5 = (const std::string::value_type *)&qword_10047DF50;
  }
  else {
    long long v5 = (const std::string::value_type *)qword_10047DF50;
  }
  if (byte_10047DF67 >= 0) {
    std::string::size_type v6 = byte_10047DF67;
  }
  else {
    std::string::size_type v6 = *(void *)&byte_10047DF58;
  }
  long long v7 = std::string::append(&v186, v5, v6);
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  v187.__r_.__value_.__r.__words[2] = v7->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v187.__r_.__value_.__l.__data_ = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  int v9 = std::string::append(&v187, ", ");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v188.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v188.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047DF7F >= 0) {
    int v11 = (const std::string::value_type *)&qword_10047DF68;
  }
  else {
    int v11 = (const std::string::value_type *)qword_10047DF68;
  }
  if (byte_10047DF7F >= 0) {
    std::string::size_type v12 = byte_10047DF7F;
  }
  else {
    std::string::size_type v12 = *(void *)&byte_10047DF70;
  }
  int v13 = std::string::append(&v188, v11, v12);
  long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
  v189.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v189.__r_.__value_.__l.__data_ = v14;
  v13->__r_.__value_.__l.__size_ = 0;
  v13->__r_.__value_.__r.__words[2] = 0;
  v13->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v15 = std::string::append(&v189, ", ");
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  v190.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v190.__r_.__value_.__l.__data_ = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047DFAF >= 0) {
    long long v17 = (const std::string::value_type *)&qword_10047DF98;
  }
  else {
    long long v17 = (const std::string::value_type *)qword_10047DF98;
  }
  if (byte_10047DFAF >= 0) {
    std::string::size_type v18 = byte_10047DFAF;
  }
  else {
    std::string::size_type v18 = unk_10047DFA0;
  }
  long long v19 = std::string::append(&v190, v17, v18);
  long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
  v191.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v191.__r_.__value_.__l.__data_ = v20;
  v19->__r_.__value_.__l.__size_ = 0;
  v19->__r_.__value_.__r.__words[2] = 0;
  v19->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v21 = std::string::append(&v191, ", ");
  long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v192.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v192.__r_.__value_.__l.__data_ = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  long long v23 = std::string::append(&v192, "venues");
  long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
  v193.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v193.__r_.__value_.__l.__data_ = v24;
  v23->__r_.__value_.__l.__size_ = 0;
  v23->__r_.__value_.__r.__words[2] = 0;
  v23->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v25 = std::string::append(&v193, ".");
  long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
  v194.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v194.__r_.__value_.__l.__data_ = v26;
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047DF97 >= 0) {
    long long v27 = (const std::string::value_type *)&qword_10047DF80;
  }
  else {
    long long v27 = (const std::string::value_type *)qword_10047DF80;
  }
  if (byte_10047DF97 >= 0) {
    std::string::size_type v28 = byte_10047DF97;
  }
  else {
    std::string::size_type v28 = *(void *)&byte_10047DF88;
  }
  long long v29 = std::string::append(&v194, v27, v28);
  long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
  v195.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v195.__r_.__value_.__l.__data_ = v30;
  v29->__r_.__value_.__l.__size_ = 0;
  v29->__r_.__value_.__r.__words[2] = 0;
  v29->__r_.__value_.__r.__words[0] = 0;
  long long v31 = std::string::append(&v195, ", LENGTH(");
  long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
  v196.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v196.__r_.__value_.__l.__data_ = v32;
  v31->__r_.__value_.__l.__size_ = 0;
  v31->__r_.__value_.__r.__words[2] = 0;
  v31->__r_.__value_.__r.__words[0] = 0;
  uint64_t v33 = std::string::append(&v196, "tiles");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  v197.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v197.__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  long long v35 = std::string::append(&v197, ") ");
  long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
  v198.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v198.__r_.__value_.__l.__data_ = v36;
  v35->__r_.__value_.__l.__size_ = 0;
  v35->__r_.__value_.__r.__words[2] = 0;
  v35->__r_.__value_.__r.__words[0] = 0;
  std::string v37 = std::string::append(&v198, "FROM ");
  long long v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
  v199.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v199.__r_.__value_.__l.__data_ = v38;
  v37->__r_.__value_.__l.__size_ = 0;
  v37->__r_.__value_.__r.__words[2] = 0;
  v37->__r_.__value_.__r.__words[0] = 0;
  std::string v39 = std::string::append(&v199, "venues");
  long long v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
  v200.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v200.__r_.__value_.__l.__data_ = v40;
  v39->__r_.__value_.__l.__size_ = 0;
  v39->__r_.__value_.__r.__words[2] = 0;
  v39->__r_.__value_.__r.__words[0] = 0;
  long long v41 = std::string::append(&v200, " LEFT OUTER JOIN ");
  long long v42 = *(_OWORD *)&v41->__r_.__value_.__l.__data_;
  v201.__r_.__value_.__r.__words[2] = v41->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v201.__r_.__value_.__l.__data_ = v42;
  v41->__r_.__value_.__l.__size_ = 0;
  v41->__r_.__value_.__r.__words[2] = 0;
  v41->__r_.__value_.__r.__words[0] = 0;
  std::string v43 = std::string::append(&v201, "tile_data");
  long long v44 = *(_OWORD *)&v43->__r_.__value_.__l.__data_;
  v202.__r_.__value_.__r.__words[2] = v43->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v202.__r_.__value_.__l.__data_ = v44;
  v43->__r_.__value_.__l.__size_ = 0;
  v43->__r_.__value_.__r.__words[2] = 0;
  v43->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v45 = std::string::append(&v202, " ON ");
  long long v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
  v203.__r_.__value_.__r.__words[2] = v45->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v203.__r_.__value_.__l.__data_ = v46;
  v45->__r_.__value_.__l.__size_ = 0;
  v45->__r_.__value_.__r.__words[2] = 0;
  v45->__r_.__value_.__r.__words[0] = 0;
  long long v47 = std::string::append(&v203, "venues");
  long long v48 = *(_OWORD *)&v47->__r_.__value_.__l.__data_;
  v204.__r_.__value_.__r.__words[2] = v47->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v204.__r_.__value_.__l.__data_ = v48;
  v47->__r_.__value_.__l.__size_ = 0;
  v47->__r_.__value_.__r.__words[2] = 0;
  v47->__r_.__value_.__r.__words[0] = 0;
  long long v49 = std::string::append(&v204, ".");
  long long v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
  v205.__r_.__value_.__r.__words[2] = v49->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v205.__r_.__value_.__l.__data_ = v50;
  v49->__r_.__value_.__l.__size_ = 0;
  v49->__r_.__value_.__r.__words[2] = 0;
  v49->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047DF97 >= 0) {
    std::string::size_type v51 = (const std::string::value_type *)&qword_10047DF80;
  }
  else {
    std::string::size_type v51 = (const std::string::value_type *)qword_10047DF80;
  }
  if (byte_10047DF97 >= 0) {
    std::string::size_type v52 = byte_10047DF97;
  }
  else {
    std::string::size_type v52 = *(void *)&byte_10047DF88;
  }
  long long v53 = std::string::append(&v205, v51, v52);
  long long v54 = *(_OWORD *)&v53->__r_.__value_.__l.__data_;
  v206.__r_.__value_.__r.__words[2] = v53->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v206.__r_.__value_.__l.__data_ = v54;
  v53->__r_.__value_.__l.__size_ = 0;
  v53->__r_.__value_.__r.__words[2] = 0;
  v53->__r_.__value_.__r.__words[0] = 0;
  long long v55 = std::string::append(&v206, "=");
  long long v56 = *(_OWORD *)&v55->__r_.__value_.__l.__data_;
  v207.__r_.__value_.__r.__words[2] = v55->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v207.__r_.__value_.__l.__data_ = v56;
  v55->__r_.__value_.__l.__size_ = 0;
  v55->__r_.__value_.__r.__words[2] = 0;
  v55->__r_.__value_.__r.__words[0] = 0;
  std::string::size_type v57 = std::string::append(&v207, "tile_data");
  long long v58 = *(_OWORD *)&v57->__r_.__value_.__l.__data_;
  v208.__r_.__value_.__r.__words[2] = v57->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v208.__r_.__value_.__l.__data_ = v58;
  v57->__r_.__value_.__l.__size_ = 0;
  v57->__r_.__value_.__r.__words[2] = 0;
  v57->__r_.__value_.__r.__words[0] = 0;
  long long v59 = std::string::append(&v208, ".");
  long long v60 = *(_OWORD *)&v59->__r_.__value_.__l.__data_;
  v209.__r_.__value_.__r.__words[2] = v59->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v209.__r_.__value_.__l.__data_ = v60;
  v59->__r_.__value_.__l.__size_ = 0;
  v59->__r_.__value_.__r.__words[2] = 0;
  v59->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047DF97 >= 0) {
    long long v61 = (const std::string::value_type *)&qword_10047DF80;
  }
  else {
    long long v61 = (const std::string::value_type *)qword_10047DF80;
  }
  if (byte_10047DF97 >= 0) {
    std::string::size_type v62 = byte_10047DF97;
  }
  else {
    std::string::size_type v62 = *(void *)&byte_10047DF88;
  }
  long long v63 = std::string::append(&v209, v61, v62);
  long long v64 = *(_OWORD *)&v63->__r_.__value_.__l.__data_;
  v210.__r_.__value_.__r.__words[2] = v63->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v210.__r_.__value_.__l.__data_ = v64;
  v63->__r_.__value_.__l.__size_ = 0;
  v63->__r_.__value_.__r.__words[2] = 0;
  v63->__r_.__value_.__r.__words[0] = 0;
  int v65 = std::string::append(&v210, " ");
  long long v66 = *(_OWORD *)&v65->__r_.__value_.__l.__data_;
  v211.__r_.__value_.__r.__words[2] = v65->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v211.__r_.__value_.__l.__data_ = v66;
  v65->__r_.__value_.__l.__size_ = 0;
  v65->__r_.__value_.__r.__words[2] = 0;
  v65->__r_.__value_.__r.__words[0] = 0;
  int v67 = std::string::append(&v211, "WHERE (");
  long long v68 = *(_OWORD *)&v67->__r_.__value_.__l.__data_;
  v212.__r_.__value_.__r.__words[2] = v67->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v212.__r_.__value_.__l.__data_ = v68;
  v67->__r_.__value_.__l.__size_ = 0;
  v67->__r_.__value_.__r.__words[2] = 0;
  v67->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047DFC7 >= 0) {
    char v69 = (const std::string::value_type *)&xmmword_10047DFB0;
  }
  else {
    char v69 = (const std::string::value_type *)xmmword_10047DFB0;
  }
  if (byte_10047DFC7 >= 0) {
    std::string::size_type v70 = byte_10047DFC7;
  }
  else {
    std::string::size_type v70 = *((void *)&xmmword_10047DFB0 + 1);
  }
  uint64_t v71 = std::string::append(&v212, v69, v70);
  long long v72 = *(_OWORD *)&v71->__r_.__value_.__l.__data_;
  v213.__r_.__value_.__r.__words[2] = v71->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v213.__r_.__value_.__l.__data_ = v72;
  v71->__r_.__value_.__l.__size_ = 0;
  v71->__r_.__value_.__r.__words[2] = 0;
  v71->__r_.__value_.__r.__words[0] = 0;
  uint64_t v73 = std::string::append(&v213, " IS NOT NULL ");
  long long v74 = *(_OWORD *)&v73->__r_.__value_.__l.__data_;
  v216.__r_.__value_.__r.__words[2] = v73->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v216.__r_.__value_.__l.__data_ = v74;
  v73->__r_.__value_.__l.__size_ = 0;
  v73->__r_.__value_.__r.__words[2] = 0;
  v73->__r_.__value_.__r.__words[0] = 0;
  unint64_t v75 = std::string::append(&v216, "OR ");
  long long v76 = *(_OWORD *)&v75->__r_.__value_.__l.__data_;
  v217.__r_.__value_.__r.__words[2] = v75->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v217.__r_.__value_.__l.__data_ = v76;
  v75->__r_.__value_.__l.__size_ = 0;
  v75->__r_.__value_.__r.__words[2] = 0;
  v75->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047DFDF >= 0) {
    uint64_t v77 = (const std::string::value_type *)&qword_10047DFC8;
  }
  else {
    uint64_t v77 = (const std::string::value_type *)qword_10047DFC8;
  }
  if (byte_10047DFDF >= 0) {
    std::string::size_type v78 = byte_10047DFDF;
  }
  else {
    std::string::size_type v78 = *(void *)&dword_10047DFD0;
  }
  uint64_t v79 = std::string::append(&v217, v77, v78);
  long long v80 = *(_OWORD *)&v79->__r_.__value_.__l.__data_;
  v219.__r_.__value_.__r.__words[2] = v79->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v219.__r_.__value_.__l.__data_ = v80;
  v79->__r_.__value_.__l.__size_ = 0;
  v79->__r_.__value_.__r.__words[2] = 0;
  v79->__r_.__value_.__r.__words[0] = 0;
  int v81 = std::string::append(&v219, " IS NOT NULL) ");
  long long v82 = *(_OWORD *)&v81->__r_.__value_.__l.__data_;
  v220.__r_.__value_.__r.__words[2] = v81->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v220.__r_.__value_.__l.__data_ = v82;
  v81->__r_.__value_.__l.__size_ = 0;
  v81->__r_.__value_.__r.__words[2] = 0;
  v81->__r_.__value_.__r.__words[0] = 0;
  int v83 = std::string::append(&v220, "AND ");
  long long v84 = *(_OWORD *)&v83->__r_.__value_.__l.__data_;
  v221.__r_.__value_.__r.__words[2] = v83->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v221.__r_.__value_.__l.__data_ = v84;
  v83->__r_.__value_.__l.__size_ = 0;
  v83->__r_.__value_.__r.__words[2] = 0;
  v83->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047E03F >= 0) {
    unsigned int v85 = (const std::string::value_type *)&qword_10047E028;
  }
  else {
    unsigned int v85 = (const std::string::value_type *)qword_10047E028;
  }
  if (byte_10047E03F >= 0) {
    std::string::size_type v86 = byte_10047E03F;
  }
  else {
    std::string::size_type v86 = qword_10047E030;
  }
  long long v87 = std::string::append(&v221, v85, v86);
  long long v88 = *(_OWORD *)&v87->__r_.__value_.__l.__data_;
  v222.__r_.__value_.__r.__words[2] = v87->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v222.__r_.__value_.__l.__data_ = v88;
  v87->__r_.__value_.__l.__size_ = 0;
  v87->__r_.__value_.__r.__words[2] = 0;
  v87->__r_.__value_.__r.__words[0] = 0;
  unsigned int v89 = std::string::append(&v222, " IS NULL ");
  long long v90 = *(_OWORD *)&v89->__r_.__value_.__l.__data_;
  v223.__r_.__value_.__r.__words[2] = v89->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v223.__r_.__value_.__l.__data_ = v90;
  v89->__r_.__value_.__l.__size_ = 0;
  v89->__r_.__value_.__r.__words[2] = 0;
  v89->__r_.__value_.__r.__words[0] = 0;
  long long v91 = std::string::append(&v223, "ORDER BY ");
  long long v92 = *(_OWORD *)&v91->__r_.__value_.__l.__data_;
  v224.__r_.__value_.__r.__words[2] = v91->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v224.__r_.__value_.__l.__data_ = v92;
  v91->__r_.__value_.__l.__size_ = 0;
  v91->__r_.__value_.__r.__words[2] = 0;
  v91->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047DFF7 >= 0) {
    uint64_t v93 = (const std::string::value_type *)&qword_10047DFE0;
  }
  else {
    uint64_t v93 = (const std::string::value_type *)qword_10047DFE0;
  }
  if (byte_10047DFF7 >= 0) {
    std::string::size_type v94 = byte_10047DFF7;
  }
  else {
    std::string::size_type v94 = qword_10047DFE8;
  }
  unsigned int v95 = std::string::append(&v224, v93, v94);
  long long v96 = *(_OWORD *)&v95->__r_.__value_.__l.__data_;
  __dst.__r_.__value_.__r.__words[2] = v95->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v96;
  v95->__r_.__value_.__l.__size_ = 0;
  v95->__r_.__value_.__r.__words[2] = 0;
  v95->__r_.__value_.__r.__words[0] = 0;
  int v97 = std::string::append(&__dst, " DESC, ");
  long long v98 = *(_OWORD *)&v97->__r_.__value_.__l.__data_;
  v227.__r_.__value_.__r.__words[2] = v97->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v227.__r_.__value_.__l.__data_ = v98;
  v97->__r_.__value_.__l.__size_ = 0;
  v97->__r_.__value_.__r.__words[2] = 0;
  v97->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047E027 >= 0) {
    int v99 = (const std::string::value_type *)&xmmword_10047E010;
  }
  else {
    int v99 = (const std::string::value_type *)xmmword_10047E010;
  }
  if (byte_10047E027 >= 0) {
    std::string::size_type v100 = byte_10047E027;
  }
  else {
    std::string::size_type v100 = *((void *)&xmmword_10047E010 + 1);
  }
  char v101 = std::string::append(&v227, v99, v100);
  long long v102 = *(_OWORD *)&v101->__r_.__value_.__l.__data_;
  v218.__r_.__value_.__r.__words[2] = v101->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v218.__r_.__value_.__l.__data_ = v102;
  v101->__r_.__value_.__l.__size_ = 0;
  v101->__r_.__value_.__r.__words[2] = 0;
  v101->__r_.__value_.__r.__words[0] = 0;
  std::string v103 = std::string::append(&v218, " DESC, ");
  long long v104 = *(_OWORD *)&v103->__r_.__value_.__l.__data_;
  v226.__r_.__value_.__r.__words[2] = v103->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v226.__r_.__value_.__l.__data_ = v104;
  v103->__r_.__value_.__l.__size_ = 0;
  v103->__r_.__value_.__r.__words[2] = 0;
  v103->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047E00F >= 0) {
    long long v105 = (const std::string::value_type *)&qword_10047DFF8;
  }
  else {
    long long v105 = (const std::string::value_type *)qword_10047DFF8;
  }
  if (byte_10047E00F >= 0) {
    std::string::size_type v106 = byte_10047E00F;
  }
  else {
    std::string::size_type v106 = unk_10047E000;
  }
  std::string::size_type v107 = std::string::append(&v226, v105, v106);
  long long v108 = *(_OWORD *)&v107->__r_.__value_.__l.__data_;
  *(void *)&v184[16] = *((void *)&v107->__r_.__value_.__l + 2);
  *(_OWORD *)unsigned int v184 = v108;
  v107->__r_.__value_.__l.__size_ = 0;
  v107->__r_.__value_.__r.__words[2] = 0;
  v107->__r_.__value_.__r.__words[0] = 0;
  long long v109 = std::string::append((std::string *)v184, " DESC, ");
  long long v110 = *(_OWORD *)&v109->__r_.__value_.__l.__data_;
  *(void *)&v228[16] = *((void *)&v109->__r_.__value_.__l + 2);
  *(_OWORD *)unsigned int v228 = v110;
  v109->__r_.__value_.__l.__size_ = 0;
  v109->__r_.__value_.__r.__words[2] = 0;
  v109->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047DF7F >= 0) {
    int v111 = (const std::string::value_type *)&qword_10047DF68;
  }
  else {
    int v111 = (const std::string::value_type *)qword_10047DF68;
  }
  if (byte_10047DF7F >= 0) {
    std::string::size_type v112 = byte_10047DF7F;
  }
  else {
    std::string::size_type v112 = *(void *)&byte_10047DF70;
  }
  unsigned int v113 = std::string::append((std::string *)v228, v111, v112);
  long long v114 = *(_OWORD *)&v113->__r_.__value_.__l.__data_;
  std::string::size_type v215 = v113->__r_.__value_.__r.__words[2];
  *(_OWORD *)long long __p = v114;
  v113->__r_.__value_.__l.__size_ = 0;
  v113->__r_.__value_.__r.__words[2] = 0;
  v113->__r_.__value_.__r.__words[0] = 0;
  if ((v228[23] & 0x80000000) != 0)
  {
    operator delete(*(void **)v228);
    if ((v184[23] & 0x80000000) == 0)
    {
LABEL_81:
      if ((SHIBYTE(v226.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_82;
      }
      goto LABEL_239;
    }
  }
  else if ((v184[23] & 0x80000000) == 0)
  {
    goto LABEL_81;
  }
  operator delete(*(void **)v184);
  if ((SHIBYTE(v226.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_82:
    if ((SHIBYTE(v218.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_240;
  }
LABEL_239:
  operator delete(v226.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v218.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_83:
    if ((SHIBYTE(v227.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_241;
  }
LABEL_240:
  operator delete(v218.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v227.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_84:
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_85;
    }
    goto LABEL_242;
  }
LABEL_241:
  operator delete(v227.__r_.__value_.__l.__data_);
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_85:
    if ((SHIBYTE(v224.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_243;
  }
LABEL_242:
  operator delete(__dst.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v224.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_86:
    if ((SHIBYTE(v223.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_244;
  }
LABEL_243:
  operator delete(v224.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v223.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_87:
    if ((SHIBYTE(v222.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_245;
  }
LABEL_244:
  operator delete(v223.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v222.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_88:
    if ((SHIBYTE(v221.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_246;
  }
LABEL_245:
  operator delete(v222.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v221.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_89:
    if ((SHIBYTE(v220.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_247;
  }
LABEL_246:
  operator delete(v221.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v220.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_90:
    if ((SHIBYTE(v219.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_248;
  }
LABEL_247:
  operator delete(v220.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v219.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_91:
    if ((SHIBYTE(v217.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_249;
  }
LABEL_248:
  operator delete(v219.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v217.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_92:
    if ((SHIBYTE(v216.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_250;
  }
LABEL_249:
  operator delete(v217.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v216.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_93:
    if ((SHIBYTE(v213.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_251;
  }
LABEL_250:
  operator delete(v216.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v213.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_94:
    if ((SHIBYTE(v212.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_252;
  }
LABEL_251:
  operator delete(v213.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v212.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_95:
    if ((SHIBYTE(v211.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_253;
  }
LABEL_252:
  operator delete(v212.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v211.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_96:
    if ((SHIBYTE(v210.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_254;
  }
LABEL_253:
  operator delete(v211.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v210.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_97:
    if ((SHIBYTE(v209.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_255;
  }
LABEL_254:
  operator delete(v210.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v209.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_98:
    if ((SHIBYTE(v208.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_256;
  }
LABEL_255:
  operator delete(v209.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v208.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_99:
    if ((SHIBYTE(v207.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_100;
    }
    goto LABEL_257;
  }
LABEL_256:
  operator delete(v208.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v207.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_100:
    if ((SHIBYTE(v206.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_258;
  }
LABEL_257:
  operator delete(v207.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v206.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_101:
    if ((SHIBYTE(v205.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_102;
    }
    goto LABEL_259;
  }
LABEL_258:
  operator delete(v206.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v205.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_102:
    if ((SHIBYTE(v204.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_260;
  }
LABEL_259:
  operator delete(v205.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v204.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_103:
    if ((SHIBYTE(v203.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_104;
    }
    goto LABEL_261;
  }
LABEL_260:
  operator delete(v204.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v203.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_104:
    if ((SHIBYTE(v202.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_105;
    }
    goto LABEL_262;
  }
LABEL_261:
  operator delete(v203.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v202.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_105:
    if ((SHIBYTE(v201.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_106;
    }
    goto LABEL_263;
  }
LABEL_262:
  operator delete(v202.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v201.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_106:
    if ((SHIBYTE(v200.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_107;
    }
    goto LABEL_264;
  }
LABEL_263:
  operator delete(v201.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v200.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_107:
    if ((SHIBYTE(v199.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_108;
    }
    goto LABEL_265;
  }
LABEL_264:
  operator delete(v200.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v199.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_108:
    if ((SHIBYTE(v198.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_109;
    }
    goto LABEL_266;
  }
LABEL_265:
  operator delete(v199.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v198.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_109:
    if ((SHIBYTE(v197.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_110;
    }
    goto LABEL_267;
  }
LABEL_266:
  operator delete(v198.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v197.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_110:
    if ((SHIBYTE(v196.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_111;
    }
    goto LABEL_268;
  }
LABEL_267:
  operator delete(v197.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v196.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_111:
    if ((SHIBYTE(v195.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_112;
    }
    goto LABEL_269;
  }
LABEL_268:
  operator delete(v196.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v195.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_112:
    if ((SHIBYTE(v194.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_113;
    }
    goto LABEL_270;
  }
LABEL_269:
  operator delete(v195.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v194.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_113:
    if ((SHIBYTE(v193.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_114;
    }
    goto LABEL_271;
  }
LABEL_270:
  operator delete(v194.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v193.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_114:
    if ((SHIBYTE(v192.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_115;
    }
    goto LABEL_272;
  }
LABEL_271:
  operator delete(v193.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v192.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_115:
    if ((SHIBYTE(v191.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_116;
    }
    goto LABEL_273;
  }
LABEL_272:
  operator delete(v192.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v191.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_116:
    if ((SHIBYTE(v190.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_117;
    }
    goto LABEL_274;
  }
LABEL_273:
  operator delete(v191.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v190.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_117:
    if ((SHIBYTE(v189.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_118;
    }
    goto LABEL_275;
  }
LABEL_274:
  operator delete(v190.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v189.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_118:
    if ((SHIBYTE(v188.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_119;
    }
    goto LABEL_276;
  }
LABEL_275:
  operator delete(v189.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v188.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_119:
    if ((SHIBYTE(v187.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_120;
    }
LABEL_277:
    operator delete(v187.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v186.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_121;
    }
LABEL_278:
    operator delete(v186.__r_.__value_.__l.__data_);
    goto LABEL_121;
  }
LABEL_276:
  operator delete(v188.__r_.__value_.__l.__data_);
  if (SHIBYTE(v187.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_277;
  }
LABEL_120:
  if (SHIBYTE(v186.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_278;
  }
LABEL_121:
  *a3 = 0;
  a3[1] = 0;
  unsigned int v178 = a3;
  a3[2] = 0;
  memset(v184, 0, sizeof(v184));
  int v185 = 1065353216;
  sub_100203080(*(sqlite3 ***)(a1 + 40), (uint64_t)__p, 0, (uint64_t)&v213);
  unsigned int v115 = 0;
  long long v116 = 0;
  uint64_t v180 = 0;
  BOOL v181 = 0;
  int v179 = 0;
  uint64_t v182 = 0;
  uint64_t v183 = 0;
  unsigned int v117 = (sqlite3_stmt *)v213.__r_.__value_.__r.__words[0];
  v209.__r_.__value_.__r.__words[0] = v213.__r_.__value_.__r.__words[0];
  std::string v118 = a2;
  while (1)
  {
    int v119 = sqlite3_step(v117);
    int v120 = v119;
    if (v119 != 100) {
      break;
    }
    sub_100217FD4((sqlite3_stmt **)&v209, (uint64_t)v228);
    std::string v226 = *(std::string *)&v228[8];
    sub_10008630C((sqlite3_stmt **)&v209, (uint64_t)v228);
    std::string v218 = *(std::string *)&v228[8];
    if (sqlite3_column_type((sqlite3_stmt *)v209.__r_.__value_.__l.__data_, 2) == 5)
    {
      int v121 = 0;
      goto LABEL_133;
    }
    int v122 = sqlite3_column_int((sqlite3_stmt *)v209.__r_.__value_.__l.__data_, 2);
    int v121 = v122;
    if (v122 != 1)
    {
      if (v122 != 2)
      {
LABEL_133:
        if (qword_10047BF08 == -1)
        {
          std::string v123 = qword_10047BF10;
          if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR)) {
            goto LABEL_135;
          }
        }
        else
        {
          dispatch_once(&qword_10047BF08, &stru_100460658);
          std::string v123 = qword_10047BF10;
          if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR))
          {
LABEL_135:
            *(_DWORD *)unsigned int v228 = 67109120;
            *(_DWORD *)&v228[4] = v121;
            _os_log_impl((void *)&_mh_execute_header, v123, OS_LOG_TYPE_ERROR, "location context is an unknown value, %d, will gracefully fail by assuming this is a regional tile. please file a radar", v228, 8u);
          }
        }
      }
      int v124 = 0;
      goto LABEL_137;
    }
    int v124 = 1;
LABEL_137:
    if (sqlite3_column_type((sqlite3_stmt *)v209.__r_.__value_.__l.__data_, 3) == 5) {
      int v125 = 0;
    }
    else {
      int v125 = sqlite3_column_int((sqlite3_stmt *)v209.__r_.__value_.__l.__data_, 3);
    }
    if (sqlite3_column_type((sqlite3_stmt *)v209.__r_.__value_.__l.__data_, 4) == 5) {
      uint64_t v126 = 0;
    }
    else {
      uint64_t v126 = ((uint64_t)sqlite3_column_int((sqlite3_stmt *)v209.__r_.__value_.__l.__data_, 4) << 32) | 1;
    }
    if (v124) {
      int v127 = 73;
    }
    else {
      int v127 = 82;
    }
    if ((_BYTE)v126) {
      int v128 = HIDWORD(v126);
    }
    else {
      int v128 = 0;
    }
    if (v124)
    {
      BOOL v129 = (int)v183 >= (int)sub_10009C188(v118);
      HIDWORD(v182) += v128;
      LODWORD(v183) = v183 + 1;
      BOOL v130 = SHIDWORD(v182) > (int)sub_10009BF30((uint64_t)v118);
      if (v129) {
        goto LABEL_154;
      }
    }
    else
    {
      BOOL v129 = SHIDWORD(v183) >= (int)sub_10009C05C((uint64_t)v118);
      LODWORD(v182) = v128 + v182;
      BOOL v130 = (int)v182 > (int)sub_10009BE04((uint64_t)v118);
      ++HIDWORD(v183);
      if (v129) {
        goto LABEL_154;
      }
    }
    if (!v130) {
      goto LABEL_155;
    }
LABEL_154:
    if (sub_10021D728(v184, (uint64_t)&v218))
    {
LABEL_155:
      sub_1000DEF30((uint64_t)v184, (uint64_t)&v218, (uint64_t)&v218);
      int v131 = 0;
      if (qword_10047BEF8 == -1) {
        goto LABEL_156;
      }
      goto LABEL_193;
    }
    int v135 = HIDWORD(v180);
    int v136 = v179;
    if (v124) {
      int v137 = v179;
    }
    else {
      int v137 = HIDWORD(v180);
    }
    if (v124) {
      int v136 = v137 + 1;
    }
    int v179 = v136;
    if (!v124) {
      int v135 = v137 + 1;
    }
    HIDWORD(v180) = v135;
    if (v181 < v116)
    {
      *(void *)BOOL v181 = v125;
      std::string v138 = v181 + 8;
      goto LABEL_192;
    }
    uint64_t v139 = (v181 - v115) >> 3;
    unint64_t v140 = v139 + 1;
    if ((unint64_t)(v139 + 1) >> 61) {
      sub_1000A9108();
    }
    if ((v116 - v115) >> 2 > v140) {
      unint64_t v140 = (v116 - v115) >> 2;
    }
    if ((unint64_t)(v116 - v115) >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v141 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v141 = v140;
    }
    if (v141)
    {
      if (v141 >> 61) {
        sub_1000A6A10();
      }
      unint64_t v142 = v141;
      long long v143 = operator new(8 * v141);
      unint64_t v141 = v142;
    }
    else
    {
      long long v143 = 0;
    }
    int v144 = &v143[8 * v139];
    *(void *)int v144 = v125;
    std::string v138 = v144 + 8;
    if (v181 != v115)
    {
      unint64_t v145 = v181 - 8 - v115;
      if (v145 >= 0x168)
      {
        if (&v143[v181 - v115 - 8 - (v145 & 0xFFFFFFFFFFFFFFF8)] > &v143[v181 - v115 - 8])
        {
          long long v146 = v181;
        }
        else if (&v181[-(v145 & 0xFFFFFFFFFFFFFFF8) - 8] > v181 - 8)
        {
          long long v146 = v181;
        }
        else if ((unint64_t)(v115 - v143) >= 0x20)
        {
          uint64_t v148 = (v145 >> 3) + 1;
          uint64_t v149 = 8 * (v148 & 0x3FFFFFFFFFFFFFFCLL);
          long long v146 = &v181[-v149];
          v144 -= v149;
          uint64_t v150 = &v143[8 * v139 - 16];
          char v151 = v181 - 16;
          uint64_t v152 = v148 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            long long v153 = *(_OWORD *)v151;
            *(v150 - 1) = *((_OWORD *)v151 - 1);
            _OWORD *v150 = v153;
            v150 -= 2;
            v151 -= 32;
            v152 -= 4;
          }
          while (v152);
          if (v148 == (v148 & 0x3FFFFFFFFFFFFFFCLL)) {
            goto LABEL_189;
          }
        }
        else
        {
          long long v146 = v181;
        }
      }
      else
      {
        long long v146 = v181;
      }
      do
      {
        uint64_t v147 = *((void *)v146 - 1);
        v146 -= 8;
        *((void *)v144 - 1) = v147;
        v144 -= 8;
      }
      while (v146 != v115);
    }
LABEL_189:
    long long v116 = &v143[8 * v141];
    *unsigned int v178 = v144;
    v178[1] = v138;
    v178[2] = v116;
    if (v115) {
      operator delete(v115);
    }
    unsigned int v115 = v144;
    std::string v118 = a2;
LABEL_192:
    LODWORD(v180) = v180 + (v124 ^ 1);
    v178[1] = v138;
    int v131 = 1;
    BOOL v181 = v138;
    if (qword_10047BEF8 == -1)
    {
LABEL_156:
      std::string v132 = qword_10047BF00;
      if (os_log_type_enabled((os_log_t)qword_10047BF00, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_157;
      }
      goto LABEL_162;
    }
LABEL_193:
    dispatch_once(&qword_10047BEF8, &stru_100460D30);
    std::string v132 = qword_10047BF00;
    if (os_log_type_enabled((os_log_t)qword_10047BF00, OS_LOG_TYPE_DEFAULT))
    {
LABEL_157:
      std::string v133 = &v218;
      if ((v218.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string v133 = (std::string *)v218.__r_.__value_.__r.__words[0];
      }
      std::string v134 = &v226;
      if ((v226.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string v134 = (std::string *)v226.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)unsigned int v228 = 67241475;
      *(_DWORD *)&v228[4] = v131;
      *(_WORD *)&v228[8] = 2081;
      *(void *)&v228[10] = v133;
      *(_WORD *)&v228[18] = 2081;
      *(void *)&v228[20] = v134;
      *(_WORD *)&v228[28] = 1026;
      *(_DWORD *)&v228[30] = v127;
      __int16 v229 = 1026;
      BOOL v230 = v129;
      __int16 v231 = 1026;
      BOOL v232 = v130;
      _os_log_impl((void *)&_mh_execute_header, v132, OS_LOG_TYPE_DEFAULT, "@EvictTrigger, limits, exec, %{public}d, %{private}s, %{private}s, %{public}c, untouched, -1, reasons, %{public}d, %{public}d", v228, 0x2Eu);
    }
LABEL_162:
    if (SHIBYTE(v218.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v218.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v226.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_123;
      }
    }
    else if ((SHIBYTE(v226.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_123;
    }
    operator delete(v226.__r_.__value_.__l.__data_);
LABEL_123:
    unsigned int v117 = (sqlite3_stmt *)v213.__r_.__value_.__r.__words[0];
  }
  if (v119 != 101)
  {
    if (v119 == 19)
    {
      if (qword_10047BF08 == -1)
      {
        uint64_t v162 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO)) {
          goto LABEL_285;
        }
      }
      else
      {
        dispatch_once(&qword_10047BF08, &stru_100460658);
        uint64_t v162 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO))
        {
LABEL_285:
          *(_WORD *)unsigned int v228 = 0;
          _os_log_impl((void *)&_mh_execute_header, v162, OS_LOG_TYPE_INFO, "Query constraint violation", v228, 2u);
        }
      }
      __cxa_allocate_exception(0x40uLL);
      v218.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
      *(_OWORD *)&v218.__r_.__value_.__r.__words[1] = xmmword_1003F6340;
      strcpy(v218.__r_.__value_.__l.__data_, "Constraint violation stepping through statement");
      std::runtime_error::runtime_error((std::runtime_error *)&v224, &v218);
      v224.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100460ED8;
      sub_10018E868((uint64_t)&v227);
      sub_10020E390((std::runtime_error *)&v224, (uint64_t)"auto db::resources::statement<5, 0>::run((lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:1009:19) &&)::(anonymous class)::operator()() const [nCols = 5, nQueries = 0, ColumnNumberType = unsigned long]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 486, (uint64_t)&v227);
    }
    sub_100088644(v119, (sqlite3 *)v213.__r_.__value_.__l.__size_);
    if (v120)
    {
      unint64_t v163 = __error();
      sub_100295674(*v163, &__dst);
      __cxa_allocate_exception(0x40uLL);
      *((unsigned char *)&v222.__r_.__value_.__s + 23) = 4;
      strcpy((char *)&v222, " w/ ");
      unsigned int v164 = std::string::insert(&v222, 0, "Failed sqlite3_step");
      long long v165 = *(_OWORD *)&v164->__r_.__value_.__l.__data_;
      v223.__r_.__value_.__r.__words[2] = v164->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v223.__r_.__value_.__l.__data_ = v165;
      v164->__r_.__value_.__l.__size_ = 0;
      v164->__r_.__value_.__r.__words[2] = 0;
      v164->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        sub_1000559FC(&v221, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
      }
      else {
        std::string v221 = __dst;
      }
      if ((v221.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v166 = &v221;
      }
      else {
        int v166 = (std::string *)v221.__r_.__value_.__r.__words[0];
      }
      if ((v221.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v221.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v221.__r_.__value_.__l.__size_;
      }
      unsigned int v168 = std::string::append(&v223, (const std::string::value_type *)v166, size);
      long long v169 = *(_OWORD *)&v168->__r_.__value_.__l.__data_;
      v224.__r_.__value_.__r.__words[2] = v168->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v224.__r_.__value_.__l.__data_ = v169;
      v168->__r_.__value_.__l.__size_ = 0;
      v168->__r_.__value_.__r.__words[2] = 0;
      v168->__r_.__value_.__r.__words[0] = 0;
      std::runtime_error::runtime_error((std::runtime_error *)&v212, &v224);
      v212.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100460B68;
      sub_10018E868((uint64_t)&v220);
      sub_100204FC4((std::runtime_error *)&v212, (uint64_t)"void db::resources::statement<5, 0>::run(Cb &&, ConstraintHandler &&) [nCols = 5, nQueries = 0, ColumnNumberType = unsigned long, Cb = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:1009:19), ConstraintHandler = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h:485:43)]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 512, (uint64_t)&v220);
    }
    goto LABEL_123;
  }
  int v154 = sqlite3_reset((sqlite3_stmt *)v213.__r_.__value_.__l.__data_);
  sub_100088644(v154, (sqlite3 *)v213.__r_.__value_.__l.__size_);
  if (v154)
  {
    unsigned int v170 = __error();
    sub_100295674(*v170, &__dst);
    __cxa_allocate_exception(0x40uLL);
    *((unsigned char *)&v222.__r_.__value_.__s + 23) = 4;
    strcpy((char *)&v222, " w/ ");
    BOOL v171 = std::string::insert(&v222, 0, "Failed to execute query");
    long long v172 = *(_OWORD *)&v171->__r_.__value_.__l.__data_;
    v223.__r_.__value_.__r.__words[2] = v171->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v223.__r_.__value_.__l.__data_ = v172;
    v171->__r_.__value_.__l.__size_ = 0;
    v171->__r_.__value_.__r.__words[2] = 0;
    v171->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&v221, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
    }
    else {
      std::string v221 = __dst;
    }
    if ((v221.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      BOOL v173 = &v221;
    }
    else {
      BOOL v173 = (std::string *)v221.__r_.__value_.__r.__words[0];
    }
    if ((v221.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v174 = HIBYTE(v221.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v174 = v221.__r_.__value_.__l.__size_;
    }
    BOOL v175 = std::string::append(&v223, (const std::string::value_type *)v173, v174);
    long long v176 = *(_OWORD *)&v175->__r_.__value_.__l.__data_;
    v224.__r_.__value_.__r.__words[2] = v175->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v224.__r_.__value_.__l.__data_ = v176;
    v175->__r_.__value_.__l.__size_ = 0;
    v175->__r_.__value_.__r.__words[2] = 0;
    v175->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error((std::runtime_error *)&v212, &v224);
    v212.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100460B68;
    sub_10018E868((uint64_t)&v220);
    sub_100204FC4((std::runtime_error *)&v212, (uint64_t)"void db::resources::statement<5, 0>::run(Cb &&, ConstraintHandler &&) [nCols = 5, nQueries = 0, ColumnNumberType = unsigned long, Cb = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:1009:19), ConstraintHandler = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h:485:43)]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 518, (uint64_t)&v220);
  }
  if (qword_10047BEF8 != -1) {
    dispatch_once(&qword_10047BEF8, &stru_100460D30);
  }
  int v155 = (id)qword_10047BF00;
  if (os_log_type_enabled(v155, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)unsigned int v228 = 67240960;
    *(_DWORD *)&v228[4] = v179;
    *(_WORD *)&v228[8] = 1026;
    *(_DWORD *)&v228[10] = v183;
    *(_WORD *)&v228[14] = 1026;
    *(_DWORD *)&v228[16] = v180;
    *(_WORD *)&v228[20] = 1026;
    *(_DWORD *)&v228[22] = HIDWORD(v183);
    _os_log_impl((void *)&_mh_execute_header, v155, OS_LOG_TYPE_DEFAULT, "@EvictTrigger, limits, result, indoor, %{public}d, %{public}d, regional, %{public}d, %{public}d", v228, 0x1Au);
  }

  if (v180)
  {
    if (qword_10047BEF8 != -1) {
      dispatch_once(&qword_10047BEF8, &stru_100460D30);
    }
    int v156 = (id)qword_10047BF00;
    if (os_log_type_enabled(v156, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)unsigned int v228 = 67240704;
      *(_DWORD *)&v228[4] = v180;
      *(_WORD *)&v228[8] = 1026;
      *(_DWORD *)&v228[10] = HIDWORD(v180);
      *(_WORD *)&v228[14] = 1026;
      *(_DWORD *)&v228[16] = 100 * HIDWORD(v180) / (int)v180;
      _os_log_impl((void *)&_mh_execute_header, v156, OS_LOG_TYPE_DEFAULT, "Wifi2Metric, eviction, %{public}d, untouched, %{public}d, pct, %{public}d, trigger, limits", v228, 0x14u);
    }

    AnalyticsSendEventLazy();
  }
  if (qword_10047BF08 != -1) {
    dispatch_once(&qword_10047BF08, &stru_100460658);
  }
  int v157 = (id)qword_10047BF10;
  if (!os_log_type_enabled(v157, OS_LOG_TYPE_DEBUG)) {
    goto LABEL_228;
  }
  *((unsigned char *)&v218.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v218, ", ");
  sub_100319634((char *)&v218, (uint64_t)v228);
  __dst.__r_.__value_.__r.__words[0] = *(void *)&v184[16];
  v224.__r_.__value_.__r.__words[0] = 0;
  sub_10021D958((uint64_t)v228, (uint64_t **)&__dst, (uint64_t **)&v224);
  if ((v226.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v158 = &v226;
  }
  else {
    uint64_t v158 = (std::string *)v226.__r_.__value_.__r.__words[0];
  }
  LODWORD(v227.__r_.__value_.__l.__data_) = 136380675;
  *(std::string::size_type *)((char *)v227.__r_.__value_.__r.__words + 4) = (std::string::size_type)v158;
  _os_log_impl((void *)&_mh_execute_header, v157, OS_LOG_TYPE_DEBUG, "Relevant Group ids which were not considered for deletion, %{private}s", (uint8_t *)&v227, 0xCu);
  if ((SHIBYTE(v226.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((v233 & 0x80000000) == 0) {
      goto LABEL_226;
    }
LABEL_280:
    operator delete(*(void **)&v228[24]);
    if ((v228[23] & 0x80000000) != 0) {
      goto LABEL_281;
    }
LABEL_227:
    if ((SHIBYTE(v218.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_228;
    }
LABEL_282:
    operator delete(v218.__r_.__value_.__l.__data_);
    goto LABEL_228;
  }
  operator delete(v226.__r_.__value_.__l.__data_);
  if (v233 < 0) {
    goto LABEL_280;
  }
LABEL_226:
  if ((v228[23] & 0x80000000) == 0) {
    goto LABEL_227;
  }
LABEL_281:
  operator delete(*(void **)v228);
  if (SHIBYTE(v218.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_282;
  }
LABEL_228:

  sub_10021D540((uint64_t)&v213);
  int v159 = *(void ***)&v184[16];
  if (*(void *)&v184[16])
  {
    do
    {
      int v161 = (void **)*v159;
      if (*((char *)v159 + 39) < 0) {
        operator delete(v159[2]);
      }
      operator delete(v159);
      int v159 = v161;
    }
    while (v161);
  }
  int v160 = *(void **)v184;
  *(void *)unsigned int v184 = 0;
  if (v160) {
    operator delete(v160);
  }
  if (SHIBYTE(v215) < 0) {
    operator delete(__p[0]);
  }
}

void sub_100202324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27)
{
  std::runtime_error::~runtime_error(v27);
  *(void *)(v31 - 208) = v30;
  if (*(char *)(v31 - 177) < 0)
  {
    operator delete(*(void **)(v31 - 200));
    if ((SLOBYTE(STACK[0x467]) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else if ((SLOBYTE(STACK[0x467]) & 0x80000000) == 0)
  {
LABEL_3:
    STACK[0x490] = v29;
    if (SLOBYTE(STACK[0x4AF]) < 0) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
  operator delete((void *)STACK[0x450]);
  STACK[0x490] = v29;
  if (SLOBYTE(STACK[0x4AF]) < 0)
  {
LABEL_4:
    operator delete((void *)STACK[0x498]);
    if ((SLOBYTE(STACK[0x487]) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  if ((SLOBYTE(STACK[0x487]) & 0x80000000) == 0)
  {
LABEL_5:
    *(void *)(v31 - 240) = v28;
    if (*(char *)(v31 - 209) < 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete((void *)STACK[0x470]);
  *(void *)(v31 - 240) = v28;
  if (*(char *)(v31 - 209) < 0)
  {
LABEL_6:
    operator delete(*(void **)(v31 - 232));
    if ((SLOBYTE(STACK[0x4C7]) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  if ((SLOBYTE(STACK[0x4C7]) & 0x80000000) == 0)
  {
LABEL_7:
    *(void *)(v31 - 160) = &off_100451DC0;
    uint64_t v33 = *(void *)(v31 - 152);
    if (!v33) {
      goto LABEL_17;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete((void *)STACK[0x4B0]);
  *(void *)(v31 - 160) = &off_100451DC0;
  uint64_t v33 = *(void *)(v31 - 152);
  if (!v33) {
    goto LABEL_17;
  }
LABEL_15:
  if ((*(unsigned int (**)(uint64_t))(*(void *)v33 + 32))(v33)) {
    *(void *)(v31 - 152) = 0;
  }
LABEL_17:
  std::runtime_error::~runtime_error((std::runtime_error *)(v31 - 176));
  long long v34 = (void *)STACK[0x4D0];
  if (STACK[0x4D0])
  {
    STACK[0x4D8] = (unint64_t)v34;
    operator delete(v34);
  }
  std::runtime_error::~runtime_error((std::runtime_error *)&STACK[0x3F0]);
  if (SLOBYTE(STACK[0x567]) < 0) {
    operator delete((void *)STACK[0x550]);
  }
  if (SLOBYTE(STACK[0x507]) < 0) {
    operator delete((void *)STACK[0x4F0]);
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete((void *)STACK[0x530]);
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete((void *)STACK[0x510]);
  }
  __cxa_free_exception(v27);
  if (SLOBYTE(STACK[0x587]) < 0) {
    operator delete((void *)STACK[0x570]);
  }
  sub_10020379C((uint64_t)&STACK[0x410]);
  sub_1000D8E98((uint64_t)&a27);
  long long v35 = *(void **)a10;
  if (*(void *)a10)
  {
    *(void *)(a10 + 8) = v35;
    operator delete(v35);
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete((void *)STACK[0x430]);
  }
  _Unwind_Resume(a1);
}

void sub_100203080(sqlite3 **a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  long long v8 = a3;
  int v9 = v8;
  if (v8) {
    os_activity_scope_enter(v8, &state);
  }
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  objc_storeStrong((id *)(a4 + 16), a3);
  int v10 = *(char *)(a2 + 23);
  if (v10 >= 0) {
    int v11 = (const char *)a2;
  }
  else {
    int v11 = *(const char **)a2;
  }
  if (v10 >= 0) {
    int v12 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    int v12 = *(_DWORD *)(a2 + 8);
  }
  int v13 = sqlite3_prepare_v2(*a1, v11, v12, (sqlite3_stmt **)a4, 0);
  sub_100088644(v13, *a1);
  if (v13)
  {
    long long v14 = __error();
    sub_100295674(*v14, &v27);
    __cxa_allocate_exception(0x40uLL);
    sub_1000AE4B0(&v23, " w/ ");
    std::string::size_type v15 = std::string::insert(&v23, 0, "Failed to prepare query");
    long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    v24.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v16;
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    v15->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&__dst, v27.__r_.__value_.__l.__data_, v27.__r_.__value_.__l.__size_);
    }
    else {
      std::string __dst = v27;
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_dst = &__dst;
    }
    else {
      p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __dst.__r_.__value_.__l.__size_;
    }
    long long v19 = std::string::append(&v24, (const std::string::value_type *)p_dst, size);
    long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v25.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v26, &v25);
    v26.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v21);
    sub_100204FC4(&v26, (uint64_t)"statement<nCols, nQueries, ColumnNumberType> db::resources::handle::prepare(const std::string &, __strong os_activity_t) const [nCols = 5UL, nQueries = 0UL, ColumnNumberType = unsigned long]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 633, (uint64_t)v21);
  }
  *(void *)(a4 + 8) = *a1;
  if (v9) {
    os_activity_scope_leave(&state);
  }
}

void sub_1002033D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,void *a62,uint64_t a63)
{
  if (a22 < 0)
  {
    operator delete(__p);
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a35 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a10);
  if ((a35 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a28 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a30);
  if ((a28 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a42 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a23);
  if ((a42 & 0x80000000) == 0)
  {
LABEL_6:
    sub_100205504((std::runtime_error *)(v71 - 184));
    uint64_t v73 = a47;
    if (!a47)
    {
LABEL_14:
      std::runtime_error::~runtime_error((std::runtime_error *)(v71 - 200));
      if (*(char *)(v71 - 201) < 0)
      {
        operator delete(*(void **)(v71 - 224));
        if ((a55 & 0x80000000) == 0)
        {
LABEL_16:
          if ((a67 & 0x80000000) == 0) {
            goto LABEL_17;
          }
          goto LABEL_22;
        }
      }
      else if ((a55 & 0x80000000) == 0)
      {
        goto LABEL_16;
      }
      operator delete(a50);
      if ((a67 & 0x80000000) == 0)
      {
LABEL_17:
        if (a61 < 0) {
          goto LABEL_18;
        }
        goto LABEL_23;
      }
LABEL_22:
      operator delete(a62);
      if (a61 < 0)
      {
LABEL_18:
        operator delete(a56);
        if ((v70 & 1) == 0)
        {
LABEL_25:
          if (*(char *)(v71 - 97) < 0)
          {
            operator delete(*(void **)(v71 - 120));
            sub_10020379C(v68);

            _Unwind_Resume(a1);
          }
          sub_10020379C(v68);

          _Unwind_Resume(a1);
        }
LABEL_24:
        __cxa_free_exception(v69);
        goto LABEL_25;
      }
LABEL_23:
      if (!v70) {
        goto LABEL_25;
      }
      goto LABEL_24;
    }
LABEL_13:
    operator delete(v73);
    goto LABEL_14;
  }
LABEL_12:
  operator delete(a37);
  sub_100205504((std::runtime_error *)(v71 - 184));
  uint64_t v73 = a47;
  if (!a47) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

id sub_10020364C(unsigned int *a1)
{
  v7[0] = @"numEvicted";
  uint64_t v2 = +[NSNumber numberWithInt:a1[8]];
  v8[0] = v2;
  v7[1] = @"numUntouched";
  uint64_t v3 = +[NSNumber numberWithInt:a1[9]];
  v8[1] = v3;
  v7[2] = @"pctUntouched";
  uint64_t v4 = +[NSNumber numberWithInt:a1[10]];
  v7[3] = @"trigger";
  uint64_t v8[2] = v4;
  void v8[3] = @"limits";
  long long v5 = +[NSDictionary dictionaryWithObjects:v8 forKeys:v7 count:4];

  return v5;
}

void sub_10020376C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10020379C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1002037D0(uint64_t a1)
{
  return a1;
}

void sub_100203804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5[2] = a1;
  uint64_t v6 = a2;
  v5[0] = a3;
  v5[1] = &v6;
  uint64_t v3 = *(id *)(a1 + 32);
  uint64_t v4 = std::promise<void>::promise(&v9);
  std::promise<void>::get_future(v4);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10020B0A8;
  block[3] = &unk_100460678;
  block[4] = v5;
  void block[5] = &v9;
  dispatch_sync(v3, block);
  std::future<void>::get(&v8);
  std::future<void>::~future(&v8);
  std::promise<void>::~promise(&v9);
}

void sub_1002038D0(_Unwind_Exception *a1)
{
  std::future<void>::~future((std::future<void> *)(v2 - 32));
  std::promise<void>::~promise((std::promise<void> *)(v2 - 24));

  _Unwind_Resume(a1);
}

void sub_1002038FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100203910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v6[3] = a4;
  uint64_t v7 = a2;
  v6[0] = a3;
  v6[1] = &v7;
  v6[2] = a1;
  uint64_t v4 = *(id *)(a1 + 32);
  long long v5 = std::promise<void>::promise(&v10);
  std::promise<void>::get_future(v5);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10020FF3C;
  block[3] = &unk_100460678;
  block[4] = v6;
  void block[5] = &v10;
  dispatch_sync(v4, block);
  std::future<void>::get(&v9);
  std::future<void>::~future(&v9);
  std::promise<void>::~promise(&v10);
}

void sub_1002039E0(_Unwind_Exception *a1)
{
  std::future<void>::~future((std::future<void> *)(v2 - 32));
  std::promise<void>::~promise((std::promise<void> *)(v2 - 24));

  _Unwind_Resume(a1);
}

void sub_100203A0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100203A20(uint64_t a1)
{
  uint64_t v2 = a1;
  id v1 = *(id *)(a1 + 32);
  operator new();
}

void sub_100203BC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  if (!atomic_fetch_add(v10, 0xFFFFFFFFFFFFFFFFLL)) {
    (*(void (**)(uint64_t))(*(void *)v9 + 16))(v9);
  }
  sub_10021579C((uint64_t *)va);

  _Unwind_Resume(a1);
}

void sub_100203C30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100203C44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = a2;
  id v2 = *(id *)(a1 + 32);
  operator new();
}

void sub_100203DEC(_Unwind_Exception *a1)
{
  if (!atomic_fetch_add(v3, 0xFFFFFFFFFFFFFFFFLL)) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  sub_10021602C((uint64_t *)(v4 - 56));

  _Unwind_Resume(a1);
}

void sub_100203E54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100203E68(uint64_t a1)
{
  uint64_t v2 = a1;
  id v1 = *(id *)(a1 + 32);
  operator new();
}

void sub_100204010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  if (!atomic_fetch_add(v10, 0xFFFFFFFFFFFFFFFFLL)) {
    (*(void (**)(uint64_t))(*(void *)v9 + 16))(v9);
  }
  sub_1002181B8((uint64_t *)va);

  _Unwind_Resume(a1);
}

void sub_100204078(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10020408C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = a2;
  uint64_t v6 = a3;
  id v3 = *(id *)(a1 + 32);
  operator new();
}

void sub_100204238(_Unwind_Exception *a1)
{
  if (!atomic_fetch_add(v3, 0xFFFFFFFFFFFFFFFFLL)) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  sub_100218A08((uint64_t *)(v4 - 56));

  _Unwind_Resume(a1);
}

void sub_1002042A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002042B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5[0] = a1;
  v5[1] = a2;
  v5[2] = a3;
  id v3 = *(id *)(a1 + 32);
  uint64_t v4 = std::promise<void>::promise(&v8);
  std::promise<void>::get_future(v4);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100218B64;
  block[3] = &unk_100460678;
  block[4] = v5;
  void block[5] = &v8;
  dispatch_sync(v3, block);
  std::future<void>::get(&v7);
  std::future<void>::~future(&v7);
  std::promise<void>::~promise(&v8);
}

void sub_10020437C(_Unwind_Exception *a1)
{
  std::future<void>::~future((std::future<void> *)(v2 - 32));
  std::promise<void>::~promise((std::promise<void> *)(v2 - 24));

  _Unwind_Resume(a1);
}

void sub_1002043A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1002043BC(uint64_t a1, uint64_t a2)
{
  v4[0] = a1;
  v4[1] = a2;
  uint64_t v2 = *(id *)(a1 + 32);
  id v3 = std::promise<void>::promise(&v7);
  std::promise<void>::get_future(v3);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100218EFC;
  block[3] = &unk_100460678;
  block[4] = v4;
  void block[5] = &v7;
  dispatch_sync(v2, block);
  std::future<void>::get(&v6);
  std::future<void>::~future(&v6);
  std::promise<void>::~promise(&v7);
}

void sub_100204480(_Unwind_Exception *a1)
{
  std::future<void>::~future((std::future<void> *)(v2 - 32));
  std::promise<void>::~promise((std::promise<void> *)(v2 - 24));

  _Unwind_Resume(a1);
}

void sub_1002044AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

sqlite3_blob **sub_1002044C0@<X0>(uint64_t a1@<X0>, sqlite3_int64 a2@<X1>, _DWORD *a3@<X8>)
{
  sub_10007DE30(*(sqlite3 ***)(a1 + 40), "tile_data", "tiles", a2, 1, &v12);
  uint64_t v5 = operator new(0x80uLL);
  v5[1] = 0;
  v5[2] = 0;
  void *v5 = off_100461550;
  std::future<void> v6 = *(void **)(a1 + 32);
  std::promise<void> v7 = v12;
  int v12 = 0;
  int v13 = v7;
  sub_10021DE38((uint64_t)(v5 + 3), v6, &v13);
  sub_100215964(&v13);
  v11.n128_u64[0] = (unint64_t)(v5 + 3);
  v11.n128_u64[1] = (unint64_t)v5;
  __n128 v8 = sub_10031B94C(a3, &v11);
  uint64_t v9 = (std::__shared_weak_count *)v11.n128_u64[1];
  if (v11.n128_u64[1] && !atomic_fetch_add((atomic_ullong *volatile)(v11.n128_u64[1] + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *, __n128))v9->__on_zero_shared)(v9, v8);
    std::__shared_weak_count::__release_weak(v9);
  }
  return sub_100215964(&v12);
}

void sub_10020461C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, sqlite3_blob *a13)
{
}

void sub_100204640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va1, a5);
  va_start(va, a5);
  __n128 v8 = va_arg(va1, sqlite3_blob *);
  sub_100215964((sqlite3_blob **)va1);
  std::__shared_weak_count::~__shared_weak_count(v5);
  operator delete(v7);
  sub_100215964((sqlite3_blob **)va);
  _Unwind_Resume(a1);
}

void sub_100204668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100215964((sqlite3_blob **)va);
  _Unwind_Resume(a1);
}

void sub_10020467C(std::runtime_error *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  std::runtime_error::runtime_error(&v12, a1);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  int v17 = -1;
  v12.__vftable = (std::runtime_error_vtbl *)off_100461158;
  int v13 = off_100461180;
  sub_1002194AC((uint64_t)&v18, (uint64_t)&v12);
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  int v21 = a4;
  uint64_t v9 = *(const void **)a5;
  size_t v10 = *(void *)(a5 + 8) - *(void *)a5;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0) {
      sub_1000A9108();
    }
    long long __p = operator new(v10);
    memcpy(__p, v9, v10);
  }
  sub_100219150();
}

void sub_100204988(void *a1)
{
  std::runtime_error::~runtime_error(v1);
  sub_1000A6954(a1);
}

void sub_10020499C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    operator delete(__p);
    sub_1000A6954(a1);
  }
  sub_1000A6954(a1);
}

void sub_1002049C4(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_100204A54(std::runtime_error *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  std::runtime_error::runtime_error(&v12, a1);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  int v17 = -1;
  v12.__vftable = (std::runtime_error_vtbl *)off_100461270;
  int v13 = off_100461298;
  sub_10021A3F0((uint64_t)&v18, (uint64_t)&v12);
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  int v21 = a4;
  uint64_t v9 = *(const void **)a5;
  size_t v10 = *(void *)(a5 + 8) - *(void *)a5;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0) {
      sub_1000A9108();
    }
    long long __p = operator new(v10);
    memcpy(__p, v9, v10);
  }
  sub_10021A094();
}

void sub_100204D60(void *a1)
{
  std::runtime_error::~runtime_error(v1);
  sub_1000A6954(a1);
}

void sub_100204D74(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    operator delete(__p);
    sub_1000A6954(a1);
  }
  sub_1000A6954(a1);
}

void sub_100204D9C(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_100204E2C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Database");
  uint64_t v2 = (void *)qword_10047BF10;
  qword_10047BF10 = (uint64_t)v1;
}

void sub_100204E70(uint64_t a1)
{
}

void sub_100204EA0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  __cxa_begin_catch(a1);
  uint64_t v15 = *(std::promise<void> **)(v14 + 40);
  std::current_exception();
  v16.__ptr_ = v17;
  std::promise<void>::set_exception(v15, v16);
  std::exception_ptr::~exception_ptr(v17);
  __cxa_end_catch();
}

void sub_100204ED8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10)
{
}

uint64_t sub_100204EF4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  while (v2)
  {
    id v3 = v2;
    uint64_t v2 = (void *)*v2;
    if (v3[9]) {
      operator delete((void *)v3[7]);
    }
    if (v3[6]) {
      operator delete((void *)v3[4]);
    }
    uint64_t v4 = (std::__shared_weak_count *)v3[3];
    if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    operator delete(v3);
  }
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = 0;
  if (v5) {
    operator delete(v5);
  }
  return a1;
}

void sub_100204FC4(std::runtime_error *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  std::runtime_error::runtime_error(&v12, a1);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  int v17 = -1;
  v12.__vftable = (std::runtime_error_vtbl *)off_100460B20;
  int v13 = off_100460B48;
  sub_100208848((uint64_t)&v18, (uint64_t)&v12);
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  int v21 = a4;
  uint64_t v9 = *(const void **)a5;
  size_t v10 = *(void *)(a5 + 8) - *(void *)a5;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0) {
      sub_1000A9108();
    }
    long long __p = operator new(v10);
    memcpy(__p, v9, v10);
  }
  sub_1002084EC();
}

void sub_1002052D0(void *a1)
{
  std::runtime_error::~runtime_error(v1);
  sub_1000A6954(a1);
}

void sub_1002052E4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    operator delete(__p);
    sub_1000A6954(a1);
  }
  sub_1000A6954(a1);
}

size_t sub_10020530C@<X0>(const char **a1@<X0>, void *a2@<X8>)
{
  if (*a1) {
    id v3 = *a1;
  }
  else {
    id v3 = "<no message>";
  }
  size_t result = strlen(v3);
  if (result >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  size_t v5 = result;
  if (result >= 0x17)
  {
    uint64_t v6 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17) {
      uint64_t v6 = result | 7;
    }
    uint64_t v7 = v6 + 1;
    __n128 v8 = operator new(v6 + 1);
    a2[1] = v5;
    a2[2] = v7 | 0x8000000000000000;
    *a2 = v8;
    a2 = v8;
  }
  else
  {
    *((unsigned char *)a2 + 23) = result;
    if (!result)
    {
      *(unsigned char *)a2 = 0;
      return result;
    }
  }
  size_t result = (size_t)memmove(a2, v3, v5);
  *((unsigned char *)a2 + v5) = 0;
  return result;
}

uint64_t sub_1002053D0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2)->__vftable = (std::runtime_error_vtbl *)&off_100460B68;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = off_100460A80;
  *(void *)(a1 + 16) = off_100460AB8;
  *(void *)(a1 + 56) = &off_100460AF0;
  return a1;
}

void sub_1002054F0(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_100205504(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

uint64_t sub_100205590(uint64_t result)
{
  uint64_t v1 = result;
  *(void *)size_t result = off_100460748;
  if (*(char *)(result + 31) < 0)
  {
    operator delete(*(void **)(result + 8));
    return v1;
  }
  return result;
}

uint64_t sub_1002055F0(uint64_t result)
{
  uint64_t v1 = result;
  *(void *)size_t result = off_1004607F0;
  if (*(char *)(result + 31) < 0)
  {
    operator delete(*(void **)(result + 8));
    return v1;
  }
  return result;
}

uint64_t sub_100205650(uint64_t result)
{
  uint64_t v1 = result;
  *(void *)size_t result = off_100460898;
  if (*(char *)(result + 31) < 0)
  {
    operator delete(*(void **)(result + 8));
    return v1;
  }
  return result;
}

void sub_1002056BC()
{
}

void sub_100205958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100205A18((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10020596C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100205A18((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_100205988(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100205A18(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_100205AC4()
{
}

void sub_100205B54()
{
}

void sub_100205B78(uint64_t a1)
{
  *(void *)a1 = off_100460748;
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }

  operator delete();
}

void sub_100205BE8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  sub_1000CD728((const char *)((unint64_t)"P26tag_sqlite_extended_errmsg" & 0x7FFFFFFFFFFFFFFFLL), &v13);
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)&v13;
  }
  else {
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)v13.__r_.__value_.__r.__words[0];
  }
  std::string::insert(&v13, v4, 91);
  std::string v14 = v13;
  memset(&v13, 0, sizeof(v13));
  long long v5 = std::string::append(&v14, "] = ");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v15.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v15.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  sub_100205E2C(a1 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v7 = __p;
  }
  else {
    uint64_t v7 = (void **)__p[0];
  }
  if ((v12 & 0x80u) == 0) {
    std::string::size_type v8 = v12;
  }
  else {
    std::string::size_type v8 = (std::string::size_type)__p[1];
  }
  uint64_t v9 = std::string::append(&v15, (const std::string::value_type *)v7, v8);
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v16.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v16.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  std::string::push_back(&v16, 10);
  *a2 = v16;
  memset(&v16, 0, sizeof(v16));
  if ((char)v12 < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_17;
    }
  }
  else if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v15.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_13:
    if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_18:
    operator delete(v13.__r_.__value_.__l.__data_);
    return;
  }
LABEL_17:
  operator delete(v14.__r_.__value_.__l.__data_);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_18;
  }
}

void sub_100205D68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0)
  {
    operator delete(*(void **)(v33 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a33 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_6:
  }
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100205E2C(uint64_t a1)
{
  sub_1000CD96C((uint64_t)v6);
  int v2 = *(char *)(a1 + 23);
  if (v2 >= 0) {
    uint64_t v3 = a1;
  }
  else {
    uint64_t v3 = *(void *)a1;
  }
  if (v2 >= 0) {
    uint64_t v4 = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    uint64_t v4 = *(void *)(a1 + 8);
  }
  sub_10002986C(v6, v3, v4);
  std::stringbuf::str();
  if (v7 < 0) {
    operator delete((void *)v6[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_100205F74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100205F88()
{
}

void sub_100206074(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    sub_1003A3598(v1);
  }
  __cxa_rethrow();
}

void sub_10020608C(_Unwind_Exception *a1)
{
}

void sub_1002060A4()
{
}

uint64_t sub_1002060B8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 24))();
  }
  return result;
}

uint64_t sub_1002060E8()
{
  return 0;
}

uint64_t sub_1002060F0()
{
  return 0;
}

uint64_t sub_1002060F8()
{
  return 0;
}

void sub_100206100()
{
}

void sub_10020639C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_10020645C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002063B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_10020645C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_1002063CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10020645C(uint64_t a1)
{
  int v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_100206508()
{
}

void sub_100206598()
{
}

void sub_1002065BC(uint64_t a1)
{
  *(void *)a1 = off_1004607F0;
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }

  operator delete();
}

void sub_10020662C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  sub_1000CD728((const char *)((unint64_t)"P13tag_sql_query" & 0x7FFFFFFFFFFFFFFFLL), &v13);
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)&v13;
  }
  else {
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)v13.__r_.__value_.__r.__words[0];
  }
  std::string::insert(&v13, v4, 91);
  std::string v14 = v13;
  memset(&v13, 0, sizeof(v13));
  long long v5 = std::string::append(&v14, "] = ");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v15.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v15.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  sub_100205E2C(a1 + 8);
  if ((v12 & 0x80u) == 0) {
    char v7 = __p;
  }
  else {
    char v7 = (void **)__p[0];
  }
  if ((v12 & 0x80u) == 0) {
    std::string::size_type v8 = v12;
  }
  else {
    std::string::size_type v8 = (std::string::size_type)__p[1];
  }
  uint64_t v9 = std::string::append(&v15, (const std::string::value_type *)v7, v8);
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v16.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v16.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  std::string::push_back(&v16, 10);
  *a2 = v16;
  memset(&v16, 0, sizeof(v16));
  if ((char)v12 < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_17;
    }
  }
  else if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v15.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_13:
    if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_18:
    operator delete(v13.__r_.__value_.__l.__data_);
    return;
  }
LABEL_17:
  operator delete(v14.__r_.__value_.__l.__data_);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_18;
  }
}

void sub_1002067AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0)
  {
    operator delete(*(void **)(v33 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a33 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_6:
  }
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

void sub_100206870()
{
}

void sub_10020695C(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    sub_1003A3598(v1);
  }
  __cxa_rethrow();
}

void sub_100206974(_Unwind_Exception *a1)
{
}

void sub_10020698C()
{
}

uint64_t sub_1002069A0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 24))();
  }
  return result;
}

uint64_t sub_1002069D0()
{
  return 0;
}

uint64_t sub_1002069D8()
{
  return 0;
}

uint64_t sub_1002069E0()
{
  return 0;
}

void sub_1002069E8()
{
}

void sub_100206C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100206D44((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100206C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100206D44((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_100206CB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100206D44(uint64_t a1)
{
  int v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_100206DF0()
{
}

void sub_100206E80()
{
}

void sub_100206EA4(uint64_t a1)
{
  *(void *)a1 = off_100460898;
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }

  operator delete();
}

void sub_100206F14(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  sub_1000CD728((const char *)((unint64_t)"P17tag_sqlite_errmsg" & 0x7FFFFFFFFFFFFFFFLL), &v13);
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)&v13;
  }
  else {
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)v13.__r_.__value_.__r.__words[0];
  }
  std::string::insert(&v13, v4, 91);
  std::string v14 = v13;
  memset(&v13, 0, sizeof(v13));
  long long v5 = std::string::append(&v14, "] = ");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v15.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v15.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  sub_100205E2C(a1 + 8);
  if ((v12 & 0x80u) == 0) {
    char v7 = __p;
  }
  else {
    char v7 = (void **)__p[0];
  }
  if ((v12 & 0x80u) == 0) {
    std::string::size_type v8 = v12;
  }
  else {
    std::string::size_type v8 = (std::string::size_type)__p[1];
  }
  uint64_t v9 = std::string::append(&v15, (const std::string::value_type *)v7, v8);
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v16.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v16.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  std::string::push_back(&v16, 10);
  *a2 = v16;
  memset(&v16, 0, sizeof(v16));
  if ((char)v12 < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_17;
    }
  }
  else if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v15.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_13:
    if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_18:
    operator delete(v13.__r_.__value_.__l.__data_);
    return;
  }
LABEL_17:
  operator delete(v14.__r_.__value_.__l.__data_);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_18;
  }
}

void sub_100207094(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0)
  {
    operator delete(*(void **)(v33 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a33 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_6:
  }
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

void sub_100207158()
{
}

void sub_100207244(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    sub_1003A3598(v1);
  }
  __cxa_rethrow();
}

void sub_10020725C(_Unwind_Exception *a1)
{
}

void sub_100207274()
{
}

uint64_t sub_100207288(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 24))();
  }
  return result;
}

uint64_t sub_1002072B8()
{
  return 0;
}

uint64_t sub_1002072C0()
{
  return 0;
}

uint64_t sub_1002072C8()
{
  return 0;
}

void sub_1002072D0()
{
}

void sub_10020755C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_10020761C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100207570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_10020761C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10020758C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10020761C(uint64_t a1)
{
  int v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_1002076C8()
{
}

void sub_100207724()
{
}

void sub_100207738(std::string *a1@<X8>)
{
  sub_1000CD728((const char *)((unint64_t)"PN2db6errors22tag_sqlite_ext_errcodeE" & 0x7FFFFFFFFFFFFFFFLL), &v11);
  if ((v11.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    v2.__i_ = (std::__wrap_iter<const char *>::iterator_type)&v11;
  }
  else {
    v2.__i_ = (std::__wrap_iter<const char *>::iterator_type)v11.__r_.__value_.__r.__words[0];
  }
  std::string::insert(&v11, v2, 91);
  std::string v12 = v11;
  memset(&v11, 0, sizeof(v11));
  uint64_t v3 = std::string::append(&v12, "] = ");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  v13.__r_.__value_.__r.__words[2] = v3->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v13.__r_.__value_.__l.__data_ = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  sub_10020797C();
  if ((v10 & 0x80u) == 0) {
    long long v5 = __p;
  }
  else {
    long long v5 = (void **)__p[0];
  }
  if ((v10 & 0x80u) == 0) {
    std::string::size_type v6 = v10;
  }
  else {
    std::string::size_type v6 = (std::string::size_type)__p[1];
  }
  char v7 = std::string::append(&v13, (const std::string::value_type *)v5, v6);
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  v14.__r_.__value_.__r.__words[2] = v7->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v14.__r_.__value_.__l.__data_ = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  std::string::push_back(&v14, 10);
  *a1 = v14;
  memset(&v14, 0, sizeof(v14));
  if ((char)v10 < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_17;
    }
  }
  else if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v13.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_13:
    if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_18:
    operator delete(v11.__r_.__value_.__l.__data_);
    return;
  }
LABEL_17:
  operator delete(v12.__r_.__value_.__l.__data_);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_18;
  }
}

void sub_1002078B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0)
  {
    operator delete(*(void **)(v33 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a33 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_6:
  }
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10020797C()
{
  sub_1000CD96C((uint64_t)v1);
  std::ostream::operator<<();
  std::stringbuf::str();
  if (v2 < 0) {
    operator delete((void *)v1[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_100207AB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100207AC4()
{
}

void sub_100207BB0(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    sub_1003A3598(v1);
  }
  __cxa_rethrow();
}

void sub_100207BC8(_Unwind_Exception *a1)
{
}

void sub_100207BE0()
{
}

uint64_t sub_100207BF4(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 24))();
  }
  return result;
}

uint64_t sub_100207C24()
{
  return 0;
}

uint64_t sub_100207C2C()
{
  return 0;
}

uint64_t sub_100207C34()
{
  return 0;
}

void sub_100207C3C()
{
}

void sub_100207EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100207F88((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100207EDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100207F88((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_100207EF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100207F88(uint64_t a1)
{
  char v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_100208034()
{
}

void sub_100208090()
{
}

void sub_1002080A4(std::string *a1@<X8>)
{
  sub_1000CD728((const char *)((unint64_t)"PN2db6errors18tag_sqlite_errcodeE" & 0x7FFFFFFFFFFFFFFFLL), &v11);
  if ((v11.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    v2.__i_ = (std::__wrap_iter<const char *>::iterator_type)&v11;
  }
  else {
    v2.__i_ = (std::__wrap_iter<const char *>::iterator_type)v11.__r_.__value_.__r.__words[0];
  }
  std::string::insert(&v11, v2, 91);
  std::string v12 = v11;
  memset(&v11, 0, sizeof(v11));
  uint64_t v3 = std::string::append(&v12, "] = ");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  v13.__r_.__value_.__r.__words[2] = v3->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v13.__r_.__value_.__l.__data_ = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  sub_10020797C();
  if ((v10 & 0x80u) == 0) {
    long long v5 = __p;
  }
  else {
    long long v5 = (void **)__p[0];
  }
  if ((v10 & 0x80u) == 0) {
    std::string::size_type v6 = v10;
  }
  else {
    std::string::size_type v6 = (std::string::size_type)__p[1];
  }
  char v7 = std::string::append(&v13, (const std::string::value_type *)v5, v6);
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  v14.__r_.__value_.__r.__words[2] = v7->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v14.__r_.__value_.__l.__data_ = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  std::string::push_back(&v14, 10);
  *a1 = v14;
  memset(&v14, 0, sizeof(v14));
  if ((char)v10 < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_17;
    }
  }
  else if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v13.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_13:
    if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_18:
    operator delete(v11.__r_.__value_.__l.__data_);
    return;
  }
LABEL_17:
  operator delete(v12.__r_.__value_.__l.__data_);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_18;
  }
}

void sub_100208224(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0)
  {
    operator delete(*(void **)(v33 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a33 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_6:
  }
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

void sub_1002082E8()
{
}

void sub_1002083D4(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    sub_1003A3598(v1);
  }
  __cxa_rethrow();
}

void sub_1002083EC(_Unwind_Exception *a1)
{
}

void sub_100208404()
{
}

uint64_t sub_100208418(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 24))();
  }
  return result;
}

uint64_t sub_100208448()
{
  return 0;
}

uint64_t sub_100208450()
{
  return 0;
}

uint64_t sub_100208458()
{
  return 0;
}

void sub_100208460(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_1002084EC()
{
}

void sub_100208788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CD2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10020879C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_1000CD2E0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_1002087B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100208848(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4->__vftable = (std::runtime_error_vtbl *)&off_100460B68;
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_100460A80;
  *(void *)(a1 + 16) = off_100460AB8;
  *(void *)(a1 + 56) = &off_100460AF0;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_100208974(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_100208988(_Unwind_Exception *a1)
{
  sub_10020899C(v1);
  _Unwind_Resume(a1);
}

void sub_10020899C(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_100208A28(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_100208AC8()
{
}

void sub_100208B24()
{
}

void sub_100208B48(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_1002053D0((uint64_t)exception, a1);
}

void sub_100208B90(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100208BA4(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_100208C2C(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

void sub_100208CC8()
{
}

void sub_100208D38()
{
}

void sub_100208D5C(void *a1)
{
  uint64_t v1 = (uint64_t)a1 + *(void *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x40uLL);
  sub_1002053D0((uint64_t)exception, v1);
}

void sub_100208DB8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100208DCC(void *a1)
{
  uint64_t v1 = (std::runtime_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(v1);
}

void sub_100208E6C(void *a1)
{
  uint64_t v1 = (std::runtime_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(v1);

  operator delete();
}

void sub_100208F20(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_100208FC0(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_100209048(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

void sub_1002090E4(std::runtime_error *a1)
{
  std::runtime_error::~runtime_error(a1);

  operator delete();
}

uint64_t sub_10020911C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4->__vftable = (std::runtime_error_vtbl *)&off_100460B68;
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_100460A80;
  *(void *)(a1 + 16) = off_100460AB8;
  *(void *)(a1 + 56) = &off_100460AF0;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_100209248(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10020925C(_Unwind_Exception *a1)
{
  sub_10020899C(v1);
  _Unwind_Resume(a1);
}

void sub_100209270(uint64_t a1)
{
  std::string::const_iterator v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);

  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

void sub_1002092DC(uint64_t a1)
{
  std::string::const_iterator v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);

  operator delete();
}

uint64_t sub_10020935C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 8))();
}

void sub_100209380(std::__assoc_sub_state *a1)
{
  __lk.__m_ = &a1->__mut_;
  __lk.__owns_ = 1;
  std::mutex::lock(&a1->__mut_);
  std::__assoc_sub_state::__sub_wait(a1, &__lk);
  ptr = a1->__exception_.__ptr_;
  v5.__ptr_ = 0;
  std::exception_ptr::~exception_ptr(&v5);
  if (ptr)
  {
    std::exception_ptr::exception_ptr(&v4, &a1->__exception_);
    v3.__ptr_ = &v4;
    std::rethrow_exception(v3);
    __break(1u);
  }
  else if (__lk.__owns_)
  {
    std::mutex::unlock(__lk.__m_);
  }
}

void sub_10020941C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::mutex *a11, char a12)
{
  if (a12) {
    std::mutex::unlock(a11);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_100209448(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (!v2) {
    return a1;
  }
  if ((*(unsigned char *)(v2 + 136) & 1) == 0)
  {
    v8.__ptr_ = 0;
    uint64_t v3 = *(void *)(v2 + 16);
    std::exception_ptr::~exception_ptr(&v8);
    uint64_t v2 = *a1;
    if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
    {
      v9.__cat_ = std::future_category();
      *(void *)&v9.__val_ = 4;
      std::future_error::future_error(&v7, v9);
      exception = (std::logic_error *)__cxa_allocate_exception(0x20uLL);
      uint64_t v6 = std::logic_error::logic_error(exception, &v7);
      v6[1] = (std::logic_error)v7.__ec_;
    }
  }
  if (atomic_fetch_add((atomic_ullong *volatile)(v2 + 8), 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  return a1;
}

void sub_1002095A4(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);

  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

void sub_100209610(uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)(a1 + 32);
  uint64_t v1 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = **(void **)(v1 + 8);
  v27.__ptr_ = off_100461450;
  uint64_t v28 = v4;
  unint64_t v29 = &v27;
  v25[0] = off_1004614D0;
  v25[1] = v4;
  std::runtime_error v26 = v25;
  sub_100082EDC(v3, 0, (uint64_t)&v27, (uint64_t)v25, v11);
  if (v26 != v25)
  {
    if (v26) {
      (*(void (**)(void *))(*v26 + 40))(v26);
    }
    std::exception_ptr v5 = v29;
    if (v29 != &v27) {
      goto LABEL_5;
    }
LABEL_8:
    (*((void (**)(std::exception_ptr *))v27.__ptr_ + 4))(&v27);
    goto LABEL_9;
  }
  (*(void (**)(void *))(v25[0] + 32))(v25);
  std::exception_ptr v5 = v29;
  if (v29 == &v27) {
    goto LABEL_8;
  }
LABEL_5:
  if (v5) {
    (*((void (**)(std::exception_ptr *))v5->__ptr_ + 5))(v5);
  }
LABEL_9:
  uint64_t v6 = *v2;
  if (!*v2) {
    sub_1000AD034(3u);
  }
  std::mutex::lock((std::mutex *)(v6 + 24));
  if ((*(unsigned char *)(v6 + 136) & 1) != 0
    || (v27.__ptr_ = 0, uint64_t v7 = *(void *)(v6 + 16), std::exception_ptr::~exception_ptr(&v27), v7))
  {
    sub_1000AD034(2u);
  }
  *(unsigned char *)(v6 + 144) = 0;
  if (v11[0])
  {
    *(_OWORD *)(v6 + 152) = *(_OWORD *)__p;
    *(void *)(v6 + 168) = v13;
    __p[0] = 0;
    __p[1] = 0;
    long long v8 = v14;
    long long v9 = v15;
    uint64_t v13 = 0;
    long long v14 = 0uLL;
    *(_OWORD *)(v6 + 176) = v8;
    *(_OWORD *)(v6 + 192) = v9;
    *(_DWORD *)(v6 + 208) = v16;
    *(unsigned char *)(v6 + 216) = 0;
    if (v17)
    {
      *(_OWORD *)(v6 + 224) = v18;
      *(unsigned char *)(v6 + 216) = 1;
    }
    *(unsigned char *)(v6 + 240) = 0;
    if (v19)
    {
      *(_OWORD *)(v6 + 248) = v20;
      *(unsigned char *)(v6 + 240) = 1;
    }
    *(unsigned char *)(v6 + 264) = 0;
    if (v21)
    {
      *(void *)(v6 + 272) = v22;
      *(unsigned char *)(v6 + 264) = 1;
    }
    *(unsigned char *)(v6 + 280) = 0;
    if (v23)
    {
      *(void *)(v6 + 288) = v24;
      *(unsigned char *)(v6 + 280) = 1;
    }
    *(unsigned char *)(v6 + 144) = 1;
  }
  *(_DWORD *)(v6 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(v6 + 88));
  std::mutex::unlock((std::mutex *)(v6 + 24));
  if (v11[0])
  {
    if (v23) {
      char v23 = 0;
    }
    if (v21) {
      char v21 = 0;
    }
    if (v19) {
      char v19 = 0;
    }
    if (v17) {
      char v17 = 0;
    }
    unsigned __int8 v10 = (std::__shared_weak_count *)*((void *)&v14 + 1);
    if (*((void *)&v14 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v14 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
      if (SHIBYTE(v13) < 0) {
        goto LABEL_34;
      }
    }
    else if (SHIBYTE(v13) < 0)
    {
LABEL_34:
      operator delete(__p[0]);
    }
  }
}

void sub_100209970(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, std::exception_ptr a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,char a31)
{
  if (a2)
  {
    uint64_t v34 = *(void *)(v32 - 96);
    if (v34 == v32 - 120) {
      (*(void (**)(uint64_t))(*(void *)(v32 - 120) + 32))(v32 - 120);
    }
    else {
      sub_1003A4DEC(v34);
    }
    sub_1003A4D80(v32 - 120, (uint64_t *)(v32 - 64), v32 - 88);
    __cxa_begin_catch(exception_object);
    long long v35 = *(std::__assoc_sub_state ***)(v31 + 32);
    std::current_exception();
    long long v36 = *v35;
    if (v36)
    {
      std::exception_ptr::exception_ptr(&a11, &a10);
      v37.__ptr_ = &a11;
      std::__assoc_sub_state::set_exception(v36, v37);
      std::exception_ptr::~exception_ptr(&a11);
      std::exception_ptr::~exception_ptr(&a10);
      __cxa_end_catch();
      JUMPOUT(0x100209920);
    }
    sub_1000AD034(3u);
  }
  _Unwind_Resume(exception_object);
}

void sub_100209AD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, std::exception_ptr a11)
{
}

void sub_100209AFC(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_1000A6954(a1);
  }
  _Unwind_Resume(a1);
}

void sub_100209B18(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);

  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

void sub_100209B84(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 32);
  sub_1001F7D64(**(void **)(a1 + 40), **(void **)(*(void *)(a1 + 40) + 8), v6);
  uint64_t v2 = *v1;
  if (!*v1) {
    sub_1000AD034(3u);
  }
  std::mutex::lock((std::mutex *)(v2 + 24));
  if ((*(unsigned char *)(v2 + 136) & 1) != 0
    || (v5.__ptr_ = 0, uint64_t v3 = *(void *)(v2 + 16), std::exception_ptr::~exception_ptr(&v5), v3))
  {
    sub_1000AD034(2u);
  }
  *(unsigned char *)(v2 + 144) = 0;
  if (v6[0])
  {
    *(_OWORD *)(v2 + 152) = v7;
    long long v7 = 0uLL;
    *(unsigned char *)(v2 + 144) = 1;
  }
  *(_DWORD *)(v2 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(v2 + 88));
  std::mutex::unlock((std::mutex *)(v2 + 24));
  if (v6[0])
  {
    uint64_t v4 = (std::__shared_weak_count *)*((void *)&v7 + 1);
    if (*((void *)&v7 + 1))
    {
      if (!atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v7 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void sub_100209CD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::exception_ptr a11, uint64_t a12, uint64_t a13)
{
  if (a2)
  {
    __cxa_begin_catch(exception_object);
    long long v14 = *(std::__assoc_sub_state ***)(v13 + 32);
    std::current_exception();
    long long v15 = *v14;
    if (v15)
    {
      std::exception_ptr::exception_ptr(&a11, (const std::exception_ptr *)&a9);
      v16.__ptr_ = &a11;
      std::__assoc_sub_state::set_exception(v15, v16);
      std::exception_ptr::~exception_ptr(&a11);
      std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
      __cxa_end_catch();
      JUMPOUT(0x100209C84);
    }
    sub_1000AD034(3u);
  }
  _Unwind_Resume(exception_object);
}

void sub_100209DA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::exception_ptr a11)
{
}

void sub_100209DC8(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x100209DD0);
  }
  sub_1000A6954(a1);
}

void sub_100209DE0(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);

  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

void sub_100209E4C(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);

  operator delete();
}

uint64_t sub_100209ECC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 136) & 1) != 0 && *(unsigned char *)(a1 + 144))
  {
    uint64_t v2 = *(std::__shared_weak_count **)(a1 + 160);
    if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
    *(unsigned char *)(a1 + 144) = 0;
  }
  uint64_t v3 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 8);

  return v3(a1);
}

void sub_100209F7C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 24);
  __lk.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 24));
  std::__assoc_sub_state::__sub_wait((std::__assoc_sub_state *)a1, &__lk);
  uint64_t v4 = *(void *)(a1 + 16);
  v7.__ptr_ = 0;
  std::exception_ptr::~exception_ptr(&v7);
  if (v4)
  {
    std::exception_ptr::exception_ptr(&v6, (const std::exception_ptr *)(a1 + 16));
    v5.__ptr_ = &v6;
    std::rethrow_exception(v5);
    __break(1u);
  }
  else
  {
    *(unsigned char *)a2 = 0;
    if (*(unsigned char *)(a1 + 144))
    {
      *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 152);
      *(void *)(a1 + 152) = 0;
      *(void *)(a1 + 160) = 0;
      *(unsigned char *)a2 = 1;
    }
    if (__lk.__owns_) {
      std::mutex::unlock(__lk.__m_);
    }
  }
}

void sub_10020A030(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::mutex *a11, char a12)
{
  if (a12) {
    std::mutex::unlock(a11);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_10020A05C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (!v2) {
    return a1;
  }
  if ((*(unsigned char *)(v2 + 136) & 1) == 0)
  {
    v8.__ptr_ = 0;
    uint64_t v3 = *(void *)(v2 + 16);
    std::exception_ptr::~exception_ptr(&v8);
    uint64_t v2 = *a1;
    if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
    {
      v9.__cat_ = std::future_category();
      *(void *)&v9.__val_ = 4;
      std::future_error::future_error(&v7, v9);
      exception = (std::logic_error *)__cxa_allocate_exception(0x20uLL);
      std::exception_ptr v6 = std::logic_error::logic_error(exception, &v7);
      v6[1] = (std::logic_error)v7.__ec_;
    }
  }
  if (atomic_fetch_add((atomic_ullong *volatile)(v2 + 8), 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  return a1;
}

void sub_10020A1B8(uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)(a1 + 32);
  uint64_t v1 = *(uint64_t **)(a1 + 40);
  uint64_t v3 = *v1;
  uint64_t v4 = (char **)v1[1];
  uint64_t v5 = sub_100089D94(*v1, v4);
  uint64_t v7 = v6;
  if ((_BYTE)v5) {
    sub_1001F96FC(v3, (uint64_t)v4);
  }
  uint64_t v8 = *v2;
  if (!*v2) {
    sub_1000AD034(3u);
  }
  std::mutex::lock((std::mutex *)(v8 + 24));
  if ((*(unsigned char *)(v8 + 136) & 1) != 0
    || (v10.__ptr_ = 0, uint64_t v9 = *(void *)(v8 + 16), std::exception_ptr::~exception_ptr(&v10), v9))
  {
    sub_1000AD034(2u);
  }
  *(void *)(v8 + 144) = v5;
  *(void *)(v8 + 152) = v7;
  *(_DWORD *)(v8 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(v8 + 88));
  std::mutex::unlock((std::mutex *)(v8 + 24));
}

void sub_10020A28C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  std::mutex::unlock(v19);
  __cxa_begin_catch(a1);
  char v21 = *(std::__assoc_sub_state ***)(v18 + 32);
  std::current_exception();
  uint64_t v22 = *v21;
  if (!v22) {
    sub_1000AD034(3u);
  }
  std::exception_ptr::exception_ptr(v25, &v24);
  v23.__ptr_ = v25;
  std::__assoc_sub_state::set_exception(v22, v23);
  std::exception_ptr::~exception_ptr(v25);
  std::exception_ptr::~exception_ptr(&v24);
  __cxa_end_catch();
}

void sub_10020A30C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10)
{
}

void sub_10020A338(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 32);
  sub_1001FB8C8(**(void **)(a1 + 40), (int64x2_t *)__p);
  uint64_t v2 = *v1;
  if (!*v1) {
    sub_1000AD034(3u);
  }
  std::mutex::lock((std::mutex *)(v2 + 24));
  if ((*(unsigned char *)(v2 + 136) & 1) != 0
    || (v10.__ptr_ = 0, uint64_t v3 = *(void *)(v2 + 16), std::exception_ptr::~exception_ptr(&v10), v3))
  {
    sub_1000AD034(2u);
  }
  *(_OWORD *)(v2 + 144) = *(_OWORD *)__p;
  *(void *)(v2 + 160) = v9;
  __p[1] = 0;
  uint64_t v9 = 0;
  __p[0] = 0;
  *(_DWORD *)(v2 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(v2 + 88));
  std::mutex::unlock((std::mutex *)(v2 + 24));
  uint64_t v4 = (char *)__p[0];
  if (__p[0])
  {
    uint64_t v5 = (char *)__p[1];
    uint64_t v6 = __p[0];
    if (__p[1] != __p[0])
    {
      do
      {
        while (1)
        {
          if (*(v5 - 16)) {
            *(v5 - 16) = 0;
          }
          if (*(v5 - 32)) {
            *(v5 - 32) = 0;
          }
          if (*(v5 - 56)) {
            *(v5 - 56) = 0;
          }
          if (*(v5 - 80)) {
            *(v5 - 80) = 0;
          }
          uint64_t v7 = (std::__shared_weak_count *)*((void *)v5 - 14);
          if (v7)
          {
            if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
              std::__shared_weak_count::__release_weak(v7);
            }
          }
          if (*(v5 - 121) < 0) {
            break;
          }
          v5 -= 144;
          if (v5 == v4) {
            goto LABEL_21;
          }
        }
        operator delete(*((void **)v5 - 18));
        v5 -= 144;
      }
      while (v5 != v4);
LABEL_21:
      uint64_t v6 = __p[0];
    }
    __p[1] = v4;
    operator delete(v6);
  }
}

void sub_10020A4CC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  __cxa_begin_catch(a1);
  std::exception_ptr v23 = *(std::__assoc_sub_state ***)(v22 + 32);
  std::current_exception();
  std::exception_ptr v24 = *v23;
  if (!v24) {
    sub_1000AD034(3u);
  }
  std::exception_ptr::exception_ptr(v27, &v26);
  v25.__ptr_ = v27;
  std::__assoc_sub_state::set_exception(v24, v25);
  std::exception_ptr::~exception_ptr(v27);
  std::exception_ptr::~exception_ptr(&v26);
  __cxa_end_catch();
}

void sub_10020A634(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, std::exception_ptr a11)
{
}

void sub_10020A660(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);

  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

void sub_10020A6CC(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);

  operator delete();
}

uint64_t sub_10020A74C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 136))
  {
    uint64_t v3 = (void **)(a1 + 144);
    sub_10021CB64(&v3);
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 8))(a1);
}

void sub_10020A7B4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 24);
  __lk.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 24));
  std::__assoc_sub_state::__sub_wait((std::__assoc_sub_state *)a1, &__lk);
  uint64_t v4 = *(void *)(a1 + 16);
  v7.__ptr_ = 0;
  std::exception_ptr::~exception_ptr(&v7);
  if (v4)
  {
    std::exception_ptr::exception_ptr(&v6, (const std::exception_ptr *)(a1 + 16));
    v5.__ptr_ = &v6;
    std::rethrow_exception(v5);
    __break(1u);
  }
  else
  {
    *(_OWORD *)a2 = *(_OWORD *)(a1 + 144);
    *(void *)(a2 + 16) = *(void *)(a1 + 160);
    *(void *)(a1 + 152) = 0;
    *(void *)(a1 + 160) = 0;
    *(void *)(a1 + 144) = 0;
    if (__lk.__owns_) {
      std::mutex::unlock(__lk.__m_);
    }
  }
}

void sub_10020A860(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::mutex *a11, char a12)
{
  if (a12) {
    std::mutex::unlock(a11);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_10020A88C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (!v2) {
    return a1;
  }
  if ((*(unsigned char *)(v2 + 136) & 1) == 0)
  {
    v8.__ptr_ = 0;
    uint64_t v3 = *(void *)(v2 + 16);
    std::exception_ptr::~exception_ptr(&v8);
    uint64_t v2 = *a1;
    if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
    {
      v9.__cat_ = std::future_category();
      *(void *)&v9.__val_ = 4;
      std::future_error::future_error(&v7, v9);
      exception = (std::logic_error *)__cxa_allocate_exception(0x20uLL);
      std::exception_ptr v6 = std::logic_error::logic_error(exception, &v7);
      v6[1] = (std::logic_error)v7.__ec_;
    }
  }
  if (atomic_fetch_add((atomic_ullong *volatile)(v2 + 8), 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  return a1;
}

void sub_10020A9E8(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 32);
  BOOL v2 = sub_1001FE8B4(**(void **)(a1 + 40));
  uint64_t v3 = *v1;
  if (!*v1) {
    sub_1000AD034(3u);
  }
  BOOL v4 = v2;
  std::mutex::lock((std::mutex *)(v3 + 24));
  if ((*(unsigned char *)(v3 + 136) & 1) != 0
    || (v6.__ptr_ = 0, uint64_t v5 = *(void *)(v3 + 16), std::exception_ptr::~exception_ptr(&v6), v5))
  {
    sub_1000AD034(2u);
  }
  *(unsigned char *)(v3 + 140) = v4;
  *(_DWORD *)(v3 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(v3 + 88));
  std::mutex::unlock((std::mutex *)(v3 + 24));
}

void sub_10020AA9C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  std::mutex::unlock(v19);
  __cxa_begin_catch(a1);
  char v21 = *(std::__assoc_sub_state ***)(v18 + 32);
  std::current_exception();
  uint64_t v22 = *v21;
  if (!v22) {
    sub_1000AD034(3u);
  }
  std::exception_ptr::exception_ptr(v25, &v24);
  v23.__ptr_ = v25;
  std::__assoc_sub_state::set_exception(v22, v23);
  std::exception_ptr::~exception_ptr(v25);
  std::exception_ptr::~exception_ptr(&v24);
  __cxa_end_catch();
}

void sub_10020AB1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10)
{
}

void sub_10020AB48(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 32);
  sub_100200034(**(void **)(a1 + 40), *(unsigned int **)(*(void *)(a1 + 40) + 8), (char **)__p);
  uint64_t v2 = *v1;
  if (!*v1) {
    sub_1000AD034(3u);
  }
  std::mutex::lock((std::mutex *)(v2 + 24));
  if ((*(unsigned char *)(v2 + 136) & 1) != 0
    || (v6.__ptr_ = 0, uint64_t v3 = *(void *)(v2 + 16), std::exception_ptr::~exception_ptr(&v6), v3))
  {
    sub_1000AD034(2u);
  }
  *(_OWORD *)(v2 + 144) = *(_OWORD *)__p;
  *(void *)(v2 + 160) = v5;
  __p[1] = 0;
  uint64_t v5 = 0;
  __p[0] = 0;
  *(_DWORD *)(v2 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(v2 + 88));
  std::mutex::unlock((std::mutex *)(v2 + 24));
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
}

void sub_10020AC18(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  __cxa_begin_catch(a1);
  char v21 = *(std::__assoc_sub_state ***)(v20 + 32);
  std::current_exception();
  uint64_t v22 = *v21;
  if (!v22) {
    sub_1000AD034(3u);
  }
  std::exception_ptr::exception_ptr(v25, &v24);
  v23.__ptr_ = v25;
  std::__assoc_sub_state::set_exception(v22, v23);
  std::exception_ptr::~exception_ptr(v25);
  std::exception_ptr::~exception_ptr(&v24);
  __cxa_end_catch();
}

void sub_10020ACAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, std::exception_ptr a11)
{
}

void sub_10020ACD8(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);

  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

void sub_10020AD44(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);

  operator delete();
}

uint64_t sub_10020ADC4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 136))
  {
    uint64_t v2 = *(void **)(a1 + 144);
    if (v2)
    {
      *(void *)(a1 + 152) = v2;
      operator delete(v2);
    }
  }
  uint64_t v3 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 8);

  return v3(a1);
}

void sub_10020AE30(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 24);
  __lk.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 24));
  std::__assoc_sub_state::__sub_wait((std::__assoc_sub_state *)a1, &__lk);
  uint64_t v4 = *(void *)(a1 + 16);
  v7.__ptr_ = 0;
  std::exception_ptr::~exception_ptr(&v7);
  if (v4)
  {
    std::exception_ptr::exception_ptr(&v6, (const std::exception_ptr *)(a1 + 16));
    v5.__ptr_ = &v6;
    std::rethrow_exception(v5);
    __break(1u);
  }
  else
  {
    *(_OWORD *)a2 = *(_OWORD *)(a1 + 144);
    *(void *)(a2 + 16) = *(void *)(a1 + 160);
    *(void *)(a1 + 152) = 0;
    *(void *)(a1 + 160) = 0;
    *(void *)(a1 + 144) = 0;
    if (__lk.__owns_) {
      std::mutex::unlock(__lk.__m_);
    }
  }
}

void sub_10020AEDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::mutex *a11, char a12)
{
  if (a12) {
    std::mutex::unlock(a11);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_10020AF08(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (!v2) {
    return a1;
  }
  if ((*(unsigned char *)(v2 + 136) & 1) == 0)
  {
    v8.__ptr_ = 0;
    uint64_t v3 = *(void *)(v2 + 16);
    std::exception_ptr::~exception_ptr(&v8);
    uint64_t v2 = *a1;
    if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
    {
      v9.__cat_ = std::future_category();
      *(void *)&v9.__val_ = 4;
      std::future_error::future_error(&v7, v9);
      exception = (std::logic_error *)__cxa_allocate_exception(0x20uLL);
      std::exception_ptr v6 = std::logic_error::logic_error(exception, &v7);
      v6[1] = (std::logic_error)v7.__ec_;
    }
  }
  if (atomic_fetch_add((atomic_ullong *volatile)(v2 + 8), 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  return a1;
}

void sub_10020B064(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Daemon");
  uint64_t v2 = (void *)qword_10047BF00;
  qword_10047BF00 = (uint64_t)v1;
}

void sub_10020B0A8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(v2 + 16);
  sub_100316248(*(void *)v2, &v67);
  uint64_t v4 = sub_100085D38((uint64_t)&v67);
  if (qword_10047BF08 != -1) {
    dispatch_once(&qword_10047BF08, &stru_100460658);
  }
  std::exception_ptr v5 = (id)qword_10047BF10;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    uint64_t v6 = sub_100316258(*(void *)v2);
    uint64_t v7 = **(void **)(v2 + 8);
    uint64_t v8 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v9 = *(void *)v4;
    if ((v8 & 0x80u) == 0) {
      uint64_t v10 = v4 + v8;
    }
    else {
      uint64_t v10 = *(void *)v4 + *(void *)(v4 + 8);
    }
    if ((v8 & 0x80u) != 0) {
      uint64_t v8 = *(void *)(v4 + 8);
    }
    else {
      uint64_t v9 = v4;
    }
    int v11 = *(char *)(v10 - 3);
    int v12 = *(char *)(v10 - 4);
    int v13 = *(char *)(v10 - 2);
    int v14 = *(char *)(v9 + v8 - 1);
    *(_DWORD *)int buf = 134219264;
    *(void *)&uint8_t buf[4] = v6;
    *(_WORD *)&buf[12] = 2048;
    *(void *)&buf[14] = v7;
    buf[22] = 0;
    buf[23] = 4;
    int v80 = v12;
    __int16 v81 = 1024;
    int v82 = v11;
    __int16 v83 = 1024;
    int v84 = v13;
    __int16 v85 = 1024;
    int v86 = v14;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Writing floor metadata BLOB with version %lld (locally %llu). Last 4 chars = %c, %c, %c, %c", buf, 0x2Eu);
  }

  long long v15 = *(sqlite3 ***)(v3 + 40);
  *((unsigned char *)&v73.__r_.__value_.__s + 23) = 7;
  strcpy((char *)&v73, "UPDATE ");
  std::exception_ptr v16 = std::string::append(&v73, "venues");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v74.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v74.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  uint64_t v18 = std::string::append(&v74, " SET ");
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  __dst.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047E057 >= 0) {
    uint64_t v20 = (const std::string::value_type *)&qword_10047E040;
  }
  else {
    uint64_t v20 = (const std::string::value_type *)qword_10047E040;
  }
  if (byte_10047E057 >= 0) {
    std::string::size_type v21 = byte_10047E057;
  }
  else {
    std::string::size_type v21 = *(void *)&byte_10047E048;
  }
  uint64_t v22 = std::string::append(&__dst, v20, v21);
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v69.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v69.__r_.__value_.__l.__data_ = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  std::exception_ptr v24 = std::string::append(&v69, " = ? WHERE ");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  v70.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v70.__r_.__value_.__l.__data_ = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  if (byte_10047DF97 >= 0) {
    std::exception_ptr v26 = (const std::string::value_type *)&qword_10047DF80;
  }
  else {
    std::exception_ptr v26 = (const std::string::value_type *)qword_10047DF80;
  }
  if (byte_10047DF97 >= 0) {
    std::string::size_type v27 = byte_10047DF97;
  }
  else {
    std::string::size_type v27 = *(void *)&byte_10047DF88;
  }
  uint64_t v28 = std::string::append(&v70, v26, v27);
  long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
  v77.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v77.__r_.__value_.__l.__data_ = v29;
  v28->__r_.__value_.__l.__size_ = 0;
  v28->__r_.__value_.__r.__words[2] = 0;
  v28->__r_.__value_.__r.__words[0] = 0;
  uint64_t v30 = std::string::append(&v77, " = ?;");
  long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
  *(void *)&buf[16] = *((void *)&v30->__r_.__value_.__l + 2);
  *(_OWORD *)int buf = v31;
  v30->__r_.__value_.__l.__size_ = 0;
  v30->__r_.__value_.__r.__words[2] = 0;
  v30->__r_.__value_.__r.__words[0] = 0;
  sub_10020CEC0(v15, (uint64_t)buf, 0, (uint64_t)&pStmt);
  if ((buf[23] & 0x80000000) != 0)
  {
    operator delete(*(void **)buf);
    if ((SHIBYTE(v77.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_25:
      if ((SHIBYTE(v70.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_26;
      }
      goto LABEL_65;
    }
  }
  else if ((SHIBYTE(v77.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_25;
  }
  operator delete(v77.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v70.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_26:
    if ((SHIBYTE(v69.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_66;
  }
LABEL_65:
  operator delete(v70.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v69.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_67;
  }
LABEL_66:
  operator delete(v69.__r_.__value_.__l.__data_);
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if ((SHIBYTE(v74.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_29;
    }
LABEL_68:
    operator delete(v74.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v73.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
LABEL_69:
    operator delete(v73.__r_.__value_.__l.__data_);
    goto LABEL_30;
  }
LABEL_67:
  operator delete(__dst.__r_.__value_.__l.__data_);
  if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_68;
  }
LABEL_29:
  if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_69;
  }
LABEL_30:
  int v32 = sub_100316264(*(void *)v2);
  sub_10020D534(&pStmt, 1, v32);
  sub_10020DCD8(&pStmt, 2, **(void **)(v2 + 8));
  while (1)
  {
    do
    {
      int v33 = sqlite3_step(pStmt);
      int v34 = v33;
    }
    while (v33 == 100);
    if (v33 == 101) {
      break;
    }
    if (v33 == 19)
    {
      if (qword_10047BF08 == -1)
      {
        std::string::size_type v52 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO)) {
          goto LABEL_80;
        }
      }
      else
      {
        dispatch_once(&qword_10047BF08, &stru_100460658);
        std::string::size_type v52 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO))
        {
LABEL_80:
          *(_WORD *)int buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v52, OS_LOG_TYPE_INFO, "Query constraint violation", buf, 2u);
        }
      }
      __cxa_allocate_exception(0x40uLL);
      v70.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
      *(_OWORD *)&v70.__r_.__value_.__r.__words[1] = xmmword_1003F6340;
      strcpy(v70.__r_.__value_.__l.__data_, "Constraint violation stepping through statement");
      std::runtime_error::runtime_error((std::runtime_error *)&v74, &v70);
      v74.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100460ED8;
      sub_10018E868((uint64_t)&v69);
      sub_10020E390((std::runtime_error *)&v74, (uint64_t)"auto db::resources::statement<0, 2>::run((lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:1135:22) &&)::(anonymous class)::operator()() const [nCols = 0, nQueries = 2, ColumnNumberType = unsigned long]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 486, (uint64_t)&v69);
    }
    sub_100088644(v33, db);
    if (v34)
    {
      long long v35 = __error();
      sub_100295674(*v35, &__dst);
      __cxa_allocate_exception(0x40uLL);
      *((unsigned char *)&v78.__r_.__value_.__s + 23) = 4;
      strcpy((char *)&v78, " w/ ");
      long long v36 = std::string::insert(&v78, 0, "Failed sqlite3_step");
      long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
      v73.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v73.__r_.__value_.__l.__data_ = v37;
      v36->__r_.__value_.__l.__size_ = 0;
      v36->__r_.__value_.__r.__words[2] = 0;
      v36->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        sub_1000559FC(&v72, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
      }
      else {
        std::string v72 = __dst;
      }
      if ((v72.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        long long v53 = &v72;
      }
      else {
        long long v53 = (std::string *)v72.__r_.__value_.__r.__words[0];
      }
      if ((v72.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v72.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v72.__r_.__value_.__l.__size_;
      }
      long long v55 = std::string::append(&v73, (const std::string::value_type *)v53, size);
      long long v56 = *(_OWORD *)&v55->__r_.__value_.__l.__data_;
      v74.__r_.__value_.__r.__words[2] = v55->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v74.__r_.__value_.__l.__data_ = v56;
      v55->__r_.__value_.__l.__size_ = 0;
      v55->__r_.__value_.__r.__words[2] = 0;
      v55->__r_.__value_.__r.__words[0] = 0;
      std::runtime_error::runtime_error(&v75, &v74);
      v75.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
      sub_10018E868((uint64_t)v71);
      sub_100204FC4(&v75, (uint64_t)"void db::resources::statement<0, 2>::run(Cb &&, ConstraintHandler &&) [nCols = 0, nQueries = 2, ColumnNumberType = unsigned long, Cb = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:1135:22), ConstraintHandler = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h:485:43)]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 512, (uint64_t)v71);
    }
  }
  int v38 = sqlite3_reset(pStmt);
  sub_100088644(v38, db);
  if (v38)
  {
    std::string::size_type v57 = __error();
    sub_100295674(*v57, &__dst);
    __cxa_allocate_exception(0x40uLL);
    *((unsigned char *)&v78.__r_.__value_.__s + 23) = 4;
    strcpy((char *)&v78, " w/ ");
    long long v58 = std::string::insert(&v78, 0, "Failed to execute query");
    long long v59 = *(_OWORD *)&v58->__r_.__value_.__l.__data_;
    v73.__r_.__value_.__r.__words[2] = v58->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v73.__r_.__value_.__l.__data_ = v59;
    v58->__r_.__value_.__l.__size_ = 0;
    v58->__r_.__value_.__r.__words[2] = 0;
    v58->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&v72, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
    }
    else {
      std::string v72 = __dst;
    }
    if ((v72.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v60 = &v72;
    }
    else {
      long long v60 = (std::string *)v72.__r_.__value_.__r.__words[0];
    }
    if ((v72.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v61 = HIBYTE(v72.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v61 = v72.__r_.__value_.__l.__size_;
    }
    std::string::size_type v62 = std::string::append(&v73, (const std::string::value_type *)v60, v61);
    long long v63 = *(_OWORD *)&v62->__r_.__value_.__l.__data_;
    v74.__r_.__value_.__r.__words[2] = v62->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v74.__r_.__value_.__l.__data_ = v63;
    v62->__r_.__value_.__l.__size_ = 0;
    v62->__r_.__value_.__r.__words[2] = 0;
    v62->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v75, &v74);
    v75.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v71);
    sub_100204FC4(&v75, (uint64_t)"void db::resources::statement<0, 2>::run(Cb &&, ConstraintHandler &&) [nCols = 0, nQueries = 2, ColumnNumberType = unsigned long, Cb = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:1135:22), ConstraintHandler = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h:485:43)]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 518, (uint64_t)v71);
  }
  sub_10020FD54((uint64_t)&pStmt);

  if (byte_10047E057 >= 0) {
    std::string v39 = (const char *)&qword_10047E040;
  }
  else {
    std::string v39 = (const char *)qword_10047E040;
  }
  sub_10007DE30(*(sqlite3 ***)(v3 + 40), "venues", v39, **(void **)(v2 + 8), 1, (sqlite3_blob **)&v72);
  std::operator+<char>();
  long long v40 = std::string::append(&v74, " (locally ");
  long long v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
  __dst.__r_.__value_.__r.__words[2] = v40->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v41;
  v40->__r_.__value_.__l.__size_ = 0;
  v40->__r_.__value_.__r.__words[2] = 0;
  v40->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&v73, **(void **)(v2 + 8));
  if ((v73.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    long long v42 = &v73;
  }
  else {
    long long v42 = (std::string *)v73.__r_.__value_.__r.__words[0];
  }
  if ((v73.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v43 = HIBYTE(v73.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v43 = v73.__r_.__value_.__l.__size_;
  }
  long long v44 = std::string::append(&__dst, (const std::string::value_type *)v42, v43);
  long long v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
  v69.__r_.__value_.__r.__words[2] = v44->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v69.__r_.__value_.__l.__data_ = v45;
  v44->__r_.__value_.__l.__size_ = 0;
  v44->__r_.__value_.__r.__words[2] = 0;
  v44->__r_.__value_.__r.__words[0] = 0;
  long long v46 = std::string::append(&v69, ")");
  std::string::size_type v47 = v46->__r_.__value_.__r.__words[0];
  *(std::string::size_type *)((char *)v78.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v46->__r_.__value_.__r.__words[1] + 7);
  v78.__r_.__value_.__r.__words[0] = v46->__r_.__value_.__l.__size_;
  char v48 = HIBYTE(v46->__r_.__value_.__r.__words[2]);
  v46->__r_.__value_.__l.__size_ = 0;
  v46->__r_.__value_.__r.__words[2] = 0;
  v46->__r_.__value_.__r.__words[0] = 0;
  v70.__r_.__value_.__r.__words[0] = v47;
  v70.__r_.__value_.__l.__size_ = v78.__r_.__value_.__r.__words[0];
  *(std::string::size_type *)((char *)&v70.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v78.__r_.__value_.__r.__words + 7);
  *((unsigned char *)&v70.__r_.__value_.__s + 23) = v48;
  *(std::string::size_type *)((char *)v78.__r_.__value_.__r.__words + 7) = 0;
  v78.__r_.__value_.__r.__words[0] = 0;
  sub_1002A2B30((__n128 *)buf, (__n128 *)&v70, v72.__r_.__value_.__r.__words[0]);
  if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v70.__r_.__value_.__l.__data_);
  }
  wireless_diagnostics::google::protobuf::io::CopyingOutputStreamAdaptor::CopyingOutputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingOutputStreamAdaptor *)&v77, (wireless_diagnostics::google::protobuf::io::CopyingOutputStream *)buf, -1);
  sub_10031628C();
  if ((wireless_diagnostics::google::protobuf::io::CopyingOutputStreamAdaptor::Flush((wireless_diagnostics::google::protobuf::io::CopyingOutputStreamAdaptor *)&v77) & 1) == 0)
  {
    sub_1003A4E2C();
    abort_report_np();
    __break(1u);
    return;
  }
  wireless_diagnostics::google::protobuf::io::CopyingOutputStreamAdaptor::~CopyingOutputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingOutputStreamAdaptor *)&v77);
  if (SHIBYTE(v84) < 0)
  {
    operator delete(*(void **)&buf[16]);
    wireless_diagnostics::google::protobuf::io::CopyingOutputStream::~CopyingOutputStream((wireless_diagnostics::google::protobuf::io::CopyingOutputStream *)buf);
    if ((SHIBYTE(v69.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_52:
      if ((SHIBYTE(v73.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_53;
      }
      goto LABEL_72;
    }
  }
  else
  {
    wireless_diagnostics::google::protobuf::io::CopyingOutputStream::~CopyingOutputStream((wireless_diagnostics::google::protobuf::io::CopyingOutputStream *)buf);
    if ((SHIBYTE(v69.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_52;
    }
  }
  operator delete(v69.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v73.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_53:
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_54;
    }
LABEL_73:
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v74.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_74;
  }
LABEL_72:
  operator delete(v73.__r_.__value_.__l.__data_);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_73;
  }
LABEL_54:
  if ((SHIBYTE(v74.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_55;
  }
LABEL_74:
  operator delete(v74.__r_.__value_.__l.__data_);
LABEL_55:
  int v49 = sqlite3_blob_close((sqlite3_blob *)v72.__r_.__value_.__l.__data_);
  if (!v49) {
    goto LABEL_59;
  }
  if (qword_10047BF08 == -1)
  {
    long long v50 = qword_10047BF10;
    if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR)) {
      goto LABEL_59;
    }
    goto LABEL_58;
  }
  dispatch_once(&qword_10047BF08, &stru_100460658);
  long long v50 = qword_10047BF10;
  if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR))
  {
LABEL_58:
    *(_DWORD *)int buf = 67240192;
    *(_DWORD *)&uint8_t buf[4] = v49;
    _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_ERROR, "Failed to close blob (error %{public}d)", buf, 8u);
  }
LABEL_59:
  std::string::size_type v51 = v68;
  if (v68 && !atomic_fetch_add(&v68->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v51->__on_zero_shared)(v51);
    std::__shared_weak_count::__release_weak(v51);
  }
  std::promise<void>::set_value(*(std::promise<void> **)(a1 + 40));
}

void sub_10020C510(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::exception_ptr a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,uint64_t a57,sqlite3_blob *a58,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  std::runtime_error::~runtime_error(v76);
  if (a30 < 0)
  {
    operator delete(__p);
    if ((a23 & 0x80000000) == 0)
    {
LABEL_4:
      if ((a44 & 0x80000000) == 0) {
        goto LABEL_5;
      }
      goto LABEL_12;
    }
  }
  else if ((a23 & 0x80000000) == 0)
  {
    goto LABEL_4;
  }
  operator delete(a18);
  if ((a44 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a37 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(a39);
  if ((a37 & 0x80000000) == 0)
  {
LABEL_6:
    *(void *)(v78 - 256) = v77;
    if ((*(char *)(v78 - 225) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(a32);
  *(void *)(v78 - 256) = v77;
  if ((*(char *)(v78 - 225) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a50 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(*(void **)(v78 - 248));
  if ((a50 & 0x80000000) == 0)
  {
LABEL_8:
    *(void *)(v78 - 160) = &off_100451DC0;
    uint64_t v80 = *(void *)(v78 - 152);
    if (!v80) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(a45);
  *(void *)(v78 - 160) = &off_100451DC0;
  uint64_t v80 = *(void *)(v78 - 152);
  if (!v80) {
    goto LABEL_18;
  }
LABEL_16:
  if ((*(unsigned int (**)(uint64_t))(*(void *)v80 + 32))(v80)) {
    *(void *)(v78 - 152) = 0;
  }
LABEL_18:
  std::runtime_error::~runtime_error((std::runtime_error *)(v78 - 176));
  if (a55)
  {
    a56 = (uint64_t)a55;
    operator delete(a55);
  }
  std::runtime_error::~runtime_error(&a73);
  if (a72 < 0) {
    operator delete(a71.__vftable);
  }
  if (a63 < 0) {
    operator delete(a58);
  }
  if (a70 < 0) {
    operator delete(a65);
  }
  if (*(char *)(v78 - 177) < 0) {
    operator delete(*(void **)(v78 - 200));
  }
  __cxa_free_exception(v76);
  if (a75 < 0) {
    operator delete(a74);
  }
  sub_10020FD54((uint64_t)&a13);

  __int16 v81 = (std::__shared_weak_count *)a17;
  if (a17 && !atomic_fetch_add((atomic_ullong *volatile)(a17 + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
    std::__shared_weak_count::__release_weak(v81);
  }
  __cxa_begin_catch(a1);
  int v82 = *(std::promise<void> **)(v75 + 40);
  std::current_exception();
  v83.__ptr_ = &a12;
  std::promise<void>::set_exception(v82, v83);
  std::exception_ptr::~exception_ptr(&a12);
  __cxa_end_catch();
  JUMPOUT(0x10020B6D0);
}

void sub_10020CEC0(sqlite3 **a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a3;
  uint64_t v9 = v8;
  if (v8) {
    os_activity_scope_enter(v8, &state);
  }
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  objc_storeStrong((id *)(a4 + 16), a3);
  int v10 = *(char *)(a2 + 23);
  if (v10 >= 0) {
    int v11 = (const char *)a2;
  }
  else {
    int v11 = *(const char **)a2;
  }
  if (v10 >= 0) {
    int v12 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    int v12 = *(_DWORD *)(a2 + 8);
  }
  int v13 = sqlite3_prepare_v2(*a1, v11, v12, (sqlite3_stmt **)a4, 0);
  sub_100088644(v13, *a1);
  if (v13)
  {
    int v14 = __error();
    sub_100295674(*v14, &v27);
    __cxa_allocate_exception(0x40uLL);
    sub_1000AE4B0(&v23, " w/ ");
    long long v15 = std::string::insert(&v23, 0, "Failed to prepare query");
    long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    v24.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v16;
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    v15->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&__dst, v27.__r_.__value_.__l.__data_, v27.__r_.__value_.__l.__size_);
    }
    else {
      std::string __dst = v27;
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_dst = &__dst;
    }
    else {
      p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __dst.__r_.__value_.__l.__size_;
    }
    long long v19 = std::string::append(&v24, (const std::string::value_type *)p_dst, size);
    long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v25.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v26, &v25);
    v26.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v21);
    sub_100204FC4(&v26, (uint64_t)"statement<nCols, nQueries, ColumnNumberType> db::resources::handle::prepare(const std::string &, __strong os_activity_t) const [nCols = 0UL, nQueries = 2UL, ColumnNumberType = unsigned long]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 633, (uint64_t)v21);
  }
  *(void *)(a4 + 8) = *a1;
  if (v9) {
    os_activity_scope_leave(&state);
  }
}

void sub_10020D210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,void *a62,uint64_t a63)
{
  if (a22 < 0)
  {
    operator delete(__p);
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a35 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a10);
  if ((a35 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a28 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a30);
  if ((a28 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a42 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a23);
  if ((a42 & 0x80000000) == 0)
  {
LABEL_6:
    sub_100205504((std::runtime_error *)(v71 - 184));
    std::string v73 = a47;
    if (!a47)
    {
LABEL_14:
      std::runtime_error::~runtime_error((std::runtime_error *)(v71 - 200));
      if (*(char *)(v71 - 201) < 0)
      {
        operator delete(*(void **)(v71 - 224));
        if ((a55 & 0x80000000) == 0)
        {
LABEL_16:
          if ((a67 & 0x80000000) == 0) {
            goto LABEL_17;
          }
          goto LABEL_22;
        }
      }
      else if ((a55 & 0x80000000) == 0)
      {
        goto LABEL_16;
      }
      operator delete(a50);
      if ((a67 & 0x80000000) == 0)
      {
LABEL_17:
        if (a61 < 0) {
          goto LABEL_18;
        }
        goto LABEL_23;
      }
LABEL_22:
      operator delete(a62);
      if (a61 < 0)
      {
LABEL_18:
        operator delete(a56);
        if ((v70 & 1) == 0)
        {
LABEL_25:
          if (*(char *)(v71 - 97) < 0)
          {
            operator delete(*(void **)(v71 - 120));
            sub_10020D48C(v68);

            _Unwind_Resume(a1);
          }
          sub_10020D48C(v68);

          _Unwind_Resume(a1);
        }
LABEL_24:
        __cxa_free_exception(v69);
        goto LABEL_25;
      }
LABEL_23:
      if (!v70) {
        goto LABEL_25;
      }
      goto LABEL_24;
    }
LABEL_13:
    operator delete(v73);
    goto LABEL_14;
  }
LABEL_12:
  operator delete(a37);
  sub_100205504((std::runtime_error *)(v71 - 184));
  std::string v73 = a47;
  if (!a47) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

uint64_t sub_10020D48C(uint64_t a1)
{
  return a1;
}

void *sub_10020D4C0(void *a1, long long *a2)
{
  *a1 = off_1004607F0;
  uint64_t v3 = a1 + 1;
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000559FC(v3, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    v3[2] = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v3 = v4;
  }
  return a1;
}

void sub_10020D534(sqlite3_stmt **a1, int a2, int a3)
{
  int v6 = sqlite3_bind_zeroblob(*a1, a2, a3);
  sub_100088644(v6, a1[1]);
  if (v6)
  {
    uint64_t v7 = __error();
    sub_100295674(*v7, &v36);
    __cxa_allocate_exception(0x40uLL);
    std::to_string(&v29, a3);
    uint64_t v8 = std::string::insert(&v29, 0, "Failed to bind zero blob of size ");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    int v10 = std::string::append(&v30, " to ");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v31.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v28, a2);
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v12 = &v28;
    }
    else {
      int v12 = (std::string *)v28.__r_.__value_.__r.__words[0];
    }
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v28.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v28.__r_.__value_.__l.__size_;
    }
    int v14 = std::string::append(&v31, (const std::string::value_type *)v12, size);
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    sub_1000AE4B0(v26, " w/ ");
    if ((v27 & 0x80u) == 0) {
      long long v16 = (const std::string::value_type *)v26;
    }
    else {
      long long v16 = (const std::string::value_type *)v26[0];
    }
    if ((v27 & 0x80u) == 0) {
      std::string::size_type v17 = v27;
    }
    else {
      std::string::size_type v17 = v26[1];
    }
    uint64_t v18 = std::string::append(&v32, v16, v17);
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v33.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&__dst, v36.__r_.__value_.__l.__data_, v36.__r_.__value_.__l.__size_);
    }
    else {
      std::string __dst = v36;
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_dst = &__dst;
    }
    else {
      p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v21 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v21 = __dst.__r_.__value_.__l.__size_;
    }
    uint64_t v22 = std::string::append(&v33, (const std::string::value_type *)p_dst, v21);
    long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v34.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v35, &v34);
    v35.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v24);
    sub_100204FC4(&v35, (uint64_t)"void db::resources::statement<0, 2>::bind_zeroblob(int, int) [nCols = 0, nQueries = 2, ColumnNumberType = unsigned long, runtime_binding = false]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 479, (uint64_t)v24);
  }
}

void sub_10020D8FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60,void *a61,uint64_t a62,int a63)
{
  if (a21 < 0)
  {
    operator delete(__p);
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a34 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a9);
  if ((a34 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a29);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a47 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(a22);
  if ((a47 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(a42);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    sub_100205504((std::runtime_error *)(v80 - 152));
    int v82 = a52;
    if (!a52)
    {
LABEL_16:
      std::runtime_error::~runtime_error((std::runtime_error *)(v80 - 168));
      if (*(char *)(v80 - 169) < 0)
      {
        operator delete(*(void **)(v80 - 192));
        if ((a60 & 0x80000000) == 0)
        {
LABEL_18:
          if ((*(char *)(v80 - 201) & 0x80000000) == 0) {
            goto LABEL_19;
          }
          goto LABEL_29;
        }
      }
      else if ((a60 & 0x80000000) == 0)
      {
        goto LABEL_18;
      }
      operator delete(a55);
      if ((*(char *)(v80 - 201) & 0x80000000) == 0)
      {
LABEL_19:
        if ((a66 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        goto LABEL_30;
      }
LABEL_29:
      operator delete(*(void **)(v80 - 224));
      if ((a66 & 0x80000000) == 0)
      {
LABEL_20:
        if ((*(char *)(v80 - 233) & 0x80000000) == 0) {
          goto LABEL_21;
        }
        goto LABEL_31;
      }
LABEL_30:
      operator delete(a61);
      if ((*(char *)(v80 - 233) & 0x80000000) == 0)
      {
LABEL_21:
        if ((a72 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        goto LABEL_32;
      }
LABEL_31:
      operator delete(*(void **)(v80 - 256));
      if ((a72 & 0x80000000) == 0)
      {
LABEL_22:
        if ((a78 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        goto LABEL_33;
      }
LABEL_32:
      operator delete(a67);
      if ((a78 & 0x80000000) == 0)
      {
LABEL_23:
        if ((a76 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        goto LABEL_34;
      }
LABEL_33:
      operator delete(a77);
      if ((a76 & 0x80000000) == 0)
      {
LABEL_24:
        if (a74 < 0) {
          goto LABEL_25;
        }
        goto LABEL_35;
      }
LABEL_34:
      operator delete(a75);
      if (a74 < 0)
      {
LABEL_25:
        operator delete(a73);
        if ((v79 & 1) == 0)
        {
LABEL_37:
          if (*(char *)(v80 - 65) < 0) {
            operator delete(*(void **)(v80 - 88));
          }
          _Unwind_Resume(a1);
        }
LABEL_36:
        __cxa_free_exception(v78);
        goto LABEL_37;
      }
LABEL_35:
      if (!v79) {
        goto LABEL_37;
      }
      goto LABEL_36;
    }
LABEL_15:
    operator delete(v82);
    goto LABEL_16;
  }
LABEL_14:
  operator delete(a35);
  sub_100205504((std::runtime_error *)(v80 - 152));
  int v82 = a52;
  if (!a52) {
    goto LABEL_16;
  }
  goto LABEL_15;
}

size_t sub_10020DBEC@<X0>(size_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2 = a2;
  size_t result = *a1;
  if (!result)
  {
    a2[23] = 8;
    strcpy(a2, "no query");
    return result;
  }
  long long v4 = sqlite3_sql((sqlite3_stmt *)result);
  if (v4) {
    std::exception_ptr v5 = v4;
  }
  else {
    std::exception_ptr v5 = "<unknown query>";
  }
  size_t result = strlen(v5);
  if (result >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  size_t v6 = result;
  if (result >= 0x17)
  {
    uint64_t v7 = (result & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((result | 7) != 0x17) {
      uint64_t v7 = result | 7;
    }
    uint64_t v8 = v7 + 1;
    long long v9 = (char *)operator new(v7 + 1);
    *((void *)v2 + 1) = v6;
    *((void *)v2 + 2) = v8 | 0x8000000000000000;
    *(void *)uint64_t v2 = v9;
    uint64_t v2 = v9;
  }
  else
  {
    v2[23] = result;
    if (!result) {
      goto LABEL_14;
    }
  }
  size_t result = (size_t)memmove(v2, v5, v6);
LABEL_14:
  v2[v6] = 0;
  return result;
}

void sub_10020DCD8(sqlite3_stmt **a1, int a2, unint64_t a3)
{
  int v6 = sqlite3_bind_int64(*a1, a2, a3);
  sub_100088644(v6, a1[1]);
  if (v6)
  {
    uint64_t v7 = __error();
    sub_100295674(*v7, &v36);
    __cxa_allocate_exception(0x40uLL);
    std::to_string(&v29, a3);
    uint64_t v8 = std::string::insert(&v29, 0, "Failed to bind ");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    int v10 = std::string::append(&v30, " to ");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v31.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v28, a2);
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v12 = &v28;
    }
    else {
      int v12 = (std::string *)v28.__r_.__value_.__r.__words[0];
    }
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v28.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v28.__r_.__value_.__l.__size_;
    }
    int v14 = std::string::append(&v31, (const std::string::value_type *)v12, size);
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    sub_1000AE4B0(v26, " w/ ");
    if ((v27 & 0x80u) == 0) {
      long long v16 = (const std::string::value_type *)v26;
    }
    else {
      long long v16 = (const std::string::value_type *)v26[0];
    }
    if ((v27 & 0x80u) == 0) {
      std::string::size_type v17 = v27;
    }
    else {
      std::string::size_type v17 = v26[1];
    }
    uint64_t v18 = std::string::append(&v32, v16, v17);
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v33.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&__dst, v36.__r_.__value_.__l.__data_, v36.__r_.__value_.__l.__size_);
    }
    else {
      std::string __dst = v36;
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_dst = &__dst;
    }
    else {
      p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v21 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v21 = __dst.__r_.__value_.__l.__size_;
    }
    uint64_t v22 = std::string::append(&v33, (const std::string::value_type *)p_dst, v21);
    long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v34.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v35, &v34);
    v35.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v24);
    sub_100204FC4(&v35, (uint64_t)"void db::resources::statement<0, 2>::bind(int, uint64_t) [nCols = 0, nQueries = 2, ColumnNumberType = unsigned long, runtime_binding = false]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 425, (uint64_t)v24);
  }
}

void sub_10020E0A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60,void *a61,uint64_t a62,int a63)
{
  if (a21 < 0)
  {
    operator delete(__p);
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a34 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a9);
  if ((a34 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a29);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a47 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(a22);
  if ((a47 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(a42);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    sub_100205504((std::runtime_error *)(v80 - 152));
    int v82 = a52;
    if (!a52)
    {
LABEL_16:
      std::runtime_error::~runtime_error((std::runtime_error *)(v80 - 168));
      if (*(char *)(v80 - 169) < 0)
      {
        operator delete(*(void **)(v80 - 192));
        if ((a60 & 0x80000000) == 0)
        {
LABEL_18:
          if ((*(char *)(v80 - 201) & 0x80000000) == 0) {
            goto LABEL_19;
          }
          goto LABEL_29;
        }
      }
      else if ((a60 & 0x80000000) == 0)
      {
        goto LABEL_18;
      }
      operator delete(a55);
      if ((*(char *)(v80 - 201) & 0x80000000) == 0)
      {
LABEL_19:
        if ((a66 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        goto LABEL_30;
      }
LABEL_29:
      operator delete(*(void **)(v80 - 224));
      if ((a66 & 0x80000000) == 0)
      {
LABEL_20:
        if ((*(char *)(v80 - 233) & 0x80000000) == 0) {
          goto LABEL_21;
        }
        goto LABEL_31;
      }
LABEL_30:
      operator delete(a61);
      if ((*(char *)(v80 - 233) & 0x80000000) == 0)
      {
LABEL_21:
        if ((a72 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        goto LABEL_32;
      }
LABEL_31:
      operator delete(*(void **)(v80 - 256));
      if ((a72 & 0x80000000) == 0)
      {
LABEL_22:
        if ((a78 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        goto LABEL_33;
      }
LABEL_32:
      operator delete(a67);
      if ((a78 & 0x80000000) == 0)
      {
LABEL_23:
        if ((a76 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        goto LABEL_34;
      }
LABEL_33:
      operator delete(a77);
      if ((a76 & 0x80000000) == 0)
      {
LABEL_24:
        if (a74 < 0) {
          goto LABEL_25;
        }
        goto LABEL_35;
      }
LABEL_34:
      operator delete(a75);
      if (a74 < 0)
      {
LABEL_25:
        operator delete(a73);
        if ((v79 & 1) == 0)
        {
LABEL_37:
          if (*(char *)(v80 - 65) < 0) {
            operator delete(*(void **)(v80 - 88));
          }
          _Unwind_Resume(a1);
        }
LABEL_36:
        __cxa_free_exception(v78);
        goto LABEL_37;
      }
LABEL_35:
      if (!v79) {
        goto LABEL_37;
      }
      goto LABEL_36;
    }
LABEL_15:
    operator delete(v82);
    goto LABEL_16;
  }
LABEL_14:
  operator delete(a35);
  sub_100205504((std::runtime_error *)(v80 - 152));
  int v82 = a52;
  if (!a52) {
    goto LABEL_16;
  }
  goto LABEL_15;
}

void sub_10020E390(std::runtime_error *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  std::runtime_error::runtime_error(&v12, a1);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  int v17 = -1;
  v12.__vftable = (std::runtime_error_vtbl *)off_100460E90;
  int v13 = off_100460EB8;
  sub_10020F32C((uint64_t)&v18, (uint64_t)&v12);
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  int v21 = a4;
  long long v9 = *(const void **)a5;
  size_t v10 = *(void *)(a5 + 8) - *(void *)a5;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0) {
      sub_1000A9108();
    }
    long long __p = operator new(v10);
    memcpy(__p, v9, v10);
  }
  sub_10020EFD0();
}

void sub_10020E69C(void *a1)
{
  std::runtime_error::~runtime_error(v1);
  sub_1000A6954(a1);
}

void sub_10020E6B0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    operator delete(__p);
    sub_1000A6954(a1);
  }
  sub_1000A6954(a1);
}

uint64_t sub_10020E6D8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2)->__vftable = (std::runtime_error_vtbl *)&off_100460ED8;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = off_100460DF0;
  *(void *)(a1 + 16) = off_100460E28;
  *(void *)(a1 + 56) = &off_100460E60;
  return a1;
}

void sub_10020E7F8(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10020E80C(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_10020E89C()
{
}

void sub_10020EB38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_10020645C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10020EB4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_10020645C((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10020EB68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10020EBF8()
{
}

void sub_10020EE84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100207F88((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10020EE98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100207F88((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10020EEB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10020EF44(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_10020EFD0()
{
}

void sub_10020F26C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CD2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10020F280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_1000CD2E0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10020F29C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10020F32C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4->__vftable = (std::runtime_error_vtbl *)&off_100460ED8;
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_100460DF0;
  *(void *)(a1 + 16) = off_100460E28;
  *(void *)(a1 + 56) = &off_100460E60;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_10020F458(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10020F46C(_Unwind_Exception *a1)
{
  sub_10020F480(v1);
  _Unwind_Resume(a1);
}

void sub_10020F480(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_10020F50C(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_10020F5AC()
{
}

void sub_10020F608()
{
}

void sub_10020F62C(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_10020E6D8((uint64_t)exception, a1);
}

void sub_10020F674(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10020F688(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_10020F710(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

void sub_10020F7AC()
{
}

void sub_10020F81C()
{
}

void sub_10020F840(void *a1)
{
  uint64_t v1 = (uint64_t)a1 + *(void *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x40uLL);
  sub_10020E6D8((uint64_t)exception, v1);
}

void sub_10020F89C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10020F8B0(void *a1)
{
  uint64_t v1 = (std::runtime_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(v1);
}

void sub_10020F950(void *a1)
{
  uint64_t v1 = (std::runtime_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(v1);

  operator delete();
}

void sub_10020FA04(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_10020FAA4(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_10020FB2C(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

void sub_10020FBC8(std::runtime_error *a1)
{
  std::runtime_error::~runtime_error(a1);

  operator delete();
}

uint64_t sub_10020FC00(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4->__vftable = (std::runtime_error_vtbl *)&off_100460ED8;
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_100460DF0;
  *(void *)(a1 + 16) = off_100460E28;
  *(void *)(a1 + 56) = &off_100460E60;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_10020FD2C(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10020FD40(_Unwind_Exception *a1)
{
  sub_10020F480(v1);
  _Unwind_Resume(a1);
}

void sub_10020FD54(uint64_t a1)
{
  uint64_t v2 = *(sqlite3_stmt **)a1;
  if (!v2) {
    return;
  }
  uint64_t v3 = sqlite3_sql(v2);
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = "<unknown query>";
  }
  size_t v5 = strlen(v4);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    p_dst = (void **)operator new(v8 + 1);
    std::string __dst = p_dst;
    unint64_t v14 = v9 | 0x8000000000000000;
    goto LABEL_12;
  }
  HIBYTE(v14) = v5;
  p_dst = (void **)&__dst;
  if (v5) {
LABEL_12:
  }
    memmove(p_dst, v4, v6);
  *((unsigned char *)p_dst + v6) = 0;
  int v10 = sqlite3_finalize(*(sqlite3_stmt **)a1);
  if (v10)
  {
    if (qword_10047BF08 != -1)
    {
      dispatch_once(&qword_10047BF08, &stru_100460658);
      long long v11 = qword_10047BF10;
      if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    long long v11 = qword_10047BF10;
    if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR))
    {
LABEL_16:
      *(_DWORD *)int buf = 67240192;
      int v16 = v10;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Failed to finalize with %{public}d", buf, 8u);
    }
  }
LABEL_17:
  *(void *)a1 = 0;
  std::runtime_error v12 = *(void **)(a1 + 16);
  if (v12)
  {
    *(void *)(a1 + 16) = 0;
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst);
  }
}

void sub_10020FF14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10020FF3C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(v2 + 16);
  if (qword_10047BF08 != -1) {
    dispatch_once(&qword_10047BF08, &stru_100460658);
  }
  uint64_t v4 = (id)qword_10047BF10;
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    uint64_t v5 = sub_10031A82C(*(void *)v2);
    unint64_t v6 = **(void **)(v2 + 8);
    buf[0].n128_u32[0] = 134218240;
    *(unint64_t *)((char *)buf[0].n128_u64 + 4) = v5;
    buf[0].n128_u16[6] = 2048;
    *(unint64_t *)((char *)&buf[0].n128_u64[1] + 6) = v6;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Creating tile entry for BLOB with version %lld (locally %llu)", (uint8_t *)buf, 0x16u);
  }

  long long v7 = *(sqlite3 ***)(v3 + 40);
  *((unsigned char *)&v75.__r_.__value_.__s + 23) = 13;
  strcpy((char *)&v75, "REPLACE INTO ");
  uint64_t v8 = std::string::append(&v75, "tile_data");
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v82.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v82.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  int v10 = std::string::append(&v82, " VALUES(?, ?, ?)");
  __n128 v11 = *(__n128 *)&v10->__r_.__value_.__l.__data_;
  buf[1].n128_u64[0] = v10->__r_.__value_.__r.__words[2];
  buf[0] = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  sub_100212028(v7, (uint64_t)buf, 0, (uint64_t)&pStmt);
  if ((buf[1].n128_i8[7] & 0x80000000) == 0)
  {
    if ((SHIBYTE(v82.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_7;
    }
LABEL_65:
    operator delete(v82.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v75.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_8;
    }
LABEL_66:
    operator delete(v75.__r_.__value_.__l.__data_);
    goto LABEL_8;
  }
  operator delete((void *)buf[0].n128_u64[0]);
  if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_65;
  }
LABEL_7:
  if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_66;
  }
LABEL_8:
  sub_100212628(&pStmt, 1, **(void **)(v2 + 8));
  int v12 = sub_100316264(*(void *)v2);
  sub_100212CE0(&pStmt, 2, v12);
  int v13 = sub_10031C458(*(void *)(v2 + 24));
  sub_100212CE0(&pStmt, 3, v13);
  while (1)
  {
    do
    {
      int v14 = sqlite3_step(pStmt);
      int v15 = v14;
    }
    while (v14 == 100);
    if (v14 == 101) {
      break;
    }
    if (v14 == 19)
    {
      if (qword_10047BF08 == -1)
      {
        long long v58 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO)) {
          goto LABEL_93;
        }
      }
      else
      {
        dispatch_once(&qword_10047BF08, &stru_100460658);
        long long v58 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO))
        {
LABEL_93:
          buf[0].n128_u16[0] = 0;
          _os_log_impl((void *)&_mh_execute_header, v58, OS_LOG_TYPE_INFO, "Query constraint violation", (uint8_t *)buf, 2u);
        }
      }
      __cxa_allocate_exception(0x40uLL);
      v75.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
      *(_OWORD *)&v75.__r_.__value_.__r.__words[1] = xmmword_1003F6340;
      strcpy(v75.__r_.__value_.__l.__data_, "Constraint violation stepping through statement");
      std::runtime_error::runtime_error((std::runtime_error *)&v79, &v75);
      v79.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100460ED8;
      sub_10018E868((uint64_t)&v73);
      sub_10020E390((std::runtime_error *)&v79, (uint64_t)"auto db::resources::statement<0, 3>::run((lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:1153:22) &&)::(anonymous class)::operator()() const [nCols = 0, nQueries = 3, ColumnNumberType = unsigned long]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 486, (uint64_t)&v73);
    }
    sub_100088644(v14, db);
    if (v15)
    {
      int v16 = __error();
      sub_100295674(*v16, &__dst);
      __cxa_allocate_exception(0x40uLL);
      *((unsigned char *)&v77.__r_.__value_.__s + 23) = 4;
      strcpy((char *)&v77, " w/ ");
      int v17 = std::string::insert(&v77, 0, "Failed sqlite3_step");
      long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
      v78.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v78.__r_.__value_.__l.__data_ = v18;
      v17->__r_.__value_.__l.__size_ = 0;
      v17->__r_.__value_.__r.__words[2] = 0;
      v17->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        sub_1000559FC(&v84, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
      }
      else {
        std::string v84 = __dst;
      }
      if ((v84.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        long long v59 = &v84;
      }
      else {
        long long v59 = (std::string *)v84.__r_.__value_.__r.__words[0];
      }
      if ((v84.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v84.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v84.__r_.__value_.__l.__size_;
      }
      std::string::size_type v61 = std::string::append(&v78, (const std::string::value_type *)v59, size);
      long long v62 = *(_OWORD *)&v61->__r_.__value_.__l.__data_;
      v79.__r_.__value_.__r.__words[2] = v61->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v79.__r_.__value_.__l.__data_ = v62;
      v61->__r_.__value_.__l.__size_ = 0;
      v61->__r_.__value_.__r.__words[2] = 0;
      v61->__r_.__value_.__r.__words[0] = 0;
      std::runtime_error::runtime_error(&v80, &v79);
      v80.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
      sub_10018E868((uint64_t)v83);
      sub_100204FC4(&v80, (uint64_t)"void db::resources::statement<0, 3>::run(Cb &&, ConstraintHandler &&) [nCols = 0, nQueries = 3, ColumnNumberType = unsigned long, Cb = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:1153:22), ConstraintHandler = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h:485:43)]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 512, (uint64_t)v83);
    }
  }
  int v19 = sqlite3_reset(pStmt);
  sub_100088644(v19, db);
  if (v19)
  {
    long long v63 = __error();
    sub_100295674(*v63, &__dst);
    __cxa_allocate_exception(0x40uLL);
    *((unsigned char *)&v77.__r_.__value_.__s + 23) = 4;
    strcpy((char *)&v77, " w/ ");
    long long v64 = std::string::insert(&v77, 0, "Failed to execute query");
    long long v65 = *(_OWORD *)&v64->__r_.__value_.__l.__data_;
    v78.__r_.__value_.__r.__words[2] = v64->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v78.__r_.__value_.__l.__data_ = v65;
    v64->__r_.__value_.__l.__size_ = 0;
    v64->__r_.__value_.__r.__words[2] = 0;
    v64->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&v84, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
    }
    else {
      std::string v84 = __dst;
    }
    if ((v84.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      id v66 = &v84;
    }
    else {
      id v66 = (std::string *)v84.__r_.__value_.__r.__words[0];
    }
    if ((v84.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v67 = HIBYTE(v84.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v67 = v84.__r_.__value_.__l.__size_;
    }
    uint64_t v68 = std::string::append(&v78, (const std::string::value_type *)v66, v67);
    long long v69 = *(_OWORD *)&v68->__r_.__value_.__l.__data_;
    v79.__r_.__value_.__r.__words[2] = v68->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v79.__r_.__value_.__l.__data_ = v69;
    v68->__r_.__value_.__l.__size_ = 0;
    v68->__r_.__value_.__r.__words[2] = 0;
    v68->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v80, &v79);
    v80.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v83);
    sub_100204FC4(&v80, (uint64_t)"void db::resources::statement<0, 3>::run(Cb &&, ConstraintHandler &&) [nCols = 0, nQueries = 3, ColumnNumberType = unsigned long, Cb = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:1153:22), ConstraintHandler = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h:485:43)]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 518, (uint64_t)v83);
  }
  sub_100213398((uint64_t)&pStmt);

  if (qword_10047BF08 == -1)
  {
    uint64_t v20 = (id)qword_10047BF10;
    if (!os_log_type_enabled(v20, OS_LOG_TYPE_INFO)) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  dispatch_once(&qword_10047BF08, &stru_100460658);
  uint64_t v20 = (id)qword_10047BF10;
  if (os_log_type_enabled(v20, OS_LOG_TYPE_INFO))
  {
LABEL_18:
    uint64_t v21 = sub_10031A82C(*(void *)v2);
    unint64_t v22 = **(void **)(v2 + 8);
    buf[0].n128_u32[0] = 134218240;
    *(unint64_t *)((char *)buf[0].n128_u64 + 4) = v21;
    buf[0].n128_u16[6] = 2048;
    *(unint64_t *)((char *)&buf[0].n128_u64[1] + 6) = v22;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "Writing tile header BLOB with version %lld (locally %llu)", (uint8_t *)buf, 0x16u);
  }
LABEL_19:

  sub_10007DE30(*(sqlite3 ***)(v3 + 40), "tile_data", "headers", **(void **)(v2 + 8), 1, v74);
  uint64_t v23 = sub_10031A82C(*(void *)v2);
  std::to_string(&v78, v23);
  std::string v24 = std::string::insert(&v78, 0, "tile header with version ");
  long long v25 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
  v79.__r_.__value_.__r.__words[2] = v24->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v79.__r_.__value_.__l.__data_ = v25;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  std::runtime_error v26 = std::string::append(&v79, " (locally ");
  long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
  __dst.__r_.__value_.__r.__words[2] = v26->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v27;
  v26->__r_.__value_.__l.__size_ = 0;
  v26->__r_.__value_.__r.__words[2] = 0;
  v26->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&v77, **(void **)(v2 + 8));
  if ((v77.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string v28 = &v77;
  }
  else {
    std::string v28 = (std::string *)v77.__r_.__value_.__r.__words[0];
  }
  if ((v77.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v29 = HIBYTE(v77.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v29 = v77.__r_.__value_.__l.__size_;
  }
  std::string v30 = std::string::append(&__dst, (const std::string::value_type *)v28, v29);
  long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
  v73.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v73.__r_.__value_.__l.__data_ = v31;
  v30->__r_.__value_.__l.__size_ = 0;
  v30->__r_.__value_.__r.__words[2] = 0;
  v30->__r_.__value_.__r.__words[0] = 0;
  std::string v32 = std::string::append(&v73, ")");
  std::string::size_type v33 = v32->__r_.__value_.__r.__words[0];
  *(std::string::size_type *)((char *)v84.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v32->__r_.__value_.__r.__words[1] + 7);
  v84.__r_.__value_.__r.__words[0] = v32->__r_.__value_.__l.__size_;
  char v34 = HIBYTE(v32->__r_.__value_.__r.__words[2]);
  v32->__r_.__value_.__l.__size_ = 0;
  v32->__r_.__value_.__r.__words[2] = 0;
  v32->__r_.__value_.__r.__words[0] = 0;
  v75.__r_.__value_.__r.__words[0] = v33;
  v75.__r_.__value_.__l.__size_ = v84.__r_.__value_.__r.__words[0];
  *(std::string::size_type *)((char *)&v75.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v84.__r_.__value_.__r.__words + 7);
  *((unsigned char *)&v75.__r_.__value_.__s + 23) = v34;
  *(std::string::size_type *)((char *)v84.__r_.__value_.__r.__words + 7) = 0;
  v84.__r_.__value_.__r.__words[0] = 0;
  sub_1002A2B30(buf, (__n128 *)&v75, (unint64_t)v74[0]);
  if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v75.__r_.__value_.__l.__data_);
  }
  wireless_diagnostics::google::protobuf::io::CopyingOutputStreamAdaptor::CopyingOutputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingOutputStreamAdaptor *)&v82, (wireless_diagnostics::google::protobuf::io::CopyingOutputStream *)buf, -1);
  sub_10031628C();
  if ((wireless_diagnostics::google::protobuf::io::CopyingOutputStreamAdaptor::Flush((wireless_diagnostics::google::protobuf::io::CopyingOutputStreamAdaptor *)&v82) & 1) == 0)
  {
    sub_1003A4E2C();
    abort_report_np();
    goto LABEL_115;
  }
  wireless_diagnostics::google::protobuf::io::CopyingOutputStreamAdaptor::~CopyingOutputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingOutputStreamAdaptor *)&v82);
  if (v86 < 0)
  {
    operator delete((void *)buf[1].n128_u64[0]);
    wireless_diagnostics::google::protobuf::io::CopyingOutputStream::~CopyingOutputStream((wireless_diagnostics::google::protobuf::io::CopyingOutputStream *)buf);
    if ((SHIBYTE(v73.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_30:
      if ((SHIBYTE(v77.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_31;
      }
      goto LABEL_69;
    }
  }
  else
  {
    wireless_diagnostics::google::protobuf::io::CopyingOutputStream::~CopyingOutputStream((wireless_diagnostics::google::protobuf::io::CopyingOutputStream *)buf);
    if ((SHIBYTE(v73.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
  }
  operator delete(v73.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v77.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_70;
  }
LABEL_69:
  operator delete(v77.__r_.__value_.__l.__data_);
  if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_32:
    if ((SHIBYTE(v79.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_71;
  }
LABEL_70:
  operator delete(__dst.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v79.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v78.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_72;
  }
LABEL_71:
  operator delete(v79.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v78.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_34:
    if (qword_10047BF08 == -1) {
      goto LABEL_35;
    }
    goto LABEL_73;
  }
LABEL_72:
  operator delete(v78.__r_.__value_.__l.__data_);
  if (qword_10047BF08 == -1)
  {
LABEL_35:
    std::runtime_error v35 = (id)qword_10047BF10;
    if (!os_log_type_enabled(v35, OS_LOG_TYPE_INFO)) {
      goto LABEL_37;
    }
    goto LABEL_36;
  }
LABEL_73:
  dispatch_once(&qword_10047BF08, &stru_100460658);
  std::runtime_error v35 = (id)qword_10047BF10;
  if (os_log_type_enabled(v35, OS_LOG_TYPE_INFO))
  {
LABEL_36:
    uint64_t v36 = sub_10031A82C(*(void *)v2);
    unint64_t v37 = **(void **)(v2 + 8);
    buf[0].n128_u32[0] = 134218240;
    *(unint64_t *)((char *)buf[0].n128_u64 + 4) = v36;
    buf[0].n128_u16[6] = 2048;
    *(unint64_t *)((char *)&buf[0].n128_u64[1] + 6) = v37;
    _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_INFO, "Writing tile data BLOB with version %lld (locally %llu)", (uint8_t *)buf, 0x16u);
  }
LABEL_37:

  sub_10007DE30(*(sqlite3 ***)(v3 + 40), "tile_data", "tiles", **(void **)(v2 + 8), 1, (sqlite3_blob **)&v82);
  int v38 = v74[0];
  v74[0] = (sqlite3_blob *)v82.__r_.__value_.__l.__data_;
  v82.__r_.__value_.__r.__words[0] = (std::string::size_type)v38;
  int v39 = sqlite3_blob_close(v38);
  if (v39)
  {
    if (qword_10047BF08 != -1)
    {
      dispatch_once(&qword_10047BF08, &stru_100460658);
      long long v40 = qword_10047BF10;
      if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_41;
      }
      goto LABEL_40;
    }
    long long v40 = qword_10047BF10;
    if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR))
    {
LABEL_40:
      buf[0].n128_u32[0] = 67240192;
      buf[0].n128_u32[1] = v39;
      _os_log_impl((void *)&_mh_execute_header, v40, OS_LOG_TYPE_ERROR, "Failed to close blob (error %{public}d)", (uint8_t *)buf, 8u);
    }
  }
LABEL_41:
  uint64_t v41 = sub_10031A82C(*(void *)v2);
  std::to_string(&v78, v41);
  long long v42 = std::string::insert(&v78, 0, "tile data with version ");
  long long v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
  v79.__r_.__value_.__r.__words[2] = v42->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v79.__r_.__value_.__l.__data_ = v43;
  v42->__r_.__value_.__l.__size_ = 0;
  v42->__r_.__value_.__r.__words[2] = 0;
  v42->__r_.__value_.__r.__words[0] = 0;
  long long v44 = std::string::append(&v79, " (locally ");
  long long v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
  __dst.__r_.__value_.__r.__words[2] = v44->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v45;
  v44->__r_.__value_.__l.__size_ = 0;
  v44->__r_.__value_.__r.__words[2] = 0;
  v44->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&v77, **(void **)(v2 + 8));
  if ((v77.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    long long v46 = &v77;
  }
  else {
    long long v46 = (std::string *)v77.__r_.__value_.__r.__words[0];
  }
  if ((v77.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v47 = HIBYTE(v77.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v47 = v77.__r_.__value_.__l.__size_;
  }
  char v48 = std::string::append(&__dst, (const std::string::value_type *)v46, v47);
  long long v49 = *(_OWORD *)&v48->__r_.__value_.__l.__data_;
  v73.__r_.__value_.__r.__words[2] = v48->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v73.__r_.__value_.__l.__data_ = v49;
  v48->__r_.__value_.__l.__size_ = 0;
  v48->__r_.__value_.__r.__words[2] = 0;
  v48->__r_.__value_.__r.__words[0] = 0;
  long long v50 = std::string::append(&v73, ")");
  std::string::size_type v51 = v50->__r_.__value_.__r.__words[0];
  *(void *)((char *)v83 + 7) = *(std::string::size_type *)((char *)&v50->__r_.__value_.__r.__words[1] + 7);
  v83[0] = v50->__r_.__value_.__l.__size_;
  char v52 = HIBYTE(v50->__r_.__value_.__r.__words[2]);
  v50->__r_.__value_.__l.__size_ = 0;
  v50->__r_.__value_.__r.__words[2] = 0;
  v50->__r_.__value_.__r.__words[0] = 0;
  uint64_t v53 = *(void *)(v2 + 24);
  v75.__r_.__value_.__r.__words[0] = v51;
  v75.__r_.__value_.__l.__size_ = v83[0];
  *(std::string::size_type *)((char *)&v75.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v83 + 7);
  *((unsigned char *)&v75.__r_.__value_.__s + 23) = v52;
  memset(v83, 0, 15);
  sub_1002A2B30(buf, (__n128 *)&v75, (unint64_t)v74[0]);
  if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v75.__r_.__value_.__l.__data_);
  }
  wireless_diagnostics::google::protobuf::io::CopyingOutputStreamAdaptor::CopyingOutputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingOutputStreamAdaptor *)&v82, (wireless_diagnostics::google::protobuf::io::CopyingOutputStream *)buf, -1);
  sub_10031BE30(v53, (uint64_t)&v82);
  if (wireless_diagnostics::google::protobuf::io::CopyingOutputStreamAdaptor::Flush((wireless_diagnostics::google::protobuf::io::CopyingOutputStreamAdaptor *)&v82))
  {
    wireless_diagnostics::google::protobuf::io::CopyingOutputStreamAdaptor::~CopyingOutputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingOutputStreamAdaptor *)&v82);
    if (v86 < 0)
    {
      operator delete((void *)buf[1].n128_u64[0]);
      wireless_diagnostics::google::protobuf::io::CopyingOutputStream::~CopyingOutputStream((wireless_diagnostics::google::protobuf::io::CopyingOutputStream *)buf);
      if ((SHIBYTE(v73.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_52:
        if ((SHIBYTE(v77.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_53;
        }
        goto LABEL_77;
      }
    }
    else
    {
      wireless_diagnostics::google::protobuf::io::CopyingOutputStream::~CopyingOutputStream((wireless_diagnostics::google::protobuf::io::CopyingOutputStream *)buf);
      if ((SHIBYTE(v73.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_52;
      }
    }
    operator delete(v73.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v77.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_53:
      if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_54;
      }
      goto LABEL_78;
    }
LABEL_77:
    operator delete(v77.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_54:
      if ((SHIBYTE(v79.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_55;
      }
      goto LABEL_79;
    }
LABEL_78:
    operator delete(__dst.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v79.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_55:
      if ((SHIBYTE(v78.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_56;
      }
      goto LABEL_80;
    }
LABEL_79:
    operator delete(v79.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v78.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_56:
      if (qword_10047BF08 == -1) {
        goto LABEL_57;
      }
      goto LABEL_81;
    }
LABEL_80:
    operator delete(v78.__r_.__value_.__l.__data_);
    if (qword_10047BF08 == -1)
    {
LABEL_57:
      long long v54 = qword_10047BF10;
      if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO)) {
        goto LABEL_59;
      }
      goto LABEL_58;
    }
LABEL_81:
    dispatch_once(&qword_10047BF08, &stru_100460658);
    long long v54 = qword_10047BF10;
    if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO))
    {
LABEL_59:
      int v56 = sqlite3_blob_close(v74[0]);
      if (v56)
      {
        if (qword_10047BF08 != -1)
        {
          dispatch_once(&qword_10047BF08, &stru_100460658);
          std::string::size_type v57 = qword_10047BF10;
          if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR)) {
            goto LABEL_63;
          }
          goto LABEL_62;
        }
        std::string::size_type v57 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR))
        {
LABEL_62:
          buf[0].n128_u32[0] = 67240192;
          buf[0].n128_u32[1] = v56;
          _os_log_impl((void *)&_mh_execute_header, v57, OS_LOG_TYPE_ERROR, "Failed to close blob (error %{public}d)", (uint8_t *)buf, 8u);
        }
      }
LABEL_63:
      std::promise<void>::set_value(*(std::promise<void> **)(a1 + 40));
      return;
    }
LABEL_58:
    unint64_t v55 = **(void **)(v2 + 8);
    buf[0].n128_u32[0] = 134217984;
    *(unint64_t *)((char *)buf[0].n128_u64 + 4) = v55;
    _os_log_impl((void *)&_mh_execute_header, v54, OS_LOG_TYPE_INFO, "Tile with version %llu saved successfully", (uint8_t *)buf, 0xCu);
    goto LABEL_59;
  }
  sub_1003A4F88(v76);

  abort_report_np();
LABEL_115:
  __break(1u);
}

void sub_1002116D8(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::exception_ptr a12, char a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,sqlite3_blob *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,void *a53,uint64_t a54,int a55,__int16 a56,char a57,char a58,void *a59,uint64_t a60,int a61,__int16 a62,char a63)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  std::runtime_error::~runtime_error(v76);
  if (a28 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
    {
LABEL_4:
      if ((a42 & 0x80000000) == 0) {
        goto LABEL_5;
      }
      goto LABEL_12;
    }
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_4;
  }
  operator delete(a16);
  if ((a42 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a35 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(a37);
  if ((a35 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a75 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(a30);
  if ((a75 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a48 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a74);
  if ((a48 & 0x80000000) == 0)
  {
LABEL_8:
    *(void *)(v77 - 160) = &off_100451DC0;
    uint64_t v79 = *(void *)(v77 - 152);
    if (!v79) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(a43);
  *(void *)(v77 - 160) = &off_100451DC0;
  uint64_t v79 = *(void *)(v77 - 152);
  if (!v79) {
    goto LABEL_18;
  }
LABEL_16:
  if ((*(unsigned int (**)(uint64_t))(*(void *)v79 + 32))(v79)) {
    *(void *)(v77 - 152) = 0;
  }
LABEL_18:
  std::runtime_error::~runtime_error((std::runtime_error *)(v77 - 176));
  std::runtime_error v80 = *(void **)(v77 - 232);
  if (v80)
  {
    *(void *)(v77 - 224) = v80;
    operator delete(v80);
  }
  std::runtime_error::~runtime_error(&a71);
  if (a70 < 0) {
    operator delete(a66.__vftable);
  }
  if (*(char *)(v77 - 185) < 0) {
    operator delete(*(void **)(v77 - 208));
  }
  if (a64 < 0) {
    operator delete(a59);
  }
  if (a58 < 0) {
    operator delete(a53);
  }
  __cxa_free_exception(v76);
  if (a73 < 0) {
    operator delete(a72);
  }
  sub_100213398((uint64_t)&a13);

  __cxa_begin_catch(a1);
  __int16 v81 = *(std::promise<void> **)(v75 + 40);
  std::current_exception();
  v82.__ptr_ = &a12;
  std::promise<void>::set_exception(v81, v82);
  std::exception_ptr::~exception_ptr(&a12);
  __cxa_end_catch();
  JUMPOUT(0x100210760);
}

void sub_100212028(sqlite3 **a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = a3;
  long long v9 = v8;
  if (v8) {
    os_activity_scope_enter(v8, &state);
  }
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  objc_storeStrong((id *)(a4 + 16), a3);
  int v10 = *(char *)(a2 + 23);
  if (v10 >= 0) {
    __n128 v11 = (const char *)a2;
  }
  else {
    __n128 v11 = *(const char **)a2;
  }
  if (v10 >= 0) {
    int v12 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    int v12 = *(_DWORD *)(a2 + 8);
  }
  int v13 = sqlite3_prepare_v2(*a1, v11, v12, (sqlite3_stmt **)a4, 0);
  sub_100088644(v13, *a1);
  if (v13)
  {
    int v14 = __error();
    sub_100295674(*v14, &v27);
    __cxa_allocate_exception(0x40uLL);
    sub_1000AE4B0(&v23, " w/ ");
    int v15 = std::string::insert(&v23, 0, "Failed to prepare query");
    long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    v24.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v16;
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    v15->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&__dst, v27.__r_.__value_.__l.__data_, v27.__r_.__value_.__l.__size_);
    }
    else {
      std::string __dst = v27;
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_dst = &__dst;
    }
    else {
      p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __dst.__r_.__value_.__l.__size_;
    }
    int v19 = std::string::append(&v24, (const std::string::value_type *)p_dst, size);
    long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v25.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v26, &v25);
    v26.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v21);
    sub_100204FC4(&v26, (uint64_t)"statement<nCols, nQueries, ColumnNumberType> db::resources::handle::prepare(const std::string &, __strong os_activity_t) const [nCols = 0UL, nQueries = 3UL, ColumnNumberType = unsigned long]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 633, (uint64_t)v21);
  }
  *(void *)(a4 + 8) = *a1;
  if (v9) {
    os_activity_scope_leave(&state);
  }
}

void sub_100212378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *a47,uint64_t a48,uint64_t a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,void *a62,uint64_t a63)
{
  if (a22 < 0)
  {
    operator delete(__p);
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a35 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a10);
  if ((a35 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a28 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a30);
  if ((a28 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a42 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a23);
  if ((a42 & 0x80000000) == 0)
  {
LABEL_6:
    sub_100205504((std::runtime_error *)(v71 - 184));
    std::string v73 = a47;
    if (!a47)
    {
LABEL_14:
      std::runtime_error::~runtime_error((std::runtime_error *)(v71 - 200));
      if (*(char *)(v71 - 201) < 0)
      {
        operator delete(*(void **)(v71 - 224));
        if ((a55 & 0x80000000) == 0)
        {
LABEL_16:
          if ((a67 & 0x80000000) == 0) {
            goto LABEL_17;
          }
          goto LABEL_22;
        }
      }
      else if ((a55 & 0x80000000) == 0)
      {
        goto LABEL_16;
      }
      operator delete(a50);
      if ((a67 & 0x80000000) == 0)
      {
LABEL_17:
        if (a61 < 0) {
          goto LABEL_18;
        }
        goto LABEL_23;
      }
LABEL_22:
      operator delete(a62);
      if (a61 < 0)
      {
LABEL_18:
        operator delete(a56);
        if ((v70 & 1) == 0)
        {
LABEL_25:
          if (*(char *)(v71 - 97) < 0)
          {
            operator delete(*(void **)(v71 - 120));
            sub_1002125F4(v68);

            _Unwind_Resume(a1);
          }
          sub_1002125F4(v68);

          _Unwind_Resume(a1);
        }
LABEL_24:
        __cxa_free_exception(v69);
        goto LABEL_25;
      }
LABEL_23:
      if (!v70) {
        goto LABEL_25;
      }
      goto LABEL_24;
    }
LABEL_13:
    operator delete(v73);
    goto LABEL_14;
  }
LABEL_12:
  operator delete(a37);
  sub_100205504((std::runtime_error *)(v71 - 184));
  std::string v73 = a47;
  if (!a47) {
    goto LABEL_14;
  }
  goto LABEL_13;
}

uint64_t sub_1002125F4(uint64_t a1)
{
  return a1;
}

void sub_100212628(sqlite3_stmt **a1, int a2, unint64_t a3)
{
  int v6 = sqlite3_bind_int64(*a1, a2, a3);
  sub_100088644(v6, a1[1]);
  if (v6)
  {
    long long v7 = __error();
    sub_100295674(*v7, &v36);
    __cxa_allocate_exception(0x40uLL);
    std::to_string(&v29, a3);
    uint64_t v8 = std::string::insert(&v29, 0, "Failed to bind ");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    int v10 = std::string::append(&v30, " to ");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v31.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v28, a2);
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v12 = &v28;
    }
    else {
      int v12 = (std::string *)v28.__r_.__value_.__r.__words[0];
    }
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v28.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v28.__r_.__value_.__l.__size_;
    }
    int v14 = std::string::append(&v31, (const std::string::value_type *)v12, size);
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    sub_1000AE4B0(v26, " w/ ");
    if ((v27 & 0x80u) == 0) {
      long long v16 = (const std::string::value_type *)v26;
    }
    else {
      long long v16 = (const std::string::value_type *)v26[0];
    }
    if ((v27 & 0x80u) == 0) {
      std::string::size_type v17 = v27;
    }
    else {
      std::string::size_type v17 = v26[1];
    }
    long long v18 = std::string::append(&v32, v16, v17);
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v33.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&__dst, v36.__r_.__value_.__l.__data_, v36.__r_.__value_.__l.__size_);
    }
    else {
      std::string __dst = v36;
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_dst = &__dst;
    }
    else {
      p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v21 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v21 = __dst.__r_.__value_.__l.__size_;
    }
    unint64_t v22 = std::string::append(&v33, (const std::string::value_type *)p_dst, v21);
    long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v34.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v35, &v34);
    v35.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v24);
    sub_100204FC4(&v35, (uint64_t)"void db::resources::statement<0, 3>::bind(int, uint64_t) [nCols = 0, nQueries = 3, ColumnNumberType = unsigned long, runtime_binding = false]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 425, (uint64_t)v24);
  }
}

void sub_1002129F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60,void *a61,uint64_t a62,int a63)
{
  if (a21 < 0)
  {
    operator delete(__p);
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a34 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a9);
  if ((a34 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a29);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a47 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(a22);
  if ((a47 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(a42);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    sub_100205504((std::runtime_error *)(v80 - 152));
    std::exception_ptr v82 = a52;
    if (!a52)
    {
LABEL_16:
      std::runtime_error::~runtime_error((std::runtime_error *)(v80 - 168));
      if (*(char *)(v80 - 169) < 0)
      {
        operator delete(*(void **)(v80 - 192));
        if ((a60 & 0x80000000) == 0)
        {
LABEL_18:
          if ((*(char *)(v80 - 201) & 0x80000000) == 0) {
            goto LABEL_19;
          }
          goto LABEL_29;
        }
      }
      else if ((a60 & 0x80000000) == 0)
      {
        goto LABEL_18;
      }
      operator delete(a55);
      if ((*(char *)(v80 - 201) & 0x80000000) == 0)
      {
LABEL_19:
        if ((a66 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        goto LABEL_30;
      }
LABEL_29:
      operator delete(*(void **)(v80 - 224));
      if ((a66 & 0x80000000) == 0)
      {
LABEL_20:
        if ((*(char *)(v80 - 233) & 0x80000000) == 0) {
          goto LABEL_21;
        }
        goto LABEL_31;
      }
LABEL_30:
      operator delete(a61);
      if ((*(char *)(v80 - 233) & 0x80000000) == 0)
      {
LABEL_21:
        if ((a72 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        goto LABEL_32;
      }
LABEL_31:
      operator delete(*(void **)(v80 - 256));
      if ((a72 & 0x80000000) == 0)
      {
LABEL_22:
        if ((a78 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        goto LABEL_33;
      }
LABEL_32:
      operator delete(a67);
      if ((a78 & 0x80000000) == 0)
      {
LABEL_23:
        if ((a76 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        goto LABEL_34;
      }
LABEL_33:
      operator delete(a77);
      if ((a76 & 0x80000000) == 0)
      {
LABEL_24:
        if (a74 < 0) {
          goto LABEL_25;
        }
        goto LABEL_35;
      }
LABEL_34:
      operator delete(a75);
      if (a74 < 0)
      {
LABEL_25:
        operator delete(a73);
        if ((v79 & 1) == 0)
        {
LABEL_37:
          if (*(char *)(v80 - 65) < 0) {
            operator delete(*(void **)(v80 - 88));
          }
          _Unwind_Resume(a1);
        }
LABEL_36:
        __cxa_free_exception(v78);
        goto LABEL_37;
      }
LABEL_35:
      if (!v79) {
        goto LABEL_37;
      }
      goto LABEL_36;
    }
LABEL_15:
    operator delete(v82);
    goto LABEL_16;
  }
LABEL_14:
  operator delete(a35);
  sub_100205504((std::runtime_error *)(v80 - 152));
  std::exception_ptr v82 = a52;
  if (!a52) {
    goto LABEL_16;
  }
  goto LABEL_15;
}

void sub_100212CE0(sqlite3_stmt **a1, int a2, int a3)
{
  int v6 = sqlite3_bind_zeroblob(*a1, a2, a3);
  sub_100088644(v6, a1[1]);
  if (v6)
  {
    long long v7 = __error();
    sub_100295674(*v7, &v36);
    __cxa_allocate_exception(0x40uLL);
    std::to_string(&v29, a3);
    uint64_t v8 = std::string::insert(&v29, 0, "Failed to bind zero blob of size ");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    int v10 = std::string::append(&v30, " to ");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v31.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v28, a2);
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v12 = &v28;
    }
    else {
      int v12 = (std::string *)v28.__r_.__value_.__r.__words[0];
    }
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v28.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v28.__r_.__value_.__l.__size_;
    }
    int v14 = std::string::append(&v31, (const std::string::value_type *)v12, size);
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    sub_1000AE4B0(v26, " w/ ");
    if ((v27 & 0x80u) == 0) {
      long long v16 = (const std::string::value_type *)v26;
    }
    else {
      long long v16 = (const std::string::value_type *)v26[0];
    }
    if ((v27 & 0x80u) == 0) {
      std::string::size_type v17 = v27;
    }
    else {
      std::string::size_type v17 = v26[1];
    }
    long long v18 = std::string::append(&v32, v16, v17);
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v33.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&__dst, v36.__r_.__value_.__l.__data_, v36.__r_.__value_.__l.__size_);
    }
    else {
      std::string __dst = v36;
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_dst = &__dst;
    }
    else {
      p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v21 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v21 = __dst.__r_.__value_.__l.__size_;
    }
    unint64_t v22 = std::string::append(&v33, (const std::string::value_type *)p_dst, v21);
    long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v34.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v35, &v34);
    v35.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v24);
    sub_100204FC4(&v35, (uint64_t)"void db::resources::statement<0, 3>::bind_zeroblob(int, int) [nCols = 0, nQueries = 3, ColumnNumberType = unsigned long, runtime_binding = false]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 479, (uint64_t)v24);
  }
}

void sub_1002130A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60,void *a61,uint64_t a62,int a63)
{
  if (a21 < 0)
  {
    operator delete(__p);
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a34 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a9);
  if ((a34 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a29);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a47 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(a22);
  if ((a47 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(a42);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    sub_100205504((std::runtime_error *)(v80 - 152));
    std::exception_ptr v82 = a52;
    if (!a52)
    {
LABEL_16:
      std::runtime_error::~runtime_error((std::runtime_error *)(v80 - 168));
      if (*(char *)(v80 - 169) < 0)
      {
        operator delete(*(void **)(v80 - 192));
        if ((a60 & 0x80000000) == 0)
        {
LABEL_18:
          if ((*(char *)(v80 - 201) & 0x80000000) == 0) {
            goto LABEL_19;
          }
          goto LABEL_29;
        }
      }
      else if ((a60 & 0x80000000) == 0)
      {
        goto LABEL_18;
      }
      operator delete(a55);
      if ((*(char *)(v80 - 201) & 0x80000000) == 0)
      {
LABEL_19:
        if ((a66 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        goto LABEL_30;
      }
LABEL_29:
      operator delete(*(void **)(v80 - 224));
      if ((a66 & 0x80000000) == 0)
      {
LABEL_20:
        if ((*(char *)(v80 - 233) & 0x80000000) == 0) {
          goto LABEL_21;
        }
        goto LABEL_31;
      }
LABEL_30:
      operator delete(a61);
      if ((*(char *)(v80 - 233) & 0x80000000) == 0)
      {
LABEL_21:
        if ((a72 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        goto LABEL_32;
      }
LABEL_31:
      operator delete(*(void **)(v80 - 256));
      if ((a72 & 0x80000000) == 0)
      {
LABEL_22:
        if ((a78 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        goto LABEL_33;
      }
LABEL_32:
      operator delete(a67);
      if ((a78 & 0x80000000) == 0)
      {
LABEL_23:
        if ((a76 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        goto LABEL_34;
      }
LABEL_33:
      operator delete(a77);
      if ((a76 & 0x80000000) == 0)
      {
LABEL_24:
        if (a74 < 0) {
          goto LABEL_25;
        }
        goto LABEL_35;
      }
LABEL_34:
      operator delete(a75);
      if (a74 < 0)
      {
LABEL_25:
        operator delete(a73);
        if ((v79 & 1) == 0)
        {
LABEL_37:
          if (*(char *)(v80 - 65) < 0) {
            operator delete(*(void **)(v80 - 88));
          }
          _Unwind_Resume(a1);
        }
LABEL_36:
        __cxa_free_exception(v78);
        goto LABEL_37;
      }
LABEL_35:
      if (!v79) {
        goto LABEL_37;
      }
      goto LABEL_36;
    }
LABEL_15:
    operator delete(v82);
    goto LABEL_16;
  }
LABEL_14:
  operator delete(a35);
  sub_100205504((std::runtime_error *)(v80 - 152));
  std::exception_ptr v82 = a52;
  if (!a52) {
    goto LABEL_16;
  }
  goto LABEL_15;
}

void sub_100213398(uint64_t a1)
{
  uint64_t v2 = *(sqlite3_stmt **)a1;
  if (!v2) {
    return;
  }
  uint64_t v3 = sqlite3_sql(v2);
  if (v3) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = "<unknown query>";
  }
  size_t v5 = strlen(v4);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    p_dst = (void **)operator new(v8 + 1);
    std::string __dst = p_dst;
    unint64_t v14 = v9 | 0x8000000000000000;
    goto LABEL_12;
  }
  HIBYTE(v14) = v5;
  p_dst = (void **)&__dst;
  if (v5) {
LABEL_12:
  }
    memmove(p_dst, v4, v6);
  *((unsigned char *)p_dst + v6) = 0;
  int v10 = sqlite3_finalize(*(sqlite3_stmt **)a1);
  if (v10)
  {
    if (qword_10047BF08 != -1)
    {
      dispatch_once(&qword_10047BF08, &stru_100460658);
      long long v11 = qword_10047BF10;
      if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    long long v11 = qword_10047BF10;
    if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR))
    {
LABEL_16:
      *(_DWORD *)int buf = 67240192;
      int v16 = v10;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Failed to finalize with %{public}d", buf, 8u);
    }
  }
LABEL_17:
  *(void *)a1 = 0;
  int v12 = *(void **)(a1 + 16);
  if (v12)
  {
    *(void *)(a1 + 16) = 0;
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst);
  }
}

void sub_100213558(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100213580(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 32);
  id v66 = 0;
  *(_OWORD *)long long __p = 0uLL;
  uint64_t v64 = **(void **)(a1 + 40);
  uint64_t v2 = *(sqlite3 ***)(v64 + 40);
  *((unsigned char *)&v80.__r_.__value_.__s + 23) = 18;
  strcpy((char *)&v80, "SELECT rowid FROM ");
  uint64_t v3 = std::string::append(&v80, "venues");
  long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
  std::string::size_type v82 = v3->__r_.__value_.__r.__words[2];
  long long buf = v4;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  sub_100028E94(v2, (uint64_t)&buf, 0, (uint64_t)&pStmt);
  if (SHIBYTE(v82) < 0)
  {
    operator delete((void *)buf);
    long long v63 = v1;
    if ((SHIBYTE(v80.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_3;
    }
LABEL_47:
    operator delete(v80.__r_.__value_.__l.__data_);
    goto LABEL_3;
  }
  long long v63 = v1;
  if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_47;
  }
LABEL_3:
  size_t v5 = 0;
  size_t v6 = 0;
  long long v7 = 0;
  std::string::size_type v67 = 0;
  uint64_t v8 = pStmt;
  for (uint64_t i = pStmt; ; uint64_t i = pStmt)
  {
    sqlite3_int64 v11 = sqlite3_step(i);
    sqlite3_int64 v12 = v11;
    if (v11 == 100)
    {
      if (sqlite3_column_type(v8, 0) != 5) {
        sqlite3_int64 v12 = sqlite3_column_int64(v8, 0);
      }
      if (v7 < v6)
      {
        *(void *)long long v7 = v12;
        uint64_t v10 = (uint64_t)(v7 + 8);
LABEL_5:
        long long v7 = (char *)v10;
        continue;
      }
      uint64_t v13 = (v7 - v5) >> 3;
      unint64_t v14 = v13 + 1;
      if ((unint64_t)(v13 + 1) >> 61) {
        sub_1000A9108();
      }
      if ((v6 - v5) >> 2 > v14) {
        unint64_t v14 = (v6 - v5) >> 2;
      }
      if ((unint64_t)(v6 - v5) >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v15 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v15 = v14;
      }
      if (v15)
      {
        if (v15 >> 61) {
          sub_1000A6A10();
        }
        int v16 = operator new(8 * v15);
        std::string::size_type v17 = (sqlite3_int64 *)&v16[8 * v13];
        sqlite3_int64 *v17 = v12;
        uint64_t v10 = (uint64_t)(v17 + 1);
        if (v7 == v5) {
          goto LABEL_29;
        }
      }
      else
      {
        int v16 = 0;
        std::string::size_type v17 = (sqlite3_int64 *)(8 * v13);
        *(void *)(8 * v13) = v12;
        uint64_t v10 = 8 * v13 + 8;
        if (v7 == v5) {
          goto LABEL_29;
        }
      }
      unint64_t v18 = v7 - 8 - v5;
      if (v18 >= 0x168)
      {
        if (&v16[v7 - v5 - 8 - (v18 & 0xFFFFFFFFFFFFFFF8)] > &v16[v7 - v5 - 8])
        {
          long long v19 = v7;
        }
        else if (&v7[-(v18 & 0xFFFFFFFFFFFFFFF8) - 8] > v7 - 8)
        {
          long long v19 = v7;
        }
        else if ((unint64_t)(v5 - v16) >= 0x20)
        {
          uint64_t v21 = (v18 >> 3) + 1;
          uint64_t v22 = 8 * (v21 & 0x3FFFFFFFFFFFFFFCLL);
          long long v19 = &v7[-v22];
          std::string::size_type v17 = (sqlite3_int64 *)((char *)v17 - v22);
          long long v23 = &v16[8 * v13 - 16];
          std::string v24 = v7 - 16;
          uint64_t v25 = v21 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            long long v26 = *(_OWORD *)v24;
            *(v23 - 1) = *((_OWORD *)v24 - 1);
            *long long v23 = v26;
            v23 -= 2;
            v24 -= 32;
            v25 -= 4;
          }
          while (v25);
          if (v21 == (v21 & 0x3FFFFFFFFFFFFFFCLL)) {
            goto LABEL_29;
          }
        }
        else
        {
          long long v19 = v7;
        }
      }
      else
      {
        long long v19 = v7;
      }
      do
      {
        sqlite3_int64 v20 = *((void *)v19 - 1);
        v19 -= 8;
        *--std::string::size_type v17 = v20;
      }
      while (v19 != v5);
LABEL_29:
      size_t v6 = &v16[8 * v15];
      std::string::size_type v67 = v17;
      if (v5) {
        operator delete(v5);
      }
      size_t v5 = (char *)v17;
      goto LABEL_5;
    }
    if (v11 == 101) {
      break;
    }
    if (v11 == 19)
    {
      if (qword_10047BF08 == -1)
      {
        char v48 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO)) {
          goto LABEL_95;
        }
      }
      else
      {
        dispatch_once(&qword_10047BF08, &stru_100460658);
        char v48 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO))
        {
LABEL_95:
          LOWORD(buf) = 0;
          _os_log_impl((void *)&_mh_execute_header, v48, OS_LOG_TYPE_INFO, "Query constraint violation", (uint8_t *)&buf, 2u);
        }
      }
      __cxa_allocate_exception(0x40uLL);
      v72.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
      *(_OWORD *)&v72.__r_.__value_.__r.__words[1] = xmmword_1003F6340;
      strcpy(v72.__r_.__value_.__l.__data_, "Constraint violation stepping through statement");
      std::runtime_error::runtime_error((std::runtime_error *)&v77, &v72);
      v77.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100460ED8;
      sub_10018E868((uint64_t)&v71);
      sub_10020E390((std::runtime_error *)&v77, (uint64_t)"auto db::resources::statement<1, 0>::run((lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:1178:18) &&)::(anonymous class)::operator()() const [nCols = 1, nQueries = 0, ColumnNumberType = unsigned long]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 486, (uint64_t)&v71);
    }
    sub_100088644(v11, db);
    if (v12)
    {
      long long v49 = __error();
      sub_100295674(*v49, &__dst);
      __cxa_allocate_exception(0x40uLL);
      *((unsigned char *)&v75.__r_.__value_.__s + 23) = 4;
      strcpy((char *)&v75, " w/ ");
      long long v50 = std::string::insert(&v75, 0, "Failed sqlite3_step");
      long long v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
      v76.__r_.__value_.__r.__words[2] = v50->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v76.__r_.__value_.__l.__data_ = v51;
      v50->__r_.__value_.__l.__size_ = 0;
      v50->__r_.__value_.__r.__words[2] = 0;
      v50->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        sub_1000559FC(&v74, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
      }
      else {
        std::string v74 = __dst;
      }
      if ((v74.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        char v52 = &v74;
      }
      else {
        char v52 = (std::string *)v74.__r_.__value_.__r.__words[0];
      }
      if ((v74.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v74.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v74.__r_.__value_.__l.__size_;
      }
      long long v54 = std::string::append(&v76, (const std::string::value_type *)v52, size);
      long long v55 = *(_OWORD *)&v54->__r_.__value_.__l.__data_;
      v77.__r_.__value_.__r.__words[2] = v54->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v77.__r_.__value_.__l.__data_ = v55;
      v54->__r_.__value_.__l.__size_ = 0;
      v54->__r_.__value_.__r.__words[2] = 0;
      v54->__r_.__value_.__r.__words[0] = 0;
      std::runtime_error::runtime_error(&v78, &v77);
      v78.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
      sub_10018E868((uint64_t)v73);
      sub_100204FC4(&v78, (uint64_t)"void db::resources::statement<1, 0>::run(Cb &&, ConstraintHandler &&) [nCols = 1, nQueries = 0, ColumnNumberType = unsigned long, Cb = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:1178:18), ConstraintHandler = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h:485:43)]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 512, (uint64_t)v73);
    }
  }
  int v27 = sqlite3_reset(pStmt);
  sub_100088644(v27, db);
  if (v27)
  {
    int v56 = __error();
    sub_100295674(*v56, &__dst);
    __cxa_allocate_exception(0x40uLL);
    *((unsigned char *)&v75.__r_.__value_.__s + 23) = 4;
    strcpy((char *)&v75, " w/ ");
    std::string::size_type v57 = std::string::insert(&v75, 0, "Failed to execute query");
    long long v58 = *(_OWORD *)&v57->__r_.__value_.__l.__data_;
    v76.__r_.__value_.__r.__words[2] = v57->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v76.__r_.__value_.__l.__data_ = v58;
    v57->__r_.__value_.__l.__size_ = 0;
    v57->__r_.__value_.__r.__words[2] = 0;
    v57->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&v74, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
    }
    else {
      std::string v74 = __dst;
    }
    if ((v74.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v59 = &v74;
    }
    else {
      long long v59 = (std::string *)v74.__r_.__value_.__r.__words[0];
    }
    if ((v74.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v60 = HIBYTE(v74.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v60 = v74.__r_.__value_.__l.__size_;
    }
    std::string::size_type v61 = std::string::append(&v76, (const std::string::value_type *)v59, v60);
    long long v62 = *(_OWORD *)&v61->__r_.__value_.__l.__data_;
    v77.__r_.__value_.__r.__words[2] = v61->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v77.__r_.__value_.__l.__data_ = v62;
    v61->__r_.__value_.__l.__size_ = 0;
    v61->__r_.__value_.__r.__words[2] = 0;
    v61->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v78, &v77);
    v78.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v73);
    sub_100204FC4(&v78, (uint64_t)"void db::resources::statement<1, 0>::run(Cb &&, ConstraintHandler &&) [nCols = 1, nQueries = 0, ColumnNumberType = unsigned long, Cb = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:1178:18), ConstraintHandler = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h:485:43)]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 518, (uint64_t)v73);
  }
  std::string v28 = v67;
  unint64_t v29 = v7 - (char *)v67;
  uint64_t v30 = (v7 - (char *)v67) >> 3;
  if (v30)
  {
    if (v29 >= 0x7FFFFFFFFFFFFFF9) {
      sub_1000A9108();
    }
    __p[0] = operator new(2 * v29);
    __p[1] = __p[0];
    id v66 = (char *)__p[0] + 16 * v30;
  }
  if (v67 != (sqlite3_int64 *)v7)
  {
    while (1)
    {
      if (byte_10047E057 >= 0) {
        std::string v31 = (const char *)&qword_10047E040;
      }
      else {
        std::string v31 = (const char *)qword_10047E040;
      }
      sub_10007DE30(*(sqlite3 ***)(v64 + 40), "venues", v31, *v28, 1, &v71);
      sub_10007E298((uint64_t)&v80, v71);
      wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor::CopyingInputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor *)&buf, (wireless_diagnostics::google::protobuf::io::CopyingInputStream *)&v80, -1);
      sub_10007FC98((uint64_t *)&v72);
      wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor::~CopyingInputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor *)&buf);
      wireless_diagnostics::google::protobuf::io::CopyingInputStream::~CopyingInputStream((wireless_diagnostics::google::protobuf::io::CopyingInputStream *)&v80);
      int v32 = sqlite3_blob_close(v71);
      if (!v32) {
        goto LABEL_59;
      }
      if (qword_10047BF08 != -1) {
        break;
      }
      std::string v33 = qword_10047BF10;
      if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_58;
      }
LABEL_59:
      std::string v34 = __p[1];
      if (__p[1] < v66)
      {
        *(_OWORD *)__p[1] = *(_OWORD *)&v72.__r_.__value_.__l.__data_;
        __p[1] = (char *)__p[1] + 16;
      }
      else
      {
        uint64_t v35 = ((char *)__p[1] - (char *)__p[0]) >> 4;
        unint64_t v36 = v35 + 1;
        if ((unint64_t)(v35 + 1) >> 60) {
          sub_1000A9108();
        }
        uint64_t v37 = v66 - (char *)__p[0];
        if ((v66 - (char *)__p[0]) >> 3 > v36) {
          unint64_t v36 = v37 >> 3;
        }
        if ((unint64_t)v37 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v38 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v38 = v36;
        }
        if (v38)
        {
          if (v38 >> 60) {
            sub_1000A6A10();
          }
          int v39 = (char *)operator new(16 * v38);
        }
        else
        {
          int v39 = 0;
        }
        long long v40 = &v39[16 * v35];
        *(_OWORD *)long long v40 = *(_OWORD *)&v72.__r_.__value_.__l.__data_;
        uint64_t v41 = v40 + 16;
        *(_OWORD *)&v72.__r_.__value_.__l.__data_ = 0uLL;
        if (__p[1] == __p[0])
        {
          __p[0] = v40;
          id v66 = &v39[16 * v38];
        }
        else
        {
          do
          {
            long long v42 = *((_OWORD *)v34 - 1);
            v34 -= 2;
            *((_OWORD *)v40 - 1) = v42;
            v40 -= 16;
            *std::string v34 = 0;
            v34[1] = 0;
          }
          while (v34 != __p[0]);
          long long v43 = __p[1];
          std::string v34 = __p[0];
          __p[0] = v40;
          id v66 = &v39[16 * v38];
          while (v43 != v34)
          {
            long long v44 = (std::__shared_weak_count *)*(v43 - 1);
            if (v44 && !atomic_fetch_add(&v44->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
              std::__shared_weak_count::__release_weak(v44);
            }
            v43 -= 2;
          }
        }
        if (v34) {
          operator delete(v34);
        }
        long long v45 = (std::__shared_weak_count *)v72.__r_.__value_.__l.__size_;
        __p[1] = v41;
        if (v72.__r_.__value_.__l.__size_
          && !atomic_fetch_add((atomic_ullong *volatile)(v72.__r_.__value_.__l.__size_ + 8), 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
          std::__shared_weak_count::__release_weak(v45);
        }
      }
      if (++v28 == (sqlite3_int64 *)v7)
      {
        long long v7 = (char *)v67;
        goto LABEL_87;
      }
    }
    dispatch_once(&qword_10047BF08, &stru_100460658);
    std::string v33 = qword_10047BF10;
    if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR)) {
      goto LABEL_59;
    }
LABEL_58:
    LODWORD(buf) = 67240192;
    DWORD1(buf) = v32;
    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_ERROR, "Failed to close blob (error %{public}d)", (uint8_t *)&buf, 8u);
    goto LABEL_59;
  }
LABEL_87:
  if (v7) {
    operator delete(v7);
  }
  sub_100029460((uint64_t)&pStmt);

  uint64_t v46 = *v63;
  if (!*v63) {
    sub_1000AD034(3u);
  }
  std::mutex::lock((std::mutex *)(v46 + 24));
  if ((*(unsigned char *)(v46 + 136) & 1) != 0
    || (*(void *)&long long buf = 0,
        uint64_t v47 = *(void *)(v46 + 16),
        std::exception_ptr::~exception_ptr((std::exception_ptr *)&buf),
        v47))
  {
    sub_1000AD034(2u);
  }
  *(_OWORD *)(v46 + 144) = *(_OWORD *)__p;
  *(void *)(v46 + 160) = v66;
  *(_DWORD *)(v46 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(v46 + 88));
  std::mutex::unlock((std::mutex *)(v46 + 24));
}

void sub_100214B18(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::exception_ptr a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,sqlite3_blob *a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43,void *a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,void *a51,uint64_t a52,int a53,__int16 a54,char a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,void *a61,uint64_t a62,uint64_t a63)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  std::runtime_error::~runtime_error(v75);
  if (a37 < 0)
  {
    operator delete(__p);
    if ((a30 & 0x80000000) == 0)
    {
LABEL_4:
      if ((a50 & 0x80000000) == 0) {
        goto LABEL_5;
      }
      goto LABEL_12;
    }
  }
  else if ((a30 & 0x80000000) == 0)
  {
    goto LABEL_4;
  }
  operator delete(a25);
  if ((a50 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a43 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(a45);
  if ((a43 & 0x80000000) == 0)
  {
LABEL_6:
    *(void *)(v77 - 208) = v76;
    if ((*(char *)(v77 - 177) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(a38);
  *(void *)(v77 - 208) = v76;
  if ((*(char *)(v77 - 177) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a56 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(*(void **)(v77 - 200));
  if ((a56 & 0x80000000) == 0)
  {
LABEL_8:
    *(void *)(v77 - 160) = &off_100451DC0;
    uint64_t v79 = *(void *)(v77 - 152);
    if (!v79) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(a51);
  *(void *)(v77 - 160) = &off_100451DC0;
  uint64_t v79 = *(void *)(v77 - 152);
  if (!v79) {
    goto LABEL_18;
  }
LABEL_16:
  if ((*(unsigned int (**)(uint64_t))(*(void *)v79 + 32))(v79)) {
    *(void *)(v77 - 152) = 0;
  }
LABEL_18:
  std::runtime_error::~runtime_error((std::runtime_error *)(v77 - 176));
  if (a61)
  {
    a62 = (uint64_t)a61;
    operator delete(a61);
  }
  std::runtime_error::~runtime_error((std::runtime_error *)(v77 - 248));
  if (a75 < 0) {
    operator delete(a74.__vftable);
  }
  if (a69 < 0) {
    operator delete(a64);
  }
  if (a73 < 0) {
    operator delete(a72);
  }
  if (a71 < 0) {
    operator delete(a70);
  }
  __cxa_free_exception(v75);
  if (*(char *)(v77 - 209) < 0) {
    operator delete(*(void **)(v77 - 232));
  }
  if (a19)
  {
    a20 = (uint64_t)a19;
    operator delete(a19);
  }
  sub_100029460((uint64_t)&a22);

  std::string v80 = a15;
  if (a15)
  {
    uint64_t v81 = a16;
    std::string::size_type v82 = a15;
    if ((void *)a16 != a15)
    {
      do
      {
        std::exception_ptr v83 = *(std::__shared_weak_count **)(v81 - 8);
        if (v83 && !atomic_fetch_add(&v83->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v83->__on_zero_shared)(v83);
          std::__shared_weak_count::__release_weak(v83);
        }
        v81 -= 16;
      }
      while ((void *)v81 != v80);
      std::string::size_type v82 = a15;
    }
    a16 = (uint64_t)v80;
    operator delete(v82);
  }
  __cxa_begin_catch(a1);
  std::string v84 = *(std::__assoc_sub_state ***)(a9 + 32);
  std::current_exception();
  __int16 v85 = *v84;
  if (v85)
  {
    std::exception_ptr::exception_ptr((std::exception_ptr *)(v77 - 176), &a14);
    v86.__ptr_ = (void *)(v77 - 176);
    std::__assoc_sub_state::set_exception(v85, v86);
    std::exception_ptr::~exception_ptr((std::exception_ptr *)(v77 - 176));
    std::exception_ptr::~exception_ptr(&a14);
    __cxa_end_catch();
    JUMPOUT(0x100213D1CLL);
  }
  sub_1000AD034(3u);
}

void sub_1002154C0(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::exception_ptr a14)
{
}

void sub_1002154EC(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);

  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

void sub_100215558(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);

  operator delete();
}

uint64_t sub_1002155D8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 136))
  {
    uint64_t v2 = *(void *)(a1 + 144);
    if (v2)
    {
      uint64_t v3 = *(void *)(a1 + 152);
      long long v4 = *(void **)(a1 + 144);
      if (v3 != v2)
      {
        do
        {
          size_t v5 = *(std::__shared_weak_count **)(v3 - 8);
          if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
            std::__shared_weak_count::__release_weak(v5);
          }
          v3 -= 16;
        }
        while (v3 != v2);
        long long v4 = *(void **)(a1 + 144);
      }
      *(void *)(a1 + 152) = v2;
      operator delete(v4);
    }
  }
  size_t v6 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 8);

  return v6(a1);
}

void sub_1002156C4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 24);
  __lk.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 24));
  std::__assoc_sub_state::__sub_wait((std::__assoc_sub_state *)a1, &__lk);
  uint64_t v4 = *(void *)(a1 + 16);
  v7.__ptr_ = 0;
  std::exception_ptr::~exception_ptr(&v7);
  if (v4)
  {
    std::exception_ptr::exception_ptr(&v6, (const std::exception_ptr *)(a1 + 16));
    v5.__ptr_ = &v6;
    std::rethrow_exception(v5);
    __break(1u);
  }
  else
  {
    *(_OWORD *)a2 = *(_OWORD *)(a1 + 144);
    *(void *)(a2 + 16) = *(void *)(a1 + 160);
    *(void *)(a1 + 152) = 0;
    *(void *)(a1 + 160) = 0;
    *(void *)(a1 + 144) = 0;
    if (__lk.__owns_) {
      std::mutex::unlock(__lk.__m_);
    }
  }
}

void sub_100215770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::mutex *a11, char a12)
{
  if (a12) {
    std::mutex::unlock(a11);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_10021579C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (!v2) {
    return a1;
  }
  if ((*(unsigned char *)(v2 + 136) & 1) == 0)
  {
    v8.__ptr_ = 0;
    uint64_t v3 = *(void *)(v2 + 16);
    std::exception_ptr::~exception_ptr(&v8);
    uint64_t v2 = *a1;
    if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
    {
      v9.__cat_ = std::future_category();
      *(void *)&v9.__val_ = 4;
      std::future_error::future_error(&v7, v9);
      exception = (std::logic_error *)__cxa_allocate_exception(0x20uLL);
      std::exception_ptr v6 = std::logic_error::logic_error(exception, &v7);
      v6[1] = (std::logic_error)v7.__ec_;
    }
  }
  if (atomic_fetch_add((atomic_ullong *volatile)(v2 + 8), 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  return a1;
}

void sub_1002158F8(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);

  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

sqlite3_blob **sub_100215964(sqlite3_blob **a1)
{
  int v2 = sqlite3_blob_close(*a1);
  if (v2)
  {
    if (qword_10047BF08 != -1)
    {
      dispatch_once(&qword_10047BF08, &stru_100460658);
      uint64_t v3 = qword_10047BF10;
      if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR)) {
        return a1;
      }
      goto LABEL_4;
    }
    uint64_t v3 = qword_10047BF10;
    if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR))
    {
LABEL_4:
      v5[0] = 67240192;
      v5[1] = v2;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Failed to close blob (error %{public}d)", (uint8_t *)v5, 8u);
    }
  }
  return a1;
}

void sub_100215A60(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1000A6954(a1);
}

void sub_100215A6C(uint64_t a1)
{
  int v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);

  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

int *sub_100215AD8(uint64_t a1)
{
  int v2 = *(uint64_t **)(a1 + 32);
  uint64_t v1 = *(uint64_t **)(a1 + 40);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_10007FC9C(*v1, v1[1]);
  sub_1002044C0(v3, (sqlite3_int64)v4, &v10);
  uint64_t v5 = *v2;
  if (!v5) {
    sub_1000AD034(3u);
  }
  std::mutex::lock((std::mutex *)(v5 + 24));
  if ((*(unsigned char *)(v5 + 136) & 1) != 0
    || (v14.__ptr_ = 0, uint64_t v6 = *(void *)(v5 + 16), std::exception_ptr::~exception_ptr(&v14), v6))
  {
    sub_1000AD034(2u);
  }
  sub_100052B28((_DWORD *)(v5 + 144), &v10);
  *(void *)(v5 + 152) = v11;
  *(_DWORD *)(v5 + 160) = v12;
  *(_OWORD *)(v5 + 168) = v13;
  uint64_t v11 = 0;
  long long v13 = 0uLL;
  *(_DWORD *)(v5 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(v5 + 88));
  std::mutex::unlock((std::mutex *)(v5 + 24));
  std::future_error v7 = (std::__shared_weak_count *)*((void *)&v13 + 1);
  if (*((void *)&v13 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v13 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  uint64_t v8 = v11;
  uint64_t v11 = 0;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
  }
  return sub_100052AEC(&v10);
}

void sub_100215C3C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  std::mutex::unlock(v23);
  if (v32 && !atomic_fetch_add(&v32->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
    std::__shared_weak_count::__release_weak(v32);
  }
  uint64_t v25 = v31;
  uint64_t v31 = 0;
  if (v25) {
    (*(void (**)(uint64_t))(*(void *)v25 + 8))(v25);
  }
  sub_100052AEC((int *)&v30);
  __cxa_begin_catch(a1);
  long long v26 = *(std::__assoc_sub_state ***)(v22 + 32);
  std::current_exception();
  int v27 = *v26;
  if (!v27) {
    sub_1000AD034(3u);
  }
  std::exception_ptr::exception_ptr(&v30, &v29);
  v28.__ptr_ = &v30;
  std::__assoc_sub_state::set_exception(v27, v28);
  std::exception_ptr::~exception_ptr(&v30);
  std::exception_ptr::~exception_ptr(&v29);
  __cxa_end_catch();
}

void sub_100215D40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, std::exception_ptr a11)
{
}

void sub_100215D6C(uint64_t a1)
{
  int v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);

  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

void sub_100215DD8(uint64_t a1)
{
  int v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);

  operator delete();
}

uint64_t sub_100215E58(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 136))
  {
    int v2 = *(std::__shared_weak_count **)(a1 + 176);
    if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
    uint64_t v3 = *(void *)(a1 + 152);
    *(void *)(a1 + 152) = 0;
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    sub_100052AEC((int *)(a1 + 144));
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 8);

  return v4(a1);
}

void sub_100215F40(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 24);
  __lk.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 24));
  std::__assoc_sub_state::__sub_wait((std::__assoc_sub_state *)a1, &__lk);
  uint64_t v4 = *(void *)(a1 + 16);
  v8.__ptr_ = 0;
  std::exception_ptr::~exception_ptr(&v8);
  if (v4)
  {
    std::exception_ptr::exception_ptr(&v7, (const std::exception_ptr *)(a1 + 16));
    v6.__ptr_ = &v7;
    std::rethrow_exception(v6);
    __break(1u);
  }
  else
  {
    sub_100052B28((_DWORD *)a2, (_DWORD *)(a1 + 144));
    uint64_t v5 = *(void *)(a1 + 152);
    *(void *)(a1 + 152) = 0;
    *(void *)(a2 + 8) = v5;
    *(_DWORD *)(a2 + 16) = *(_DWORD *)(a1 + 160);
    *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 168);
    *(void *)(a1 + 168) = 0;
    *(void *)(a1 + 176) = 0;
    if (__lk.__owns_) {
      std::mutex::unlock(__lk.__m_);
    }
  }
}

void sub_100216000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::mutex *a11, char a12)
{
  if (a12) {
    std::mutex::unlock(a11);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_10021602C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (!v2) {
    return a1;
  }
  if ((*(unsigned char *)(v2 + 136) & 1) == 0)
  {
    v8.__ptr_ = 0;
    uint64_t v3 = *(void *)(v2 + 16);
    std::exception_ptr::~exception_ptr(&v8);
    uint64_t v2 = *a1;
    if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
    {
      v9.__cat_ = std::future_category();
      *(void *)&v9.__val_ = 4;
      std::future_error::future_error(&v7, v9);
      exception = (std::logic_error *)__cxa_allocate_exception(0x20uLL);
      std::exception_ptr v6 = std::logic_error::logic_error(exception, &v7);
      v6[1] = (std::logic_error)v7.__ec_;
    }
  }
  if (atomic_fetch_add((atomic_ullong *volatile)(v2 + 8), 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  return a1;
}

void sub_100216188(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 32);
  uint64_t v2 = *(sqlite3 ***)(**(void **)(a1 + 40) + 40);
  long long v54 = 0;
  *(_OWORD *)long long __p = 0uLL;
  *((unsigned char *)&v58.__r_.__value_.__s + 23) = 7;
  strcpy((char *)&v58, "SELECT ");
  if (byte_10047DF67 >= 0) {
    uint64_t v3 = (const std::string::value_type *)&qword_10047DF50;
  }
  else {
    uint64_t v3 = (const std::string::value_type *)qword_10047DF50;
  }
  if (byte_10047DF67 >= 0) {
    std::string::size_type v4 = byte_10047DF67;
  }
  else {
    std::string::size_type v4 = *(void *)&byte_10047DF58;
  }
  uint64_t v5 = std::string::append(&v58, v3, v4);
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v59.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v59.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  *((unsigned char *)&__s.__r_.__value_.__s + 23) = 6;
  strcpy((char *)&__s, " FROM ");
  std::future_error v7 = std::string::append(&v59, (const std::string::value_type *)&__s, 6uLL);
  long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
  __dst.__r_.__value_.__r.__words[2] = v7->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v8;
  v7->__r_.__value_.__l.__size_ = 0;
  v7->__r_.__value_.__r.__words[2] = 0;
  v7->__r_.__value_.__r.__words[0] = 0;
  std::error_code v9 = std::string::append(&__dst, "venues");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v68[2] = (std::exception_ptr)v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v68[0].__ptr_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  sub_100028E94(v2, (uint64_t)v68, 0, (uint64_t)&pStmt);
  if (SHIBYTE(v68[2].__ptr_) < 0)
  {
    operator delete(v68[0].__ptr_);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_9:
      if ((SHIBYTE(__s.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_10;
      }
      goto LABEL_65;
    }
  }
  else if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_9;
  }
  operator delete(__dst.__r_.__value_.__l.__data_);
  if ((SHIBYTE(__s.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_10:
    if ((SHIBYTE(v59.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_11;
    }
LABEL_66:
    operator delete(v59.__r_.__value_.__l.__data_);
    char v52 = v1;
    if ((SHIBYTE(v58.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_12;
    }
LABEL_67:
    operator delete(v58.__r_.__value_.__l.__data_);
    goto LABEL_12;
  }
LABEL_65:
  operator delete(__s.__r_.__value_.__l.__data_);
  if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_66;
  }
LABEL_11:
  char v52 = v1;
  if (SHIBYTE(v58.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_67;
  }
LABEL_12:
  uint64_t v11 = pStmt;
  for (uint64_t i = pStmt; ; uint64_t i = pStmt)
  {
    int v13 = sqlite3_step(i);
    int v14 = v13;
    if (v13 != 100) {
      break;
    }
    if (sqlite3_column_type(v11, 0) != 5)
    {
      unint64_t v15 = sqlite3_column_text(v11, 0);
      size_t v16 = strlen((const char *)v15);
      if (v16 > 0x7FFFFFFFFFFFFFF7) {
        sub_1000A6968();
      }
      std::string::size_type v17 = v16;
      if (v16 >= 0x17)
      {
        uint64_t v19 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v16 | 7) != 0x17) {
          uint64_t v19 = v16 | 7;
        }
        uint64_t v20 = v19 + 1;
        p_dst = operator new(v19 + 1);
        __dst.__r_.__value_.__l.__size_ = v17;
        __dst.__r_.__value_.__r.__words[2] = v20 | 0x8000000000000000;
        __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
      }
      else
      {
        *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v16;
        p_dst = &__dst;
        if (!v16) {
          goto LABEL_29;
        }
      }
      memmove(p_dst, v15, v17);
LABEL_29:
      *((unsigned char *)p_dst + v17) = 0;
      *(_OWORD *)((char *)&v68[0].__ptr_ + 7) = *(_OWORD *)&__dst.__r_.__value_.__l.__data_;
      *(void **)((char *)&v68[2].__ptr_ + 7) = (void *)__dst.__r_.__value_.__r.__words[2];
    }
    *(_OWORD *)&v59.__r_.__value_.__l.__data_ = *(_OWORD *)((char *)&v68[0].__ptr_ + 7);
    v59.__r_.__value_.__r.__words[2] = *(std::string::size_type *)((char *)&v68[2].__ptr_ + 7);
    sub_100085B24(v68, (uint64_t)&v59);
    uint64_t v21 = __p[1];
    if (__p[1] < v54)
    {
      *(_OWORD *)__p[1] = *(_OWORD *)&v68[0].__ptr_;
      __p[1] = (char *)__p[1] + 16;
      if ((SHIBYTE(v59.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        continue;
      }
      goto LABEL_32;
    }
    uint64_t v22 = ((char *)__p[1] - (char *)__p[0]) >> 4;
    unint64_t v23 = v22 + 1;
    if ((unint64_t)(v22 + 1) >> 60) {
      sub_1000A9108();
    }
    uint64_t v24 = v54 - (char *)__p[0];
    if ((v54 - (char *)__p[0]) >> 3 > v23) {
      unint64_t v23 = v24 >> 3;
    }
    if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v25 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v25 = v23;
    }
    if (v25)
    {
      if (v25 >> 60) {
        sub_1000A6A10();
      }
      long long v26 = (char *)operator new(16 * v25);
    }
    else
    {
      long long v26 = 0;
    }
    int v27 = &v26[16 * v22];
    *(_OWORD *)int v27 = *(_OWORD *)&v68[0].__ptr_;
    std::exception_ptr v28 = v27 + 16;
    std::exception_ptr v29 = &v26[16 * v25];
    v68[0].__ptr_ = 0;
    v68[1].__ptr_ = 0;
    if (__p[1] == __p[0])
    {
      __p[0] = v27;
      long long v54 = &v26[16 * v25];
    }
    else
    {
      do
      {
        long long v30 = *((_OWORD *)v21 - 1);
        v21 -= 2;
        *((_OWORD *)v27 - 1) = v30;
        v27 -= 16;
        *uint64_t v21 = 0;
        v21[1] = 0;
      }
      while (v21 != __p[0]);
      uint64_t v31 = __p[1];
      uint64_t v21 = __p[0];
      __p[0] = v27;
      long long v54 = v29;
      while (v31 != v21)
      {
        int v32 = (std::__shared_weak_count *)*(v31 - 1);
        if (v32 && !atomic_fetch_add(&v32->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
          std::__shared_weak_count::__release_weak(v32);
        }
        v31 -= 2;
      }
    }
    if (v21) {
      operator delete(v21);
    }
    ptr = (std::__shared_weak_count *)v68[1].__ptr_;
    __p[1] = v28;
    if (!v68[1].__ptr_ || atomic_fetch_add((atomic_ullong *volatile)v68[1].__ptr_ + 1, 0xFFFFFFFFFFFFFFFFLL))
    {
      if ((SHIBYTE(v59.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        continue;
      }
LABEL_32:
      operator delete(v59.__r_.__value_.__l.__data_);
      continue;
    }
    ((void (*)(std::__shared_weak_count *))ptr->__on_zero_shared)(ptr);
    std::__shared_weak_count::__release_weak(ptr);
    if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_32;
    }
LABEL_14:
    ;
  }
  if (v13 != 101)
  {
    if (v13 == 19)
    {
      if (qword_10047BF08 == -1)
      {
        uint64_t v37 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO)) {
          goto LABEL_70;
        }
      }
      else
      {
        dispatch_once(&qword_10047BF08, &stru_100460658);
        uint64_t v37 = qword_10047BF10;
        if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO))
        {
LABEL_70:
          LOWORD(v68[0].__ptr_) = 0;
          _os_log_impl((void *)&_mh_execute_header, v37, OS_LOG_TYPE_INFO, "Query constraint violation", (uint8_t *)v68, 2u);
        }
      }
      __cxa_allocate_exception(0x40uLL);
      v59.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
      *(_OWORD *)&v59.__r_.__value_.__r.__words[1] = xmmword_1003F6340;
      strcpy(v59.__r_.__value_.__l.__data_, "Constraint violation stepping through statement");
      std::runtime_error::runtime_error((std::runtime_error *)&v64, &v59);
      v64.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100460ED8;
      sub_10018E868((uint64_t)&v58);
      sub_10020E390((std::runtime_error *)&v64, (uint64_t)"auto db::resources::statement<1, 0>::run((lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:1261:18) &&)::(anonymous class)::operator()() const [nCols = 1, nQueries = 0, ColumnNumberType = unsigned long]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 486, (uint64_t)&v58);
    }
    sub_100088644(v13, db);
    if (v14)
    {
      unint64_t v38 = __error();
      sub_100295674(*v38, &__s);
      __cxa_allocate_exception(0x40uLL);
      *((unsigned char *)&v62.__r_.__value_.__s + 23) = 4;
      strcpy((char *)&v62, " w/ ");
      int v39 = std::string::insert(&v62, 0, "Failed sqlite3_step");
      long long v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
      v63.__r_.__value_.__r.__words[2] = v39->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v63.__r_.__value_.__l.__data_ = v40;
      v39->__r_.__value_.__l.__size_ = 0;
      v39->__r_.__value_.__r.__words[2] = 0;
      v39->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
        sub_1000559FC(&v61, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
      }
      else {
        std::string v61 = __s;
      }
      if ((v61.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v41 = &v61;
      }
      else {
        uint64_t v41 = (std::string *)v61.__r_.__value_.__r.__words[0];
      }
      if ((v61.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v61.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v61.__r_.__value_.__l.__size_;
      }
      long long v43 = std::string::append(&v63, (const std::string::value_type *)v41, size);
      long long v44 = *(_OWORD *)&v43->__r_.__value_.__l.__data_;
      v64.__r_.__value_.__r.__words[2] = v43->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v64.__r_.__value_.__l.__data_ = v44;
      v43->__r_.__value_.__l.__size_ = 0;
      v43->__r_.__value_.__r.__words[2] = 0;
      v43->__r_.__value_.__r.__words[0] = 0;
      std::runtime_error::runtime_error(&v65, &v64);
      v65.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
      sub_10018E868((uint64_t)v60);
      sub_100204FC4(&v65, (uint64_t)"void db::resources::statement<1, 0>::run(Cb &&, ConstraintHandler &&) [nCols = 1, nQueries = 0, ColumnNumberType = unsigned long, Cb = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:1261:18), ConstraintHandler = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h:485:43)]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 512, (uint64_t)v60);
    }
    goto LABEL_14;
  }
  int v34 = sqlite3_reset(pStmt);
  sub_100088644(v34, db);
  if (v34)
  {
    long long v45 = __error();
    sub_100295674(*v45, &__s);
    __cxa_allocate_exception(0x40uLL);
    *((unsigned char *)&v62.__r_.__value_.__s + 23) = 4;
    strcpy((char *)&v62, " w/ ");
    uint64_t v46 = std::string::insert(&v62, 0, "Failed to execute query");
    long long v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
    v63.__r_.__value_.__r.__words[2] = v46->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v63.__r_.__value_.__l.__data_ = v47;
    v46->__r_.__value_.__l.__size_ = 0;
    v46->__r_.__value_.__r.__words[2] = 0;
    v46->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(__s.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&v61, __s.__r_.__value_.__l.__data_, __s.__r_.__value_.__l.__size_);
    }
    else {
      std::string v61 = __s;
    }
    if ((v61.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      char v48 = &v61;
    }
    else {
      char v48 = (std::string *)v61.__r_.__value_.__r.__words[0];
    }
    if ((v61.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v49 = HIBYTE(v61.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v49 = v61.__r_.__value_.__l.__size_;
    }
    long long v50 = std::string::append(&v63, (const std::string::value_type *)v48, v49);
    long long v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
    v64.__r_.__value_.__r.__words[2] = v50->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v64.__r_.__value_.__l.__data_ = v51;
    v50->__r_.__value_.__l.__size_ = 0;
    v50->__r_.__value_.__r.__words[2] = 0;
    v50->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v65, &v64);
    v65.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v60);
    sub_100204FC4(&v65, (uint64_t)"void db::resources::statement<1, 0>::run(Cb &&, ConstraintHandler &&) [nCols = 1, nQueries = 0, ColumnNumberType = unsigned long, Cb = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm:1261:18), ConstraintHandler = (lambda at /Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h:485:43)]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 518, (uint64_t)v60);
  }
  sub_100029460((uint64_t)&pStmt);

  uint64_t v35 = *v52;
  if (!*v52) {
    sub_1000AD034(3u);
  }
  std::mutex::lock((std::mutex *)(v35 + 24));
  if ((*(unsigned char *)(v35 + 136) & 1) != 0
    || (v68[0].__ptr_ = 0, uint64_t v36 = *(void *)(v35 + 16), std::exception_ptr::~exception_ptr(v68), v36))
  {
    sub_1000AD034(2u);
  }
  *(_OWORD *)(v35 + 144) = *(_OWORD *)__p;
  *(void *)(v35 + 160) = v54;
  *(_DWORD *)(v35 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(v35 + 88));
  std::mutex::unlock((std::mutex *)(v35 + 24));
}

void sub_1002174A4(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::exception_ptr a12, void *a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,uint64_t a57,void *a58,uint64_t a59,int a60,__int16 a61,char a62,char a63)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  std::runtime_error::~runtime_error(v73);
  if (a31 < 0)
  {
    operator delete(__p);
    if ((a24 & 0x80000000) == 0)
    {
LABEL_4:
      if ((a44 & 0x80000000) == 0) {
        goto LABEL_5;
      }
      goto LABEL_12;
    }
  }
  else if ((a24 & 0x80000000) == 0)
  {
    goto LABEL_4;
  }
  operator delete(a19);
  if ((a44 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a37 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(a39);
  if ((a37 & 0x80000000) == 0)
  {
LABEL_6:
    *(void *)(v75 - 208) = v74;
    if ((*(char *)(v75 - 177) & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(a32);
  *(void *)(v75 - 208) = v74;
  if ((*(char *)(v75 - 177) & 0x80000000) == 0)
  {
LABEL_7:
    if ((a50 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(*(void **)(v75 - 200));
  if ((a50 & 0x80000000) == 0)
  {
LABEL_8:
    *(void *)(v75 - 160) = &off_100451DC0;
    uint64_t v77 = *(void *)(v75 - 152);
    if (!v77) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(a45);
  *(void *)(v75 - 160) = &off_100451DC0;
  uint64_t v77 = *(void *)(v75 - 152);
  if (!v77) {
    goto LABEL_18;
  }
LABEL_16:
  if ((*(unsigned int (**)(uint64_t))(*(void *)v77 + 32))(v77)) {
    *(void *)(v75 - 152) = 0;
  }
LABEL_18:
  std::runtime_error::~runtime_error((std::runtime_error *)(v75 - 176));
  if (a55)
  {
    a56 = (uint64_t)a55;
    operator delete(a55);
  }
  std::runtime_error::~runtime_error((std::runtime_error *)(v75 - 248));
  if (a73 < 0) {
    operator delete(a72.__ptr_);
  }
  if (a63 < 0) {
    operator delete(a58);
  }
  if (a71 < 0) {
    operator delete(a70);
  }
  if (a69 < 0) {
    operator delete(a64);
  }
  __cxa_free_exception(v73);
  if (*(char *)(v75 - 209) < 0) {
    operator delete(*(void **)(v75 - 232));
  }
  sub_100029460((uint64_t)&a16);

  std::runtime_error v78 = a13;
  if (a13)
  {
    uint64_t v79 = a14;
    std::string v80 = a13;
    if ((void *)a14 != a13)
    {
      do
      {
        uint64_t v81 = *(std::__shared_weak_count **)(v79 - 8);
        if (v81 && !atomic_fetch_add(&v81->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v81->__on_zero_shared)(v81);
          std::__shared_weak_count::__release_weak(v81);
        }
        v79 -= 16;
      }
      while ((void *)v79 != v78);
      std::string v80 = a13;
    }
    a14 = (uint64_t)v78;
    operator delete(v80);
  }
  __cxa_begin_catch(a1);
  std::string::size_type v82 = *(std::__assoc_sub_state ***)(a10 + 32);
  std::current_exception();
  std::exception_ptr v83 = *v82;
  if (v83)
  {
    std::exception_ptr::exception_ptr(&a72, &a12);
    v84.__ptr_ = &a72;
    std::__assoc_sub_state::set_exception(v83, v84);
    std::exception_ptr::~exception_ptr(&a72);
    std::exception_ptr::~exception_ptr(&a12);
    __cxa_end_catch();
    JUMPOUT(0x1002166ACLL);
  }
  sub_1000AD034(3u);
}

void sub_100217DC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::exception_ptr a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,std::exception_ptr a53)
{
}

void sub_100217DFC(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);

  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

void sub_100217E68(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);

  operator delete();
}

uint64_t sub_100217EE8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 136))
  {
    uint64_t v2 = *(void *)(a1 + 144);
    if (v2)
    {
      uint64_t v3 = *(void *)(a1 + 152);
      std::string::size_type v4 = *(void **)(a1 + 144);
      if (v3 != v2)
      {
        do
        {
          uint64_t v5 = *(std::__shared_weak_count **)(v3 - 8);
          if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
            std::__shared_weak_count::__release_weak(v5);
          }
          v3 -= 16;
        }
        while (v3 != v2);
        std::string::size_type v4 = *(void **)(a1 + 144);
      }
      *(void *)(a1 + 152) = v2;
      operator delete(v4);
    }
  }
  long long v6 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 8);

  return v6(a1);
}

double sub_100217FD4@<D0>(sqlite3_stmt **a1@<X0>, uint64_t a2@<X8>)
{
  if (sqlite3_column_type(*a1, 0) == 5)
  {
    *(unsigned char *)a2 = 0;
    return result;
  }
  uint64_t v5 = sqlite3_column_text(*a1, 0);
  size_t v6 = strlen((const char *)v5);
  if (v6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  size_t v7 = v6;
  if (v6 >= 0x17)
  {
    uint64_t v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17) {
      uint64_t v9 = v6 | 7;
    }
    uint64_t v10 = v9 + 1;
    p_dst = (long long *)operator new(v9 + 1);
    *((void *)&__dst + 1) = v7;
    unint64_t v12 = v10 | 0x8000000000000000;
    *(void *)&long long __dst = p_dst;
  }
  else
  {
    HIBYTE(v12) = v6;
    p_dst = &__dst;
    if (!v6) {
      goto LABEL_11;
    }
  }
  memmove(p_dst, v5, v7);
LABEL_11:
  *((unsigned char *)p_dst + v7) = 0;
  double result = *(double *)&__dst;
  *(_OWORD *)(a2 + 8) = __dst;
  *(void *)(a2 + 24) = v12;
  *(unsigned char *)a2 = 1;
  return result;
}

void sub_1002180E0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 24);
  __lk.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 24));
  std::__assoc_sub_state::__sub_wait((std::__assoc_sub_state *)a1, &__lk);
  uint64_t v4 = *(void *)(a1 + 16);
  v7.__ptr_ = 0;
  std::exception_ptr::~exception_ptr(&v7);
  if (v4)
  {
    std::exception_ptr::exception_ptr(&v6, (const std::exception_ptr *)(a1 + 16));
    v5.__ptr_ = &v6;
    std::rethrow_exception(v5);
    __break(1u);
  }
  else
  {
    *(_OWORD *)a2 = *(_OWORD *)(a1 + 144);
    *(void *)(a2 + 16) = *(void *)(a1 + 160);
    *(void *)(a1 + 152) = 0;
    *(void *)(a1 + 160) = 0;
    *(void *)(a1 + 144) = 0;
    if (__lk.__owns_) {
      std::mutex::unlock(__lk.__m_);
    }
  }
}

void sub_10021818C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::mutex *a11, char a12)
{
  if (a12) {
    std::mutex::unlock(a11);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_1002181B8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (!v2) {
    return a1;
  }
  if ((*(unsigned char *)(v2 + 136) & 1) == 0)
  {
    v8.__ptr_ = 0;
    uint64_t v3 = *(void *)(v2 + 16);
    std::exception_ptr::~exception_ptr(&v8);
    uint64_t v2 = *a1;
    if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
    {
      v9.__cat_ = std::future_category();
      *(void *)&v9.__val_ = 4;
      std::future_error::future_error(&v7, v9);
      exception = (std::logic_error *)__cxa_allocate_exception(0x20uLL);
      std::exception_ptr v6 = std::logic_error::logic_error(exception, &v7);
      v6[1] = (std::logic_error)v7.__ec_;
    }
  }
  if (atomic_fetch_add((atomic_ullong *volatile)(v2 + 8), 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  return a1;
}

void sub_100218314(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = (void *)(*(void *)v2 + 56);
  if (sub_1002FBE08(v4, *(uint64_t ****)(v2 + 8), *(uint64_t **)(v2 + 16)))
  {
    std::exception_ptr v5 = sub_10007FC9C(v3, *(void *)(v2 + 8));
    sub_10007DE30(*(sqlite3 ***)(v3 + 40), "tile_data", "tiles", (sqlite3_int64)v5, 1, &v22);
    sub_1002FBC98(v4, *(uint64_t ****)(v2 + 8), *(void **)(v2 + 16), &v22, (uint64_t *)__p);
    int v6 = sqlite3_blob_close(v22);
    if (!v6) {
      goto LABEL_9;
    }
    if (qword_10047BF08 == -1)
    {
      std::future_error v7 = qword_10047BF10;
      if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_9;
      }
      goto LABEL_5;
    }
    dispatch_once(&qword_10047BF08, &stru_100460658);
    std::future_error v7 = qword_10047BF10;
    if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR))
    {
LABEL_5:
      *(_DWORD *)long long buf = 67240192;
      *(_DWORD *)&uint8_t buf[4] = v6;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "Failed to close blob (error %{public}d)", buf, 8u);
    }
  }
  else
  {
    uint64_t v8 = **(void **)(v2 + 16);
    uint64_t v9 = *(void *)(*(void *)(v2 + 16) + 8);
    __p[0] = 0;
    __p[1] = 0;
    uint64_t v21 = 0;
    uint64_t v10 = v9 - v8;
    if (v9 != v8)
    {
      if (v10 < 0) {
        sub_1000A9108();
      }
      uint64_t v11 = (char *)operator new((unint64_t)v10 >> 1);
      size_t v12 = 16 * (v10 >> 5);
      int v13 = &v11[v12];
      __p[0] = v11;
      uint64_t v21 = &v11[v12];
      bzero(v11, v12);
      __p[1] = v13;
    }
  }
LABEL_9:
  uint64_t v14 = *v1;
  if (!*v1) {
    sub_1000AD034(3u);
  }
  std::mutex::lock((std::mutex *)(v14 + 24));
  if ((*(unsigned char *)(v14 + 136) & 1) != 0
    || (*(void *)long long buf = 0,
        uint64_t v15 = *(void *)(v14 + 16),
        std::exception_ptr::~exception_ptr((std::exception_ptr *)buf),
        v15))
  {
    sub_1000AD034(2u);
  }
  *(_OWORD *)(v14 + 144) = *(_OWORD *)__p;
  *(void *)(v14 + 160) = v21;
  __p[1] = 0;
  uint64_t v21 = 0;
  __p[0] = 0;
  *(_DWORD *)(v14 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(v14 + 88));
  std::mutex::unlock((std::mutex *)(v14 + 24));
  size_t v16 = (char *)__p[0];
  if (__p[0])
  {
    std::string::size_type v17 = (char *)__p[1];
    unint64_t v18 = __p[0];
    if (__p[1] != __p[0])
    {
      do
      {
        uint64_t v19 = (std::__shared_weak_count *)*((void *)v17 - 1);
        if (v19)
        {
          if (!atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
            std::__shared_weak_count::__release_weak(v19);
          }
        }
        v17 -= 16;
      }
      while (v17 != v16);
      unint64_t v18 = __p[0];
    }
    __p[1] = v16;
    operator delete(v18);
  }
}

void sub_1002185D0(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_1000A6954(exception_object);
}

void sub_1002185E8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, sqlite3_blob *a14)
{
  if (a2)
  {
    int v16 = sqlite3_blob_close(a14);
    sub_1003A513C(v16);
    __cxa_begin_catch(a1);
    std::string::size_type v17 = *(std::__assoc_sub_state ***)(v14 + 32);
    std::current_exception();
    unint64_t v18 = *v17;
    if (v18)
    {
      std::exception_ptr::exception_ptr(&a11, &a10);
      v19.__ptr_ = &a11;
      std::__assoc_sub_state::set_exception(v18, v19);
      std::exception_ptr::~exception_ptr(&a11);
      std::exception_ptr::~exception_ptr(&a10);
      __cxa_end_catch();
      JUMPOUT(0x100218544);
    }
    sub_1000AD034(3u);
  }
  JUMPOUT(0x1002185D8);
}

void sub_10021872C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, std::exception_ptr a11)
{
}

void sub_100218758(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);

  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

void sub_1002187C4(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);

  operator delete();
}

uint64_t sub_100218844(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 136))
  {
    uint64_t v2 = *(void *)(a1 + 144);
    if (v2)
    {
      uint64_t v3 = *(void *)(a1 + 152);
      uint64_t v4 = *(void **)(a1 + 144);
      if (v3 != v2)
      {
        do
        {
          std::exception_ptr v5 = *(std::__shared_weak_count **)(v3 - 8);
          if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
            std::__shared_weak_count::__release_weak(v5);
          }
          v3 -= 16;
        }
        while (v3 != v2);
        uint64_t v4 = *(void **)(a1 + 144);
      }
      *(void *)(a1 + 152) = v2;
      operator delete(v4);
    }
  }
  int v6 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 8);

  return v6(a1);
}

void sub_100218930(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 24);
  __lk.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 24));
  std::__assoc_sub_state::__sub_wait((std::__assoc_sub_state *)a1, &__lk);
  uint64_t v4 = *(void *)(a1 + 16);
  v7.__ptr_ = 0;
  std::exception_ptr::~exception_ptr(&v7);
  if (v4)
  {
    std::exception_ptr::exception_ptr(&v6, (const std::exception_ptr *)(a1 + 16));
    v5.__ptr_ = &v6;
    std::rethrow_exception(v5);
    __break(1u);
  }
  else
  {
    *(_OWORD *)a2 = *(_OWORD *)(a1 + 144);
    *(void *)(a2 + 16) = *(void *)(a1 + 160);
    *(void *)(a1 + 152) = 0;
    *(void *)(a1 + 160) = 0;
    *(void *)(a1 + 144) = 0;
    if (__lk.__owns_) {
      std::mutex::unlock(__lk.__m_);
    }
  }
}

void sub_1002189DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::mutex *a11, char a12)
{
  if (a12) {
    std::mutex::unlock(a11);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_100218A08(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (!v2) {
    return a1;
  }
  if ((*(unsigned char *)(v2 + 136) & 1) == 0)
  {
    v8.__ptr_ = 0;
    uint64_t v3 = *(void *)(v2 + 16);
    std::exception_ptr::~exception_ptr(&v8);
    uint64_t v2 = *a1;
    if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
    {
      v9.__cat_ = std::future_category();
      *(void *)&v9.__val_ = 4;
      std::future_error::future_error(&v7, v9);
      exception = (std::logic_error *)__cxa_allocate_exception(0x20uLL);
      std::exception_ptr v6 = std::logic_error::logic_error(exception, &v7);
      v6[1] = (std::logic_error)v7.__ec_;
    }
  }
  if (atomic_fetch_add((atomic_ullong *volatile)(v2 + 8), 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  return a1;
}

void sub_100218B64(uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)(a1 + 32);
  uint64_t v3 = *v2;
  uint64_t v4 = sub_10007FC9C(*v2, v2[1]);
  sub_10007DE30(*(sqlite3 ***)(v3 + 40), "tile_data", "tiles", (sqlite3_int64)v4, 1, &v10);
  std::exception_ptr v5 = (void *)v2[2];
  std::exception_ptr v6 = (void *)v5[3];
  if (!v6)
  {
    uint64_t v7 = 0;
    goto LABEL_5;
  }
  if (v6 != v5)
  {
    uint64_t v7 = (*(uint64_t (**)(void))(*v6 + 16))(v5[3]);
LABEL_5:
    size_t v12 = (void *)v7;
    goto LABEL_7;
  }
  size_t v12 = v11;
  (*(void (**)(void *, void *))(*v5 + 24))(v5, v11);
LABEL_7:
  sub_1002FBAE8(v3 + 56, &v10, v11);
  if (v12 == v11)
  {
    (*(void (**)(void *))(v11[0] + 32))(v11);
  }
  else if (v12)
  {
    (*(void (**)(void))(*v12 + 40))();
  }
  int v8 = sqlite3_blob_close(v10);
  if (v8)
  {
    if (qword_10047BF08 != -1)
    {
      dispatch_once(&qword_10047BF08, &stru_100460658);
      std::error_code v9 = qword_10047BF10;
      if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    std::error_code v9 = qword_10047BF10;
    if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR))
    {
LABEL_14:
      *(_DWORD *)long long buf = 67240192;
      int v14 = v8;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Failed to close blob (error %{public}d)", buf, 8u);
    }
  }
LABEL_15:
  std::promise<void>::set_value(*(std::promise<void> **)(a1 + 40));
}

void sub_100218D94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, sqlite3_blob *a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, int buf, int a16)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  int v18 = sqlite3_blob_close(a10);
  if (v18)
  {
    if (qword_10047BF08 != -1)
    {
      dispatch_once(&qword_10047BF08, &stru_100460658);
      std::exception_ptr v19 = qword_10047BF10;
      if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_8;
      }
      goto LABEL_6;
    }
    std::exception_ptr v19 = qword_10047BF10;
    if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR))
    {
LABEL_6:
      long long buf = 67240192;
      a16 = v18;
      _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "Failed to close blob (error %{public}d)", (uint8_t *)&buf, 8u);
    }
  }
LABEL_8:
  __cxa_begin_catch(exception_object);
  uint64_t v20 = *(std::promise<void> **)(v16 + 40);
  std::current_exception();
  v21.__ptr_ = &a9;
  std::promise<void>::set_exception(v20, v21);
  std::exception_ptr::~exception_ptr((std::exception_ptr *)&a9);
  __cxa_end_catch();
  JUMPOUT(0x100218D34);
}

void sub_100218EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::exception_ptr a9)
{
}

void sub_100218EFC(uint64_t a1)
{
}

void sub_100218F3C(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  __cxa_begin_catch(a1);
  uint64_t v15 = *(std::promise<void> **)(v14 + 40);
  std::current_exception();
  v16.__ptr_ = v17;
  std::promise<void>::set_exception(v15, v16);
  std::exception_ptr::~exception_ptr(v17);
  __cxa_end_catch();
}

void sub_100218F74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10)
{
}

uint64_t sub_100218F90(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2)->__vftable = (std::runtime_error_vtbl *)&off_1004611A0;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = off_1004610B8;
  *(void *)(a1 + 16) = off_1004610F0;
  *(void *)(a1 + 56) = &off_100461128;
  return a1;
}

void sub_1002190B0(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_1002190C4(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_100219150()
{
}

void sub_1002193EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CD2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100219400(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_1000CD2E0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10021941C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002194AC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4->__vftable = (std::runtime_error_vtbl *)&off_1004611A0;
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_1004610B8;
  *(void *)(a1 + 16) = off_1004610F0;
  *(void *)(a1 + 56) = &off_100461128;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_1002195D8(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_1002195EC(_Unwind_Exception *a1)
{
  sub_100219600(v1);
  _Unwind_Resume(a1);
}

void sub_100219600(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_10021968C(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_10021972C()
{
}

void sub_100219788()
{
}

void sub_1002197AC(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100218F90((uint64_t)exception, a1);
}

void sub_1002197F4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100219808(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_100219890(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

void sub_10021992C()
{
}

void sub_10021999C()
{
}

void sub_1002199C0(void *a1)
{
  uint64_t v1 = (uint64_t)a1 + *(void *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100218F90((uint64_t)exception, v1);
}

void sub_100219A1C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100219A30(void *a1)
{
  uint64_t v1 = (std::runtime_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(v1);
}

void sub_100219AD0(void *a1)
{
  uint64_t v1 = (std::runtime_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(v1);

  operator delete();
}

void sub_100219B84(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_100219C24(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_100219CAC(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

void sub_100219D48(std::runtime_error *a1)
{
  std::runtime_error::~runtime_error(a1);

  operator delete();
}

uint64_t sub_100219D80(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4->__vftable = (std::runtime_error_vtbl *)&off_1004611A0;
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_1004610B8;
  *(void *)(a1 + 16) = off_1004610F0;
  *(void *)(a1 + 56) = &off_100461128;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_100219EAC(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_100219EC0(_Unwind_Exception *a1)
{
  sub_100219600(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100219ED4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2)->__vftable = (std::runtime_error_vtbl *)&off_1004612B8;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = off_1004611D0;
  *(void *)(a1 + 16) = off_100461208;
  *(void *)(a1 + 56) = &off_100461240;
  return a1;
}

void sub_100219FF4(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10021A008(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_10021A094()
{
}

void sub_10021A330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CD2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10021A344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_1000CD2E0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10021A360(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10021A3F0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4->__vftable = (std::runtime_error_vtbl *)&off_1004612B8;
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_1004611D0;
  *(void *)(a1 + 16) = off_100461208;
  *(void *)(a1 + 56) = &off_100461240;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_10021A51C(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10021A530(_Unwind_Exception *a1)
{
  sub_10021A544(v1);
  _Unwind_Resume(a1);
}

void sub_10021A544(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_10021A5D0(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_10021A670()
{
}

void sub_10021A6CC()
{
}

void sub_10021A6F0(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100219ED4((uint64_t)exception, a1);
}

void sub_10021A738(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10021A74C(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_10021A7D4(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

void sub_10021A870()
{
}

void sub_10021A8E0()
{
}

void sub_10021A904(void *a1)
{
  uint64_t v1 = (uint64_t)a1 + *(void *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100219ED4((uint64_t)exception, v1);
}

void sub_10021A960(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10021A974(void *a1)
{
  uint64_t v1 = (std::runtime_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(v1);
}

void sub_10021AA14(void *a1)
{
  uint64_t v1 = (std::runtime_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(v1);

  operator delete();
}

void sub_10021AAC8(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_10021AB68(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_10021ABF0(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

void sub_10021AC8C(std::runtime_error *a1)
{
  std::runtime_error::~runtime_error(a1);

  operator delete();
}

uint64_t sub_10021ACC4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4->__vftable = (std::runtime_error_vtbl *)&off_1004612B8;
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_1004611D0;
  *(void *)(a1 + 16) = off_100461208;
  *(void *)(a1 + 56) = &off_100461240;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_10021ADF0(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10021AE04(_Unwind_Exception *a1)
{
  sub_10021A544(v1);
  _Unwind_Resume(a1);
}

void sub_10021AE18(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1004612E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10021AE38(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1004612E0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10021AE8C(uint64_t a1)
{
  return sub_10009FF1C(a1 + 24);
}

void sub_10021AE9C()
{
}

void *sub_10021AEB0(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *double result = off_100461330;
  result[1] = v3;
  return result;
}

uint64_t sub_10021AEF8(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100461330;
  a2[1] = v2;
  return result;
}

uint64_t sub_10021AF20(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZNK12SqlPrivacyDb37onQueueLookupVenueResourceInformationERK10LocationIdE3$_0") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"ZNK12SqlPrivacyDb37onQueueLookupVenueResourceInformationERK10LocationIdE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK12SqlPrivacyDb37onQueueLookupVenueResourceInformationERK10LocationIdE3$_0")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK12SqlPrivacyDb37onQueueLookupVenueResourceInformationERK10LocationIdE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

_UNKNOWN **sub_10021AF90()
{
}

void sub_10021AFA0()
{
}

void *sub_10021AFB4(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *double result = off_1004613C0;
  result[1] = v3;
  return result;
}

uint64_t sub_10021AFFC(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1004613C0;
  a2[1] = v2;
  return result;
}

uint64_t sub_10021B024(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZNK12SqlPrivacyDb37onQueueLookupVenueResourceInformationERK10LocationIdE3$_1") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"ZNK12SqlPrivacyDb37onQueueLookupVenueResourceInformationERK10LocationIdE3$_1" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK12SqlPrivacyDb37onQueueLookupVenueResourceInformationERK10LocationIdE3$_1")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK12SqlPrivacyDb37onQueueLookupVenueResourceInformationERK10LocationIdE3$_1" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

_UNKNOWN **sub_10021B094()
{
}

void sub_10021B0A4()
{
}

void *sub_10021B0B8(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *double result = off_100461450;
  result[1] = v3;
  return result;
}

uint64_t sub_10021B100(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100461450;
  a2[1] = v2;
  return result;
}

void sub_10021B12C(uint64_t a1, sqlite3_stmt **a2)
{
}

uint64_t sub_10021B13C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZNK12SqlPrivacyDb46onQueueLookupVenueResourceInformationByLocalIdEyE3$_0") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"ZNK12SqlPrivacyDb46onQueueLookupVenueResourceInformationByLocalIdEyE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK12SqlPrivacyDb46onQueueLookupVenueResourceInformationByLocalIdEyE3$_0")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK12SqlPrivacyDb46onQueueLookupVenueResourceInformationByLocalIdEyE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

_UNKNOWN **sub_10021B1AC()
{
}

void sub_10021B1B8(sqlite3_stmt **a1, int a2, unint64_t a3)
{
  int v6 = sqlite3_bind_int64(*a1, a2, a3);
  sub_100088644(v6, a1[1]);
  if (v6)
  {
    long long v7 = __error();
    sub_100295674(*v7, &v36);
    __cxa_allocate_exception(0x40uLL);
    std::to_string(&v29, a3);
    int v8 = std::string::insert(&v29, 0, "Failed to bind ");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    uint64_t v10 = std::string::append(&v30, " to ");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v31.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v28, a2);
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      size_t v12 = &v28;
    }
    else {
      size_t v12 = (std::string *)v28.__r_.__value_.__r.__words[0];
    }
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v28.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v28.__r_.__value_.__l.__size_;
    }
    uint64_t v14 = std::string::append(&v31, (const std::string::value_type *)v12, size);
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    sub_1000AE4B0(v26, " w/ ");
    if ((v27 & 0x80u) == 0) {
      std::exception_ptr v16 = (const std::string::value_type *)v26;
    }
    else {
      std::exception_ptr v16 = (const std::string::value_type *)v26[0];
    }
    if ((v27 & 0x80u) == 0) {
      std::string::size_type v17 = v27;
    }
    else {
      std::string::size_type v17 = v26[1];
    }
    int v18 = std::string::append(&v32, v16, v17);
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v33.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&__dst, v36.__r_.__value_.__l.__data_, v36.__r_.__value_.__l.__size_);
    }
    else {
      std::string __dst = v36;
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_dst = &__dst;
    }
    else {
      p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v21 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v21 = __dst.__r_.__value_.__l.__size_;
    }
    uint64_t v22 = std::string::append(&v33, (const std::string::value_type *)p_dst, v21);
    long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v34.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v35, &v34);
    v35.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v24);
    sub_100204FC4(&v35, (uint64_t)"void db::resources::statement<8, 1>::bind(int, uint64_t) [nCols = 8, nQueries = 1, ColumnNumberType = unsigned long, runtime_binding = false]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 425, (uint64_t)v24);
  }
}

void sub_10021B580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60,void *a61,uint64_t a62,int a63)
{
  if (a21 < 0)
  {
    operator delete(__p);
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a34 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a9);
  if ((a34 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a29);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a47 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(a22);
  if ((a47 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(a42);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    sub_100205504((std::runtime_error *)(v80 - 152));
    std::string::size_type v82 = a52;
    if (!a52)
    {
LABEL_16:
      std::runtime_error::~runtime_error((std::runtime_error *)(v80 - 168));
      if (*(char *)(v80 - 169) < 0)
      {
        operator delete(*(void **)(v80 - 192));
        if ((a60 & 0x80000000) == 0)
        {
LABEL_18:
          if ((*(char *)(v80 - 201) & 0x80000000) == 0) {
            goto LABEL_19;
          }
          goto LABEL_29;
        }
      }
      else if ((a60 & 0x80000000) == 0)
      {
        goto LABEL_18;
      }
      operator delete(a55);
      if ((*(char *)(v80 - 201) & 0x80000000) == 0)
      {
LABEL_19:
        if ((a66 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        goto LABEL_30;
      }
LABEL_29:
      operator delete(*(void **)(v80 - 224));
      if ((a66 & 0x80000000) == 0)
      {
LABEL_20:
        if ((*(char *)(v80 - 233) & 0x80000000) == 0) {
          goto LABEL_21;
        }
        goto LABEL_31;
      }
LABEL_30:
      operator delete(a61);
      if ((*(char *)(v80 - 233) & 0x80000000) == 0)
      {
LABEL_21:
        if ((a72 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        goto LABEL_32;
      }
LABEL_31:
      operator delete(*(void **)(v80 - 256));
      if ((a72 & 0x80000000) == 0)
      {
LABEL_22:
        if ((a78 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        goto LABEL_33;
      }
LABEL_32:
      operator delete(a67);
      if ((a78 & 0x80000000) == 0)
      {
LABEL_23:
        if ((a76 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        goto LABEL_34;
      }
LABEL_33:
      operator delete(a77);
      if ((a76 & 0x80000000) == 0)
      {
LABEL_24:
        if (a74 < 0) {
          goto LABEL_25;
        }
        goto LABEL_35;
      }
LABEL_34:
      operator delete(a75);
      if (a74 < 0)
      {
LABEL_25:
        operator delete(a73);
        if ((v79 & 1) == 0)
        {
LABEL_37:
          if (*(char *)(v80 - 65) < 0) {
            operator delete(*(void **)(v80 - 88));
          }
          _Unwind_Resume(a1);
        }
LABEL_36:
        __cxa_free_exception(v78);
        goto LABEL_37;
      }
LABEL_35:
      if (!v79) {
        goto LABEL_37;
      }
      goto LABEL_36;
    }
LABEL_15:
    operator delete(v82);
    goto LABEL_16;
  }
LABEL_14:
  operator delete(a35);
  sub_100205504((std::runtime_error *)(v80 - 152));
  std::string::size_type v82 = a52;
  if (!a52) {
    goto LABEL_16;
  }
  goto LABEL_15;
}

void sub_10021B874()
{
}

void *sub_10021B888(uint64_t a1)
{
  double result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *double result = off_1004614D0;
  result[1] = v3;
  return result;
}

uint64_t sub_10021B8D0(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_1004614D0;
  a2[1] = v2;
  return result;
}

void sub_10021B8FC(uint64_t a1@<X0>, sqlite3_stmt **a2@<X1>, uint64_t a3@<X8>)
{
  sub_100217FD4(a2, (uint64_t)v8);
  *(_OWORD *)long long __p = v9;
  uint64_t v6 = v10;
  sub_100085B24(&v7, (uint64_t)__p);
  *(void *)a3 = *(void *)(a1 + 8);
  *(_OWORD *)(a3 + 8) = v7;
  long long v7 = 0uLL;
  if (SHIBYTE(v6) < 0) {
    operator delete(__p[0]);
  }
}

void sub_10021B9A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10021B9C8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZNK12SqlPrivacyDb46onQueueLookupVenueResourceInformationByLocalIdEyE3$_1") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"ZNK12SqlPrivacyDb46onQueueLookupVenueResourceInformationByLocalIdEyE3$_1" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZNK12SqlPrivacyDb46onQueueLookupVenueResourceInformationByLocalIdEyE3$_1")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZNK12SqlPrivacyDb46onQueueLookupVenueResourceInformationByLocalIdEyE3$_1" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

_UNKNOWN **sub_10021BA38()
{
}

uint64_t sub_10021BA44(uint64_t a1, long long *a2)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  long long v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((unsigned char *)a2 + 23) = 0;
  *(unsigned char *)a2 = 0;
  long long v5 = *(long long *)((char *)a2 + 24);
  *((void *)a2 + 3) = 0;
  *((void *)a2 + 4) = 0;
  uint64_t v6 = *(std::__shared_weak_count **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = v5;
  if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  long long v7 = *(long long *)((char *)a2 + 40);
  *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
  *(_OWORD *)(a1 + 40) = v7;
  if (*(unsigned char *)(a1 + 64))
  {
    if (*((unsigned char *)a2 + 64))
    {
      *(_OWORD *)(a1 + 72) = *(long long *)((char *)a2 + 72);
      int v8 = *((unsigned __int8 *)a2 + 88);
      if (!*(unsigned char *)(a1 + 88)) {
        goto LABEL_17;
      }
    }
    else
    {
      *(unsigned char *)(a1 + 64) = 0;
      int v8 = *((unsigned __int8 *)a2 + 88);
      if (!*(unsigned char *)(a1 + 88)) {
        goto LABEL_17;
      }
    }
LABEL_13:
    if (v8)
    {
      *(_OWORD *)(a1 + 96) = a2[6];
      int v9 = *((unsigned __int8 *)a2 + 112);
      if (*(unsigned char *)(a1 + 112)) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)(a1 + 88) = 0;
      int v9 = *((unsigned __int8 *)a2 + 112);
      if (*(unsigned char *)(a1 + 112)) {
        goto LABEL_20;
      }
    }
    goto LABEL_24;
  }
  if (*((unsigned char *)a2 + 64))
  {
    *(_OWORD *)(a1 + 72) = *(long long *)((char *)a2 + 72);
    *(unsigned char *)(a1 + 64) = 1;
  }
  int v8 = *((unsigned __int8 *)a2 + 88);
  if (*(unsigned char *)(a1 + 88)) {
    goto LABEL_13;
  }
LABEL_17:
  if (v8)
  {
    *(_OWORD *)(a1 + 96) = a2[6];
    *(unsigned char *)(a1 + 88) = 1;
  }
  int v9 = *((unsigned __int8 *)a2 + 112);
  if (*(unsigned char *)(a1 + 112))
  {
LABEL_20:
    if (v9)
    {
      *(void *)(a1 + 120) = *((void *)a2 + 15);
      int v10 = *((unsigned __int8 *)a2 + 128);
      if (!*(unsigned char *)(a1 + 128)) {
        goto LABEL_31;
      }
    }
    else
    {
      *(unsigned char *)(a1 + 112) = 0;
      int v10 = *((unsigned __int8 *)a2 + 128);
      if (!*(unsigned char *)(a1 + 128)) {
        goto LABEL_31;
      }
    }
    goto LABEL_27;
  }
LABEL_24:
  if (v9)
  {
    *(void *)(a1 + 120) = *((void *)a2 + 15);
    *(unsigned char *)(a1 + 112) = 1;
  }
  int v10 = *((unsigned __int8 *)a2 + 128);
  if (!*(unsigned char *)(a1 + 128))
  {
LABEL_31:
    if (v10)
    {
      *(void *)(a1 + 136) = *((void *)a2 + 17);
      *(unsigned char *)(a1 + 128) = 1;
      return a1;
    }
    return a1;
  }
LABEL_27:
  if (v10)
  {
    *(void *)(a1 + 136) = *((void *)a2 + 17);
    return a1;
  }
  *(unsigned char *)(a1 + 128) = 0;
  return a1;
}

void sub_10021BC3C(uint64_t a1)
{
  uint64_t v2 = *(sqlite3_stmt **)a1;
  if (!v2) {
    return;
  }
  unint64_t v3 = sqlite3_sql(v2);
  if (v3) {
    long long v4 = v3;
  }
  else {
    long long v4 = "<unknown query>";
  }
  size_t v5 = strlen(v4);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    p_dst = (void **)operator new(v8 + 1);
    std::string __dst = p_dst;
    unint64_t v14 = v9 | 0x8000000000000000;
    goto LABEL_12;
  }
  HIBYTE(v14) = v5;
  p_dst = (void **)&__dst;
  if (v5) {
LABEL_12:
  }
    memmove(p_dst, v4, v6);
  *((unsigned char *)p_dst + v6) = 0;
  int v10 = sqlite3_finalize(*(sqlite3_stmt **)a1);
  if (v10)
  {
    if (qword_10047BF08 != -1)
    {
      dispatch_once(&qword_10047BF08, &stru_100460658);
      long long v11 = qword_10047BF10;
      if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    long long v11 = qword_10047BF10;
    if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR))
    {
LABEL_16:
      *(_DWORD *)long long buf = 67240192;
      int v16 = v10;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Failed to finalize with %{public}d", buf, 8u);
    }
  }
LABEL_17:
  *(void *)a1 = 0;
  size_t v12 = *(void **)(a1 + 16);
  if (v12)
  {
    *(void *)(a1 + 16) = 0;
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst);
  }
}

void sub_10021BDFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10021BE24(sqlite3_stmt **a1, int a2, uint64_t *a3)
{
  size_t v5 = *a1;
  int v6 = *((char *)a3 + 23);
  int v7 = *((_DWORD *)a3 + 2);
  if (v6 >= 0)
  {
    int v8 = v6;
  }
  else
  {
    a3 = (uint64_t *)*a3;
    int v8 = v7;
  }
  int v9 = sqlite3_bind_text(v5, a2, (const char *)a3, v8, (void (__cdecl *)(void *))0xFFFFFFFFFFFFFFFFLL);
  sub_100088644(v9, a1[1]);
  if (v9)
  {
    int v10 = __error();
    sub_100295674(*v10, &v36);
    __cxa_allocate_exception(0x40uLL);
    std::operator+<char>();
    long long v11 = std::string::append(&v30, " to ");
    long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    v31.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v12;
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v29, a2);
    if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v13 = &v29;
    }
    else {
      int v13 = (std::string *)v29.__r_.__value_.__r.__words[0];
    }
    if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v29.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v29.__r_.__value_.__l.__size_;
    }
    long long v15 = std::string::append(&v31, (const std::string::value_type *)v13, size);
    long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v16;
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    v15->__r_.__value_.__r.__words[0] = 0;
    sub_1000AE4B0(v27, " w/ ");
    if ((v28 & 0x80u) == 0) {
      std::string::size_type v17 = (const std::string::value_type *)v27;
    }
    else {
      std::string::size_type v17 = (const std::string::value_type *)v27[0];
    }
    if ((v28 & 0x80u) == 0) {
      std::string::size_type v18 = v28;
    }
    else {
      std::string::size_type v18 = v27[1];
    }
    long long v19 = std::string::append(&v32, v17, v18);
    long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v33.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&__dst, v36.__r_.__value_.__l.__data_, v36.__r_.__value_.__l.__size_);
    }
    else {
      std::string __dst = v36;
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_dst = &__dst;
    }
    else {
      p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v22 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v22 = __dst.__r_.__value_.__l.__size_;
    }
    long long v23 = std::string::append(&v33, (const std::string::value_type *)p_dst, v22);
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v34.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v35, &v34);
    v35.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v25);
    sub_100204FC4(&v35, (uint64_t)"void db::resources::statement<0, 1>::bind(int, const std::string &) [nCols = 0, nQueries = 1, ColumnNumberType = unsigned long, runtime_binding = false]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 448, (uint64_t)v25);
  }
}

void sub_10021C1E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60,void *a61,uint64_t a62,int a63)
{
  if (a21 < 0)
  {
    operator delete(__p);
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a34 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a9);
  if ((a34 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a29);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a47 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(a22);
  if ((a47 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(a42);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    sub_100205504((std::runtime_error *)(v78 - 152));
    uint64_t v80 = a52;
    if (!a52)
    {
LABEL_16:
      std::runtime_error::~runtime_error((std::runtime_error *)(v78 - 168));
      if (*(char *)(v78 - 169) < 0)
      {
        operator delete(*(void **)(v78 - 192));
        if ((a60 & 0x80000000) == 0)
        {
LABEL_18:
          if ((*(char *)(v78 - 201) & 0x80000000) == 0) {
            goto LABEL_19;
          }
          goto LABEL_28;
        }
      }
      else if ((a60 & 0x80000000) == 0)
      {
        goto LABEL_18;
      }
      operator delete(a55);
      if ((*(char *)(v78 - 201) & 0x80000000) == 0)
      {
LABEL_19:
        if ((a66 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        goto LABEL_29;
      }
LABEL_28:
      operator delete(*(void **)(v78 - 224));
      if ((a66 & 0x80000000) == 0)
      {
LABEL_20:
        if ((*(char *)(v78 - 233) & 0x80000000) == 0) {
          goto LABEL_21;
        }
        goto LABEL_30;
      }
LABEL_29:
      operator delete(a61);
      if ((*(char *)(v78 - 233) & 0x80000000) == 0)
      {
LABEL_21:
        if ((a72 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        goto LABEL_31;
      }
LABEL_30:
      operator delete(*(void **)(v78 - 256));
      if ((a72 & 0x80000000) == 0)
      {
LABEL_22:
        if ((a76 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        goto LABEL_32;
      }
LABEL_31:
      operator delete(a67);
      if ((a76 & 0x80000000) == 0)
      {
LABEL_23:
        if (a74 < 0) {
          goto LABEL_24;
        }
        goto LABEL_33;
      }
LABEL_32:
      operator delete(a75);
      if (a74 < 0)
      {
LABEL_24:
        operator delete(a73);
        if ((v77 & 1) == 0)
        {
LABEL_35:
          if (*(char *)(v78 - 65) < 0) {
            operator delete(*(void **)(v78 - 88));
          }
          _Unwind_Resume(a1);
        }
LABEL_34:
        __cxa_free_exception(v76);
        goto LABEL_35;
      }
LABEL_33:
      if (!v77) {
        goto LABEL_35;
      }
      goto LABEL_34;
    }
LABEL_15:
    operator delete(v80);
    goto LABEL_16;
  }
LABEL_14:
  operator delete(a35);
  sub_100205504((std::runtime_error *)(v78 - 152));
  uint64_t v80 = a52;
  if (!a52) {
    goto LABEL_16;
  }
  goto LABEL_15;
}

void sub_10021C4AC(sqlite3_stmt **a1, int a2, unint64_t a3)
{
  int v6 = sqlite3_bind_int64(*a1, a2, a3);
  sub_100088644(v6, a1[1]);
  if (v6)
  {
    int v7 = __error();
    sub_100295674(*v7, &v36);
    __cxa_allocate_exception(0x40uLL);
    std::to_string(&v29, a3);
    int v8 = std::string::insert(&v29, 0, "Failed to bind ");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    v30.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    int v10 = std::string::append(&v30, " to ");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v31.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v28, a2);
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v12 = &v28;
    }
    else {
      long long v12 = (std::string *)v28.__r_.__value_.__r.__words[0];
    }
    if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v28.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v28.__r_.__value_.__l.__size_;
    }
    unint64_t v14 = std::string::append(&v31, (const std::string::value_type *)v12, size);
    long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
    v32.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v15;
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    sub_1000AE4B0(v26, " w/ ");
    if ((v27 & 0x80u) == 0) {
      long long v16 = (const std::string::value_type *)v26;
    }
    else {
      long long v16 = (const std::string::value_type *)v26[0];
    }
    if ((v27 & 0x80u) == 0) {
      std::string::size_type v17 = v27;
    }
    else {
      std::string::size_type v17 = v26[1];
    }
    std::string::size_type v18 = std::string::append(&v32, v16, v17);
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v33.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&__dst, v36.__r_.__value_.__l.__data_, v36.__r_.__value_.__l.__size_);
    }
    else {
      std::string __dst = v36;
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_dst = &__dst;
    }
    else {
      p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
    }
    if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v21 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v21 = __dst.__r_.__value_.__l.__size_;
    }
    std::string::size_type v22 = std::string::append(&v33, (const std::string::value_type *)p_dst, v21);
    long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
    v34.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v23;
    v22->__r_.__value_.__l.__size_ = 0;
    v22->__r_.__value_.__r.__words[2] = 0;
    v22->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v35, &v34);
    v35.__vftable = (std::runtime_error_vtbl *)&off_100460B68;
    sub_10018E868((uint64_t)v24);
    sub_100204FC4(&v35, (uint64_t)"void db::resources::statement<1, 1>::bind(int, uint64_t) [nCols = 1, nQueries = 1, ColumnNumberType = unsigned long, runtime_binding = false]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sqlite_helper.h", 425, (uint64_t)v24);
  }
}

void sub_10021C874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,void *a52,uint64_t a53,uint64_t a54,void *a55,uint64_t a56,int a57,__int16 a58,char a59,char a60,void *a61,uint64_t a62,int a63)
{
  if (a21 < 0)
  {
    operator delete(__p);
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a34 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a9);
  if ((a34 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  operator delete(a29);
  if ((a27 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a47 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(a22);
  if ((a47 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(a42);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    sub_100205504((std::runtime_error *)(v80 - 152));
    std::string::size_type v82 = a52;
    if (!a52)
    {
LABEL_16:
      std::runtime_error::~runtime_error((std::runtime_error *)(v80 - 168));
      if (*(char *)(v80 - 169) < 0)
      {
        operator delete(*(void **)(v80 - 192));
        if ((a60 & 0x80000000) == 0)
        {
LABEL_18:
          if ((*(char *)(v80 - 201) & 0x80000000) == 0) {
            goto LABEL_19;
          }
          goto LABEL_29;
        }
      }
      else if ((a60 & 0x80000000) == 0)
      {
        goto LABEL_18;
      }
      operator delete(a55);
      if ((*(char *)(v80 - 201) & 0x80000000) == 0)
      {
LABEL_19:
        if ((a66 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        goto LABEL_30;
      }
LABEL_29:
      operator delete(*(void **)(v80 - 224));
      if ((a66 & 0x80000000) == 0)
      {
LABEL_20:
        if ((*(char *)(v80 - 233) & 0x80000000) == 0) {
          goto LABEL_21;
        }
        goto LABEL_31;
      }
LABEL_30:
      operator delete(a61);
      if ((*(char *)(v80 - 233) & 0x80000000) == 0)
      {
LABEL_21:
        if ((a72 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        goto LABEL_32;
      }
LABEL_31:
      operator delete(*(void **)(v80 - 256));
      if ((a72 & 0x80000000) == 0)
      {
LABEL_22:
        if ((a78 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        goto LABEL_33;
      }
LABEL_32:
      operator delete(a67);
      if ((a78 & 0x80000000) == 0)
      {
LABEL_23:
        if ((a76 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        goto LABEL_34;
      }
LABEL_33:
      operator delete(a77);
      if ((a76 & 0x80000000) == 0)
      {
LABEL_24:
        if (a74 < 0) {
          goto LABEL_25;
        }
        goto LABEL_35;
      }
LABEL_34:
      operator delete(a75);
      if (a74 < 0)
      {
LABEL_25:
        operator delete(a73);
        if ((v79 & 1) == 0)
        {
LABEL_37:
          if (*(char *)(v80 - 65) < 0) {
            operator delete(*(void **)(v80 - 88));
          }
          _Unwind_Resume(a1);
        }
LABEL_36:
        __cxa_free_exception(v78);
        goto LABEL_37;
      }
LABEL_35:
      if (!v79) {
        goto LABEL_37;
      }
      goto LABEL_36;
    }
LABEL_15:
    operator delete(v82);
    goto LABEL_16;
  }
LABEL_14:
  operator delete(a35);
  sub_100205504((std::runtime_error *)(v80 - 152));
  std::string::size_type v82 = a52;
  if (!a52) {
    goto LABEL_16;
  }
  goto LABEL_15;
}

void sub_10021CB64(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    long long v4 = (char *)v1[1];
    size_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        while (1)
        {
          if (*(v4 - 16)) {
            *(v4 - 16) = 0;
          }
          if (*(v4 - 32)) {
            *(v4 - 32) = 0;
          }
          if (*(v4 - 56)) {
            *(v4 - 56) = 0;
          }
          if (*(v4 - 80)) {
            *(v4 - 80) = 0;
          }
          int v6 = (std::__shared_weak_count *)*((void *)v4 - 14);
          if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
          if (*(v4 - 121) < 0) {
            break;
          }
          v4 -= 144;
          if (v4 == v2) {
            goto LABEL_18;
          }
        }
        operator delete(*((void **)v4 - 18));
        v4 -= 144;
      }
      while (v4 != v2);
LABEL_18:
      size_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_10021CC88(uint64_t a1)
{
  uint64_t v2 = *(sqlite3_stmt **)a1;
  if (!v2) {
    return;
  }
  unint64_t v3 = sqlite3_sql(v2);
  if (v3) {
    long long v4 = v3;
  }
  else {
    long long v4 = "<unknown query>";
  }
  size_t v5 = strlen(v4);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    p_dst = (void **)operator new(v8 + 1);
    std::string __dst = p_dst;
    unint64_t v14 = v9 | 0x8000000000000000;
    goto LABEL_12;
  }
  HIBYTE(v14) = v5;
  p_dst = (void **)&__dst;
  if (v5) {
LABEL_12:
  }
    memmove(p_dst, v4, v6);
  *((unsigned char *)p_dst + v6) = 0;
  int v10 = sqlite3_finalize(*(sqlite3_stmt **)a1);
  if (v10)
  {
    if (qword_10047BF08 != -1)
    {
      dispatch_once(&qword_10047BF08, &stru_100460658);
      long long v11 = qword_10047BF10;
      if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    long long v11 = qword_10047BF10;
    if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR))
    {
LABEL_16:
      *(_DWORD *)long long buf = 67240192;
      int v16 = v10;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Failed to finalize with %{public}d", buf, 8u);
    }
  }
LABEL_17:
  *(void *)a1 = 0;
  long long v12 = *(void **)(a1 + 16);
  if (v12)
  {
    *(void *)(a1 + 16) = 0;
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst);
  }
}

void sub_10021CE48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10021CE70(void *result, char a2, uint64_t a3, char a4, uint64_t a5)
{
  size_t v5 = result;
  if (a2)
  {
    if (a4)
    {
      double result = sub_100085AD4(&v7, a3, a5);
      *(_OWORD *)(v5 + 1) = *(_OWORD *)&v7.__r_.__value_.__l.__data_;
      *(unsigned char *)size_t v5 = 1;
      return result;
    }
LABEL_6:
    __cxa_allocate_exception(0x40uLL);
    sub_1000AE4B0(&v7, "DB is corrupt");
    std::runtime_error::runtime_error(&v8, &v7);
    v8.__vftable = (std::runtime_error_vtbl *)&off_100453860;
    sub_10018E868((uint64_t)v6);
    sub_1000D1698(&v8, (uint64_t)"boost::optional<VenueVersion> asVenueVersion(const boost::optional<int64_t> &, const boost::optional<std::chrono::system_clock::time_point> &)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/sql_privacy_db.mm", 873, (uint64_t)v6);
  }
  if (a4) {
    goto LABEL_6;
  }
  *(unsigned char *)double result = 0;
  return result;
}

void sub_10021CF88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

double sub_10021D000@<D0>(sqlite3_stmt **a1@<X0>, uint64_t a2@<X8>)
{
  if (sqlite3_column_type(*a1, 2) == 5)
  {
    *(unsigned char *)a2 = 0;
    return result;
  }
  size_t v5 = sqlite3_column_text(*a1, 2);
  size_t v6 = strlen((const char *)v5);
  if (v6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  size_t v7 = v6;
  if (v6 >= 0x17)
  {
    uint64_t v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17) {
      uint64_t v9 = v6 | 7;
    }
    uint64_t v10 = v9 + 1;
    p_dst = (long long *)operator new(v9 + 1);
    *((void *)&__dst + 1) = v7;
    unint64_t v12 = v10 | 0x8000000000000000;
    *(void *)&long long __dst = p_dst;
  }
  else
  {
    HIBYTE(v12) = v6;
    p_dst = &__dst;
    if (!v6) {
      goto LABEL_11;
    }
  }
  memmove(p_dst, v5, v7);
LABEL_11:
  *((unsigned char *)p_dst + v7) = 0;
  double result = *(double *)&__dst;
  *(_OWORD *)(a2 + 8) = __dst;
  *(void *)(a2 + 24) = v12;
  *(unsigned char *)a2 = 1;
  return result;
}

uint64_t sub_10021D10C(int64x2_t *a1, uint64_t a2)
{
  unint64_t v3 = 0x8E38E38E38E38E39 * ((a1->i64[1] - a1->i64[0]) >> 4);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x1C71C71C71C71C7) {
    sub_1000A9108();
  }
  if (0x1C71C71C71C71C72 * ((a1[1].i64[0] - a1->i64[0]) >> 4) > v4) {
    unint64_t v4 = 0x1C71C71C71C71C72 * ((a1[1].i64[0] - a1->i64[0]) >> 4);
  }
  if (0x8E38E38E38E38E39 * ((a1[1].i64[0] - a1->i64[0]) >> 4) >= 0xE38E38E38E38E3) {
    unint64_t v6 = 0x1C71C71C71C71C7;
  }
  else {
    unint64_t v6 = v4;
  }
  uint64_t v37 = a1 + 1;
  if (v6)
  {
    if (v6 > 0x1C71C71C71C71C7) {
      sub_1000A6A10();
    }
    size_t v7 = operator new(144 * v6);
  }
  else
  {
    size_t v7 = 0;
  }
  std::runtime_error v8 = (char *)&v7[9 * v3];
  std::string v34 = v7;
  v35.i64[0] = (uint64_t)v8;
  v35.i64[1] = (uint64_t)v8;
  std::string v36 = (char *)&v7[9 * v6];
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1000559FC(v8, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)std::runtime_error v8 = *(_OWORD *)a2;
    *((void *)v8 + 2) = *(void *)(a2 + 16);
  }
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = (char *)&v7[9 * v3];
  *((void *)v10 + 3) = *(void *)(a2 + 24);
  *((void *)v10 + 4) = v9;
  if (v9) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
  }
  long long v11 = (char *)&v7[9 * v3];
  long long v12 = *(_OWORD *)(a2 + 40);
  v11[64] = 0;
  int v13 = v11 + 64;
  *(_OWORD *)(v13 - 24) = v12;
  *((_DWORD *)v13 - 2) = *(_DWORD *)(a2 + 56);
  if (*(unsigned char *)(a2 + 64))
  {
    *(_OWORD *)((char *)&v7[9 * v3 + 4] + 8) = *(_OWORD *)(a2 + 72);
    *int v13 = 1;
  }
  unint64_t v14 = (char *)&v7[9 * v3];
  v14[88] = 0;
  long long v15 = v14 + 88;
  if (*(unsigned char *)(a2 + 88))
  {
    v7[9 * v3 + 6] = *(_OWORD *)(a2 + 96);
    *long long v15 = 1;
  }
  int v16 = (char *)&v7[9 * v3];
  v16[112] = 0;
  std::string::size_type v17 = v16 + 112;
  if (*(unsigned char *)(a2 + 112))
  {
    *((void *)&v7[9 * v3 + 7] + 1) = *(void *)(a2 + 120);
    unsigned char *v17 = 1;
  }
  std::string::size_type v18 = (char *)&v7[9 * v3];
  v18[128] = 0;
  long long v19 = v18 + 128;
  if (*(unsigned char *)(a2 + 128))
  {
    *((void *)&v7[9 * v3 + 8] + 1) = *(void *)(a2 + 136);
    unsigned char *v19 = 1;
  }
  uint64_t v20 = v35.i64[0];
  uint64_t v21 = v35.i64[1] + 144;
  v35.i64[1] += 144;
  uint64_t v23 = a1->i64[0];
  unint64_t v22 = a1->u64[1];
  if (v22 == a1->i64[0])
  {
    int64x2_t v31 = vdupq_n_s64(v22);
  }
  else
  {
    uint64_t v24 = 0;
    do
    {
      uint64_t v25 = v20 + v24;
      uint64_t v26 = v22 + v24;
      long long v27 = *(_OWORD *)(v22 + v24 - 144);
      *(void *)(v25 - 128) = *(void *)(v22 + v24 - 128);
      *(_OWORD *)(v25 - 144) = v27;
      *(void *)(v26 - 136) = 0;
      *(void *)(v26 - 128) = 0;
      *(void *)(v26 - 144) = 0;
      *(_OWORD *)(v25 - 120) = *(_OWORD *)(v22 + v24 - 120);
      *(void *)(v26 - 120) = 0;
      *(void *)(v26 - 112) = 0;
      long long v28 = *(_OWORD *)(v22 + v24 - 104);
      *(_DWORD *)(v25 - 88) = *(_DWORD *)(v22 + v24 - 88);
      *(_OWORD *)(v25 - 104) = v28;
      *(unsigned char *)(v25 - 80) = 0;
      if (*(unsigned char *)(v22 + v24 - 80))
      {
        *(_OWORD *)(v25 - 72) = *(_OWORD *)(v26 - 72);
        *(unsigned char *)(v25 - 80) = 1;
      }
      *(unsigned char *)(v25 - 56) = 0;
      if (*(unsigned char *)(v26 - 56))
      {
        *(_OWORD *)(v20 + v24 - 48) = *(_OWORD *)(v22 + v24 - 48);
        *(unsigned char *)(v25 - 56) = 1;
      }
      uint64_t v29 = v20 + v24;
      uint64_t v30 = v22 + v24;
      *(unsigned char *)(v20 + v24 - 32) = 0;
      if (*(unsigned char *)(v22 + v24 - 32))
      {
        *(void *)(v29 - 24) = *(void *)(v30 - 24);
        *(unsigned char *)(v29 - 32) = 1;
      }
      *(unsigned char *)(v29 - 16) = 0;
      if (*(unsigned char *)(v30 - 16))
      {
        *(void *)(v20 + v24 - 8) = *(void *)(v22 + v24 - 8);
        *(unsigned char *)(v29 - 16) = 1;
      }
      v24 -= 144;
    }
    while (v22 + v24 != v23);
    int64x2_t v31 = *a1;
    uint64_t v21 = v35.i64[1];
    v20 += v24;
  }
  a1->i64[0] = v20;
  a1->i64[1] = v21;
  int64x2_t v35 = v31;
  std::string v32 = (char *)a1[1].i64[0];
  a1[1].i64[0] = (uint64_t)v36;
  std::string v36 = v32;
  std::string v34 = (_OWORD *)v31.i64[0];
  sub_10021D444((uint64_t)&v34);
  return v21;
}

void sub_10021D430(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10021D444((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10021D444(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    while (1)
    {
      *(void *)(a1 + 16) = i - 144;
      if (*(unsigned char *)(i - 16)) {
        *(unsigned char *)(i - 16) = 0;
      }
      if (*(unsigned char *)(i - 32)) {
        *(unsigned char *)(i - 32) = 0;
      }
      if (*(unsigned char *)(i - 56)) {
        *(unsigned char *)(i - 56) = 0;
      }
      if (*(unsigned char *)(i - 80)) {
        *(unsigned char *)(i - 80) = 0;
      }
      unint64_t v4 = *(std::__shared_weak_count **)(i - 112);
      if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
      if (*(char *)(i - 121) < 0) {
        break;
      }
      uint64_t i = *(void *)(a1 + 16);
      if (i == v2) {
        goto LABEL_17;
      }
    }
    operator delete(*(void **)(i - 144));
  }
LABEL_17:
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_10021D540(uint64_t a1)
{
  uint64_t v2 = *(sqlite3_stmt **)a1;
  if (!v2) {
    return;
  }
  unint64_t v3 = sqlite3_sql(v2);
  if (v3) {
    unint64_t v4 = v3;
  }
  else {
    unint64_t v4 = "<unknown query>";
  }
  size_t v5 = strlen(v4);
  if (v5 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  size_t v6 = v5;
  if (v5 >= 0x17)
  {
    uint64_t v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v8 = v5 | 7;
    }
    uint64_t v9 = v8 + 1;
    p_dst = (void **)operator new(v8 + 1);
    long long __dst = p_dst;
    unint64_t v14 = v9 | 0x8000000000000000;
    goto LABEL_12;
  }
  HIBYTE(v14) = v5;
  p_dst = (void **)&__dst;
  if (v5) {
LABEL_12:
  }
    memmove(p_dst, v4, v6);
  *((unsigned char *)p_dst + v6) = 0;
  int v10 = sqlite3_finalize(*(sqlite3_stmt **)a1);
  if (v10)
  {
    if (qword_10047BF08 != -1)
    {
      dispatch_once(&qword_10047BF08, &stru_100460658);
      long long v11 = qword_10047BF10;
      if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR)) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    long long v11 = qword_10047BF10;
    if (os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_ERROR))
    {
LABEL_16:
      *(_DWORD *)long long buf = 67240192;
      int v16 = v10;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Failed to finalize with %{public}d", buf, 8u);
    }
  }
LABEL_17:
  *(void *)a1 = 0;
  long long v12 = *(void **)(a1 + 16);
  if (v12)
  {
    *(void *)(a1 + 16) = 0;
  }
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst);
  }
}

void sub_10021D700(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_10021D728(void *a1, uint64_t a2)
{
  uint64_t v2 = (unsigned char *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v5 = v4;
  }
  unint64_t v6 = sub_100077FAC((uint64_t)&v25, (uint64_t *)a2, v5);
  int8x8_t v7 = (int8x8_t)a1[1];
  if (!*(void *)&v7) {
    return 0;
  }
  unint64_t v8 = v6;
  uint8x8_t v9 = (uint8x8_t)vcnt_s8(v7);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    unint64_t v10 = v6;
    if (v6 >= *(void *)&v7) {
      unint64_t v10 = v6 % *(void *)&v7;
    }
  }
  else
  {
    unint64_t v10 = (*(void *)&v7 - 1) & v6;
  }
  long long v12 = *(uint64_t ***)(*a1 + 8 * v10);
  if (v12)
  {
    int v13 = *v12;
    if (*v12)
    {
      char v14 = v2[23];
      if (v14 >= 0) {
        uint64_t v15 = v2[23];
      }
      else {
        uint64_t v15 = *((void *)v2 + 1);
      }
      if (v14 < 0) {
        uint64_t v2 = *(unsigned char **)v2;
      }
      if (v9.u32[0] < 2uLL)
      {
        uint64_t v16 = *(void *)&v7 - 1;
        while (1)
        {
          uint64_t v21 = v13[1];
          if (v8 == v21)
          {
            uint64_t v22 = *((unsigned __int8 *)v13 + 39);
            if ((v22 & 0x80u) == 0) {
              uint64_t v23 = *((unsigned __int8 *)v13 + 39);
            }
            else {
              uint64_t v23 = v13[3];
            }
            if (v23 == v15)
            {
              if ((v22 & 0x80) != 0)
              {
                if (!memcmp((const void *)v13[2], v2, v13[3])) {
                  return v13;
                }
              }
              else
              {
                if (!*((unsigned char *)v13 + 39)) {
                  return v13;
                }
                uint64_t v24 = 0;
                while (*((unsigned __int8 *)v13 + v24 + 16) == v2[v24])
                {
                  if (v22 == ++v24) {
                    return v13;
                  }
                }
              }
            }
          }
          else if ((v21 & v16) != v10)
          {
            return 0;
          }
          double result = 0;
          int v13 = (uint64_t *)*v13;
          if (!v13) {
            return result;
          }
        }
      }
      while (1)
      {
        unint64_t v17 = v13[1];
        if (v8 == v17)
        {
          uint64_t v18 = *((unsigned __int8 *)v13 + 39);
          if ((v18 & 0x80u) == 0) {
            uint64_t v19 = *((unsigned __int8 *)v13 + 39);
          }
          else {
            uint64_t v19 = v13[3];
          }
          if (v19 == v15)
          {
            if ((v18 & 0x80) != 0)
            {
              if (!memcmp((const void *)v13[2], v2, v13[3])) {
                return v13;
              }
            }
            else
            {
              if (!*((unsigned char *)v13 + 39)) {
                return v13;
              }
              uint64_t v20 = 0;
              while (*((unsigned __int8 *)v13 + v20 + 16) == v2[v20])
              {
                if (v18 == ++v20) {
                  return v13;
                }
              }
            }
          }
        }
        else
        {
          if (v17 >= *(void *)&v7) {
            v17 %= *(void *)&v7;
          }
          if (v17 != v10) {
            return 0;
          }
        }
        double result = 0;
        int v13 = (uint64_t *)*v13;
        if (!v13) {
          return result;
        }
      }
    }
  }
  return 0;
}

uint64_t sub_10021D958(uint64_t a1, uint64_t **a2, uint64_t **a3)
{
  sub_10000C898((uint64_t)v16);
  unint64_t v6 = *a2;
  if (*a3 != *a2)
  {
    int v7 = *((char *)v6 + 39);
    if (v7 >= 0) {
      uint64_t v8 = (uint64_t)(v6 + 2);
    }
    else {
      uint64_t v8 = v6[2];
    }
    if (v7 >= 0) {
      uint64_t v9 = *((unsigned __int8 *)v6 + 39);
    }
    else {
      uint64_t v9 = v6[3];
    }
    while (1)
    {
      sub_10002986C(v17, v8, v9);
      unint64_t v6 = (uint64_t *)*v6;
      if (v6 == *a3) {
        break;
      }
      int v10 = *(char *)(a1 + 23);
      if (v10 >= 0) {
        uint64_t v11 = a1;
      }
      else {
        uint64_t v11 = *(void *)a1;
      }
      if (v10 >= 0) {
        uint64_t v12 = *(unsigned __int8 *)(a1 + 23);
      }
      else {
        uint64_t v12 = *(void *)(a1 + 8);
      }
      sub_10002986C(v17, v11, v12);
      int v13 = *((char *)v6 + 39);
      if (v13 >= 0) {
        uint64_t v8 = (uint64_t)(v6 + 2);
      }
      else {
        uint64_t v8 = v6[2];
      }
      if (v13 >= 0) {
        uint64_t v9 = *((unsigned __int8 *)v6 + 39);
      }
      else {
        uint64_t v9 = v6[3];
      }
    }
  }
  std::stringbuf::str();
  *(void *)((char *)v16
  v17[0] = v14;
  if (v18 < 0) {
    operator delete((void *)v17[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return std::ios::~ios();
}

void sub_10021DB60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DEA14((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10021DB74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DEA14((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10021DB88(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DEA14((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_10021DB9C(char **a1, uint64_t a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  unint64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3);
  unint64_t v6 = v5 + 1;
  if (v5 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_1000A9108();
  }
  if (0x5555555555555556 * ((a1[2] - v3) >> 3) > v6) {
    unint64_t v6 = 0x5555555555555556 * ((a1[2] - v3) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3) >= 0x555555555555555) {
    unint64_t v8 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v8)
  {
    if (v8 > 0xAAAAAAAAAAAAAAALL) {
      sub_1000A6A10();
    }
    uint64_t v9 = (char *)operator new(24 * v8);
  }
  else
  {
    uint64_t v9 = 0;
  }
  int v10 = &v9[24 * v5];
  uint64_t v16 = v10;
  unint64_t v17 = v10;
  char v18 = &v9[24 * v8];
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1000559FC(v10, *(void **)a2, *(void *)(a2 + 8));
    unint64_t v3 = *a1;
    unint64_t v4 = a1[1];
    int v10 = v16;
    uint64_t v11 = v17 + 24;
    if (v4 == *a1)
    {
LABEL_17:
      int v13 = v3;
      goto LABEL_18;
    }
  }
  else
  {
    *(_OWORD *)int v10 = *(_OWORD *)a2;
    *((void *)v10 + 2) = *(void *)(a2 + 16);
    uint64_t v11 = v10 + 24;
    if (v4 == v3) {
      goto LABEL_17;
    }
  }
  do
  {
    long long v12 = *(_OWORD *)(v4 - 24);
    *((void *)v10 - 1) = *((void *)v4 - 1);
    *(_OWORD *)(v10 - 24) = v12;
    v10 -= 24;
    *((void *)v4 - 2) = 0;
    *((void *)v4 - 1) = 0;
    *((void *)v4 - 3) = 0;
    v4 -= 24;
  }
  while (v4 != v3);
  int v13 = *a1;
  unint64_t v3 = a1[1];
LABEL_18:
  *a1 = v10;
  a1[1] = v11;
  a1[2] = v18;
  if (v3 != v13)
  {
    uint64_t v14 = (void **)(v3 - 24);
    do
    {
      if (*((char *)v14 + 23) < 0) {
        operator delete(*v14);
      }
      v14 -= 3;
    }
    while (v14 + 3 != (void **)v13);
    unint64_t v3 = v13;
  }
  if (v3) {
    operator delete(v3);
  }
  return v11;
}

void sub_10021DD60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000E2848((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10021DD74(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100461550;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10021DD94(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100461550;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_10021DDE8(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor::~CopyingInputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor *)(a1 + 72));
  wireless_diagnostics::google::protobuf::io::CopyingInputStream::~CopyingInputStream((wireless_diagnostics::google::protobuf::io::CopyingInputStream *)(a1 + 48));
  sub_100215964((sqlite3_blob **)(a1 + 40));
  uint64_t v2 = *(void **)(a1 + 32);
}

uint64_t sub_10021DE38(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  *(void *)a1 = off_1004615A0;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *a3;
  *a3 = 0;
  sub_10007E298(a1 + 24, *(sqlite3_blob **)(a1 + 16));
  wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor::CopyingInputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor *)(a1 + 48), (wireless_diagnostics::google::protobuf::io::CopyingInputStream *)(a1 + 24), -1);

  return a1;
}

void sub_10021DECC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::io::CopyingInputStream::~CopyingInputStream(v4);
  sub_100215964(v3);

  _Unwind_Resume(a1);
}

uint64_t sub_10021DEFC(uint64_t a1)
{
  return a1;
}

void sub_10021DF40(uint64_t a1)
{
  wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor::~CopyingInputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor *)(a1 + 48));
  wireless_diagnostics::google::protobuf::io::CopyingInputStream::~CopyingInputStream((wireless_diagnostics::google::protobuf::io::CopyingInputStream *)(a1 + 24));
  sub_100215964((sqlite3_blob **)(a1 + 16));

  operator delete();
}

uint64_t sub_10021DFA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

BOOL sub_10021DFAC(uint64_t a1)
{
  return wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor::ByteCount((wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor *)(a1 + 48)) != *(int *)(a1 + 40);
}

void sub_10021DFE0(uint64_t a1)
{
}

void sub_10021E010(void *a1)
{
  id v1 = a1;
  operator new();
}

void sub_10021E1A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  if (!atomic_fetch_add(v10, 0xFFFFFFFFFFFFFFFFLL)) {
    (*(void (**)(uint64_t))(*(void *)v9 + 16))(v9);
  }
  sub_10021E684((uint64_t *)va);

  _Unwind_Resume(a1);
}

void sub_10021E20C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10021E21C(uint64_t a1)
{
  id v1 = *(uint64_t **)(a1 + 32);
  sub_100063F14(**(void **)(a1 + 40) + 48, &v5);
  uint64_t v2 = *v1;
  if (!*v1) {
    sub_1000AD034(3u);
  }
  std::mutex::lock((std::mutex *)(v2 + 24));
  if ((*(unsigned char *)(v2 + 136) & 1) != 0
    || (v6.__ptr_ = 0, uint64_t v3 = *(void *)(v2 + 16), std::exception_ptr::~exception_ptr(&v6), v3))
  {
    sub_1000AD034(2u);
  }
  *(_OWORD *)(v2 + 144) = v5;
  long long v5 = 0uLL;
  *(_DWORD *)(v2 + 136) |= 5u;
  std::condition_variable::notify_all((std::condition_variable *)(v2 + 88));
  std::mutex::unlock((std::mutex *)(v2 + 24));
  unint64_t v4 = (std::__shared_weak_count *)*((void *)&v5 + 1);
  if (*((void *)&v5 + 1))
  {
    if (!atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_10021E330(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, std::exception_ptr a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  __cxa_begin_catch(a1);
  uint64_t v21 = *(std::__assoc_sub_state ***)(v20 + 32);
  std::current_exception();
  uint64_t v22 = *v21;
  if (!v22) {
    sub_1000AD034(3u);
  }
  std::exception_ptr::exception_ptr(v25, &v24);
  v23.__ptr_ = v25;
  std::__assoc_sub_state::set_exception(v22, v23);
  std::exception_ptr::~exception_ptr(v25);
  std::exception_ptr::~exception_ptr(&v24);
  __cxa_end_catch();
}

void sub_10021E3FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, std::exception_ptr a11)
{
}

void sub_10021E428(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);

  std::__shared_count::~__shared_count((std::__shared_count *)a1);
}

void sub_10021E494(uint64_t a1)
{
  uint64_t v2 = (std::exception_ptr *)(a1 + 16);
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 88));
  std::mutex::~mutex((std::mutex *)(a1 + 24));
  std::exception_ptr::~exception_ptr(v2);
  std::__shared_count::~__shared_count((std::__shared_count *)a1);

  operator delete();
}

uint64_t sub_10021E514(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 136))
  {
    uint64_t v2 = *(std::__shared_weak_count **)(a1 + 152);
    if (v2)
    {
      if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
        std::__shared_weak_count::__release_weak(v2);
      }
    }
  }
  uint64_t v3 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 8);

  return v3(a1);
}

void sub_10021E5B8(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __lk.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 24);
  __lk.__owns_ = 1;
  std::mutex::lock((std::mutex *)(a1 + 24));
  std::__assoc_sub_state::__sub_wait((std::__assoc_sub_state *)a1, &__lk);
  uint64_t v4 = *(void *)(a1 + 16);
  v7.__ptr_ = 0;
  std::exception_ptr::~exception_ptr(&v7);
  if (v4)
  {
    std::exception_ptr::exception_ptr(&v6, (const std::exception_ptr *)(a1 + 16));
    v5.__ptr_ = &v6;
    std::rethrow_exception(v5);
    __break(1u);
  }
  else
  {
    *a2 = *(_OWORD *)(a1 + 144);
    *(void *)(a1 + 144) = 0;
    *(void *)(a1 + 152) = 0;
    if (__lk.__owns_) {
      std::mutex::unlock(__lk.__m_);
    }
  }
}

void sub_10021E658(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::mutex *a11, char a12)
{
  if (a12) {
    std::mutex::unlock(a11);
  }
  _Unwind_Resume(a1);
}

uint64_t *sub_10021E684(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (!v2) {
    return a1;
  }
  if ((*(unsigned char *)(v2 + 136) & 1) == 0)
  {
    v8.__ptr_ = 0;
    uint64_t v3 = *(void *)(v2 + 16);
    std::exception_ptr::~exception_ptr(&v8);
    uint64_t v2 = *a1;
    if (!v3 && *(uint64_t *)(v2 + 8) >= 1)
    {
      v9.__cat_ = std::future_category();
      *(void *)&v9.__val_ = 4;
      std::future_error::future_error(&v7, v9);
      exception = (std::logic_error *)__cxa_allocate_exception(0x20uLL);
      std::exception_ptr v6 = std::logic_error::logic_error(exception, &v7);
      v6[1] = (std::logic_error)v7.__ec_;
    }
  }
  if (atomic_fetch_add((atomic_ullong *volatile)(v2 + 8), 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  return a1;
}

void sub_10021E80C(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_impl(a1, v9, OS_LOG_TYPE_INFO, a4, &a9, 0x26u);
}

void sub_10021E838(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0x26u);
}

BOOL sub_10021E858()
{
  id v1 = qword_10047BF10;
  return os_log_type_enabled(v1, OS_LOG_TYPE_FAULT);
}

void sub_10021E890(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, log, OS_LOG_TYPE_INFO, a4, a5, 0x30u);
}

BOOL sub_10021E8AC()
{
  uint64_t v2 = *(NSObject **)(v0 + 3856);
  return os_log_type_enabled(v2, OS_LOG_TYPE_INFO);
}

void sub_10021E8E0(float a1, uint64_t a2, uint64_t a3)
{
  *(float *)a3 = a1;
  *(_DWORD *)(a3 + 4) = 0;
  *(_WORD *)(a3 + 8) = 2082;
}

void sub_10021E8F4(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

uint64_t sub_10021E914(uint64_t result, uint64_t a2)
{
  *(void *)(a2 + 10) = v2;
  *(_WORD *)(a2 + 18) = 2081;
  *(void *)(a2 + 20) = result;
  return result;
}

void sub_10021E928()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10021E9A0()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10021EA18()
{
  byte_10047DF67 = 8;
  strcpy((char *)&qword_10047DF50, "resource");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10047DF50, (void *)&_mh_execute_header);
  byte_10047DF7F = 8;
  strcpy((char *)&qword_10047DF68, "grouping");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10047DF68, (void *)&_mh_execute_header);
  byte_10047DF97 = 8;
  strcpy((char *)&qword_10047DF80, "local_id");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10047DF80, (void *)&_mh_execute_header);
  byte_10047DFAF = 16;
  strcpy((char *)&qword_10047DF98, "location_context");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10047DF98, (void *)&_mh_execute_header);
  byte_10047DFC7 = 16;
  strcpy((char *)&xmmword_10047DFB0, "metadata_version");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10047DFB0, (void *)&_mh_execute_header);
  byte_10047DFDF = 12;
  strcpy((char *)&qword_10047DFC8, "tile_version");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10047DFC8, (void *)&_mh_execute_header);
  byte_10047DFF7 = 13;
  strcpy((char *)&qword_10047DFE0, "last_relevant");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10047DFE0, (void *)&_mh_execute_header);
  byte_10047E00F = 21;
  strcpy((char *)&qword_10047DFF8, "last_refresh_metadata");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10047DFF8, (void *)&_mh_execute_header);
  byte_10047E027 = 17;
  strcpy((char *)&xmmword_10047E010, "last_refresh_tile");
  __cxa_atexit((void (*)(void *))&std::string::~string, &xmmword_10047E010, (void *)&_mh_execute_header);
  byte_10047E03F = 12;
  strcpy((char *)&qword_10047E028, "last_visited");
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10047E028, (void *)&_mh_execute_header);
  strcpy((char *)&qword_10047E040, "metadata");
  byte_10047E057 = 8;
  __cxa_atexit((void (*)(void *))&std::string::~string, &qword_10047E040, (void *)&_mh_execute_header);
}

void sub_10021EC8C(std::locale *this)
{
  uint64_t v1 = this;
  locale = (std::__shared_weak_count *)this[6].__locale_;
  if (locale && !atomic_fetch_add(&locale->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))locale->__on_zero_shared)(locale);
    std::__shared_weak_count::__release_weak(locale);
    this = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  std::locale::~locale(this);
}

void sub_10021ED28(double *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a3 + 32;
  double v8 = sub_1002C1F38(a4, a3 + 32);
  if (v8 > 50.0) {
    return;
  }
  sub_1000776C4(v28, a2);
  sub_100148A04((uint64_t)v28, v29);
  sub_100074A24(v28);
  sub_1001AA12C((uint64_t)v24, v7);
  sub_1001486EC((uint64_t)v29, (uint64_t)v24, (uint64_t)v22);
  sub_100148878((uint64_t)v22, (uint64_t)v25);
  nullsub_15(v24);
  if (v8 > 0.0)
  {
    v22[0] = off_10045DA98;
    double v9 = 1.0 - v8 / 50.0;
    char v23 = 0;
    double v10 = a1[2];
    double v11 = a1[3];
    double v12 = v10 - v26;
    double v13 = v11 - v27;
    *(double *)&v22[1] = v10 - v26;
    *(double *)&__n128 v22[2] = v11 - v27;
    double v14 = v9 * v27 + v8 / 50.0 * v11;
    a1[2] = v9 * v26 + v8 / 50.0 * v10;
    a1[3] = v14;
    double v15 = sqrt(v9 * (*(double *)(a3 + 96) * *(double *)(a3 + 96))+ v8 / 50.0 * (a1[19] * a1[19])+ v8 / 50.0 * v9 * (v12 * v12 + v13 * v13));
    a1[19] = v15;
    a1[35] = v15 * 0.9443;
    sub_1001A9C7C((uint64_t)v19, (uint64_t)(a1 + 1));
    sub_100148758((uint64_t)v29, (uint64_t)v19, (uint64_t)v20);
    sub_10021F070((uint64_t)v20, (uint64_t)v21);
    sub_10007B704((uint64_t)(a1 + 5), (uint64_t)v21);
    nullsub_15(v21);
    nullsub_17(v19);
    nullsub_17(v22);
    nullsub_17(v25);
    uint64_t v16 = v31;
    if (!v31) {
      goto LABEL_8;
    }
LABEL_6:
    if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
    goto LABEL_8;
  }
  sub_1001AA12C((uint64_t)v22, v7);
  sub_10007B704((uint64_t)(a1 + 5), (uint64_t)v22);
  nullsub_15(v22);
  sub_10007B704((uint64_t)(a1 + 1), (uint64_t)v25);
  uint64_t v17 = *(void *)(a3 + 96);
  *((void *)a1 + 35) = v17;
  *((void *)a1 + 19) = v17;
  nullsub_17(v25);
  uint64_t v16 = v31;
  if (v31) {
    goto LABEL_6;
  }
LABEL_8:
  char v18 = v30;
  if (v30)
  {
    if (!atomic_fetch_add(&v30->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  nullsub_15(v29);
}

void sub_10021EFC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  nullsub_17(&a29);
  sub_100148DD8(v29 - 128);
  _Unwind_Resume(a1);
}

void sub_10021F02C(_Unwind_Exception *a1)
{
  sub_100148DD8(v1 - 128);
  _Unwind_Resume(a1);
}

void sub_10021F040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

void sub_10021F054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  nullsub_15(va);
  sub_100148DD8(v17 - 128);
  _Unwind_Resume(a1);
}

uint64_t sub_10021F070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1001AA12C((uint64_t)v15, *(void *)(a1 + 16));
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(v4 + 32);
  uint64_t v5 = *(std::__shared_weak_count **)(v4 + 40);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v11 = v6;
  double v12 = v5;
  sub_10007314C((uint64_t)v13, (uint64_t)&v11, *(double *)a1, *(double *)(a1 + 8));
  v7.n128_f64[0] = sub_10014B044((uint64_t)v15, (uint64_t)v13, a2);
  double v8 = v14;
  if (v14 && !atomic_fetch_add(&v14->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *, double))v8->__on_zero_shared)(v8, v7.n128_f64[0]);
    std::__shared_weak_count::__release_weak(v8);
  }
  double v9 = v12;
  if (v12 && !atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *, __n128))v9->__on_zero_shared)(v9, v7);
    std::__shared_weak_count::__release_weak(v9);
  }
  return nullsub_15(v15);
}

void sub_10021F1E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13)
{
  sub_1000BA884((uint64_t)&a13);
  sub_1000BA884((uint64_t)&a11);
  sub_1000BA884((uint64_t)&a9);
  nullsub_15(v13 - 48);
  _Unwind_Resume(a1);
}

void sub_10021F214(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_DWORD *)(a3 + 32) = 1065353216;
  (*(void (**)(void **__return_ptr))(**(void **)a1 + 48))(&__p);
  uint64_t v5 = (uint64_t ***)__p;
  uint64_t v6 = v23;
  if (__p == v23)
  {
    if (!__p) {
      return;
    }
    goto LABEL_29;
  }
  do
  {
    uint64_t v7 = sub_100085D38((uint64_t)v5);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    if ((v8 & 0x80u) == 0) {
      double v9 = (char *)v7;
    }
    else {
      double v9 = *(char **)v7;
    }
    int v10 = a2[23];
    if (v10 >= 0) {
      uint64_t v11 = a2;
    }
    else {
      uint64_t v11 = *(char **)a2;
    }
    if (v10 >= 0) {
      int64_t v12 = a2[23];
    }
    else {
      int64_t v12 = *((void *)a2 + 1);
    }
    if (v12)
    {
      if ((v8 & 0x80u) != 0) {
        uint64_t v8 = *(void *)(v7 + 8);
      }
      if (v8 >= v12)
      {
        uint64_t v13 = &v9[v8];
        int v14 = *v11;
        double v15 = v9;
        do
        {
          uint64_t v16 = v8 - v12;
          if (v16 == -1) {
            break;
          }
          uint64_t v17 = (char *)memchr(v15, v14, v16 + 1);
          if (!v17) {
            break;
          }
          char v18 = v17;
          if (!memcmp(v17, v11, v12))
          {
            if (v18 != v13 && v18 == v9) {
              goto LABEL_4;
            }
            break;
          }
          double v15 = v18 + 1;
          uint64_t v8 = v13 - (v18 + 1);
        }
        while (v8 >= v12);
      }
    }
    else
    {
LABEL_4:
      sub_10022ACB4(a3, v5, v5);
    }
    v5 += 2;
  }
  while (v5 != v6);
  uint64_t v5 = (uint64_t ***)__p;
  if (__p)
  {
LABEL_29:
    uint64_t v19 = v23;
    uint64_t v20 = v5;
    if (v23 != v5)
    {
      do
      {
        uint64_t v21 = (std::__shared_weak_count *)*(v19 - 1);
        if (v21)
        {
          if (!atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
            std::__shared_weak_count::__release_weak(v21);
          }
        }
        v19 -= 2;
      }
      while (v19 != v5);
      uint64_t v20 = __p;
    }
    char v23 = v5;
    operator delete(v20);
  }
}

void sub_10021F3FC(_Unwind_Exception *a1)
{
  sub_1000D8B48(v1);
  _Unwind_Resume(a1);
}

void sub_10021F410(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000D8DD8((void **)va);
  sub_1000D8B48(v2);
  _Unwind_Resume(a1);
}

void sub_10021F42C(uint64_t a1, double *a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  if ((double)*a5 / 1000000000.0 - (double)*(uint64_t *)(a4 + 8) / 1000000000.0 <= 2.0)
  {
    uint64_t v64 = 0;
    uint64_t v65 = 0;
    char v66 = 0;
    uint64_t v67 = 0;
    uint64_t v68 = 0;
    char v69 = 0;
    char v70 = 0;
    uint64_t v71 = 0;
    memset(v63, 0, 41);
    int v9 = *(char *)(a3 + 31);
    if (v9 >= 0) {
      uint64_t v10 = a3 + 8;
    }
    else {
      uint64_t v10 = *(void *)(a3 + 8);
    }
    if (v9 >= 0) {
      uint64_t v11 = *(unsigned __int8 *)(a3 + 31);
    }
    else {
      uint64_t v11 = *(void *)(a3 + 16);
    }
    int64_t v12 = (char *)(v10 + v11);
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    char v48 = 0;
    uint64_t v49 = 0;
    uint64_t v50 = 0;
    char v51 = 0;
    char v52 = 0;
    uint64_t v53 = 0;
    *(_OWORD *)long long __p = 0uLL;
    memset(v45, 0, sizeof(v45));
    int v13 = sub_10022B094((uint64_t)&unk_10047F0E8, v10, v10 + v11, (uint64_t)__p, 4160);
    sub_10022B3A4((void **)v63, v10, v12, (uint64_t *)__p, 0);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    if (!v13)
    {
LABEL_13:
      if (qword_10047BED8 == -1)
      {
        int v14 = qword_10047BEE0;
        if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_FAULT)) {
          goto LABEL_67;
        }
      }
      else
      {
        dispatch_once(&qword_10047BED8, &stru_100461670);
        int v14 = qword_10047BEE0;
        if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_FAULT))
        {
LABEL_67:
          if (*(void *)&v63[0])
          {
            *((void *)&v63[0] + 1) = *(void *)&v63[0];
            operator delete(*(void **)&v63[0]);
          }
          return;
        }
      }
      LOWORD(__p[0]) = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_FAULT, "This location configuration's id doesn't satisfy regional naming convention. This should not happen.", (uint8_t *)__p, 2u);
      goto LABEL_67;
    }
    if (v69)
    {
      *((void *)&v63[0] + 1) = *(void *)&v63[0];
      goto LABEL_13;
    }
    double v15 = *(_OWORD **)&v63[0];
    unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)&v63[0] + 1) - *(void *)&v63[0]) >> 3);
    if (v16 <= 1) {
      uint64_t v17 = v63;
    }
    else {
      uint64_t v17 = *(_OWORD **)&v63[0];
    }
    if (!*((unsigned char *)v17 + 40))
    {
      std::string::size_type v60 = 0;
      std::string v61 = 0;
      unint64_t v62 = 0;
      goto LABEL_39;
    }
    if (v16 <= 1) {
      double v15 = v63;
    }
    uint64_t v19 = *((void *)v15 + 3);
    char v18 = (char *)*((void *)v15 + 4);
    unint64_t v20 = (unint64_t)&v18[-v19];
    if ((unint64_t)&v18[-v19] >= 0x7FFFFFFFFFFFFFF8) {
      sub_1000A6968();
    }
    if (v20 > 0x16)
    {
      uint64_t v28 = (v20 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v20 | 7) != 0x17) {
        uint64_t v28 = v20 | 7;
      }
      uint64_t v29 = v28 + 1;
      uint64_t v21 = (void **)operator new(v28 + 1);
      std::string v61 = &v18[-v19];
      unint64_t v62 = v29 | 0x8000000000000000;
      std::string::size_type v60 = v21;
      if ((char *)v19 != v18)
      {
LABEL_25:
        if (v20 < 0x20 || (unint64_t)v21 - v19 < 0x20)
        {
          uint64_t v22 = v21;
          char v23 = (char *)v19;
        }
        else
        {
          uint64_t v22 = (char *)v21 + (v20 & 0xFFFFFFFFFFFFFFE0);
          char v23 = (char *)(v19 + (v20 & 0xFFFFFFFFFFFFFFE0));
          std::exception_ptr v24 = (long long *)(v19 + 16);
          char v25 = v21 + 2;
          unint64_t v26 = v20 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v27 = *v24;
            *(v25 - 1) = *(v24 - 1);
            _OWORD *v25 = v27;
            v24 += 2;
            v25 += 2;
            v26 -= 32;
          }
          while (v26);
          if (v20 == (v20 & 0xFFFFFFFFFFFFFFE0)) {
            goto LABEL_38;
          }
        }
        do
        {
          char v30 = *v23++;
          *v22++ = v30;
        }
        while (v23 != v18);
LABEL_38:
        *uint64_t v22 = 0;
LABEL_39:
        sub_10021F214(a1, (char *)&v60, (uint64_t)v57);
        if (v59)
        {
          __p[0] = &v60;
          int64x2_t v31 = sub_10022D72C(a1 + 8, (uint64_t)&v60, (uint64_t)&unk_1003FAE80, (long long **)__p) + 5;
          if (sub_1002C25AC((uint64_t)v31, v57))
          {
            long long v55 = 0;
            long long v54 = 0;
            unint64_t v56 = 0;
            for (uint64_t i = v58; i; uint64_t i = (void *)*i)
            {
              while (1)
              {
                (*(void (**)(void **__return_ptr))(**(void **)a1 + 24))(__p);
                std::string v33 = v55;
                if ((unint64_t)v55 < v56) {
                  break;
                }
                long long v55 = sub_10022DE1C(&v54, (uint64_t)__p);
                sub_100074A24(__p);
                uint64_t i = (void *)*i;
                if (!i) {
                  goto LABEL_46;
                }
              }
              sub_1000776C4(v55, __p);
              long long v55 = v33 + 1920;
              sub_100074A24(__p);
            }
LABEL_46:
            sub_1002C2620((uint64_t)v31, &v54);
            std::string v34 = (char *)v54;
            if (v54)
            {
              int64x2_t v35 = v54;
              if (v55 != v54)
              {
                std::string v36 = v55 - 1920;
                uint64_t v37 = v55 - 1920;
                do
                {
                  (**(void (***)(char *))v37)(v37);
                  v36 -= 1920;
                  BOOL v38 = v37 == v34;
                  v37 -= 1920;
                }
                while (!v38);
                int64x2_t v35 = v54;
              }
              long long v55 = v34;
              operator delete(v35);
            }
          }
          sub_10021ED28(a2, a3, a4, (uint64_t)v31);
          goto LABEL_57;
        }
        if (qword_10047BED8 == -1)
        {
          int v39 = qword_10047BEE0;
          if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
          {
LABEL_57:
            long long v40 = v58;
            while (v40)
            {
              uint64_t v41 = v40;
              long long v40 = (void *)*v40;
              long long v42 = (std::__shared_weak_count *)v41[3];
              if (v42 && !atomic_fetch_add(&v42->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
              {
                ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
                std::__shared_weak_count::__release_weak(v42);
              }
              operator delete(v41);
            }
            long long v43 = (void *)v57[0];
            v57[0] = 0;
            if (v43) {
              operator delete(v43);
            }
            if (SHIBYTE(v62) < 0) {
              operator delete(v60);
            }
            goto LABEL_67;
          }
        }
        else
        {
          dispatch_once(&qword_10047BED8, &stru_100461670);
          int v39 = qword_10047BEE0;
          if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
            goto LABEL_57;
          }
        }
        LOWORD(__p[0]) = 0;
        _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_ERROR, "Warning: we have a regional LocationConfiguration, but no regional tiles in that region on disk. Something could be wrong.", (uint8_t *)__p, 2u);
        goto LABEL_57;
      }
    }
    else
    {
      HIBYTE(v62) = (_BYTE)v18 - v19;
      uint64_t v21 = (void **)&v60;
      if ((char *)v19 != v18) {
        goto LABEL_25;
      }
    }
    *(unsigned char *)uint64_t v21 = 0;
    goto LABEL_39;
  }
}

void sub_10021F9B4(_Unwind_Exception *a1)
{
  sub_10019BA18(&STACK[0x788]);
  sub_1000D8B48(v1 - 256);
  if (*(char *)(v1 - 193) < 0) {
    operator delete(*(void **)(v1 - 216));
  }
  uint64_t v3 = *(void **)(v1 - 192);
  if (v3)
  {
    *(void *)(v1 - 184) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(a1);
}

void sub_10021FA3C(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

void sub_10021FA6C(uint64_t a1, const char *a2, int a3)
{
  uint64_t v6 = std::locale::locale((std::locale *)a1);
  *(void *)(a1 + 8) = std::locale::use_facet(v6, &std::ctype<char>::id);
  *(void *)(a1 + 16) = std::locale::use_facet((const std::locale *)a1, &std::collate<char>::id);
  *(_DWORD *)(a1 + 24) = a3;
  *(_OWORD *)(a1 + 28) = 0u;
  *(_OWORD *)(a1 + 44) = 0u;
  *(_DWORD *)(a1 + 60) = 0;
  strlen(a2);
  sub_10021FB3C();
}

void sub_10021FB0C(_Unwind_Exception *a1)
{
  sub_1000BA884(v2);
  std::locale::~locale(v1);
  _Unwind_Resume(a1);
}

void sub_10021FB28(_Unwind_Exception *a1)
{
  std::locale::~locale(v1);
  _Unwind_Resume(a1);
}

void sub_10021FB3C()
{
}

void sub_10021FFC0()
{
  exception = (std::regex_error *)__cxa_allocate_exception(0x18uLL);
  std::regex_error::regex_error(exception, __re_err_parse);
}

void sub_100220004(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

char *sub_100220018(uint64_t a1, char *a2, char *a3)
{
  uint64_t v6 = a2;
  do
  {
    uint64_t v7 = v6;
    uint64_t v6 = sub_100220E70(a1, v6, a3);
  }
  while (v6 != v7);
  if (v7 == a2) {
    operator new();
  }
  if (v7 != a3)
  {
    if (*v7 == 124)
    {
      uint64_t v8 = v7 + 1;
      int v9 = v7 + 1;
      do
      {
        uint64_t v10 = v9;
        int v9 = sub_100220E70(a1, v9, a3);
      }
      while (v9 != v10);
      if (v10 == v8) {
        operator new();
      }
      operator new();
    }
    return v7;
  }
  return a3;
}

unsigned __int8 *sub_100220238(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if (a2 == a3) {
    return a2;
  }
  if (*a2 == 94) {
    operator new();
  }
  if (a2 != a3)
  {
    while (v3 != a3)
    {
      uint64_t v6 = v3;
      uint64_t v7 = sub_100229D70(a1, v3, a3);
      if (v7 != v3)
      {
        uint64_t v3 = sub_100229FD0(a1, v7, a3);
        if (v3 != v6) {
          continue;
        }
      }
      if (v6 + 1 == a3 && *v6 == 36) {
        operator new();
      }
      sub_100229D18();
    }
  }
  return a3;
}

char *sub_1002203EC(uint64_t a1, char *a2, char *a3)
{
  uint64_t v6 = sub_10022A554(a1, a2, a3);
  if (v6 == a2) {
    goto LABEL_12;
  }
  do
  {
    uint64_t v7 = v6;
    uint64_t v6 = sub_10022A554(a1, v6, a3);
  }
  while (v6 != v7);
  if (v7 == a2) {
    goto LABEL_12;
  }
  if (v7 == a3) {
    return a3;
  }
  if (*v7 == 124)
  {
    uint64_t v8 = v7 + 1;
    int v9 = sub_10022A554(a1, v7 + 1, a3);
    if (v9 != v7 + 1)
    {
      do
      {
        uint64_t v10 = v9;
        int v9 = sub_10022A554(a1, v9, a3);
      }
      while (v9 != v10);
      if (v10 != v8) {
        operator new();
      }
    }
LABEL_12:
    sub_100229D18();
  }
  return v7;
}

unsigned __int8 *sub_1002205B4(uint64_t a1, unsigned __int8 *__s, unsigned __int8 *a3)
{
  uint64_t v6 = (unsigned __int8 *)memchr(__s, 10, a3 - __s);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = a3;
  }
  if (v7 == __s) {
    operator new();
  }
  sub_100220238(a1, __s, v7);
  if (v7 == a3) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = v7 + 1;
  }
  if (v8 != a3)
  {
    int v9 = (unsigned __int8 *)memchr(v8, 10, a3 - v8);
    if (v9) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = a3;
    }
    if (v10 != v8)
    {
      sub_100220238(a1, v8, v10);
      operator new();
    }
    operator new();
  }
  return a3;
}

char *sub_100220804(uint64_t a1, char *__s, char *a3)
{
  uint64_t v6 = (char *)memchr(__s, 10, a3 - __s);
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = a3;
  }
  if (v7 == __s) {
    operator new();
  }
  sub_1002203EC(a1, __s, v7);
  if (v7 == a3) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = v7 + 1;
  }
  if (v8 != a3)
  {
    int v9 = (char *)memchr(v8, 10, a3 - v8);
    if (v9) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = a3;
    }
    if (v10 != v8)
    {
      sub_1002203EC(a1, v8, v10);
      operator new();
    }
    operator new();
  }
  return a3;
}

void sub_100220A54()
{
  exception = (std::regex_error *)__cxa_allocate_exception(0x18uLL);
  std::regex_error::regex_error(exception, __re_err_grammar);
}

void sub_100220A98(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100220AB0()
{
}

void sub_100220AC4(uint64_t a1, _DWORD *a2)
{
  *a2 = -1000;
}

void sub_100220ADC(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_100220B14(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t sub_100220B44(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3 == 0x80000001003F749ELL) {
    return a1 + 24;
  }
  if (((v3 & 0x80000001003F749ELL & 0x8000000000000000) != 0) == __OFSUB__(v3, 0x80000001003F749ELL)) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(0x80000001003F749ELL & 0x7FFFFFFFFFFFFFFFLL))) {
    return a1 + 24;
  }
  return 0;
}

void *sub_100220BC8(void *a1)
{
  *a1 = off_1004617C0;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_100220C34(void *a1)
{
  *a1 = off_1004617C0;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  operator delete();
}

uint64_t sub_100220CC0(uint64_t result, uint64_t a2)
{
  *(_DWORD *)a2 = -994;
  *(void *)(a2 + 80) = *(void *)(result + 8);
  return result;
}

void *sub_100220CD4(void *a1)
{
  *a1 = off_1004617C0;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_100220D40(void *a1)
{
  *a1 = off_1004617C0;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  operator delete();
}

char *sub_100220DCC(uint64_t a1, char *a2, char *a3)
{
  do
  {
    uint64_t v5 = a2;
    a2 = sub_100220F18(a1, a2, a3);
    if (a2 != v5) {
      continue;
    }
    uint64_t v6 = sub_1002212CC(a1, v5, a3);
    if (v6 == (unsigned __int8 *)v5) {
      break;
    }
    a2 = sub_10022167C(a1, (char *)v6, a3);
  }
  while (a2 != v5);
  return v5;
}

char *sub_100220E70(uint64_t a1, char *a2, char *a3)
{
  uint64_t result = sub_100220F18(a1, a2, a3);
  if (result == a2)
  {
    uint64_t v7 = (char *)sub_1002212CC(a1, a2, a3);
    uint64_t result = a2;
    if (v7 != a2)
    {
      return sub_10022167C(a1, v7, a3);
    }
  }
  return result;
}

char *sub_100220F18(uint64_t a1, char *a2, char *a3)
{
  if (a2 != a3)
  {
    int v6 = *a2;
    if (v6 > 91)
    {
      if (v6 == 92)
      {
        if (a2 + 1 != a3)
        {
          int v10 = a2[1];
          if (v10 == 66) {
            operator new();
          }
          if (v10 == 98) {
            operator new();
          }
        }
      }
      else if (v6 == 94)
      {
        operator new();
      }
    }
    else
    {
      if (v6 == 36) {
        operator new();
      }
      BOOL v8 = v6 == 40;
      uint64_t v7 = a2 + 1;
      BOOL v8 = !v8 || v7 == a3;
      if (!v8)
      {
        BOOL v8 = *v7 == 63;
        uint64_t v11 = a2 + 2;
        if (v8 && v11 != a3)
        {
          int v13 = *v11;
          if (v13 == 33)
          {
            sub_100221A74((uint64_t)v14);
            int v15 = *(_DWORD *)(a1 + 24);
            sub_10021FB3C(v14, a2 + 3, a3);
            sub_100221AE4();
          }
          if (v13 == 61)
          {
            sub_100221A74((uint64_t)v14);
            int v15 = *(_DWORD *)(a1 + 24);
            sub_10021FB3C(v14, a2 + 3, a3);
            sub_100221AE4();
          }
        }
      }
    }
  }
  return a2;
}

void sub_10022127C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::locale a9)
{
}

void sub_100221290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::locale a9)
{
}

void sub_1002212A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::locale a9)
{
}

void sub_1002212B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::locale a9)
{
}

unsigned __int8 *sub_1002212CC(uint64_t a1, char *a2, char *a3)
{
  uint64_t v3 = a2;
  if (a2 != a3)
  {
    switch(*a2)
    {
      case '(':
        if (a2 + 1 == a3) {
          goto LABEL_30;
        }
        if (a2 + 2 != a3 && a2[1] == 63 && a2[2] == 58)
        {
          int v6 = (_DWORD *)(a1 + 36);
          ++*(_DWORD *)(a1 + 36);
          uint64_t v7 = sub_100220018(a1, a2 + 3, a3);
          if (v7 == a3) {
            goto LABEL_30;
          }
          BOOL v8 = v7;
          if (*v7 != 41) {
            goto LABEL_30;
          }
        }
        else
        {
          if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
            operator new();
          }
          int v6 = (_DWORD *)(a1 + 36);
          ++*(_DWORD *)(a1 + 36);
          int v10 = sub_100220018(a1, a2 + 1, a3);
          if (v10 == a3 || (BOOL v8 = v10, *v10 != 41)) {
LABEL_30:
          }
            sub_100221BB4();
          if ((*(unsigned char *)(a1 + 24) & 2) == 0) {
            operator new();
          }
        }
        --*v6;
        uint64_t v3 = v8 + 1;
        break;
      case ')':
      case ',':
      case '-':
      case '/':
      case '0':
      case '1':
      case '2':
      case '3':
      case '4':
      case '5':
      case '6':
      case '7':
      case '8':
      case '9':
      case ':':
      case ';':
      case '<':
      case '=':
      case '>':
      case '@':
      case 'A':
      case 'B':
      case 'C':
      case 'D':
      case 'E':
      case 'F':
      case 'G':
      case 'H':
      case 'I':
      case 'J':
      case 'K':
      case 'L':
      case 'M':
      case 'N':
      case 'O':
      case 'P':
      case 'Q':
      case 'R':
      case 'S':
      case 'T':
      case 'U':
      case 'V':
      case 'W':
      case 'X':
      case 'Y':
      case 'Z':
        goto LABEL_20;
      case '*':
      case '+':
      case '?':
        goto LABEL_29;
      case '.':
        operator new();
      case '[':
        return sub_1002234E0(a1, a2, a3);
      case '\\':
        return sub_100223364(a1, (unsigned __int8 *)a2, (unsigned __int8 *)a3);
      default:
        if (*a2 == 123) {
LABEL_29:
        }
          sub_100223654();
LABEL_20:
        return sub_1002236AC(a1, a2, a3);
    }
  }
  return (unsigned __int8 *)v3;
}

char *sub_10022167C(uint64_t a1, char *a2, char *a3)
{
  if (a2 == a3) {
    return a2;
  }
  int v3 = *(_DWORD *)(a1 + 24) & 0x1F0;
  int v4 = *a2;
  if (v4 > 62)
  {
    if (v4 == 63)
    {
      unint64_t v16 = a2 + 1;
      if (v3) {
        BOOL v17 = 1;
      }
      else {
        BOOL v17 = v16 == a3;
      }
      if (!v17 && *v16 == 63) {
        sub_10022930C();
      }
      sub_10022930C();
    }
    if (v4 != 123) {
      return a2;
    }
    int v6 = a2 + 1;
    if (a2 + 1 != a3)
    {
      int v7 = *v6;
      if ((v7 & 0xF8) == 0x30 || (v7 & 0xFE) == 0x38)
      {
        int v8 = v7 - 48;
        int v9 = a2 + 2;
        if (a2 + 2 == a3)
        {
LABEL_19:
          int v9 = a3;
        }
        else
        {
          while (1)
          {
            int v10 = *v9;
            if ((v10 & 0xF8) != 0x30 && (v10 & 0xFE) != 0x38) {
              break;
            }
            if (v8 >= 214748364) {
              goto LABEL_68;
            }
            int v8 = v10 + 10 * v8 - 48;
            if (++v9 == a3) {
              goto LABEL_19;
            }
          }
        }
        if (v9 != v6)
        {
          if (v9 == a3) {
            goto LABEL_69;
          }
          int v11 = *v9;
          if (v11 != 44)
          {
            if (v11 == 125)
            {
              int64_t v12 = v9 + 1;
              if (!v3 && v12 != a3 && *v12 == 63) {
                sub_10022930C();
              }
              sub_10022930C();
            }
            goto LABEL_68;
          }
          char v18 = v9 + 1;
          if (v9 + 1 == a3) {
            goto LABEL_68;
          }
          int v19 = *v18;
          if (v19 == 125)
          {
            unint64_t v20 = v9 + 2;
            if (v3 || v20 == a3 || *v20 != 63) {
              goto LABEL_41;
            }
            goto LABEL_34;
          }
          if ((v19 & 0xF8) != 0x30 && (v19 & 0xFE) != 0x38) {
            goto LABEL_69;
          }
          int v21 = v19 - 48;
          uint64_t v22 = v9 + 2;
          if (v22 == a3)
          {
LABEL_57:
            uint64_t v22 = a3;
          }
          else
          {
            while (1)
            {
              int v23 = *v22;
              if ((v23 & 0xF8) != 0x30 && (v23 & 0xFE) != 0x38) {
                break;
              }
              if (v21 >= 214748364) {
                goto LABEL_68;
              }
              int v21 = v23 + 10 * v21 - 48;
              if (++v22 == a3) {
                goto LABEL_57;
              }
            }
          }
          if (v22 == v18 || v22 == a3 || *v22 != 125) {
LABEL_69:
          }
            sub_1002294F4();
          if (v21 >= v8)
          {
            std::exception_ptr v24 = v22 + 1;
            if (!v3 && v24 != a3 && *v24 == 63) {
              sub_10022930C();
            }
            sub_10022930C();
          }
        }
      }
    }
LABEL_68:
    sub_10022949C();
  }
  if (v4 == 42)
  {
    int v14 = a2 + 1;
    if (v3) {
      BOOL v15 = 1;
    }
    else {
      BOOL v15 = v14 == a3;
    }
    if (v15 || *v14 != 63) {
      goto LABEL_41;
    }
LABEL_34:
    sub_10022930C();
  }
  if (v4 == 43)
  {
    uint64_t v5 = a2 + 1;
    if (!v3 && v5 != a3 && *v5 == 63) {
      goto LABEL_34;
    }
LABEL_41:
    sub_10022930C();
  }
  return a2;
}

uint64_t sub_100221A74(uint64_t a1)
{
  uint64_t v2 = std::locale::locale((std::locale *)a1);
  *(void *)(a1 + 8) = std::locale::use_facet(v2, &std::ctype<char>::id);
  *(void *)(a1 + 16) = std::locale::use_facet((const std::locale *)a1, &std::collate<char>::id);
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 56) = 0;
  return a1;
}

void sub_100221AD0(_Unwind_Exception *a1)
{
  std::locale::~locale(v1);
  _Unwind_Resume(a1);
}

void sub_100221AE4()
{
}

void sub_100221BB4()
{
  exception = (std::regex_error *)__cxa_allocate_exception(0x18uLL);
  std::regex_error::regex_error(exception, error_paren);
}

void sub_100221BF8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_100221C0C(void *a1)
{
  *a1 = off_1004617C0;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_100221C78(void *a1)
{
  *a1 = off_1004617C0;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  operator delete();
}

uint64_t sub_100221D04(uint64_t result, uint64_t a2)
{
  if (!*(unsigned char *)(a2 + 92))
  {
    if (!*(unsigned char *)(result + 16)) {
      goto LABEL_12;
    }
    int v2 = *(unsigned __int8 *)(*(void *)(a2 + 16) - 1);
    if (v2 != 13 && v2 != 10) {
      goto LABEL_12;
    }
LABEL_11:
    *(_DWORD *)a2 = -994;
    *(void *)(a2 + 80) = *(void *)(result + 8);
    return result;
  }
  if (*(void *)(a2 + 16) == *(void *)(a2 + 8) && (*(unsigned char *)(a2 + 88) & 1) == 0) {
    goto LABEL_11;
  }
LABEL_12:
  *(_DWORD *)a2 = -993;
  *(void *)(a2 + 80) = 0;
  return result;
}

void *sub_100221D64(void *a1)
{
  *a1 = off_1004617C0;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_100221DD0(void *a1)
{
  *a1 = off_1004617C0;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  operator delete();
}

uint64_t sub_100221E5C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 **)(a2 + 16);
  if (v2 == *(unsigned __int8 **)(a2 + 24) && (*(unsigned char *)(a2 + 88) & 2) == 0
    || *(unsigned char *)(result + 16) && ((int v3 = *v2, v3 != 13) ? (v4 = v3 == 10) : (v4 = 1), v4))
  {
    *(_DWORD *)a2 = -994;
    *(void *)(a2 + 80) = *(void *)(result + 8);
  }
  else
  {
    *(_DWORD *)a2 = -993;
    *(void *)(a2 + 80) = 0;
  }
  return result;
}

std::locale *sub_100221EAC(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_100461880;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_1004617C0;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  return a1;
}

void sub_100221F38(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_100461880;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_1004617C0;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }

  operator delete();
}

uint64_t sub_100221FE4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 **)(a2 + 8);
  int v3 = *(unsigned __int8 **)(a2 + 24);
  if (v2 == v3) {
    goto LABEL_19;
  }
  BOOL v4 = *(unsigned __int8 **)(a2 + 16);
  if (v4 != v3)
  {
    if (v4 == v2)
    {
      int v5 = *(_DWORD *)(a2 + 88);
      if ((v5 & 0x80) == 0)
      {
        if ((v5 & 4) == 0)
        {
          uint64_t v6 = *v2;
          if (v6 == 95) {
            goto LABEL_17;
          }
          goto LABEL_15;
        }
        goto LABEL_19;
      }
    }
    uint64_t v7 = *(v4 - 1);
    uint64_t v8 = *v4;
    if (v7 == 95
      || (v7 & 0x80) == 0 && (*(_DWORD *)(*(void *)(*(void *)(result + 24) + 16) + 4 * v7) & 0x500) != 0)
    {
      int v9 = 1;
      if (v8 == 95) {
        goto LABEL_24;
      }
    }
    else
    {
      int v9 = 0;
      if (v8 == 95) {
        goto LABEL_24;
      }
    }
    if ((v8 & 0x80) != 0 || (*(_DWORD *)(*(void *)(*(void *)(result + 24) + 16) + 4 * v8) & 0x500) == 0)
    {
      if (*(unsigned char *)(result + 40) == (v9 != 0)) {
        goto LABEL_20;
      }
      goto LABEL_27;
    }
LABEL_24:
    if (*(unsigned char *)(result + 40) != (v9 != 1)) {
      goto LABEL_27;
    }
    goto LABEL_20;
  }
  if ((*(unsigned char *)(a2 + 88) & 8) == 0)
  {
    uint64_t v6 = *(v3 - 1);
    if (v6 == 95) {
      goto LABEL_17;
    }
LABEL_15:
    if ((v6 & 0x80) == 0 && (*(_DWORD *)(*(void *)(*(void *)(result + 24) + 16) + 4 * v6) & 0x500) != 0)
    {
LABEL_17:
      if (*(unsigned char *)(result + 40) != 1) {
        goto LABEL_27;
      }
LABEL_20:
      *(_DWORD *)a2 = -993;
      *(void *)(a2 + 80) = 0;
      return result;
    }
  }
LABEL_19:
  if (!*(unsigned char *)(result + 40)) {
    goto LABEL_20;
  }
LABEL_27:
  uint64_t v10 = *(void *)(result + 8);
  *(_DWORD *)a2 = -994;
  *(void *)(a2 + 80) = v10;
  return result;
}

std::locale *sub_100222138(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_1004618C8;
  uint64_t v2 = a1 + 2;
  locale = (std::__shared_weak_count *)a1[8].__locale_;
  if (locale && !atomic_fetch_add(&locale->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))locale->__on_zero_shared)(locale);
    std::__shared_weak_count::__release_weak(locale);
    std::locale::~locale(v2);
    a1->__locale_ = (std::locale::__imp *)off_1004617C0;
    BOOL v4 = a1[1].__locale_;
    if (!v4) {
      return a1;
    }
    goto LABEL_4;
  }
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_1004617C0;
  BOOL v4 = a1[1].__locale_;
  if (v4) {
LABEL_4:
  }
    (*(void (**)(std::locale::__imp *))(*(void *)v4 + 8))(v4);
  return a1;
}

void sub_10022224C(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_1004618C8;
  uint64_t v2 = a1 + 2;
  locale = (std::__shared_weak_count *)a1[8].__locale_;
  if (locale && !atomic_fetch_add(&locale->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))locale->__on_zero_shared)(locale);
    std::__shared_weak_count::__release_weak(locale);
    std::locale::~locale(v2);
    a1->__locale_ = (std::locale::__imp *)off_1004617C0;
    BOOL v4 = a1[1].__locale_;
    if (!v4)
    {
LABEL_5:
      operator delete();
    }
  }
  else
  {
    std::locale::~locale(a1 + 2);
    a1->__locale_ = (std::locale::__imp *)off_1004617C0;
    BOOL v4 = a1[1].__locale_;
    if (!v4) {
      goto LABEL_5;
    }
  }
  (*(void (**)(std::locale::__imp *))(*(void *)v4 + 8))(v4);
  goto LABEL_5;
}

void sub_100222380(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  char v25 = 0;
  long long v26 = 0uLL;
  char v27 = 0;
  char v28 = 0;
  uint64_t v29 = 0;
  long long __p = 0;
  int v19 = 0;
  unint64_t v4 = (*(_DWORD *)(a1 + 44) + 1);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v20 = 0;
  *(void *)&long long v21 = v5;
  *((void *)&v21 + 1) = v5;
  char v22 = 0;
  sub_1002229FC((uint64_t)&__p, v4, &v21);
  uint64_t v23 = v6;
  uint64_t v24 = v6;
  char v25 = 0;
  long long v26 = v21;
  char v27 = v22;
  uint64_t v29 = v6;
  char v28 = 1;
  uint64_t v7 = *(void *)(a2 + 16);
  if (*(unsigned char *)(a2 + 92)) {
    BOOL v8 = v7 == *(void *)(a2 + 8);
  }
  else {
    BOOL v8 = 0;
  }
  char v9 = v8;
  if (*(unsigned __int8 *)(a1 + 84) == sub_10022250C(a1 + 16, v7, *(void *)(a2 + 24), (uint64_t *)&__p, *(_DWORD *)(a2 + 88) & 0xFBF | 0x40u, v9))
  {
    *(_DWORD *)a2 = -993;
    *(void *)(a2 + 80) = 0;
    uint64_t v10 = (char *)__p;
    goto LABEL_13;
  }
  *(_DWORD *)a2 = -994;
  *(void *)(a2 + 80) = *(void *)(a1 + 8);
  uint64_t v10 = (char *)__p;
  unint64_t v11 = 0xAAAAAAAAAAAAAAABLL * ((v19 - (unsigned char *)__p) >> 3);
  if (v11 < 2)
  {
LABEL_13:
    if (!v10) {
      return;
    }
    goto LABEL_14;
  }
  int v12 = 0;
  int v13 = *(_DWORD *)(a1 + 80);
  uint64_t v14 = *(void *)(a2 + 32);
  unint64_t v15 = 1;
  do
  {
    unint64_t v16 = &v10[24 * v15];
    uint64_t v17 = v14 + 24 * (v13 + v12);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v16;
    *(unsigned char *)(v17 + 16) = v16[16];
    unint64_t v15 = (v12 + 2);
    ++v12;
  }
  while (v11 > v15);
LABEL_14:
  int v19 = v10;
  operator delete(v10);
}

void sub_1002224EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10022250C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, int a5, char a6)
{
  uint64_t v50 = 0;
  char v51 = 0;
  unint64_t v52 = 0;
  uint64_t v6 = *(void *)(a1 + 40);
  if (!v6) {
    return 0;
  }
  *(void *)&long long v48 = a3;
  *((void *)&v48 + 1) = a3;
  char v49 = 0;
  *(_DWORD *)long long v45 = 0;
  memset(&v45[8], 0, 48);
  *(_OWORD *)long long __p = 0u;
  memset(v47, 0, 21);
  char v51 = sub_100222D10((void **)&v50, (uint64_t)v45);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (*(void *)&v45[32])
  {
    *(void *)&v45[40] = *(void *)&v45[32];
    operator delete(*(void **)&v45[32]);
  }
  int v13 = v51;
  *((_DWORD *)v51 - 24) = 0;
  *((void *)v13 - 11) = a2;
  *((void *)v13 - 10) = a2;
  *((void *)v13 - 9) = a3;
  uint64_t v14 = *((void *)v13 - 8);
  unint64_t v15 = *(unsigned int *)(a1 + 28);
  unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * ((*((void *)v13 - 7) - v14) >> 3);
  if (v15 <= v16)
  {
    if (v15 < v16) {
      *((void *)v13 - 7) = v14 + 24 * v15;
    }
  }
  else
  {
    sub_100222EF8((void **)v13 - 8, v15 - v16, &v48);
    int v13 = v51;
  }
  uint64_t v18 = *((void *)v13 - 5);
  unint64_t v19 = *(unsigned int *)(a1 + 32);
  unint64_t v20 = (*((void *)v13 - 4) - v18) >> 4;
  if (v19 <= v20)
  {
    if (v19 < v20) {
      *((void *)v13 - 4) = v18 + 16 * v19;
    }
  }
  else
  {
    sub_1002230AC((char **)v13 - 5, v19 - v20);
    int v13 = v51;
  }
  *((void *)v13 - 2) = v6;
  *((_DWORD *)v13 - 2) = a5;
  *(v13 - 4) = a6;
  unsigned int v21 = 1;
  while (2)
  {
    if ((v21 & 0xFFF) == 0 && (int)(v21 >> 12) >= (int)a3 - (int)a2) {
      sub_100222BDC();
    }
    uint64_t v23 = *((void *)v13 - 2);
    if (v23) {
      (*(void (**)(uint64_t, char *))(*(void *)v23 + 16))(v23, v13 - 96);
    }
    switch(*((_DWORD *)v13 - 24))
    {
      case 0xFFFFFC18:
        uint64_t v24 = *((void *)v13 - 10);
        if ((a5 & 0x20) != 0 && v24 == a2 || (a5 & 0x1000) != 0 && v24 != a3) {
          goto LABEL_27;
        }
        uint64_t v36 = *a4;
        *(void *)uint64_t v36 = a2;
        *(void *)(v36 + 8) = v24;
        *(unsigned char *)(v36 + 16) = 1;
        uint64_t v37 = *((void *)v13 - 8);
        uint64_t v38 = *((void *)v13 - 7) - v37;
        if (v38)
        {
          unint64_t v39 = 0xAAAAAAAAAAAAAAABLL * (v38 >> 3);
          long long v40 = (unsigned char *)(v37 + 16);
          unsigned int v41 = 1;
          do
          {
            uint64_t v42 = v36 + 24 * v41;
            *(_OWORD *)uint64_t v42 = *((_OWORD *)v40 - 1);
            char v43 = *v40;
            v40 += 24;
            *(unsigned char *)(v42 + 16) = v43;
          }
          while (v39 > v41++);
        }
        uint64_t v17 = 1;
        char v22 = v50;
        if (!v50) {
          return v17;
        }
        goto LABEL_38;
      case 0xFFFFFC1D:
      case 0xFFFFFC1E:
      case 0xFFFFFC21:
        goto LABEL_17;
      case 0xFFFFFC1F:
LABEL_27:
        char v25 = v51;
        long long v26 = (void *)*((void *)v51 - 5);
        if (v26)
        {
          *((void *)v51 - 4) = v26;
          operator delete(v26);
        }
        char v27 = (void *)*((void *)v25 - 8);
        if (v27)
        {
          *((void *)v25 - 7) = v27;
          operator delete(v27);
        }
        char v51 = v25 - 96;
        goto LABEL_17;
      case 0xFFFFFC20:
        sub_1002231E8((uint64_t)v45, (long long *)v13 - 6);
        (*(void (**)(void, uint64_t, char *))(**((void **)v13 - 2) + 24))(*((void *)v13 - 2), 1, v13 - 96);
        (*(void (**)(void, void, unsigned char *))(*(void *)v47[1] + 24))(v47[1], 0, v45);
        char v28 = v51;
        if ((unint64_t)v51 >= v52)
        {
          char v51 = sub_100222D10((void **)&v50, (uint64_t)v45);
          if (__p[0])
          {
            __p[1] = __p[0];
            operator delete(__p[0]);
          }
        }
        else
        {
          long long v29 = *(_OWORD *)&v45[16];
          *(_OWORD *)char v51 = *(_OWORD *)v45;
          *((_OWORD *)v28 + 1) = v29;
          *((void *)v28 + 4) = 0;
          *((void *)v28 + 5) = 0;
          *((void *)v28 + 6) = 0;
          *((void *)v28 + 7) = 0;
          *((_OWORD *)v28 + 2) = *(_OWORD *)&v45[32];
          *((void *)v28 + 6) = *(void *)&v45[48];
          memset(&v45[32], 0, 24);
          *((void *)v28 + 8) = 0;
          *((void *)v28 + 9) = 0;
          *(_OWORD *)(v28 + 56) = *(_OWORD *)__p;
          *((void *)v28 + 9) = v47[0];
          __p[0] = 0;
          __p[1] = 0;
          v47[0] = 0;
          uint64_t v30 = v47[1];
          *(void *)(v28 + 85) = *(void *)((char *)&v47[1] + 5);
          *((void *)v28 + 10) = v30;
          char v51 = v28 + 96;
        }
        if (*(void *)&v45[32])
        {
          *(void *)&v45[40] = *(void *)&v45[32];
          operator delete(*(void **)&v45[32]);
        }
LABEL_17:
        char v22 = v50;
        int v13 = v51;
        ++v21;
        if (v50 != v51) {
          continue;
        }
        uint64_t v17 = 0;
        if (v50)
        {
LABEL_38:
          int64x2_t v31 = v51;
          std::string v32 = v22;
          if (v51 != v22)
          {
            do
            {
              std::string v33 = (void *)*((void *)v31 - 5);
              if (v33)
              {
                *((void *)v31 - 4) = v33;
                operator delete(v33);
              }
              std::string v34 = (void *)*((void *)v31 - 8);
              if (v34)
              {
                *((void *)v31 - 7) = v34;
                operator delete(v34);
              }
              v31 -= 96;
            }
            while (v31 != v22);
            std::string v32 = v50;
          }
          char v51 = v22;
          operator delete(v32);
        }
        break;
      default:
        sub_100222C34();
    }
    return v17;
  }
}

void sub_100222950(_Unwind_Exception *a1)
{
  sub_100222C8C((void **)(v1 - 112));
  _Unwind_Resume(a1);
}

void sub_100222964(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100222B98((uint64_t *)va);
  sub_100222C8C((void **)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_1002229AC(_Unwind_Exception *a1)
{
  sub_100222C8C((void **)(v1 - 112));
  _Unwind_Resume(a1);
}

void sub_1002229C0(_Unwind_Exception *a1)
{
  sub_100222C8C((void **)(v1 - 112));
  _Unwind_Resume(a1);
}

void *sub_1002229FC(uint64_t a1, unint64_t a2, long long *a3)
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t result = *(void **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - (uint64_t)result) >> 3) < a2)
  {
    if (result)
    {
      *(void *)(a1 + 8) = result;
      operator delete(result);
      uint64_t v6 = 0;
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
    }
    if (a2 > 0xAAAAAAAAAAAAAAALL) {
      goto LABEL_26;
    }
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * (v6 >> 3);
    uint64_t v9 = 2 * v8;
    if (2 * v8 <= a2) {
      uint64_t v9 = a2;
    }
    unint64_t v10 = v8 >= 0x555555555555555 ? 0xAAAAAAAAAAAAAAALL : v9;
    if (v10 > 0xAAAAAAAAAAAAAAALL) {
LABEL_26:
    }
      sub_1000A9108();
    uint64_t v11 = 3 * v10;
    uint64_t result = operator new(24 * v10);
    *(void *)a1 = result;
    *(void *)(a1 + 8) = result;
    *(void *)(a1 + 16) = &result[v11];
    uint64_t v12 = 24 * a2;
    int v13 = &result[3 * a2];
    do
    {
      *(_OWORD *)uint64_t result = *a3;
      result[2] = *((void *)a3 + 2);
      result += 3;
      v12 -= 24;
    }
    while (v12);
    goto LABEL_25;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  unint64_t v15 = (v14 - (uint64_t)result) / 24;
  if (v15 >= a2) {
    uint64_t v16 = a2;
  }
  else {
    uint64_t v16 = (v14 - (uint64_t)result) / 24;
  }
  if (v16)
  {
    uint64_t v17 = result;
    do
    {
      *(_OWORD *)uint64_t v17 = *a3;
      *((unsigned char *)v17 + 16) = *((unsigned char *)a3 + 16);
      v17 += 3;
      --v16;
    }
    while (v16);
  }
  if (a2 <= v15)
  {
    int v13 = &result[3 * a2];
LABEL_25:
    *(void *)(a1 + 8) = v13;
    return result;
  }
  uint64_t v18 = v14 + 24 * (a2 - v15);
  uint64_t v19 = 24 * a2 - 24 * v15;
  do
  {
    long long v20 = *a3;
    *(void *)(v14 + 16) = *((void *)a3 + 2);
    *(_OWORD *)uint64_t v14 = v20;
    v14 += 24;
    v19 -= 24;
  }
  while (v19);
  *(void *)(a1 + 8) = v18;
  return result;
}

void *sub_100222B98(void *a1)
{
  uint64_t v2 = (void *)a1[7];
  if (v2)
  {
    a1[8] = v2;
    operator delete(v2);
  }
  int v3 = (void *)a1[4];
  if (v3)
  {
    a1[5] = v3;
    operator delete(v3);
  }
  return a1;
}

void sub_100222BDC()
{
  exception = (std::regex_error *)__cxa_allocate_exception(0x18uLL);
  std::regex_error::regex_error(exception, error_complexity);
}

void sub_100222C20(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100222C34()
{
  exception = (std::regex_error *)__cxa_allocate_exception(0x18uLL);
  std::regex_error::regex_error(exception, __re_err_unknown);
}

void sub_100222C78(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void **sub_100222C8C(void **a1)
{
  uint64_t v2 = (char *)*a1;
  if (*a1)
  {
    int v3 = (char *)a1[1];
    unint64_t v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        uint64_t v5 = (void *)*((void *)v3 - 5);
        if (v5)
        {
          *((void *)v3 - 4) = v5;
          operator delete(v5);
        }
        uint64_t v6 = (void *)*((void *)v3 - 8);
        if (v6)
        {
          *((void *)v3 - 7) = v6;
          operator delete(v6);
        }
        v3 -= 96;
      }
      while (v3 != v2);
      unint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

char *sub_100222D10(void **a1, uint64_t a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 5);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x2AAAAAAAAAAAAAALL) {
    sub_1000A9108();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 5) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 5);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 5) >= 0x155555555555555) {
    unint64_t v6 = 0x2AAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0x2AAAAAAAAAAAAAALL) {
      sub_1000A6A10();
    }
    uint64_t v7 = (char *)operator new(96 * v6);
  }
  else
  {
    uint64_t v7 = 0;
  }
  long long v8 = *(_OWORD *)(a2 + 16);
  uint64_t v9 = &v7[96 * v3];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)a2;
  *((_OWORD *)v9 + 1) = v8;
  unint64_t v10 = &v7[96 * v6];
  *((_OWORD *)v9 + 2) = *(_OWORD *)(a2 + 32);
  *((void *)v9 + 6) = *(void *)(a2 + 48);
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  *(void *)(v9 + 85) = *(void *)(a2 + 85);
  uint64_t v11 = *(void *)(a2 + 72);
  uint64_t v12 = *(void *)(a2 + 80);
  *((void *)v9 + 9) = 0;
  *((void *)v9 + 10) = v12;
  *(_OWORD *)(v9 + 56) = *(_OWORD *)(a2 + 56);
  *((void *)v9 + 9) = v11;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = 0;
  int v13 = v9 + 96;
  uint64_t v14 = (char *)*a1;
  unint64_t v15 = (char *)a1[1];
  if (v15 == *a1)
  {
    *a1 = v9;
    a1[1] = v13;
    a1[2] = v10;
    if (!v15) {
      return v13;
    }
    goto LABEL_23;
  }
  uint64_t v16 = 0;
  do
  {
    uint64_t v17 = &v9[v16];
    uint64_t v18 = &v15[v16];
    long long v19 = *(_OWORD *)&v15[v16 - 80];
    *((_OWORD *)v17 - 6) = *(_OWORD *)&v15[v16 - 96];
    *((_OWORD *)v17 - 5) = v19;
    *((void *)v17 - 7) = 0;
    *((void *)v17 - 6) = 0;
    *((_OWORD *)v17 - 4) = *(_OWORD *)&v15[v16 - 64];
    *((void *)v17 - 6) = *(void *)&v15[v16 - 48];
    *((void *)v18 - 8) = 0;
    *((void *)v18 - 7) = 0;
    *((void *)v18 - 6) = 0;
    *((void *)v17 - 4) = 0;
    *((void *)v17 - 3) = 0;
    *(_OWORD *)(v17 - 40) = *(_OWORD *)&v15[v16 - 40];
    *((void *)v17 - 3) = *(void *)&v15[v16 - 24];
    *((void *)v18 - 5) = 0;
    *((void *)v18 - 4) = 0;
    *((void *)v18 - 3) = 0;
    uint64_t v20 = *(void *)&v15[v16 - 16];
    *(void *)(v17 - 11) = *(void *)&v15[v16 - 11];
    *((void *)v17 - 2) = v20;
    v16 -= 96;
  }
  while (&v15[v16] != v14);
  unsigned int v21 = (char *)*a1;
  unint64_t v15 = (char *)a1[1];
  *a1 = &v9[v16];
  a1[1] = v13;
  a1[2] = v10;
  if (v15 != v21)
  {
    do
    {
      char v22 = (void *)*((void *)v15 - 5);
      if (v22)
      {
        *((void *)v15 - 4) = v22;
        operator delete(v22);
      }
      uint64_t v23 = (void *)*((void *)v15 - 8);
      if (v23)
      {
        *((void *)v15 - 7) = v23;
        operator delete(v23);
      }
      v15 -= 96;
    }
    while (v15 != v21);
    unint64_t v15 = v21;
  }
  if (v15) {
LABEL_23:
  }
    operator delete(v15);
  return v13;
}

void sub_100222EF8(void **a1, unint64_t a2, long long *a3)
{
  uint64_t v7 = (char *)a1[1];
  unint64_t v6 = a1[2];
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - v7) >> 3) >= a2)
  {
    if (a2)
    {
      int v13 = &v7[24 * a2];
      uint64_t v14 = 24 * a2;
      do
      {
        long long v15 = *a3;
        *((void *)v7 + 2) = *((void *)a3 + 2);
        *(_OWORD *)uint64_t v7 = v15;
        v7 += 24;
        v14 -= 24;
      }
      while (v14);
      uint64_t v7 = v13;
    }
    a1[1] = v7;
  }
  else
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((v7 - (unsigned char *)*a1) >> 3);
    unint64_t v9 = v8 + a2;
    if (v8 + a2 > 0xAAAAAAAAAAAAAAALL) {
      sub_1000A9108();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v6 - (unsigned char *)*a1) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      if (v11 > 0xAAAAAAAAAAAAAAALL) {
        sub_1000A6A10();
      }
      uint64_t v12 = (char *)operator new(24 * v11);
    }
    else
    {
      uint64_t v12 = 0;
    }
    uint64_t v16 = &v12[24 * v8];
    uint64_t v17 = 24 * a2;
    uint64_t v18 = &v16[24 * a2];
    long long v19 = v16;
    do
    {
      long long v20 = *a3;
      *((void *)v19 + 2) = *((void *)a3 + 2);
      *(_OWORD *)long long v19 = v20;
      v19 += 24;
      v17 -= 24;
    }
    while (v17);
    unsigned int v21 = (char *)*a1;
    if (v7 != *a1)
    {
      do
      {
        long long v22 = *(_OWORD *)(v7 - 24);
        *((void *)v16 - 1) = *((void *)v7 - 1);
        *(_OWORD *)(v16 - 24) = v22;
        v16 -= 24;
        v7 -= 24;
      }
      while (v7 != v21);
      uint64_t v7 = (char *)*a1;
    }
    *a1 = v16;
    a1[1] = v18;
    a1[2] = &v12[24 * v11];
    if (v7)
    {
      operator delete(v7);
    }
  }
}

void sub_1002230AC(char **a1, unint64_t a2)
{
  uint64_t v5 = a1[1];
  unint64_t v4 = a1[2];
  if (a2 <= (v4 - v5) >> 4)
  {
    if (a2)
    {
      uint64_t v12 = 16 * a2;
      bzero(a1[1], 16 * a2);
      v5 += v12;
    }
    a1[1] = v5;
  }
  else
  {
    unint64_t v6 = *a1;
    uint64_t v7 = (v5 - *a1) >> 4;
    unint64_t v8 = v7 + a2;
    if ((v7 + a2) >> 60) {
      sub_1000A9108();
    }
    uint64_t v9 = v4 - v6;
    if (v9 >> 3 > v8) {
      unint64_t v8 = v9 >> 3;
    }
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v10 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v10 = v8;
    }
    if (v10)
    {
      if (v10 >> 60) {
        sub_1000A6A10();
      }
      unint64_t v11 = (char *)operator new(16 * v10);
    }
    else
    {
      unint64_t v11 = 0;
    }
    int v13 = &v11[16 * v7];
    size_t v14 = 16 * a2;
    long long v15 = &v11[16 * v10];
    bzero(v13, v14);
    uint64_t v16 = &v13[v14];
    if (v5 != v6)
    {
      do
      {
        *((_OWORD *)v13 - 1) = *((_OWORD *)v5 - 1);
        v13 -= 16;
        v5 -= 16;
      }
      while (v5 != v6);
      uint64_t v5 = *a1;
    }
    *a1 = v13;
    a1[1] = v16;
    a1[2] = v15;
    if (v5)
    {
      operator delete(v5);
    }
  }
}

uint64_t sub_1002231E8(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  long long v5 = a2[1];
  *(void *)(a1 + 32) = 0;
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  uint64_t v7 = (unsigned char *)*((void *)a2 + 4);
  unint64_t v6 = (unsigned char *)*((void *)a2 + 5);
  int64_t v8 = v6 - v7;
  if (v6 != v7)
  {
    if (0xAAAAAAAAAAAAAAABLL * (v8 >> 3) >= 0xAAAAAAAAAAAAAABLL) {
      sub_1000A9108();
    }
    uint64_t v9 = (char *)operator new(v8);
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = &v9[8 * (v8 >> 3)];
    size_t v10 = 24 * ((v8 - 24) / 0x18uLL) + 24;
    memcpy(v9, v7, v10);
    *(void *)(a1 + 40) = &v9[v10];
  }
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  uint64_t v12 = (unsigned char *)*((void *)a2 + 7);
  unint64_t v11 = (unsigned char *)*((void *)a2 + 8);
  uint64_t v13 = v11 - v12;
  if (v11 != v12)
  {
    if (v13 < 0) {
      sub_1000A9108();
    }
    size_t v14 = (char *)operator new(v11 - v12);
    *(void *)(a1 + 56) = v14;
    *(void *)(a1 + 64) = v14;
    *(void *)(a1 + 72) = &v14[16 * (v13 >> 4)];
    memcpy(v14, v12, v13 & 0xFFFFFFFFFFFFFFF0);
    *(void *)(a1 + 64) = &v14[v13 & 0xFFFFFFFFFFFFFFF0];
  }
  uint64_t v15 = *((void *)a2 + 10);
  *(void *)(a1 + 85) = *(void *)((char *)a2 + 85);
  *(void *)(a1 + 80) = v15;
  return a1;
}

void sub_100223330(_Unwind_Exception *exception_object)
{
  long long v5 = *v3;
  if (*v3)
  {
    *(void *)(v1 + 64) = v5;
    operator delete(v5);
  }
  unint64_t v6 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 40) = v6;
    operator delete(v6);
  }
  _Unwind_Resume(exception_object);
}

unsigned __int8 *sub_100223364(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  if (a2 == a3 || *a2 != 92) {
    return a2;
  }
  long long v5 = a2 + 1;
  if (a2 + 1 == a3) {
    sub_100223988();
  }
  int v7 = *v5;
  unsigned int v8 = v7 - 48;
  if (v7 == 48) {
    sub_100224224(a1);
  }
  if ((v7 - 49) <= 8)
  {
    size_t v10 = a2 + 2;
    if (a2 + 2 == a3) {
      goto LABEL_13;
    }
    do
    {
      int v11 = *v10;
      if ((v11 - 48) > 9) {
        break;
      }
      if (v8 >= 0x19999999) {
        goto LABEL_20;
      }
      ++v10;
      unsigned int v8 = v11 + 10 * v8 - 48;
    }
    while (v10 != a3);
    if (v8)
    {
LABEL_13:
      if (v8 <= *(_DWORD *)(a1 + 28)) {
        sub_100224448(a1);
      }
    }
LABEL_20:
    sub_1002243F0();
  }
  uint64_t v12 = sub_1002239E0(a1, a2 + 1, a3);
  if (v12 == v5)
  {
    uint64_t v13 = sub_100223D24(a1, a2 + 1, a3, 0);
    if (v13 == v5) {
      return a2;
    }
    else {
      return v13;
    }
  }
  return v12;
}

unsigned char *sub_1002234E0(uint64_t a1, unsigned char *a2, unsigned char *a3)
{
  if (a2 != a3 && *a2 == 91)
  {
    if (a2 + 1 != a3) {
      operator new();
    }
    sub_1002268C8();
  }
  return a2;
}

void sub_100223630()
{
}

void sub_100223654()
{
  exception = (std::regex_error *)__cxa_allocate_exception(0x18uLL);
  std::regex_error::regex_error(exception, error_badrepeat);
}

void sub_100223698(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

unsigned char *sub_1002236AC(uint64_t a1, unsigned char *a2, unsigned char *a3)
{
  if (a2 != a3)
  {
    switch(*a2)
    {
      case '$':
      case '(':
      case ')':
      case '*':
      case '+':
      case '.':
      case '?':
      case '[':
      case '\\':
      case ']':
      case '^':
      case '{':
      case '|':
      case '}':
        return a2;
      default:
        sub_100224224(a1);
    }
  }
  return a2;
}

void *sub_100223890(void *a1)
{
  *a1 = off_1004617C0;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_1002238FC(void *a1)
{
  *a1 = off_1004617C0;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  operator delete();
}

void sub_100223988()
{
  exception = (std::regex_error *)__cxa_allocate_exception(0x18uLL);
  std::regex_error::regex_error(exception, error_escape);
}

void sub_1002239CC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

unsigned char *sub_1002239E0(uint64_t a1, unsigned char *a2, unsigned char *a3)
{
  if (a2 != a3)
  {
    switch(*a2)
    {
      case 'D':
        operator new();
      case 'S':
        operator new();
      case 'W':
        operator new();
      case 'd':
        operator new();
      case 's':
        operator new();
      case 'w':
        operator new();
      default:
        return a2;
    }
  }
  return a2;
}

void sub_100223C1C()
{
}

unsigned __int8 *sub_100223D24(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3, std::string *this)
{
  long long v4 = a2;
  if (a2 == a3) {
    return v4;
  }
  char v5 = 0;
  switch(*a2)
  {
    case '0':
      if (!this) {
        goto LABEL_48;
      }
      std::string::operator=(this, 0);
      return v4 + 1;
    case 'c':
      if (a2 + 1 == a3) {
        goto LABEL_55;
      }
      unsigned __int8 v8 = a2[1];
      if (((v8 & 0xDF) - 65) > 0x19u) {
        goto LABEL_55;
      }
      if (!this) {
        sub_100224224(a1);
      }
      std::string::operator=(this, v8 & 0x1F);
      v4 += 2;
      return v4;
    case 'f':
      if (!this) {
        sub_100224224(a1);
      }
      std::string::operator=(this, 12);
      return v4 + 1;
    case 'n':
      if (!this) {
        sub_100224224(a1);
      }
      std::string::operator=(this, 10);
      return v4 + 1;
    case 'r':
      if (!this) {
        sub_100224224(a1);
      }
      std::string::operator=(this, 13);
      return v4 + 1;
    case 't':
      if (!this) {
        sub_100224224(a1);
      }
      std::string::operator=(this, 9);
      return v4 + 1;
    case 'u':
      if (a2 + 1 == a3) {
        goto LABEL_55;
      }
      int v9 = a2[1];
      if ((v9 & 0xF8) != 0x30 && (v9 & 0xFE) != 0x38 && (v9 | 0x20u) - 97 >= 6) {
        goto LABEL_55;
      }
      long long v4 = a2 + 2;
      if (a2 + 2 == a3) {
        goto LABEL_55;
      }
      int v10 = *v4;
      char v11 = -48;
      if ((v10 & 0xF8) == 0x30 || (v10 & 0xFE) == 0x38) {
        goto LABEL_32;
      }
      v10 |= 0x20u;
      if ((v10 - 97) >= 6) {
        goto LABEL_55;
      }
      char v11 = -87;
LABEL_32:
      char v5 = 16 * (v11 + v10);
LABEL_33:
      if (v4 + 1 == a3) {
        goto LABEL_55;
      }
      int v12 = v4[1];
      char v13 = -48;
      if ((v12 & 0xF8) == 0x30 || (v12 & 0xFE) == 0x38) {
        goto LABEL_38;
      }
      v12 |= 0x20u;
      if ((v12 - 97) >= 6) {
        goto LABEL_55;
      }
      char v13 = -87;
LABEL_38:
      if (v4 + 2 == a3) {
        goto LABEL_55;
      }
      int v14 = v4[2];
      char v15 = -48;
      if ((v14 & 0xF8) != 0x30 && (v14 & 0xFE) != 0x38)
      {
        v14 |= 0x20u;
        if ((v14 - 97) >= 6) {
LABEL_55:
        }
          sub_100223988();
        char v15 = -87;
      }
      if (!this) {
        sub_100224224(a1);
      }
      std::string::operator=(this, v15 + v14 + 16 * (v13 + v12 + v5));
      uint64_t result = v4 + 3;
      break;
    case 'v':
      if (!this) {
        sub_100224224(a1);
      }
      std::string::operator=(this, 11);
      return v4 + 1;
    case 'x':
      goto LABEL_33;
    default:
      uint64_t v7 = *a2;
      if (*a2 == 95 || (v7 & 0x80) == 0 && (*(_DWORD *)(*(void *)(*(void *)(a1 + 8) + 16) + 4 * v7) & 0x500) != 0) {
        goto LABEL_55;
      }
      if (!this) {
LABEL_48:
      }
        sub_100224224(a1);
      std::string::operator=(this, v7);
      return v4 + 1;
  }
  return result;
}

void sub_100224224(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24);
  if ((v1 & 1) == 0)
  {
    if ((v1 & 8) == 0) {
      operator new();
    }
    operator new();
  }
  operator new();
}

void sub_100224398()
{
  std::locale::~locale(v1);
  void *v0 = off_1004617C0;
  uint64_t v2 = v0[1];
  if (v2) {
    sub_1003A52D8(v2);
  }
  operator delete();
}

void sub_1002243F0()
{
  exception = (std::regex_error *)__cxa_allocate_exception(0x18uLL);
  std::regex_error::regex_error(exception, error_backref);
}

void sub_100224434(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100224448(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24);
  if ((v1 & 1) == 0)
  {
    if ((v1 & 8) == 0) {
      operator new();
    }
    operator new();
  }
  operator new();
}

std::locale *sub_100224578(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_100461958;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_1004617C0;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  return a1;
}

void sub_100224604(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_100461958;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_1004617C0;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }

  operator delete();
}

uint64_t sub_1002246B0(uint64_t result, uint64_t a2)
{
  unint64_t v3 = *(char **)(a2 + 16);
  if (v3 == *(char **)(a2 + 24)
    || (uint64_t v4 = result,
        uint64_t result = (*(uint64_t (**)(void, void))(**(void **)(result + 24) + 40))(*(void *)(result + 24), *v3), *(unsigned __int8 *)(v4 + 40) != result))
  {
    *(_DWORD *)a2 = -993;
    *(void *)(a2 + 80) = 0;
  }
  else
  {
    *(_DWORD *)a2 = -995;
    ++*(void *)(a2 + 16);
    *(void *)(a2 + 80) = *(void *)(v4 + 8);
  }
  return result;
}

std::locale *sub_100224750(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_1004619A0;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_1004617C0;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  return a1;
}

void sub_1002247DC(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_1004619A0;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_1004617C0;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }

  operator delete();
}

uint64_t sub_100224888(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 **)(a2 + 16);
  if (v2 == *(unsigned __int8 **)(a2 + 24) || *v2 != *(unsigned __int8 *)(result + 40))
  {
    *(_DWORD *)a2 = -993;
    *(void *)(a2 + 80) = 0;
  }
  else
  {
    *(_DWORD *)a2 = -995;
    *(void *)(a2 + 16) = v2 + 1;
    *(void *)(a2 + 80) = *(void *)(result + 8);
  }
  return result;
}

void *sub_1002248D0(void *a1)
{
  *a1 = off_1004617C0;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_10022493C(void *a1)
{
  *a1 = off_1004617C0;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  operator delete();
}

uint64_t sub_1002249C8(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 **)(a2 + 16);
  if (v2 == *(unsigned __int8 **)(a2 + 24) || *v2 != *(unsigned __int8 *)(result + 16))
  {
    *(_DWORD *)a2 = -993;
    *(void *)(a2 + 80) = 0;
  }
  else
  {
    *(_DWORD *)a2 = -995;
    *(void *)(a2 + 16) = v2 + 1;
    *(void *)(a2 + 80) = *(void *)(result + 8);
  }
  return result;
}

std::locale *sub_100224A10(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_100461A30;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_1004617C0;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  return a1;
}

void sub_100224A9C(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_100461A30;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_1004617C0;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }

  operator delete();
}

uint64_t sub_100224B48(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32) + 24 * (*(_DWORD *)(result + 40) - 1);
  if (!*(unsigned char *)(v3 + 16)
    || (uint64_t v4 = *(void *)(v3 + 8) - *(void *)v3, v5 = *(void *)(a2 + 16), *(void *)(a2 + 24) - v5 < v4))
  {
LABEL_3:
    *(_DWORD *)a2 = -993;
    *(void *)(a2 + 80) = 0;
    return result;
  }
  uint64_t v6 = result;
  if (v4 >= 1)
  {
    uint64_t v7 = 0;
    while (1)
    {
      int v8 = (*(uint64_t (**)(void, void))(**(void **)(v6 + 24) + 40))(*(void *)(v6 + 24), *(char *)(*(void *)v3 + v7));
      uint64_t result = (*(uint64_t (**)(void, void))(**(void **)(v6 + 24) + 40))(*(void *)(v6 + 24), *(char *)(*(void *)(a2 + 16) + v7));
      if (v8 != result) {
        goto LABEL_3;
      }
      if (v4 == ++v7)
      {
        uint64_t v5 = *(void *)(a2 + 16);
        break;
      }
    }
  }
  *(_DWORD *)a2 = -994;
  *(void *)(a2 + 16) = v5 + v4;
  *(void *)(a2 + 80) = *(void *)(v6 + 8);
  return result;
}

std::locale *sub_100224C74(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_100461A78;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_1004617C0;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }
  return a1;
}

void sub_100224D00(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_100461A78;
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_1004617C0;
  locale = a1[1].__locale_;
  if (locale) {
    (*(void (**)(std::locale::__imp *))(*(void *)locale + 8))(locale);
  }

  operator delete();
}

uint64_t sub_100224DAC(uint64_t result, uint64_t a2)
{
  unsigned int v2 = *(_DWORD *)(result + 40) - 1;
  uint64_t v3 = *(void *)(a2 + 32);
  if (!*(unsigned char *)(v3 + 24 * v2 + 16)
    || (uint64_t v4 = (unsigned __int8 **)(v3 + 24 * v2),
        uint64_t v5 = *v4,
        uint64_t v6 = v4[1] - *v4,
        uint64_t v7 = *(void *)(a2 + 16),
        *(void *)(a2 + 24) - v7 < v6))
  {
LABEL_3:
    *(_DWORD *)a2 = -993;
    *(void *)(a2 + 80) = 0;
    return result;
  }
  if (v6 >= 1)
  {
    int v8 = *(unsigned __int8 **)(a2 + 16);
    uint64_t v9 = v6;
    do
    {
      int v11 = *v5++;
      int v10 = v11;
      int v12 = *v8++;
      if (v10 != v12) {
        goto LABEL_3;
      }
    }
    while (--v9);
  }
  *(_DWORD *)a2 = -994;
  *(void *)(a2 + 16) = v7 + v6;
  *(void *)(a2 + 80) = *(void *)(result + 8);
  return result;
}

void *sub_100224E3C(void *a1)
{
  *a1 = off_1004617C0;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_100224EA8(void *a1)
{
  *a1 = off_1004617C0;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  operator delete();
}

unsigned int *sub_100224F34(unsigned int *result, uint64_t a2)
{
  unint64_t v2 = result[4];
  uint64_t v3 = *(void *)(a2 + 32);
  if (0xAAAAAAAAAAAAAAABLL * ((*(void *)(a2 + 40) - v3) >> 3) < v2) {
    sub_1002243F0();
  }
  unsigned int v5 = v2 - 1;
  if (*(unsigned char *)(v3 + 24 * v5 + 16)
    && (uint64_t v6 = result,
        uint64_t v7 = v3 + 24 * v5,
        uint64_t result = *(unsigned int **)v7,
        int64_t v8 = *(void *)(v7 + 8) - *(void *)v7,
        uint64_t v9 = *(void *)(a2 + 16),
        *(void *)(a2 + 24) - v9 >= v8)
    && (uint64_t result = (unsigned int *)memcmp(result, *(const void **)(a2 + 16), v8), !result))
  {
    *(_DWORD *)a2 = -994;
    *(void *)(a2 + 16) = v9 + v8;
    *(void *)(a2 + 80) = *((void *)v6 + 1);
  }
  else
  {
    *(_DWORD *)a2 = -993;
    *(void *)(a2 + 80) = 0;
  }
  return result;
}

void sub_100225004(uint64_t a1, uint64_t a2)
{
  char v2 = a2;
  if (!*(unsigned char *)(a1 + 169))
  {
    uint64_t v6 = (void *)(a1 + 40);
    unsigned int v5 = *(unsigned char **)(a1 + 48);
    unint64_t v16 = *(void *)(a1 + 56);
    if (*(unsigned char *)(a1 + 170))
    {
      if ((unint64_t)v5 < v16) {
        goto LABEL_24;
      }
      uint64_t v17 = (unsigned char *)*v6;
      unint64_t v18 = (unint64_t)&v5[-*v6];
      unint64_t v19 = v18 + 1;
      if ((uint64_t)(v18 + 1) >= 0)
      {
        unint64_t v20 = v16 - (void)v17;
        if (2 * v20 > v19) {
          unint64_t v19 = 2 * v20;
        }
        if (v20 >= 0x3FFFFFFFFFFFFFFFLL) {
          size_t v21 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          size_t v21 = v19;
        }
        if (v21)
        {
          int v12 = operator new(v21);
          char v13 = &v12[v18];
          int v14 = &v12[v21];
          v12[v18] = v2;
          uint64_t v15 = (uint64_t)&v12[v18 + 1];
          if (v5 == v17) {
            goto LABEL_49;
          }
        }
        else
        {
          int v12 = 0;
          char v13 = &v5[-*v6];
          int v14 = 0;
          *(unsigned char *)unint64_t v18 = a2;
          uint64_t v15 = v18 + 1;
          if (v5 == v17) {
            goto LABEL_49;
          }
        }
        if (v18 >= 8 && (unint64_t)(v17 - v12) >= 0x20)
        {
          if (v18 >= 0x20)
          {
            unint64_t v28 = v18 & 0xFFFFFFFFFFFFFFE0;
            uint64_t v38 = (long long *)(v5 - 16);
            unint64_t v39 = &v12[v5 - 16 - v17];
            unint64_t v40 = v18 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              long long v41 = *v38;
              *(v39 - 1) = *(v38 - 1);
              *unint64_t v39 = v41;
              v39 -= 2;
              v38 -= 2;
              v40 -= 32;
            }
            while (v40);
            if (v18 == v28) {
              goto LABEL_86;
            }
            if ((v18 & 0x18) == 0)
            {
              v13 -= v28;
              v5 -= v28;
              goto LABEL_80;
            }
          }
          else
          {
            unint64_t v28 = 0;
          }
          v13 -= v18 & 0xFFFFFFFFFFFFFFF8;
          uint64_t v42 = &v5[-v28 - 8];
          char v43 = &v12[v42 - v17];
          unint64_t v44 = v28 - (v18 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            uint64_t v45 = *(void *)v42;
            v42 -= 8;
            *v43-- = v45;
            v44 += 8;
          }
          while (v44);
          v5 -= v18 & 0xFFFFFFFFFFFFFFF8;
          if (v18 == (v18 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_86;
          }
        }
LABEL_80:
        unint64_t v56 = v13 - 1;
        do
        {
          char v57 = *--v5;
          *v56-- = v57;
        }
        while (v5 != v17);
        goto LABEL_86;
      }
LABEL_89:
      sub_1000A9108();
    }
    if ((unint64_t)v5 < v16) {
      goto LABEL_24;
    }
    uint64_t v23 = (unsigned char *)*v6;
    unint64_t v24 = (unint64_t)&v5[-*v6];
    unint64_t v25 = v24 + 1;
    if ((uint64_t)(v24 + 1) < 0) {
      goto LABEL_89;
    }
    unint64_t v26 = v16 - (void)v23;
    if (2 * v26 > v25) {
      unint64_t v25 = 2 * v26;
    }
    if (v26 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v27 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v27 = v25;
    }
    if (v27)
    {
      int v12 = operator new(v27);
      char v13 = &v12[v24];
      int v14 = &v12[v27];
      v12[v24] = v2;
      uint64_t v15 = (uint64_t)&v12[v24 + 1];
      if (v5 == v23)
      {
LABEL_49:
        *(void *)(a1 + 40) = v13;
        *(void *)(a1 + 48) = v15;
        *(void *)(a1 + 56) = v14;
        if (!v5) {
          goto LABEL_88;
        }
        goto LABEL_87;
      }
    }
    else
    {
      int v12 = 0;
      char v13 = &v5[-*v6];
      int v14 = 0;
      *(unsigned char *)unint64_t v24 = a2;
      uint64_t v15 = v24 + 1;
      if (v5 == v23) {
        goto LABEL_49;
      }
    }
    if (v24 >= 8 && (unint64_t)(v23 - v12) >= 0x20)
    {
      if (v24 >= 0x20)
      {
        unint64_t v29 = v24 & 0xFFFFFFFFFFFFFFE0;
        uint64_t v46 = (long long *)(v5 - 16);
        uint64_t v47 = &v12[v5 - 16 - v23];
        unint64_t v48 = v24 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          long long v49 = *v46;
          *(v47 - 1) = *(v46 - 1);
          _OWORD *v47 = v49;
          v47 -= 2;
          v46 -= 2;
          v48 -= 32;
        }
        while (v48);
        if (v24 == v29) {
          goto LABEL_86;
        }
        if ((v24 & 0x18) == 0)
        {
          v13 -= v29;
          v5 -= v29;
          goto LABEL_84;
        }
      }
      else
      {
        unint64_t v29 = 0;
      }
      v13 -= v24 & 0xFFFFFFFFFFFFFFF8;
      uint64_t v50 = &v5[-v29 - 8];
      char v51 = &v12[v50 - v23];
      unint64_t v52 = v29 - (v24 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        uint64_t v53 = *(void *)v50;
        v50 -= 8;
        *v51-- = v53;
        v52 += 8;
      }
      while (v52);
      v5 -= v24 & 0xFFFFFFFFFFFFFFF8;
      if (v24 == (v24 & 0xFFFFFFFFFFFFFFF8)) {
        goto LABEL_86;
      }
    }
LABEL_84:
    std::string v58 = v13 - 1;
    do
    {
      char v59 = *--v5;
      *v58-- = v59;
    }
    while (v5 != v23);
    goto LABEL_86;
  }
  char v2 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), a2);
  unsigned int v5 = *(unsigned char **)(a1 + 48);
  unint64_t v4 = *(void *)(a1 + 56);
  if ((unint64_t)v5 < v4)
  {
LABEL_24:
    unsigned char *v5 = v2;
    uint64_t v15 = (uint64_t)(v5 + 1);
    goto LABEL_88;
  }
  uint64_t v6 = (void *)(a1 + 40);
  uint64_t v7 = *(unsigned char **)(a1 + 40);
  unint64_t v8 = v5 - v7;
  uint64_t v9 = v5 - v7 + 1;
  if (v9 < 0) {
    goto LABEL_89;
  }
  unint64_t v10 = v4 - (void)v7;
  if (2 * v10 > v9) {
    uint64_t v9 = 2 * v10;
  }
  if (v10 >= 0x3FFFFFFFFFFFFFFFLL) {
    size_t v11 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    size_t v11 = v9;
  }
  if (v11)
  {
    int v12 = operator new(v11);
    char v13 = &v12[v8];
    int v14 = &v12[v11];
    v12[v8] = v2;
    uint64_t v15 = (uint64_t)&v12[v8 + 1];
    if (v5 == v7) {
      goto LABEL_49;
    }
  }
  else
  {
    int v12 = 0;
    char v13 = (char *)(v5 - v7);
    int v14 = 0;
    *(unsigned char *)unint64_t v8 = v2;
    uint64_t v15 = v8 + 1;
    if (v5 == v7) {
      goto LABEL_49;
    }
  }
  if (v8 < 8 || (unint64_t)(v7 - v12) < 0x20) {
    goto LABEL_76;
  }
  if (v8 < 0x20)
  {
    unint64_t v22 = 0;
    goto LABEL_55;
  }
  unint64_t v22 = v8 & 0xFFFFFFFFFFFFFFE0;
  uint64_t v30 = (long long *)(v5 - 16);
  int64x2_t v31 = &v12[v5 - 16 - v7];
  unint64_t v32 = v8 & 0xFFFFFFFFFFFFFFE0;
  do
  {
    long long v33 = *v30;
    *(v31 - 1) = *(v30 - 1);
    _OWORD *v31 = v33;
    v31 -= 2;
    v30 -= 2;
    v32 -= 32;
  }
  while (v32);
  if (v8 != v22)
  {
    if ((v8 & 0x18) == 0)
    {
      v13 -= v22;
      v5 -= v22;
      goto LABEL_76;
    }
LABEL_55:
    v13 -= v8 & 0xFFFFFFFFFFFFFFF8;
    std::string v34 = &v5[-v22 - 8];
    int64x2_t v35 = &v12[v34 - v7];
    unint64_t v36 = v22 - (v8 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint64_t v37 = *(void *)v34;
      v34 -= 8;
      *v35-- = v37;
      v36 += 8;
    }
    while (v36);
    v5 -= v8 & 0xFFFFFFFFFFFFFFF8;
    if (v8 == (v8 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_86;
    }
LABEL_76:
    long long v54 = v13 - 1;
    do
    {
      char v55 = *--v5;
      *v54-- = v55;
    }
    while (v5 != v7);
  }
LABEL_86:
  unsigned int v5 = (unsigned char *)*v6;
  *(void *)(a1 + 40) = v12;
  *(void *)(a1 + 48) = v15;
  *(void *)(a1 + 56) = v14;
  if (v5) {
LABEL_87:
  }
    operator delete(v5);
LABEL_88:
  *(void *)(a1 + 48) = v15;
}

uint64_t sub_100225498(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6)
{
  *(void *)a1 = off_100461B08;
  *(void *)(a1 + 8) = a3;
  size_t v11 = (const std::locale *)(a1 + 16);
  std::locale::locale((std::locale *)(a1 + 16), (const std::locale *)a2);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(unsigned char *)(a1 + 168) = a4;
  *(unsigned char *)(a1 + 169) = a5;
  *(unsigned char *)(a1 + 170) = a6;
  std::locale::locale(&v14, v11);
  std::locale::name(&v15, &v14);
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
  {
    BOOL v12 = v15.__r_.__value_.__l.__size_ != 1 || *v15.__r_.__value_.__l.__data_ != 67;
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  else
  {
    BOOL v12 = SHIBYTE(v15.__r_.__value_.__r.__words[2]) != 1 || v15.__r_.__value_.__s.__data_[0] != 67;
  }
  std::locale::~locale(&v14);
  *(unsigned char *)(a1 + 171) = v12;
  return a1;
}

void sub_1002255E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::locale a9)
{
  std::locale::~locale(&a9);
  sub_1000E0AA4((void **)(v9 + 136));
  std::string v15 = *(void **)(v9 + 112);
  if (v15)
  {
    *(void *)(v9 + 120) = v15;
    operator delete(v15);
    sub_1002256A4(v12);
    unint64_t v16 = *(void **)(v9 + 64);
    if (!v16)
    {
LABEL_3:
      uint64_t v17 = *v13;
      if (!*v13) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else
  {
    sub_1002256A4(v12);
    unint64_t v16 = *(void **)(v9 + 64);
    if (!v16) {
      goto LABEL_3;
    }
  }
  *(void *)(v9 + 72) = v16;
  operator delete(v16);
  uint64_t v17 = *v13;
  if (!*v13)
  {
LABEL_4:
    std::locale::~locale(v11);
    *(void *)uint64_t v9 = v10;
    uint64_t v18 = *(void *)(v9 + 8);
    if (!v18) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }
LABEL_8:
  *(void *)(v9 + 48) = v17;
  operator delete(v17);
  std::locale::~locale(v11);
  *(void *)uint64_t v9 = v10;
  uint64_t v18 = *(void *)(v9 + 8);
  if (!v18) {
LABEL_5:
  }
    _Unwind_Resume(a1);
LABEL_9:
  (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
  _Unwind_Resume(a1);
}

void **sub_1002256A4(void **a1)
{
  char v2 = (void **)*a1;
  if (*a1)
  {
    uint64_t v3 = (void **)a1[1];
    unint64_t v4 = *a1;
    if (v3 == v2)
    {
LABEL_11:
      a1[1] = v2;
      operator delete(v4);
      return a1;
    }
    while (1)
    {
      if (*((char *)v3 - 1) < 0)
      {
        operator delete(*(v3 - 3));
        if (*((char *)v3 - 25) < 0) {
LABEL_9:
        }
          operator delete(*(v3 - 6));
      }
      else if (*((char *)v3 - 25) < 0)
      {
        goto LABEL_9;
      }
      v3 -= 6;
      if (v3 == v2)
      {
        unint64_t v4 = *a1;
        goto LABEL_11;
      }
    }
  }
  return a1;
}

void sub_100225738(std::locale *a1)
{
  sub_100226204(a1);

  operator delete();
}

void sub_100225770(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  unint64_t v4 = *(char **)(a2 + 16);
  unsigned int v5 = *(char **)(a2 + 24);
  if (v4 == v5)
  {
    uint64_t v37 = 0;
    int v35 = *(unsigned __int8 *)(a1 + 168);
    goto LABEL_215;
  }
  if (!*(unsigned char *)(a1 + 171) || v4 + 1 == v5) {
    goto LABEL_58;
  }
  char v6 = *v4;
  LOBYTE(__src[0]) = *v4;
  char v7 = v4[1];
  BYTE1(__src[0]) = v7;
  if (*(unsigned char *)(a1 + 169))
  {
    LOBYTE(__src[0]) = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), v6);
    BYTE1(__src[0]) = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), v7);
  }
  uint64_t v8 = a1 + 16;
  sub_1002264C0(__src, a1 + 16, (unsigned char *)__src + 2, (uint64_t)&__p);
  if ((v138 & 0x80000000) == 0)
  {
    if (v138) {
      goto LABEL_8;
    }
LABEL_58:
    int v35 = 0;
    uint64_t v37 = 1;
    unsigned __int8 v39 = **(unsigned char **)(v2 + 16);
    unsigned __int8 v135 = v39;
    if (!*(unsigned char *)(a1 + 169)) {
      goto LABEL_60;
    }
    goto LABEL_59;
  }
  size_t v38 = __n;
  operator delete(__p);
  if (!v38) {
    goto LABEL_58;
  }
LABEL_8:
  uint64_t v9 = *(void *)(a1 + 112);
  uint64_t v10 = *(void *)(a1 + 120) - v9;
  if (v10)
  {
    uint64_t v11 = v10 >> 1;
    if ((unint64_t)(v10 >> 1) <= 1) {
      uint64_t v11 = 1;
    }
    BOOL v12 = (unsigned __int8 *)(v9 + 1);
    while (LOBYTE(__src[0]) != *(v12 - 1) || BYTE1(__src[0]) != *v12)
    {
      v12 += 2;
      if (!--v11) {
        goto LABEL_17;
      }
    }
    goto LABEL_212;
  }
LABEL_17:
  if (!*(unsigned char *)(a1 + 170) || *(void *)(a1 + 88) == *(void *)(a1 + 96))
  {
    int v35 = 0;
    goto LABEL_166;
  }
  sub_100226378(a1 + 16, __src, (unsigned char *)__src + 2);
  uint64_t v14 = *(void *)(a1 + 88);
  char v15 = v138;
  uint64_t v16 = *(void *)(a1 + 96) - v14;
  if (v16)
  {
    uint64_t v17 = 0;
    unint64_t v18 = v16 / 48;
    char v124 = v138;
    if (v138 >= 0) {
      size_t v19 = v138;
    }
    else {
      size_t v19 = __n;
    }
    if (v138 >= 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    if (v18 <= 1) {
      uint64_t v21 = 1;
    }
    else {
      uint64_t v21 = v16 / 48;
    }
    BOOL v22 = 1;
    do
    {
      int v23 = *(char *)(v14 + 23);
      if (v23 >= 0) {
        size_t v24 = *(unsigned __int8 *)(v14 + 23);
      }
      else {
        size_t v24 = *(void *)(v14 + 8);
      }
      if (v23 >= 0) {
        unint64_t v25 = (const void *)v14;
      }
      else {
        unint64_t v25 = *(const void **)v14;
      }
      if (v24 >= v19) {
        size_t v26 = v19;
      }
      else {
        size_t v26 = v24;
      }
      int v27 = memcmp(p_p, v25, v26);
      BOOL v28 = v19 >= v24;
      if (v27) {
        BOOL v28 = v27 >= 0;
      }
      if (v28)
      {
        int v29 = *(char *)(v14 + 47);
        if (v29 >= 0) {
          size_t v30 = *(unsigned __int8 *)(v14 + 47);
        }
        else {
          size_t v30 = *(void *)(v14 + 32);
        }
        if (v29 >= 0) {
          int64x2_t v31 = (const void *)(v14 + 24);
        }
        else {
          int64x2_t v31 = *(const void **)(v14 + 24);
        }
        if (v19 >= v30) {
          size_t v32 = v30;
        }
        else {
          size_t v32 = v19;
        }
        int v33 = memcmp(v31, p_p, v32);
        BOOL v34 = v30 >= v19;
        if (v33) {
          BOOL v34 = v33 >= 0;
        }
        if (v34)
        {
          int v35 = 1;
          int v36 = 5;
          goto LABEL_161;
        }
      }
      BOOL v22 = ++v17 < v18;
      v14 += 48;
    }
    while (v21 != v17);
    int v36 = 0;
    int v35 = 0;
LABEL_161:
    uint64_t v8 = a1 + 16;
    char v15 = v124;
  }
  else
  {
    BOOL v22 = 0;
    int v36 = 0;
    int v35 = 0;
  }
  if (v15 < 0) {
    operator delete(__p);
  }
  if (!v22)
  {
LABEL_166:
    if (*(void *)(a1 + 136) == *(void *)(a1 + 144)) {
      goto LABEL_194;
    }
    int v132 = v35;
    sub_100226718(__src, v8, (unsigned char *)__src + 2, (uint64_t)&__p);
    uint64_t v89 = *(void *)(a1 + 136);
    uint64_t v90 = *(void *)(a1 + 144) - v89;
    if (v90)
    {
      unint64_t v91 = v90 / 24;
      size_t v92 = __n;
      if (v138 >= 0) {
        size_t v93 = v138;
      }
      else {
        size_t v93 = __n;
      }
      if (v138 < 0)
      {
        int v129 = v138;
        uint64_t v109 = 0;
        long long v110 = __p;
        if (v91 <= 1) {
          uint64_t v111 = 1;
        }
        else {
          uint64_t v111 = v90 / 24;
        }
        BOOL v96 = 1;
        do
        {
          uint64_t v112 = *(unsigned __int8 *)(v89 + 23);
          int v113 = (char)v112;
          if ((v112 & 0x80u) != 0) {
            uint64_t v112 = *(void *)(v89 + 8);
          }
          if (v93 == v112)
          {
            long long v114 = v113 >= 0 ? (const void *)v89 : *(const void **)v89;
            if (!memcmp(v110, v114, v92))
            {
              int v35 = 1;
              int v36 = 5;
              if ((v129 & 0x80000000) == 0) {
                goto LABEL_190;
              }
              goto LABEL_189;
            }
          }
          BOOL v96 = ++v109 < v91;
          v89 += 24;
        }
        while (v111 != v109);
        int v36 = 0;
        int v35 = v132;
        if ((v129 & 0x80000000) == 0) {
          goto LABEL_190;
        }
LABEL_189:
        operator delete(__p);
        goto LABEL_190;
      }
      if (!v138)
      {
        uint64_t v115 = *(unsigned __int8 *)(v89 + 23);
        if ((v115 & 0x80u) != 0) {
          uint64_t v115 = *(void *)(v89 + 8);
        }
        if (v115 == v138)
        {
          int v35 = 1;
          goto LABEL_214;
        }
        unint64_t v116 = 0;
        if (v91 <= 1) {
          uint64_t v117 = 1;
        }
        else {
          uint64_t v117 = v91;
        }
        uint64_t v118 = v117 - 1;
        int v119 = (uint64_t *)(v89 + 32);
        while (v118 != v116)
        {
          ++v116;
          uint64_t v120 = *((unsigned __int8 *)v119 + 15);
          uint64_t v122 = *v119;
          v119 += 3;
          uint64_t v121 = v122;
          if ((v120 & 0x80u) != 0) {
            uint64_t v120 = v121;
          }
          if (v93 == v120)
          {
            BOOL v96 = v116 < v91;
            int v35 = 1;
            int v36 = 5;
            goto LABEL_190;
          }
        }
        BOOL v96 = 0;
        int v36 = 0;
LABEL_190:
        if (v96) {
          goto LABEL_191;
        }
LABEL_194:
        if (SLOBYTE(__src[0]) < 0)
        {
          int v105 = *(_DWORD *)(a1 + 164);
        }
        else
        {
          int v102 = *(_DWORD *)(a1 + 160);
          uint64_t v103 = *(void *)(*(void *)(a1 + 24) + 16);
          int v104 = *(_DWORD *)(v103 + 4 * LOBYTE(__src[0]));
          if (((v104 & v102) != 0 || LOBYTE(__src[0]) == 95 && (v102 & 0x80) != 0)
            && (SBYTE1(__src[0]) & 0x80000000) == 0
            && ((*(_DWORD *)(v103 + 4 * BYTE1(__src[0])) & v102) != 0 || (v102 & 0x80) != 0 && BYTE1(__src[0]) == 95))
          {
            goto LABEL_212;
          }
          int v105 = *(_DWORD *)(a1 + 164);
          if ((v104 & v105) != 0 || LOBYTE(__src[0]) == 95 && (v105 & 0x80) != 0)
          {
LABEL_211:
            int v106 = v35;
LABEL_213:
            int v35 = v106;
            goto LABEL_214;
          }
        }
        if ((SBYTE1(__src[0]) & 0x80000000) == 0)
        {
          if ((*(_DWORD *)(*(void *)(*(void *)(a1 + 24) + 16) + 4 * BYTE1(__src[0])) & v105) == 0)
          {
            int v106 = 1;
            if (BYTE1(__src[0]) != 95 || (v105 & 0x80) == 0) {
              goto LABEL_213;
            }
          }
          goto LABEL_211;
        }
LABEL_212:
        int v106 = 1;
        goto LABEL_213;
      }
      uint64_t v94 = 0;
      if (v91 <= 1) {
        uint64_t v95 = 1;
      }
      else {
        uint64_t v95 = v90 / 24;
      }
      BOOL v96 = 1;
      do
      {
        int v97 = (unsigned __int8 *)(v89 + 24 * v94);
        uint64_t v98 = v97[23];
        int v99 = (char)v98;
        if ((v98 & 0x80u) != 0) {
          uint64_t v98 = *((void *)v97 + 1);
        }
        if (v93 == v98)
        {
          if (v99 < 0) {
            int v97 = *(unsigned __int8 **)v97;
          }
          std::string::size_type v100 = &__p;
          uint64_t v101 = v138;
          while (*(unsigned __int8 *)v100 == *v97)
          {
            std::string::size_type v100 = (void **)((char *)v100 + 1);
            ++v97;
            if (!--v101)
            {
              int v35 = 1;
              int v36 = 5;
              if ((v138 & 0x80000000) == 0) {
                goto LABEL_190;
              }
              goto LABEL_189;
            }
          }
        }
        BOOL v96 = ++v94 < v91;
      }
      while (v94 != v95);
    }
    BOOL v96 = 0;
    int v36 = 0;
    if ((v138 & 0x80000000) == 0) {
      goto LABEL_190;
    }
    goto LABEL_189;
  }
LABEL_191:
  if (v36)
  {
LABEL_214:
    uint64_t v37 = 2;
    goto LABEL_215;
  }
  uint64_t v37 = 2;
  unsigned __int8 v39 = **(unsigned char **)(v2 + 16);
  unsigned __int8 v135 = v39;
  if (*(unsigned char *)(a1 + 169))
  {
LABEL_59:
    unsigned __int8 v39 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), (char)v39);
    unsigned __int8 v135 = v39;
  }
LABEL_60:
  unint64_t v40 = *(unsigned __int8 **)(a1 + 40);
  unint64_t v41 = *(void *)(a1 + 48) - (void)v40;
  if (v41)
  {
    if (v41 <= 1) {
      unint64_t v41 = 1;
    }
    while (1)
    {
      int v42 = *v40++;
      if (v42 == v39) {
        break;
      }
      if (!--v41) {
        goto LABEL_65;
      }
    }
LABEL_76:
    int v35 = 1;
    goto LABEL_215;
  }
LABEL_65:
  unsigned int v43 = *(_DWORD *)(a1 + 164);
  if (v43 || *(void *)(a1 + 64) != *(void *)(a1 + 72))
  {
    if ((v39 & 0x80) != 0 || (*(_DWORD *)(*(void *)(*(void *)(a1 + 24) + 16) + 4 * v39) & v43) == 0) {
      int v44 = (v39 == 95) & (v43 >> 7);
    }
    else {
      LOBYTE(v44) = 1;
    }
    uint64_t v45 = *(void **)(a1 + 72);
    uint64_t v46 = memchr(*(void **)(a1 + 64), (char)v39, (size_t)v45 - *(void *)(a1 + 64));
    uint64_t v47 = v46 ? v46 : v45;
    if ((v44 & 1) == 0 && v47 == v45) {
      goto LABEL_76;
    }
  }
  uint64_t v49 = *(void *)(a1 + 88);
  uint64_t v48 = *(void *)(a1 + 96);
  if (v49 != v48)
  {
    if (*(unsigned char *)(a1 + 170))
    {
      char v138 = 1;
      LOWORD(__p) = v39;
      (*(void (**)(void **__return_ptr))(**(void **)(a1 + 32) + 32))(__src);
      if (v138 < 0) {
        operator delete(__p);
      }
      uint64_t v49 = *(void *)(a1 + 88);
      uint64_t v50 = v134;
      uint64_t v51 = *(void *)(a1 + 96) - v49;
      if (v51)
      {
LABEL_82:
        uint64_t v125 = v2;
        uint64_t v127 = v37;
        int v130 = v35;
        uint64_t v52 = 0;
        unint64_t v53 = v51 / 48;
        char v123 = v50;
        if ((v50 & 0x80u) == 0) {
          long long v54 = (void *)v50;
        }
        else {
          long long v54 = __src[1];
        }
        if ((v50 & 0x80u) == 0) {
          char v55 = __src;
        }
        else {
          char v55 = (void **)__src[0];
        }
        if (v53 <= 1) {
          uint64_t v56 = 1;
        }
        else {
          uint64_t v56 = v51 / 48;
        }
        BOOL v57 = 1;
        do
        {
          int v58 = *(char *)(v49 + 23);
          if (v58 >= 0) {
            size_t v59 = *(unsigned __int8 *)(v49 + 23);
          }
          else {
            size_t v59 = *(void *)(v49 + 8);
          }
          if (v58 >= 0) {
            std::string::size_type v60 = (const void *)v49;
          }
          else {
            std::string::size_type v60 = *(const void **)v49;
          }
          if (v59 >= (unint64_t)v54) {
            size_t v61 = (size_t)v54;
          }
          else {
            size_t v61 = v59;
          }
          int v62 = memcmp(v55, v60, v61);
          BOOL v63 = (unint64_t)v54 >= v59;
          if (v62) {
            BOOL v63 = v62 >= 0;
          }
          if (v63)
          {
            int v64 = *(char *)(v49 + 47);
            if (v64 >= 0) {
              size_t v65 = *(unsigned __int8 *)(v49 + 47);
            }
            else {
              size_t v65 = *(void *)(v49 + 32);
            }
            if (v64 >= 0) {
              char v66 = (const void *)(v49 + 24);
            }
            else {
              char v66 = *(const void **)(v49 + 24);
            }
            if ((unint64_t)v54 >= v65) {
              size_t v67 = v65;
            }
            else {
              size_t v67 = (size_t)v54;
            }
            int v68 = memcmp(v66, v55, v67);
            BOOL v69 = v65 >= (unint64_t)v54;
            if (v68) {
              BOOL v69 = v68 >= 0;
            }
            if (v69)
            {
              int v35 = 1;
              uint64_t v2 = v125;
              uint64_t v37 = v127;
              if ((v123 & 0x80) == 0) {
                goto LABEL_122;
              }
              goto LABEL_121;
            }
          }
          BOOL v57 = ++v52 < v53;
          v49 += 48;
        }
        while (v56 != v52);
        uint64_t v2 = v125;
        uint64_t v37 = v127;
        int v35 = v130;
        if ((v123 & 0x80) == 0) {
          goto LABEL_122;
        }
        goto LABEL_121;
      }
    }
    else
    {
      unsigned __int8 v134 = 1;
      LOWORD(__src[0]) = v39;
      uint64_t v50 = 1;
      uint64_t v51 = v48 - v49;
      if (v51) {
        goto LABEL_82;
      }
    }
    BOOL v57 = 0;
    if ((v50 & 0x80) == 0)
    {
LABEL_122:
      if (v57) {
        goto LABEL_215;
      }
      goto LABEL_123;
    }
LABEL_121:
    operator delete(__src[0]);
    goto LABEL_122;
  }
LABEL_123:
  if (*(void *)(a1 + 136) == *(void *)(a1 + 144))
  {
LABEL_154:
    if ((v39 & 0x80) != 0) {
      goto LABEL_215;
    }
    unsigned int v87 = *(_DWORD *)(a1 + 160);
    if ((*(_DWORD *)(*(void *)(*(void *)(a1 + 24) + 16) + 4 * v39) & v87) == 0)
    {
      int v88 = (v87 >> 7) & 1;
      if (v39 != 95) {
        int v88 = 0;
      }
      if (v88 != 1) {
        goto LABEL_215;
      }
    }
    goto LABEL_76;
  }
  sub_100226718(&v135, a1 + 16, &__p, (uint64_t)&__p);
  uint64_t v70 = *(void *)(a1 + 136);
  uint64_t v71 = v138;
  uint64_t v72 = *(void *)(a1 + 144) - v70;
  if (v72)
  {
    uint64_t v128 = v37;
    int v131 = v35;
    uint64_t v73 = 0;
    unint64_t v74 = v72 / 24;
    uint64_t v76 = __p;
    size_t v75 = __n;
    if (v138 >= 0) {
      size_t v77 = v138;
    }
    else {
      size_t v77 = __n;
    }
    if (v74 <= 1) {
      uint64_t v78 = 1;
    }
    else {
      uint64_t v78 = v72 / 24;
    }
    BOOL v79 = 1;
    while (1)
    {
      uint64_t v81 = (unsigned __int8 **)(v70 + 24 * v73);
      std::string::size_type v82 = (unsigned __int8 *)*((unsigned __int8 *)v81 + 23);
      int v83 = (char)v82;
      if ((char)v82 < 0) {
        std::string::size_type v82 = v81[1];
      }
      if ((unsigned __int8 *)v77 == v82)
      {
        if (v83 >= 0) {
          std::exception_ptr v84 = (unsigned __int8 *)(v70 + 24 * v73);
        }
        else {
          std::exception_ptr v84 = *v81;
        }
        if ((v71 & 0x80) != 0)
        {
          uint64_t v126 = v70;
          int v80 = memcmp(v76, v84, v75);
          uint64_t v70 = v126;
          if (!v80)
          {
            int v35 = 1;
            uint64_t v37 = v128;
            goto LABEL_151;
          }
        }
        else
        {
          if (!v71)
          {
            int v35 = 1;
            uint64_t v37 = v128;
            if (!v79) {
              goto LABEL_153;
            }
            goto LABEL_215;
          }
          __int16 v85 = &__p;
          uint64_t v86 = v71;
          while (*(unsigned __int8 *)v85 == *v84)
          {
            __int16 v85 = (void **)((char *)v85 + 1);
            ++v84;
            if (!--v86)
            {
              int v35 = 1;
              uint64_t v37 = v128;
              if ((v71 & 0x80) == 0) {
                goto LABEL_152;
              }
              goto LABEL_151;
            }
          }
        }
      }
      BOOL v79 = ++v73 < v74;
      if (v73 == v78)
      {
        int v35 = v131;
        uint64_t v37 = v128;
        if ((v71 & 0x80) == 0) {
          goto LABEL_152;
        }
        goto LABEL_151;
      }
    }
  }
  BOOL v79 = 0;
  if (v138 < 0) {
LABEL_151:
  }
    operator delete(__p);
LABEL_152:
  if (!v79)
  {
LABEL_153:
    unsigned __int8 v39 = v135;
    goto LABEL_154;
  }
LABEL_215:
  if (v35 == *(unsigned __int8 *)(a1 + 168))
  {
    uint64_t v107 = 0;
    int v108 = -993;
  }
  else
  {
    *(void *)(v2 + 16) += v37;
    uint64_t v107 = *(void *)(a1 + 8);
    int v108 = -995;
  }
  *(_DWORD *)uint64_t v2 = v108;
  *(void *)(v2 + 80) = v107;
}

void sub_1002261E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::locale *sub_100226204(std::locale *a1)
{
  a1->__locale_ = (std::locale::__imp *)off_100461B08;
  locale = a1[17].__locale_;
  if (locale)
  {
    uint64_t v3 = a1[18].__locale_;
    unint64_t v4 = a1[17].__locale_;
    if (v3 != locale)
    {
      do
      {
        if (*((char *)v3 - 1) < 0) {
          operator delete(*((void **)v3 - 3));
        }
        uint64_t v3 = (std::locale::__imp *)((char *)v3 - 24);
      }
      while (v3 != locale);
      unint64_t v4 = a1[17].__locale_;
    }
    a1[18].__locale_ = locale;
    operator delete(v4);
  }
  unsigned int v5 = a1[14].__locale_;
  if (v5)
  {
    a1[15].__locale_ = v5;
    operator delete(v5);
  }
  char v6 = a1[11].__locale_;
  if (v6)
  {
    char v7 = a1[12].__locale_;
    uint64_t v8 = a1[11].__locale_;
    if (v7 == v6)
    {
LABEL_21:
      a1[12].__locale_ = v6;
      operator delete(v8);
      goto LABEL_22;
    }
    while (1)
    {
      if (*((char *)v7 - 1) < 0)
      {
        operator delete(*((void **)v7 - 3));
        if (*((char *)v7 - 25) < 0) {
LABEL_19:
        }
          operator delete(*((void **)v7 - 6));
      }
      else if (*((char *)v7 - 25) < 0)
      {
        goto LABEL_19;
      }
      char v7 = (std::locale::__imp *)((char *)v7 - 48);
      if (v7 == v6)
      {
        uint64_t v8 = a1[11].__locale_;
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v9 = a1[8].__locale_;
  if (v9)
  {
    a1[9].__locale_ = v9;
    operator delete(v9);
  }
  uint64_t v10 = a1[5].__locale_;
  if (v10)
  {
    a1[6].__locale_ = v10;
    operator delete(v10);
  }
  std::locale::~locale(a1 + 2);
  a1->__locale_ = (std::locale::__imp *)off_1004617C0;
  uint64_t v11 = a1[1].__locale_;
  if (v11) {
    (*(void (**)(std::locale::__imp *))(*(void *)v11 + 8))(v11);
  }
  return a1;
}

void sub_100226378(uint64_t a1, unsigned char *__src, unsigned char *a3)
{
  size_t v3 = a3 - __src;
  if ((unint64_t)(a3 - __src) >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  if (v3 <= 0x16)
  {
    HIBYTE(v14) = (_BYTE)a3 - (_BYTE)__src;
    p_dst = (void **)&__dst;
    if (__src == a3) {
      goto LABEL_9;
    }
LABEL_8:
    memcpy(p_dst, __src, v3);
    p_dst = (void **)((char *)p_dst + v3);
    goto LABEL_9;
  }
  uint64_t v8 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v3 | 7) != 0x17) {
    uint64_t v8 = v3 | 7;
  }
  uint64_t v9 = v8 + 1;
  p_dst = (void **)operator new(v8 + 1);
  size_t v13 = v3;
  int64_t v14 = v9 | 0x8000000000000000;
  long long __dst = p_dst;
  if (__src != a3) {
    goto LABEL_8;
  }
LABEL_9:
  *(unsigned char *)p_dst = 0;
  size_t v10 = HIBYTE(v14);
  if (v14 >= 0) {
    uint64_t v11 = (void **)&__dst;
  }
  else {
    uint64_t v11 = __dst;
  }
  if (v14 < 0) {
    size_t v10 = v13;
  }
  (*(void (**)(void, void **, char *))(**(void **)(a1 + 16) + 32))(*(void *)(a1 + 16), v11, (char *)v11 + v10);
  if (SHIBYTE(v14) < 0) {
    operator delete(__dst);
  }
}

void sub_1002264A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002264C0(unsigned char *__src@<X1>, uint64_t a2@<X0>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  size_t v5 = a3 - __src;
  if ((unint64_t)(a3 - __src) >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  if (v5 <= 0x16)
  {
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = (_BYTE)a3 - (_BYTE)__src;
    p_dst = &__dst;
    if (__src == a3) {
      goto LABEL_9;
    }
LABEL_8:
    memcpy(p_dst, __src, v5);
    p_dst = (std::string *)((char *)p_dst + v5);
    goto LABEL_9;
  }
  uint64_t v10 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v5 | 7) != 0x17) {
    uint64_t v10 = v5 | 7;
  }
  uint64_t v11 = v10 + 1;
  p_dst = (std::string *)operator new(v10 + 1);
  __dst.__r_.__value_.__l.__size_ = v5;
  __dst.__r_.__value_.__r.__words[2] = v11 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  if (__src != a3) {
    goto LABEL_8;
  }
LABEL_9:
  p_dst->__r_.__value_.__s.__data_[0] = 0;
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    if (!__dst.__r_.__value_.__l.__size_) {
      goto LABEL_17;
    }
    BOOL v12 = (std::string *)__dst.__r_.__value_.__r.__words[0];
  }
  else
  {
    if (!*((unsigned char *)&__dst.__r_.__value_.__s + 23)) {
      return;
    }
    BOOL v12 = &__dst;
  }
  std::__get_collation_name(&v17, (const char *)v12);
  *(_OWORD *)a4 = *(_OWORD *)&v17.__r_.__value_.__l.__data_;
  unint64_t v13 = v17.__r_.__value_.__r.__words[2];
  *(void *)(a4 + 16) = *((void *)&v17.__r_.__value_.__l + 2);
  unint64_t v14 = HIBYTE(v13);
  if ((v14 & 0x80u) != 0) {
    unint64_t v14 = *(void *)(a4 + 8);
  }
  if (v14) {
    goto LABEL_17;
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    if (__dst.__r_.__value_.__l.__size_ >= 3) {
      goto LABEL_17;
    }
  }
  else if (HIBYTE(__dst.__r_.__value_.__r.__words[2]) >= 3u)
  {
    return;
  }
  (*(void (**)(std::string *__return_ptr))(**(void **)(a2 + 16) + 32))(&v17);
  if (*(char *)(a4 + 23) < 0) {
    operator delete(*(void **)a4);
  }
  *(std::string *)a4 = v17;
  if ((*(char *)(a4 + 23) & 0x80000000) == 0)
  {
    int v15 = *(unsigned __int8 *)(a4 + 23);
    if (v15 != 12 && v15 != 1)
    {
      *(unsigned char *)a4 = 0;
      *(unsigned char *)(a4 + 23) = 0;
      goto LABEL_17;
    }
    goto LABEL_31;
  }
  uint64_t v16 = *(void *)(a4 + 8);
  if (v16 == 1 || v16 == 12)
  {
LABEL_31:
    std::string::operator=((std::string *)a4, &__dst);
    goto LABEL_17;
  }
  **(unsigned char **)a4 = 0;
  *(void *)(a4 + 8) = 0;
LABEL_17:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
}

void sub_1002266D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (*(char *)(v17 + 23) < 0)
  {
    operator delete(*(void **)v17);
    if ((a17 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a17 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100226718(unsigned char *__src@<X1>, uint64_t a2@<X0>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  size_t v5 = a3 - __src;
  if ((unint64_t)(a3 - __src) >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  if (v5 <= 0x16)
  {
    HIBYTE(v19) = (_BYTE)a3 - (_BYTE)__src;
    p_dst = (void **)&__dst;
    if (__src == a3) {
      goto LABEL_9;
    }
LABEL_8:
    memcpy(p_dst, __src, v5);
    p_dst = (void **)((char *)p_dst + v5);
    goto LABEL_9;
  }
  uint64_t v10 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v5 | 7) != 0x17) {
    uint64_t v10 = v5 | 7;
  }
  uint64_t v11 = v10 + 1;
  p_dst = (void **)operator new(v10 + 1);
  size_t v18 = v5;
  int64_t v19 = v11 | 0x8000000000000000;
  std::string __dst = p_dst;
  if (__src != a3) {
    goto LABEL_8;
  }
LABEL_9:
  *(unsigned char *)p_dst = 0;
  size_t v12 = HIBYTE(v19);
  if (v19 >= 0) {
    unint64_t v13 = (void **)&__dst;
  }
  else {
    unint64_t v13 = __dst;
  }
  if (v19 < 0) {
    size_t v12 = v18;
  }
  (*(void (**)(void, void **, char *))(**(void **)(a2 + 16) + 32))(*(void *)(a2 + 16), v13, (char *)v13 + v12);
  uint64_t v14 = *(unsigned __int8 *)(a4 + 23);
  int v15 = (char)v14;
  if ((v14 & 0x80u) != 0) {
    uint64_t v14 = *(void *)(a4 + 8);
  }
  if (v14 == 1)
  {
LABEL_25:
    if ((SHIBYTE(v19) & 0x80000000) == 0) {
      return;
    }
    goto LABEL_26;
  }
  if (v14 == 12)
  {
    if (v15 >= 0) {
      uint64_t v16 = (unsigned char *)a4;
    }
    else {
      uint64_t v16 = *(unsigned char **)a4;
    }
    v16[11] = v16[3];
    if (SHIBYTE(v19) < 0) {
      goto LABEL_26;
    }
    return;
  }
  if ((v15 & 0x80000000) == 0)
  {
    *(unsigned char *)a4 = 0;
    *(unsigned char *)(a4 + 23) = 0;
    goto LABEL_25;
  }
  **(unsigned char **)a4 = 0;
  *(void *)(a4 + 8) = 0;
  if (SHIBYTE(v19) < 0) {
LABEL_26:
  }
    operator delete(__dst);
}

void sub_1002268AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002268C8()
{
  exception = (std::regex_error *)__cxa_allocate_exception(0x18uLL);
  std::regex_error::regex_error(exception, error_brack);
}

void sub_10022690C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

char *sub_100226920(uint64_t a1, char *a2, char *a3, uint64_t a4)
{
  unint64_t v4 = a2;
  if (a2 == a3) {
    return v4;
  }
  int v5 = *a2;
  if (v5 == 93) {
    return v4;
  }
  char v6 = (char *)a4;
  memset(&v33, 0, sizeof(v33));
  if (a2 + 1 == a3 || v5 != 91)
  {
LABEL_10:
    int v11 = *(_DWORD *)(a1 + 24) & 0x1F0;
    goto LABEL_11;
  }
  int v9 = a2[1];
  if (v9 != 46)
  {
    if (v9 != 58)
    {
      if (v9 == 61)
      {
        char v6 = sub_100226E5C(a1, a2 + 2, a3, a4);
        char v10 = 0;
        if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_62;
        }
        goto LABEL_61;
      }
      goto LABEL_10;
    }
    int64_t v19 = a2 + 2;
    if (a3 - (v4 + 2) >= 2)
    {
      uint64_t v20 = 0;
      uint64_t v21 = (unsigned __int8 *)v4;
      if (v4[2] != 58) {
        goto LABEL_37;
      }
LABEL_36:
      if (v21[3] == 93)
      {
        int v27 = &v4[v20 + 2];
        if (v27 != a3)
        {
          int v28 = sub_100228704(a1, v19, v27, *(_DWORD *)(a1 + 24) & 1);
          if (!v28) {
            sub_1002286AC();
          }
          char v10 = 0;
          *((_DWORD *)v6 + 40) |= v28;
          char v6 = &v4[v20 + 4];
          if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
            goto LABEL_61;
          }
          goto LABEL_62;
        }
      }
      else
      {
LABEL_37:
        while (a3 - v4 - 4 != v20)
        {
          uint64_t v21 = (unsigned __int8 *)&v4[++v20];
          if (v4[v20 + 2] == 58) {
            goto LABEL_36;
          }
        }
      }
    }
LABEL_83:
    sub_1002268C8();
  }
  BOOL v22 = a2 + 2;
  if (a3 - (v4 + 2) < 2) {
    goto LABEL_83;
  }
  uint64_t v23 = a3 - v4 - 4;
  size_t v24 = v4 + 2;
  unint64_t v25 = v22 + 1;
  if (*v22 != 46) {
    goto LABEL_43;
  }
LABEL_42:
  if (*v25 != 93)
  {
LABEL_43:
    while (v23)
    {
      --v23;
      size_t v24 = v25;
      int v26 = *v25++;
      if (v26 == 46) {
        goto LABEL_42;
      }
    }
    goto LABEL_83;
  }
  if (v24 == a3) {
    goto LABEL_83;
  }
  sub_100228244(v22, a1, v24, (uint64_t)&v34);
  if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v33.__r_.__value_.__l.__data_);
  }
  std::string v33 = v34;
  std::string::size_type size = HIBYTE(v34.__r_.__value_.__r.__words[2]);
  if ((v34.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v33.__r_.__value_.__l.__size_;
  }
  if (size - 1 >= 2) {
    sub_1002281EC();
  }
  unint64_t v4 = v24 + 2;
  int v11 = *(_DWORD *)(a1 + 24) & 0x1F0;
  uint64_t v14 = v4;
  if (!size)
  {
LABEL_11:
    if ((v11 | 0x40) == 0x40)
    {
      int v12 = *v4;
      if (v12 == 92)
      {
        unint64_t v13 = v4 + 1;
        if (v11)
        {
          uint64_t v14 = sub_100227414(a1, v13, a3, &v33);
        }
        else
        {
          uint64_t v14 = (char *)sub_1002271CC(a1, (unsigned __int8 *)v13, (unsigned __int8 *)a3, &v33, (uint64_t)v6);
          int v11 = 0;
        }
        goto LABEL_17;
      }
    }
    else
    {
      LOBYTE(v12) = *v4;
    }
    std::string::operator=(&v33, v12);
    uint64_t v14 = v4 + 1;
  }
LABEL_17:
  if (v14 == a3
    || (int v15 = *v14, v15 == 93)
    || (uint64_t v17 = v14 + 1, v14 + 1 == a3)
    || v15 != 45
    || *v17 == 93)
  {
    if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v33.__r_.__value_.__l.__size_) {
        goto LABEL_60;
      }
      if (v33.__r_.__value_.__l.__size_ != 1)
      {
        uint64_t v16 = (std::string *)v33.__r_.__value_.__r.__words[0];
LABEL_59:
        sub_100227DF0((uint64_t)v6, v16->__r_.__value_.__s.__data_[0], v16->__r_.__value_.__s.__data_[1]);
LABEL_60:
        char v10 = 1;
        unint64_t v4 = v14;
        if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_62;
        }
        goto LABEL_61;
      }
      uint64_t v16 = (std::string *)v33.__r_.__value_.__r.__words[0];
    }
    else
    {
      if (!*((unsigned char *)&v33.__r_.__value_.__s + 23)) {
        goto LABEL_60;
      }
      uint64_t v16 = &v33;
      if (HIBYTE(v33.__r_.__value_.__r.__words[2]) != 1) {
        goto LABEL_59;
      }
    }
    sub_100225004((uint64_t)v6, v16->__r_.__value_.__s.__data_[0]);
    goto LABEL_60;
  }
  memset(&v34, 0, sizeof(v34));
  unint64_t v4 = v14 + 2;
  if (v14 + 2 == a3 || *v17 != 91 || *v4 != 46)
  {
    if ((v11 | 0x40) == 0x40)
    {
      LODWORD(v17) = *v17;
      if (v17 == 92)
      {
        if (v11) {
          size_t v18 = sub_100227414(a1, v14 + 2, a3, &v34);
        }
        else {
          size_t v18 = (char *)sub_1002271CC(a1, (unsigned __int8 *)v14 + 2, (unsigned __int8 *)a3, &v34, (uint64_t)v6);
        }
        goto LABEL_73;
      }
    }
    else
    {
      LOBYTE(v17) = *v17;
    }
    std::string::operator=(&v34, (std::string::value_type)v17);
    goto LABEL_74;
  }
  size_t v18 = sub_1002270CC(a1, v14 + 3, a3, (uint64_t)&v34);
LABEL_73:
  unint64_t v4 = v18;
LABEL_74:
  std::string v32 = v33;
  memset(&v33, 0, sizeof(v33));
  std::string __p = v34;
  memset(&v34, 0, sizeof(v34));
  sub_100227860((uint64_t)v6, (char *)&v32, (uint64_t)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_76:
      if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_77;
      }
LABEL_81:
      operator delete(v34.__r_.__value_.__l.__data_);
      char v10 = 1;
      if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
        goto LABEL_61;
      }
      goto LABEL_62;
    }
  }
  else if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_76;
  }
  operator delete(v32.__r_.__value_.__l.__data_);
  if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_81;
  }
LABEL_77:
  char v10 = 1;
  if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
LABEL_61:
  }
    operator delete(v33.__r_.__value_.__l.__data_);
LABEL_62:
  if (v10) {
    return v4;
  }
  return v6;
}

void sub_100226DCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v28 - 49) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  if ((*(char *)(v28 - 49) & 0x80000000) == 0)
  {
LABEL_4:
    if ((a28 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }
LABEL_8:
  operator delete(*(void **)(v28 - 72));
  if ((a28 & 0x80000000) == 0) {
LABEL_5:
  }
    _Unwind_Resume(exception_object);
LABEL_9:
  operator delete(a23);
  _Unwind_Resume(exception_object);
}

char *sub_100226E5C(uint64_t a1, char *__src, char *a3, uint64_t a4)
{
  if (a3 - __src < 2 || a3 - 1 == __src) {
    goto LABEL_39;
  }
  uint64_t v7 = 0;
  uint64_t v8 = __src;
  if (*__src != 61) {
    goto LABEL_5;
  }
LABEL_4:
  if (v8[1] != 93)
  {
LABEL_5:
    while (a3 - __src - 2 != v7)
    {
      uint64_t v8 = &__src[++v7];
      if (__src[v7] == 61) {
        goto LABEL_4;
      }
    }
LABEL_39:
    sub_1002268C8();
  }
  if (&__src[v7] == a3) {
    goto LABEL_39;
  }
  sub_100228244(__src, a1, &__src[v7], (uint64_t)&v20);
  if (((char)v22 & 0x80000000) == 0)
  {
    uint64_t v9 = v22;
    if (v22)
    {
      char v10 = (char *)&v20;
      goto LABEL_14;
    }
LABEL_40:
    sub_1002281EC();
  }
  uint64_t v9 = v21;
  if (!v21) {
    goto LABEL_40;
  }
  char v10 = (char *)v20;
LABEL_14:
  sub_10022849C(a1, (uint64_t)v10, &v10[v9], (uint64_t)__p);
  int v11 = (void *)HIBYTE(v19);
  if (v19 < 0) {
    int v11 = __p[1];
  }
  if (v11)
  {
    unint64_t v12 = *(void *)(a4 + 144);
    if (v12 >= *(void *)(a4 + 152))
    {
      *(void *)(a4 + 144) = sub_100013348((char **)(a4 + 136), (uint64_t)__p);
      if (SHIBYTE(v19) < 0) {
        goto LABEL_37;
      }
    }
    else
    {
      if (SHIBYTE(v19) < 0)
      {
        sub_1000559FC(*(unsigned char **)(a4 + 144), __p[0], (unint64_t)__p[1]);
      }
      else
      {
        long long v13 = *(_OWORD *)__p;
        *(void *)(v12 + 16) = v19;
        *(_OWORD *)unint64_t v12 = v13;
      }
      *(void *)(a4 + 144) = v12 + 24;
      *(void *)(a4 + 144) = v12 + 24;
      if (SHIBYTE(v19) < 0) {
        goto LABEL_37;
      }
    }
  }
  else
  {
    uint64_t v14 = v22;
    if ((v22 & 0x80u) != 0) {
      uint64_t v14 = v21;
    }
    if (v14 == 2)
    {
      uint64_t v16 = (char *)&v20;
      if ((v22 & 0x80u) != 0) {
        uint64_t v16 = (char *)v20;
      }
      sub_100227DF0(a4, *v16, v16[1]);
    }
    else
    {
      if (v14 != 1) {
        sub_1002281EC();
      }
      int v15 = (char *)&v20;
      if ((v22 & 0x80u) != 0) {
        int v15 = (char *)v20;
      }
      sub_100225004(a4, *v15);
    }
    if (SHIBYTE(v19) < 0)
    {
LABEL_37:
      operator delete(__p[0]);
      if ((char)v22 < 0) {
        goto LABEL_38;
      }
      return &__src[v7 + 2];
    }
  }
  if ((char)v22 < 0) {
LABEL_38:
  }
    operator delete(v20);
  return &__src[v7 + 2];
}

void sub_100227070(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  *(void *)(v20 + 144) = v21;
  if (a14 < 0)
  {
    operator delete(__p);
    if ((a20 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a20 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

char *sub_1002270CC(uint64_t a1, char *__src, char *a3, uint64_t a4)
{
  if (a3 - __src < 2 || a3 - 1 == __src) {
    goto LABEL_15;
  }
  uint64_t v6 = 0;
  uint64_t v7 = __src;
  if (*__src != 46) {
    goto LABEL_5;
  }
LABEL_4:
  if (v7[1] != 93)
  {
LABEL_5:
    while (a3 - __src - 2 != v6)
    {
      uint64_t v7 = &__src[++v6];
      if (__src[v6] == 46) {
        goto LABEL_4;
      }
    }
LABEL_15:
    sub_1002268C8();
  }
  if (&__src[v6] == a3) {
    goto LABEL_15;
  }
  sub_100228244(__src, a1, &__src[v6], (uint64_t)&v11);
  if (*(char *)(a4 + 23) < 0) {
    operator delete(*(void **)a4);
  }
  *(_OWORD *)a4 = v11;
  unint64_t v8 = v12;
  *(void *)(a4 + 16) = v12;
  unint64_t v9 = HIBYTE(v8);
  if ((v9 & 0x80u) != 0) {
    unint64_t v9 = *(void *)(a4 + 8);
  }
  if (v9 - 1 >= 2) {
    sub_1002281EC();
  }
  return &__src[v6 + 2];
}

unsigned __int8 *sub_1002271CC(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3, std::string *this, uint64_t a5)
{
  if (a2 == a3) {
    sub_100223988();
  }
  switch(*a2)
  {
    case 'D':
      *(_DWORD *)(a5 + 164) |= 0x400u;
      uint64_t result = a2 + 1;
      break;
    case 'E':
    case 'F':
    case 'G':
    case 'H':
    case 'I':
    case 'J':
    case 'K':
    case 'L':
    case 'M':
    case 'N':
    case 'O':
    case 'P':
    case 'Q':
    case 'R':
    case 'T':
    case 'U':
    case 'V':
    case 'X':
    case 'Y':
    case 'Z':
    case '[':
    case '\\':
    case ']':
    case '^':
    case '_':
    case 'a':
    case 'c':
    case 'e':
    case 'f':
    case 'g':
    case 'h':
    case 'i':
    case 'j':
    case 'k':
    case 'l':
    case 'm':
    case 'n':
    case 'o':
    case 'p':
    case 'q':
    case 'r':
    case 't':
    case 'u':
    case 'v':
      goto LABEL_6;
    case 'S':
      *(_DWORD *)(a5 + 164) |= 0x4000u;
      uint64_t result = a2 + 1;
      break;
    case 'W':
      *(_DWORD *)(a5 + 164) |= 0x500u;
      sub_100228868(a5, 95);
      uint64_t result = a2 + 1;
      break;
    case 'b':
      std::string::operator=(this, 8);
      uint64_t result = a2 + 1;
      break;
    case 'd':
      *(_DWORD *)(a5 + 160) |= 0x400u;
      uint64_t result = a2 + 1;
      break;
    case 's':
      *(_DWORD *)(a5 + 160) |= 0x4000u;
      uint64_t result = a2 + 1;
      break;
    case 'w':
      *(_DWORD *)(a5 + 160) |= 0x500u;
      sub_100225004(a5, 95);
      uint64_t result = a2 + 1;
      break;
    default:
      if (*a2)
      {
LABEL_6:
        uint64_t result = sub_100223D24(a1, a2, a3, this);
      }
      else
      {
        std::string::operator=(this, 0);
        uint64_t result = a2 + 1;
      }
      break;
  }
  return result;
}

char *sub_100227414(uint64_t a1, char *a2, char *a3, std::string *this)
{
  if (a2 == a3) {
LABEL_43:
  }
    sub_100223988();
  int v5 = *a2;
  switch(v5)
  {
    case '""':
    case '/':
    case '\\':
      if (!this) {
        sub_100224224(a1);
      }
      std::string::operator=(this, v5);
      return a2 + 1;
    case 'a':
      if (!this) {
        sub_100224224(a1);
      }
      std::string::operator=(this, 7);
      return a2 + 1;
    case 'b':
      if (!this) {
        sub_100224224(a1);
      }
      std::string::operator=(this, 8);
      return a2 + 1;
    case 'f':
      if (!this) {
        sub_100224224(a1);
      }
      std::string::operator=(this, 12);
      return a2 + 1;
    case 'n':
      if (!this) {
        sub_100224224(a1);
      }
      std::string::operator=(this, 10);
      return a2 + 1;
    case 'r':
      if (!this) {
        sub_100224224(a1);
      }
      std::string::operator=(this, 13);
      return a2 + 1;
    case 't':
      if (!this) {
        sub_100224224(a1);
      }
      std::string::operator=(this, 9);
      return a2 + 1;
    case 'v':
      if (!this) {
        sub_100224224(a1);
      }
      std::string::operator=(this, 11);
      return a2 + 1;
    default:
      if ((v5 & 0xFFFFFFF8) != 0x30) {
        goto LABEL_43;
      }
      uint64_t v7 = a2 + 1;
      if (a2 + 1 == a3)
      {
        uint64_t v7 = a3;
LABEL_32:
        std::string::value_type v12 = v5 - 48;
        if (!this) {
          goto LABEL_42;
        }
        goto LABEL_33;
      }
      if ((*v7 & 0xF8) != 0x30) {
        goto LABEL_32;
      }
      std::string::value_type v8 = *v7 + 8 * (v5 - 48) - 48;
      if (a2 + 2 == a3)
      {
        uint64_t v7 = a3;
        std::string::value_type v12 = v8;
        if (!this) {
          goto LABEL_42;
        }
      }
      else
      {
        char v9 = a2[2];
        int v10 = v9 & 0xF8;
        std::string::value_type v11 = v9 + 8 * v8 - 48;
        if (v10 == 48) {
          uint64_t v7 = a2 + 3;
        }
        else {
          uint64_t v7 = a2 + 2;
        }
        if (v10 == 48) {
          std::string::value_type v8 = v11;
        }
        std::string::value_type v12 = v8;
        if (!this) {
LABEL_42:
        }
          sub_100224224(a1);
      }
LABEL_33:
      std::string::operator=(this, v12);
      return v7;
  }
}

void sub_100227860(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = (uint64_t)a2;
  if (!*(unsigned char *)(a1 + 170))
  {
    uint64_t v16 = a2[23];
    if (a2[23] < 0)
    {
      if (*((void *)a2 + 1) != 1) {
        goto LABEL_74;
      }
    }
    else if (v16 != 1)
    {
LABEL_74:
      sub_100228EA8();
    }
    if (*(char *)(a3 + 23) < 0)
    {
      if (*(void *)(a3 + 8) != 1) {
        goto LABEL_74;
      }
    }
    else if (*(unsigned char *)(a3 + 23) != 1)
    {
      goto LABEL_74;
    }
    if (!*(unsigned char *)(a1 + 169))
    {
LABEL_67:
      *(_OWORD *)std::string __p = *(_OWORD *)v4;
      uint64_t v49 = *(void *)(v4 + 16);
      *(void *)(v4 + 8) = 0;
      *(void *)(v4 + 16) = 0;
      *(void *)uint64_t v4 = 0;
      *(_OWORD *)uint64_t v50 = *(_OWORD *)v3;
      uint64_t v51 = *(void *)(v3 + 16);
      *(void *)(v3 + 8) = 0;
      *(void *)(v3 + 16) = 0;
      *(void *)uint64_t v3 = 0;
      unint64_t v39 = *(void *)(a1 + 96);
      if (v39 < *(void *)(a1 + 104))
      {
        long long v40 = *(_OWORD *)__p;
        *(void *)(v39 + 16) = v49;
        *(_OWORD *)unint64_t v39 = v40;
        __p[1] = 0;
        uint64_t v49 = 0;
        __p[0] = 0;
        uint64_t v41 = v51;
        *(_OWORD *)(v39 + 24) = *(_OWORD *)v50;
        *(void *)(v39 + 40) = v41;
        v50[1] = 0;
        uint64_t v51 = 0;
        v50[0] = 0;
        *(void *)(a1 + 96) = v39 + 48;
        if (SHIBYTE(v49) < 0) {
          goto LABEL_69;
        }
        return;
      }
      int v42 = sub_100228F00((void **)(a1 + 88), (uint64_t)__p);
      int v43 = SHIBYTE(v51);
      *(void *)(a1 + 96) = v42;
      if ((v43 & 0x80000000) == 0)
      {
        if (SHIBYTE(v49) < 0) {
          goto LABEL_69;
        }
        return;
      }
      operator delete(v50[0]);
      if ((SHIBYTE(v49) & 0x80000000) == 0) {
        return;
      }
LABEL_69:
      operator delete(__p[0]);
      return;
    }
    std::string v34 = a2;
    if ((v16 & 0x80) != 0) {
      std::string v34 = *(char **)a2;
    }
    char v35 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), *v34);
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = v35;
      int v36 = (char *)v3;
      if ((*(char *)(v3 + 23) & 0x80000000) == 0) {
        goto LABEL_64;
      }
    }
    else
    {
      *(unsigned char *)uint64_t v4 = v35;
      int v36 = (char *)v3;
      if ((*(char *)(v3 + 23) & 0x80000000) == 0)
      {
LABEL_64:
        char v37 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), *v36);
        size_t v38 = (unsigned char *)v3;
        if (*(char *)(v3 + 23) < 0) {
          size_t v38 = *(unsigned char **)v3;
        }
        unsigned char *v38 = v37;
        goto LABEL_67;
      }
    }
    int v36 = *(char **)v3;
    goto LABEL_64;
  }
  if (*(unsigned char *)(a1 + 169))
  {
    for (unint64_t i = 0; ; ++i)
    {
      unint64_t v7 = *(unsigned __int8 *)(v4 + 23);
      if (*(char *)(v4 + 23) < 0)
      {
        if (i >= *(void *)(v4 + 8))
        {
LABEL_13:
          for (unint64_t j = 0; ; ++j)
          {
            unint64_t v12 = *(unsigned __int8 *)(v3 + 23);
            if (*(char *)(v3 + 23) < 0)
            {
              if (j >= *(void *)(v3 + 8)) {
                goto LABEL_44;
              }
            }
            else if (j >= v12)
            {
              goto LABEL_44;
            }
            uint64_t v13 = v3;
            if ((v12 & 0x80) != 0) {
              uint64_t v13 = *(void *)v3;
            }
            char v14 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), *(char *)(v13 + j));
            uint64_t v15 = v3;
            if (*(char *)(v3 + 23) < 0) {
              uint64_t v15 = *(void *)v3;
            }
            *(unsigned char *)(v15 + j) = v14;
          }
        }
      }
      else if (i >= v7)
      {
        goto LABEL_13;
      }
      uint64_t v8 = v4;
      if ((v7 & 0x80) != 0) {
        uint64_t v8 = *(void *)v4;
      }
      char v9 = (*(uint64_t (**)(void, void))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), *(char *)(v8 + i));
      uint64_t v10 = v4;
      if (*(char *)(v4 + 23) < 0) {
        uint64_t v10 = *(void *)v4;
      }
      *(unsigned char *)(v10 + i) = v9;
    }
  }
  for (unint64_t k = 0; ; ++k)
  {
    unint64_t v19 = a2[23];
    if (a2[23] < 0) {
      break;
    }
    if (k >= v19) {
      goto LABEL_35;
    }
LABEL_33:
    size_t v18 = a2;
    if ((v19 & 0x80) != 0)
    {
      size_t v18 = *(char **)a2;
      uint64_t v20 = *(char **)a2;
    }
    else
    {
      uint64_t v20 = a2;
    }
    v20[k] = v18[k];
  }
  if (k < *((void *)a2 + 1)) {
    goto LABEL_33;
  }
LABEL_35:
  for (unint64_t m = 0; ; ++m)
  {
    unint64_t v23 = *(unsigned __int8 *)(a3 + 23);
    if (*(char *)(a3 + 23) < 0) {
      break;
    }
    if (m >= v23) {
      goto LABEL_44;
    }
LABEL_42:
    uint64_t v22 = a3;
    if ((v23 & 0x80) != 0)
    {
      uint64_t v22 = *(void *)a3;
      uint64_t v24 = *(void *)a3;
    }
    else
    {
      uint64_t v24 = a3;
    }
    *(unsigned char *)(v24 + m) = *(unsigned char *)(v22 + m);
  }
  if (m < *(void *)(a3 + 8)) {
    goto LABEL_42;
  }
LABEL_44:
  if (*(char *)(v4 + 23) < 0)
  {
    uint64_t v26 = v4;
    uint64_t v4 = *(void *)v4;
    uint64_t v25 = *(void *)(v26 + 8);
  }
  else
  {
    uint64_t v25 = *(unsigned __int8 *)(v4 + 23);
  }
  sub_100228CFC(a1 + 16, v4, (char *)(v4 + v25));
  if (*(char *)(v3 + 23) < 0)
  {
    uint64_t v28 = v3;
    uint64_t v3 = *(void *)v3;
    uint64_t v27 = *(void *)(v28 + 8);
  }
  else
  {
    uint64_t v27 = *(unsigned __int8 *)(v3 + 23);
  }
  sub_100228CFC(a1 + 16, v3, (char *)(v3 + v27));
  *(_OWORD *)std::string __p = *(_OWORD *)v46;
  uint64_t v49 = v47;
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v44;
  uint64_t v51 = v45;
  unint64_t v29 = *(void *)(a1 + 96);
  if (v29 >= *(void *)(a1 + 104))
  {
    std::string v32 = sub_100228F00((void **)(a1 + 88), (uint64_t)__p);
    int v33 = SHIBYTE(v51);
    *(void *)(a1 + 96) = v32;
    if (v33 < 0)
    {
      operator delete(v50[0]);
      if ((SHIBYTE(v49) & 0x80000000) == 0) {
        return;
      }
    }
    else if ((SHIBYTE(v49) & 0x80000000) == 0)
    {
      return;
    }
    goto LABEL_69;
  }
  long long v30 = *(_OWORD *)__p;
  *(void *)(v29 + 16) = v49;
  *(_OWORD *)unint64_t v29 = v30;
  __p[1] = 0;
  uint64_t v49 = 0;
  __p[0] = 0;
  uint64_t v31 = v51;
  *(_OWORD *)(v29 + 24) = *(_OWORD *)v50;
  *(void *)(v29 + 40) = v31;
  v50[1] = 0;
  uint64_t v51 = 0;
  v50[0] = 0;
  *(void *)(a1 + 96) = v29 + 48;
  if (SHIBYTE(v49) < 0) {
    goto LABEL_69;
  }
}

void sub_100227DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_1000D8BF8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100227DB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  _Unwind_Resume(a1);
}

void sub_100227DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a1 + 169))
  {
    unsigned __int8 v5 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), a2);
    __int16 v6 = v5 | (unsigned __int16)((*(unsigned __int16 (**)(void, uint64_t))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), a3) << 8);
    uint64_t v8 = *(char **)(a1 + 120);
    unint64_t v7 = *(void *)(a1 + 128);
    if ((unint64_t)v8 >= v7)
    {
      char v9 = (char **)(a1 + 112);
      uint64_t v10 = *(char **)(a1 + 112);
      uint64_t v11 = v8 - v10;
      if (v8 - v10 > -3)
      {
        uint64_t v12 = v11 >> 1;
        unint64_t v13 = v7 - (void)v10;
        if (v13 <= (v11 >> 1) + 1) {
          unint64_t v14 = v12 + 1;
        }
        else {
          unint64_t v14 = v13;
        }
        if (v13 >= 0x7FFFFFFFFFFFFFFELL) {
          uint64_t v15 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          uint64_t v15 = v14;
        }
        if (!v15)
        {
          uint64_t v16 = 0;
          uint64_t v17 = (_WORD *)(2 * v12);
          size_t v18 = 0;
          *(_WORD *)(2 * v12) = v6;
          uint64_t v19 = 2 * v12 + 2;
          uint64_t v20 = (char *)(v8 - v10);
          if (v8 == v10) {
            goto LABEL_64;
          }
LABEL_30:
          unint64_t v30 = (unint64_t)(v20 - 2);
          if (v30 < 0x1E) {
            goto LABEL_71;
          }
          if (v8 - v16 - (v11 & 0xFFFFFFFFFFFFFFFELL) < 0x20) {
            goto LABEL_71;
          }
          uint64_t v31 = (v30 >> 1) + 1;
          unint64_t v32 = 2 * (v31 & 0xFFFFFFFFFFFFFFF0);
          int v33 = &v8[-v32];
          uint64_t v17 = (_WORD *)((char *)v17 - v32);
          std::string v34 = &v16[2 * v12 - 16];
          char v35 = v8 - 16;
          unint64_t v36 = v31 & 0xFFFFFFFFFFFFFFF0;
          do
          {
            long long v37 = *(_OWORD *)v35;
            *(v34 - 1) = *((_OWORD *)v35 - 1);
            *std::string v34 = v37;
            v34 -= 2;
            v35 -= 32;
            v36 -= 16;
          }
          while (v36);
          uint64_t v8 = v33;
          if (v31 != (v31 & 0xFFFFFFFFFFFFFFF0))
          {
LABEL_71:
            do
            {
              __int16 v38 = *((_WORD *)v8 - 1);
              v8 -= 2;
              *--uint64_t v17 = v38;
            }
            while (v8 != v10);
          }
LABEL_63:
          uint64_t v8 = *v9;
          goto LABEL_64;
        }
        if ((v15 & 0x8000000000000000) == 0)
        {
          uint64_t v16 = operator new(2 * v15);
          uint64_t v17 = &v16[2 * v12];
          size_t v18 = &v16[2 * v15];
          _WORD *v17 = v6;
          uint64_t v19 = (uint64_t)(v17 + 1);
          uint64_t v20 = (char *)(v8 - v10);
          if (v8 == v10) {
            goto LABEL_64;
          }
          goto LABEL_30;
        }
LABEL_68:
        sub_1000A6A10();
      }
LABEL_67:
      sub_1000A9108();
    }
LABEL_28:
    *(_WORD *)uint64_t v8 = v6;
    uint64_t v19 = (uint64_t)(v8 + 2);
    goto LABEL_66;
  }
  char v9 = (char **)(a1 + 112);
  __int16 v6 = a2 | (unsigned __int16)((_WORD)a3 << 8);
  uint64_t v8 = *(char **)(a1 + 120);
  unint64_t v21 = *(void *)(a1 + 128);
  if (*(unsigned char *)(a1 + 170))
  {
    if ((unint64_t)v8 < v21) {
      goto LABEL_28;
    }
    uint64_t v22 = *v9;
    uint64_t v23 = v8 - *v9;
    if (v23 <= -3) {
      goto LABEL_67;
    }
    uint64_t v24 = v23 >> 1;
    unint64_t v25 = v21 - (void)v22;
    if (v25 <= (v23 >> 1) + 1) {
      unint64_t v26 = v24 + 1;
    }
    else {
      unint64_t v26 = v25;
    }
    if (v25 >= 0x7FFFFFFFFFFFFFFELL) {
      uint64_t v27 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v27 = v26;
    }
    if (v27)
    {
      if (v27 < 0) {
        goto LABEL_68;
      }
      uint64_t v28 = operator new(2 * v27);
      uint64_t v17 = &v28[2 * v24];
      size_t v18 = &v28[2 * v27];
      _WORD *v17 = v6;
      uint64_t v19 = (uint64_t)(v17 + 1);
      unint64_t v29 = (char *)(v8 - v22);
      if (v8 == v22) {
        goto LABEL_64;
      }
    }
    else
    {
      uint64_t v28 = 0;
      uint64_t v17 = (_WORD *)(2 * v24);
      size_t v18 = 0;
      *(_WORD *)(2 * v24) = v6;
      uint64_t v19 = 2 * v24 + 2;
      unint64_t v29 = (char *)(v8 - v22);
      if (v8 == v22) {
        goto LABEL_64;
      }
    }
    unint64_t v47 = (unint64_t)(v29 - 2);
    if (v47 < 0x1E) {
      goto LABEL_72;
    }
    if ((unint64_t)(v8 - &v28[v23 & 0xFFFFFFFFFFFFFFFELL]) < 0x20) {
      goto LABEL_72;
    }
    uint64_t v48 = (v47 >> 1) + 1;
    unint64_t v49 = 2 * (v48 & 0xFFFFFFFFFFFFFFF0);
    uint64_t v50 = &v8[-v49];
    uint64_t v17 = (_WORD *)((char *)v17 - v49);
    uint64_t v51 = &v28[2 * v24 - 16];
    uint64_t v52 = v8 - 16;
    unint64_t v53 = v48 & 0xFFFFFFFFFFFFFFF0;
    do
    {
      long long v54 = *(_OWORD *)v52;
      *(v51 - 1) = *((_OWORD *)v52 - 1);
      _OWORD *v51 = v54;
      v51 -= 2;
      v52 -= 32;
      v53 -= 16;
    }
    while (v53);
    uint64_t v8 = v50;
    if (v48 != (v48 & 0xFFFFFFFFFFFFFFF0))
    {
LABEL_72:
      do
      {
        __int16 v55 = *((_WORD *)v8 - 1);
        v8 -= 2;
        *--uint64_t v17 = v55;
      }
      while (v8 != v22);
    }
    goto LABEL_63;
  }
  if ((unint64_t)v8 < v21) {
    goto LABEL_28;
  }
  unint64_t v39 = *v9;
  uint64_t v40 = v8 - *v9;
  if (v40 <= -3) {
    goto LABEL_67;
  }
  uint64_t v41 = v40 >> 1;
  unint64_t v42 = v21 - (void)v39;
  if (v42 <= (v40 >> 1) + 1) {
    unint64_t v43 = v41 + 1;
  }
  else {
    unint64_t v43 = v42;
  }
  if (v42 >= 0x7FFFFFFFFFFFFFFELL) {
    uint64_t v44 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v44 = v43;
  }
  if (!v44)
  {
    uint64_t v45 = 0;
    uint64_t v17 = (_WORD *)(2 * v41);
    size_t v18 = 0;
    *(_WORD *)(2 * v41) = v6;
    uint64_t v19 = 2 * v41 + 2;
    uint64_t v46 = (char *)(v8 - v39);
    if (v8 == v39) {
      goto LABEL_64;
    }
    goto LABEL_57;
  }
  if (v44 < 0) {
    goto LABEL_68;
  }
  uint64_t v45 = operator new(2 * v44);
  uint64_t v17 = &v45[2 * v41];
  size_t v18 = &v45[2 * v44];
  _WORD *v17 = v6;
  uint64_t v19 = (uint64_t)(v17 + 1);
  uint64_t v46 = (char *)(v8 - v39);
  if (v8 != v39)
  {
LABEL_57:
    unint64_t v56 = (unint64_t)(v46 - 2);
    if (v56 < 0x1E) {
      goto LABEL_73;
    }
    if ((unint64_t)(v8 - &v45[v40 & 0xFFFFFFFFFFFFFFFELL]) < 0x20) {
      goto LABEL_73;
    }
    uint64_t v57 = (v56 >> 1) + 1;
    unint64_t v58 = 2 * (v57 & 0xFFFFFFFFFFFFFFF0);
    size_t v59 = &v8[-v58];
    uint64_t v17 = (_WORD *)((char *)v17 - v58);
    std::string::size_type v60 = &v45[2 * v41 - 16];
    size_t v61 = v8 - 16;
    unint64_t v62 = v57 & 0xFFFFFFFFFFFFFFF0;
    do
    {
      long long v63 = *(_OWORD *)v61;
      *(v60 - 1) = *((_OWORD *)v61 - 1);
      *std::string::size_type v60 = v63;
      v60 -= 2;
      v61 -= 32;
      v62 -= 16;
    }
    while (v62);
    uint64_t v8 = v59;
    if (v57 != (v57 & 0xFFFFFFFFFFFFFFF0))
    {
LABEL_73:
      do
      {
        __int16 v64 = *((_WORD *)v8 - 1);
        v8 -= 2;
        *--uint64_t v17 = v64;
      }
      while (v8 != v39);
    }
    goto LABEL_63;
  }
LABEL_64:
  *(void *)(a1 + 112) = v17;
  *(void *)(a1 + 120) = v19;
  *(void *)(a1 + 128) = v18;
  if (v8) {
    operator delete(v8);
  }
LABEL_66:
  *(void *)(a1 + 120) = v19;
}

void sub_1002281EC()
{
  exception = (std::regex_error *)__cxa_allocate_exception(0x18uLL);
  std::regex_error::regex_error(exception, error_collate);
}

void sub_100228230(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100228244(unsigned char *__src@<X1>, uint64_t a2@<X0>, unsigned char *a3@<X2>, uint64_t a4@<X8>)
{
  size_t v5 = a3 - __src;
  if ((unint64_t)(a3 - __src) >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  if (v5 <= 0x16)
  {
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = (_BYTE)a3 - (_BYTE)__src;
    p_dst = &__dst;
    if (__src == a3) {
      goto LABEL_9;
    }
LABEL_8:
    memcpy(p_dst, __src, v5);
    p_dst = (std::string *)((char *)p_dst + v5);
    goto LABEL_9;
  }
  uint64_t v10 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v5 | 7) != 0x17) {
    uint64_t v10 = v5 | 7;
  }
  uint64_t v11 = v10 + 1;
  p_dst = (std::string *)operator new(v10 + 1);
  __dst.__r_.__value_.__l.__size_ = v5;
  __dst.__r_.__value_.__r.__words[2] = v11 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  if (__src != a3) {
    goto LABEL_8;
  }
LABEL_9:
  p_dst->__r_.__value_.__s.__data_[0] = 0;
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    if (!__dst.__r_.__value_.__l.__size_) {
      goto LABEL_17;
    }
    uint64_t v12 = (std::string *)__dst.__r_.__value_.__r.__words[0];
  }
  else
  {
    if (!*((unsigned char *)&__dst.__r_.__value_.__s + 23)) {
      return;
    }
    uint64_t v12 = &__dst;
  }
  std::__get_collation_name(&v17, (const char *)v12);
  *(_OWORD *)a4 = *(_OWORD *)&v17.__r_.__value_.__l.__data_;
  unint64_t v13 = v17.__r_.__value_.__r.__words[2];
  *(void *)(a4 + 16) = *((void *)&v17.__r_.__value_.__l + 2);
  unint64_t v14 = HIBYTE(v13);
  if ((v14 & 0x80u) != 0) {
    unint64_t v14 = *(void *)(a4 + 8);
  }
  if (v14) {
    goto LABEL_17;
  }
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
  {
    if (__dst.__r_.__value_.__l.__size_ >= 3) {
      goto LABEL_17;
    }
  }
  else if (HIBYTE(__dst.__r_.__value_.__r.__words[2]) >= 3u)
  {
    return;
  }
  (*(void (**)(std::string *__return_ptr))(**(void **)(a2 + 16) + 32))(&v17);
  if (*(char *)(a4 + 23) < 0) {
    operator delete(*(void **)a4);
  }
  *(std::string *)a4 = v17;
  if ((*(char *)(a4 + 23) & 0x80000000) == 0)
  {
    int v15 = *(unsigned __int8 *)(a4 + 23);
    if (v15 != 12 && v15 != 1)
    {
      *(unsigned char *)a4 = 0;
      *(unsigned char *)(a4 + 23) = 0;
      goto LABEL_17;
    }
    goto LABEL_31;
  }
  uint64_t v16 = *(void *)(a4 + 8);
  if (v16 == 1 || v16 == 12)
  {
LABEL_31:
    std::string::operator=((std::string *)a4, &__dst);
    goto LABEL_17;
  }
  **(unsigned char **)a4 = 0;
  *(void *)(a4 + 8) = 0;
LABEL_17:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
}

void sub_100228458(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (*(char *)(v17 + 23) < 0)
  {
    operator delete(*(void **)v17);
    if ((a17 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a17 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_10022849C(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v5 = (unint64_t)&a3[-a2];
  if ((unint64_t)&a3[-a2] >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  if (v5 > 0x16)
  {
    uint64_t v16 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17) {
      uint64_t v16 = v5 | 7;
    }
    uint64_t v17 = v16 + 1;
    p_p = operator new(v16 + 1);
    unint64_t v25 = v5;
    int64_t v26 = v17 | 0x8000000000000000;
    std::string __p = p_p;
    if ((char *)a2 != a3) {
      goto LABEL_4;
    }
LABEL_13:
    uint64_t v10 = p_p;
    goto LABEL_16;
  }
  HIBYTE(v26) = (_BYTE)a3 - a2;
  p_p = &__p;
  if ((char *)a2 == a3) {
    goto LABEL_13;
  }
LABEL_4:
  if (v5 < 0x20 || (unint64_t)p_p - a2 < 0x20)
  {
    uint64_t v10 = p_p;
    uint64_t v11 = (char *)a2;
  }
  else
  {
    uint64_t v10 = (char *)p_p + (v5 & 0xFFFFFFFFFFFFFFE0);
    uint64_t v11 = (char *)(a2 + (v5 & 0xFFFFFFFFFFFFFFE0));
    uint64_t v12 = (long long *)(a2 + 16);
    unint64_t v13 = p_p + 1;
    unint64_t v14 = v5 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      long long v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *unint64_t v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 32;
    }
    while (v14);
    if (v5 == (v5 & 0xFFFFFFFFFFFFFFE0)) {
      goto LABEL_16;
    }
  }
  do
  {
    char v18 = *v11++;
    *v10++ = v18;
  }
  while (v11 != a3);
LABEL_16:
  *uint64_t v10 = 0;
  unint64_t v19 = HIBYTE(v26);
  if (v26 >= 0) {
    uint64_t v20 = (char *)&__p;
  }
  else {
    uint64_t v20 = (char *)__p;
  }
  if (v26 < 0) {
    unint64_t v19 = v25;
  }
  (*(void (**)(void, char *, char *))(**(void **)(a1 + 16) + 32))(*(void *)(a1 + 16), v20, &v20[v19]);
  uint64_t v21 = *(unsigned __int8 *)(a4 + 23);
  int v22 = (char)v21;
  if ((v21 & 0x80u) != 0) {
    uint64_t v21 = *(void *)(a4 + 8);
  }
  if (v21 == 1) {
    goto LABEL_32;
  }
  if (v21 != 12)
  {
    if (v22 < 0)
    {
      **(unsigned char **)a4 = 0;
      *(void *)(a4 + 8) = 0;
      if ((SHIBYTE(v26) & 0x80000000) == 0) {
        return;
      }
LABEL_35:
      operator delete(__p);
      return;
    }
    *(unsigned char *)a4 = 0;
    *(unsigned char *)(a4 + 23) = 0;
LABEL_32:
    if ((SHIBYTE(v26) & 0x80000000) == 0) {
      return;
    }
    goto LABEL_35;
  }
  if (v22 >= 0) {
    uint64_t v23 = (unsigned char *)a4;
  }
  else {
    uint64_t v23 = *(unsigned char **)a4;
  }
  v23[11] = v23[3];
  if (SHIBYTE(v26) < 0) {
    goto LABEL_35;
  }
}

void sub_100228690(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002286AC()
{
  exception = (std::regex_error *)__cxa_allocate_exception(0x18uLL);
  std::regex_error::regex_error(exception, error_ctype);
}

void sub_1002286F0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100228704(uint64_t a1, unsigned char *__src, unsigned char *a3, BOOL a4)
{
  size_t v4 = a3 - __src;
  if ((unint64_t)(a3 - __src) >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  if (v4 <= 0x16)
  {
    HIBYTE(v19) = (_BYTE)a3 - (_BYTE)__src;
    p_dst = (void **)&__dst;
    if (__src == a3) {
      goto LABEL_9;
    }
LABEL_8:
    memcpy(p_dst, __src, v4);
    p_dst = (void **)((char *)p_dst + v4);
    goto LABEL_9;
  }
  uint64_t v10 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v4 | 7) != 0x17) {
    uint64_t v10 = v4 | 7;
  }
  uint64_t v11 = v10 + 1;
  p_dst = (void **)operator new(v10 + 1);
  size_t v18 = v4;
  int64_t v19 = v11 | 0x8000000000000000;
  std::string __dst = p_dst;
  if (__src != a3) {
    goto LABEL_8;
  }
LABEL_9:
  *(unsigned char *)p_dst = 0;
  size_t v12 = HIBYTE(v19);
  if (v19 >= 0) {
    unint64_t v13 = (void **)&__dst;
  }
  else {
    unint64_t v13 = __dst;
  }
  if (v19 < 0) {
    size_t v12 = v18;
  }
  (*(void (**)(void, void **, char *))(**(void **)(a1 + 8) + 48))(*(void *)(a1 + 8), v13, (char *)v13 + v12);
  if (v19 >= 0) {
    unint64_t v14 = (const char *)&__dst;
  }
  else {
    unint64_t v14 = (const char *)__dst;
  }
  uint64_t classname = std::__get_classname(v14, a4);
  if (SHIBYTE(v19) < 0) {
    operator delete(__dst);
  }
  return classname;
}

void sub_10022884C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100228868(uint64_t a1, uint64_t a2)
{
  char v2 = a2;
  if (!*(unsigned char *)(a1 + 169))
  {
    __int16 v6 = (void *)(a1 + 64);
    unint64_t v5 = *(unsigned char **)(a1 + 72);
    unint64_t v16 = *(void *)(a1 + 80);
    if (*(unsigned char *)(a1 + 170))
    {
      if ((unint64_t)v5 < v16) {
        goto LABEL_24;
      }
      uint64_t v17 = (unsigned char *)*v6;
      unint64_t v18 = (unint64_t)&v5[-*v6];
      unint64_t v19 = v18 + 1;
      if ((uint64_t)(v18 + 1) >= 0)
      {
        unint64_t v20 = v16 - (void)v17;
        if (2 * v20 > v19) {
          unint64_t v19 = 2 * v20;
        }
        if (v20 >= 0x3FFFFFFFFFFFFFFFLL) {
          size_t v21 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          size_t v21 = v19;
        }
        if (v21)
        {
          size_t v12 = operator new(v21);
          unint64_t v13 = &v12[v18];
          unint64_t v14 = &v12[v21];
          v12[v18] = v2;
          uint64_t v15 = (uint64_t)&v12[v18 + 1];
          if (v5 == v17) {
            goto LABEL_49;
          }
        }
        else
        {
          size_t v12 = 0;
          unint64_t v13 = &v5[-*v6];
          unint64_t v14 = 0;
          *(unsigned char *)unint64_t v18 = a2;
          uint64_t v15 = v18 + 1;
          if (v5 == v17) {
            goto LABEL_49;
          }
        }
        if (v18 >= 8 && (unint64_t)(v17 - v12) >= 0x20)
        {
          if (v18 >= 0x20)
          {
            unint64_t v28 = v18 & 0xFFFFFFFFFFFFFFE0;
            __int16 v38 = (long long *)(v5 - 16);
            unint64_t v39 = &v12[v5 - 16 - v17];
            unint64_t v40 = v18 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              long long v41 = *v38;
              *(v39 - 1) = *(v38 - 1);
              *unint64_t v39 = v41;
              v39 -= 2;
              v38 -= 2;
              v40 -= 32;
            }
            while (v40);
            if (v18 == v28) {
              goto LABEL_86;
            }
            if ((v18 & 0x18) == 0)
            {
              v13 -= v28;
              v5 -= v28;
              goto LABEL_80;
            }
          }
          else
          {
            unint64_t v28 = 0;
          }
          v13 -= v18 & 0xFFFFFFFFFFFFFFF8;
          unint64_t v42 = &v5[-v28 - 8];
          unint64_t v43 = &v12[v42 - v17];
          unint64_t v44 = v28 - (v18 & 0xFFFFFFFFFFFFFFF8);
          do
          {
            uint64_t v45 = *(void *)v42;
            v42 -= 8;
            *v43-- = v45;
            v44 += 8;
          }
          while (v44);
          v5 -= v18 & 0xFFFFFFFFFFFFFFF8;
          if (v18 == (v18 & 0xFFFFFFFFFFFFFFF8)) {
            goto LABEL_86;
          }
        }
LABEL_80:
        unint64_t v56 = v13 - 1;
        do
        {
          char v57 = *--v5;
          *v56-- = v57;
        }
        while (v5 != v17);
        goto LABEL_86;
      }
LABEL_89:
      sub_1000A9108();
    }
    if ((unint64_t)v5 < v16) {
      goto LABEL_24;
    }
    uint64_t v23 = (unsigned char *)*v6;
    unint64_t v24 = (unint64_t)&v5[-*v6];
    unint64_t v25 = v24 + 1;
    if ((uint64_t)(v24 + 1) < 0) {
      goto LABEL_89;
    }
    unint64_t v26 = v16 - (void)v23;
    if (2 * v26 > v25) {
      unint64_t v25 = 2 * v26;
    }
    if (v26 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v27 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v27 = v25;
    }
    if (v27)
    {
      size_t v12 = operator new(v27);
      unint64_t v13 = &v12[v24];
      unint64_t v14 = &v12[v27];
      v12[v24] = v2;
      uint64_t v15 = (uint64_t)&v12[v24 + 1];
      if (v5 == v23)
      {
LABEL_49:
        *(void *)(a1 + 64) = v13;
        *(void *)(a1 + 72) = v15;
        *(void *)(a1 + 80) = v14;
        if (!v5) {
          goto LABEL_88;
        }
        goto LABEL_87;
      }
    }
    else
    {
      size_t v12 = 0;
      unint64_t v13 = &v5[-*v6];
      unint64_t v14 = 0;
      *(unsigned char *)unint64_t v24 = a2;
      uint64_t v15 = v24 + 1;
      if (v5 == v23) {
        goto LABEL_49;
      }
    }
    if (v24 >= 8 && (unint64_t)(v23 - v12) >= 0x20)
    {
      if (v24 >= 0x20)
      {
        unint64_t v29 = v24 & 0xFFFFFFFFFFFFFFE0;
        uint64_t v46 = (long long *)(v5 - 16);
        unint64_t v47 = &v12[v5 - 16 - v23];
        unint64_t v48 = v24 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          long long v49 = *v46;
          *(v47 - 1) = *(v46 - 1);
          _OWORD *v47 = v49;
          v47 -= 2;
          v46 -= 2;
          v48 -= 32;
        }
        while (v48);
        if (v24 == v29) {
          goto LABEL_86;
        }
        if ((v24 & 0x18) == 0)
        {
          v13 -= v29;
          v5 -= v29;
          goto LABEL_84;
        }
      }
      else
      {
        unint64_t v29 = 0;
      }
      v13 -= v24 & 0xFFFFFFFFFFFFFFF8;
      uint64_t v50 = &v5[-v29 - 8];
      uint64_t v51 = &v12[v50 - v23];
      unint64_t v52 = v29 - (v24 & 0xFFFFFFFFFFFFFFF8);
      do
      {
        uint64_t v53 = *(void *)v50;
        v50 -= 8;
        *v51-- = v53;
        v52 += 8;
      }
      while (v52);
      v5 -= v24 & 0xFFFFFFFFFFFFFFF8;
      if (v24 == (v24 & 0xFFFFFFFFFFFFFFF8)) {
        goto LABEL_86;
      }
    }
LABEL_84:
    unint64_t v58 = v13 - 1;
    do
    {
      char v59 = *--v5;
      *v58-- = v59;
    }
    while (v5 != v23);
    goto LABEL_86;
  }
  char v2 = (*(uint64_t (**)(void, uint64_t))(**(void **)(a1 + 24) + 40))(*(void *)(a1 + 24), a2);
  unint64_t v5 = *(unsigned char **)(a1 + 72);
  unint64_t v4 = *(void *)(a1 + 80);
  if ((unint64_t)v5 < v4)
  {
LABEL_24:
    unsigned char *v5 = v2;
    uint64_t v15 = (uint64_t)(v5 + 1);
    goto LABEL_88;
  }
  __int16 v6 = (void *)(a1 + 64);
  unint64_t v7 = *(unsigned char **)(a1 + 64);
  unint64_t v8 = v5 - v7;
  uint64_t v9 = v5 - v7 + 1;
  if (v9 < 0) {
    goto LABEL_89;
  }
  unint64_t v10 = v4 - (void)v7;
  if (2 * v10 > v9) {
    uint64_t v9 = 2 * v10;
  }
  if (v10 >= 0x3FFFFFFFFFFFFFFFLL) {
    size_t v11 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    size_t v11 = v9;
  }
  if (v11)
  {
    size_t v12 = operator new(v11);
    unint64_t v13 = &v12[v8];
    unint64_t v14 = &v12[v11];
    v12[v8] = v2;
    uint64_t v15 = (uint64_t)&v12[v8 + 1];
    if (v5 == v7) {
      goto LABEL_49;
    }
  }
  else
  {
    size_t v12 = 0;
    unint64_t v13 = (char *)(v5 - v7);
    unint64_t v14 = 0;
    *(unsigned char *)unint64_t v8 = v2;
    uint64_t v15 = v8 + 1;
    if (v5 == v7) {
      goto LABEL_49;
    }
  }
  if (v8 < 8 || (unint64_t)(v7 - v12) < 0x20) {
    goto LABEL_76;
  }
  if (v8 < 0x20)
  {
    unint64_t v22 = 0;
    goto LABEL_55;
  }
  unint64_t v22 = v8 & 0xFFFFFFFFFFFFFFE0;
  unint64_t v30 = (long long *)(v5 - 16);
  uint64_t v31 = &v12[v5 - 16 - v7];
  unint64_t v32 = v8 & 0xFFFFFFFFFFFFFFE0;
  do
  {
    long long v33 = *v30;
    *(v31 - 1) = *(v30 - 1);
    _OWORD *v31 = v33;
    v31 -= 2;
    v30 -= 2;
    v32 -= 32;
  }
  while (v32);
  if (v8 != v22)
  {
    if ((v8 & 0x18) == 0)
    {
      v13 -= v22;
      v5 -= v22;
      goto LABEL_76;
    }
LABEL_55:
    v13 -= v8 & 0xFFFFFFFFFFFFFFF8;
    std::string v34 = &v5[-v22 - 8];
    char v35 = &v12[v34 - v7];
    unint64_t v36 = v22 - (v8 & 0xFFFFFFFFFFFFFFF8);
    do
    {
      uint64_t v37 = *(void *)v34;
      v34 -= 8;
      *v35-- = v37;
      v36 += 8;
    }
    while (v36);
    v5 -= v8 & 0xFFFFFFFFFFFFFFF8;
    if (v8 == (v8 & 0xFFFFFFFFFFFFFFF8)) {
      goto LABEL_86;
    }
LABEL_76:
    long long v54 = v13 - 1;
    do
    {
      char v55 = *--v5;
      *v54-- = v55;
    }
    while (v5 != v7);
  }
LABEL_86:
  unint64_t v5 = (unsigned char *)*v6;
  *(void *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v15;
  *(void *)(a1 + 80) = v14;
  if (v5) {
LABEL_87:
  }
    operator delete(v5);
LABEL_88:
  *(void *)(a1 + 72) = v15;
}

void sub_100228CFC(uint64_t a1, uint64_t a2, char *a3)
{
  unint64_t v3 = (unint64_t)&a3[-a2];
  if ((unint64_t)&a3[-a2] >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  if (v3 > 0x16)
  {
    uint64_t v14 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v3 | 7) != 0x17) {
      uint64_t v14 = v3 | 7;
    }
    uint64_t v15 = v14 + 1;
    p_p = operator new(v14 + 1);
    unint64_t v20 = v3;
    int64_t v21 = v15 | 0x8000000000000000;
    std::string __p = p_p;
    if ((char *)a2 != a3) {
      goto LABEL_4;
    }
LABEL_13:
    unint64_t v8 = p_p;
    goto LABEL_16;
  }
  HIBYTE(v21) = (_BYTE)a3 - a2;
  p_p = &__p;
  if ((char *)a2 == a3) {
    goto LABEL_13;
  }
LABEL_4:
  if (v3 < 0x20 || (unint64_t)p_p - a2 < 0x20)
  {
    unint64_t v8 = p_p;
    uint64_t v9 = (char *)a2;
  }
  else
  {
    unint64_t v8 = (char *)p_p + (v3 & 0xFFFFFFFFFFFFFFE0);
    uint64_t v9 = (char *)(a2 + (v3 & 0xFFFFFFFFFFFFFFE0));
    unint64_t v10 = (long long *)(a2 + 16);
    size_t v11 = p_p + 1;
    unint64_t v12 = v3 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      long long v13 = *v10;
      *(v11 - 1) = *(v10 - 1);
      *size_t v11 = v13;
      v10 += 2;
      v11 += 2;
      v12 -= 32;
    }
    while (v12);
    if (v3 == (v3 & 0xFFFFFFFFFFFFFFE0)) {
      goto LABEL_16;
    }
  }
  do
  {
    char v16 = *v9++;
    *v8++ = v16;
  }
  while (v9 != a3);
LABEL_16:
  *unint64_t v8 = 0;
  unint64_t v17 = HIBYTE(v21);
  if (v21 >= 0) {
    unint64_t v18 = (char *)&__p;
  }
  else {
    unint64_t v18 = (char *)__p;
  }
  if (v21 < 0) {
    unint64_t v17 = v20;
  }
  (*(void (**)(void, char *, char *))(**(void **)(a1 + 16) + 32))(*(void *)(a1 + 16), v18, &v18[v17]);
  if (SHIBYTE(v21) < 0) {
    operator delete(__p);
  }
}

void sub_100228E8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100228EA8()
{
  exception = (std::regex_error *)__cxa_allocate_exception(0x18uLL);
  std::regex_error::regex_error(exception, error_range);
}

void sub_100228EEC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

char *sub_100228F00(void **a1, uint64_t a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 4);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x555555555555555) {
    sub_1000A9108();
  }
  if (0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 4) > v4) {
    unint64_t v4 = 0x5555555555555556 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 4);
  }
  if (0xAAAAAAAAAAAAAAABLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 4) >= 0x2AAAAAAAAAAAAAALL) {
    unint64_t v6 = 0x555555555555555;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0x555555555555555) {
      sub_1000A6A10();
    }
    unint64_t v7 = (char *)operator new(48 * v6);
  }
  else
  {
    unint64_t v7 = 0;
  }
  unint64_t v8 = &v7[48 * v3];
  *((void *)v8 + 2) = *(void *)(a2 + 16);
  *(_OWORD *)unint64_t v8 = *(_OWORD *)a2;
  uint64_t v9 = &v7[48 * v6];
  long long v10 = *(_OWORD *)(a2 + 24);
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(_OWORD *)(v8 + 24) = v10;
  *((void *)v8 + 5) = *(void *)(a2 + 40);
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  size_t v11 = v8 + 48;
  unint64_t v12 = (char *)*a1;
  long long v13 = (char *)a1[1];
  if (v13 == *a1)
  {
    *a1 = v8;
    a1[1] = v11;
    a1[2] = v9;
    if (!v13) {
      return v11;
    }
    goto LABEL_23;
  }
  do
  {
    long long v14 = *((_OWORD *)v13 - 3);
    *((void *)v8 - 4) = *((void *)v13 - 4);
    *((_OWORD *)v8 - 3) = v14;
    *((void *)v13 - 5) = 0;
    *((void *)v13 - 4) = 0;
    *((void *)v13 - 6) = 0;
    long long v15 = *(_OWORD *)(v13 - 24);
    *((void *)v8 - 1) = *((void *)v13 - 1);
    *(_OWORD *)(v8 - 24) = v15;
    v8 -= 48;
    *((void *)v13 - 2) = 0;
    *((void *)v13 - 1) = 0;
    *((void *)v13 - 3) = 0;
    v13 -= 48;
  }
  while (v13 != v12);
  char v16 = (char *)*a1;
  long long v13 = (char *)a1[1];
  *a1 = v8;
  a1[1] = v11;
  a1[2] = v9;
  if (v13 != v16)
  {
    while (1)
    {
      if (*(v13 - 1) < 0)
      {
        operator delete(*((void **)v13 - 3));
        if (*(v13 - 25) < 0) {
LABEL_20:
        }
          operator delete(*((void **)v13 - 6));
      }
      else if (*(v13 - 25) < 0)
      {
        goto LABEL_20;
      }
      v13 -= 48;
      if (v13 == v16)
      {
        long long v13 = v16;
        break;
      }
    }
  }
  if (v13) {
LABEL_23:
  }
    operator delete(v13);
  return v11;
}

void *sub_1002290B4(void *a1)
{
  *a1 = off_1004617C0;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_100229120(void *a1)
{
  *a1 = off_1004617C0;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  operator delete();
}

uint64_t sub_1002291AC(uint64_t result, uint64_t a2)
{
  *(_DWORD *)a2 = -994;
  *(void *)(*(void *)(a2 + 32) + 24 * (*(_DWORD *)(result + 16) - 1)) = *(void *)(a2 + 16);
  *(void *)(a2 + 80) = *(void *)(result + 8);
  return result;
}

void *sub_1002291DC(void *a1)
{
  *a1 = off_1004617C0;
  uint64_t v2 = a1[1];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_100229248(void *a1)
{
  *a1 = off_1004617C0;
  uint64_t v1 = a1[1];
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }

  operator delete();
}

uint64_t sub_1002292D4(uint64_t result, uint64_t a2)
{
  *(_DWORD *)a2 = -994;
  uint64_t v2 = *(void *)(a2 + 32) + 24 * (*(_DWORD *)(result + 16) - 1);
  *(void *)(v2 + 8) = *(void *)(a2 + 16);
  *(unsigned char *)(v2 + 16) = 1;
  *(void *)(a2 + 80) = *(void *)(result + 8);
  return result;
}

void sub_10022930C()
{
}

void sub_100229464(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_10022949C()
{
  exception = (std::regex_error *)__cxa_allocate_exception(0x18uLL);
  std::regex_error::regex_error(exception, error_badbrace);
}

void sub_1002294E0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002294F4()
{
  exception = (std::regex_error *)__cxa_allocate_exception(0x18uLL);
  std::regex_error::regex_error(exception, error_brace);
}

void sub_100229538(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_10022954C(void *a1)
{
  *a1 = off_100461C40;
  uint64_t v2 = a1[2];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  *a1 = off_1004617C0;
  uint64_t v3 = a1[1];
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  return a1;
}