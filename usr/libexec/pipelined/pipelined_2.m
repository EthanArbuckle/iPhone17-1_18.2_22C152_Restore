void sub_100119B14()
{
  wireless_diagnostics::google::protobuf::Message *v0;

  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100119B6C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 76);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_11:
    uint64_t v10 = *(void *)(v5 + 24);
    if (v10)
    {
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 76);
      if ((v6 & 4) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(qword_10047EA58 + 24), a2, a4);
      int v6 = *(_DWORD *)(v5 + 76);
      if ((v6 & 4) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_19:
    uint64_t v12 = *(void *)(v5 + 40);
    if (v12)
    {
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v12, a2, a4);
      int v6 = *(_DWORD *)(v5 + 76);
      if ((v6 & 0x10) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(qword_10047EA58 + 40), a2, a4);
      int v6 = *(_DWORD *)(v5 + 76);
      if ((v6 & 0x10) != 0) {
        goto LABEL_23;
      }
    }
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_27:
    uint64_t v14 = *(void *)(v5 + 56);
    if (v14)
    {
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v14, a2, a4);
      if ((*(_DWORD *)(v5 + 76) & 0x40) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(qword_10047EA58 + 56), a2, a4);
      if ((*(_DWORD *)(v5 + 76) & 0x40) != 0) {
        goto LABEL_31;
      }
    }
LABEL_8:
    v9 = *(void **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_35;
  }
  result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 2) != 0) {
    goto LABEL_11;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    goto LABEL_4;
  }
LABEL_15:
  uint64_t v11 = *(void *)(v5 + 32);
  if (v11)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v11, a2, a4);
    int v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 8) != 0) {
      goto LABEL_19;
    }
  }
  else
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(qword_10047EA58 + 32), a2, a4);
    int v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 8) != 0) {
      goto LABEL_19;
    }
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_23:
  uint64_t v13 = *(void *)(v5 + 48);
  if (v13)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v13, a2, a4);
    int v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 0x20) != 0) {
      goto LABEL_27;
    }
  }
  else
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(qword_10047EA58 + 48), a2, a4);
    int v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 0x20) != 0) {
      goto LABEL_27;
    }
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    goto LABEL_8;
  }
LABEL_31:
  uint64_t v15 = *(void *)(v5 + 64);
  if (v15)
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v15, a2, a4);
    v16 = *(void **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v16;
    if (!v16) {
      return result;
    }
  }
  else
  {
    result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(qword_10047EA58 + 64), a2, a4);
    v17 = *(void **)(v5 + 8);
    v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    v7 = v17;
    if (!v17) {
      return result;
    }
  }
LABEL_35:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100119D84(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  v4 = a2;
  int v6 = *((_DWORD *)this + 19);
  if ((v6 & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v7 = *((void *)this + 2);
  *(unsigned char *)a2 = 10;
  unsigned int v8 = a2 + 1;
  if (*(char *)(v7 + 23) < 0)
  {
    v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v7 + 8);
    if (v9 <= 0x7F) {
      goto LABEL_4;
    }
LABEL_6:
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v8, a3);
    goto LABEL_7;
  }
  v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v7 + 23);
  if (*(unsigned __int8 *)(v7 + 23) > 0x7Fu) {
    goto LABEL_6;
  }
LABEL_4:
  *((unsigned char *)v4 + 1) = (_BYTE)v9;
  int v10 = v4 + 2;
LABEL_7:
  int v11 = *(char *)(v7 + 23);
  if (v11 >= 0) {
    uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7;
  }
  else {
    uint64_t v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v7;
  }
  if (v11 >= 0) {
    uint64_t v13 = (const void *)*(unsigned __int8 *)(v7 + 23);
  }
  else {
    uint64_t v13 = (const void *)*(unsigned int *)(v7 + 8);
  }
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, a4);
  int v6 = *((_DWORD *)this + 19);
LABEL_14:
  if ((v6 & 2) == 0) {
    goto LABEL_28;
  }
  uint64_t v14 = *((void *)this + 3);
  if (v14)
  {
    *(unsigned char *)v4 = 18;
    unsigned int v15 = v4 + 1;
    v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v14 + 32);
    if (v16 <= 0x7F) {
      goto LABEL_17;
    }
LABEL_20:
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, v15, a3);
    int v17 = *(_DWORD *)(v14 + 36);
    if ((v17 & 1) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  uint64_t v14 = *(void *)(qword_10047EA58 + 24);
  *(unsigned char *)v4 = 18;
  unsigned int v15 = v4 + 1;
  v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v14 + 32);
  if (v16 > 0x7F) {
    goto LABEL_20;
  }
LABEL_17:
  *((unsigned char *)v4 + 1) = (_BYTE)v16;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  int v17 = *(_DWORD *)(v14 + 36);
  if (v17)
  {
LABEL_21:
    uint64_t v18 = *(void *)(v14 + 16);
    *(unsigned char *)v4 = 9;
    *(void *)((char *)v4 + 1) = v18;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    int v17 = *(_DWORD *)(v14 + 36);
  }
LABEL_22:
  if ((v17 & 2) != 0)
  {
    uint64_t v22 = *(void *)(v14 + 24);
    *(unsigned char *)v4 = 17;
    *(void *)((char *)v4 + 1) = v22;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    v23 = *(void **)(v14 + 8);
    v20 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v14 + 8);
    v19 = v23;
    if (!v23) {
      goto LABEL_28;
    }
  }
  else
  {
    v21 = *(void **)(v14 + 8);
    v20 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v14 + 8);
    v19 = v21;
    if (!v21) {
      goto LABEL_28;
    }
  }
  if (*v19 != v19[1]) {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v20, v4, a3);
  }
LABEL_28:
  if ((*((unsigned char *)this + 76) & 4) == 0) {
    goto LABEL_42;
  }
  uint64_t v24 = *((void *)this + 4);
  if (v24)
  {
    *(unsigned char *)v4 = 26;
    unsigned int v25 = v4 + 1;
    v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v24 + 32);
    if (v26 <= 0x7F) {
      goto LABEL_31;
    }
LABEL_34:
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, v25, a3);
    int v27 = *(_DWORD *)(v24 + 36);
    if ((v27 & 1) == 0) {
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  uint64_t v24 = *(void *)(qword_10047EA58 + 32);
  *(unsigned char *)v4 = 26;
  unsigned int v25 = v4 + 1;
  v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v24 + 32);
  if (v26 > 0x7F) {
    goto LABEL_34;
  }
LABEL_31:
  *((unsigned char *)v4 + 1) = (_BYTE)v26;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  int v27 = *(_DWORD *)(v24 + 36);
  if (v27)
  {
LABEL_35:
    uint64_t v28 = *(void *)(v24 + 16);
    *(unsigned char *)v4 = 9;
    *(void *)((char *)v4 + 1) = v28;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    int v27 = *(_DWORD *)(v24 + 36);
  }
LABEL_36:
  if ((v27 & 2) != 0)
  {
    uint64_t v32 = *(void *)(v24 + 24);
    *(unsigned char *)v4 = 17;
    *(void *)((char *)v4 + 1) = v32;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    v33 = *(void **)(v24 + 8);
    v30 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v24 + 8);
    v29 = v33;
    if (!v33) {
      goto LABEL_42;
    }
  }
  else
  {
    v31 = *(void **)(v24 + 8);
    v30 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v24 + 8);
    v29 = v31;
    if (!v31) {
      goto LABEL_42;
    }
  }
  if (*v29 != v29[1]) {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v30, v4, a3);
  }
LABEL_42:
  if ((*((unsigned char *)this + 76) & 8) == 0) {
    goto LABEL_56;
  }
  uint64_t v34 = *((void *)this + 5);
  if (v34)
  {
    *(unsigned char *)v4 = 34;
    unsigned int v35 = v4 + 1;
    v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v34 + 32);
    if (v36 <= 0x7F) {
      goto LABEL_45;
    }
LABEL_48:
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v36, v35, a3);
    int v37 = *(_DWORD *)(v34 + 36);
    if ((v37 & 1) == 0) {
      goto LABEL_50;
    }
    goto LABEL_49;
  }
  uint64_t v34 = *(void *)(qword_10047EA58 + 40);
  *(unsigned char *)v4 = 34;
  unsigned int v35 = v4 + 1;
  v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v34 + 32);
  if (v36 > 0x7F) {
    goto LABEL_48;
  }
LABEL_45:
  *((unsigned char *)v4 + 1) = (_BYTE)v36;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  int v37 = *(_DWORD *)(v34 + 36);
  if (v37)
  {
LABEL_49:
    uint64_t v38 = *(void *)(v34 + 16);
    *(unsigned char *)v4 = 9;
    *(void *)((char *)v4 + 1) = v38;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    int v37 = *(_DWORD *)(v34 + 36);
  }
LABEL_50:
  if ((v37 & 2) != 0)
  {
    uint64_t v42 = *(void *)(v34 + 24);
    *(unsigned char *)v4 = 17;
    *(void *)((char *)v4 + 1) = v42;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    v43 = *(void **)(v34 + 8);
    v40 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v34 + 8);
    v39 = v43;
    if (!v43) {
      goto LABEL_56;
    }
  }
  else
  {
    v41 = *(void **)(v34 + 8);
    v40 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v34 + 8);
    v39 = v41;
    if (!v41) {
      goto LABEL_56;
    }
  }
  if (*v39 != v39[1]) {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v40, v4, a3);
  }
LABEL_56:
  if ((*((unsigned char *)this + 76) & 0x10) == 0) {
    goto LABEL_70;
  }
  uint64_t v44 = *((void *)this + 6);
  if (v44)
  {
    *(unsigned char *)v4 = 42;
    unsigned int v45 = v4 + 1;
    v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v44 + 32);
    if (v46 <= 0x7F) {
      goto LABEL_59;
    }
LABEL_62:
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v46, v45, a3);
    int v47 = *(_DWORD *)(v44 + 36);
    if ((v47 & 1) == 0) {
      goto LABEL_64;
    }
    goto LABEL_63;
  }
  uint64_t v44 = *(void *)(qword_10047EA58 + 48);
  *(unsigned char *)v4 = 42;
  unsigned int v45 = v4 + 1;
  v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v44 + 32);
  if (v46 > 0x7F) {
    goto LABEL_62;
  }
LABEL_59:
  *((unsigned char *)v4 + 1) = (_BYTE)v46;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  int v47 = *(_DWORD *)(v44 + 36);
  if (v47)
  {
LABEL_63:
    uint64_t v48 = *(void *)(v44 + 16);
    *(unsigned char *)v4 = 9;
    *(void *)((char *)v4 + 1) = v48;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    int v47 = *(_DWORD *)(v44 + 36);
  }
LABEL_64:
  if ((v47 & 2) != 0)
  {
    uint64_t v52 = *(void *)(v44 + 24);
    *(unsigned char *)v4 = 17;
    *(void *)((char *)v4 + 1) = v52;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    v53 = *(void **)(v44 + 8);
    v50 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v44 + 8);
    v49 = v53;
    if (!v53) {
      goto LABEL_70;
    }
  }
  else
  {
    v51 = *(void **)(v44 + 8);
    v50 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v44 + 8);
    v49 = v51;
    if (!v51) {
      goto LABEL_70;
    }
  }
  if (*v49 != v49[1]) {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v50, v4, a3);
  }
LABEL_70:
  if ((*((unsigned char *)this + 76) & 0x20) == 0) {
    goto LABEL_84;
  }
  uint64_t v54 = *((void *)this + 7);
  if (v54)
  {
    *(unsigned char *)v4 = 50;
    unsigned int v55 = v4 + 1;
    v56 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v54 + 32);
    if (v56 <= 0x7F) {
      goto LABEL_73;
    }
LABEL_76:
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v56, v55, a3);
    int v57 = *(_DWORD *)(v54 + 36);
    if ((v57 & 1) == 0) {
      goto LABEL_78;
    }
    goto LABEL_77;
  }
  uint64_t v54 = *(void *)(qword_10047EA58 + 56);
  *(unsigned char *)v4 = 50;
  unsigned int v55 = v4 + 1;
  v56 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v54 + 32);
  if (v56 > 0x7F) {
    goto LABEL_76;
  }
LABEL_73:
  *((unsigned char *)v4 + 1) = (_BYTE)v56;
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  int v57 = *(_DWORD *)(v54 + 36);
  if (v57)
  {
LABEL_77:
    uint64_t v58 = *(void *)(v54 + 16);
    *(unsigned char *)v4 = 9;
    *(void *)((char *)v4 + 1) = v58;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    int v57 = *(_DWORD *)(v54 + 36);
  }
LABEL_78:
  if ((v57 & 2) != 0)
  {
    uint64_t v62 = *(void *)(v54 + 24);
    *(unsigned char *)v4 = 17;
    *(void *)((char *)v4 + 1) = v62;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    v63 = *(void **)(v54 + 8);
    v60 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v54 + 8);
    v59 = v63;
    if (!v63) {
      goto LABEL_84;
    }
  }
  else
  {
    v61 = *(void **)(v54 + 8);
    v60 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v54 + 8);
    v59 = v61;
    if (!v61) {
      goto LABEL_84;
    }
  }
  if (*v59 != v59[1]) {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v60, v4, a3);
  }
LABEL_84:
  if ((*((unsigned char *)this + 76) & 0x40) == 0) {
    goto LABEL_98;
  }
  uint64_t v64 = *((void *)this + 8);
  if (v64)
  {
    *(unsigned char *)v4 = 58;
    unsigned int v65 = v4 + 1;
    v66 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v64 + 32);
    if (v66 <= 0x7F) {
      goto LABEL_87;
    }
  }
  else
  {
    uint64_t v64 = *(void *)(qword_10047EA58 + 64);
    *(unsigned char *)v4 = 58;
    unsigned int v65 = v4 + 1;
    v66 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v64 + 32);
    if (v66 <= 0x7F)
    {
LABEL_87:
      *((unsigned char *)v4 + 1) = (_BYTE)v66;
      v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      int v67 = *(_DWORD *)(v64 + 36);
      if ((v67 & 1) == 0) {
        goto LABEL_92;
      }
      goto LABEL_91;
    }
  }
  v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v66, v65, a3);
  int v67 = *(_DWORD *)(v64 + 36);
  if (v67)
  {
LABEL_91:
    uint64_t v68 = *(void *)(v64 + 16);
    *(unsigned char *)v4 = 9;
    *(void *)((char *)v4 + 1) = v68;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    int v67 = *(_DWORD *)(v64 + 36);
  }
LABEL_92:
  if ((v67 & 2) != 0)
  {
    uint64_t v72 = *(void *)(v64 + 24);
    *(unsigned char *)v4 = 17;
    *(void *)((char *)v4 + 1) = v72;
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    v73 = *(void **)(v64 + 8);
    v70 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v64 + 8);
    v69 = v73;
    if (!v73) {
      goto LABEL_98;
    }
  }
  else
  {
    v71 = *(void **)(v64 + 8);
    v70 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v64 + 8);
    v69 = v71;
    if (!v71) {
      goto LABEL_98;
    }
  }
  if (*v69 != v69[1]) {
    v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v70, v4, a3);
  }
LABEL_98:
  v76 = (void *)*((void *)this + 1);
  v75 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  v74 = v76;
  if (!v76 || *v74 == v74[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v75, v4, a3);
}

uint64_t sub_10011A5D4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 76);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v6 = *(void **)(a1 + 8);
    if (!v6) {
      goto LABEL_36;
    }
    goto LABEL_111;
  }
  if ((*(unsigned char *)(a1 + 76) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 76) & 2) == 0) {
      goto LABEL_30;
    }
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  int v8 = *(unsigned __int8 *)(v7 + 23);
  char v9 = v8;
  uint64_t v10 = *(void *)(v7 + 8);
  if ((v8 & 0x80u) == 0) {
    unint64_t v11 = *(unsigned __int8 *)(v7 + 23);
  }
  else {
    unint64_t v11 = v10;
  }
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v10 = *(void *)(v7 + 8);
    int v3 = *(_DWORD *)(a1 + 76);
    char v9 = *(unsigned char *)(v7 + 23);
  }
  else
  {
    int v12 = 1;
  }
  if (v9 < 0) {
    int v8 = v10;
  }
  uint64_t v4 = (v12 + v8 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_16:
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_10047EA58 + 24);
    }
    int v14 = *(unsigned __int8 *)(v13 + 36);
    int v15 = (v14 << 31 >> 31) & 9;
    if ((v14 & 2) != 0) {
      v15 += 9;
    }
    if (*(unsigned char *)(v13 + 36)) {
      LODWORD(v16) = v15;
    }
    else {
      LODWORD(v16) = 0;
    }
    int v17 = *(void **)(v13 + 8);
    if (!v17 || *v17 == v17[1])
    {
      *(_DWORD *)(v13 + 32) = v16;
      int v18 = 1;
    }
    else
    {
      v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v13 + 8), a2)+ v16);
      *(_DWORD *)(v13 + 32) = v16;
      if (v16 >= 0x80) {
        int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
      }
      else {
        int v18 = 1;
      }
    }
    uint64_t v4 = (v4 + v16 + v18 + 1);
    int v3 = *(_DWORD *)(a1 + 76);
  }
LABEL_30:
  if ((v3 & 4) != 0)
  {
    uint64_t v20 = *(void *)(a1 + 32);
    if (!v20) {
      uint64_t v20 = *(void *)(qword_10047EA58 + 32);
    }
    int v21 = *(unsigned __int8 *)(v20 + 36);
    int v22 = (v21 << 31 >> 31) & 9;
    if ((v21 & 2) != 0) {
      v22 += 9;
    }
    if (*(unsigned char *)(v20 + 36)) {
      int v23 = v22;
    }
    else {
      int v23 = 0;
    }
    uint64_t v24 = *(void **)(v20 + 8);
    if (!v24 || *v24 == v24[1])
    {
      *(_DWORD *)(v20 + 32) = v23;
      uint64_t v4 = (v4 + v23 + 2);
      int v3 = *(_DWORD *)(a1 + 76);
      if ((v3 & 8) != 0) {
        goto LABEL_52;
      }
    }
    else
    {
      unsigned int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v20 + 8), a2)+ v23);
      *(_DWORD *)(v20 + 32) = v25;
      if (v25 >= 0x80)
      {
        uint64_t v4 = v4
           + v25
           + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2)+ 1;
        int v3 = *(_DWORD *)(a1 + 76);
        if ((v3 & 8) != 0) {
          goto LABEL_52;
        }
      }
      else
      {
        uint64_t v4 = (v4 + v25 + 2);
        int v3 = *(_DWORD *)(a1 + 76);
        if ((v3 & 8) != 0) {
          goto LABEL_52;
        }
      }
    }
LABEL_32:
    if ((v3 & 0x10) == 0) {
      goto LABEL_33;
    }
LABEL_67:
    uint64_t v32 = *(void *)(a1 + 48);
    if (!v32) {
      uint64_t v32 = *(void *)(qword_10047EA58 + 48);
    }
    int v33 = *(unsigned __int8 *)(v32 + 36);
    int v34 = (v33 << 31 >> 31) & 9;
    if ((v33 & 2) != 0) {
      v34 += 9;
    }
    if (*(unsigned char *)(v32 + 36)) {
      int v35 = v34;
    }
    else {
      int v35 = 0;
    }
    v36 = *(void **)(v32 + 8);
    if (!v36 || *v36 == v36[1])
    {
      *(_DWORD *)(v32 + 32) = v35;
      uint64_t v4 = (v4 + v35 + 2);
      int v3 = *(_DWORD *)(a1 + 76);
      if ((v3 & 0x20) != 0) {
        goto LABEL_82;
      }
    }
    else
    {
      int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v32 + 8), a2)+ v35);
      *(_DWORD *)(v32 + 32) = v37;
      if (v37 >= 0x80)
      {
        uint64_t v4 = v4
           + v37
           + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37, a2)+ 1;
        int v3 = *(_DWORD *)(a1 + 76);
        if ((v3 & 0x20) != 0) {
          goto LABEL_82;
        }
      }
      else
      {
        uint64_t v4 = (v4 + v37 + 2);
        int v3 = *(_DWORD *)(a1 + 76);
        if ((v3 & 0x20) != 0) {
          goto LABEL_82;
        }
      }
    }
LABEL_34:
    if ((v3 & 0x40) == 0) {
      goto LABEL_35;
    }
LABEL_97:
    uint64_t v44 = *(void *)(a1 + 64);
    if (!v44) {
      uint64_t v44 = *(void *)(qword_10047EA58 + 64);
    }
    int v45 = *(unsigned __int8 *)(v44 + 36);
    int v46 = (v45 << 31 >> 31) & 9;
    if ((v45 & 2) != 0) {
      v46 += 9;
    }
    if (*(unsigned char *)(v44 + 36)) {
      LODWORD(v47) = v46;
    }
    else {
      LODWORD(v47) = 0;
    }
    uint64_t v48 = *(void **)(v44 + 8);
    if (!v48 || *v48 == v48[1])
    {
      *(_DWORD *)(v44 + 32) = v47;
      int v49 = 1;
    }
    else
    {
      int v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v44 + 8), a2)+ v47);
      *(_DWORD *)(v44 + 32) = v47;
      if (v47 >= 0x80) {
        int v49 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47, a2);
      }
      else {
        int v49 = 1;
      }
    }
    uint64_t v4 = (v4 + v47 + v49 + 1);
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v6 = *(void **)(a1 + 8);
    if (!v6) {
      goto LABEL_36;
    }
    goto LABEL_111;
  }
  if ((v3 & 8) == 0) {
    goto LABEL_32;
  }
LABEL_52:
  uint64_t v26 = *(void *)(a1 + 40);
  if (!v26) {
    uint64_t v26 = *(void *)(qword_10047EA58 + 40);
  }
  int v27 = *(unsigned __int8 *)(v26 + 36);
  int v28 = (v27 << 31 >> 31) & 9;
  if ((v27 & 2) != 0) {
    v28 += 9;
  }
  if (*(unsigned char *)(v26 + 36)) {
    int v29 = v28;
  }
  else {
    int v29 = 0;
  }
  v30 = *(void **)(v26 + 8);
  if (!v30 || *v30 == v30[1])
  {
    *(_DWORD *)(v26 + 32) = v29;
    uint64_t v4 = (v4 + v29 + 2);
    int v3 = *(_DWORD *)(a1 + 76);
    if ((v3 & 0x10) != 0) {
      goto LABEL_67;
    }
  }
  else
  {
    v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v26 + 8), a2)+ v29);
    *(_DWORD *)(v26 + 32) = v31;
    if (v31 >= 0x80)
    {
      uint64_t v4 = v4
         + v31
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31, a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 76);
      if ((v3 & 0x10) != 0) {
        goto LABEL_67;
      }
    }
    else
    {
      uint64_t v4 = (v4 + v31 + 2);
      int v3 = *(_DWORD *)(a1 + 76);
      if ((v3 & 0x10) != 0) {
        goto LABEL_67;
      }
    }
  }
LABEL_33:
  if ((v3 & 0x20) == 0) {
    goto LABEL_34;
  }
LABEL_82:
  uint64_t v38 = *(void *)(a1 + 56);
  if (!v38) {
    uint64_t v38 = *(void *)(qword_10047EA58 + 56);
  }
  int v39 = *(unsigned __int8 *)(v38 + 36);
  int v40 = (v39 << 31 >> 31) & 9;
  if ((v39 & 2) != 0) {
    v40 += 9;
  }
  if (*(unsigned char *)(v38 + 36)) {
    int v41 = v40;
  }
  else {
    int v41 = 0;
  }
  uint64_t v42 = *(void **)(v38 + 8);
  if (!v42 || *v42 == v42[1])
  {
    *(_DWORD *)(v38 + 32) = v41;
    uint64_t v4 = (v4 + v41 + 2);
    if ((*(_DWORD *)(a1 + 76) & 0x40) != 0) {
      goto LABEL_97;
    }
  }
  else
  {
    v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v38 + 8), a2)+ v41);
    *(_DWORD *)(v38 + 32) = v43;
    if (v43 >= 0x80)
    {
      uint64_t v4 = v4
         + v43
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43, a2)+ 1;
      if ((*(_DWORD *)(a1 + 76) & 0x40) != 0) {
        goto LABEL_97;
      }
    }
    else
    {
      uint64_t v4 = (v4 + v43 + 2);
      if ((*(_DWORD *)(a1 + 76) & 0x40) != 0) {
        goto LABEL_97;
      }
    }
  }
LABEL_35:
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v6 = *(void **)(a1 + 8);
  if (!v6)
  {
LABEL_36:
    *(_DWORD *)(a1 + 72) = v4;
    return v4;
  }
LABEL_111:
  if (*v6 == v6[1]) {
    goto LABEL_36;
  }
  uint64_t v50 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
      + v4;
  *(_DWORD *)(a1 + 72) = v50;
  return v50;
}

uint64_t sub_10011AAE8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001188E8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10011ABC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011ABDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011ABF0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10011AC7C()
{
  return 1;
}

uint64_t sub_10011AC84()
{
  uint64_t v0 = qword_10047D900;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100116C2C;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D8E0;
}

void sub_10011AD14(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011AD28(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
    sub_10011BE34((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 32), a2 + 32);
    LOBYTE(v4) = *(unsigned char *)(a2 + 60);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    sub_10011BE34((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 32), a2 + 32);
    LOBYTE(v4) = *(unsigned char *)(a2 + 60);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 60) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047EA60 + 16);
    }
    sub_10011762C(v5, v6);
    int v4 = *(_DWORD *)(a2 + 60);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v7 = *(const std::string **)(a2 + 24);
    *(_DWORD *)(a1 + 60) |= 2u;
    int v8 = *(std::string **)(a1 + 24);
    if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v8, v7);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10011AEBC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10011AEE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011AEF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011AF0C(uint64_t a1)
{
  *(void *)a1 = off_100456DF8;
  uint64_t v2 = *(void *)(a1 + 24);
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if (qword_10047EA60 != a1)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  int v5 = *(_DWORD *)(a1 + 44);
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i < v5; ++i)
    {
      uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8 * i);
      if (v7)
      {
        (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        int v5 = *(_DWORD *)(a1 + 44);
      }
    }
  }
  if (*(void *)(a1 + 32)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10011B058(uint64_t a1)
{
  sub_10011AF0C(a1);

  operator delete();
}

uint64_t sub_10011B090(uint64_t result, int a2)
{
  *(_DWORD *)(result + 56) = a2;
  return result;
}

uint64_t sub_10011B098(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047EA60;
  if (!qword_10047EA60)
  {
    sub_100116F6C(0, a2, a3, a4);
    return qword_10047EA60;
  }
  return result;
}

void sub_10011B0D4()
{
}

void sub_10011B148()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10011B170(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 60))
  {
    if (*(unsigned char *)(this + 60))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 52))
        {
          *(_OWORD *)(this + 16) = 0u;
          *(_OWORD *)(this + 32) = 0u;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 44) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 60) & 2) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 24);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
          if (*(int *)(v1 + 40) < 1) {
            goto LABEL_15;
          }
          goto LABEL_13;
        }
        *(unsigned char *)uint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
      }
    }
  }
  if (*(int *)(v1 + 40) < 1) {
    goto LABEL_15;
  }
LABEL_13:
  uint64_t v4 = 0;
  do
  {
    uint64_t v5 = *(void *)(*(void *)(v1 + 32) + 8 * v4);
    this = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 32))(v5);
    ++v4;
  }
  while (v4 < *(int *)(v1 + 40));
LABEL_15:
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v6 + 8) = 0;
  *((_DWORD *)v6 + 13) = 0;
  if (v7)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
  }
  return this;
}

uint64_t sub_10011B288(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 32);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v8 = (char *)*((void *)this + 1);
        if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v8;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v8 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v10 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 60) |= 1u;
        uint64_t v16 = *(void *)(a1 + 16);
        if (!v16) {
          operator new();
        }
        unsigned int v38 = 0;
        int v17 = (char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v38))return 0; {
        }
          }
        else
        {
          unsigned int v38 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0;
        }
        int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v38);
        if (!sub_1001178CC(v16, this, v23, v24) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        int v25 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v25, 1);
        int v27 = v25 - 1;
        if (v27 < 0 == v26) {
          *((_DWORD *)this + 14) = v27;
        }
        int v28 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v28 < *((void *)this + 2) && *v28 == 18)
        {
          *((void *)this + 1) = v28 + 1;
          *(_DWORD *)(a1 + 60) |= 2u;
          if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_21:
          }
            operator new();
          goto LABEL_22;
        }
      }
      if (v10 != 2) {
        break;
      }
      int v11 = TagFallback & 7;
      if (v11 != 2) {
        goto LABEL_27;
      }
      *(_DWORD *)(a1 + 60) |= 2u;
      if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        goto LABEL_21;
      }
LABEL_22:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
      if (!result) {
        return result;
      }
      v19 = (unsigned char *)*((void *)this + 1);
      if ((unint64_t)v19 < *((void *)this + 2) && *v19 == 26)
      {
        do
        {
          *((void *)this + 1) = v19 + 1;
          int v12 = *(_DWORD *)(a1 + 44);
          uint64_t v13 = *(int *)(a1 + 40);
          if ((int)v13 >= v12) {
            goto LABEL_41;
          }
LABEL_12:
          uint64_t v14 = *(void *)(a1 + 32);
          *(_DWORD *)(a1 + 40) = v13 + 1;
          uint64_t v15 = *(void *)(v14 + 8 * v13);
          unsigned int v39 = 0;
          int v29 = (char *)*((void *)this + 1);
          if ((unint64_t)v29 >= *((void *)this + 2) || *v29 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v39))return 0; {
          }
            }
          else
          {
            unsigned int v39 = *v29;
            *((void *)this + 1) = v29 + 1;
          }
          int v30 = *((_DWORD *)this + 14);
          int v31 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v30 + 1;
          if (v30 >= v31) {
            return 0;
          }
          int v32 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v39);
          if (!sub_10011922C(v15, this, v33, v34) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v32);
          int v35 = *((_DWORD *)this + 14);
          BOOL v26 = __OFSUB__(v35, 1);
          int v36 = v35 - 1;
          if (v36 < 0 == v26) {
            *((_DWORD *)this + 14) = v36;
          }
          v19 = (unsigned char *)*((void *)this + 1);
          int v37 = (unsigned char *)*((void *)this + 2);
        }
        while (v19 < v37 && *v19 == 26);
        if (v19 == v37 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (v10 == 3)
    {
      int v11 = TagFallback & 7;
      if (v11 == 2)
      {
        int v12 = *(_DWORD *)(a1 + 44);
        uint64_t v13 = *(int *)(a1 + 40);
        if ((int)v13 < v12) {
          goto LABEL_12;
        }
LABEL_41:
        if (v12 == *(_DWORD *)(a1 + 48))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v12 + 1);
          int v12 = *(_DWORD *)(a1 + 44);
        }
        *(_DWORD *)(a1 + 44) = v12 + 1;
        operator new();
      }
    }
    else
    {
      int v11 = TagFallback & 7;
    }
LABEL_27:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_10011B6C4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10011B6EC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10011B714(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 60);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_9:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
    if (*(int *)(v5 + 40) < 1) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  uint64_t v7 = *(void *)(result + 16);
  if (v7)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    if ((*(_DWORD *)(v5 + 60) & 2) != 0) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047EA60 + 16), a2, a4);
    if ((*(_DWORD *)(v5 + 60) & 2) != 0) {
      goto LABEL_9;
    }
  }
LABEL_3:
  if (*(int *)(v5 + 40) < 1) {
    goto LABEL_12;
  }
LABEL_10:
  uint64_t v8 = 0;
  do
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 32) + 8 * v8++), a2, a4);
  while (v8 < *(int *)(v5 + 40));
LABEL_12:
  int v11 = *(void **)(v5 + 8);
  unsigned int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  char v9 = v11;
  if (v11 && *v9 != v9[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10011B81C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 15);
  if (v6)
  {
    uint64_t v7 = (unsigned int *)*((void *)this + 2);
    if (v7)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v8 = a2 + 1;
      char v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7[12];
      if (v9 <= 0x7F) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v7 = *(unsigned int **)(qword_10047EA60 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v8 = a2 + 1;
      char v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7[12];
      if (v9 <= 0x7F)
      {
LABEL_7:
        *((unsigned char *)v4 + 1) = (_BYTE)v9;
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100117C5C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v7, (uint64_t)v4 + 2, a3);
        if ((*((_DWORD *)this + 15) & 2) != 0) {
          goto LABEL_11;
        }
LABEL_3:
        if (*((int *)this + 10) < 1) {
          goto LABEL_28;
        }
        goto LABEL_23;
      }
    }
    uint64_t v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v8, a3);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100117C5C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v7, v10, v11);
    if ((*((_DWORD *)this + 15) & 2) != 0) {
      goto LABEL_11;
    }
    goto LABEL_3;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_11:
  uint64_t v12 = *((void *)this + 3);
  *(unsigned char *)uint64_t v4 = 18;
  if (*(char *)(v12 + 23) < 0)
  {
    uint64_t v13 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v12 + 8);
    if (v13 <= 0x7F) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v12 + 23);
    if (*(unsigned __int8 *)(v12 + 23) <= 0x7Fu)
    {
LABEL_13:
      *((unsigned char *)v4 + 1) = (_BYTE)v13;
      int v14 = v4 + 2;
      goto LABEL_16;
    }
  }
  int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)v4 + 1, a3);
LABEL_16:
  int v15 = *(char *)(v12 + 23);
  if (v15 >= 0) {
    uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12;
  }
  else {
    uint64_t v16 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v12;
  }
  if (v15 >= 0) {
    int v17 = (const void *)*(unsigned __int8 *)(v12 + 23);
  }
  else {
    int v17 = (const void *)*(unsigned int *)(v12 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v16, v17, v14, a4);
  if (*((int *)this + 10) < 1) {
    goto LABEL_28;
  }
LABEL_23:
  uint64_t v18 = 0;
  do
  {
    int v20 = *(unsigned int **)(*((void *)this + 4) + 8 * v18);
    *(unsigned char *)uint64_t v4 = 26;
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20[18];
    if (v21 > 0x7F)
    {
      v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v21;
      v19 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    uint64_t v4 = sub_100119D84((wireless_diagnostics::google::protobuf::internal::WireFormat *)v20, v19, a3, a4);
    ++v18;
  }
  while (v18 < *((int *)this + 10));
LABEL_28:
  uint64_t v24 = (void *)*((void *)this + 1);
  uint64_t v23 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v22 = v24;
  if (!v24 || *v22 == v22[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v23, v4, a3);
}

uint64_t sub_10011B9F0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (!*(unsigned char *)(a1 + 60))
  {
    int v3 = 0;
    goto LABEL_34;
  }
  if ((*(unsigned char *)(a1 + 60) & 1) == 0)
  {
    int v3 = 0;
    if ((*(unsigned char *)(a1 + 60) & 2) == 0) {
      goto LABEL_34;
    }
    goto LABEL_25;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    int v5 = *(unsigned __int8 *)(v4 + 52);
    if (*(unsigned char *)(v4 + 52)) {
      goto LABEL_8;
    }
LABEL_18:
    uint64_t v7 = 0;
    unsigned int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    char v9 = *(void **)(v4 + 8);
    if (!v9) {
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  uint64_t v4 = *(void *)(qword_10047EA60 + 16);
  int v5 = *(unsigned __int8 *)(v4 + 52);
  if (!*(unsigned char *)(v4 + 52)) {
    goto LABEL_18;
  }
LABEL_8:
  unsigned int v6 = (v5 << 31 >> 31) & 9;
  if ((v5 & 2) != 0) {
    v6 += 9;
  }
  if ((v5 & 4) != 0) {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v6 + 9);
  }
  else {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6;
  }
  if ((v5 & 8) != 0) {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v7
  }
                                                                         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v4 + 40), (unint64_t)a2)+ 1);
  unsigned int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  char v9 = *(void **)(v4 + 8);
  if (v9)
  {
LABEL_19:
    if (*v9 != v9[1]) {
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v8, a2)+ v7);
    }
  }
LABEL_21:
  *(_DWORD *)(v4 + 48) = v7;
  if (v7 >= 0x80)
  {
    int v3 = v7
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2)
       + 1;
    if ((*(_DWORD *)(a1 + 60) & 2) == 0) {
      goto LABEL_34;
    }
  }
  else
  {
    int v3 = v7 + 2;
    if ((*(_DWORD *)(a1 + 60) & 2) == 0) {
      goto LABEL_34;
    }
  }
LABEL_25:
  uint64_t v10 = *(void *)(a1 + 24);
  int v11 = *(unsigned __int8 *)(v10 + 23);
  char v12 = v11;
  uint64_t v13 = *(void *)(v10 + 8);
  if ((v11 & 0x80u) == 0) {
    unint64_t v14 = *(unsigned __int8 *)(v10 + 23);
  }
  else {
    unint64_t v14 = v13;
  }
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14, a2);
    int v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v13 = *(void *)(v10 + 8);
    char v12 = *(unsigned char *)(v10 + 23);
  }
  else
  {
    int v15 = 1;
  }
  if (v12 < 0) {
    int v11 = v13;
  }
  v3 += v15 + v11 + 1;
LABEL_34:
  int v16 = *(_DWORD *)(a1 + 40);
  uint64_t v17 = (v16 + v3);
  if (v16 >= 1)
  {
    uint64_t v18 = 0;
    do
    {
      int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10011A5D4(*(void *)(*(void *)(a1 + 32) + 8 * v18), a2);
      int v21 = (int)v20;
      if (v20 >= 0x80) {
        int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
      }
      else {
        int v19 = 1;
      }
      uint64_t v17 = (v21 + v17 + v19);
      ++v18;
    }
    while (v18 < *(int *)(a1 + 40));
  }
  int v22 = *(void **)(a1 + 8);
  if (v22 && *v22 != v22[1]) {
    uint64_t v17 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v17;
  }
  *(_DWORD *)(a1 + 56) = v17;
  return v17;
}

uint64_t sub_10011BBD4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10011AD28((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10011BCB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011BCC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011BCDC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10011BD68()
{
  return 1;
}

uint64_t sub_10011BD70()
{
  uint64_t v0 = qword_10047D900;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100116C2C;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D8F0;
}

void sub_10011BE00(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011BE14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_10011BE1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10011BE24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_10011BE2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_10011BE34(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_1001188E8(*(void *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_10011BF68()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10011BF94()
{
  uint64_t v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_10011C1E4();
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  __p = operator new(0x20uLL);
  long long v3 = xmmword_1003E6DA0;
  strcpy((char *)__p, "NearbyInteractionTypes.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  operator delete(__p);
  if (!FileByName)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  }
  qword_10047D918 = *(void *)(FileByName + 80);
  operator new();
}

void sub_10011C178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011C18C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011C1A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10011C1E4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10047D908 & 1) == 0)
  {
    byte_10047D908 = 1;
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/protobuf/clpsensorsurvey/Proto/NearbyInteractionTypes.pb.cc", a4);
    sub_1000E6AE4(v4, v5, v6, v7);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)&unk_1003EB140, (const void *)0x336, v8);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_10011C348()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10011C370()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10011C398()
{
  if (qword_10047EA68) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EA68 + 8))(qword_10047EA68);
  }
  if (qword_10047D920) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D920 + 8))(qword_10047D920);
  }
  if (qword_10047EA70) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EA70 + 8))(qword_10047EA70);
  }
  uint64_t result = qword_10047D930;
  if (qword_10047D930)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10047D930 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_10011C480()
{
  uint64_t v0 = qword_10047D948;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v3[1] = sub_10011BF94;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
  if (!qword_10047EA68) {
    ((void (*)(void))sub_10011C1E4)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EA70) {
    sub_10011C1E4(v1);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_10011C564(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011C578(uint64_t a1)
{
  *(void *)a1 = off_100456FB8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  return a1;
}

void sub_10011C5DC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10011C5F0(uint64_t a1)
{
  *(void *)a1 = off_100456F08;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(_DWORD *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return a1;
}

void sub_10011C640(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

BOOL sub_10011C654(unsigned int a1)
{
  return a1 < 3;
}

uint64_t sub_10011C660(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 48);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 48))
  {
    int v7 = *(_DWORD *)(a2 + 40);
    *(_DWORD *)(a1 + 48) |= 1u;
    *(_DWORD *)(a1 + 40) = v7;
    int v4 = *(_DWORD *)(a2 + 48);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_12:
      uint64_t v9 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 48) |= 4u;
      *(void *)(a1 + 24) = v9;
      if ((*(_DWORD *)(a2 + 48) & 8) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_8;
    }
  }
  else if ((*(unsigned char *)(a2 + 48) & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 48) |= 2u;
  *(void *)(a1 + 16) = v8;
  int v4 = *(_DWORD *)(a2 + 48);
  if ((v4 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_7:
  if ((v4 & 8) != 0)
  {
LABEL_8:
    uint64_t v5 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 48) |= 8u;
    *(void *)(a1 + 32) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10011C760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011C774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011C788(uint64_t a1)
{
  *(void *)a1 = off_100456F08;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10011C7DC(uint64_t a1)
{
  *(void *)a1 = off_100456F08;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10011C844(uint64_t result, int a2)
{
  *(_DWORD *)(result + 44) = a2;
  return result;
}

void sub_10011C84C()
{
}

void sub_10011C8B4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10011C8DC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 40) = 0;
    *(void *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 10) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10011C904(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        v16[0] = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 < *((void *)this + 2) && (*v10 & 0x80000000) == 0)
        {
          unsigned int v11 = *v10;
          *((void *)this + 1) = v10 + 1;
          if (v11 <= 1)
          {
LABEL_12:
            *(_DWORD *)(a1 + 48) |= 1u;
            *(_DWORD *)(a1 + 40) = v11;
            goto LABEL_27;
          }
LABEL_26:
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, (int)v11);
LABEL_27:
          uint64_t v13 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v13 >= *((void *)this + 2) || *v13 != 17) {
            continue;
          }
          *((void *)this + 1) = v13 + 1;
          *(void *)int v16 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v16) & 1) == 0)return 0; {
          goto LABEL_30;
          }
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v16);
        if (result)
        {
          unsigned int v11 = v16[0];
          if (v16[0] <= 1) {
            goto LABEL_12;
          }
          goto LABEL_26;
        }
        return result;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_21;
        }
        *(void *)int v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v16) & 1) == 0)return 0; {
LABEL_30:
        }
        *(void *)(a1 + 16) = *(void *)v16;
        *(_DWORD *)(a1 + 48) |= 2u;
        unint64_t v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 25) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
        *(void *)int v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v16) & 1) == 0)return 0; {
LABEL_33:
        }
        *(void *)(a1 + 24) = *(void *)v16;
        *(_DWORD *)(a1 + 48) |= 4u;
        int v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 33) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_36:
        *(void *)int v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v16) & 1) == 0)return 0; {
        *(void *)(a1 + 32) = *(void *)v16;
        }
        *(_DWORD *)(a1 + 48) |= 8u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_21;
        }
        *(void *)int v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v16) & 1) == 0)return 0; {
        goto LABEL_33;
        }
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_21;
        }
        goto LABEL_36;
      default:
        int v9 = TagFallback & 7;
LABEL_21:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10011CBE0(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 40), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 48) & 8) == 0)
  {
LABEL_5:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  uint64_t v10 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_11:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

unsigned char *sub_10011CCB4(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 48))
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 10);
    *a2 = 8;
    if ((v8 & 0x80000000) != 0)
    {
      a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v8, (unint64_t)(a2 + 1), a3);
      int v4 = *((_DWORD *)this + 12);
      if ((v4 & 2) != 0) {
        goto LABEL_14;
      }
    }
    else if (v8 > 0x7F)
    {
      a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)a2 + 1, a3);
      int v4 = *((_DWORD *)this + 12);
      if ((v4 & 2) != 0) {
        goto LABEL_14;
      }
    }
    else
    {
      a2[1] = (_BYTE)v8;
      a2 += 2;
      int v4 = *((_DWORD *)this + 12);
      if ((v4 & 2) != 0) {
        goto LABEL_14;
      }
    }
LABEL_3:
    if ((v4 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_15;
  }
  int v4 = *((_DWORD *)this + 12);
  if ((v4 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_14:
  uint64_t v9 = *((void *)this + 2);
  *a2 = 17;
  *(void *)(a2 + 1) = v9;
  a2 += 9;
  int v4 = *((_DWORD *)this + 12);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t v10 = *((void *)this + 3);
  *a2 = 25;
  *(void *)(a2 + 1) = v10;
  a2 += 9;
  if ((*((_DWORD *)this + 12) & 8) == 0)
  {
LABEL_5:
    int v7 = (void *)*((void *)this + 1);
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = v7;
    if (!v7) {
      return a2;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v11 = *((void *)this + 4);
  *a2 = 33;
  *(void *)(a2 + 1) = v11;
  a2 += 9;
  char v12 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v12;
  if (!v12) {
    return a2;
  }
LABEL_17:
  if (*v5 == v5[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10011CE80(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 48);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 48))
    {
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
      if ((v9 & 0x80000000) != 0)
      {
        unsigned int v4 = 11;
      }
      else if (v9 >= 0x80)
      {
        unsigned int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2)
           + 1;
        int v3 = *(_DWORD *)(a1 + 48);
      }
      else
      {
        unsigned int v4 = 2;
      }
    }
    else
    {
      unsigned int v4 = 0;
    }
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v5 = 0;
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v7 = *(void **)(a1 + 8);
    if (!v7)
    {
LABEL_5:
      *(_DWORD *)(a1 + 44) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1]) {
    goto LABEL_5;
  }
  uint64_t v10 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 44) = v10;
  return v10;
}

uint64_t sub_10011CF50(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10011C660((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10011D030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011D044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011D058(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10011D0E4()
{
  return 1;
}

uint64_t sub_10011D0EC()
{
  uint64_t v0 = qword_10047D948;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10011BF94;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D928;
}

void sub_10011D17C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011D190(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
    int v4 = *(_DWORD *)(a2 + 84);
    if (!(_BYTE)v4) {
      goto LABEL_14;
    }
  }
  else
  {
    int v4 = *(_DWORD *)(a2 + 84);
    if (!(_BYTE)v4) {
      goto LABEL_14;
    }
  }
  if (v4)
  {
    uint64_t v8 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 84) |= 1u;
    uint64_t v9 = *(std::string **)(a1 + 16);
    if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v9, v8);
    int v4 = *(_DWORD *)(a2 + 84);
    if ((v4 & 2) == 0)
    {
LABEL_7:
      if ((v4 & 4) == 0) {
        goto LABEL_8;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_7;
  }
  uint64_t v10 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 84) |= 2u;
  *(void *)(a1 + 24) = v10;
  int v4 = *(_DWORD *)(a2 + 84);
  if ((v4 & 4) == 0)
  {
LABEL_8:
    if ((v4 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v11 = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 84) |= 4u;
  *(_DWORD *)(a1 + 48) = v11;
  int v4 = *(_DWORD *)(a2 + 84);
  if ((v4 & 8) == 0)
  {
LABEL_9:
    if ((v4 & 0x10) == 0) {
      goto LABEL_10;
    }
LABEL_23:
    *(_DWORD *)(a1 + 84) |= 0x10u;
    uint64_t v13 = *(void *)(a1 + 40);
    if (!v13) {
      operator new();
    }
    uint64_t v14 = *(void *)(a2 + 40);
    if (v14)
    {
      sub_10011C660(v13, v14);
      int v4 = *(_DWORD *)(a2 + 84);
      if ((v4 & 0x20) != 0) {
        goto LABEL_29;
      }
    }
    else
    {
      sub_10011C660(v13, *(void *)(qword_10047EA68 + 40));
      int v4 = *(_DWORD *)(a2 + 84);
      if ((v4 & 0x20) != 0) {
        goto LABEL_29;
      }
    }
LABEL_11:
    if ((v4 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_22:
  uint64_t v12 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 84) |= 8u;
  *(void *)(a1 + 32) = v12;
  int v4 = *(_DWORD *)(a2 + 84);
  if ((v4 & 0x10) != 0) {
    goto LABEL_23;
  }
LABEL_10:
  if ((v4 & 0x20) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  uint64_t v15 = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 84) |= 0x20u;
  *(void *)(a1 + 56) = v15;
  int v4 = *(_DWORD *)(a2 + 84);
  if ((v4 & 0x40) == 0)
  {
LABEL_12:
    if ((v4 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_30:
  int v16 = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a1 + 84) |= 0x40u;
  *(_DWORD *)(a1 + 52) = v16;
  int v4 = *(_DWORD *)(a2 + 84);
  if ((v4 & 0x80) != 0)
  {
LABEL_13:
    uint64_t v5 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 84) |= 0x80u;
    *(void *)(a1 + 64) = v5;
    int v4 = *(_DWORD *)(a2 + 84);
  }
LABEL_14:
  if ((v4 & 0x100) != 0)
  {
    uint64_t v6 = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 84) |= 0x100u;
    *(void *)(a1 + 72) = v6;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10011D408()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10011D430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011D444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011D458(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_100456FB8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  sub_10011D190(a1, a2);
  return a1;
}

void sub_10011D4DC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10011D4F8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10011D50C(void *a1)
{
  *a1 = off_100456FB8;
  uint64_t v2 = a1[2];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if ((void *)qword_10047EA68 != a1)
  {
    uint64_t v4 = a1[5];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10011D5E0(void *a1)
{
  *a1 = off_100456FB8;
  uint64_t v2 = a1[2];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if ((void *)qword_10047EA68 != a1)
  {
    uint64_t v4 = a1[5];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10011D6C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 80) = a2;
  return result;
}

void sub_10011D6D0()
{
}

void sub_10011D74C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10011D774(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 84);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(this + 16);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
          *(_DWORD *)(this + 48) = 0;
          *(void *)(this + 24) = 0;
          *(void *)(this + 32) = 0;
          if ((*(unsigned char *)(this + 84) & 0x10) != 0)
          {
LABEL_7:
            this = *(void *)(this + 40);
            if (this)
            {
              if (*(unsigned char *)(this + 48))
              {
                *(void *)(this + 16) = 0;
                *(void *)(this + 24) = 0;
                *(_DWORD *)(this + 40) = 0;
                *(void *)(this + 32) = 0;
              }
              uint64_t v4 = *(void *)(this + 8);
              this += 8;
              *(_DWORD *)(this + 40) = 0;
              if (v4) {
                this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
              }
            }
          }
LABEL_13:
          *(void *)(v1 + 60) = 0;
          *(void *)(v1 + 52) = 0;
          *(_DWORD *)(v1 + 68) = 0;
          int v2 = *(_DWORD *)(v1 + 84);
          goto LABEL_14;
        }
        *(unsigned char *)uint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
      }
    }
    *(_DWORD *)(this + 48) = 0;
    *(void *)(this + 24) = 0;
    *(void *)(this + 32) = 0;
    if ((*(unsigned char *)(this + 84) & 0x10) != 0) {
      goto LABEL_7;
    }
    goto LABEL_13;
  }
LABEL_14:
  if ((v2 & 0xFF00) != 0) {
    *(void *)(v1 + 72) = 0;
  }
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v5 + 19) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return this;
}

uint64_t sub_10011D86C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (unint64_t *)(a1 + 24);
  int v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  uint64_t v8 = (unsigned int *)(a1 + 52);
  while (2)
  {
    uint64_t v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 84) |= 1u;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        uint64_t v14 = (unsigned char *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v14 >= v13 || *v14 != 16) {
          continue;
        }
        uint64_t v15 = v14 + 1;
        *((void *)this + 1) = v15;
LABEL_18:
        if ((unint64_t)v15 >= v13 || (char)*v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v16 = (unsigned char *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
          *(_DWORD *)(a1 + 84) |= 2u;
          if ((unint64_t)v16 < v13) {
            goto LABEL_45;
          }
          continue;
        }
        *uint64_t v6 = *v15;
        int v16 = v15 + 1;
        *((void *)this + 1) = v16;
        *(_DWORD *)(a1 + 84) |= 2u;
        if ((unint64_t)v16 >= v13) {
          continue;
        }
LABEL_45:
        if (*v16 != 24) {
          continue;
        }
        uint64_t v18 = v16 + 1;
        *((void *)this + 1) = v18;
        v40[0] = 0;
        if ((unint64_t)v18 < v13)
        {
LABEL_47:
          if ((*v18 & 0x80000000) == 0)
          {
            unsigned int v22 = *v18;
            *((void *)this + 1) = v18 + 1;
            if (v22 <= 2) {
              goto LABEL_49;
            }
            goto LABEL_52;
          }
        }
LABEL_50:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v40);
        if (!result) {
          return result;
        }
        unsigned int v22 = v40[0];
        if (v40[0] <= 2)
        {
LABEL_49:
          *(_DWORD *)(a1 + 84) |= 4u;
          *(_DWORD *)(a1 + 48) = v22;
          goto LABEL_53;
        }
LABEL_52:
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v7, 3, (int)v22);
LABEL_53:
        uint64_t v23 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 != 33) {
          continue;
        }
        *((void *)this + 1) = v23 + 1;
        *(void *)int v40 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v40) & 1) == 0)return 0; {
LABEL_56:
        }
        *(void *)(a1 + 32) = *(void *)v40;
        int v24 = *(_DWORD *)(a1 + 84) | 8;
        *(_DWORD *)(a1 + 84) = v24;
        int v25 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 != 42) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
        *(_DWORD *)(a1 + 84) = v24 | 0x10;
        uint64_t v19 = *(void *)(a1 + 40);
        if (!v19) {
LABEL_59:
        }
          operator new();
LABEL_60:
        v40[0] = 0;
        BOOL v26 = (char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v40))return 0; {
        }
          }
        else
        {
          v40[0] = *v26;
          *((void *)this + 1) = v26 + 1;
        }
        int v27 = *((_DWORD *)this + 14);
        int v28 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v27 + 1;
        if (v27 < v28)
        {
          int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v40[0]);
          if (sub_10011C904(v19, this, v30, v31))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
              int v32 = *((_DWORD *)this + 14);
              BOOL v33 = __OFSUB__(v32, 1);
              int v34 = v32 - 1;
              if (v34 < 0 == v33) {
                *((_DWORD *)this + 14) = v34;
              }
              int v35 = (unsigned char *)*((void *)this + 1);
              if ((unint64_t)v35 < *((void *)this + 2) && *v35 == 49)
              {
                *((void *)this + 1) = v35 + 1;
                *(void *)int v40 = 0;
                if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v40) & 1) == 0)return 0; {
LABEL_72:
                }
                *(void *)(a1 + 56) = *(void *)v40;
                *(_DWORD *)(a1 + 84) |= 0x20u;
                int v36 = (unsigned char *)*((void *)this + 1);
                unint64_t v20 = *((void *)this + 2);
                if ((unint64_t)v36 < v20 && *v36 == 56)
                {
                  int v21 = v36 + 1;
                  *((void *)this + 1) = v21;
LABEL_75:
                  if ((unint64_t)v21 >= v20 || *v21 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
                    if (!result) {
                      return result;
                    }
                    int v37 = (unsigned char *)*((void *)this + 1);
                    unint64_t v38 = *((void *)this + 2);
                    *(_DWORD *)(a1 + 84) |= 0x40u;
                    if ((unint64_t)v37 < v38) {
                      goto LABEL_81;
                    }
                  }
                  else
                  {
                    unsigned int *v8 = *v21;
                    int v37 = v21 + 1;
                    *((void *)this + 1) = v37;
                    *(_DWORD *)(a1 + 84) |= 0x40u;
                    if ((unint64_t)v37 < v20)
                    {
LABEL_81:
                      if (*v37 == 65)
                      {
                        *((void *)this + 1) = v37 + 1;
                        *(void *)int v40 = 0;
                        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v40) & 1) == 0)return 0; {
LABEL_83:
                        }
                        *(void *)(a1 + 64) = *(void *)v40;
                        *(_DWORD *)(a1 + 84) |= 0x80u;
                        unsigned int v39 = (unsigned char *)*((void *)this + 1);
                        if ((unint64_t)v39 < *((void *)this + 2) && *v39 == 73)
                        {
                          *((void *)this + 1) = v39 + 1;
LABEL_86:
                          *(void *)int v40 = 0;
                          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v40) & 1) == 0)return 0; {
                          *(void *)(a1 + 72) = *(void *)v40;
                          }
                          *(_DWORD *)(a1 + 84) |= 0x100u;
                          if (*((void *)this + 1) == *((void *)this + 2)
                            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                          {
                            *((_DWORD *)this + 8) = 0;
                            uint64_t result = 1;
                            *((unsigned char *)this + 36) = 1;
                            return result;
                          }
                        }
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        uint64_t v15 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        goto LABEL_18;
      case 3u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        v40[0] = 0;
        if ((unint64_t)v18 >= v17) {
          goto LABEL_50;
        }
        goto LABEL_47;
      case 4u:
        int v11 = TagFallback & 7;
        if (v11 != 1) {
          goto LABEL_40;
        }
        *(void *)int v40 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v40) & 1) == 0)return 0; {
        goto LABEL_56;
        }
      case 5u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 84) |= 0x10u;
        uint64_t v19 = *(void *)(a1 + 40);
        if (!v19) {
          goto LABEL_59;
        }
        goto LABEL_60;
      case 6u:
        int v11 = TagFallback & 7;
        if (v11 != 1) {
          goto LABEL_40;
        }
        *(void *)int v40 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v40) & 1) == 0)return 0; {
        goto LABEL_72;
        }
      case 7u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_75;
      case 8u:
        int v11 = TagFallback & 7;
        if (v11 != 1) {
          goto LABEL_40;
        }
        *(void *)int v40 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v40) & 1) == 0)return 0; {
        goto LABEL_83;
        }
      case 9u:
        int v11 = TagFallback & 7;
        if (v11 != 1) {
          goto LABEL_40;
        }
        goto LABEL_86;
      default:
        int v11 = TagFallback & 7;
LABEL_40:
        if (v11 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_10011DE68()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10011DEB4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 84);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
    int v6 = *(_DWORD *)(v5 + 84);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 24), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 48), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_16:
    uint64_t v10 = *(void *)(v5 + 40);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 84);
      if ((v6 & 0x20) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(qword_10047EA68 + 40), a2, a4);
      int v6 = *(_DWORD *)(v5 + 84);
      if ((v6 & 0x20) != 0) {
        goto LABEL_20;
      }
    }
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    goto LABEL_7;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 52), a2, a4);
  int v6 = *(_DWORD *)(v5 + 84);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 64), a3);
  if ((*(_DWORD *)(v5 + 84) & 0x100) == 0)
  {
LABEL_10:
    uint64_t v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 72), a3);
  int v11 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v11;
  if (!v11) {
    return result;
  }
LABEL_24:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10011E03C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 21);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
    goto LABEL_24;
  }
  uint64_t v12 = *((void *)this + 2);
  *(unsigned char *)a2 = 10;
  unsigned int v13 = a2 + 1;
  if (*(char *)(v12 + 23) < 0)
  {
    uint64_t v14 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v12 + 8);
    if (v14 <= 0x7F) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v12 + 23);
    if (*(unsigned __int8 *)(v12 + 23) <= 0x7Fu)
    {
LABEL_14:
      *((unsigned char *)v4 + 1) = (_BYTE)v14;
      int v15 = v4 + 2;
      goto LABEL_17;
    }
  }
  int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, v13, a3);
LABEL_17:
  int v16 = *(char *)(v12 + 23);
  if (v16 >= 0) {
    unint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12;
  }
  else {
    unint64_t v17 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v12;
  }
  if (v16 >= 0) {
    uint64_t v18 = (const void *)*(unsigned __int8 *)(v12 + 23);
  }
  else {
    uint64_t v18 = (const void *)*(unsigned int *)(v12 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v17, v18, v15, a4);
  int v6 = *((_DWORD *)this + 21);
  if ((v6 & 2) == 0)
  {
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
LABEL_25:
    unint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 12);
    *(unsigned char *)uint64_t v4 = 24;
    unint64_t v21 = (unint64_t)v4 + 1;
    if ((v20 & 0x80000000) != 0)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v20, v21, a3);
      int v7 = *((_DWORD *)this + 21);
      if ((v7 & 8) != 0) {
        goto LABEL_32;
      }
    }
    else if (v20 > 0x7F)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, v21, a3);
      int v7 = *((_DWORD *)this + 21);
      if ((v7 & 8) != 0) {
        goto LABEL_32;
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v20;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      int v7 = *((_DWORD *)this + 21);
      if ((v7 & 8) != 0) {
        goto LABEL_32;
      }
    }
LABEL_5:
    if ((v7 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_33:
    uint64_t v23 = (unsigned int *)*((void *)this + 5);
    if (v23)
    {
      *(unsigned char *)uint64_t v4 = 42;
      unsigned int v24 = v4 + 1;
      int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23[11];
      if (v25 <= 0x7F) {
        goto LABEL_35;
      }
    }
    else
    {
      uint64_t v23 = *(unsigned int **)(qword_10047EA68 + 40);
      *(unsigned char *)uint64_t v4 = 42;
      unsigned int v24 = v4 + 1;
      int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23[11];
      if (v25 <= 0x7F)
      {
LABEL_35:
        *((unsigned char *)v4 + 1) = (_BYTE)v25;
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10011CCB4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v23, (unsigned char *)v4 + 2, a3);
        int v7 = *((_DWORD *)this + 21);
        if ((v7 & 0x20) != 0) {
          goto LABEL_39;
        }
LABEL_7:
        if ((v7 & 0x40) == 0) {
          goto LABEL_8;
        }
LABEL_40:
        int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
        *(unsigned char *)uint64_t v4 = 56;
        if (v29 > 0x7F)
        {
          uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v29, (int)v4 + 1, a3);
          int v8 = *((_DWORD *)this + 21);
          if ((v8 & 0x80) != 0) {
            goto LABEL_44;
          }
        }
        else
        {
          *((unsigned char *)v4 + 1) = (_BYTE)v29;
          uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
          int v8 = *((_DWORD *)this + 21);
          if ((v8 & 0x80) != 0) {
            goto LABEL_44;
          }
        }
LABEL_9:
        if ((v8 & 0x100) == 0) {
          goto LABEL_10;
        }
        goto LABEL_45;
      }
    }
    BOOL v26 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, v24, a3);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10011CCB4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v23, v26, v27);
    int v7 = *((_DWORD *)this + 21);
    if ((v7 & 0x20) != 0) {
      goto LABEL_39;
    }
    goto LABEL_7;
  }
LABEL_24:
  uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 3);
  *(unsigned char *)uint64_t v4 = 16;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v19, (unint64_t)v4 + 1, a3);
  if ((*((_DWORD *)this + 21) & 4) != 0) {
    goto LABEL_25;
  }
LABEL_4:
  int v7 = *((_DWORD *)this + 21);
  if ((v7 & 8) == 0) {
    goto LABEL_5;
  }
LABEL_32:
  uint64_t v22 = *((void *)this + 4);
  *(unsigned char *)uint64_t v4 = 33;
  *(void *)((char *)v4 + 1) = v22;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v7 = *((_DWORD *)this + 21);
  if ((v7 & 0x10) != 0) {
    goto LABEL_33;
  }
LABEL_6:
  if ((v7 & 0x20) == 0) {
    goto LABEL_7;
  }
LABEL_39:
  uint64_t v28 = *((void *)this + 7);
  *(unsigned char *)uint64_t v4 = 49;
  *(void *)((char *)v4 + 1) = v28;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 21) & 0x40) != 0) {
    goto LABEL_40;
  }
LABEL_8:
  int v8 = *((_DWORD *)this + 21);
  if ((v8 & 0x80) == 0) {
    goto LABEL_9;
  }
LABEL_44:
  uint64_t v30 = *((void *)this + 8);
  *(unsigned char *)uint64_t v4 = 65;
  *(void *)((char *)v4 + 1) = v30;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 21) & 0x100) == 0)
  {
LABEL_10:
    int v11 = (void *)*((void *)this + 1);
    uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v9 = v11;
    if (!v11) {
      return v4;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t v31 = *((void *)this + 9);
  *(unsigned char *)uint64_t v4 = 73;
  *(void *)((char *)v4 + 1) = v31;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v32 = (void *)*((void *)this + 1);
  uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v9 = v32;
  if (!v32) {
    return v4;
  }
LABEL_46:
  if (*v9 == v9[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, v4, a3);
}

uint64_t sub_10011E3C0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 84);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      uint64_t v9 = *(void *)(a1 + 16);
      int v10 = *(unsigned __int8 *)(v9 + 23);
      char v11 = v10;
      uint64_t v12 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        unint64_t v13 = *(unsigned __int8 *)(v9 + 23);
      }
      else {
        unint64_t v13 = v12;
      }
      if (v13 >= 0x80)
      {
        int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13, a2);
        int v10 = *(unsigned __int8 *)(v9 + 23);
        uint64_t v12 = *(void *)(v9 + 8);
        int v3 = *(_DWORD *)(a1 + 84);
        char v11 = *(unsigned char *)(v9 + 23);
      }
      else
      {
        int v14 = 1;
      }
      if (v11 < 0) {
        int v10 = v12;
      }
      int v4 = v14 + v10 + 1;
      if ((v3 & 2) == 0)
      {
LABEL_20:
        if ((v3 & 4) == 0)
        {
          if ((v3 & 8) != 0) {
            int v15 = v4 + 9;
          }
          else {
            int v15 = v4;
          }
          if ((v3 & 0x10) == 0) {
            goto LABEL_25;
          }
LABEL_46:
          uint64_t v22 = *(void *)(a1 + 40);
          if (v22)
          {
            LOBYTE(v23) = *(unsigned char *)(v22 + 48);
            if ((_BYTE)v23) {
              goto LABEL_48;
            }
          }
          else
          {
            uint64_t v22 = *(void *)(qword_10047EA68 + 40);
            LOBYTE(v23) = *(unsigned char *)(v22 + 48);
            if ((_BYTE)v23)
            {
LABEL_48:
              if (v23)
              {
                uint64_t v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v22 + 40);
                if ((v28 & 0x80000000) != 0)
                {
                  unsigned int v24 = 11;
                }
                else if (v28 >= 0x80)
                {
                  unsigned int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28, a2)+ 1;
                  int v23 = *(_DWORD *)(v22 + 48);
                }
                else
                {
                  unsigned int v24 = 2;
                }
              }
              else
              {
                unsigned int v24 = 0;
              }
              if ((v23 & 2) != 0) {
                v24 += 9;
              }
              if ((v23 & 4) != 0) {
                v24 += 9;
              }
              if ((v23 & 8) != 0) {
                int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v24 + 9);
              }
              else {
                int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24;
              }
              BOOL v26 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v22 + 8);
              int v27 = *(void **)(v22 + 8);
              if (!v27)
              {
LABEL_68:
                *(_DWORD *)(v22 + 44) = v25;
                if (v25 >= 0x80) {
                  int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
                }
                else {
                  int v29 = 1;
                }
                int v30 = v15 + v25 + v29 + 1;
                int v3 = *(_DWORD *)(a1 + 84);
                if ((v3 & 0x20) != 0) {
                  int v16 = v30 + 9;
                }
                else {
                  int v16 = v30;
                }
                if ((v3 & 0x40) == 0)
                {
LABEL_79:
                  unsigned int v33 = v16 + 9;
                  if ((v3 & 0x80) == 0) {
                    unsigned int v33 = v16;
                  }
                  if ((v3 & 0x100) != 0) {
                    uint64_t v5 = v33 + 9;
                  }
                  else {
                    uint64_t v5 = v33;
                  }
                  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
                  int v7 = *(void **)(a1 + 8);
                  if (!v7) {
                    goto LABEL_9;
                  }
                  goto LABEL_85;
                }
LABEL_75:
                uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 52);
                if (v31 >= 0x80)
                {
                  int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31, a2)+ 1;
                  int v3 = *(_DWORD *)(a1 + 84);
                }
                else
                {
                  int v32 = 2;
                }
                v16 += v32;
                goto LABEL_79;
              }
LABEL_66:
              if (*v27 != v27[1]) {
                int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v26, a2)
              }
                                                                                      + v25);
              goto LABEL_68;
            }
          }
          int v25 = 0;
          BOOL v26 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v22 + 8);
          int v27 = *(void **)(v22 + 8);
          if (!v27) {
            goto LABEL_68;
          }
          goto LABEL_66;
        }
        unint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
        if ((v17 & 0x80000000) != 0)
        {
          int v19 = v4 + 11;
          if ((v3 & 8) != 0) {
            int v15 = v19 + 9;
          }
          else {
            int v15 = v19;
          }
          if ((v3 & 0x10) != 0) {
            goto LABEL_46;
          }
        }
        else if (v17 >= 0x80)
        {
          int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17, a2);
          int v3 = *(_DWORD *)(a1 + 84);
          int v21 = v20 + 1 + v4;
          if ((v3 & 8) != 0) {
            int v15 = v21 + 9;
          }
          else {
            int v15 = v21;
          }
          if ((v3 & 0x10) != 0) {
            goto LABEL_46;
          }
        }
        else
        {
          int v18 = v4 + 2;
          if ((v3 & 8) != 0) {
            int v15 = v18 + 9;
          }
          else {
            int v15 = v18;
          }
          if ((v3 & 0x10) != 0) {
            goto LABEL_46;
          }
        }
LABEL_25:
        if ((v3 & 0x20) != 0) {
          int v16 = v15 + 9;
        }
        else {
          int v16 = v15;
        }
        if ((v3 & 0x40) == 0) {
          goto LABEL_79;
        }
        goto LABEL_75;
      }
    }
    else
    {
      int v4 = 0;
      if ((v3 & 2) == 0) {
        goto LABEL_20;
      }
    }
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 84);
    goto LABEL_20;
  }
  if ((v3 & 0x100) != 0) {
    uint64_t v5 = 9;
  }
  else {
    uint64_t v5 = 0;
  }
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = *(void **)(a1 + 8);
  if (!v7) {
    goto LABEL_9;
  }
LABEL_85:
  if (*v7 == v7[1])
  {
LABEL_9:
    *(_DWORD *)(a1 + 80) = v5;
    return v5;
  }
  uint64_t v34 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 80) = v34;
  return v34;
}

uint64_t sub_10011E684(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10011D190((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10011E764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011E778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011E78C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10011E818(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    return sub_10011D190(v4, a2);
  }
  return result;
}

uint64_t sub_10011E884()
{
  return 1;
}

uint64_t sub_10011E88C()
{
  uint64_t v0 = qword_10047D948;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10011BF94;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D918;
}

void sub_10011E91C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011E930(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_10011E938(uint64_t a1)
{
  return *(unsigned int *)(a1 + 80);
}

void sub_10011E944()
{
  uint64_t v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_10011EAFC();
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  __p = operator new(0x20uLL);
  long long v3 = xmmword_1003E6770;
  strcpy((char *)__p, "CLPSensorSurveyLogEntry.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  operator delete(__p);
  if (!FileByName)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  }
  qword_10047D960 = *(void *)(FileByName + 80);
  operator new();
}

void sub_10011EA94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011EAA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011EABC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10011EAFC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10047D950 & 1) == 0)
  {
    byte_10047D950 = 1;
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/protobuf/clpsensorsurvey/Proto/CLPSensorSurveyLogEntry.pb.cc", a4);
    sub_10013B964(v4, v5, v6, v7);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n\x1DCLPSensorSurveyLogEntry.proto\x12\x1Fproto.CLP.LogEntry.SensorSurvey\x1A\x1ACLPSensorSurveyEvent.proto\"\xCB\x04\n\bLogEntry\x12G\n\bmetadata\x18\x01 \x01(\v25.proto.CLP.LogEntry.SensorSurvey.SensorSurveyMetadata\x12M\n\x11aquaman_device_gt\x18\x02 \x01(\v22.proto.CLP.LogEntry.SensorSurvey.AquamanDevicePose\x129\n\agravity\x18\x03 \x01(\v2(.proto.CLP.LogEntry.SensorSurvey.Gravity\x12;\n"
                                                                "\baltitude\x18\x04 \x01(\v2).proto.CLP.LogEntry.SensorSu"
                                                                "rvey.Altitude\x12F\n"
                                                                "\x0Enearby_objects\x18\x05 \x01(\v2..proto.CLP.LogEntry."
                                                                "SensorSurvey.NearbyObjects\x12R\n"
                                                                "\x12ranging_source_loc\x18\x06 \x01(\v26.proto.CLP.LogEn"
                                                                "try.SensorSurvey.RangingSourceLocation\x12@\n"
                                                                "\vtruth_point\x18\a \x01(\v2+.proto.CLP.LogEntry.SensorS"
                                                                "urvey.TruthPoint\x12Q\n"
                                                                "\x14cl_provider_position\x18\b \x01(\v23.proto.CLP.LogEn"
                                                                "try.SensorSurvey.CLProviderPosition",
      (const void *)0x2AA,
      v8);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_10011EC38()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10011EC60()
{
  if (qword_10047EA78) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EA78 + 8))(qword_10047EA78);
  }
  uint64_t result = qword_10047D968;
  if (qword_10047D968)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10047D968 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_10011ECE8()
{
  uint64_t v0 = qword_10047D970;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10011E944;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  if (!qword_10047EA78) {
    sub_10011EAFC();
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_10011EDA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011EDBC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
    LOBYTE(v4) = *(unsigned char *)(a2 + 84);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 84);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 84) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047EA78 + 16);
    }
    sub_10013E55C(v5, v6);
    int v4 = *(_DWORD *)(a2 + 84);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 84) |= 2u;
    uint64_t v7 = *(void *)(a1 + 24);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10047EA78 + 24);
    }
    sub_10013F7D4(v7, v8);
    int v4 = *(_DWORD *)(a2 + 84);
  }
  if ((v4 & 4) != 0)
  {
    *(_DWORD *)(a1 + 84) |= 4u;
    uint64_t v9 = *(void *)(a1 + 32);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = *(void *)(a2 + 32);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_10047EA78 + 32);
    }
    sub_100140C78(v9, v10);
    int v4 = *(_DWORD *)(a2 + 84);
  }
  if ((v4 & 8) != 0)
  {
    *(_DWORD *)(a1 + 84) |= 8u;
    uint64_t v11 = *(void *)(a1 + 40);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 40);
    if (!v12) {
      uint64_t v12 = *(void *)(qword_10047EA78 + 40);
    }
    sub_100141AB8(v11, v12);
    int v4 = *(_DWORD *)(a2 + 84);
  }
  if ((v4 & 0x10) != 0)
  {
    *(_DWORD *)(a1 + 84) |= 0x10u;
    uint64_t v13 = *(void *)(a1 + 48);
    if (!v13) {
      operator new();
    }
    uint64_t v14 = *(void *)(a2 + 48);
    if (!v14) {
      uint64_t v14 = *(void *)(qword_10047EA78 + 48);
    }
    sub_1001427EC(v13, v14);
    int v4 = *(_DWORD *)(a2 + 84);
  }
  if ((v4 & 0x20) != 0)
  {
    *(_DWORD *)(a1 + 84) |= 0x20u;
    uint64_t v15 = *(void *)(a1 + 56);
    if (!v15) {
      operator new();
    }
    uint64_t v16 = *(void *)(a2 + 56);
    if (!v16) {
      uint64_t v16 = *(void *)(qword_10047EA78 + 56);
    }
    sub_1001435E4(v15, v16);
    int v4 = *(_DWORD *)(a2 + 84);
  }
  if ((v4 & 0x40) != 0)
  {
    *(_DWORD *)(a1 + 84) |= 0x40u;
    uint64_t v17 = *(void *)(a1 + 64);
    if (!v17) {
      operator new();
    }
    uint64_t v18 = *(void *)(a2 + 64);
    if (!v18) {
      uint64_t v18 = *(void *)(qword_10047EA78 + 64);
    }
    sub_100144C58(v17, v18);
    int v4 = *(_DWORD *)(a2 + 84);
  }
  if ((v4 & 0x80) != 0)
  {
    *(_DWORD *)(a1 + 84) |= 0x80u;
    uint64_t v19 = *(void *)(a1 + 72);
    if (!v19) {
      operator new();
    }
    uint64_t v20 = *(void *)(a2 + 72);
    if (!v20) {
      uint64_t v20 = *(void *)(qword_10047EA78 + 72);
    }
    sub_10001D8AC(v19, v20);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10011F190()
{
}

void sub_10011F1B4()
{
}

void sub_10011F1D8()
{
}

void sub_10011F1FC()
{
}

void sub_10011F220()
{
}

void sub_10011F244()
{
}

void sub_10011F268()
{
}

void sub_10011F28C()
{
}

void sub_10011F2B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011F2C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10011F2D8(void *a1)
{
  *a1 = off_100457098;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100024790(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_10011F338(uint64_t result, int a2)
{
  *(_DWORD *)(result + 80) = a2;
  return result;
}

uint64_t sub_10011F340(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047EA78;
  if (!qword_10047EA78)
  {
    sub_10011EAFC(0, a2, a3, a4);
    return qword_10047EA78;
  }
  return result;
}

void sub_10011F37C()
{
}

void sub_10011F3E8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10011F410(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 84);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 84))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        this = sub_10013EA7C(this);
        int v2 = *(_DWORD *)(v1 + 84);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this)
      {
        this = sub_10013FD74(this);
        int v2 = *(_DWORD *)(v1 + 84);
      }
    }
    if ((v2 & 4) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        this = sub_10014105C(this);
        int v2 = *(_DWORD *)(v1 + 84);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this)
      {
        this = sub_100141E70(this);
        int v2 = *(_DWORD *)(v1 + 84);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      this = *(void *)(v1 + 48);
      if (this)
      {
        this = sub_100142B90(this);
        int v2 = *(_DWORD *)(v1 + 84);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      this = *(void *)(v1 + 56);
      if (this)
      {
        this = sub_100143BEC(this);
        int v2 = *(_DWORD *)(v1 + 84);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      this = *(void *)(v1 + 64);
      if (this)
      {
        this = sub_100145280(this);
        int v2 = *(_DWORD *)(v1 + 84);
      }
    }
    if ((v2 & 0x80) != 0)
    {
      this = *(void *)(v1 + 72);
      if (this) {
        this = sub_10014719C(this);
      }
    }
  }
  uint64_t v4 = *(void *)(v1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 19) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_10011F500(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 < *((void *)this + 2) && (*v7 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 84) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        unsigned int v91 = 0;
        uint64_t v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v91))return 0; {
        }
          }
        else
        {
          unsigned int v91 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v24 = *((_DWORD *)this + 14);
        int v25 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v91);
        if (!sub_10013EC58(v10, this, v27, v28) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
        int v29 = *((_DWORD *)this + 14);
        BOOL v30 = __OFSUB__(v29, 1);
        int v31 = v29 - 1;
        if (v31 < 0 == v30) {
          *((_DWORD *)this + 14) = v31;
        }
        int v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 18) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
        *(_DWORD *)(a1 + 84) |= 2u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12) {
LABEL_52:
        }
          operator new();
LABEL_17:
        unsigned int v91 = 0;
        uint64_t v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v91))return 0; {
        }
          }
        else
        {
          unsigned int v91 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        int v33 = *((_DWORD *)this + 14);
        int v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v91);
        if (!sub_10013FE60(v12, this, v36, v37) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
        int v38 = *((_DWORD *)this + 14);
        BOOL v30 = __OFSUB__(v38, 1);
        int v39 = v38 - 1;
        if (v39 < 0 == v30) {
          *((_DWORD *)this + 14) = v39;
        }
        int v40 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v40 >= *((void *)this + 2) || *v40 != 26) {
          continue;
        }
        *((void *)this + 1) = v40 + 1;
        *(_DWORD *)(a1 + 84) |= 4u;
        uint64_t v14 = *(void *)(a1 + 32);
        if (!v14) {
LABEL_64:
        }
          operator new();
LABEL_21:
        unsigned int v91 = 0;
        uint64_t v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v91))return 0; {
        }
          }
        else
        {
          unsigned int v91 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v41 = *((_DWORD *)this + 14);
        int v42 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v41 + 1;
        if (v41 >= v42) {
          return 0;
        }
        int v43 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v91);
        if (!sub_1001410E4(v14, this, v44, v45) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v43);
        int v46 = *((_DWORD *)this + 14);
        BOOL v30 = __OFSUB__(v46, 1);
        int v47 = v46 - 1;
        if (v47 < 0 == v30) {
          *((_DWORD *)this + 14) = v47;
        }
        uint64_t v48 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v48 >= *((void *)this + 2) || *v48 != 34) {
          continue;
        }
        *((void *)this + 1) = v48 + 1;
        *(_DWORD *)(a1 + 84) |= 8u;
        uint64_t v16 = *(void *)(a1 + 40);
        if (!v16) {
LABEL_76:
        }
          operator new();
LABEL_25:
        unsigned int v91 = 0;
        uint64_t v17 = (char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v91))return 0; {
        }
          }
        else
        {
          unsigned int v91 = *v17;
          *((void *)this + 1) = v17 + 1;
        }
        int v49 = *((_DWORD *)this + 14);
        int v50 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v49 + 1;
        if (v49 >= v50) {
          return 0;
        }
        int v51 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v91);
        if (!sub_100141EF4(v16, this, v52, v53) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v51);
        int v54 = *((_DWORD *)this + 14);
        BOOL v30 = __OFSUB__(v54, 1);
        int v55 = v54 - 1;
        if (v55 < 0 == v30) {
          *((_DWORD *)this + 14) = v55;
        }
        v56 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v56 >= *((void *)this + 2) || *v56 != 42) {
          continue;
        }
        *((void *)this + 1) = v56 + 1;
        *(_DWORD *)(a1 + 84) |= 0x10u;
        uint64_t v18 = *(void *)(a1 + 48);
        if (!v18) {
LABEL_88:
        }
          operator new();
LABEL_29:
        unsigned int v91 = 0;
        uint64_t v19 = (char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v91))return 0; {
        }
          }
        else
        {
          unsigned int v91 = *v19;
          *((void *)this + 1) = v19 + 1;
        }
        int v57 = *((_DWORD *)this + 14);
        int v58 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v57 + 1;
        if (v57 >= v58) {
          return 0;
        }
        int v59 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v91);
        if (!sub_100142C5C(v18, this, v60, v61) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v59);
        int v62 = *((_DWORD *)this + 14);
        BOOL v30 = __OFSUB__(v62, 1);
        int v63 = v62 - 1;
        if (v63 < 0 == v30) {
          *((_DWORD *)this + 14) = v63;
        }
        uint64_t v64 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v64 >= *((void *)this + 2) || *v64 != 50) {
          continue;
        }
        *((void *)this + 1) = v64 + 1;
        *(_DWORD *)(a1 + 84) |= 0x20u;
        uint64_t v20 = *(void *)(a1 + 56);
        if (!v20) {
LABEL_100:
        }
          operator new();
LABEL_33:
        unsigned int v91 = 0;
        int v21 = (char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v91))return 0; {
        }
          }
        else
        {
          unsigned int v91 = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        int v65 = *((_DWORD *)this + 14);
        int v66 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v65 + 1;
        if (v65 >= v66) {
          return 0;
        }
        int v67 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v91);
        if (!sub_100143D10(v20, this, v68, v69) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v67);
        int v70 = *((_DWORD *)this + 14);
        BOOL v30 = __OFSUB__(v70, 1);
        int v71 = v70 - 1;
        if (v71 < 0 == v30) {
          *((_DWORD *)this + 14) = v71;
        }
        uint64_t v72 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v72 >= *((void *)this + 2) || *v72 != 58) {
          continue;
        }
        *((void *)this + 1) = v72 + 1;
        *(_DWORD *)(a1 + 84) |= 0x40u;
        uint64_t v22 = *(void *)(a1 + 64);
        if (!v22) {
LABEL_112:
        }
          operator new();
LABEL_37:
        unsigned int v91 = 0;
        int v23 = (char *)*((void *)this + 1);
        if ((unint64_t)v23 >= *((void *)this + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v91))return 0; {
        }
          }
        else
        {
          unsigned int v91 = *v23;
          *((void *)this + 1) = v23 + 1;
        }
        int v73 = *((_DWORD *)this + 14);
        int v74 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v73 + 1;
        if (v73 >= v74) {
          return 0;
        }
        int v75 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v91);
        if (!sub_100145370(v22, this, v76, v77) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v75);
        int v78 = *((_DWORD *)this + 14);
        BOOL v30 = __OFSUB__(v78, 1);
        int v79 = v78 - 1;
        if (v79 < 0 == v30) {
          *((_DWORD *)this + 14) = v79;
        }
        v80 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v80 >= *((void *)this + 2) || *v80 != 66) {
          continue;
        }
        *((void *)this + 1) = v80 + 1;
LABEL_124:
        *(_DWORD *)(a1 + 84) |= 0x80u;
        uint64_t v81 = *(void *)(a1 + 72);
        if (!v81) {
          operator new();
        }
        unsigned int v91 = 0;
        v82 = (char *)*((void *)this + 1);
        if ((unint64_t)v82 >= *((void *)this + 2) || *v82 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v91))return 0; {
        }
          }
        else
        {
          unsigned int v91 = *v82;
          *((void *)this + 1) = v82 + 1;
        }
        int v83 = *((_DWORD *)this + 14);
        int v84 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v83 + 1;
        if (v83 >= v84) {
          return 0;
        }
        int v85 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v91);
        if (!sub_100147284(v81, this, v86, v87) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v85);
        int v88 = *((_DWORD *)this + 14);
        BOOL v30 = __OFSUB__(v88, 1);
        int v89 = v88 - 1;
        if (v89 < 0 == v30) {
          *((_DWORD *)this + 14) = v89;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 84) |= 2u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (v12) {
          goto LABEL_17;
        }
        goto LABEL_52;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 84) |= 4u;
        uint64_t v14 = *(void *)(a1 + 32);
        if (v14) {
          goto LABEL_21;
        }
        goto LABEL_64;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 84) |= 8u;
        uint64_t v16 = *(void *)(a1 + 40);
        if (v16) {
          goto LABEL_25;
        }
        goto LABEL_76;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 84) |= 0x10u;
        uint64_t v18 = *(void *)(a1 + 48);
        if (v18) {
          goto LABEL_29;
        }
        goto LABEL_88;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 84) |= 0x20u;
        uint64_t v20 = *(void *)(a1 + 56);
        if (v20) {
          goto LABEL_33;
        }
        goto LABEL_100;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 84) |= 0x40u;
        uint64_t v22 = *(void *)(a1 + 64);
        if (v22) {
          goto LABEL_37;
        }
        goto LABEL_112;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_40;
        }
        goto LABEL_124;
      default:
        int v9 = TagFallback & 7;
LABEL_40:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_10011FECC()
{
}

void sub_10011FEF0()
{
}

void sub_10011FF14()
{
}

void sub_10011FF38()
{
}

void sub_10011FF5C()
{
}

void sub_10011FF80()
{
}

void sub_10011FFA4()
{
}

void sub_10011FFC8()
{
}

uint64_t sub_10012000C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 84);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 84);
      if ((v6 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047EA78 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 84);
      if ((v6 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
LABEL_19:
    uint64_t v12 = *(void *)(v5 + 32);
    if (v12)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v12, a2, a4);
      int v6 = *(_DWORD *)(v5 + 84);
      if ((v6 & 8) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(qword_10047EA78 + 32), a2, a4);
      int v6 = *(_DWORD *)(v5 + 84);
      if ((v6 & 8) != 0) {
        goto LABEL_23;
      }
    }
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_27:
    uint64_t v14 = *(void *)(v5 + 48);
    if (v14)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v14, a2, a4);
      int v6 = *(_DWORD *)(v5 + 84);
      if ((v6 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(qword_10047EA78 + 48), a2, a4);
      int v6 = *(_DWORD *)(v5 + 84);
      if ((v6 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_35:
    uint64_t v16 = *(void *)(v5 + 64);
    if (v16)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v16, a2, a4);
      if ((*(_DWORD *)(v5 + 84) & 0x80) != 0) {
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(qword_10047EA78 + 64), a2, a4);
      if ((*(_DWORD *)(v5 + 84) & 0x80) != 0) {
        goto LABEL_39;
      }
    }
LABEL_9:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_43;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_15:
  uint64_t v11 = *(void *)(v5 + 24);
  if (v11)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v11, a2, a4);
    int v6 = *(_DWORD *)(v5 + 84);
    if ((v6 & 4) != 0) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(qword_10047EA78 + 24), a2, a4);
    int v6 = *(_DWORD *)(v5 + 84);
    if ((v6 & 4) != 0) {
      goto LABEL_19;
    }
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    goto LABEL_5;
  }
LABEL_23:
  uint64_t v13 = *(void *)(v5 + 40);
  if (v13)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v13, a2, a4);
    int v6 = *(_DWORD *)(v5 + 84);
    if ((v6 & 0x10) != 0) {
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(qword_10047EA78 + 40), a2, a4);
    int v6 = *(_DWORD *)(v5 + 84);
    if ((v6 & 0x10) != 0) {
      goto LABEL_27;
    }
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    goto LABEL_7;
  }
LABEL_31:
  uint64_t v15 = *(void *)(v5 + 56);
  if (v15)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v15, a2, a4);
    int v6 = *(_DWORD *)(v5 + 84);
    if ((v6 & 0x40) != 0) {
      goto LABEL_35;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(qword_10047EA78 + 56), a2, a4);
    int v6 = *(_DWORD *)(v5 + 84);
    if ((v6 & 0x40) != 0) {
      goto LABEL_35;
    }
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    goto LABEL_9;
  }
LABEL_39:
  uint64_t v17 = *(void *)(v5 + 72);
  if (v17)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v17, a2, a4);
    uint64_t v18 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v18;
    if (!v18) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(qword_10047EA78 + 72), a2, a4);
    uint64_t v19 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v19;
    if (!v19) {
      return result;
    }
  }
LABEL_43:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_100120290(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10011EDBC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100120370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100120384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100120398(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100120424()
{
  return 1;
}

uint64_t sub_10012042C()
{
  uint64_t v0 = qword_10047D970;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10011E944;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D960;
}

void sub_1001204BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001204D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 80);
}

void sub_1001204DC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  sub_100120E04(a1, a2, a3, a4);
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v4);
  __p = operator new(0x20uLL);
  long long v7 = xmmword_1003E7210;
  strcpy((char *)__p, "protobuf/gen/survey.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  operator delete(__p);
  if (!FileByName)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  }
  qword_10047D988 = *(void *)(FileByName + 80);
  operator new();
}

void sub_100120D64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100120D78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100120D8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100120E04(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10047D978 & 1) == 0)
  {
    byte_10047D978 = 1;
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/survey.pb.cc", a4);
    sub_1000E2B58(v4, v5, v6, v7);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)&unk_1003EB68C, (const void *)0xD6B, v8);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_10012167C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001216A8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001216D4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100121700()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10012172C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100121758()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100121784()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001217B0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001217DC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100121808()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100121834()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100121860()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10012188C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001218B8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001218E0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100121908()
{
  if (qword_10047EA80) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EA80 + 8))(qword_10047EA80);
  }
  if (qword_10047D990) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D990 + 8))(qword_10047D990);
  }
  if (qword_10047EA88) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EA88 + 8))(qword_10047EA88);
  }
  if (qword_10047D9A0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D9A0 + 8))(qword_10047D9A0);
  }
  if (qword_10047EA90) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EA90 + 8))(qword_10047EA90);
  }
  if (qword_10047D9B0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D9B0 + 8))(qword_10047D9B0);
  }
  if (qword_10047EA98) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EA98 + 8))(qword_10047EA98);
  }
  if (qword_10047D9C8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D9C8 + 8))(qword_10047D9C8);
  }
  if (qword_10047EAA0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EAA0 + 8))(qword_10047EAA0);
  }
  if (qword_10047D9D8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D9D8 + 8))(qword_10047D9D8);
  }
  if (qword_10047EAA8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EAA8 + 8))(qword_10047EAA8);
  }
  if (qword_10047D9E8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047D9E8 + 8))(qword_10047D9E8);
  }
  if (qword_10047EAB0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EAB0 + 8))(qword_10047EAB0);
  }
  if (qword_10047DA08) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DA08 + 8))(qword_10047DA08);
  }
  if (qword_10047EAB8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EAB8 + 8))(qword_10047EAB8);
  }
  if (qword_10047DA20) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DA20 + 8))(qword_10047DA20);
  }
  if (qword_10047EAC0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EAC0 + 8))(qword_10047EAC0);
  }
  if (qword_10047DA30) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DA30 + 8))(qword_10047DA30);
  }
  if (qword_10047EAC8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EAC8 + 8))(qword_10047EAC8);
  }
  if (qword_10047DA48) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DA48 + 8))(qword_10047DA48);
  }
  if (qword_10047EAD0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EAD0 + 8))(qword_10047EAD0);
  }
  if (qword_10047DA58) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DA58 + 8))(qword_10047DA58);
  }
  if (qword_10047EAD8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EAD8 + 8))(qword_10047EAD8);
  }
  if (qword_10047DA68) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DA68 + 8))(qword_10047DA68);
  }
  if (qword_10047EAE0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EAE0 + 8))(qword_10047EAE0);
  }
  if (qword_10047DA78) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DA78 + 8))(qword_10047DA78);
  }
  if (qword_10047EAE8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EAE8 + 8))(qword_10047EAE8);
  }
  if (qword_10047DA90) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DA90 + 8))(qword_10047DA90);
  }
  if (qword_10047EAF0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EAF0 + 8))(qword_10047EAF0);
  }
  uint64_t result = qword_10047DAA0;
  if (qword_10047DAA0)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10047DAA0 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_100121ED0()
{
  uint64_t v0 = qword_10047DAA8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v16[1] = sub_1001204DC;
    char v17 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v16);
  }
  if (!qword_10047EA80) {
    ((void (*)(void))sub_100120E04)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EA88) {
    sub_100120E04(v1);
  }
  uint64_t v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EA90) {
    sub_100120E04(v2);
  }
  uint64_t v3 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EA98) {
    sub_100120E04(v3);
  }
  uint64_t v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EAA0) {
    sub_100120E04(v4);
  }
  uint64_t v5 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EAA8) {
    sub_100120E04(v5);
  }
  uint64_t v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EAB0) {
    sub_100120E04(v6);
  }
  uint64_t v7 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EAB8) {
    sub_100120E04(v7);
  }
  uint64_t v8 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EAC0) {
    sub_100120E04(v8);
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EAC8) {
    sub_100120E04(v9);
  }
  uint64_t v10 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EAD0) {
    sub_100120E04(v10);
  }
  uint64_t v11 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EAD8) {
    sub_100120E04(v11);
  }
  uint64_t v12 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EAE0) {
    sub_100120E04(v12);
  }
  uint64_t v13 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EAE8) {
    sub_100120E04(v13);
  }
  uint64_t v14 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EAF0) {
    sub_100120E04(v14);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_100122188(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012219C(uint64_t a1)
{
  if (*(int *)(a1 + 12) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete();
      ++v2;
    }
    while (v2 < *(int *)(a1 + 12));
  }
  if (*(void *)a1) {
    operator delete[]();
  }
  return a1;
}

uint64_t sub_10012220C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
  }
  uint64_t v4 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), *(_DWORD *)(a2 + 24) + a1[6]);
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      while (1)
      {
        uint64_t v9 = *(const std::string **)(*(void *)(a2 + 16) + 8 * v5);
        int v10 = a1[7];
        uint64_t v11 = (int)a1[6];
        if ((int)v11 >= v10) {
          break;
        }
        uint64_t v12 = *((void *)a1 + 2);
        a1[6] = v11 + 1;
        uint64_t v4 = std::string::operator=(*(std::string **)(v12 + 8 * v11), v9);
        if (++v5 >= *(int *)(a2 + 24)) {
          goto LABEL_11;
        }
      }
      if (v10 == a1[8])
      {
        uint64_t v4 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4), v10 + 1);
        int v10 = a1[7];
      }
      a1[7] = v10 + 1;
      uint64_t v6 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)v4);
      uint64_t v7 = *((void *)a1 + 2);
      uint64_t v8 = (int)a1[6];
      a1[6] = v8 + 1;
      *(void *)(v7 + 8 * v8) = v6;
      uint64_t v4 = std::string::operator=(v6, v9);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
LABEL_11:
  uint64_t v13 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 10), *(_DWORD *)(a2 + 48) + a1[12]);
  if (*(int *)(a2 + 48) >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      while (1)
      {
        uint64_t v18 = *(const std::string **)(*(void *)(a2 + 40) + 8 * v14);
        int v19 = a1[13];
        uint64_t v20 = (int)a1[12];
        if ((int)v20 >= v19) {
          break;
        }
        uint64_t v21 = *((void *)a1 + 5);
        a1[12] = v20 + 1;
        uint64_t v13 = std::string::operator=(*(std::string **)(v21 + 8 * v20), v18);
        if (++v14 >= *(int *)(a2 + 48)) {
          return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
        }
      }
      if (v19 == a1[14])
      {
        uint64_t v13 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 10), v19 + 1);
        int v19 = a1[13];
      }
      a1[13] = v19 + 1;
      uint64_t v15 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)v13);
      uint64_t v16 = *((void *)a1 + 5);
      uint64_t v17 = (int)a1[12];
      a1[12] = v17 + 1;
      *(void *)(v16 + 8 * v17) = v15;
      uint64_t v13 = std::string::operator=(v15, v18);
      ++v14;
    }
    while (v14 < *(int *)(a2 + 48));
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100122428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10012243C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100122450(uint64_t a1)
{
  *(void *)a1 = off_100457160;
  if (*(int *)(a1 + 52) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete();
      ++v2;
    }
    while (v2 < *(int *)(a1 + 52));
  }
  if (*(void *)(a1 + 40)) {
    operator delete[]();
  }
  if (*(int *)(a1 + 28) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete();
      ++v3;
    }
    while (v3 < *(int *)(a1 + 28));
  }
  if (*(void *)(a1 + 16)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100122544(uint64_t a1)
{
  sub_100122450(a1);

  operator delete();
}

uint64_t sub_10012257C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 64) = a2;
  return result;
}

void sub_100122584()
{
}

void sub_1001225F4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10012261C(uint64_t a1)
{
  if (*(int *)(a1 + 24) >= 1)
  {
    uint64_t v1 = 0;
    do
    {
      while (1)
      {
        uint64_t v2 = *(void *)(*(void *)(a1 + 16) + 8 * v1);
        if (*(char *)(v2 + 23) < 0) {
          break;
        }
        *(unsigned char *)uint64_t v2 = 0;
        *(unsigned char *)(v2 + 23) = 0;
        if (++v1 >= *(int *)(a1 + 24)) {
          goto LABEL_6;
        }
      }
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      ++v1;
    }
    while (v1 < *(int *)(a1 + 24));
  }
LABEL_6:
  *(_DWORD *)(a1 + 24) = 0;
  if (*(int *)(a1 + 48) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      while (1)
      {
        uint64_t v4 = *(void *)(*(void *)(a1 + 40) + 8 * v3);
        if (*(char *)(v4 + 23) < 0) {
          break;
        }
        *(unsigned char *)uint64_t v4 = 0;
        *(unsigned char *)(v4 + 23) = 0;
        if (++v3 >= *(int *)(a1 + 48)) {
          goto LABEL_11;
        }
      }
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      ++v3;
    }
    while (v3 < *(int *)(a1 + 48));
  }
LABEL_11:
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 10) = 0;
  *((_DWORD *)result + 15) = 0;
  if (v6) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001226E8(uint64_t result, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5 = result;
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 16);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 40);
  unsigned int v8 = result + 8;
  while (1)
  {
LABEL_2:
    uint64_t v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      int v10 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)result;
      *((_DWORD *)this + 8) = result;
      if (!result) {
        return 1;
      }
    }
    else
    {
      int v10 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
      *((_DWORD *)this + 8) = v10;
      *((void *)this + 1) = v9 + 1;
      if (!v10) {
        return 1;
      }
    }
    if (v10 >> 3 == 1) {
      break;
    }
    if (v10 >> 3 == 2)
    {
      int v11 = v10 & 7;
      if (v11 == 2)
      {
        int v12 = *(_DWORD *)(v5 + 52);
        int v13 = *(_DWORD *)(v5 + 48);
        if (v13 >= v12) {
          goto LABEL_30;
        }
LABEL_11:
        *(_DWORD *)(v5 + 48) = v13 + 1;
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result) {
          goto LABEL_33;
        }
        return result;
      }
    }
    else
    {
      int v11 = v10 & 7;
    }
LABEL_25:
    if (v11 == 4) {
      return 1;
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, v10, v8, a4);
    if ((result & 1) == 0) {
      return 0;
    }
  }
  int v11 = v10 & 7;
  if (v11 != 2) {
    goto LABEL_25;
  }
  int v14 = *(_DWORD *)(v5 + 28);
  int v15 = *(_DWORD *)(v5 + 24);
  if (v15 >= v14)
  {
    while (1)
    {
      if (v14 == *(_DWORD *)(v5 + 32))
      {
        uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v14 + 1);
        int v14 = *(_DWORD *)(v5 + 28);
      }
      *(_DWORD *)(v5 + 28) = v14 + 1;
      uint64_t v16 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)result);
      uint64_t v17 = *(void *)(v5 + 16);
      uint64_t v18 = *(int *)(v5 + 24);
      *(_DWORD *)(v5 + 24) = v18 + 1;
      *(void *)(v17 + 8 * v18) = v16;
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        break;
      }
LABEL_20:
      int v19 = (unsigned char *)*((void *)this + 1);
      if ((unint64_t)v19 >= *((void *)this + 2)) {
        goto LABEL_2;
      }
      int v20 = *v19;
      if (v20 != 10)
      {
        if (v20 != 18) {
          goto LABEL_2;
        }
        while (1)
        {
          *((void *)this + 1) = v19 + 1;
          int v12 = *(_DWORD *)(v5 + 52);
          int v13 = *(_DWORD *)(v5 + 48);
          if (v13 < v12) {
            goto LABEL_11;
          }
LABEL_30:
          if (v12 == *(_DWORD *)(v5 + 56))
          {
            uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v12 + 1);
            int v12 = *(_DWORD *)(v5 + 52);
          }
          *(_DWORD *)(v5 + 52) = v12 + 1;
          uint64_t v21 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)result);
          uint64_t v22 = *(void *)(v5 + 40);
          uint64_t v23 = *(int *)(v5 + 48);
          *(_DWORD *)(v5 + 48) = v23 + 1;
          *(void *)(v22 + 8 * v23) = v21;
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
          if (!result) {
            return result;
          }
LABEL_33:
          int v19 = (unsigned char *)*((void *)this + 1);
          int v24 = (unsigned char *)*((void *)this + 2);
          if (v19 >= v24 || *v19 != 18)
          {
            if (v19 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
            goto LABEL_2;
          }
        }
      }
      *((void *)this + 1) = v19 + 1;
      int v14 = *(_DWORD *)(v5 + 28);
      int v15 = *(_DWORD *)(v5 + 24);
      if (v15 < v14) {
        goto LABEL_15;
      }
    }
  }
  else
  {
LABEL_15:
    *(_DWORD *)(v5 + 24) = v15 + 1;
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
    if (result) {
      goto LABEL_20;
    }
  }
  return result;
}

uint64_t sub_100122974(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = (int *)result;
  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      ++v5;
    }
    while (v5 < v4[6]);
  }
  if (v4[12] >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      ++v6;
    }
    while (v6 < v4[12]);
  }
  uint64_t v9 = (void *)*((void *)v4 + 1);
  unsigned int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 2);
  uint64_t v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100122A44(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  if (*((int *)this + 6) >= 1)
  {
    for (uint64_t i = 0; i < *((int *)this + 6); ++i)
    {
      uint64_t v11 = *(void *)(*((void *)this + 2) + 8 * i);
      *(unsigned char *)a2 = 10;
      if (*(char *)(v11 + 23) < 0)
      {
        int v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v11 + 8);
        if (v12 <= 0x7F)
        {
LABEL_15:
          *((unsigned char *)a2 + 1) = (_BYTE)v12;
          int v7 = a2 + 2;
          goto LABEL_4;
        }
      }
      else
      {
        int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v11 + 23);
        if (*(unsigned __int8 *)(v11 + 23) <= 0x7Fu) {
          goto LABEL_15;
        }
      }
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)a2 + 1, a3);
LABEL_4:
      int v8 = *(char *)(v11 + 23);
      if (v8 >= 0) {
        uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11;
      }
      else {
        uint64_t v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v11;
      }
      if (v8 >= 0) {
        int v10 = (const void *)*(unsigned __int8 *)(v11 + 23);
      }
      else {
        int v10 = (const void *)*(unsigned int *)(v11 + 8);
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v9, v10, v7, a4);
    }
  }
  if (*((int *)this + 12) >= 1)
  {
    for (uint64_t j = 0; j < *((int *)this + 12); ++j)
    {
      uint64_t v18 = *(void *)(*((void *)this + 5) + 8 * j);
      *(unsigned char *)a2 = 18;
      if (*(char *)(v18 + 23) < 0)
      {
        int v19 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v18 + 8);
        if (v19 <= 0x7F)
        {
LABEL_30:
          *((unsigned char *)a2 + 1) = (_BYTE)v19;
          int v14 = a2 + 2;
          goto LABEL_19;
        }
      }
      else
      {
        int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v18 + 23);
        if (*(unsigned __int8 *)(v18 + 23) <= 0x7Fu) {
          goto LABEL_30;
        }
      }
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)a2 + 1, a3);
LABEL_19:
      int v15 = *(char *)(v18 + 23);
      if (v15 >= 0) {
        uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18;
      }
      else {
        uint64_t v16 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v18;
      }
      if (v15 >= 0) {
        uint64_t v17 = (const void *)*(unsigned __int8 *)(v18 + 23);
      }
      else {
        uint64_t v17 = (const void *)*(unsigned int *)(v18 + 8);
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v16, v17, v14, a4);
    }
  }
  uint64_t v22 = (void *)*((void *)this + 1);
  uint64_t v21 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v20 = v22;
  if (!v22 || *v20 == v20[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v21, a2, a3);
}

uint64_t sub_100122BD8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 24);
  if (v3 < 1)
  {
    int v5 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    uint64_t v4 = 0;
    int v5 = *(_DWORD *)(a1 + 24);
    do
    {
      uint64_t v10 = *(void *)(*(void *)(a1 + 16) + 8 * v4);
      int v7 = *(unsigned __int8 *)(v10 + 23);
      char v9 = v7;
      uint64_t v8 = *(void *)(v10 + 8);
      if ((v7 & 0x80u) == 0) {
        unint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      }
      else {
        unint64_t v11 = v8;
      }
      if (v11 >= 0x80)
      {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
        int v7 = *(unsigned __int8 *)(v10 + 23);
        uint64_t v8 = *(void *)(v10 + 8);
        int v3 = *(_DWORD *)(a1 + 24);
        char v9 = *(unsigned char *)(v10 + 23);
      }
      else
      {
        int v6 = 1;
      }
      if (v9 < 0) {
        int v7 = v8;
      }
      v5 += v6 + v7;
      ++v4;
    }
    while (v4 < v3);
  }
  int v12 = *(_DWORD *)(a1 + 48);
  uint64_t v13 = (v12 + v5);
  if (v12 >= 1)
  {
    for (uint64_t i = 0; i < v12; ++i)
    {
      uint64_t v19 = *(void *)(*(void *)(a1 + 40) + 8 * i);
      int v16 = *(unsigned __int8 *)(v19 + 23);
      char v18 = v16;
      uint64_t v17 = *(void *)(v19 + 8);
      if ((v16 & 0x80u) == 0) {
        unint64_t v20 = *(unsigned __int8 *)(v19 + 23);
      }
      else {
        unint64_t v20 = v17;
      }
      if (v20 >= 0x80)
      {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20, a2);
        int v16 = *(unsigned __int8 *)(v19 + 23);
        uint64_t v17 = *(void *)(v19 + 8);
        int v12 = *(_DWORD *)(a1 + 48);
        char v18 = *(unsigned char *)(v19 + 23);
      }
      else
      {
        int v15 = 1;
      }
      if (v18 < 0) {
        int v16 = v17;
      }
      uint64_t v13 = (v15 + v13 + v16);
    }
  }
  uint64_t v21 = *(void **)(a1 + 8);
  if (v21 && *v21 != v21[1]) {
    uint64_t v13 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v13;
  }
  *(_DWORD *)(a1 + 64) = v13;
  return v13;
}

uint64_t sub_100122D1C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10012220C(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100122DFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100122E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100122E24(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100122EB0()
{
  return 1;
}

uint64_t sub_100122EB8()
{
  uint64_t v0 = qword_10047DAA8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001204DC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D988;
}

void sub_100122F48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100122F5C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v25);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = *(_DWORD *)(a1 + 24);
    int v6 = *(_DWORD *)(a1 + 28);
    int v7 = v5 + v4;
    if (v6 < v7)
    {
      int v8 = 2 * v6;
      if (2 * v6 <= v7) {
        int v8 = v7;
      }
      if (v8 <= 4) {
        int v8 = 4;
      }
      *(_DWORD *)(a1 + 28) = v8;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 16) + 8 * v5), *(const void **)(a2 + 16), 8 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    int v10 = *(_DWORD *)(a1 + 48);
    int v11 = *(_DWORD *)(a1 + 52);
    int v12 = v10 + v9;
    if (v11 < v12)
    {
      int v13 = 2 * v11;
      if (2 * v11 <= v12) {
        int v13 = v12;
      }
      if (v13 <= 4) {
        int v13 = 4;
      }
      *(_DWORD *)(a1 + 52) = v13;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 40) + 4 * v10), *(const void **)(a2 + 40), 4 * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    int v15 = *(_DWORD *)(a1 + 72);
    int v16 = *(_DWORD *)(a1 + 76);
    int v17 = v15 + v14;
    if (v16 < v17)
    {
      int v18 = 2 * v16;
      if (2 * v16 <= v17) {
        int v18 = v17;
      }
      if (v18 <= 4) {
        int v18 = 4;
      }
      *(_DWORD *)(a1 + 76) = v18;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 64) + 4 * v15), *(const void **)(a2 + 64), 4 * *(int *)(a2 + 72));
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
  }
  int v19 = *(_DWORD *)(a2 + 96);
  if (v19)
  {
    int v20 = *(_DWORD *)(a1 + 96);
    int v21 = *(_DWORD *)(a1 + 100);
    int v22 = v20 + v19;
    if (v21 < v22)
    {
      int v23 = 2 * v21;
      if (2 * v21 <= v22) {
        int v23 = v22;
      }
      if (v23 <= 4) {
        int v23 = 4;
      }
      *(_DWORD *)(a1 + 100) = v23;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 88) + 4 * v20), *(const void **)(a2 + 88), 4 * *(int *)(a2 + 96));
    *(_DWORD *)(a1 + 96) += *(_DWORD *)(a2 + 96);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001232C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001232D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001232E8(void *a1)
{
  *a1 = off_100457210;
  if (a1[11]) {
    operator delete[]();
  }
  if (a1[8]) {
    operator delete[]();
  }
  if (a1[5]) {
    operator delete[]();
  }
  if (a1[2]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001233B4(void *a1)
{
  sub_1001232E8(a1);

  operator delete();
}

uint64_t sub_1001233EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 108) = a2;
  return result;
}

void sub_1001233F4()
{
}

void sub_100123464()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10012348C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 10) = 0;
  *((_DWORD *)result + 16) = 0;
  *((_DWORD *)result + 22) = 0;
  *((_DWORD *)result + 26) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1001234B0(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (uint64_t *)(a1 + 88);
  int v7 = (uint64_t *)(a1 + 64);
  int v8 = (uint64_t *)(a1 + 40);
  int v9 = (uint64_t *)(a1 + 16);
  unsigned int v10 = a1 + 8;
  while (2)
  {
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if (v13 == 1)
        {
          uint64_t result = sub_100123BB0(1, 0xAu, this, v9);
          if (!result) {
            return result;
          }
          int v23 = (unsigned char *)*((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
          if ((unint64_t)v23 >= v24) {
            continue;
          }
        }
        else
        {
          if (v13 != 2) {
            goto LABEL_24;
          }
          unsigned int v51 = 0;
          int v14 = (char *)*((void *)this + 1);
          if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
            unsigned int v15 = v51;
            }
          }
          else
          {
            unsigned int v15 = *v14;
            unsigned int v51 = v15;
            *((void *)this + 1) = v14 + 1;
          }
          int v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v15);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
          {
            unint64_t v50 = 0;
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v50))return 0; {
            int v28 = *(_DWORD *)(a1 + 24);
            }
            if (v28 == *(_DWORD *)(a1 + 28))
            {
              if (2 * v28 <= v28 + 1) {
                int v29 = v28 + 1;
              }
              else {
                int v29 = 2 * v28;
              }
              if (v29 <= 4) {
                int v29 = 4;
              }
              *(_DWORD *)(a1 + 28) = v29;
              operator new[]();
            }
            uint64_t v26 = *(void *)(a1 + 16);
            unint64_t v27 = v50;
            *(_DWORD *)(a1 + 24) = v28 + 1;
            *(void *)(v26 + 8 * v28) = v27;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
          int v23 = (unsigned char *)*((void *)this + 1);
          unint64_t v24 = *((void *)this + 2);
          if ((unint64_t)v23 >= v24) {
            continue;
          }
        }
        if (*v23 != 18) {
          continue;
        }
        int v16 = v23 + 1;
        *((void *)this + 1) = v16;
        unsigned int v51 = 0;
        if ((unint64_t)v16 >= v24) {
          goto LABEL_55;
        }
        goto LABEL_53;
      case 2u:
        int v13 = TagFallback & 7;
        if (v13 == 5)
        {
          uint64_t result = sub_100123DD4(1, 0x12u, this, v8);
          if (!result) {
            return result;
          }
          goto LABEL_69;
        }
        if (v13 != 2) {
          goto LABEL_24;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        unsigned int v51 = 0;
        if ((unint64_t)v16 >= v17) {
          goto LABEL_55;
        }
LABEL_53:
        if (*v16 < 0)
        {
LABEL_55:
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
          unsigned int v30 = v51;
          }
        }
        else
        {
          unsigned int v30 = *v16;
          unsigned int v51 = v30;
          *((void *)this + 1) = v16 + 1;
        }
        int v31 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v30);
        while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
        {
          LODWORD(v50) = 0;
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, (unsigned int *)&v50))return 0; {
          int v33 = v50;
          }
          int v34 = *(_DWORD *)(a1 + 48);
          if (v34 == *(_DWORD *)(a1 + 52))
          {
            if (2 * v34 <= v34 + 1) {
              int v35 = v34 + 1;
            }
            else {
              int v35 = 2 * v34;
            }
            if (v35 <= 4) {
              int v35 = 4;
            }
            *(_DWORD *)(a1 + 52) = v35;
            operator new[]();
          }
          uint64_t v32 = *(void *)(a1 + 40);
          *(_DWORD *)(a1 + 48) = v34 + 1;
          *(_DWORD *)(v32 + 4 * v34) = v33;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v31);
LABEL_69:
        uint64_t v36 = (unsigned char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        if ((unint64_t)v36 < v19 && *v36 == 26)
        {
          int v18 = v36 + 1;
          *((void *)this + 1) = v18;
LABEL_72:
          unsigned int v51 = 0;
          if ((unint64_t)v18 >= v19 || *v18 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
            unsigned int v37 = v51;
            }
          }
          else
          {
            unsigned int v37 = *v18;
            unsigned int v51 = v37;
            *((void *)this + 1) = v18 + 1;
          }
          int v38 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
          {
            LODWORD(v50) = 0;
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, (unsigned int *)&v50))return 0; {
            int v40 = v50;
            }
            int v41 = *(_DWORD *)(a1 + 72);
            if (v41 == *(_DWORD *)(a1 + 76))
            {
              if (2 * v41 <= v41 + 1) {
                int v42 = v41 + 1;
              }
              else {
                int v42 = 2 * v41;
              }
              if (v42 <= 4) {
                int v42 = 4;
              }
              *(_DWORD *)(a1 + 76) = v42;
              operator new[]();
            }
            uint64_t v39 = *(void *)(a1 + 64);
            *(_DWORD *)(a1 + 72) = v41 + 1;
            *(_DWORD *)(v39 + 4 * v41) = v40;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v38);
          goto LABEL_89;
        }
        continue;
      case 3u:
        int v13 = TagFallback & 7;
        if (v13 == 5)
        {
          uint64_t result = sub_100123DD4(1, 0x1Au, this, v7);
          if (!result) {
            return result;
          }
LABEL_89:
          int v43 = (unsigned char *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
          if ((unint64_t)v43 < v21 && *v43 == 34)
          {
            int v20 = v43 + 1;
            *((void *)this + 1) = v20;
LABEL_92:
            unsigned int v51 = 0;
            if ((unint64_t)v20 >= v21 || *v20 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v51))return 0; {
              unsigned int v44 = v51;
              }
            }
            else
            {
              unsigned int v44 = *v20;
              unsigned int v51 = v44;
              *((void *)this + 1) = v20 + 1;
            }
            int v45 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v44);
            while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
            {
              LODWORD(v50) = 0;
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, (unsigned int *)&v50))return 0; {
              int v47 = v50;
              }
              int v48 = *(_DWORD *)(a1 + 96);
              if (v48 == *(_DWORD *)(a1 + 100))
              {
                if (2 * v48 <= v48 + 1) {
                  int v49 = v48 + 1;
                }
                else {
                  int v49 = 2 * v48;
                }
                if (v49 <= 4) {
                  int v49 = 4;
                }
                *(_DWORD *)(a1 + 100) = v49;
                operator new[]();
              }
              uint64_t v46 = *(void *)(a1 + 88);
              *(_DWORD *)(a1 + 96) = v48 + 1;
              *(_DWORD *)(v46 + 4 * v48) = v47;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v45);
            if (*((void *)this + 1) == *((void *)this + 2))
            {
LABEL_109:
              if (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
        if (v13 == 2)
        {
          int v18 = (char *)*((void *)this + 1);
          unint64_t v19 = *((void *)this + 2);
          goto LABEL_72;
        }
LABEL_24:
        if (v13 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v10, a4) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      case 4u:
        int v13 = TagFallback & 7;
        if (v13 != 5)
        {
          if (v13 == 2)
          {
            int v20 = (char *)*((void *)this + 1);
            unint64_t v21 = *((void *)this + 2);
            goto LABEL_92;
          }
          goto LABEL_24;
        }
        uint64_t result = sub_100123DD4(1, 0x22u, this, v6);
        if (!result) {
          return result;
        }
        if (*((void *)this + 1) == *((void *)this + 2)) {
          goto LABEL_109;
        }
        continue;
      default:
        int v13 = TagFallback & 7;
        goto LABEL_24;
    }
  }
}

uint64_t sub_100123BB0(int a1, unsigned int a2, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t *a4)
{
  unint64_t v29 = 0;
  uint64_t v8 = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v29);
  if (v8)
  {
    int v9 = *((_DWORD *)a4 + 2);
    if (v9 == *((_DWORD *)a4 + 3))
    {
      if (2 * v9 <= v9 + 1) {
        int v10 = v9 + 1;
      }
      else {
        int v10 = 2 * v9;
      }
      if (v10 <= 4) {
        int v10 = 4;
      }
      *((_DWORD *)a4 + 3) = v10;
      operator new[]();
    }
    uint64_t v11 = *a4;
    unint64_t v12 = v29;
    int v13 = v9 + 1;
    *((_DWORD *)a4 + 2) = v9 + 1;
    *(void *)(v11 + 8 * v9) = v12;
    int v14 = (unsigned __int8 *)*((void *)this + 1);
    int v15 = *((_DWORD *)this + 4) - v14;
    if (v15 >= 1)
    {
      int v16 = a1 + 8;
      int v17 = *((_DWORD *)a4 + 3) - v13;
      int v18 = v15 / (a1 + 8);
      int v19 = v18 >= v17 ? *((_DWORD *)a4 + 3) - v13 : v15 / (a1 + 8);
      if (v19 >= 1)
      {
        if (a2 > 0x7F)
        {
          if (a2 >> 14) {
            return v8;
          }
          uint64_t v20 = 0;
          int v25 = v9 + 2;
          uint64_t v26 = v11 + 8 * v13;
          if (v18 < (uint64_t)v17) {
            int v17 = v18;
          }
          while ((a2 & 0x7F | 0x80) == *v14 && v14[1] == (a2 >> 7))
          {
            unint64_t v29 = *(void *)(v14 + 2);
            unint64_t v27 = v29;
            *((_DWORD *)a4 + 2) = v25 + v20;
            *(void *)(v26 + 8 * v20++) = v27;
            v14 += 10;
            if (v17 == v20) {
              goto LABEL_29;
            }
          }
        }
        else
        {
          uint64_t v20 = 0;
          int v21 = v9 + 2;
          uint64_t v22 = v11 + 8 * v13;
          int v23 = v18;
          if (v18 >= (uint64_t)v17) {
            int v23 = *((_DWORD *)a4 + 3) - v13;
          }
          while (*v14 == a2)
          {
            unint64_t v29 = *(void *)(v14 + 1);
            unint64_t v24 = v29;
            *((_DWORD *)a4 + 2) = v21 + v20;
            *(void *)(v22 + 8 * v20++) = v24;
            v14 += 9;
            if (v23 == v20) {
              goto LABEL_29;
            }
          }
        }
        int v19 = v20;
LABEL_29:
        if (v19 * v16 >= 1) {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, v19 * v16);
        }
      }
    }
  }
  return v8;
}

uint64_t sub_100123DD4(int a1, unsigned int a2, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t *a4)
{
  unsigned int v28 = 0;
  uint64_t v8 = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v28);
  if (v8)
  {
    unsigned int v9 = v28;
    int v10 = *((_DWORD *)a4 + 2);
    if (v10 == *((_DWORD *)a4 + 3))
    {
      if (2 * v10 <= v10 + 1) {
        int v11 = v10 + 1;
      }
      else {
        int v11 = 2 * v10;
      }
      if (v11 <= 4) {
        int v11 = 4;
      }
      *((_DWORD *)a4 + 3) = v11;
      operator new[]();
    }
    uint64_t v12 = *a4;
    int v13 = v10 + 1;
    *((_DWORD *)a4 + 2) = v10 + 1;
    *(_DWORD *)(v12 + 4 * v10) = v9;
    int v14 = (unsigned __int8 *)*((void *)this + 1);
    int v15 = *((_DWORD *)this + 4) - v14;
    if (v15 >= 1)
    {
      int v16 = a1 + 4;
      int v17 = *((_DWORD *)a4 + 3) - v13;
      int v18 = v15 / (a1 + 4);
      int v19 = v18 >= v17 ? *((_DWORD *)a4 + 3) - v13 : v15 / (a1 + 4);
      if (v19 >= 1)
      {
        if (a2 > 0x7F)
        {
          if (a2 >> 14) {
            return v8;
          }
          uint64_t v20 = 0;
          int v24 = v10 + 2;
          uint64_t v25 = v12 + 4 * v13;
          if (v18 < (uint64_t)v17) {
            int v17 = v18;
          }
          while ((a2 & 0x7F | 0x80) == *v14 && v14[1] == (a2 >> 7))
          {
            int v26 = *(_DWORD *)(v14 + 2);
            *((_DWORD *)a4 + 2) = v24 + v20;
            *(_DWORD *)(v25 + 4 * v20++) = v26;
            v14 += 6;
            if (v17 == v20) {
              goto LABEL_29;
            }
          }
        }
        else
        {
          uint64_t v20 = 0;
          int v21 = v10 + 2;
          int v22 = v18;
          if (v18 >= (uint64_t)v17) {
            int v22 = *((_DWORD *)a4 + 3) - v13;
          }
          while (*v14 == a2)
          {
            int v23 = *(_DWORD *)(v14 + 1);
            *((_DWORD *)a4 + 2) = v21 + v20;
            *(_DWORD *)(v12 + 4 * v13 + 4 * v20++) = v23;
            v14 += 5;
            if (v22 == v20) {
              goto LABEL_29;
            }
          }
        }
        int v19 = v20;
LABEL_29:
        if (v19 * v16 >= 1) {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, v19 * v16);
        }
      }
    }
  }
  return v8;
}

uint64_t sub_100123FF8(uint64_t result, wireless_diagnostics::google::protobuf::io::CodedOutputStream *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  if (*(int *)(result + 24) >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0xAu);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v4 + 32));
    if (*(int *)(v4 + 24) >= 1)
    {
      uint64_t v5 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian64(this, *(void *)(*(void *)(v4 + 16) + 8 * v5++));
      while (v5 < *(int *)(v4 + 24));
    }
  }
  if (*(int *)(v4 + 48) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x12u);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v4 + 56));
    if (*(int *)(v4 + 48) >= 1)
    {
      uint64_t v6 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian32(this, *(_DWORD *)(*(void *)(v4 + 40) + 4 * v6++));
      while (v6 < *(int *)(v4 + 48));
    }
  }
  if (*(int *)(v4 + 72) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x1Au);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v4 + 80));
    if (*(int *)(v4 + 72) >= 1)
    {
      uint64_t v7 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian32(this, *(_DWORD *)(*(void *)(v4 + 64) + 4 * v7++));
      while (v7 < *(int *)(v4 + 72));
    }
  }
  if (*(int *)(v4 + 96) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x22u);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v4 + 104));
    if (*(int *)(v4 + 96) >= 1)
    {
      uint64_t v8 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian32(this, *(_DWORD *)(*(void *)(v4 + 88) + 4 * v8++));
      while (v8 < *(int *)(v4 + 96));
    }
  }
  int v11 = *(void **)(v4 + 8);
  int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v9 = v11;
  if (v11 && *v9 != v9[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, this, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001241B0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  if (*((int *)this + 6) >= 1)
  {
    *(unsigned char *)a2 = 10;
    unsigned int v5 = a2 + 1;
    uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if (v6 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, v5, a3);
      if (*((int *)this + 6) < 1) {
        goto LABEL_8;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v6;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if (*((int *)this + 6) < 1) {
        goto LABEL_8;
      }
    }
    uint64_t v7 = 0;
    do
    {
      *(void *)char v3 = *(void *)(*((void *)this + 2) + 8 * v7);
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 8);
      ++v7;
    }
    while (v7 < *((int *)this + 6));
  }
LABEL_8:
  if (*((int *)this + 12) <= 0) {
    goto LABEL_15;
  }
  *(unsigned char *)char v3 = 18;
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if (v8 > 0x7F)
  {
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)v3 + 1, a3);
    if (*((int *)this + 12) < 1) {
      goto LABEL_15;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v8;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if (*((int *)this + 12) < 1) {
      goto LABEL_15;
    }
  }
  uint64_t v9 = 0;
  do
  {
    *(_DWORD *)char v3 = *(_DWORD *)(*((void *)this + 5) + 4 * v9);
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 4);
    ++v9;
  }
  while (v9 < *((int *)this + 12));
LABEL_15:
  if (*((int *)this + 18) <= 0) {
    goto LABEL_22;
  }
  *(unsigned char *)char v3 = 26;
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
  if (v10 > 0x7F)
  {
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)v3 + 1, a3);
    if (*((int *)this + 18) < 1) {
      goto LABEL_22;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v10;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if (*((int *)this + 18) < 1) {
      goto LABEL_22;
    }
  }
  uint64_t v11 = 0;
  do
  {
    *(_DWORD *)char v3 = *(_DWORD *)(*((void *)this + 8) + 4 * v11);
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 4);
    ++v11;
  }
  while (v11 < *((int *)this + 18));
LABEL_22:
  if (*((int *)this + 24) > 0)
  {
    *(unsigned char *)char v3 = 34;
    uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 26);
    if (v12 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v3 + 1, a3);
      if (*((int *)this + 24) < 1) {
        goto LABEL_29;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v12;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if (*((int *)this + 24) < 1) {
        goto LABEL_29;
      }
    }
    uint64_t v13 = 0;
    do
    {
      *(_DWORD *)char v3 = *(_DWORD *)(*((void *)this + 11) + 4 * v13);
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 4);
      ++v13;
    }
    while (v13 < *((int *)this + 24));
  }
LABEL_29:
  int v16 = (void *)*((void *)this + 1);
  int v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v14 = v16;
  if (!v16 || *v14 == v14[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v15, v3, a3);
}

uint64_t sub_1001243D0(_DWORD *a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = a1[6];
  unsigned int v4 = 8 * v3;
  if (v3 < 1)
  {
    a1[8] = v4;
    int v5 = 8 * v3;
    int v8 = a1[12];
    unint64_t v7 = (4 * v8);
    if (v8 < 1) {
      goto LABEL_12;
    }
  }
  else if (v4 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v3), a2);
    a1[8] = v4;
    int v5 = v9 + 1 + v4;
    int v10 = a1[12];
    unint64_t v7 = (4 * v10);
    if (v10 < 1) {
      goto LABEL_12;
    }
  }
  else
  {
    a1[8] = v4;
    int v5 = v4 + 2;
    int v6 = a1[12];
    unint64_t v7 = (4 * v6);
    if (v6 < 1) {
      goto LABEL_12;
    }
  }
  if (v7 >= 0x80) {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7, a2)+ 1;
  }
  else {
    int v11 = 2;
  }
  v5 += v11;
LABEL_12:
  a1[14] = v7;
  int v12 = v5 + v7;
  int v13 = a1[18];
  unsigned int v14 = 4 * v13;
  if (v13 >= 1)
  {
    if (v14 >= 0x80) {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(4 * v13), a2)+ 1;
    }
    else {
      int v15 = 2;
    }
    v12 += v15;
  }
  a1[20] = v14;
  unsigned int v16 = v12 + v14;
  int v17 = a1[24];
  unsigned int v18 = 4 * v17;
  if (v17 >= 1)
  {
    if (v18 >= 0x80) {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(4 * v17), a2)+ 1;
    }
    else {
      int v19 = 2;
    }
    v16 += v19;
  }
  uint64_t v20 = (void *)*((void *)a1 + 1);
  a1[26] = v18;
  uint64_t v21 = v16 + v18;
  if (v20 && *v20 != v20[1]) {
    uint64_t v21 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 2), a2)+ v21;
  }
  a1[27] = v21;
  return v21;
}

uint64_t sub_100124534(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100122F5C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100124614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100124628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012463C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001246C8()
{
  return 1;
}

uint64_t sub_1001246D0()
{
  uint64_t v0 = qword_10047DAA8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001204DC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D998;
}

void sub_100124760(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100124774(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
    LOBYTE(v4) = *(unsigned char *)(a2 + 32);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 32);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    int v5 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 32) |= 1u;
    *(_DWORD *)(a1 + 24) = v5;
    int v4 = *(_DWORD *)(a2 + 32);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 32) |= 2u;
    uint64_t v6 = *(void *)(a1 + 16);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = *(void *)(a2 + 16);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_10047EA90 + 16);
    }
    sub_100122F5C(v6, v7);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001248BC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001248E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001248F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10012490C(void *a1)
{
  *a1 = off_1004572C0;
  if ((void *)qword_10047EA90 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001249A0(void *a1)
{
  *a1 = off_1004572C0;
  if ((void *)qword_10047EA90 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100124A48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 28) = a2;
  return result;
}

void sub_100124A50()
{
}

void sub_100124AB4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100124ADC(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 32);
  if (v2)
  {
    *(_DWORD *)(this + 24) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 16) = 0;
        *(_DWORD *)(this + 40) = 0;
        *(_DWORD *)(this + 64) = 0;
        *(_DWORD *)(this + 88) = 0;
        *(_DWORD *)(this + 104) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
  }
  uint64_t v5 = *(void *)(v1 + 8);
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 6) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_100124B60(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (1)
  {
    do
    {
      while (1)
      {
        uint64_t v7 = (char *)*((void *)this + 1);
        if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 == 1) {
          break;
        }
        if (TagFallback >> 3 == 2)
        {
          int v9 = TagFallback & 7;
          if (v9 == 2)
          {
            *(_DWORD *)(a1 + 32) |= 2u;
            uint64_t v10 = *(void *)(a1 + 16);
            if (!v10) {
              goto LABEL_28;
            }
            goto LABEL_11;
          }
        }
        else
        {
          int v9 = TagFallback & 7;
        }
LABEL_19:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
      }
        }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      unsigned int v24 = 0;
      int v12 = (char *)*((void *)this + 1);
      if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24);
        if (!result) {
          return result;
        }
        unsigned int v13 = v24;
        if (v24 > 4)
        {
LABEL_24:
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, (int)v13);
          goto LABEL_25;
        }
      }
      else
      {
        unsigned int v13 = *v12;
        *((void *)this + 1) = v12 + 1;
        if (v13 > 4) {
          goto LABEL_24;
        }
      }
      *(_DWORD *)(a1 + 32) |= 1u;
      *(_DWORD *)(a1 + 24) = v13;
LABEL_25:
      int v15 = (unsigned char *)*((void *)this + 1);
    }
    while ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 18);
    *((void *)this + 1) = v15 + 1;
    *(_DWORD *)(a1 + 32) |= 2u;
    uint64_t v10 = *(void *)(a1 + 16);
    if (!v10) {
LABEL_28:
    }
      operator new();
LABEL_11:
    unsigned int v25 = 0;
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v25)) {
        return 0;
      }
    }
    else
    {
      unsigned int v25 = *v11;
      *((void *)this + 1) = v11 + 1;
    }
    int v16 = *((_DWORD *)this + 14);
    int v17 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v16 + 1;
    if (v16 >= v17) {
      return 0;
    }
    int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v25);
    if (!sub_1001234B0(v10, this, v19, v20) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
    int v21 = *((_DWORD *)this + 14);
    BOOL v22 = __OFSUB__(v21, 1);
    int v23 = v21 - 1;
    if (v23 < 0 == v22) {
      *((_DWORD *)this + 14) = v23;
    }
    if (*((void *)this + 1) == *((void *)this + 2)
      && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
}

void sub_100124E40()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100124E68(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 24), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 2) == 0)
    {
LABEL_3:
      int v9 = *(void **)(v5 + 8);
      int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
      uint64_t v7 = v9;
      if (!v9) {
        return result;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v10 = *(void *)(v5 + 16);
  if (v10)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v10, a2, a4);
    int v11 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v11;
    if (!v11) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(qword_10047EA90 + 16), a2, a4);
    int v12 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v12;
    if (!v12) {
      return result;
    }
  }
LABEL_10:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100124F2C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if (*((unsigned char *)this + 32))
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 6);
    *(unsigned char *)a2 = 8;
    int v9 = (char *)a2 + 1;
    if ((v8 & 0x80000000) != 0)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v8, (unint64_t)v9, a3);
      if ((*((unsigned char *)this + 32) & 2) != 0) {
        goto LABEL_12;
      }
    }
    else if (v8 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v9, a3);
      if ((*((unsigned char *)this + 32) & 2) != 0) {
        goto LABEL_12;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v8;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if ((*((unsigned char *)this + 32) & 2) != 0) {
        goto LABEL_12;
      }
    }
LABEL_3:
    uint64_t v7 = (void *)*((void *)this + 1);
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = v7;
    if (!v7) {
      return v3;
    }
    goto LABEL_18;
  }
  if ((*((unsigned char *)this + 32) & 2) == 0) {
    goto LABEL_3;
  }
LABEL_12:
  uint64_t v10 = (unsigned int *)*((void *)this + 2);
  if (v10)
  {
    *(unsigned char *)uint64_t v3 = 18;
    unsigned int v11 = v3 + 1;
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[27];
    if (v12 <= 0x7F) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v10 = *(unsigned int **)(qword_10047EA90 + 16);
    *(unsigned char *)uint64_t v3 = 18;
    unsigned int v11 = v3 + 1;
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[27];
    if (v12 <= 0x7F)
    {
LABEL_14:
      *((unsigned char *)v3 + 1) = (_BYTE)v12;
      uint64_t v3 = sub_1001241B0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2), a3);
      unsigned int v13 = (void *)*((void *)this + 1);
      int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      uint64_t v5 = v13;
      if (!v13) {
        return v3;
      }
      goto LABEL_18;
    }
  }
  unsigned int v14 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v11, a3);
  uint64_t v3 = sub_1001241B0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v14, v15);
  int v16 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v16;
  if (!v16) {
    return v3;
  }
LABEL_18:
  if (*v5 == v5[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, v3, a3);
}

uint64_t sub_100125074(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  char v3 = *(unsigned char *)(a1 + 32);
  if (v3)
  {
    if ((*(unsigned char *)(a1 + 32) & 1) == 0)
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
        goto LABEL_19;
      }
LABEL_13:
      int v6 = *(_DWORD **)(a1 + 16);
      if (v6)
      {
        uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001243D0(v6, a2);
        if (v7 < 0x80)
        {
LABEL_15:
          int v8 = 1;
LABEL_18:
          uint64_t v4 = (v4 + v7 + v8 + 1);
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001243D0(*(_DWORD **)(qword_10047EA90 + 16), a2);
        if (v7 < 0x80) {
          goto LABEL_15;
        }
      }
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      goto LABEL_18;
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if ((v5 & 0x80000000) != 0)
    {
      uint64_t v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
      goto LABEL_13;
    }
    if (v5 < 0x80)
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_19;
      }
      goto LABEL_13;
    }
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)+ 1;
    if ((*(_DWORD *)(a1 + 32) & 2) != 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_19:
  int v9 = *(void **)(a1 + 8);
  if (v9 && *v9 != v9[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 28) = v4;
  return v4;
}

uint64_t sub_10012516C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100124774((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10012524C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100125260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100125274(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100125300()
{
  return 1;
}

uint64_t sub_100125308()
{
  uint64_t v0 = qword_10047DAA8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001204DC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D9A8;
}

void sub_100125398(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001253AC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v37);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = *(_DWORD *)(a1 + 24);
    int v6 = *(_DWORD *)(a1 + 28);
    int v7 = v5 + v4;
    if (v6 < v7)
    {
      int v8 = 2 * v6;
      if (2 * v6 <= v7) {
        int v8 = v7;
      }
      if (v8 <= 4) {
        int v8 = 4;
      }
      *(_DWORD *)(a1 + 28) = v8;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 16) + 4 * v5), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    int v10 = *(_DWORD *)(a1 + 48);
    int v11 = *(_DWORD *)(a1 + 52);
    int v12 = v10 + v9;
    if (v11 < v12)
    {
      int v13 = 2 * v11;
      if (2 * v11 <= v12) {
        int v13 = v12;
      }
      if (v13 <= 4) {
        int v13 = 4;
      }
      *(_DWORD *)(a1 + 52) = v13;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 40) + 4 * v10), *(const void **)(a2 + 40), 4 * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    int v15 = *(_DWORD *)(a1 + 72);
    int v16 = *(_DWORD *)(a1 + 76);
    int v17 = v15 + v14;
    if (v16 < v17)
    {
      int v18 = 2 * v16;
      if (2 * v16 <= v17) {
        int v18 = v17;
      }
      if (v18 <= 4) {
        int v18 = 4;
      }
      *(_DWORD *)(a1 + 76) = v18;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 64) + 4 * v15), *(const void **)(a2 + 64), 4 * *(int *)(a2 + 72));
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
  }
  int v19 = *(_DWORD *)(a2 + 96);
  if (v19)
  {
    int v20 = *(_DWORD *)(a1 + 96);
    int v21 = *(_DWORD *)(a1 + 100);
    int v22 = v20 + v19;
    if (v21 < v22)
    {
      int v23 = 2 * v21;
      if (2 * v21 <= v22) {
        int v23 = v22;
      }
      if (v23 <= 4) {
        int v23 = 4;
      }
      *(_DWORD *)(a1 + 100) = v23;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 88) + 4 * v20), *(const void **)(a2 + 88), 4 * *(int *)(a2 + 96));
    *(_DWORD *)(a1 + 96) += *(_DWORD *)(a2 + 96);
  }
  int v24 = *(_DWORD *)(a2 + 120);
  if (v24)
  {
    int v25 = *(_DWORD *)(a1 + 120);
    int v26 = *(_DWORD *)(a1 + 124);
    int v27 = v25 + v24;
    if (v26 < v27)
    {
      int v28 = 2 * v26;
      if (2 * v26 <= v27) {
        int v28 = v27;
      }
      if (v28 <= 4) {
        int v29 = 4;
      }
      else {
        int v29 = v28;
      }
      *(_DWORD *)(a1 + 124) = v29;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 112) + v25), *(const void **)(a2 + 112), *(int *)(a2 + 120));
    *(_DWORD *)(a1 + 120) += *(_DWORD *)(a2 + 120);
  }
  int v30 = *(_DWORD *)(a2 + 144);
  if (v30)
  {
    int v31 = *(_DWORD *)(a1 + 144);
    int v32 = *(_DWORD *)(a1 + 148);
    int v33 = v31 + v30;
    if (v32 < v33)
    {
      int v34 = 2 * v32;
      if (2 * v32 <= v33) {
        int v34 = v33;
      }
      if (v34 <= 4) {
        int v35 = 4;
      }
      else {
        int v35 = v34;
      }
      *(_DWORD *)(a1 + 148) = v35;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 136) + v31), *(const void **)(a2 + 136), *(int *)(a2 + 144));
    *(_DWORD *)(a1 + 144) += *(_DWORD *)(a2 + 144);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100125868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10012587C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100125890(void *a1)
{
  *a1 = off_100457370;
  if (a1[17]) {
    operator delete[]();
  }
  if (a1[14]) {
    operator delete[]();
  }
  if (a1[11]) {
    operator delete[]();
  }
  if (a1[8]) {
    operator delete[]();
  }
  if (a1[5]) {
    operator delete[]();
  }
  if (a1[2]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100125994(void *a1)
{
  sub_100125890(a1);

  operator delete();
}

uint64_t sub_1001259CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 156) = a2;
  return result;
}

void sub_1001259D4()
{
}

void sub_100125A4C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100125A74(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 10) = 0;
  *((_DWORD *)result + 16) = 0;
  *((_DWORD *)result + 22) = 0;
  *((_DWORD *)result + 28) = 0;
  *((_DWORD *)result + 34) = 0;
  *((_DWORD *)result + 38) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100125AA0(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v78 = (uint64_t *)(a1 + 112);
  int v79 = (uint64_t *)(a1 + 136);
  v77 = (uint64_t *)(a1 + 88);
  int v6 = (uint64_t *)(a1 + 64);
  int v7 = (uint64_t *)(a1 + 40);
  int v8 = (uint64_t *)(a1 + 16);
  unsigned int v9 = a1 + 8;
  while (2)
  {
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v12 != 2) {
            goto LABEL_30;
          }
          unsigned int v81 = 0;
          int v13 = (char *)*((void *)this + 1);
          if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v81))return 0; {
            unsigned int v14 = v81;
            }
          }
          else
          {
            unsigned int v14 = *v13;
            unsigned int v81 = v14;
            *((void *)this + 1) = v13 + 1;
          }
          int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v14);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
          {
            unsigned int v80 = 0;
            int v31 = (char *)*((void *)this + 1);
            if ((unint64_t)v31 >= *((void *)this + 2) || *v31 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v80))return 0; {
            }
              }
            else
            {
              unsigned int v80 = *v31;
              *((void *)this + 1) = v31 + 1;
            }
            int v32 = *(_DWORD *)(a1 + 24);
            if (v32 == *(_DWORD *)(a1 + 28))
            {
              if (2 * v32 <= v32 + 1) {
                int v33 = v32 + 1;
              }
              else {
                int v33 = 2 * v32;
              }
              if (v33 <= 4) {
                int v33 = 4;
              }
              *(_DWORD *)(a1 + 28) = v33;
              operator new[]();
            }
            uint64_t v29 = *(void *)(a1 + 16);
            unsigned int v30 = v80;
            *(_DWORD *)(a1 + 24) = v32 + 1;
            *(_DWORD *)(v29 + 4 * v32) = v30;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
          int v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
          if ((unint64_t)v26 < v27) {
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t result = sub_1001265A0(1, 0xAu, this, v8);
          if (!result) {
            return result;
          }
          int v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
          if ((unint64_t)v26 < v27)
          {
LABEL_64:
            if (*v26 == 18)
            {
              int v15 = v26 + 1;
              *((void *)this + 1) = v15;
              unsigned int v81 = 0;
              if ((unint64_t)v15 >= v27) {
                goto LABEL_68;
              }
LABEL_66:
              if ((char)*v15 < 0)
              {
LABEL_68:
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v81))return 0; {
                unsigned int v34 = v81;
                }
                goto LABEL_70;
              }
              unsigned int v34 = *v15;
              unsigned int v81 = v34;
              *((void *)this + 1) = v15 + 1;
LABEL_70:
              int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
              while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
              {
                unsigned int v80 = 0;
                int v38 = (char *)*((void *)this + 1);
                if ((unint64_t)v38 >= *((void *)this + 2) || *v38 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v80))return 0; {
                }
                  }
                else
                {
                  unsigned int v80 = *v38;
                  *((void *)this + 1) = v38 + 1;
                }
                int v39 = *(_DWORD *)(a1 + 48);
                if (v39 == *(_DWORD *)(a1 + 52))
                {
                  if (2 * v39 <= v39 + 1) {
                    int v40 = v39 + 1;
                  }
                  else {
                    int v40 = 2 * v39;
                  }
                  if (v40 <= 4) {
                    int v40 = 4;
                  }
                  *(_DWORD *)(a1 + 52) = v40;
                  operator new[]();
                }
                uint64_t v36 = *(void *)(a1 + 40);
                unsigned int v37 = v80;
                *(_DWORD *)(a1 + 48) = v39 + 1;
                *(_DWORD *)(v36 + 4 * v39) = v37;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
LABEL_85:
              int v41 = (unsigned char *)*((void *)this + 1);
              unint64_t v18 = *((void *)this + 2);
              if ((unint64_t)v41 < v18 && *v41 == 26)
              {
                int v17 = v41 + 1;
                *((void *)this + 1) = v17;
LABEL_88:
                unsigned int v80 = 0;
                if ((unint64_t)v17 >= v18 || *v17 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v80))return 0; {
                  unsigned int v42 = v80;
                  }
                }
                else
                {
                  unsigned int v42 = *v17;
                  unsigned int v80 = v42;
                  *((void *)this + 1) = v17 + 1;
                }
                int v43 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v42);
                while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
                {
                  unsigned int v81 = 0;
                  unsigned int v44 = (char *)*((void *)this + 1);
                  if ((unint64_t)v44 >= *((void *)this + 2) || *v44 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v81))return 0; {
                    unsigned int v45 = v81;
                    }
                    int v46 = *(_DWORD *)(a1 + 72);
                    uint64_t v47 = *(void *)(a1 + 64);
                    if (v46 == *(_DWORD *)(a1 + 76))
                    {
LABEL_102:
                      if (2 * v46 <= v46 + 1) {
                        int v48 = v46 + 1;
                      }
                      else {
                        int v48 = 2 * v46;
                      }
                      if (v48 <= 4) {
                        int v48 = 4;
                      }
                      *(_DWORD *)(a1 + 76) = v48;
                      operator new[]();
                    }
                  }
                  else
                  {
                    unsigned int v45 = *v44;
                    *((void *)this + 1) = v44 + 1;
                    int v46 = *(_DWORD *)(a1 + 72);
                    uint64_t v47 = *(void *)(a1 + 64);
                    if (v46 == *(_DWORD *)(a1 + 76)) {
                      goto LABEL_102;
                    }
                  }
                  *(_DWORD *)(a1 + 72) = v46 + 1;
                  *(_DWORD *)(v47 + 4 * v46) = -(v45 & 1) ^ (v45 >> 1);
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v43);
                goto LABEL_109;
              }
            }
          }
        }
        continue;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          uint64_t result = sub_1001265A0(1, 0x12u, this, v7);
          if (!result) {
            return result;
          }
          goto LABEL_85;
        }
        if (v12 != 2) {
          goto LABEL_30;
        }
        int v15 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        unsigned int v81 = 0;
        if ((unint64_t)v15 >= v16) {
          goto LABEL_68;
        }
        goto LABEL_66;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          uint64_t result = sub_1001267F8(1, 0x1Au, this, v6);
          if (!result) {
            return result;
          }
LABEL_109:
          int v49 = (unsigned char *)*((void *)this + 1);
          unint64_t v20 = *((void *)this + 2);
          if ((unint64_t)v49 < v20 && *v49 == 34)
          {
            int v19 = v49 + 1;
            *((void *)this + 1) = v19;
LABEL_112:
            unsigned int v81 = 0;
            if ((unint64_t)v19 >= v20 || *v19 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v81))return 0; {
              unsigned int v50 = v81;
              }
            }
            else
            {
              unsigned int v50 = *v19;
              unsigned int v81 = v50;
              *((void *)this + 1) = v19 + 1;
            }
            int v51 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v50);
            while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
            {
              unsigned int v80 = 0;
              int v54 = (char *)*((void *)this + 1);
              if ((unint64_t)v54 >= *((void *)this + 2) || *v54 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v80))return 0; {
              }
                }
              else
              {
                unsigned int v80 = *v54;
                *((void *)this + 1) = v54 + 1;
              }
              int v55 = *(_DWORD *)(a1 + 96);
              if (v55 == *(_DWORD *)(a1 + 100))
              {
                if (2 * v55 <= v55 + 1) {
                  int v56 = v55 + 1;
                }
                else {
                  int v56 = 2 * v55;
                }
                if (v56 <= 4) {
                  int v56 = 4;
                }
                *(_DWORD *)(a1 + 100) = v56;
                operator new[]();
              }
              uint64_t v52 = *(void *)(a1 + 88);
              unsigned int v53 = v80;
              *(_DWORD *)(a1 + 96) = v55 + 1;
              *(_DWORD *)(v52 + 4 * v55) = v53;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v51);
            goto LABEL_132;
          }
          continue;
        }
        if (v12 == 2)
        {
          int v17 = (char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
          goto LABEL_88;
        }
LABEL_30:
        if (v12 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v9, a4) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v12 == 2)
          {
            int v19 = (char *)*((void *)this + 1);
            unint64_t v20 = *((void *)this + 2);
            goto LABEL_112;
          }
          goto LABEL_30;
        }
        uint64_t result = sub_1001265A0(1, 0x22u, this, v77);
        if (!result) {
          return result;
        }
LABEL_132:
        int v57 = (unsigned char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        if ((unint64_t)v57 < v22 && *v57 == 42)
        {
          int v21 = v57 + 1;
          *((void *)this + 1) = v21;
LABEL_135:
          unsigned int v80 = 0;
          if ((unint64_t)v21 >= v22 || *v21 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v80))return 0; {
            unsigned int v58 = v80;
            }
          }
          else
          {
            unsigned int v58 = *v21;
            unsigned int v80 = v58;
            *((void *)this + 1) = v21 + 1;
          }
          int v59 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v58);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
          {
            unsigned int v81 = 0;
            uint64_t v60 = (char *)*((void *)this + 1);
            if ((unint64_t)v60 >= *((void *)this + 2) || (int v61 = *v60, v61 < 0))
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v81))return 0; {
              BOOL v62 = v81 != 0;
              }
              int v63 = *(_DWORD *)(a1 + 120);
              uint64_t v64 = *(void *)(a1 + 112);
              if (v63 == *(_DWORD *)(a1 + 124))
              {
LABEL_149:
                if (2 * v63 <= v63 + 1) {
                  int v65 = v63 + 1;
                }
                else {
                  int v65 = 2 * v63;
                }
                if (v65 <= 4) {
                  int v66 = 4;
                }
                else {
                  int v66 = v65;
                }
                *(_DWORD *)(a1 + 124) = v66;
                operator new[]();
              }
            }
            else
            {
              *((void *)this + 1) = v60 + 1;
              BOOL v62 = v61 != 0;
              int v63 = *(_DWORD *)(a1 + 120);
              uint64_t v64 = *(void *)(a1 + 112);
              if (v63 == *(_DWORD *)(a1 + 124)) {
                goto LABEL_149;
              }
            }
            *(_DWORD *)(a1 + 120) = v63 + 1;
            *(unsigned char *)(v64 + v63) = v62;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v59);
          goto LABEL_157;
        }
        continue;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v12 == 2)
          {
            int v21 = (char *)*((void *)this + 1);
            unint64_t v22 = *((void *)this + 2);
            goto LABEL_135;
          }
          goto LABEL_30;
        }
        uint64_t result = sub_100126A8C(1, 0x2Au, this, v78);
        if (!result) {
          return result;
        }
LABEL_157:
        int v67 = (unsigned char *)*((void *)this + 1);
        unint64_t v24 = *((void *)this + 2);
        if ((unint64_t)v67 < v24 && *v67 == 50)
        {
          int v23 = v67 + 1;
          *((void *)this + 1) = v23;
LABEL_160:
          unsigned int v80 = 0;
          if ((unint64_t)v23 >= v24 || *v23 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v80))return 0; {
            unsigned int v68 = v80;
            }
          }
          else
          {
            unsigned int v68 = *v23;
            unsigned int v80 = v68;
            *((void *)this + 1) = v23 + 1;
          }
          int v69 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v68);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
          {
            unsigned int v81 = 0;
            int v70 = (char *)*((void *)this + 1);
            if ((unint64_t)v70 >= *((void *)this + 2) || (int v71 = *v70, v71 < 0))
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v81))return 0; {
              BOOL v72 = v81 != 0;
              }
              int v73 = *(_DWORD *)(a1 + 144);
              uint64_t v74 = *(void *)(a1 + 136);
              if (v73 == *(_DWORD *)(a1 + 148))
              {
LABEL_174:
                if (2 * v73 <= v73 + 1) {
                  int v75 = v73 + 1;
                }
                else {
                  int v75 = 2 * v73;
                }
                if (v75 <= 4) {
                  int v76 = 4;
                }
                else {
                  int v76 = v75;
                }
                *(_DWORD *)(a1 + 148) = v76;
                operator new[]();
              }
            }
            else
            {
              *((void *)this + 1) = v70 + 1;
              BOOL v72 = v71 != 0;
              int v73 = *(_DWORD *)(a1 + 144);
              uint64_t v74 = *(void *)(a1 + 136);
              if (v73 == *(_DWORD *)(a1 + 148)) {
                goto LABEL_174;
              }
            }
            *(_DWORD *)(a1 + 144) = v73 + 1;
            *(unsigned char *)(v74 + v73) = v72;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v69);
          if (*((void *)this + 1) == *((void *)this + 2))
          {
LABEL_182:
            if (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
        }
        continue;
      case 6u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v12 == 2)
          {
            int v23 = (char *)*((void *)this + 1);
            unint64_t v24 = *((void *)this + 2);
            goto LABEL_160;
          }
          goto LABEL_30;
        }
        uint64_t result = sub_100126A8C(1, 0x32u, this, v79);
        if (!result) {
          return result;
        }
        if (*((void *)this + 1) == *((void *)this + 2)) {
          goto LABEL_182;
        }
        continue;
      default:
        int v12 = TagFallback & 7;
        goto LABEL_30;
    }
  }
}

uint64_t sub_1001265A0(int a1, unsigned int a2, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t *a4)
{
  unsigned int v26 = 0;
  int v7 = (char *)*((void *)this + 1);
  if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
    if (!result) {
      return result;
    }
  }
  else
  {
    unsigned int v26 = *v7;
    *((void *)this + 1) = v7 + 1;
  }
  int v9 = *((_DWORD *)a4 + 2);
  if (v9 == *((_DWORD *)a4 + 3))
  {
    if (2 * v9 <= v9 + 1) {
      int v10 = v9 + 1;
    }
    else {
      int v10 = 2 * v9;
    }
    if (v10 <= 4) {
      int v10 = 4;
    }
    *((_DWORD *)a4 + 3) = v10;
    operator new[]();
  }
  uint64_t v11 = *a4;
  unsigned int v12 = v26;
  *((_DWORD *)a4 + 2) = v9 + 1;
  *(_DWORD *)(v11 + 4 * v9) = v12;
  int v13 = *((_DWORD *)a4 + 3) - *((_DWORD *)a4 + 2);
  if (v13 >= 1)
  {
    if (a2 > 0x7F)
    {
      if (!(a2 >> 14))
      {
        int v19 = a2 & 0x7F | 0x80;
        int v20 = (a2 >> 7);
        for (int i = v13 + 1; i > 1; --i)
        {
          unint64_t v24 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v25 = *((void *)this + 2);
          if ((int)v25 - (int)v24 < 2 || v19 != *v24 || v24[1] != v20) {
            break;
          }
          *((void *)this + 1) = v24 + 2;
          if ((unint64_t)(v24 + 2) >= v25 || (char)v24[2] < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
            if (!result) {
              return result;
            }
            unsigned int v22 = v26;
            uint64_t v11 = *a4;
          }
          else
          {
            unsigned int v22 = v24[2];
            unsigned int v26 = v22;
            *((void *)this + 1) = v24 + 3;
          }
          uint64_t v23 = *((int *)a4 + 2);
          *((_DWORD *)a4 + 2) = v23 + 1;
          *(_DWORD *)(v11 + 4 * v23) = v22;
        }
      }
    }
    else
    {
      for (int j = v13 + 1; j > 1; --j)
      {
        int v17 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v17 >= v18 || *v17 != a2) {
          break;
        }
        *((void *)this + 1) = v17 + 1;
        if ((unint64_t)(v17 + 1) >= v18 || (char)v17[1] < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
          if (!result) {
            return result;
          }
          unsigned int v15 = v26;
          uint64_t v11 = *a4;
        }
        else
        {
          unsigned int v15 = v17[1];
          unsigned int v26 = v15;
          *((void *)this + 1) = v17 + 2;
        }
        uint64_t v16 = *((int *)a4 + 2);
        *((_DWORD *)a4 + 2) = v16 + 1;
        *(_DWORD *)(v11 + 4 * v16) = v15;
      }
    }
  }
  return 1;
}

uint64_t sub_1001267F8(int a1, unsigned int a2, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t *a4)
{
  unsigned int v30 = 0;
  int v7 = (char *)*((void *)this + 1);
  if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v30);
    if (!result) {
      return result;
    }
    unsigned int v8 = v30;
  }
  else
  {
    unsigned int v8 = *v7;
    *((void *)this + 1) = v7 + 1;
  }
  int v10 = -(v8 & 1) ^ (v8 >> 1);
  int v11 = *((_DWORD *)a4 + 2);
  if (v11 == *((_DWORD *)a4 + 3))
  {
    if (2 * v11 <= v11 + 1) {
      int v12 = v11 + 1;
    }
    else {
      int v12 = 2 * v11;
    }
    if (v12 <= 4) {
      int v12 = 4;
    }
    *((_DWORD *)a4 + 3) = v12;
    operator new[]();
  }
  uint64_t v13 = *a4;
  *((_DWORD *)a4 + 2) = v11 + 1;
  *(_DWORD *)(v13 + 4 * v11) = v10;
  int v14 = *((_DWORD *)a4 + 3) - *((_DWORD *)a4 + 2);
  if (v14 >= 1)
  {
    if (a2 > 0x7F)
    {
      if (!(a2 >> 14))
      {
        int v21 = a2 & 0x7F | 0x80;
        int v22 = (a2 >> 7);
        for (int i = v14 + 1; i > 1; --i)
        {
          unint64_t v27 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
          if ((int)v28 - (int)v27 < 2 || v21 != *v27 || v27[1] != v22) {
            break;
          }
          *((void *)this + 1) = v27 + 2;
          unsigned int v29 = 0;
          if ((unint64_t)(v27 + 2) >= v28 || (char)v27[2] < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29))return 0; {
            unsigned int v24 = v29;
            }
            uint64_t v13 = *a4;
          }
          else
          {
            unsigned int v24 = v27[2];
            *((void *)this + 1) = v27 + 3;
          }
          int v25 = -(v24 & 1) ^ (v24 >> 1);
          uint64_t v26 = *((int *)a4 + 2);
          *((_DWORD *)a4 + 2) = v26 + 1;
          *(_DWORD *)(v13 + 4 * v26) = v25;
        }
      }
    }
    else
    {
      for (int j = v14 + 1; j > 1; --j)
      {
        int v19 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        if ((unint64_t)v19 >= v20 || *v19 != a2) {
          break;
        }
        *((void *)this + 1) = v19 + 1;
        unsigned int v29 = 0;
        if ((unint64_t)(v19 + 1) >= v20 || (char)v19[1] < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29))return 0; {
          unsigned int v16 = v29;
          }
          uint64_t v13 = *a4;
        }
        else
        {
          unsigned int v16 = v19[1];
          *((void *)this + 1) = v19 + 2;
        }
        int v17 = -(v16 & 1) ^ (v16 >> 1);
        uint64_t v18 = *((int *)a4 + 2);
        *((_DWORD *)a4 + 2) = v18 + 1;
        *(_DWORD *)(v13 + 4 * v18) = v17;
      }
    }
  }
  return 1;
}

uint64_t sub_100126A8C(int a1, unsigned int a2, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t *a4)
{
  unsigned int v29 = 0;
  int v7 = (char *)*((void *)this + 1);
  if ((unint64_t)v7 >= *((void *)this + 2) || (int v8 = *v7, v8 < 0))
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29);
    if (!result) {
      return result;
    }
    BOOL v9 = v29 != 0;
    int v10 = *((_DWORD *)a4 + 2);
    uint64_t v11 = *a4;
    if (v10 == *((_DWORD *)a4 + 3))
    {
LABEL_4:
      if (2 * v10 <= v10 + 1) {
        int v12 = v10 + 1;
      }
      else {
        int v12 = 2 * v10;
      }
      if (v12 <= 4) {
        int v13 = 4;
      }
      else {
        int v13 = v12;
      }
      *((_DWORD *)a4 + 3) = v13;
      operator new[]();
    }
  }
  else
  {
    *((void *)this + 1) = v7 + 1;
    BOOL v9 = v8 != 0;
    int v10 = *((_DWORD *)a4 + 2);
    uint64_t v11 = *a4;
    if (v10 == *((_DWORD *)a4 + 3)) {
      goto LABEL_4;
    }
  }
  uint64_t v15 = v11;
  int v16 = v10 + 1;
  *((_DWORD *)a4 + 2) = v10 + 1;
  *(unsigned char *)(v11 + v10) = v9;
  int v17 = *((_DWORD *)a4 + 3);
  if (v17 - (v10 + 1) >= 1)
  {
    if (a2 > 0x7F)
    {
      if (!(a2 >> 14))
      {
        int v22 = a2 & 0x7F | 0x80;
        int v23 = (a2 >> 7);
        for (int i = v17 - v10; i > 1; --i)
        {
          uint64_t v26 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
          if ((int)v27 - (int)v26 < 2 || v22 != *v26 || v26[1] != v23) {
            break;
          }
          *((void *)this + 1) = v26 + 2;
          unsigned int v28 = 0;
          if ((unint64_t)(v26 + 2) >= v27 || (char)v26[2] < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28))return 0; {
            unsigned int v25 = v28;
            }
            uint64_t v15 = *a4;
            int v16 = *((_DWORD *)a4 + 2);
          }
          else
          {
            unsigned int v25 = v26[2];
            *((void *)this + 1) = v26 + 3;
          }
          *(unsigned char *)(v15 + v16++) = v25 != 0;
          *((_DWORD *)a4 + 2) = v16;
        }
      }
    }
    else
    {
      for (int j = v17 - v10; j > 1; --j)
      {
        unint64_t v20 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v21 = *((void *)this + 2);
        if ((unint64_t)v20 >= v21 || *v20 != a2) {
          break;
        }
        *((void *)this + 1) = v20 + 1;
        unsigned int v28 = 0;
        if ((unint64_t)(v20 + 1) >= v21 || (char)v20[1] < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28))return 0; {
          unsigned int v19 = v28;
          }
          uint64_t v15 = *a4;
          int v16 = *((_DWORD *)a4 + 2);
        }
        else
        {
          unsigned int v19 = v20[1];
          *((void *)this + 1) = v20 + 2;
        }
        *(unsigned char *)(v15 + v16++) = v19 != 0;
        *((_DWORD *)a4 + 2) = v16;
      }
    }
  }
  return 1;
}

uint64_t sub_100126D20(uint64_t result, wireless_diagnostics::google::protobuf::io::CodedOutputStream *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  if (*(int *)(result + 24) >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0xAu);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v4 + 32));
    if (*(int *)(v4 + 24) >= 1)
    {
      uint64_t v5 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(*(void *)(v4 + 16) + 4 * v5++));
      while (v5 < *(int *)(v4 + 24));
    }
  }
  if (*(int *)(v4 + 48) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x12u);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v4 + 56));
    if (*(int *)(v4 + 48) >= 1)
    {
      uint64_t v6 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(*(void *)(v4 + 40) + 4 * v6++));
      while (v6 < *(int *)(v4 + 48));
    }
  }
  if (*(int *)(v4 + 72) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x1Au);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v4 + 80));
    if (*(int *)(v4 + 72) >= 1)
    {
      uint64_t v7 = 0;
      do
      {
        int v8 = *(_DWORD *)(*(void *)(v4 + 64) + 4 * v7);
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, (2 * v8) ^ (v8 >> 31));
        ++v7;
      }
      while (v7 < *(int *)(v4 + 72));
    }
  }
  if (*(int *)(v4 + 96) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x22u);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v4 + 104));
    if (*(int *)(v4 + 96) >= 1)
    {
      uint64_t v9 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(*(void *)(v4 + 88) + 4 * v9++));
      while (v9 < *(int *)(v4 + 96));
    }
  }
  if (*(int *)(v4 + 120) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x2Au);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v4 + 128));
    if (*(int *)(v4 + 120) >= 1)
    {
      uint64_t v10 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(unsigned __int8 *)(*(void *)(v4 + 112) + v10++));
      while (v10 < *(int *)(v4 + 120));
    }
  }
  if (*(int *)(v4 + 144) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x32u);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v4 + 152));
    if (*(int *)(v4 + 144) >= 1)
    {
      uint64_t v11 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(unsigned __int8 *)(*(void *)(v4 + 136) + v11++));
      while (v11 < *(int *)(v4 + 144));
    }
  }
  int v14 = *(void **)(v4 + 8);
  int v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  int v12 = v14;
  if (v14 && *v12 != v12[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v13, this, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100126F88(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  char v3 = a2;
  if (*((int *)this + 6) >= 1)
  {
    *(unsigned char *)a2 = 10;
    unsigned int v5 = a2 + 1;
    uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if (v6 > 0x7F)
    {
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, v5, a3);
      if (*((int *)this + 6) < 1) {
        goto LABEL_10;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v6;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if (*((int *)this + 6) < 1) {
        goto LABEL_10;
      }
    }
    uint64_t v7 = 0;
    do
    {
      while (1)
      {
        int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 2)
                                                                                              + 4 * v7);
        if (v8 <= 0x7F) {
          break;
        }
        char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v3, a3);
        if (++v7 >= *((int *)this + 6)) {
          goto LABEL_10;
        }
      }
      *(unsigned char *)char v3 = (_BYTE)v8;
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 1);
      ++v7;
    }
    while (v7 < *((int *)this + 6));
  }
LABEL_10:
  if (*((int *)this + 12) <= 0) {
    goto LABEL_19;
  }
  *(unsigned char *)char v3 = 18;
  uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if (v9 > 0x7F)
  {
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)v3 + 1, a3);
    if (*((int *)this + 12) < 1) {
      goto LABEL_19;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v9;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if (*((int *)this + 12) < 1) {
      goto LABEL_19;
    }
  }
  uint64_t v10 = 0;
  do
  {
    while (1)
    {
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 5)
                                                                                             + 4 * v10);
      if (v11 <= 0x7F) {
        break;
      }
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v3, a3);
      if (++v10 >= *((int *)this + 12)) {
        goto LABEL_19;
      }
    }
    *(unsigned char *)char v3 = (_BYTE)v11;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 1);
    ++v10;
  }
  while (v10 < *((int *)this + 12));
LABEL_19:
  if (*((int *)this + 18) <= 0) {
    goto LABEL_28;
  }
  *(unsigned char *)char v3 = 26;
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
  if (v12 > 0x7F)
  {
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v3 + 1, a3);
    if (*((int *)this + 18) < 1) {
      goto LABEL_28;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v12;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if (*((int *)this + 18) < 1) {
      goto LABEL_28;
    }
  }
  uint64_t v13 = 0;
  do
  {
    while (1)
    {
      int v14 = *(_DWORD *)(*((void *)this + 8) + 4 * v13);
      uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v14) ^ (v14 >> 31));
      if (v15 <= 0x7F) {
        break;
      }
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, v3, a3);
      if (++v13 >= *((int *)this + 18)) {
        goto LABEL_28;
      }
    }
    *(unsigned char *)char v3 = (2 * v14) ^ (v14 >> 31);
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 1);
    ++v13;
  }
  while (v13 < *((int *)this + 18));
LABEL_28:
  if (*((int *)this + 24) <= 0) {
    goto LABEL_37;
  }
  *(unsigned char *)char v3 = 34;
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 26);
  if (v16 > 0x7F)
  {
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)v3 + 1, a3);
    if (*((int *)this + 24) < 1) {
      goto LABEL_37;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v16;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if (*((int *)this + 24) < 1) {
      goto LABEL_37;
    }
  }
  uint64_t v17 = 0;
  do
  {
    while (1)
    {
      uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 11)
                                                                                             + 4 * v17);
      if (v18 <= 0x7F) {
        break;
      }
      char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, v3, a3);
      if (++v17 >= *((int *)this + 24)) {
        goto LABEL_37;
      }
    }
    *(unsigned char *)char v3 = (_BYTE)v18;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 1);
    ++v17;
  }
  while (v17 < *((int *)this + 24));
LABEL_37:
  if (*((int *)this + 30) <= 0) {
    goto LABEL_45;
  }
  *(unsigned char *)char v3 = 42;
  unsigned int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 32);
  if (v19 > 0x7F)
  {
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)v3 + 1, a3);
    if (*((int *)this + 30) < 1) {
      goto LABEL_45;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v19;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if (*((int *)this + 30) < 1) {
      goto LABEL_45;
    }
  }
  uint64_t v20 = 0;
  do
  {
    *((unsigned char *)v3 + v20) = *(unsigned char *)(*((void *)this + 14) + v20);
    ++v20;
  }
  while (v20 < *((int *)this + 30));
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + v20);
LABEL_45:
  if (*((int *)this + 36) <= 0) {
    goto LABEL_48;
  }
  *(unsigned char *)char v3 = 50;
  unint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 38);
  if (v21 <= 0x7F)
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v21;
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if (*((int *)this + 36) < 1) {
      goto LABEL_48;
    }
LABEL_51:
    uint64_t v25 = 0;
    do
    {
      *((unsigned char *)v3 + v25) = *(unsigned char *)(*((void *)this + 17) + v25);
      ++v25;
    }
    while (v25 < *((int *)this + 36));
    char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + v25);
    uint64_t v26 = (void *)*((void *)this + 1);
    int v23 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v22 = v26;
    if (!v26) {
      return v3;
    }
    goto LABEL_54;
  }
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (int)v3 + 1, a3);
  if (*((int *)this + 36) >= 1) {
    goto LABEL_51;
  }
LABEL_48:
  unsigned int v24 = (void *)*((void *)this + 1);
  int v23 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v22 = v24;
  if (!v24) {
    return v3;
  }
LABEL_54:
  if (*v22 == v22[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v23, v3, a3);
}

uint64_t sub_100127340(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 24);
  if (v3 < 1)
  {
    LODWORD(v5) = 0;
    goto LABEL_11;
  }
  uint64_t v4 = 0;
  LODWORD(v5) = 0;
  do
  {
    while (1)
    {
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 16)
                                                                                            + 4 * v4);
      if (v7 < 0x80) {
        break;
      }
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *(_DWORD *)(a1 + 24);
      unint64_t v5 = (v6 + v5);
      if (++v4 >= v3) {
        goto LABEL_6;
      }
    }
    unint64_t v5 = (v5 + 1);
    ++v4;
  }
  while (v4 < v3);
LABEL_6:
  if ((int)v5 <= 0)
  {
LABEL_11:
    *(_DWORD *)(a1 + 32) = v5;
    int v8 = v5;
    int v9 = *(_DWORD *)(a1 + 48);
    if (v9 >= 1) {
      goto LABEL_12;
    }
LABEL_20:
    LODWORD(v11) = 0;
    goto LABEL_21;
  }
  if (v5 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v5, a2);
    *(_DWORD *)(a1 + 32) = v5;
    int v8 = v15 + 1 + v5;
    int v9 = *(_DWORD *)(a1 + 48);
    if (v9 >= 1) {
      goto LABEL_12;
    }
    goto LABEL_20;
  }
  *(_DWORD *)(a1 + 32) = v5;
  int v8 = v5 + 2;
  int v9 = *(_DWORD *)(a1 + 48);
  if (v9 < 1) {
    goto LABEL_20;
  }
LABEL_12:
  uint64_t v10 = 0;
  LODWORD(v11) = 0;
  do
  {
    while (1)
    {
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 40)
                                                                                             + 4 * v10);
      if (v13 < 0x80) {
        break;
      }
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
      int v9 = *(_DWORD *)(a1 + 48);
      unint64_t v11 = (v12 + v11);
      if (++v10 >= v9) {
        goto LABEL_16;
      }
    }
    unint64_t v11 = (v11 + 1);
    ++v10;
  }
  while (v10 < v9);
LABEL_16:
  if ((int)v11 > 0)
  {
    if (v11 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2)+ 1;
    }
    else {
      int v14 = 2;
    }
    *(_DWORD *)(a1 + 56) = v11;
    int v16 = v14 + v8 + v11;
    int v17 = *(_DWORD *)(a1 + 72);
    if (v17 >= 1) {
      goto LABEL_22;
    }
LABEL_32:
    LODWORD(v19) = 0;
    goto LABEL_33;
  }
LABEL_21:
  *(_DWORD *)(a1 + 56) = v11;
  int v16 = v8 + v11;
  int v17 = *(_DWORD *)(a1 + 72);
  if (v17 < 1) {
    goto LABEL_32;
  }
LABEL_22:
  uint64_t v18 = 0;
  LODWORD(v19) = 0;
  do
  {
    while (1)
    {
      int v21 = *(_DWORD *)(*(void *)(a1 + 64) + 4 * v18);
      int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v21) ^ (v21 >> 31));
      if (v22 < 0x80) {
        break;
      }
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
      int v17 = *(_DWORD *)(a1 + 72);
      unint64_t v19 = (v20 + v19);
      if (++v18 >= v17) {
        goto LABEL_26;
      }
    }
    unint64_t v19 = (v19 + 1);
    ++v18;
  }
  while (v18 < v17);
LABEL_26:
  if ((int)v19 <= 0)
  {
LABEL_33:
    *(_DWORD *)(a1 + 80) = v19;
    int v23 = v16 + v19;
    int v24 = *(_DWORD *)(a1 + 96);
    if (v24 >= 1) {
      goto LABEL_34;
    }
LABEL_43:
    LODWORD(v26) = 0;
    goto LABEL_44;
  }
  if (v19 >= 0x80)
  {
    int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19, a2);
    *(_DWORD *)(a1 + 80) = v19;
    int v23 = v31 + 1 + v16 + v19;
    int v24 = *(_DWORD *)(a1 + 96);
    if (v24 >= 1) {
      goto LABEL_34;
    }
    goto LABEL_43;
  }
  *(_DWORD *)(a1 + 80) = v19;
  int v23 = v16 + 2 + v19;
  int v24 = *(_DWORD *)(a1 + 96);
  if (v24 < 1) {
    goto LABEL_43;
  }
LABEL_34:
  uint64_t v25 = 0;
  LODWORD(v26) = 0;
  do
  {
    while (1)
    {
      unsigned int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 88)
                                                                                             + 4 * v25);
      if (v28 < 0x80) {
        break;
      }
      int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28, a2);
      int v24 = *(_DWORD *)(a1 + 96);
      unint64_t v26 = (v27 + v26);
      if (++v25 >= v24) {
        goto LABEL_38;
      }
    }
    unint64_t v26 = (v26 + 1);
    ++v25;
  }
  while (v25 < v24);
LABEL_38:
  if ((int)v26 <= 0)
  {
LABEL_44:
    *(_DWORD *)(a1 + 104) = v26;
    int v29 = v23 + v26;
    unsigned int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 120);
    if ((int)v30 >= 1) {
      goto LABEL_45;
    }
LABEL_52:
    *(_DWORD *)(a1 + 128) = v30;
    int v32 = v29 + v30;
    int v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 144);
    if ((int)v33 < 1) {
      goto LABEL_49;
    }
    goto LABEL_53;
  }
  if (v26 < 0x80)
  {
    *(_DWORD *)(a1 + 104) = v26;
    int v29 = v23 + 2 + v26;
    unsigned int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 120);
    if ((int)v30 >= 1) {
      goto LABEL_45;
    }
    goto LABEL_52;
  }
  int v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26, a2);
  *(_DWORD *)(a1 + 104) = v26;
  int v29 = v38 + 1 + v23 + v26;
  unsigned int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 120);
  if ((int)v30 < 1) {
    goto LABEL_52;
  }
LABEL_45:
  if (v30 >= 0x80)
  {
    int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
    *(_DWORD *)(a1 + 128) = v30;
    int v32 = v34 + 1 + v29 + v30;
    int v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 144);
    if ((int)v33 < 1) {
      goto LABEL_49;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 128) = v30;
    int v32 = v29 + 2 + v30;
    int v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 144);
    if ((int)v33 < 1)
    {
LABEL_49:
      int v35 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      uint64_t v36 = *(void **)(a1 + 8);
      *(_DWORD *)(a1 + 152) = v33;
      uint64_t v37 = (v32 + v33);
      if (!v36) {
        goto LABEL_59;
      }
      goto LABEL_57;
    }
  }
LABEL_53:
  if (v33 >= 0x80)
  {
    int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33, a2)
        + 1
        + v32;
    int v35 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v36 = *(void **)(a1 + 8);
    *(_DWORD *)(a1 + 152) = v33;
    uint64_t v37 = (v39 + v33);
    if (!v36) {
      goto LABEL_59;
    }
  }
  else
  {
    int v35 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v36 = *(void **)(a1 + 8);
    *(_DWORD *)(a1 + 152) = v33;
    uint64_t v37 = (v32 + 2 + v33);
    if (!v36) {
      goto LABEL_59;
    }
  }
LABEL_57:
  if (*v36 != v36[1])
  {
    uint64_t v40 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v35, a2)
        + v37;
    *(_DWORD *)(a1 + 156) = v40;
    return v40;
  }
LABEL_59:
  *(_DWORD *)(a1 + 156) = v37;
  return v37;
}

uint64_t sub_10012772C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001253AC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10012780C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100127820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100127834(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001278C0()
{
  return 1;
}

uint64_t sub_1001278C8()
{
  uint64_t v0 = qword_10047DAA8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001204DC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D9C0;
}

void sub_100127958(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012796C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = *(_DWORD *)(a1 + 24);
    int v6 = *(_DWORD *)(a1 + 28);
    int v7 = v5 + v4;
    if (v6 < v7)
    {
      int v8 = 2 * v6;
      if (2 * v6 <= v7) {
        int v8 = v7;
      }
      if (v8 <= 4) {
        int v8 = 4;
      }
      *(_DWORD *)(a1 + 28) = v8;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 16) + 4 * v5), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    int v10 = *(_DWORD *)(a1 + 48);
    int v11 = *(_DWORD *)(a1 + 52);
    int v12 = v10 + v9;
    if (v11 < v12)
    {
      int v13 = 2 * v11;
      if (2 * v11 <= v12) {
        int v13 = v12;
      }
      if (v13 <= 4) {
        int v13 = 4;
      }
      *(_DWORD *)(a1 + 52) = v13;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 40) + 4 * v10), *(const void **)(a2 + 40), 4 * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100127B60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100127B74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100127B88(void *a1)
{
  *a1 = off_100457420;
  if (a1[5]) {
    operator delete[]();
  }
  if (a1[2]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100127C18(void *a1)
{
  *a1 = off_100457420;
  if (a1[5]) {
    operator delete[]();
  }
  if (a1[2]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100127CBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 60) = a2;
  return result;
}

void sub_100127CC4()
{
}

void sub_100127D2C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100127D54(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 10) = 0;
  *((_DWORD *)result + 14) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100127D70(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (uint64_t *)(a1 + 40);
  int v7 = (uint64_t *)(a1 + 16);
  unsigned int v8 = a1 + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v9 = (char *)*((void *)this + 1);
        if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          *((_DWORD *)this + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v9;
          *((_DWORD *)this + 8) = TagFallback;
          *((void *)this + 1) = v9 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v11 != 2) {
            goto LABEL_19;
          }
          unsigned int v33 = 0;
          int v14 = (char *)*((void *)this + 1);
          if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33))return 0; {
            unsigned int v15 = v33;
            }
          }
          else
          {
            unsigned int v15 = *v14;
            unsigned int v33 = v15;
            *((void *)this + 1) = v14 + 1;
          }
          int v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v15);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
          {
            unsigned int v32 = 0;
            int v22 = (char *)*((void *)this + 1);
            if ((unint64_t)v22 >= *((void *)this + 2) || *v22 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
            }
              }
            else
            {
              unsigned int v32 = *v22;
              *((void *)this + 1) = v22 + 1;
            }
            int v23 = *(_DWORD *)(a1 + 24);
            if (v23 == *(_DWORD *)(a1 + 28))
            {
              if (2 * v23 <= v23 + 1) {
                int v24 = v23 + 1;
              }
              else {
                int v24 = 2 * v23;
              }
              if (v24 <= 4) {
                int v24 = 4;
              }
              *(_DWORD *)(a1 + 28) = v24;
              operator new[]();
            }
            uint64_t v20 = *(void *)(a1 + 16);
            unsigned int v21 = v32;
            *(_DWORD *)(a1 + 24) = v23 + 1;
            *(_DWORD *)(v20 + 4 * v23) = v21;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
          int v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
          if ((unint64_t)v17 < v18)
          {
LABEL_45:
            if (*v17 == 18)
            {
              int v12 = v17 + 1;
              *((void *)this + 1) = v12;
              unsigned int v33 = 0;
              if ((unint64_t)v12 >= v18) {
                goto LABEL_49;
              }
LABEL_47:
              if ((char)*v12 < 0)
              {
LABEL_49:
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v33))return 0; {
                unsigned int v25 = v33;
                }
                goto LABEL_51;
              }
              unsigned int v25 = *v12;
              unsigned int v33 = v25;
              *((void *)this + 1) = v12 + 1;
LABEL_51:
              int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v25);
              while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
              {
                unsigned int v32 = 0;
                int v29 = (char *)*((void *)this + 1);
                if ((unint64_t)v29 >= *((void *)this + 2) || *v29 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v32))return 0; {
                }
                  }
                else
                {
                  unsigned int v32 = *v29;
                  *((void *)this + 1) = v29 + 1;
                }
                int v30 = *(_DWORD *)(a1 + 48);
                if (v30 == *(_DWORD *)(a1 + 52))
                {
                  if (2 * v30 <= v30 + 1) {
                    int v31 = v30 + 1;
                  }
                  else {
                    int v31 = 2 * v30;
                  }
                  if (v31 <= 4) {
                    int v31 = 4;
                  }
                  *(_DWORD *)(a1 + 52) = v31;
                  operator new[]();
                }
                uint64_t v27 = *(void *)(a1 + 40);
                unsigned int v28 = v32;
                *(_DWORD *)(a1 + 48) = v30 + 1;
                *(_DWORD *)(v27 + 4 * v30) = v28;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v26);
              if (*((void *)this + 1) == *((void *)this + 2))
              {
LABEL_66:
                if (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
                {
                  *((_DWORD *)this + 8) = 0;
                  uint64_t result = 1;
                  *((unsigned char *)this + 36) = 1;
                  return result;
                }
              }
            }
          }
        }
        else
        {
          uint64_t result = sub_1001265A0(1, 0xAu, this, v7);
          if (!result) {
            return result;
          }
          int v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
          if ((unint64_t)v17 < v18) {
            goto LABEL_45;
          }
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v11 = TagFallback & 7;
        goto LABEL_19;
      }
      int v11 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        break;
      }
      uint64_t result = sub_1001265A0(1, 0x12u, this, v6);
      if (!result) {
        return result;
      }
      if (*((void *)this + 1) == *((void *)this + 2)) {
        goto LABEL_66;
      }
    }
    if (v11 == 2)
    {
      int v12 = (unsigned __int8 *)*((void *)this + 1);
      unint64_t v13 = *((void *)this + 2);
      unsigned int v33 = 0;
      if ((unint64_t)v12 >= v13) {
        goto LABEL_49;
      }
      goto LABEL_47;
    }
LABEL_19:
    if (v11 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v8, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100128198(uint64_t result, wireless_diagnostics::google::protobuf::io::CodedOutputStream *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  if (*(int *)(result + 24) >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0xAu);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v4 + 32));
    if (*(int *)(v4 + 24) >= 1)
    {
      uint64_t v5 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(*(void *)(v4 + 16) + 4 * v5++));
      while (v5 < *(int *)(v4 + 24));
    }
  }
  if (*(int *)(v4 + 48) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x12u);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v4 + 56));
    if (*(int *)(v4 + 48) >= 1)
    {
      uint64_t v6 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(*(void *)(v4 + 40) + 4 * v6++));
      while (v6 < *(int *)(v4 + 48));
    }
  }
  int v9 = *(void **)(v4 + 8);
  unsigned int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, this, a3);
  }
  return result;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001282A8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((int *)this + 6) >= 1)
  {
    *(unsigned char *)a2 = 10;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if (v4 > 0x7F)
    {
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
      if (*((int *)this + 6) < 1) {
        goto LABEL_10;
      }
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v4;
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      if (*((int *)this + 6) < 1) {
        goto LABEL_10;
      }
    }
    uint64_t v5 = 0;
    do
    {
      while (1)
      {
        uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 2)
                                                                                              + 4 * v5);
        if (v6 <= 0x7F) {
          break;
        }
        a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, a2, a3);
        if (++v5 >= *((int *)this + 6)) {
          goto LABEL_10;
        }
      }
      *(unsigned char *)a2 = (_BYTE)v6;
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 1);
      ++v5;
    }
    while (v5 < *((int *)this + 6));
  }
LABEL_10:
  if (*((int *)this + 12) > 0)
  {
    *(unsigned char *)a2 = 18;
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if (v7 > 0x7F)
    {
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, (int)a2 + 1, a3);
      if (*((int *)this + 12) < 1) {
        goto LABEL_19;
      }
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v7;
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      if (*((int *)this + 12) < 1) {
        goto LABEL_19;
      }
    }
    uint64_t v8 = 0;
    do
    {
      while (1)
      {
        int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 5)
                                                                                              + 4 * v8);
        if (v9 <= 0x7F) {
          break;
        }
        a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, a2, a3);
        if (++v8 >= *((int *)this + 12)) {
          goto LABEL_19;
        }
      }
      *(unsigned char *)a2 = (_BYTE)v9;
      a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 1);
      ++v8;
    }
    while (v8 < *((int *)this + 12));
  }
LABEL_19:
  int v12 = (void *)*((void *)this + 1);
  int v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v10 = v12;
  if (!v12 || *v10 == v10[1]) {
    return a2;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v11, a2, a3);
}

uint64_t sub_100128430(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 24);
  if (v3 < 1)
  {
    LODWORD(v5) = 0;
    goto LABEL_11;
  }
  uint64_t v4 = 0;
  LODWORD(v5) = 0;
  do
  {
    while (1)
    {
      int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 16)
                                                                                            + 4 * v4);
      if (v7 < 0x80) {
        break;
      }
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *(_DWORD *)(a1 + 24);
      unint64_t v5 = (v6 + v5);
      if (++v4 >= v3) {
        goto LABEL_6;
      }
    }
    unint64_t v5 = (v5 + 1);
    ++v4;
  }
  while (v4 < v3);
LABEL_6:
  if ((int)v5 <= 0)
  {
LABEL_11:
    *(_DWORD *)(a1 + 32) = v5;
    int v8 = v5;
    int v9 = *(_DWORD *)(a1 + 48);
    if (v9 >= 1) {
      goto LABEL_12;
    }
LABEL_20:
    LODWORD(v11) = 0;
    goto LABEL_21;
  }
  if (v5 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v5, a2);
    *(_DWORD *)(a1 + 32) = v5;
    int v8 = v15 + 1 + v5;
    int v9 = *(_DWORD *)(a1 + 48);
    if (v9 >= 1) {
      goto LABEL_12;
    }
    goto LABEL_20;
  }
  *(_DWORD *)(a1 + 32) = v5;
  int v8 = v5 + 2;
  int v9 = *(_DWORD *)(a1 + 48);
  if (v9 < 1) {
    goto LABEL_20;
  }
LABEL_12:
  uint64_t v10 = 0;
  LODWORD(v11) = 0;
  do
  {
    while (1)
    {
      unint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 40)
                                                                                             + 4 * v10);
      if (v13 < 0x80) {
        break;
      }
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
      int v9 = *(_DWORD *)(a1 + 48);
      unint64_t v11 = (v12 + v11);
      if (++v10 >= v9) {
        goto LABEL_16;
      }
    }
    unint64_t v11 = (v11 + 1);
    ++v10;
  }
  while (v10 < v9);
LABEL_16:
  if ((int)v11 > 0)
  {
    if (v11 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2)+ 1;
    }
    else {
      int v14 = 2;
    }
    int v20 = v14 + v8;
    int v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v17 = *(void **)(a1 + 8);
    *(_DWORD *)(a1 + 56) = v11;
    uint64_t v18 = (v20 + v11);
    if (!v17) {
      goto LABEL_22;
    }
    goto LABEL_25;
  }
LABEL_21:
  int v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v17 = *(void **)(a1 + 8);
  *(_DWORD *)(a1 + 56) = v11;
  uint64_t v18 = (v8 + v11);
  if (!v17)
  {
LABEL_22:
    *(_DWORD *)(a1 + 60) = v18;
    return v18;
  }
LABEL_25:
  if (*v17 == v17[1]) {
    goto LABEL_22;
  }
  uint64_t v21 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v16, a2)
      + v18;
  *(_DWORD *)(a1 + 60) = v21;
  return v21;
}

uint64_t sub_1001285E4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10012796C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001286C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001286D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001286EC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100128778()
{
  return 1;
}

uint64_t sub_100128780()
{
  uint64_t v0 = qword_10047DAA8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001204DC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D9D0;
}

void sub_100128810(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100128824(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v78);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = *(_DWORD *)(a1 + 24);
    int v6 = *(_DWORD *)(a1 + 28);
    int v7 = v5 + v4;
    if (v6 < v7)
    {
      int v8 = 2 * v6;
      if (2 * v6 <= v7) {
        int v8 = v7;
      }
      if (v8 <= 4) {
        int v8 = 4;
      }
      *(_DWORD *)(a1 + 28) = v8;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 16) + 4 * v5), *(const void **)(a2 + 16), 4 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    int v10 = *(_DWORD *)(a1 + 48);
    int v11 = *(_DWORD *)(a1 + 52);
    int v12 = v10 + v9;
    if (v11 < v12)
    {
      int v13 = 2 * v11;
      if (2 * v11 <= v12) {
        int v13 = v12;
      }
      if (v13 <= 4) {
        int v13 = 4;
      }
      *(_DWORD *)(a1 + 52) = v13;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 40) + 4 * v10), *(const void **)(a2 + 40), 4 * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    int v15 = *(_DWORD *)(a1 + 72);
    int v16 = *(_DWORD *)(a1 + 76);
    int v17 = v15 + v14;
    if (v16 < v17)
    {
      int v18 = 2 * v16;
      if (2 * v16 <= v17) {
        int v18 = v17;
      }
      if (v18 <= 4) {
        int v18 = 4;
      }
      *(_DWORD *)(a1 + 76) = v18;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 64) + 4 * v15), *(const void **)(a2 + 64), 4 * *(int *)(a2 + 72));
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
  }
  int v19 = *(_DWORD *)(a2 + 96);
  if (v19)
  {
    int v20 = *(_DWORD *)(a1 + 96);
    int v21 = *(_DWORD *)(a1 + 100);
    int v22 = v20 + v19;
    if (v21 < v22)
    {
      int v23 = 2 * v21;
      if (2 * v21 <= v22) {
        int v23 = v22;
      }
      if (v23 <= 4) {
        int v24 = 4;
      }
      else {
        int v24 = v23;
      }
      *(_DWORD *)(a1 + 100) = v24;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 88) + v20), *(const void **)(a2 + 88), *(int *)(a2 + 96));
    *(_DWORD *)(a1 + 96) += *(_DWORD *)(a2 + 96);
  }
  int v25 = *(_DWORD *)(a2 + 120);
  if (v25)
  {
    int v26 = *(_DWORD *)(a1 + 120);
    int v27 = *(_DWORD *)(a1 + 124);
    int v28 = v26 + v25;
    if (v27 < v28)
    {
      int v29 = 2 * v27;
      if (2 * v27 <= v28) {
        int v29 = v28;
      }
      if (v29 <= 4) {
        int v30 = 4;
      }
      else {
        int v30 = v29;
      }
      *(_DWORD *)(a1 + 124) = v30;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 112) + v26), *(const void **)(a2 + 112), *(int *)(a2 + 120));
    *(_DWORD *)(a1 + 120) += *(_DWORD *)(a2 + 120);
  }
  int v31 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 136), *(_DWORD *)(a2 + 144) + *(_DWORD *)(a1 + 144));
  if (*(int *)(a2 + 144) >= 1)
  {
    uint64_t v32 = 0;
    do
    {
      while (1)
      {
        uint64_t v36 = *(const std::string **)(*(void *)(a2 + 136) + 8 * v32);
        int v37 = *(_DWORD *)(a1 + 148);
        uint64_t v38 = *(int *)(a1 + 144);
        if ((int)v38 >= v37) {
          break;
        }
        uint64_t v39 = *(void *)(a1 + 136);
        *(_DWORD *)(a1 + 144) = v38 + 1;
        int v31 = std::string::operator=(*(std::string **)(v39 + 8 * v38), v36);
        if (++v32 >= *(int *)(a2 + 144)) {
          goto LABEL_53;
        }
      }
      if (v37 == *(_DWORD *)(a1 + 152))
      {
        int v31 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 136), v37 + 1);
        int v37 = *(_DWORD *)(a1 + 148);
      }
      *(_DWORD *)(a1 + 148) = v37 + 1;
      unsigned int v33 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)v31);
      uint64_t v34 = *(void *)(a1 + 136);
      uint64_t v35 = *(int *)(a1 + 144);
      *(_DWORD *)(a1 + 144) = v35 + 1;
      *(void *)(v34 + 8 * v35) = v33;
      int v31 = std::string::operator=(v33, v36);
      ++v32;
    }
    while (v32 < *(int *)(a2 + 144));
  }
LABEL_53:
  int v40 = *(_DWORD *)(a2 + 168);
  if (v40)
  {
    int v41 = *(_DWORD *)(a1 + 168);
    int v42 = *(_DWORD *)(a1 + 172);
    int v43 = v41 + v40;
    if (v42 < v43)
    {
      int v44 = 2 * v42;
      if (2 * v42 <= v43) {
        int v44 = v43;
      }
      if (v44 <= 4) {
        int v44 = 4;
      }
      *(_DWORD *)(a1 + 172) = v44;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 160) + 4 * v41), *(const void **)(a2 + 160), 4 * *(int *)(a2 + 168));
    *(_DWORD *)(a1 + 168) += *(_DWORD *)(a2 + 168);
  }
  sub_100139604((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 184), a2 + 184);
  int v45 = *(_DWORD *)(a2 + 216);
  if (v45)
  {
    int v46 = *(_DWORD *)(a1 + 216);
    int v47 = *(_DWORD *)(a1 + 220);
    int v48 = v46 + v45;
    if (v47 < v48)
    {
      int v49 = 2 * v47;
      if (2 * v47 <= v48) {
        int v49 = v48;
      }
      if (v49 <= 4) {
        int v50 = 4;
      }
      else {
        int v50 = v49;
      }
      *(_DWORD *)(a1 + 220) = v50;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 208) + v46), *(const void **)(a2 + 208), *(int *)(a2 + 216));
    *(_DWORD *)(a1 + 216) += *(_DWORD *)(a2 + 216);
  }
  int v51 = *(_DWORD *)(a2 + 240);
  if (v51)
  {
    int v52 = *(_DWORD *)(a1 + 240);
    int v53 = *(_DWORD *)(a1 + 244);
    int v54 = v52 + v51;
    if (v53 < v54)
    {
      int v55 = 2 * v53;
      if (2 * v53 <= v54) {
        int v55 = v54;
      }
      if (v55 <= 4) {
        int v55 = 4;
      }
      *(_DWORD *)(a1 + 244) = v55;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 232) + 4 * v52), *(const void **)(a2 + 232), 4 * *(int *)(a2 + 240));
    *(_DWORD *)(a1 + 240) += *(_DWORD *)(a2 + 240);
  }
  int v56 = *(_DWORD *)(a2 + 264);
  if (v56)
  {
    int v57 = *(_DWORD *)(a1 + 264);
    int v58 = v57 + v56;
    int v59 = *(_DWORD *)(a1 + 268);
    if (v59 < v58)
    {
      int v60 = 2 * v59;
      if (2 * v59 <= v58) {
        int v60 = v58;
      }
      if (v60 <= 4) {
        int v60 = 4;
      }
      *(_DWORD *)(a1 + 268) = v60;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 256) + 4 * v57), *(const void **)(a2 + 256), 4 * *(int *)(a2 + 264));
    *(_DWORD *)(a1 + 264) += *(_DWORD *)(a2 + 264);
  }
  int v61 = *(_DWORD *)(a2 + 288);
  if (v61)
  {
    int v62 = *(_DWORD *)(a1 + 288);
    int v63 = v62 + v61;
    int v64 = *(_DWORD *)(a1 + 292);
    if (v64 < v63)
    {
      int v65 = 2 * v64;
      if (2 * v64 <= v63) {
        int v65 = v63;
      }
      if (v65 <= 4) {
        int v65 = 4;
      }
      *(_DWORD *)(a1 + 292) = v65;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 280) + 4 * v62), *(const void **)(a2 + 280), 4 * *(int *)(a2 + 288));
    *(_DWORD *)(a1 + 288) += *(_DWORD *)(a2 + 288);
  }
  int v66 = *(_DWORD *)(a2 + 312);
  if (v66)
  {
    int v67 = *(_DWORD *)(a1 + 312);
    int v68 = v67 + v66;
    int v69 = *(_DWORD *)(a1 + 316);
    if (v69 < v68)
    {
      int v70 = 2 * v69;
      if (2 * v69 <= v68) {
        int v70 = v68;
      }
      if (v70 <= 4) {
        int v71 = 4;
      }
      else {
        int v71 = v70;
      }
      *(_DWORD *)(a1 + 316) = v71;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 304) + v67), *(const void **)(a2 + 304), *(int *)(a2 + 312));
    *(_DWORD *)(a1 + 312) += *(_DWORD *)(a2 + 312);
  }
  int v72 = *(_DWORD *)(a2 + 336);
  if (v72)
  {
    int v73 = *(_DWORD *)(a1 + 336);
    int v74 = v73 + v72;
    int v75 = *(_DWORD *)(a1 + 340);
    if (v75 < v74)
    {
      int v76 = 2 * v75;
      if (2 * v75 <= v74) {
        int v76 = v74;
      }
      if (v76 <= 4) {
        int v76 = 4;
      }
      *(_DWORD *)(a1 + 340) = v76;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 328) + 4 * v73), *(const void **)(a2 + 328), 4 * *(int *)(a2 + 336));
    *(_DWORD *)(a1 + 336) += *(_DWORD *)(a2 + 336);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100129204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100129218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10012922C(uint64_t a1)
{
  *(void *)a1 = off_1004574D0;
  if (*(void *)(a1 + 328)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 304)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 280)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 256)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 232)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 208)) {
    operator delete[]();
  }
  int v2 = *(_DWORD *)(a1 + 196);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 184) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *(_DWORD *)(a1 + 196);
      }
    }
  }
  if (*(void *)(a1 + 184)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 160)) {
    operator delete[]();
  }
  if (*(int *)(a1 + 148) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete();
      ++v5;
    }
    while (v5 < *(int *)(a1 + 148));
  }
  if (*(void *)(a1 + 136)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 112)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 88)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 64)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 40)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 16)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100129498(uint64_t a1)
{
  sub_10012922C(a1);

  operator delete();
}

uint64_t sub_1001294D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 348) = a2;
  return result;
}

void sub_1001294D8()
{
}

void sub_10012957C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001295A4(uint64_t this)
{
  uint64_t v1 = this;
  *(_DWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 72) = 0;
  *(_DWORD *)(this + 96) = 0;
  *(_DWORD *)(this + 120) = 0;
  if (*(int *)(this + 144) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      while (1)
      {
        uint64_t v3 = *(void *)(*(void *)(this + 136) + 8 * v2);
        if (*(char *)(v3 + 23) < 0) {
          break;
        }
        *(unsigned char *)uint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
        if (++v2 >= *(int *)(this + 144)) {
          goto LABEL_6;
        }
      }
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      ++v2;
    }
    while (v2 < *(int *)(this + 144));
  }
LABEL_6:
  *(_DWORD *)(this + 144) = 0;
  *(_DWORD *)(this + 168) = 0;
  if (*(int *)(this + 192) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(v1 + 184) + 8 * v4);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 192));
  }
  uint64_t v7 = *(void *)(v1 + 8);
  int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v6 + 46) = 0;
  *((_DWORD *)v6 + 52) = 0;
  *((_DWORD *)v6 + 58) = 0;
  *((_DWORD *)v6 + 64) = 0;
  *((_DWORD *)v6 + 70) = 0;
  *((_DWORD *)v6 + 76) = 0;
  *((_DWORD *)v6 + 82) = 0;
  *((_DWORD *)v6 + 86) = 0;
  if (v7)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
  }
  return this;
}

uint64_t sub_1001296CC(uint64_t result, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5 = result;
  v177 = (uint64_t *)(result + 304);
  v178 = (uint64_t *)(result + 328);
  int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(result + 8);
  v175 = (uint64_t *)(result + 208);
  v176 = (uint64_t *)(result + 232);
  v173 = (uint64_t *)(result + 112);
  v174 = (uint64_t *)(result + 160);
  v171 = (uint64_t *)(result + 64);
  v172 = (uint64_t *)(result + 88);
  v170 = (uint64_t *)(result + 40);
  uint64_t v7 = (uint64_t *)(result + 16);
  int v8 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 136);
  int v9 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 184);
LABEL_2:
  while (2)
  {
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)result;
      *((_DWORD *)this + 8) = result;
      if (!result) {
        return 1;
      }
    }
    else
    {
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v10;
      *((_DWORD *)this + 8) = v11;
      *((void *)this + 1) = v10 + 1;
      if (!v11) {
        return 1;
      }
    }
    switch(v11 >> 3)
    {
      case 1u:
        int v12 = v11 & 7;
        if ((v11 & 7) == 0)
        {
          uint64_t result = sub_1001265A0(1, 0xAu, this, v7);
          if (!result) {
            return result;
          }
LABEL_114:
          int v59 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
          if ((unint64_t)v59 < v16 && *v59 == 18)
          {
            int v15 = v59 + 1;
            *((void *)this + 1) = v15;
LABEL_117:
            unsigned int v180 = 0;
            if ((unint64_t)v15 >= v16 || *v15 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v180))return 0; {
              unsigned int v60 = v180;
              }
            }
            else
            {
              unsigned int v60 = *v15;
              unsigned int v180 = v60;
              *((void *)this + 1) = v15 + 1;
            }
            int v61 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v60);
            while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
            {
              unsigned int v179 = 0;
              int v64 = (char *)*((void *)this + 1);
              if ((unint64_t)v64 >= *((void *)this + 2) || *v64 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v179))return 0; {
              }
                }
              else
              {
                unsigned int v179 = *v64;
                *((void *)this + 1) = v64 + 1;
              }
              int v65 = *(_DWORD *)(v5 + 48);
              if (v65 == *(_DWORD *)(v5 + 52))
              {
                if (2 * v65 <= v65 + 1) {
                  int v66 = v65 + 1;
                }
                else {
                  int v66 = 2 * v65;
                }
                if (v66 <= 4) {
                  int v66 = 4;
                }
                *(_DWORD *)(v5 + 52) = v66;
                operator new[]();
              }
              uint64_t v62 = *(void *)(v5 + 40);
              unsigned int v63 = v179;
              *(_DWORD *)(v5 + 48) = v65 + 1;
              *(_DWORD *)(v62 + 4 * v65) = v63;
            }
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v61);
            goto LABEL_137;
          }
          continue;
        }
        if (v12 == 2)
        {
          unsigned int v180 = 0;
          int v13 = (char *)*((void *)this + 1);
          if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v180))return 0; {
            unsigned int v14 = v180;
            }
          }
          else
          {
            unsigned int v14 = *v13;
            unsigned int v180 = v14;
            *((void *)this + 1) = v13 + 1;
          }
          int v53 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v14);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
          {
            unsigned int v179 = 0;
            int v56 = (char *)*((void *)this + 1);
            if ((unint64_t)v56 >= *((void *)this + 2) || *v56 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v179))return 0; {
            }
              }
            else
            {
              unsigned int v179 = *v56;
              *((void *)this + 1) = v56 + 1;
            }
            int v57 = *(_DWORD *)(v5 + 24);
            if (v57 == *(_DWORD *)(v5 + 28))
            {
              if (2 * v57 <= v57 + 1) {
                int v58 = v57 + 1;
              }
              else {
                int v58 = 2 * v57;
              }
              if (v58 <= 4) {
                int v58 = 4;
              }
              *(_DWORD *)(v5 + 28) = v58;
              operator new[]();
            }
            uint64_t v54 = *(void *)(v5 + 16);
            unsigned int v55 = v179;
            *(_DWORD *)(v5 + 24) = v57 + 1;
            *(_DWORD *)(v54 + 4 * v57) = v55;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v53);
          goto LABEL_114;
        }
LABEL_53:
        if (v12 != 4)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, v11, v6, a4);
          if ((result & 1) == 0) {
            return 0;
          }
          continue;
        }
        return 1;
      case 2u:
        int v12 = v11 & 7;
        if ((v11 & 7) != 0)
        {
          if (v12 == 2)
          {
            int v15 = (char *)*((void *)this + 1);
            unint64_t v16 = *((void *)this + 2);
            goto LABEL_117;
          }
          goto LABEL_53;
        }
        uint64_t result = sub_1001265A0(1, 0x12u, this, v170);
        if (!result) {
          return result;
        }
LABEL_137:
        int v67 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        if ((unint64_t)v67 < v18 && *v67 == 26)
        {
          int v17 = v67 + 1;
          *((void *)this + 1) = v17;
LABEL_140:
          unsigned int v179 = 0;
          if ((unint64_t)v17 >= v18 || *v17 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v179))return 0; {
            unsigned int v68 = v179;
            }
          }
          else
          {
            unsigned int v68 = *v17;
            unsigned int v179 = v68;
            *((void *)this + 1) = v17 + 1;
          }
          int v69 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v68);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
          {
            unsigned int v180 = 0;
            int v70 = (char *)*((void *)this + 1);
            if ((unint64_t)v70 >= *((void *)this + 2) || *v70 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v180))return 0; {
              unsigned int v71 = v180;
              }
              int v72 = *(_DWORD *)(v5 + 72);
              uint64_t v73 = *(void *)(v5 + 64);
              if (v72 == *(_DWORD *)(v5 + 76))
              {
LABEL_154:
                if (2 * v72 <= v72 + 1) {
                  int v74 = v72 + 1;
                }
                else {
                  int v74 = 2 * v72;
                }
                if (v74 <= 4) {
                  int v74 = 4;
                }
                *(_DWORD *)(v5 + 76) = v74;
                operator new[]();
              }
            }
            else
            {
              unsigned int v71 = *v70;
              *((void *)this + 1) = v70 + 1;
              int v72 = *(_DWORD *)(v5 + 72);
              uint64_t v73 = *(void *)(v5 + 64);
              if (v72 == *(_DWORD *)(v5 + 76)) {
                goto LABEL_154;
              }
            }
            *(_DWORD *)(v5 + 72) = v72 + 1;
            *(_DWORD *)(v73 + 4 * v72) = v71;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v69);
          goto LABEL_161;
        }
        continue;
      case 3u:
        int v12 = v11 & 7;
        if ((v11 & 7) != 0)
        {
          if (v12 == 2)
          {
            int v17 = (char *)*((void *)this + 1);
            unint64_t v18 = *((void *)this + 2);
            goto LABEL_140;
          }
          goto LABEL_53;
        }
        uint64_t result = sub_10012AFD4(1, 0x1Au, this, v171);
        if (!result) {
          return result;
        }
LABEL_161:
        int v75 = (unsigned char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        if ((unint64_t)v75 < v20 && *v75 == 34)
        {
          int v19 = v75 + 1;
          *((void *)this + 1) = v19;
LABEL_164:
          unsigned int v179 = 0;
          if ((unint64_t)v19 >= v20 || *v19 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v179))return 0; {
            unsigned int v76 = v179;
            }
          }
          else
          {
            unsigned int v76 = *v19;
            unsigned int v179 = v76;
            *((void *)this + 1) = v19 + 1;
          }
          int v77 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v76);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
          {
            unsigned int v180 = 0;
            int v78 = (char *)*((void *)this + 1);
            if ((unint64_t)v78 >= *((void *)this + 2) || (int v79 = *v78, v79 < 0))
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v180))return 0; {
              BOOL v80 = v180 != 0;
              }
              int v81 = *(_DWORD *)(v5 + 96);
              uint64_t v82 = *(void *)(v5 + 88);
              if (v81 == *(_DWORD *)(v5 + 100))
              {
LABEL_178:
                if (2 * v81 <= v81 + 1) {
                  int v83 = v81 + 1;
                }
                else {
                  int v83 = 2 * v81;
                }
                if (v83 <= 4) {
                  int v84 = 4;
                }
                else {
                  int v84 = v83;
                }
                *(_DWORD *)(v5 + 100) = v84;
                operator new[]();
              }
            }
            else
            {
              *((void *)this + 1) = v78 + 1;
              BOOL v80 = v79 != 0;
              int v81 = *(_DWORD *)(v5 + 96);
              uint64_t v82 = *(void *)(v5 + 88);
              if (v81 == *(_DWORD *)(v5 + 100)) {
                goto LABEL_178;
              }
            }
            *(_DWORD *)(v5 + 96) = v81 + 1;
            *(unsigned char *)(v82 + v81) = v80;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v77);
          goto LABEL_186;
        }
        continue;
      case 4u:
        int v12 = v11 & 7;
        if ((v11 & 7) != 0)
        {
          if (v12 == 2)
          {
            int v19 = (char *)*((void *)this + 1);
            unint64_t v20 = *((void *)this + 2);
            goto LABEL_164;
          }
          goto LABEL_53;
        }
        uint64_t result = sub_100126A8C(1, 0x22u, this, v172);
        if (!result) {
          return result;
        }
LABEL_186:
        int v85 = (unsigned char *)*((void *)this + 1);
        unint64_t v22 = *((void *)this + 2);
        if ((unint64_t)v85 < v22 && *v85 == 42)
        {
          int v21 = v85 + 1;
          *((void *)this + 1) = v21;
LABEL_189:
          unsigned int v179 = 0;
          if ((unint64_t)v21 >= v22 || *v21 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v179))return 0; {
            unsigned int v86 = v179;
            }
          }
          else
          {
            unsigned int v86 = *v21;
            unsigned int v179 = v86;
            *((void *)this + 1) = v21 + 1;
          }
          int v87 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v86);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
          {
            unsigned int v180 = 0;
            int v88 = (char *)*((void *)this + 1);
            if ((unint64_t)v88 >= *((void *)this + 2) || (int v89 = *v88, v89 < 0))
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v180))return 0; {
              BOOL v90 = v180 != 0;
              }
              int v91 = *(_DWORD *)(v5 + 120);
              uint64_t v92 = *(void *)(v5 + 112);
              if (v91 == *(_DWORD *)(v5 + 124))
              {
LABEL_203:
                if (2 * v91 <= v91 + 1) {
                  int v93 = v91 + 1;
                }
                else {
                  int v93 = 2 * v91;
                }
                if (v93 <= 4) {
                  int v94 = 4;
                }
                else {
                  int v94 = v93;
                }
                *(_DWORD *)(v5 + 124) = v94;
                operator new[]();
              }
            }
            else
            {
              *((void *)this + 1) = v88 + 1;
              BOOL v90 = v89 != 0;
              int v91 = *(_DWORD *)(v5 + 120);
              uint64_t v92 = *(void *)(v5 + 112);
              if (v91 == *(_DWORD *)(v5 + 124)) {
                goto LABEL_203;
              }
            }
            *(_DWORD *)(v5 + 120) = v91 + 1;
            *(unsigned char *)(v92 + v91) = v90;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v87);
          goto LABEL_211;
        }
        continue;
      case 5u:
        int v12 = v11 & 7;
        if ((v11 & 7) != 0)
        {
          if (v12 == 2)
          {
            int v21 = (char *)*((void *)this + 1);
            unint64_t v22 = *((void *)this + 2);
            goto LABEL_189;
          }
          goto LABEL_53;
        }
        uint64_t result = sub_100126A8C(1, 0x2Au, this, v173);
        if (!result) {
          return result;
        }
LABEL_211:
        v95 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v95 < *((void *)this + 2) && *v95 == 50)
        {
          do
          {
            *((void *)this + 1) = v95 + 1;
            int v23 = *(_DWORD *)(v5 + 148);
            int v24 = *(_DWORD *)(v5 + 144);
            if (v24 < v23)
            {
LABEL_28:
              *(_DWORD *)(v5 + 144) = v24 + 1;
            }
            else
            {
LABEL_246:
              if (v23 == *(_DWORD *)(v5 + 152))
              {
                uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v23 + 1);
                int v23 = *(_DWORD *)(v5 + 148);
              }
              *(_DWORD *)(v5 + 148) = v23 + 1;
              uint64_t v104 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)result);
              uint64_t v105 = *(void *)(v5 + 136);
              uint64_t v106 = *(int *)(v5 + 144);
              *(_DWORD *)(v5 + 144) = v106 + 1;
              *(void *)(v105 + 8 * v106) = v104;
            }
            uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
            if (!result) {
              return result;
            }
            v95 = (unsigned char *)*((void *)this + 1);
            unint64_t v26 = *((void *)this + 2);
            if ((unint64_t)v95 >= v26) {
              goto LABEL_2;
            }
            int v107 = *v95;
          }
          while (v107 == 50);
          if (v107 == 58)
          {
            int v25 = v95 + 1;
            *((void *)this + 1) = v25;
LABEL_222:
            unsigned int v180 = 0;
            if ((unint64_t)v25 >= v26 || *v25 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v180))return 0; {
              unsigned int v96 = v180;
              }
            }
            else
            {
              unsigned int v96 = *v25;
              unsigned int v180 = v96;
              *((void *)this + 1) = v25 + 1;
            }
            int v97 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v96);
            while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
            {
              unsigned int v179 = 0;
              v100 = (char *)*((void *)this + 1);
              if ((unint64_t)v100 >= *((void *)this + 2) || *v100 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v179))return 0; {
              }
                }
              else
              {
                unsigned int v179 = *v100;
                *((void *)this + 1) = v100 + 1;
              }
              int v101 = *(_DWORD *)(v5 + 168);
              if (v101 == *(_DWORD *)(v5 + 172))
              {
                if (2 * v101 <= v101 + 1) {
                  int v102 = v101 + 1;
                }
                else {
                  int v102 = 2 * v101;
                }
                if (v102 <= 4) {
                  int v102 = 4;
                }
                *(_DWORD *)(v5 + 172) = v102;
                operator new[]();
              }
              uint64_t v98 = *(void *)(v5 + 160);
              unsigned int v99 = v179;
              *(_DWORD *)(v5 + 168) = v101 + 1;
              *(_DWORD *)(v98 + 4 * v101) = v99;
            }
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v97);
            goto LABEL_242;
          }
        }
        continue;
      case 6u:
        int v12 = v11 & 7;
        if (v12 != 2) {
          goto LABEL_53;
        }
        int v23 = *(_DWORD *)(v5 + 148);
        int v24 = *(_DWORD *)(v5 + 144);
        if (v24 < v23) {
          goto LABEL_28;
        }
        goto LABEL_246;
      case 7u:
        int v12 = v11 & 7;
        if ((v11 & 7) != 0)
        {
          if (v12 == 2)
          {
            int v25 = (char *)*((void *)this + 1);
            unint64_t v26 = *((void *)this + 2);
            goto LABEL_222;
          }
          goto LABEL_53;
        }
        uint64_t result = sub_1001265A0(1, 0x3Au, this, v174);
        if (!result) {
          return result;
        }
LABEL_242:
        v103 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v103 < *((void *)this + 2) && *v103 == 66)
        {
          do
          {
            *((void *)this + 1) = v103 + 1;
            int v27 = *(_DWORD *)(v5 + 196);
            uint64_t v28 = *(int *)(v5 + 192);
            if ((int)v28 >= v27)
            {
LABEL_255:
              if (v27 == *(_DWORD *)(v5 + 200))
              {
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9, v27 + 1);
                int v27 = *(_DWORD *)(v5 + 196);
              }
              *(_DWORD *)(v5 + 196) = v27 + 1;
              operator new();
            }
LABEL_34:
            uint64_t v29 = *(void *)(v5 + 184);
            *(_DWORD *)(v5 + 192) = v28 + 1;
            uint64_t v30 = *(void *)(v29 + 8 * v28);
            unsigned int v180 = 0;
            v108 = (char *)*((void *)this + 1);
            if ((unint64_t)v108 >= *((void *)this + 2) || *v108 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v180))return 0; {
            }
              }
            else
            {
              unsigned int v180 = *v108;
              *((void *)this + 1) = v108 + 1;
            }
            int v109 = *((_DWORD *)this + 14);
            int v110 = *((_DWORD *)this + 15);
            *((_DWORD *)this + 14) = v109 + 1;
            if (v109 >= v110) {
              return 0;
            }
            int v111 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v180);
            if (!sub_100127D70(v30, this, v112, v113) || !*((unsigned char *)this + 36)) {
              return 0;
            }
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v111);
            int v114 = *((_DWORD *)this + 14);
            BOOL v115 = __OFSUB__(v114, 1);
            int v116 = v114 - 1;
            if (v116 < 0 == v115) {
              *((_DWORD *)this + 14) = v116;
            }
            v103 = (unsigned char *)*((void *)this + 1);
            unint64_t v32 = *((void *)this + 2);
            if ((unint64_t)v103 >= v32) {
              goto LABEL_2;
            }
            int v117 = *v103;
          }
          while (v117 == 66);
          if (v117 == 74)
          {
            int v31 = v103 + 1;
            *((void *)this + 1) = v31;
LABEL_271:
            unsigned int v179 = 0;
            if ((unint64_t)v31 >= v32 || *v31 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v179))return 0; {
              unsigned int v118 = v179;
              }
            }
            else
            {
              unsigned int v118 = *v31;
              unsigned int v179 = v118;
              *((void *)this + 1) = v31 + 1;
            }
            int v119 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v118);
            while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
            {
              unsigned int v180 = 0;
              v120 = (char *)*((void *)this + 1);
              if ((unint64_t)v120 >= *((void *)this + 2) || (int v121 = *v120, v121 < 0))
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v180))return 0; {
                BOOL v122 = v180 != 0;
                }
                int v123 = *(_DWORD *)(v5 + 216);
                uint64_t v124 = *(void *)(v5 + 208);
                if (v123 == *(_DWORD *)(v5 + 220))
                {
LABEL_285:
                  if (2 * v123 <= v123 + 1) {
                    int v125 = v123 + 1;
                  }
                  else {
                    int v125 = 2 * v123;
                  }
                  if (v125 <= 4) {
                    int v126 = 4;
                  }
                  else {
                    int v126 = v125;
                  }
                  *(_DWORD *)(v5 + 220) = v126;
                  operator new[]();
                }
              }
              else
              {
                *((void *)this + 1) = v120 + 1;
                BOOL v122 = v121 != 0;
                int v123 = *(_DWORD *)(v5 + 216);
                uint64_t v124 = *(void *)(v5 + 208);
                if (v123 == *(_DWORD *)(v5 + 220)) {
                  goto LABEL_285;
                }
              }
              *(_DWORD *)(v5 + 216) = v123 + 1;
              *(unsigned char *)(v124 + v123) = v122;
            }
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v119);
            goto LABEL_293;
          }
        }
        continue;
      case 8u:
        int v12 = v11 & 7;
        if (v12 != 2) {
          goto LABEL_53;
        }
        int v27 = *(_DWORD *)(v5 + 196);
        uint64_t v28 = *(int *)(v5 + 192);
        if ((int)v28 < v27) {
          goto LABEL_34;
        }
        goto LABEL_255;
      case 9u:
        int v12 = v11 & 7;
        if ((v11 & 7) != 0)
        {
          if (v12 == 2)
          {
            int v31 = (char *)*((void *)this + 1);
            unint64_t v32 = *((void *)this + 2);
            goto LABEL_271;
          }
          goto LABEL_53;
        }
        uint64_t result = sub_100126A8C(1, 0x4Au, this, v175);
        if (!result) {
          return result;
        }
LABEL_293:
        v127 = (unsigned char *)*((void *)this + 1);
        unint64_t v34 = *((void *)this + 2);
        if ((unint64_t)v127 < v34 && *v127 == 82)
        {
          unsigned int v33 = v127 + 1;
          *((void *)this + 1) = v33;
LABEL_296:
          unsigned int v180 = 0;
          if ((unint64_t)v33 >= v34 || *v33 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v180))return 0; {
            unsigned int v128 = v180;
            }
          }
          else
          {
            unsigned int v128 = *v33;
            unsigned int v180 = v128;
            *((void *)this + 1) = v33 + 1;
          }
          int v129 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v128);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
          {
            unsigned int v179 = 0;
            v132 = (char *)*((void *)this + 1);
            if ((unint64_t)v132 >= *((void *)this + 2) || *v132 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v179))return 0; {
            }
              }
            else
            {
              unsigned int v179 = *v132;
              *((void *)this + 1) = v132 + 1;
            }
            int v133 = *(_DWORD *)(v5 + 240);
            if (v133 == *(_DWORD *)(v5 + 244))
            {
              if (2 * v133 <= v133 + 1) {
                int v134 = v133 + 1;
              }
              else {
                int v134 = 2 * v133;
              }
              if (v134 <= 4) {
                int v134 = 4;
              }
              *(_DWORD *)(v5 + 244) = v134;
              operator new[]();
            }
            uint64_t v130 = *(void *)(v5 + 232);
            unsigned int v131 = v179;
            *(_DWORD *)(v5 + 240) = v133 + 1;
            *(_DWORD *)(v130 + 4 * v133) = v131;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v129);
          goto LABEL_316;
        }
        continue;
      case 0xAu:
        int v12 = v11 & 7;
        if ((v11 & 7) != 0)
        {
          if (v12 == 2)
          {
            unsigned int v33 = (char *)*((void *)this + 1);
            unint64_t v34 = *((void *)this + 2);
            goto LABEL_296;
          }
          goto LABEL_53;
        }
        uint64_t result = sub_1001265A0(1, 0x52u, this, v176);
        if (!result) {
          return result;
        }
LABEL_316:
        v135 = (unsigned char *)*((void *)this + 1);
        unint64_t v36 = *((void *)this + 2);
        if ((unint64_t)v135 < v36 && *v135 == 90)
        {
          uint64_t v35 = v135 + 1;
          *((void *)this + 1) = v35;
LABEL_319:
          unsigned int v179 = 0;
          if ((unint64_t)v35 >= v36 || *v35 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v179))return 0; {
            unsigned int v136 = v179;
            }
          }
          else
          {
            unsigned int v136 = *v35;
            unsigned int v179 = v136;
            *((void *)this + 1) = v35 + 1;
          }
          int v137 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v136);
          if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) < 1)
          {
LABEL_325:
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v137);
            goto LABEL_326;
          }
          while (2)
          {
            unsigned int v180 = 0;
            v141 = (char *)*((void *)this + 1);
            if ((unint64_t)v141 >= *((void *)this + 2) || (int v142 = *v141, v142 < 0))
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v180))return 0; {
              unsigned int v143 = v180;
              }
              if (v180 <= 2)
              {
LABEL_340:
                int v144 = *(_DWORD *)(v5 + 264);
                if (v144 == *(_DWORD *)(v5 + 268))
                {
                  if (2 * v144 <= v144 + 1) {
                    int v145 = v144 + 1;
                  }
                  else {
                    int v145 = 2 * v144;
                  }
                  if (v145 <= 4) {
                    int v145 = 4;
                  }
                  *(_DWORD *)(v5 + 268) = v145;
                  operator new[]();
                }
                uint64_t v140 = *(void *)(v5 + 256);
                *(_DWORD *)(v5 + 264) = v144 + 1;
                *(_DWORD *)(v140 + 4 * v144) = v143;
              }
            }
            else
            {
              unsigned int v143 = *v141;
              *((void *)this + 1) = v141 + 1;
              if (v142 <= 2u) {
                goto LABEL_340;
              }
            }
            if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) <= 0) {
              goto LABEL_325;
            }
            continue;
          }
        }
        continue;
      case 0xBu:
        int v12 = v11 & 7;
        if ((v11 & 7) != 0)
        {
          if (v12 == 2)
          {
            uint64_t v35 = (char *)*((void *)this + 1);
            unint64_t v36 = *((void *)this + 2);
            goto LABEL_319;
          }
          goto LABEL_53;
        }
        unsigned int v180 = 0;
        int v43 = (char *)*((void *)this + 1);
        if ((unint64_t)v43 >= *((void *)this + 2) || (int v44 = *v43, v44 < 0))
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v180);
          if (!result) {
            return result;
          }
          signed int v45 = v180;
          if (v180 <= 2)
          {
LABEL_75:
            int v46 = *(_DWORD *)(v5 + 264);
            if (v46 == *(_DWORD *)(v5 + 268))
            {
              if (2 * v46 <= v46 + 1) {
                int v47 = v46 + 1;
              }
              else {
                int v47 = 2 * v46;
              }
              if (v47 <= 4) {
                int v47 = 4;
              }
              *(_DWORD *)(v5 + 268) = v47;
              operator new[]();
            }
            uint64_t result = *(void *)(v5 + 256);
            *(_DWORD *)(v5 + 264) = v46 + 1;
            *(_DWORD *)(result + 4 * v46) = v45;
            goto LABEL_326;
          }
        }
        else
        {
          signed int v45 = *v43;
          *((void *)this + 1) = v43 + 1;
          if (v44 <= 2u) {
            goto LABEL_75;
          }
        }
        uint64_t result = wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 11, v45);
LABEL_326:
        v138 = (unsigned char *)*((void *)this + 1);
        unint64_t v38 = *((void *)this + 2);
        if ((unint64_t)v138 < v38 && *v138 == 98)
        {
          int v37 = v138 + 1;
          *((void *)this + 1) = v37;
          goto LABEL_329;
        }
        continue;
      case 0xCu:
        int v12 = v11 & 7;
        if ((v11 & 7) != 0)
        {
          if (v12 == 2)
          {
            int v37 = (char *)*((void *)this + 1);
            unint64_t v38 = *((void *)this + 2);
LABEL_329:
            unsigned int v179 = 0;
            if ((unint64_t)v37 >= v38 || *v37 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v179))return 0; {
              unsigned int v139 = v179;
              }
            }
            else
            {
              unsigned int v139 = *v37;
              unsigned int v179 = v139;
              *((void *)this + 1) = v37 + 1;
            }
            int v146 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v139);
            if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) < 1)
            {
LABEL_350:
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v146);
              goto LABEL_351;
            }
            while (1)
            {
              unsigned int v180 = 0;
              v150 = (char *)*((void *)this + 1);
              if ((unint64_t)v150 >= *((void *)this + 2) || (int v151 = *v150, v151 < 0))
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v180))return 0; {
                unsigned int v152 = v180;
                }
                if (v180 <= 2)
                {
LABEL_365:
                  int v153 = *(_DWORD *)(v5 + 288);
                  if (v153 == *(_DWORD *)(v5 + 292))
                  {
                    if (2 * v153 <= v153 + 1) {
                      int v154 = v153 + 1;
                    }
                    else {
                      int v154 = 2 * v153;
                    }
                    if (v154 <= 4) {
                      int v154 = 4;
                    }
                    *(_DWORD *)(v5 + 292) = v154;
                    operator new[]();
                  }
                  uint64_t v149 = *(void *)(v5 + 280);
                  *(_DWORD *)(v5 + 288) = v153 + 1;
                  *(_DWORD *)(v149 + 4 * v153) = v152;
                }
              }
              else
              {
                unsigned int v152 = *v150;
                *((void *)this + 1) = v150 + 1;
                if (v151 <= 2u) {
                  goto LABEL_365;
                }
              }
              if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) <= 0) {
                goto LABEL_350;
              }
            }
          }
          goto LABEL_53;
        }
        unsigned int v180 = 0;
        int v48 = (char *)*((void *)this + 1);
        if ((unint64_t)v48 >= *((void *)this + 2) || (int v49 = *v48, v49 < 0))
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v180);
          if (!result) {
            return result;
          }
          signed int v50 = v180;
          if (v180 <= 2)
          {
LABEL_85:
            int v51 = *(_DWORD *)(v5 + 288);
            if (v51 == *(_DWORD *)(v5 + 292))
            {
              if (2 * v51 <= v51 + 1) {
                int v52 = v51 + 1;
              }
              else {
                int v52 = 2 * v51;
              }
              if (v52 <= 4) {
                int v52 = 4;
              }
              *(_DWORD *)(v5 + 292) = v52;
              operator new[]();
            }
            uint64_t result = *(void *)(v5 + 280);
            *(_DWORD *)(v5 + 288) = v51 + 1;
            *(_DWORD *)(result + 4 * v51) = v50;
            goto LABEL_351;
          }
        }
        else
        {
          signed int v50 = *v48;
          *((void *)this + 1) = v48 + 1;
          if (v49 <= 2u) {
            goto LABEL_85;
          }
        }
        uint64_t result = wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 12, v50);
LABEL_351:
        v147 = (unsigned char *)*((void *)this + 1);
        unint64_t v40 = *((void *)this + 2);
        if ((unint64_t)v147 < v40 && *v147 == 106)
        {
          uint64_t v39 = v147 + 1;
          *((void *)this + 1) = v39;
LABEL_354:
          unsigned int v179 = 0;
          if ((unint64_t)v39 >= v40 || *v39 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v179))return 0; {
            unsigned int v148 = v179;
            }
          }
          else
          {
            unsigned int v148 = *v39;
            unsigned int v179 = v148;
            *((void *)this + 1) = v39 + 1;
          }
          int v155 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v148);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
          {
            unsigned int v180 = 0;
            v157 = (char *)*((void *)this + 1);
            if ((unint64_t)v157 >= *((void *)this + 2) || *v157 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v180))return 0; {
              unsigned int v158 = v180;
              }
            }
            else
            {
              unsigned int v158 = *v157;
              *((void *)this + 1) = v157 + 1;
            }
            int v159 = *(_DWORD *)(v5 + 312);
            if (v159 == *(_DWORD *)(v5 + 316))
            {
              if (2 * v159 <= v159 + 1) {
                int v160 = v159 + 1;
              }
              else {
                int v160 = 2 * v159;
              }
              if (v160 <= 4) {
                int v161 = 4;
              }
              else {
                int v161 = v160;
              }
              *(_DWORD *)(v5 + 316) = v161;
              operator new[]();
            }
            uint64_t v156 = *(void *)(v5 + 304);
            *(_DWORD *)(v5 + 312) = v159 + 1;
            *(unsigned char *)(v156 + v159) = v158 != 0;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v155);
          goto LABEL_391;
        }
        continue;
      case 0xDu:
        int v12 = v11 & 7;
        if ((v11 & 7) != 0)
        {
          if (v12 == 2)
          {
            uint64_t v39 = (char *)*((void *)this + 1);
            unint64_t v40 = *((void *)this + 2);
            goto LABEL_354;
          }
          goto LABEL_53;
        }
        uint64_t result = sub_100126A8C(1, 0x6Au, this, v177);
        if (!result) {
          return result;
        }
LABEL_391:
        v162 = (unsigned char *)*((void *)this + 1);
        unint64_t v42 = *((void *)this + 2);
        if ((unint64_t)v162 < v42 && *v162 == 114)
        {
          int v41 = v162 + 1;
          *((void *)this + 1) = v41;
          goto LABEL_394;
        }
        continue;
      case 0xEu:
        int v12 = v11 & 7;
        if ((v11 & 7) != 0)
        {
          if (v12 != 2) {
            goto LABEL_53;
          }
          int v41 = (char *)*((void *)this + 1);
          unint64_t v42 = *((void *)this + 2);
LABEL_394:
          unsigned int v179 = 0;
          if ((unint64_t)v41 < v42 && (*v41 & 0x80000000) == 0)
          {
            unsigned int v163 = *v41;
            unsigned int v179 = v163;
            *((void *)this + 1) = v41 + 1;
            goto LABEL_399;
          }
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v179))return 0; {
          unsigned int v163 = v179;
          }
LABEL_399:
          int v164 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v163);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
          {
            unsigned int v180 = 0;
            v165 = (char *)*((void *)this + 1);
            if ((unint64_t)v165 >= *((void *)this + 2) || *v165 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v180))return 0; {
              unsigned int v166 = v180;
              }
              int v167 = *(_DWORD *)(v5 + 336);
              uint64_t v168 = *(void *)(v5 + 328);
              if (v167 == *(_DWORD *)(v5 + 340))
              {
LABEL_408:
                if (2 * v167 <= v167 + 1) {
                  int v169 = v167 + 1;
                }
                else {
                  int v169 = 2 * v167;
                }
                if (v169 <= 4) {
                  int v169 = 4;
                }
                *(_DWORD *)(v5 + 340) = v169;
                operator new[]();
              }
            }
            else
            {
              unsigned int v166 = *v165;
              *((void *)this + 1) = v165 + 1;
              int v167 = *(_DWORD *)(v5 + 336);
              uint64_t v168 = *(void *)(v5 + 328);
              if (v167 == *(_DWORD *)(v5 + 340)) {
                goto LABEL_408;
              }
            }
            *(_DWORD *)(v5 + 336) = v167 + 1;
            *(_DWORD *)(v168 + 4 * v167) = -(v166 & 1) ^ (v166 >> 1);
          }
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v164);
          if (*((void *)this + 1) == *((void *)this + 2))
          {
LABEL_415:
            if (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
          }
        }
        else
        {
          uint64_t result = sub_1001267F8(1, 0x72u, this, v178);
          if (!result) {
            return result;
          }
          if (*((void *)this + 1) == *((void *)this + 2)) {
            goto LABEL_415;
          }
        }
        continue;
      default:
        int v12 = v11 & 7;
        goto LABEL_53;
    }
  }
}

void sub_10012AF74()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10012AFD4(int a1, unsigned int a2, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t *a4)
{
  unsigned int v28 = 0;
  uint64_t v7 = (char *)*((void *)this + 1);
  if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v28);
    if (!result) {
      return result;
    }
    unsigned int v8 = v28;
    int v9 = *((_DWORD *)a4 + 2);
    uint64_t v10 = *a4;
    if (v9 == *((_DWORD *)a4 + 3))
    {
LABEL_4:
      if (2 * v9 <= v9 + 1) {
        int v11 = v9 + 1;
      }
      else {
        int v11 = 2 * v9;
      }
      if (v11 <= 4) {
        int v11 = 4;
      }
      *((_DWORD *)a4 + 3) = v11;
      operator new[]();
    }
  }
  else
  {
    unsigned int v8 = *v7;
    *((void *)this + 1) = v7 + 1;
    int v9 = *((_DWORD *)a4 + 2);
    uint64_t v10 = *a4;
    if (v9 == *((_DWORD *)a4 + 3)) {
      goto LABEL_4;
    }
  }
  uint64_t v13 = v10;
  *((_DWORD *)a4 + 2) = v9 + 1;
  *(_DWORD *)(v10 + 4 * v9) = v8;
  int v14 = *((_DWORD *)a4 + 3) - *((_DWORD *)a4 + 2);
  if (v14 >= 1)
  {
    if (a2 > 0x7F)
    {
      if (!(a2 >> 14))
      {
        int v20 = a2 & 0x7F | 0x80;
        int v21 = (a2 >> 7);
        for (int i = v14 + 1; i > 1; --i)
        {
          int v25 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v26 = *((void *)this + 2);
          if ((int)v26 - (int)v25 < 2 || v20 != *v25 || v25[1] != v21) {
            break;
          }
          *((void *)this + 1) = v25 + 2;
          unsigned int v27 = 0;
          if ((unint64_t)(v25 + 2) >= v26 || (char)v25[2] < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))return 0; {
            unsigned int v23 = v27;
            }
            uint64_t v13 = *a4;
          }
          else
          {
            unsigned int v23 = v25[2];
            *((void *)this + 1) = v25 + 3;
          }
          uint64_t v24 = *((int *)a4 + 2);
          *((_DWORD *)a4 + 2) = v24 + 1;
          *(_DWORD *)(v13 + 4 * v24) = v23;
        }
      }
    }
    else
    {
      for (int j = v14 + 1; j > 1; --j)
      {
        unint64_t v18 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        if ((unint64_t)v18 >= v19 || *v18 != a2) {
          break;
        }
        *((void *)this + 1) = v18 + 1;
        unsigned int v27 = 0;
        if ((unint64_t)(v18 + 1) >= v19 || (char)v18[1] < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v27))return 0; {
          unsigned int v16 = v27;
          }
          uint64_t v13 = *a4;
        }
        else
        {
          unsigned int v16 = v18[1];
          *((void *)this + 1) = v18 + 2;
        }
        uint64_t v17 = *((int *)a4 + 2);
        *((_DWORD *)a4 + 2) = v17 + 1;
        *(_DWORD *)(v13 + 4 * v17) = v16;
      }
    }
  }
  return 1;
}

uint64_t sub_10012B250(uint64_t result, wireless_diagnostics::google::protobuf::io::CodedOutputStream *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 24) >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0xAu);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v5 + 32));
    if (*(int *)(v5 + 24) >= 1)
    {
      uint64_t v6 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(*(void *)(v5 + 16) + 4 * v6++));
      while (v6 < *(int *)(v5 + 24));
    }
  }
  if (*(int *)(v5 + 48) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x12u);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v5 + 56));
    if (*(int *)(v5 + 48) >= 1)
    {
      uint64_t v7 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(*(void *)(v5 + 40) + 4 * v7++));
      while (v7 < *(int *)(v5 + 48));
    }
  }
  if (*(int *)(v5 + 72) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x1Au);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v5 + 80));
    if (*(int *)(v5 + 72) >= 1)
    {
      uint64_t v8 = 0;
      do
      {
        while (1)
        {
          unint64_t v9 = *(int *)(*(void *)(v5 + 64) + 4 * v8);
          if ((v9 & 0x80000000) != 0) {
            break;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, v9);
          if (++v8 >= *(int *)(v5 + 72)) {
            goto LABEL_15;
          }
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64(this, v9);
        ++v8;
      }
      while (v8 < *(int *)(v5 + 72));
    }
  }
LABEL_15:
  if (*(int *)(v5 + 96) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x22u);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v5 + 104));
    if (*(int *)(v5 + 96) >= 1)
    {
      uint64_t v10 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(unsigned __int8 *)(*(void *)(v5 + 88) + v10++));
      while (v10 < *(int *)(v5 + 96));
    }
  }
  if (*(int *)(v5 + 120) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x2Au);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v5 + 128));
    if (*(int *)(v5 + 120) >= 1)
    {
      uint64_t v11 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(unsigned __int8 *)(*(void *)(v5 + 112) + v11++));
      while (v11 < *(int *)(v5 + 120));
    }
  }
  if (*(int *)(v5 + 144) >= 1)
  {
    uint64_t v12 = 0;
    do
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      ++v12;
    }
    while (v12 < *(int *)(v5 + 144));
  }
  if (*(int *)(v5 + 168) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x3Au);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v5 + 176));
    if (*(int *)(v5 + 168) >= 1)
    {
      uint64_t v13 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(*(void *)(v5 + 160) + 4 * v13++));
      while (v13 < *(int *)(v5 + 168));
    }
  }
  if (*(int *)(v5 + 192) >= 1)
  {
    uint64_t v14 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(*(void *)(v5 + 184) + 8 * v14++), this, a4);
    while (v14 < *(int *)(v5 + 192));
  }
  if (*(int *)(v5 + 216) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x4Au);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v5 + 224));
    if (*(int *)(v5 + 216) >= 1)
    {
      uint64_t v15 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(unsigned __int8 *)(*(void *)(v5 + 208) + v15++));
      while (v15 < *(int *)(v5 + 216));
    }
  }
  if (*(int *)(v5 + 240) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x52u);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v5 + 248));
    if (*(int *)(v5 + 240) >= 1)
    {
      uint64_t v16 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(*(void *)(v5 + 232) + 4 * v16++));
      while (v16 < *(int *)(v5 + 240));
    }
  }
  if (*(int *)(v5 + 264) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x5Au);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v5 + 272));
    if (*(int *)(v5 + 264) >= 1)
    {
      uint64_t v17 = 0;
      do
      {
        while (1)
        {
          unint64_t v18 = *(int *)(*(void *)(v5 + 256) + 4 * v17);
          if ((v18 & 0x80000000) != 0) {
            break;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, v18);
          if (++v17 >= *(int *)(v5 + 264)) {
            goto LABEL_47;
          }
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64(this, v18);
        ++v17;
      }
      while (v17 < *(int *)(v5 + 264));
    }
  }
LABEL_47:
  if (*(int *)(v5 + 288) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x62u);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v5 + 296));
    if (*(int *)(v5 + 288) >= 1)
    {
      uint64_t v19 = 0;
      do
      {
        while (1)
        {
          unint64_t v20 = *(int *)(*(void *)(v5 + 280) + 4 * v19);
          if ((v20 & 0x80000000) != 0) {
            break;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, v20);
          if (++v19 >= *(int *)(v5 + 288)) {
            goto LABEL_53;
          }
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64(this, v20);
        ++v19;
      }
      while (v19 < *(int *)(v5 + 288));
    }
  }
LABEL_53:
  if (*(int *)(v5 + 312) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x6Au);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v5 + 320));
    if (*(int *)(v5 + 312) >= 1)
    {
      uint64_t v21 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(unsigned __int8 *)(*(void *)(v5 + 304) + v21++));
      while (v21 < *(int *)(v5 + 312));
    }
  }
  if (*(int *)(v5 + 336) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x72u);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v5 + 344));
    if (*(int *)(v5 + 336) >= 1)
    {
      uint64_t v22 = 0;
      do
      {
        int v23 = *(_DWORD *)(*(void *)(v5 + 328) + 4 * v22);
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, (2 * v23) ^ (v23 >> 31));
        ++v22;
      }
      while (v22 < *(int *)(v5 + 336));
    }
  }
  unint64_t v26 = *(void **)(v5 + 8);
  int v25 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v24 = v26;
  if (v26 && *v24 != v24[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v25, this, a3);
  }
  return result;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10012B778(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if (*((int *)this + 6) >= 1)
  {
    *(unsigned char *)a2 = 10;
    unsigned int v6 = a2 + 1;
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if (v7 > 0x7F)
    {
      uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, v6, a3);
      if (*((int *)this + 6) < 1) {
        goto LABEL_10;
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v7;
      uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      if (*((int *)this + 6) < 1) {
        goto LABEL_10;
      }
    }
    uint64_t v8 = 0;
    do
    {
      while (1)
      {
        unint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 2)
                                                                                              + 4 * v8);
        if (v9 <= 0x7F) {
          break;
        }
        uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v4, a3);
        if (++v8 >= *((int *)this + 6)) {
          goto LABEL_10;
        }
      }
      *(unsigned char *)uint64_t v4 = (_BYTE)v9;
      uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 1);
      ++v8;
    }
    while (v8 < *((int *)this + 6));
  }
LABEL_10:
  if (*((int *)this + 12) <= 0) {
    goto LABEL_19;
  }
  *(unsigned char *)uint64_t v4 = 18;
  uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if (v10 > 0x7F)
  {
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)v4 + 1, a3);
    if (*((int *)this + 12) < 1) {
      goto LABEL_19;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v10;
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if (*((int *)this + 12) < 1) {
      goto LABEL_19;
    }
  }
  uint64_t v11 = 0;
  do
  {
    while (1)
    {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 5)
                                                                                             + 4 * v11);
      if (v12 <= 0x7F) {
        break;
      }
      uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v4, a3);
      if (++v11 >= *((int *)this + 12)) {
        goto LABEL_19;
      }
    }
    *(unsigned char *)uint64_t v4 = (_BYTE)v12;
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 1);
    ++v11;
  }
  while (v11 < *((int *)this + 12));
LABEL_19:
  if (*((int *)this + 18) <= 0) {
    goto LABEL_31;
  }
  *(unsigned char *)uint64_t v4 = 26;
  uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
  if (v13 > 0x7F)
  {
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)v4 + 1, a3);
    if (*((int *)this + 18) < 1) {
      goto LABEL_31;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v13;
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if (*((int *)this + 18) < 1) {
      goto LABEL_31;
    }
  }
  uint64_t v14 = 0;
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 8) + 4 * v14);
        if ((v15 & 0x80000000) == 0) {
          break;
        }
        uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v15, (unint64_t)v4, a3);
        if (++v14 >= *((int *)this + 18)) {
          goto LABEL_31;
        }
      }
      if (v15 > 0x7F) {
        break;
      }
      *(unsigned char *)uint64_t v4 = (_BYTE)v15;
      uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 1);
      if (++v14 >= *((int *)this + 18)) {
        goto LABEL_31;
      }
    }
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, v4, a3);
    ++v14;
  }
  while (v14 < *((int *)this + 18));
LABEL_31:
  if (*((int *)this + 24) <= 0) {
    goto LABEL_39;
  }
  *(unsigned char *)uint64_t v4 = 34;
  uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 26);
  if (v16 > 0x7F)
  {
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)v4 + 1, a3);
    if (*((int *)this + 24) < 1) {
      goto LABEL_39;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v16;
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if (*((int *)this + 24) < 1) {
      goto LABEL_39;
    }
  }
  uint64_t v17 = 0;
  do
  {
    *((unsigned char *)v4 + v17) = *(unsigned char *)(*((void *)this + 11) + v17);
    ++v17;
  }
  while (v17 < *((int *)this + 24));
  uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + v17);
LABEL_39:
  if (*((int *)this + 30) <= 0) {
    goto LABEL_47;
  }
  *(unsigned char *)uint64_t v4 = 42;
  unint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 32);
  if (v18 > 0x7F)
  {
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)v4 + 1, a3);
    if (*((int *)this + 30) < 1) {
      goto LABEL_47;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v18;
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if (*((int *)this + 30) < 1) {
      goto LABEL_47;
    }
  }
  uint64_t v19 = 0;
  do
  {
    *((unsigned char *)v4 + v19) = *(unsigned char *)(*((void *)this + 14) + v19);
    ++v19;
  }
  while (v19 < *((int *)this + 30));
  uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + v19);
LABEL_47:
  if (*((int *)this + 36) >= 1)
  {
    for (uint64_t i = 0; i < *((int *)this + 36); ++i)
    {
      uint64_t v25 = *(void *)(*((void *)this + 17) + 8 * i);
      *(unsigned char *)uint64_t v4 = 50;
      if (*(char *)(v25 + 23) < 0)
      {
        unint64_t v26 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v25 + 8);
        if (v26 <= 0x7F)
        {
LABEL_61:
          *((unsigned char *)v4 + 1) = (_BYTE)v26;
          int v21 = v4 + 2;
          goto LABEL_50;
        }
      }
      else
      {
        unint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v25 + 23);
        if (*(unsigned __int8 *)(v25 + 23) <= 0x7Fu) {
          goto LABEL_61;
        }
      }
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, (int)v4 + 1, a3);
LABEL_50:
      int v22 = *(char *)(v25 + 23);
      if (v22 >= 0) {
        int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25;
      }
      else {
        int v23 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v25;
      }
      if (v22 >= 0) {
        uint64_t v24 = (const void *)*(unsigned __int8 *)(v25 + 23);
      }
      else {
        uint64_t v24 = (const void *)*(unsigned int *)(v25 + 8);
      }
      uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v23, v24, v21, a4);
    }
  }
  if (*((int *)this + 42) > 0)
  {
    *(unsigned char *)uint64_t v4 = 58;
    unsigned int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 44);
    if (v27 > 0x7F)
    {
      uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, (int)v4 + 1, a3);
      if (*((int *)this + 42) < 1) {
        goto LABEL_71;
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v27;
      uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      if (*((int *)this + 42) < 1) {
        goto LABEL_71;
      }
    }
    uint64_t v28 = 0;
    do
    {
      while (1)
      {
        uint64_t v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 20)
                                                                                               + 4 * v28);
        if (v29 <= 0x7F) {
          break;
        }
        uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v29, v4, a3);
        if (++v28 >= *((int *)this + 42)) {
          goto LABEL_71;
        }
      }
      *(unsigned char *)uint64_t v4 = (_BYTE)v29;
      uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 1);
      ++v28;
    }
    while (v28 < *((int *)this + 42));
  }
LABEL_71:
  if (*((int *)this + 48) >= 1)
  {
    uint64_t v30 = 0;
    do
    {
      unint64_t v32 = *(unsigned int **)(*((void *)this + 23) + 8 * v30);
      *(unsigned char *)uint64_t v4 = 66;
      unsigned int v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v32[15];
      if (v33 > 0x7F)
      {
        int v31 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v33, (int)v4 + 1, a3);
      }
      else
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v33;
        int v31 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      uint64_t v4 = sub_1001282A8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v32, v31, a3);
      ++v30;
    }
    while (v30 < *((int *)this + 48));
  }
  if (*((int *)this + 54) > 0)
  {
    *(unsigned char *)uint64_t v4 = 74;
    unint64_t v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 56);
    if (v34 > 0x7F)
    {
      uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v34, (int)v4 + 1, a3);
      if (*((int *)this + 54) < 1) {
        goto LABEL_85;
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v34;
      uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      if (*((int *)this + 54) < 1) {
        goto LABEL_85;
      }
    }
    uint64_t v35 = 0;
    do
    {
      *((unsigned char *)v4 + v35) = *(unsigned char *)(*((void *)this + 26) + v35);
      ++v35;
    }
    while (v35 < *((int *)this + 54));
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + v35);
  }
LABEL_85:
  if (*((int *)this + 60) <= 0) {
    goto LABEL_94;
  }
  *(unsigned char *)uint64_t v4 = 82;
  unint64_t v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 62);
  if (v36 > 0x7F)
  {
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v36, (int)v4 + 1, a3);
    if (*((int *)this + 60) < 1) {
      goto LABEL_94;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v36;
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if (*((int *)this + 60) < 1) {
      goto LABEL_94;
    }
  }
  uint64_t v37 = 0;
  do
  {
    while (1)
    {
      unint64_t v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 29)
                                                                                             + 4 * v37);
      if (v38 <= 0x7F) {
        break;
      }
      uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v38, v4, a3);
      if (++v37 >= *((int *)this + 60)) {
        goto LABEL_94;
      }
    }
    *(unsigned char *)uint64_t v4 = (_BYTE)v38;
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 1);
    ++v37;
  }
  while (v37 < *((int *)this + 60));
LABEL_94:
  if (*((int *)this + 66) <= 0) {
    goto LABEL_106;
  }
  *(unsigned char *)uint64_t v4 = 90;
  uint64_t v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 68);
  if (v39 > 0x7F)
  {
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v39, (int)v4 + 1, a3);
    if (*((int *)this + 66) < 1) {
      goto LABEL_106;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v39;
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if (*((int *)this + 66) < 1) {
      goto LABEL_106;
    }
  }
  uint64_t v40 = 0;
  do
  {
    while (1)
    {
      while (1)
      {
        int v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 32) + 4 * v40);
        if ((v41 & 0x80000000) == 0) {
          break;
        }
        uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v41, (unint64_t)v4, a3);
        if (++v40 >= *((int *)this + 66)) {
          goto LABEL_106;
        }
      }
      if (v41 > 0x7F) {
        break;
      }
      *(unsigned char *)uint64_t v4 = (_BYTE)v41;
      uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 1);
      if (++v40 >= *((int *)this + 66)) {
        goto LABEL_106;
      }
    }
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v41, v4, a3);
    ++v40;
  }
  while (v40 < *((int *)this + 66));
LABEL_106:
  if (*((int *)this + 72) <= 0) {
    goto LABEL_118;
  }
  *(unsigned char *)uint64_t v4 = 98;
  unint64_t v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 74);
  if (v42 > 0x7F)
  {
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v42, (int)v4 + 1, a3);
    if (*((int *)this + 72) < 1) {
      goto LABEL_118;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v42;
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if (*((int *)this + 72) < 1) {
      goto LABEL_118;
    }
  }
  uint64_t v43 = 0;
  do
  {
    while (1)
    {
      while (1)
      {
        int v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 35) + 4 * v43);
        if ((v44 & 0x80000000) == 0) {
          break;
        }
        uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v44, (unint64_t)v4, a3);
        if (++v43 >= *((int *)this + 72)) {
          goto LABEL_118;
        }
      }
      if (v44 > 0x7F) {
        break;
      }
      *(unsigned char *)uint64_t v4 = (_BYTE)v44;
      uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 1);
      if (++v43 >= *((int *)this + 72)) {
        goto LABEL_118;
      }
    }
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v44, v4, a3);
    ++v43;
  }
  while (v43 < *((int *)this + 72));
LABEL_118:
  if (*((int *)this + 78) <= 0) {
    goto LABEL_126;
  }
  *(unsigned char *)uint64_t v4 = 106;
  signed int v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 80);
  if (v45 > 0x7F)
  {
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v45, (int)v4 + 1, a3);
    if (*((int *)this + 78) < 1) {
      goto LABEL_126;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v45;
    uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if (*((int *)this + 78) < 1) {
      goto LABEL_126;
    }
  }
  uint64_t v46 = 0;
  do
  {
    *((unsigned char *)v4 + v46) = *(unsigned char *)(*((void *)this + 38) + v46);
    ++v46;
  }
  while (v46 < *((int *)this + 78));
  uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + v46);
LABEL_126:
  if (*((int *)this + 84) > 0)
  {
    *(unsigned char *)uint64_t v4 = 114;
    int v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 86);
    if (v47 > 0x7F)
    {
      uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v47, (int)v4 + 1, a3);
      if (*((int *)this + 84) < 1) {
        goto LABEL_135;
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v47;
      uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      if (*((int *)this + 84) < 1) {
        goto LABEL_135;
      }
    }
    uint64_t v48 = 0;
    do
    {
      while (1)
      {
        int v49 = *(_DWORD *)(*((void *)this + 41) + 4 * v48);
        signed int v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v49) ^ (v49 >> 31));
        if (v50 <= 0x7F) {
          break;
        }
        uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v50, v4, a3);
        if (++v48 >= *((int *)this + 84)) {
          goto LABEL_135;
        }
      }
      *(unsigned char *)uint64_t v4 = (2 * v49) ^ (v49 >> 31);
      uint64_t v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 1);
      ++v48;
    }
    while (v48 < *((int *)this + 84));
  }
LABEL_135:
  int v53 = (void *)*((void *)this + 1);
  int v52 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v51 = v53;
  if (!v53 || *v51 == v51[1]) {
    return v4;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v52, v4, a3);
}

uint64_t sub_10012BFE0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 24);
  if (v3 < 1)
  {
    LODWORD(v5) = 0;
    goto LABEL_11;
  }
  uint64_t v4 = 0;
  LODWORD(v5) = 0;
  do
  {
    while (1)
    {
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 16)
                                                                                            + 4 * v4);
      if (v7 < 0x80) {
        break;
      }
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
      int v3 = *(_DWORD *)(a1 + 24);
      unint64_t v5 = (v6 + v5);
      if (++v4 >= v3) {
        goto LABEL_6;
      }
    }
    unint64_t v5 = (v5 + 1);
    ++v4;
  }
  while (v4 < v3);
LABEL_6:
  if ((int)v5 <= 0)
  {
LABEL_11:
    *(_DWORD *)(a1 + 32) = v5;
    int v8 = v5;
    int v9 = *(_DWORD *)(a1 + 48);
    if (v9 >= 1) {
      goto LABEL_12;
    }
LABEL_20:
    LODWORD(v11) = 0;
    goto LABEL_21;
  }
  if (v5 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v5, a2);
    *(_DWORD *)(a1 + 32) = v5;
    int v8 = v15 + 1 + v5;
    int v9 = *(_DWORD *)(a1 + 48);
    if (v9 >= 1) {
      goto LABEL_12;
    }
    goto LABEL_20;
  }
  *(_DWORD *)(a1 + 32) = v5;
  int v8 = v5 + 2;
  int v9 = *(_DWORD *)(a1 + 48);
  if (v9 < 1) {
    goto LABEL_20;
  }
LABEL_12:
  uint64_t v10 = 0;
  LODWORD(v11) = 0;
  do
  {
    while (1)
    {
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 40)
                                                                                             + 4 * v10);
      if (v13 < 0x80) {
        break;
      }
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
      int v9 = *(_DWORD *)(a1 + 48);
      unint64_t v11 = (v12 + v11);
      if (++v10 >= v9) {
        goto LABEL_16;
      }
    }
    unint64_t v11 = (v11 + 1);
    ++v10;
  }
  while (v10 < v9);
LABEL_16:
  if ((int)v11 > 0)
  {
    if (v11 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
    }
    else {
      int v14 = 1;
    }
    *(_DWORD *)(a1 + 56) = v11;
    int v16 = v8 + v14 + 1 + v11;
    int v17 = *(_DWORD *)(a1 + 72);
    if (v17 >= 1) {
      goto LABEL_22;
    }
LABEL_34:
    LODWORD(v19) = 0;
    goto LABEL_35;
  }
LABEL_21:
  *(_DWORD *)(a1 + 56) = v11;
  int v16 = v8 + v11;
  int v17 = *(_DWORD *)(a1 + 72);
  if (v17 < 1) {
    goto LABEL_34;
  }
LABEL_22:
  uint64_t v18 = 0;
  LODWORD(v19) = 0;
  do
  {
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 64)
                                                                                           + 4 * v18);
    if ((v21 & 0x80000000) != 0)
    {
      int v20 = 10;
    }
    else if (v21 >= 0x80)
    {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21, a2);
      int v17 = *(_DWORD *)(a1 + 72);
    }
    else
    {
      int v20 = 1;
    }
    uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v20 + v19);
    ++v18;
  }
  while (v18 < v17);
  if ((int)v19 <= 0)
  {
LABEL_35:
    *(_DWORD *)(a1 + 80) = v19;
    int v23 = v16 + v19;
    uint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 96);
    if ((int)v24 < 1) {
      goto LABEL_44;
    }
    goto LABEL_36;
  }
  if (v19 >= 0x80) {
    int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
  }
  else {
    int v22 = 1;
  }
  *(_DWORD *)(a1 + 80) = v19;
  int v23 = v16 + v22 + 1 + v19;
  uint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 96);
  if ((int)v24 < 1)
  {
LABEL_44:
    *(_DWORD *)(a1 + 104) = v24;
    int v26 = v23 + v24;
    unsigned int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 120);
    if ((int)v27 >= 1) {
      goto LABEL_45;
    }
    goto LABEL_40;
  }
LABEL_36:
  if (v24 >= 0x80) {
    int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2);
  }
  else {
    int v25 = 1;
  }
  *(_DWORD *)(a1 + 104) = v24;
  int v26 = v23 + v25 + 1 + v24;
  unsigned int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 120);
  if ((int)v27 >= 1)
  {
LABEL_45:
    if (v27 >= 0x80) {
      int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2);
    }
    else {
      int v30 = 1;
    }
    *(_DWORD *)(a1 + 128) = v27;
    int v28 = *(_DWORD *)(a1 + 144);
    int v29 = v26 + v30 + 1 + v27 + v28;
    if (v28 < 1) {
      goto LABEL_59;
    }
    goto LABEL_49;
  }
LABEL_40:
  *(_DWORD *)(a1 + 128) = v27;
  int v28 = *(_DWORD *)(a1 + 144);
  int v29 = v26 + v27 + v28;
  if (v28 < 1) {
    goto LABEL_59;
  }
LABEL_49:
  for (uint64_t i = 0; i < v28; ++i)
  {
    uint64_t v36 = *(void *)(*(void *)(a1 + 136) + 8 * i);
    int v33 = *(unsigned __int8 *)(v36 + 23);
    char v35 = v33;
    uint64_t v34 = *(void *)(v36 + 8);
    if ((v33 & 0x80u) == 0) {
      unint64_t v37 = *(unsigned __int8 *)(v36 + 23);
    }
    else {
      unint64_t v37 = v34;
    }
    if (v37 >= 0x80)
    {
      int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v37, a2);
      int v33 = *(unsigned __int8 *)(v36 + 23);
      uint64_t v34 = *(void *)(v36 + 8);
      int v28 = *(_DWORD *)(a1 + 144);
      char v35 = *(unsigned char *)(v36 + 23);
    }
    else
    {
      int v32 = 1;
    }
    if (v35 < 0) {
      int v33 = v34;
    }
    v29 += v32 + v33;
  }
LABEL_59:
  int v38 = *(_DWORD *)(a1 + 168);
  if (v38 < 1)
  {
    LODWORD(v40) = 0;
  }
  else
  {
    uint64_t v39 = 0;
    LODWORD(v40) = 0;
    do
    {
      while (1)
      {
        unint64_t v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 160)
                                                                                               + 4 * v39);
        if (v42 < 0x80) {
          break;
        }
        int v41 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42, a2);
        int v38 = *(_DWORD *)(a1 + 168);
        unint64_t v40 = (v41 + v40);
        if (++v39 >= v38) {
          goto LABEL_64;
        }
      }
      unint64_t v40 = (v40 + 1);
      ++v39;
    }
    while (v39 < v38);
LABEL_64:
    if ((int)v40 > 0)
    {
      if (v40 >= 0x80) {
        int v43 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v40, a2);
      }
      else {
        int v43 = 1;
      }
      *(_DWORD *)(a1 + 176) = v40;
      int v46 = *(_DWORD *)(a1 + 192);
      int v45 = v29 + v43 + 1 + v40 + v46;
      if (v46 < 1) {
        goto LABEL_76;
      }
      goto LABEL_72;
    }
  }
  *(_DWORD *)(a1 + 176) = v40;
  int v44 = *(_DWORD *)(a1 + 192);
  int v45 = v29 + v40 + v44;
  if (v44 < 1) {
    goto LABEL_76;
  }
LABEL_72:
  uint64_t v47 = 0;
  do
  {
    while (1)
    {
      uint64_t v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100128430(*(void *)(*(void *)(a1 + 184)+ 8 * v47), a2);
      if (v48 < 0x80) {
        break;
      }
      v45 += v48
           + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v48, a2);
      if (++v47 >= *(int *)(a1 + 192)) {
        goto LABEL_76;
      }
    }
    v45 += v48 + 1;
    ++v47;
  }
  while (v47 < *(int *)(a1 + 192));
LABEL_76:
  int v49 = *(_DWORD *)(a1 + 216);
  if (v49 > 0)
  {
    if (v49 >= 0x80) {
      int v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 216), a2);
    }
    else {
      int v50 = 1;
    }
    v45 += v50 + 1;
  }
  *(_DWORD *)(a1 + 224) = v49;
  int v51 = v45 + v49;
  int v52 = *(_DWORD *)(a1 + 240);
  if (v52 < 1)
  {
    LODWORD(v54) = 0;
  }
  else
  {
    uint64_t v53 = 0;
    LODWORD(v54) = 0;
    do
    {
      while (1)
      {
        int v56 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 232)
                                                                                               + 4 * v53);
        if (v56 < 0x80) {
          break;
        }
        int v55 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v56, a2);
        int v52 = *(_DWORD *)(a1 + 240);
        unint64_t v54 = (v55 + v54);
        if (++v53 >= v52) {
          goto LABEL_86;
        }
      }
      unint64_t v54 = (v54 + 1);
      ++v53;
    }
    while (v53 < v52);
LABEL_86:
    if ((int)v54 > 0)
    {
      if (v54 >= 0x80) {
        int v57 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v54, a2);
      }
      else {
        int v57 = 1;
      }
      *(_DWORD *)(a1 + 248) = v54;
      int v58 = v51 + v57 + 1 + v54;
      int v59 = *(_DWORD *)(a1 + 264);
      if (v59 < 1) {
        goto LABEL_104;
      }
      goto LABEL_91;
    }
  }
  *(_DWORD *)(a1 + 248) = v54;
  int v58 = v51 + v54;
  int v59 = *(_DWORD *)(a1 + 264);
  if (v59 < 1)
  {
LABEL_104:
    LODWORD(v61) = 0;
    goto LABEL_105;
  }
LABEL_91:
  uint64_t v60 = 0;
  LODWORD(v61) = 0;
  do
  {
    unsigned int v63 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 256)
                                                                                           + 4 * v60);
    if ((v63 & 0x80000000) != 0)
    {
      int v62 = 10;
    }
    else if (v63 >= 0x80)
    {
      int v62 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v63, a2);
      int v59 = *(_DWORD *)(a1 + 264);
    }
    else
    {
      int v62 = 1;
    }
    int v61 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v62 + v61);
    ++v60;
  }
  while (v60 < v59);
  if ((int)v61 <= 0)
  {
LABEL_105:
    *(_DWORD *)(a1 + 272) = v61;
    int v64 = v58 + v61;
    int v65 = *(_DWORD *)(a1 + 288);
    if (v65 >= 1) {
      goto LABEL_106;
    }
LABEL_118:
    LODWORD(v67) = 0;
    goto LABEL_119;
  }
  if (v61 >= 0x80)
  {
    int v72 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v61, a2);
    *(_DWORD *)(a1 + 272) = v61;
    int v64 = v72 + 1 + v58 + v61;
    int v65 = *(_DWORD *)(a1 + 288);
    if (v65 >= 1) {
      goto LABEL_106;
    }
    goto LABEL_118;
  }
  *(_DWORD *)(a1 + 272) = v61;
  int v64 = v58 + 2 + v61;
  int v65 = *(_DWORD *)(a1 + 288);
  if (v65 < 1) {
    goto LABEL_118;
  }
LABEL_106:
  uint64_t v66 = 0;
  LODWORD(v67) = 0;
  do
  {
    int v69 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 280)
                                                                                           + 4 * v66);
    if ((v69 & 0x80000000) != 0)
    {
      int v68 = 10;
    }
    else if (v69 >= 0x80)
    {
      int v68 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v69, a2);
      int v65 = *(_DWORD *)(a1 + 288);
    }
    else
    {
      int v68 = 1;
    }
    int v67 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v68 + v67);
    ++v66;
  }
  while (v66 < v65);
  if ((int)v67 <= 0)
  {
LABEL_119:
    *(_DWORD *)(a1 + 296) = v67;
    int v70 = v64 + v67;
    unsigned int v71 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 312);
    if ((int)v71 < 1) {
      goto LABEL_126;
    }
    goto LABEL_120;
  }
  if (v67 >= 0x80)
  {
    int v77 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v67, a2);
    *(_DWORD *)(a1 + 296) = v67;
    int v70 = v77 + 1 + v64 + v67;
    unsigned int v71 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 312);
    if ((int)v71 < 1) {
      goto LABEL_126;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 296) = v67;
    int v70 = v64 + 2 + v67;
    unsigned int v71 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 312);
    if ((int)v71 < 1)
    {
LABEL_126:
      *(_DWORD *)(a1 + 320) = v71;
      int v73 = v70 + v71;
      int v74 = *(_DWORD *)(a1 + 336);
      if (v74 >= 1) {
        goto LABEL_127;
      }
LABEL_124:
      LODWORD(v76) = 0;
      goto LABEL_135;
    }
  }
LABEL_120:
  if (v71 >= 0x80)
  {
    int v75 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v71, a2);
    *(_DWORD *)(a1 + 320) = v71;
    int v73 = v75 + 1 + v70 + v71;
    int v74 = *(_DWORD *)(a1 + 336);
    if (v74 < 1) {
      goto LABEL_124;
    }
  }
  else
  {
    *(_DWORD *)(a1 + 320) = v71;
    int v73 = v70 + 2 + v71;
    int v74 = *(_DWORD *)(a1 + 336);
    if (v74 < 1) {
      goto LABEL_124;
    }
  }
LABEL_127:
  uint64_t v78 = 0;
  LODWORD(v76) = 0;
  do
  {
    while (1)
    {
      int v80 = *(_DWORD *)(*(void *)(a1 + 328) + 4 * v78);
      int v81 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v80) ^ (v80 >> 31));
      if (v81 < 0x80) {
        break;
      }
      int v79 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v81, a2);
      int v74 = *(_DWORD *)(a1 + 336);
      unint64_t v76 = (v79 + v76);
      if (++v78 >= v74) {
        goto LABEL_131;
      }
    }
    unint64_t v76 = (v76 + 1);
    ++v78;
  }
  while (v78 < v74);
LABEL_131:
  if ((int)v76 <= 0)
  {
LABEL_135:
    uint64_t v82 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v83 = *(void **)(a1 + 8);
    *(_DWORD *)(a1 + 344) = v76;
    uint64_t v84 = (v73 + v76);
    if (!v83) {
      goto LABEL_139;
    }
    goto LABEL_136;
  }
  if (v76 >= 0x80)
  {
    int v87 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v76, a2)+ 1+ v73;
    uint64_t v82 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v83 = *(void **)(a1 + 8);
    *(_DWORD *)(a1 + 344) = v76;
    uint64_t v84 = (v87 + v76);
    if (!v83) {
      goto LABEL_139;
    }
  }
  else
  {
    uint64_t v82 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v83 = *(void **)(a1 + 8);
    *(_DWORD *)(a1 + 344) = v76;
    uint64_t v84 = (v73 + 2 + v76);
    if (!v83) {
      goto LABEL_139;
    }
  }
LABEL_136:
  if (*v83 != v83[1])
  {
    uint64_t v85 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v82, a2)
        + v84;
    *(_DWORD *)(a1 + 348) = v85;
    return v85;
  }
LABEL_139:
  *(_DWORD *)(a1 + 348) = v84;
  return v84;
}

uint64_t sub_10012C7AC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100128824((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10012C88C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10012C8A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012C8B4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10012C940()
{
  return 1;
}

uint64_t sub_10012C948()
{
  uint64_t v0 = qword_10047DAA8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001204DC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047D9E0;
}

void sub_10012C9D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012C9EC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  uint64_t v4 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      while (1)
      {
        int v9 = *(const std::string **)(*(void *)(a2 + 16) + 8 * v5);
        int v10 = *(_DWORD *)(a1 + 28);
        uint64_t v11 = *(int *)(a1 + 24);
        if ((int)v11 >= v10) {
          break;
        }
        uint64_t v12 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v11 + 1;
        uint64_t v4 = std::string::operator=(*(std::string **)(v12 + 8 * v11), v9);
        if (++v5 >= *(int *)(a2 + 24)) {
          goto LABEL_11;
        }
      }
      if (v10 == *(_DWORD *)(a1 + 32))
      {
        uint64_t v4 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v10 + 1);
        int v10 = *(_DWORD *)(a1 + 28);
      }
      *(_DWORD *)(a1 + 28) = v10 + 1;
      int v6 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)v4);
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v8 = *(int *)(a1 + 24);
      *(_DWORD *)(a1 + 24) = v8 + 1;
      *(void *)(v7 + 8 * v8) = v6;
      uint64_t v4 = std::string::operator=(v6, v9);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
LABEL_11:
  LOBYTE(v13) = *(unsigned char *)(a2 + 64);
  if ((_BYTE)v13)
  {
    if (*(unsigned char *)(a2 + 64))
    {
      int v14 = *(_DWORD *)(a2 + 56);
      *(_DWORD *)(a1 + 64) |= 1u;
      *(_DWORD *)(a1 + 56) = v14;
      int v13 = *(_DWORD *)(a2 + 64);
    }
    if ((v13 & 4) != 0)
    {
      *(_DWORD *)(a1 + 64) |= 4u;
      uint64_t v15 = *(void *)(a1 + 40);
      if (!v15) {
        operator new();
      }
      uint64_t v16 = *(void *)(a2 + 40);
      if (!v16) {
        uint64_t v16 = *(void *)(qword_10047EAB0 + 40);
      }
      sub_1001253AC(v15, v16);
      int v13 = *(_DWORD *)(a2 + 64);
    }
    if ((v13 & 8) != 0)
    {
      *(_DWORD *)(a1 + 64) |= 8u;
      uint64_t v17 = *(void *)(a1 + 48);
      if (!v17) {
        operator new();
      }
      uint64_t v18 = *(void *)(a2 + 48);
      if (!v18) {
        uint64_t v18 = *(void *)(qword_10047EAB0 + 48);
      }
      sub_100128824(v17, v18);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10012CCCC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10012CCF4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10012CD1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10012CD30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10012CD44(uint64_t a1)
{
  *(void *)a1 = off_100457580;
  if (qword_10047EAB0 != a1)
  {
    uint64_t v2 = *(void *)(a1 + 40);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *(void *)(a1 + 48);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  if (*(int *)(a1 + 28) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete();
      ++v4;
    }
    while (v4 < *(int *)(a1 + 28));
  }
  if (*(void *)(a1 + 16)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10012CE54(uint64_t a1)
{
  sub_10012CD44(a1);

  operator delete();
}

uint64_t sub_10012CE8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 60) = a2;
  return result;
}

void sub_10012CE94()
{
}

void sub_10012CF04()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10012CF2C(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 64);
  if (v2)
  {
    *(_DWORD *)(this + 56) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(void *)(this + 40);
      if (this)
      {
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 16) = 0;
        *(_DWORD *)(this + 40) = 0;
        *(_DWORD *)(this + 64) = 0;
        *(_DWORD *)(this + 88) = 0;
        *(_DWORD *)(this + 112) = 0;
        *(_DWORD *)(this + 136) = 0;
        *(_DWORD *)(this + 152) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 64) & 8) != 0)
    {
      this = *(void *)(v1 + 48);
      if (this) {
        this = sub_1001295A4(this);
      }
    }
  }
  if (*(int *)(v1 + 24) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      while (1)
      {
        uint64_t v5 = *(void *)(*(void *)(v1 + 16) + 8 * v4);
        if (*(char *)(v5 + 23) < 0) {
          break;
        }
        *(unsigned char *)uint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
        if (++v4 >= *(int *)(v1 + 24)) {
          goto LABEL_14;
        }
      }
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      ++v4;
    }
    while (v4 < *(int *)(v1 + 24));
  }
LABEL_14:
  uint64_t v7 = *(void *)(v1 + 8);
  int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v6 + 4) = 0;
  *((_DWORD *)v6 + 14) = 0;
  if (v7)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
  }
  return this;
}

uint64_t sub_10012D028(uint64_t result, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5 = result;
  int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(result + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 16);
LABEL_2:
  while (2)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      int v9 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)result;
      *((_DWORD *)this + 8) = result;
      if (!result) {
        return 1;
      }
    }
    else
    {
      int v9 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v8;
      *((_DWORD *)this + 8) = v9;
      *((void *)this + 1) = v8 + 1;
      if (!v9) {
        return 1;
      }
    }
    switch(v9 >> 3)
    {
      case 1u:
        int v10 = v9 & 7;
        if ((v9 & 7) != 0) {
          goto LABEL_23;
        }
        unsigned int v40 = 0;
        uint64_t v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v40);
          if (!result) {
            return result;
          }
          unsigned int v12 = v40;
          if (v40 <= 2)
          {
LABEL_12:
            *(_DWORD *)(v5 + 64) |= 1u;
            *(_DWORD *)(v5 + 56) = v12;
            goto LABEL_29;
          }
        }
        else
        {
          unsigned int v12 = *v11;
          *((void *)this + 1) = v11 + 1;
          if (v12 <= 2) {
            goto LABEL_12;
          }
        }
        uint64_t result = wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, (int)v12);
LABEL_29:
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 18) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v17 + 1;
          int v13 = *(_DWORD *)(v5 + 28);
          int v14 = *(_DWORD *)(v5 + 24);
          if (v14 < v13)
          {
LABEL_16:
            *(_DWORD *)(v5 + 24) = v14 + 1;
            uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
            if (!result) {
              return result;
            }
          }
          else
          {
LABEL_35:
            if (v13 == *(_DWORD *)(v5 + 32))
            {
              uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v13 + 1);
              int v13 = *(_DWORD *)(v5 + 28);
            }
            *(_DWORD *)(v5 + 28) = v13 + 1;
            uint64_t v18 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)result);
            uint64_t v19 = *(void *)(v5 + 16);
            uint64_t v20 = *(int *)(v5 + 24);
            *(_DWORD *)(v5 + 24) = v20 + 1;
            *(void *)(v19 + 8 * v20) = v18;
            uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
            if (!result) {
              return result;
            }
          }
          uint64_t v17 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v17 >= *((void *)this + 2)) {
            goto LABEL_2;
          }
          int v21 = *v17;
        }
        while (v21 == 18);
        if (v21 != 26) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        *(_DWORD *)(v5 + 64) |= 4u;
        uint64_t v15 = *(void *)(v5 + 40);
        if (!v15) {
LABEL_42:
        }
          operator new();
LABEL_20:
        unsigned int v41 = 0;
        uint64_t v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v41))return 0; {
        }
          }
        else
        {
          unsigned int v41 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
        if (!sub_100125AA0(v15, this, v25, v26) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
        int v27 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v27, 1);
        int v29 = v27 - 1;
        if (v29 < 0 == v28) {
          *((_DWORD *)this + 14) = v29;
        }
        int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 34) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
LABEL_53:
        *(_DWORD *)(v5 + 64) |= 8u;
        uint64_t v31 = *(void *)(v5 + 48);
        if (!v31) {
          operator new();
        }
        unsigned int v42 = 0;
        int v32 = (char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42))return 0; {
        }
          }
        else
        {
          unsigned int v42 = *v32;
          *((void *)this + 1) = v32 + 1;
        }
        int v33 = *((_DWORD *)this + 14);
        int v34 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v42);
        if (!sub_1001296CC(v31, this, v36, v37) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
        int v38 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v38, 1);
        int v39 = v38 - 1;
        if (v39 < 0 == v28) {
          *((_DWORD *)this + 14) = v39;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 2u:
        int v10 = v9 & 7;
        if (v10 != 2) {
          goto LABEL_23;
        }
        int v13 = *(_DWORD *)(v5 + 28);
        int v14 = *(_DWORD *)(v5 + 24);
        if (v14 < v13) {
          goto LABEL_16;
        }
        goto LABEL_35;
      case 3u:
        int v10 = v9 & 7;
        if (v10 != 2) {
          goto LABEL_23;
        }
        *(_DWORD *)(v5 + 64) |= 4u;
        uint64_t v15 = *(void *)(v5 + 40);
        if (v15) {
          goto LABEL_20;
        }
        goto LABEL_42;
      case 4u:
        int v10 = v9 & 7;
        if (v10 != 2) {
          goto LABEL_23;
        }
        goto LABEL_53;
      default:
        int v10 = v9 & 7;
LABEL_23:
        if (v10 == 4) {
          return 1;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, v9, v6, a4);
        if ((result & 1) == 0) {
          return 0;
        }
        continue;
    }
    return result;
  }
}

void sub_10012D554()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10012D57C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10012D5B4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 64)) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 56), (int)a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      ++v6;
    }
    while (v6 < *(int *)(v5 + 24));
  }
  int v7 = *(_DWORD *)(v5 + 64);
  if ((v7 & 4) != 0)
  {
    uint64_t v11 = *(void *)(v5 + 40);
    if (v11)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v11, a2, a4);
      if ((*(_DWORD *)(v5 + 64) & 8) != 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(qword_10047EAB0 + 40), a2, a4);
      if ((*(_DWORD *)(v5 + 64) & 8) != 0) {
        goto LABEL_14;
      }
    }
LABEL_8:
    int v10 = *(void **)(v5 + 8);
    int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v8 = v10;
    if (!v10) {
      return result;
    }
    goto LABEL_18;
  }
  if ((v7 & 8) == 0) {
    goto LABEL_8;
  }
LABEL_14:
  uint64_t v12 = *(void *)(v5 + 48);
  if (v12)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v12, a2, a4);
    int v13 = *(void **)(v5 + 8);
    int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v8 = v13;
    if (!v13) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(qword_10047EAB0 + 48), a2, a4);
    int v14 = *(void **)(v5 + 8);
    int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v8 = v14;
    if (!v14) {
      return result;
    }
  }
LABEL_18:
  if (*v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10012D6F8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 64))
  {
    uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 14);
    *(unsigned char *)a2 = 8;
    int v7 = (char *)a2 + 1;
    if ((v6 & 0x80000000) != 0)
    {
      uint64_t v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v6, (unint64_t)v7, a3);
    }
    else
    {
      if (v6 <= 0x7F)
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v6;
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
        goto LABEL_8;
      }
      uint64_t v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, v7, a3);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)v8;
  }
LABEL_8:
  if (*((int *)this + 6) >= 1)
  {
    for (uint64_t i = 0; i < *((int *)this + 6); ++i)
    {
      uint64_t v14 = *(void *)(*((void *)this + 2) + 8 * i);
      *(unsigned char *)uint64_t v4 = 18;
      if (*(char *)(v14 + 23) < 0)
      {
        uint64_t v15 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v14 + 8);
        if (v15 <= 0x7F)
        {
LABEL_22:
          *((unsigned char *)v4 + 1) = (_BYTE)v15;
          int v10 = v4 + 2;
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v14 + 23);
        if (*(unsigned __int8 *)(v14 + 23) <= 0x7Fu) {
          goto LABEL_22;
        }
      }
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)v4 + 1, a3);
LABEL_11:
      int v11 = *(char *)(v14 + 23);
      if (v11 >= 0) {
        uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14;
      }
      else {
        uint64_t v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v14;
      }
      if (v11 >= 0) {
        int v13 = (const void *)*(unsigned __int8 *)(v14 + 23);
      }
      else {
        int v13 = (const void *)*(unsigned int *)(v14 + 8);
      }
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v12, v13, v10, a4);
    }
  }
  int v16 = *((_DWORD *)this + 16);
  if ((v16 & 4) != 0)
  {
    uint64_t v20 = (unsigned int *)*((void *)this + 5);
    if (v20)
    {
      *(unsigned char *)uint64_t v4 = 26;
      unsigned int v21 = v4 + 1;
      int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20[39];
      if (v22 <= 0x7F) {
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v20 = *(unsigned int **)(qword_10047EAB0 + 40);
      *(unsigned char *)uint64_t v4 = 26;
      unsigned int v21 = v4 + 1;
      int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20[39];
      if (v22 <= 0x7F)
      {
LABEL_29:
        *((unsigned char *)v4 + 1) = (_BYTE)v22;
        uint64_t v4 = sub_100126F88((wireless_diagnostics::google::protobuf::internal::WireFormat *)v20, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3);
        if ((*((_DWORD *)this + 16) & 8) != 0) {
          goto LABEL_33;
        }
LABEL_25:
        uint64_t v19 = (void *)*((void *)this + 1);
        uint64_t v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
        uint64_t v17 = v19;
        if (!v19) {
          return v4;
        }
        goto LABEL_39;
      }
    }
    int v23 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, v21, a3);
    uint64_t v4 = sub_100126F88((wireless_diagnostics::google::protobuf::internal::WireFormat *)v20, v23, v24);
    if ((*((_DWORD *)this + 16) & 8) != 0) {
      goto LABEL_33;
    }
    goto LABEL_25;
  }
  if ((v16 & 8) == 0) {
    goto LABEL_25;
  }
LABEL_33:
  uint64_t v25 = (unsigned int *)*((void *)this + 6);
  if (v25)
  {
    *(unsigned char *)uint64_t v4 = 34;
    unsigned int v26 = v4 + 1;
    int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25[87];
    if (v27 <= 0x7F) {
      goto LABEL_35;
    }
  }
  else
  {
    uint64_t v25 = *(unsigned int **)(qword_10047EAB0 + 48);
    *(unsigned char *)uint64_t v4 = 34;
    unsigned int v26 = v4 + 1;
    int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25[87];
    if (v27 <= 0x7F)
    {
LABEL_35:
      *((unsigned char *)v4 + 1) = (_BYTE)v27;
      uint64_t v4 = sub_10012B778((wireless_diagnostics::google::protobuf::internal::WireFormat *)v25, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3, a4);
      BOOL v28 = (void *)*((void *)this + 1);
      uint64_t v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      uint64_t v17 = v28;
      if (!v28) {
        return v4;
      }
      goto LABEL_39;
    }
  }
  int v29 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, v26, a3);
  uint64_t v4 = sub_10012B778((wireless_diagnostics::google::protobuf::internal::WireFormat *)v25, v29, v30, v31);
  int v32 = (void *)*((void *)this + 1);
  uint64_t v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v17 = v32;
  if (!v32) {
    return v4;
  }
LABEL_39:
  if (*v17 == v17[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v18, v4, a3);
}

uint64_t sub_10012D948(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 64);
  if (!(_BYTE)v3)
  {
    int v5 = *(_DWORD *)(a1 + 24);
    uint64_t v6 = v5;
    if (v5 < 1) {
      goto LABEL_39;
    }
    goto LABEL_29;
  }
  if ((*(unsigned char *)(a1 + 64) & 1) == 0)
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 64) & 4) == 0) {
      goto LABEL_20;
    }
LABEL_14:
    uint64_t v8 = *(void *)(a1 + 40);
    if (v8)
    {
      int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100127340(v8, a2);
      if (v9 < 0x80)
      {
LABEL_16:
        int v10 = 1;
LABEL_19:
        v4 += v9 + v10 + 1;
        int v3 = *(_DWORD *)(a1 + 64);
        goto LABEL_20;
      }
    }
    else
    {
      int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100127340(*(void *)(qword_10047EAB0 + 40), a2);
      if (v9 < 0x80) {
        goto LABEL_16;
      }
    }
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    goto LABEL_19;
  }
  int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if ((v7 & 0x80000000) != 0)
  {
    int v4 = 11;
    if ((v3 & 4) != 0) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v7 >= 0x80)
    {
      int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2) + 1;
      int v3 = *(_DWORD *)(a1 + 64);
      if ((v3 & 4) == 0) {
        goto LABEL_20;
      }
      goto LABEL_14;
    }
    int v4 = 2;
    if ((v3 & 4) != 0) {
      goto LABEL_14;
    }
  }
LABEL_20:
  if ((v3 & 8) != 0)
  {
    uint64_t v11 = *(void *)(a1 + 48);
    if (v11)
    {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10012BFE0(v11, a2);
      if (v12 < 0x80)
      {
LABEL_25:
        int v13 = 1;
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10012BFE0(*(void *)(qword_10047EAB0 + 48), a2);
      if (v12 < 0x80) {
        goto LABEL_25;
      }
    }
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
LABEL_28:
    int v5 = *(_DWORD *)(a1 + 24);
    uint64_t v6 = (v5 + v4 + v12 + v13 + 1);
    if (v5 < 1) {
      goto LABEL_39;
    }
    goto LABEL_29;
  }
  int v5 = *(_DWORD *)(a1 + 24);
  uint64_t v6 = (v5 + v4);
  if (v5 < 1) {
    goto LABEL_39;
  }
LABEL_29:
  for (uint64_t i = 0; i < v5; ++i)
  {
    uint64_t v19 = *(void *)(*(void *)(a1 + 16) + 8 * i);
    int v16 = *(unsigned __int8 *)(v19 + 23);
    char v18 = v16;
    uint64_t v17 = *(void *)(v19 + 8);
    if ((v16 & 0x80u) == 0) {
      unint64_t v20 = *(unsigned __int8 *)(v19 + 23);
    }
    else {
      unint64_t v20 = v17;
    }
    if (v20 >= 0x80)
    {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20, a2);
      int v16 = *(unsigned __int8 *)(v19 + 23);
      uint64_t v17 = *(void *)(v19 + 8);
      int v5 = *(_DWORD *)(a1 + 24);
      char v18 = *(unsigned char *)(v19 + 23);
    }
    else
    {
      int v15 = 1;
    }
    if (v18 < 0) {
      int v16 = v17;
    }
    uint64_t v6 = (v15 + v6 + v16);
  }
LABEL_39:
  unsigned int v21 = *(void **)(a1 + 8);
  if (v21 && *v21 != v21[1]) {
    uint64_t v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v6;
  }
  *(_DWORD *)(a1 + 60) = v6;
  return v6;
}

uint64_t sub_10012DB34(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10012C9EC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10012DC14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10012DC28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012DC3C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10012DCC8()
{
  return 1;
}

uint64_t sub_10012DCD0()
{
  uint64_t v0 = qword_10047DAA8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001204DC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DA00;
}

void sub_10012DD60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012DD74(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v44);
  }
  uint64_t v4 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      while (1)
      {
        int v9 = *(const std::string **)(*(void *)(a2 + 16) + 8 * v5);
        int v10 = *(_DWORD *)(a1 + 28);
        uint64_t v11 = *(int *)(a1 + 24);
        if ((int)v11 >= v10) {
          break;
        }
        uint64_t v12 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + 24) = v11 + 1;
        uint64_t v4 = std::string::operator=(*(std::string **)(v12 + 8 * v11), v9);
        if (++v5 >= *(int *)(a2 + 24)) {
          goto LABEL_11;
        }
      }
      if (v10 == *(_DWORD *)(a1 + 32))
      {
        uint64_t v4 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v10 + 1);
        int v10 = *(_DWORD *)(a1 + 28);
      }
      *(_DWORD *)(a1 + 28) = v10 + 1;
      uint64_t v6 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)v4);
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v8 = *(int *)(a1 + 24);
      *(_DWORD *)(a1 + 24) = v8 + 1;
      *(void *)(v7 + 8 * v8) = v6;
      uint64_t v4 = std::string::operator=(v6, v9);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
LABEL_11:
  int v13 = *(_DWORD *)(a2 + 48);
  if (v13)
  {
    int v14 = *(_DWORD *)(a1 + 48);
    int v15 = *(_DWORD *)(a1 + 52);
    int v16 = v14 + v13;
    if (v15 < v16)
    {
      int v17 = 2 * v15;
      if (2 * v15 <= v16) {
        int v17 = v16;
      }
      if (v17 <= 4) {
        int v17 = 4;
      }
      *(_DWORD *)(a1 + 52) = v17;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 40) + 8 * v14), *(const void **)(a2 + 40), 8 * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }
  int v18 = *(_DWORD *)(a2 + 72);
  if (v18)
  {
    int v19 = *(_DWORD *)(a1 + 72);
    int v20 = *(_DWORD *)(a1 + 76);
    int v21 = v19 + v18;
    if (v20 < v21)
    {
      int v22 = 2 * v20;
      if (2 * v20 <= v21) {
        int v22 = v21;
      }
      if (v22 <= 4) {
        int v22 = 4;
      }
      *(_DWORD *)(a1 + 76) = v22;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 64) + 8 * v19), *(const void **)(a2 + 64), 8 * *(int *)(a2 + 72));
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
  }
  int v23 = *(_DWORD *)(a2 + 96);
  if (v23)
  {
    int v24 = *(_DWORD *)(a1 + 96);
    int v25 = *(_DWORD *)(a1 + 100);
    int v26 = v24 + v23;
    if (v25 < v26)
    {
      int v27 = 2 * v25;
      if (2 * v25 <= v26) {
        int v27 = v26;
      }
      if (v27 <= 4) {
        int v27 = 4;
      }
      *(_DWORD *)(a1 + 100) = v27;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 88) + 8 * v24), *(const void **)(a2 + 88), 8 * *(int *)(a2 + 96));
    *(_DWORD *)(a1 + 96) += *(_DWORD *)(a2 + 96);
  }
  int v28 = *(_DWORD *)(a2 + 120);
  if (v28)
  {
    int v29 = *(_DWORD *)(a1 + 120);
    int v30 = *(_DWORD *)(a1 + 124);
    int v31 = v29 + v28;
    if (v30 < v31)
    {
      int v32 = 2 * v30;
      if (2 * v30 <= v31) {
        int v32 = v31;
      }
      if (v32 <= 4) {
        int v32 = 4;
      }
      *(_DWORD *)(a1 + 124) = v32;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 112) + 8 * v29), *(const void **)(a2 + 112), 8 * *(int *)(a2 + 120));
    *(_DWORD *)(a1 + 120) += *(_DWORD *)(a2 + 120);
  }
  int v33 = *(_DWORD *)(a2 + 144);
  if (v33)
  {
    int v34 = *(_DWORD *)(a1 + 144);
    int v35 = *(_DWORD *)(a1 + 148);
    int v36 = v34 + v33;
    if (v35 < v36)
    {
      int v37 = 2 * v35;
      if (2 * v35 <= v36) {
        int v37 = v36;
      }
      if (v37 <= 4) {
        int v37 = 4;
      }
      *(_DWORD *)(a1 + 148) = v37;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 136) + 8 * v34), *(const void **)(a2 + 136), 8 * *(int *)(a2 + 144));
    *(_DWORD *)(a1 + 144) += *(_DWORD *)(a2 + 144);
  }
  int v38 = *(_DWORD *)(a2 + 168);
  if (v38)
  {
    int v39 = *(_DWORD *)(a1 + 168);
    int v40 = *(_DWORD *)(a1 + 172);
    int v41 = v39 + v38;
    if (v40 < v41)
    {
      int v42 = 2 * v40;
      if (2 * v40 <= v41) {
        int v42 = v41;
      }
      if (v42 <= 4) {
        int v42 = 4;
      }
      *(_DWORD *)(a1 + 172) = v42;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 160) + 4 * v39), *(const void **)(a2 + 160), 4 * *(int *)(a2 + 168));
    *(_DWORD *)(a1 + 168) += *(_DWORD *)(a2 + 168);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10012E318(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10012E32C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10012E340(uint64_t a1)
{
  *(void *)a1 = off_100457630;
  if (*(void *)(a1 + 160)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 136)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 112)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 88)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 64)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 40)) {
    operator delete[]();
  }
  if (*(int *)(a1 + 28) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete();
      ++v2;
    }
    while (v2 < *(int *)(a1 + 28));
  }
  if (*(void *)(a1 + 16)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10012E490(uint64_t a1)
{
  sub_10012E340(a1);

  operator delete();
}

uint64_t sub_10012E4C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 180) = a2;
  return result;
}

void sub_10012E4D0()
{
}

void sub_10012E550()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10012E578(uint64_t a1)
{
  if (*(int *)(a1 + 24) >= 1)
  {
    uint64_t v1 = 0;
    do
    {
      while (1)
      {
        uint64_t v2 = *(void *)(*(void *)(a1 + 16) + 8 * v1);
        if (*(char *)(v2 + 23) < 0) {
          break;
        }
        *(unsigned char *)uint64_t v2 = 0;
        *(unsigned char *)(v2 + 23) = 0;
        if (++v1 >= *(int *)(a1 + 24)) {
          goto LABEL_6;
        }
      }
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      ++v1;
    }
    while (v1 < *(int *)(a1 + 24));
  }
LABEL_6:
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 10) = 0;
  *((_DWORD *)result + 16) = 0;
  *((_DWORD *)result + 22) = 0;
  *((_DWORD *)result + 28) = 0;
  *((_DWORD *)result + 34) = 0;
  *((_DWORD *)result + 40) = 0;
  *((_DWORD *)result + 44) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10012E600(uint64_t result, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5 = result;
  int v77 = (uint64_t *)(result + 136);
  uint64_t v78 = (uint64_t *)(result + 160);
  unint64_t v76 = (uint64_t *)(result + 112);
  uint64_t v6 = (uint64_t *)(result + 88);
  uint64_t v7 = (uint64_t *)(result + 64);
  uint64_t v8 = (uint64_t *)(result + 40);
  int v9 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 16);
  unsigned int v10 = result + 8;
LABEL_2:
  while (2)
  {
    uint64_t v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)result;
      *((_DWORD *)this + 8) = result;
      if (!result) {
        return 1;
      }
    }
    else
    {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v11;
      *((_DWORD *)this + 8) = v12;
      *((void *)this + 1) = v11 + 1;
      if (!v12) {
        return 1;
      }
    }
    switch(v12 >> 3)
    {
      case 1u:
        int v13 = v12 & 7;
        if (v13 != 2) {
          goto LABEL_39;
        }
        int v14 = *(_DWORD *)(v5 + 28);
        int v15 = *(_DWORD *)(v5 + 24);
        if (v15 < v14) {
          goto LABEL_10;
        }
        while (1)
        {
          if (v14 == *(_DWORD *)(v5 + 32))
          {
            uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9, v14 + 1);
            int v14 = *(_DWORD *)(v5 + 28);
          }
          *(_DWORD *)(v5 + 28) = v14 + 1;
          uint64_t v16 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)result);
          uint64_t v17 = *(void *)(v5 + 16);
          uint64_t v18 = *(int *)(v5 + 24);
          *(_DWORD *)(v5 + 24) = v18 + 1;
          *(void *)(v17 + 8 * v18) = v16;
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
          if (!result) {
            return result;
          }
          while (1)
          {
            int v20 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v19 = *((void *)this + 2);
            if ((unint64_t)v20 >= v19) {
              goto LABEL_2;
            }
            int v21 = *v20;
            if (v21 != 10)
            {
              if (v21 != 18) {
                goto LABEL_2;
              }
              int v23 = (char *)(v20 + 1);
              *((void *)this + 1) = v23;
              unsigned int v79 = 0;
              if ((unint64_t)v23 >= v19) {
                goto LABEL_59;
              }
              goto LABEL_57;
            }
            *((void *)this + 1) = v20 + 1;
            int v14 = *(_DWORD *)(v5 + 28);
            int v15 = *(_DWORD *)(v5 + 24);
            if (v15 >= v14) {
              break;
            }
LABEL_10:
            *(_DWORD *)(v5 + 24) = v15 + 1;
            uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
            if (!result) {
              return result;
            }
          }
        }
      case 2u:
        int v13 = v12 & 7;
        if (v13 != 1)
        {
          if (v13 != 2) {
            goto LABEL_39;
          }
          int v23 = (char *)*((void *)this + 1);
          unint64_t v22 = *((void *)this + 2);
          unsigned int v79 = 0;
          if ((unint64_t)v23 < v22)
          {
LABEL_57:
            if ((*v23 & 0x80000000) == 0)
            {
              unsigned int v34 = *v23;
              unsigned int v79 = v34;
              *((void *)this + 1) = v23 + 1;
              goto LABEL_61;
            }
          }
LABEL_59:
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v79))return 0; {
          unsigned int v34 = v79;
          }
LABEL_61:
          int v35 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v34);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
          {
            *(void *)int v80 = 0;
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v80))return 0; {
            int v38 = *(_DWORD *)(v5 + 48);
            }
            if (v38 == *(_DWORD *)(v5 + 52))
            {
              if (2 * v38 <= v38 + 1) {
                int v39 = v38 + 1;
              }
              else {
                int v39 = 2 * v38;
              }
              if (v39 <= 4) {
                int v39 = 4;
              }
              *(_DWORD *)(v5 + 52) = v39;
              operator new[]();
            }
            uint64_t v36 = *(void *)(v5 + 40);
            uint64_t v37 = *(void *)v80;
            *(_DWORD *)(v5 + 48) = v38 + 1;
            *(void *)(v36 + 8 * v38) = v37;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v35);
LABEL_73:
          int v40 = (unsigned char *)*((void *)this + 1);
          unint64_t v25 = *((void *)this + 2);
          if ((unint64_t)v40 < v25 && *v40 == 26)
          {
            int v24 = v40 + 1;
            *((void *)this + 1) = v24;
            goto LABEL_76;
          }
          continue;
        }
        uint64_t result = sub_100123BB0(1, 0x12u, this, v8);
        if (result) {
          goto LABEL_73;
        }
        return result;
      case 3u:
        int v13 = v12 & 7;
        if (v13 == 1)
        {
          uint64_t result = sub_10012F0E0(1, 0x1Au, this, v7);
          if (!result) {
            return result;
          }
        }
        else
        {
          if (v13 != 2) {
            goto LABEL_39;
          }
          int v24 = (char *)*((void *)this + 1);
          unint64_t v25 = *((void *)this + 2);
LABEL_76:
          unsigned int v79 = 0;
          if ((unint64_t)v24 >= v25 || *v24 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v79))return 0; {
            unsigned int v41 = v79;
            }
          }
          else
          {
            unsigned int v41 = *v24;
            unsigned int v79 = v41;
            *((void *)this + 1) = v24 + 1;
          }
          int v42 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v41);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
          {
            *(void *)int v80 = 0;
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v80))return 0; {
            uint64_t v44 = *(void *)v80;
            }
            int v45 = *(_DWORD *)(v5 + 72);
            if (v45 == *(_DWORD *)(v5 + 76))
            {
              if (2 * v45 <= v45 + 1) {
                int v46 = v45 + 1;
              }
              else {
                int v46 = 2 * v45;
              }
              if (v46 <= 4) {
                int v46 = 4;
              }
              *(_DWORD *)(v5 + 76) = v46;
              operator new[]();
            }
            uint64_t v43 = *(void *)(v5 + 64);
            *(_DWORD *)(v5 + 72) = v45 + 1;
            *(void *)(v43 + 8 * v45) = v44;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v42);
        }
        uint64_t v47 = (unsigned char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        if ((unint64_t)v47 >= v27 || *v47 != 34) {
          continue;
        }
        int v26 = v47 + 1;
        *((void *)this + 1) = v26;
        goto LABEL_96;
      case 4u:
        int v13 = v12 & 7;
        if (v13 == 1)
        {
          uint64_t result = sub_10012F0E0(1, 0x22u, this, v6);
          if (!result) {
            return result;
          }
        }
        else
        {
          if (v13 != 2) {
            goto LABEL_39;
          }
          int v26 = (char *)*((void *)this + 1);
          unint64_t v27 = *((void *)this + 2);
LABEL_96:
          unsigned int v79 = 0;
          if ((unint64_t)v26 >= v27 || *v26 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v79))return 0; {
            unsigned int v48 = v79;
            }
          }
          else
          {
            unsigned int v48 = *v26;
            unsigned int v79 = v48;
            *((void *)this + 1) = v26 + 1;
          }
          int v49 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v48);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
          {
            *(void *)int v80 = 0;
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v80))return 0; {
            uint64_t v51 = *(void *)v80;
            }
            int v52 = *(_DWORD *)(v5 + 96);
            if (v52 == *(_DWORD *)(v5 + 100))
            {
              if (2 * v52 <= v52 + 1) {
                int v53 = v52 + 1;
              }
              else {
                int v53 = 2 * v52;
              }
              if (v53 <= 4) {
                int v53 = 4;
              }
              *(_DWORD *)(v5 + 100) = v53;
              operator new[]();
            }
            uint64_t v50 = *(void *)(v5 + 88);
            *(_DWORD *)(v5 + 96) = v52 + 1;
            *(void *)(v50 + 8 * v52) = v51;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v49);
        }
        unint64_t v54 = (unsigned char *)*((void *)this + 1);
        unint64_t v29 = *((void *)this + 2);
        if ((unint64_t)v54 >= v29 || *v54 != 42) {
          continue;
        }
        int v28 = v54 + 1;
        *((void *)this + 1) = v28;
        goto LABEL_116;
      case 5u:
        int v13 = v12 & 7;
        if (v13 == 1)
        {
          uint64_t result = sub_10012F0E0(1, 0x2Au, this, v76);
          if (!result) {
            return result;
          }
        }
        else
        {
          if (v13 != 2) {
            goto LABEL_39;
          }
          int v28 = (char *)*((void *)this + 1);
          unint64_t v29 = *((void *)this + 2);
LABEL_116:
          unsigned int v79 = 0;
          if ((unint64_t)v28 >= v29 || *v28 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v79))return 0; {
            unsigned int v55 = v79;
            }
          }
          else
          {
            unsigned int v55 = *v28;
            unsigned int v79 = v55;
            *((void *)this + 1) = v28 + 1;
          }
          int v56 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v55);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
          {
            *(void *)int v80 = 0;
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v80))return 0; {
            uint64_t v58 = *(void *)v80;
            }
            int v59 = *(_DWORD *)(v5 + 120);
            if (v59 == *(_DWORD *)(v5 + 124))
            {
              if (2 * v59 <= v59 + 1) {
                int v60 = v59 + 1;
              }
              else {
                int v60 = 2 * v59;
              }
              if (v60 <= 4) {
                int v60 = 4;
              }
              *(_DWORD *)(v5 + 124) = v60;
              operator new[]();
            }
            uint64_t v57 = *(void *)(v5 + 112);
            *(_DWORD *)(v5 + 120) = v59 + 1;
            *(void *)(v57 + 8 * v59) = v58;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v56);
        }
        int v61 = (unsigned char *)*((void *)this + 1);
        unint64_t v31 = *((void *)this + 2);
        if ((unint64_t)v61 >= v31 || *v61 != 50) {
          continue;
        }
        int v30 = v61 + 1;
        *((void *)this + 1) = v30;
        goto LABEL_136;
      case 6u:
        int v13 = v12 & 7;
        if (v13 == 1)
        {
          uint64_t result = sub_10012F0E0(1, 0x32u, this, v77);
          if (!result) {
            return result;
          }
        }
        else
        {
          if (v13 != 2) {
            goto LABEL_39;
          }
          int v30 = (char *)*((void *)this + 1);
          unint64_t v31 = *((void *)this + 2);
LABEL_136:
          unsigned int v79 = 0;
          if ((unint64_t)v30 >= v31 || *v30 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v79))return 0; {
            unsigned int v62 = v79;
            }
          }
          else
          {
            unsigned int v62 = *v30;
            unsigned int v79 = v62;
            *((void *)this + 1) = v30 + 1;
          }
          int v63 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v62);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
          {
            *(void *)int v80 = 0;
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v80))return 0; {
            uint64_t v65 = *(void *)v80;
            }
            int v66 = *(_DWORD *)(v5 + 144);
            if (v66 == *(_DWORD *)(v5 + 148))
            {
              if (2 * v66 <= v66 + 1) {
                int v67 = v66 + 1;
              }
              else {
                int v67 = 2 * v66;
              }
              if (v67 <= 4) {
                int v67 = 4;
              }
              *(_DWORD *)(v5 + 148) = v67;
              operator new[]();
            }
            uint64_t v64 = *(void *)(v5 + 136);
            *(_DWORD *)(v5 + 144) = v66 + 1;
            *(void *)(v64 + 8 * v66) = v65;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v63);
        }
        int v68 = (unsigned char *)*((void *)this + 1);
        unint64_t v33 = *((void *)this + 2);
        if ((unint64_t)v68 >= v33 || *v68 != 58) {
          continue;
        }
        int v32 = v68 + 1;
        *((void *)this + 1) = v32;
        goto LABEL_156;
      case 7u:
        int v13 = v12 & 7;
        if ((v12 & 7) == 0)
        {
          uint64_t result = sub_1001265A0(1, 0x3Au, this, v78);
          if (!result) {
            return result;
          }
          if (*((void *)this + 1) != *((void *)this + 2)) {
            continue;
          }
LABEL_176:
          if (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        if (v13 == 2)
        {
          int v32 = (char *)*((void *)this + 1);
          unint64_t v33 = *((void *)this + 2);
LABEL_156:
          v80[0] = 0;
          if ((unint64_t)v32 >= v33 || *v32 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v80))return 0; {
            int v69 = v80[0];
            }
          }
          else
          {
            int v69 = *v32;
            v80[0] = v69;
            *((void *)this + 1) = v32 + 1;
          }
          int v70 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v69);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
          {
            unsigned int v79 = 0;
            int v73 = (char *)*((void *)this + 1);
            if ((unint64_t)v73 >= *((void *)this + 2) || *v73 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v79))return 0; {
            }
              }
            else
            {
              unsigned int v79 = *v73;
              *((void *)this + 1) = v73 + 1;
            }
            int v74 = *(_DWORD *)(v5 + 168);
            if (v74 == *(_DWORD *)(v5 + 172))
            {
              if (2 * v74 <= v74 + 1) {
                int v75 = v74 + 1;
              }
              else {
                int v75 = 2 * v74;
              }
              if (v75 <= 4) {
                int v75 = 4;
              }
              *(_DWORD *)(v5 + 172) = v75;
              operator new[]();
            }
            uint64_t v71 = *(void *)(v5 + 160);
            unsigned int v72 = v79;
            *(_DWORD *)(v5 + 168) = v74 + 1;
            *(_DWORD *)(v71 + 4 * v74) = v72;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v70);
          if (*((void *)this + 1) == *((void *)this + 2)) {
            goto LABEL_176;
          }
        }
        else
        {
LABEL_39:
          if (v13 == 4) {
            return 1;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, v12, v10, a4);
          if ((result & 1) == 0) {
            return 0;
          }
        }
        continue;
      default:
        int v13 = v12 & 7;
        goto LABEL_39;
    }
  }
}

uint64_t sub_10012F0E0(int a1, unsigned int a2, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t *a4)
{
  unint64_t v29 = 0;
  uint64_t v8 = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v29);
  if (v8)
  {
    unint64_t v9 = v29;
    int v10 = *((_DWORD *)a4 + 2);
    if (v10 == *((_DWORD *)a4 + 3))
    {
      if (2 * v10 <= v10 + 1) {
        int v11 = v10 + 1;
      }
      else {
        int v11 = 2 * v10;
      }
      if (v11 <= 4) {
        int v11 = 4;
      }
      *((_DWORD *)a4 + 3) = v11;
      operator new[]();
    }
    uint64_t v12 = *a4;
    int v13 = v10 + 1;
    *((_DWORD *)a4 + 2) = v10 + 1;
    *(void *)(v12 + 8 * v10) = v9;
    int v14 = (unsigned __int8 *)*((void *)this + 1);
    int v15 = *((_DWORD *)this + 4) - v14;
    if (v15 >= 1)
    {
      int v16 = a1 + 8;
      int v17 = *((_DWORD *)a4 + 3) - v13;
      int v18 = v15 / (a1 + 8);
      int v19 = v18 >= v17 ? *((_DWORD *)a4 + 3) - v13 : v15 / (a1 + 8);
      if (v19 >= 1)
      {
        if (a2 > 0x7F)
        {
          if (a2 >> 14) {
            return v8;
          }
          uint64_t v20 = 0;
          int v25 = v10 + 2;
          uint64_t v26 = v12 + 8 * v13;
          if (v18 < (uint64_t)v17) {
            int v17 = v18;
          }
          while ((a2 & 0x7F | 0x80) == *v14 && v14[1] == (a2 >> 7))
          {
            uint64_t v27 = *(void *)(v14 + 2);
            *((_DWORD *)a4 + 2) = v25 + v20;
            *(void *)(v26 + 8 * v20++) = v27;
            v14 += 10;
            if (v17 == v20) {
              goto LABEL_29;
            }
          }
        }
        else
        {
          uint64_t v20 = 0;
          int v21 = v10 + 2;
          uint64_t v22 = v12 + 8 * v13;
          int v23 = v18;
          if (v18 >= (uint64_t)v17) {
            int v23 = *((_DWORD *)a4 + 3) - v13;
          }
          while (*v14 == a2)
          {
            uint64_t v24 = *(void *)(v14 + 1);
            *((_DWORD *)a4 + 2) = v21 + v20;
            *(void *)(v22 + 8 * v20++) = v24;
            v14 += 9;
            if (v23 == v20) {
              goto LABEL_29;
            }
          }
        }
        int v19 = v20;
LABEL_29:
        if (v19 * v16 >= 1) {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, v19 * v16);
        }
      }
    }
  }
  return v8;
}

uint64_t sub_10012F304(uint64_t result, wireless_diagnostics::google::protobuf::io::CodedOutputStream *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      ++v5;
    }
    while (v5 < *(int *)(v4 + 24));
  }
  if (*(int *)(v4 + 48) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x12u);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v4 + 56));
    if (*(int *)(v4 + 48) >= 1)
    {
      uint64_t v6 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian64(this, *(void *)(*(void *)(v4 + 40) + 8 * v6++));
      while (v6 < *(int *)(v4 + 48));
    }
  }
  if (*(int *)(v4 + 72) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x1Au);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v4 + 80));
    if (*(int *)(v4 + 72) >= 1)
    {
      uint64_t v7 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian64(this, *(void *)(*(void *)(v4 + 64) + 8 * v7++));
      while (v7 < *(int *)(v4 + 72));
    }
  }
  if (*(int *)(v4 + 96) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x22u);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v4 + 104));
    if (*(int *)(v4 + 96) >= 1)
    {
      uint64_t v8 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian64(this, *(void *)(*(void *)(v4 + 88) + 8 * v8++));
      while (v8 < *(int *)(v4 + 96));
    }
  }
  if (*(int *)(v4 + 120) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x2Au);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v4 + 128));
    if (*(int *)(v4 + 120) >= 1)
    {
      uint64_t v9 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian64(this, *(void *)(*(void *)(v4 + 112) + 8 * v9++));
      while (v9 < *(int *)(v4 + 120));
    }
  }
  if (*(int *)(v4 + 144) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x32u);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v4 + 152));
    if (*(int *)(v4 + 144) >= 1)
    {
      uint64_t v10 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian64(this, *(void *)(*(void *)(v4 + 136) + 8 * v10++));
      while (v10 < *(int *)(v4 + 144));
    }
  }
  if (*(int *)(v4 + 168) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, 0x3Au);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(v4 + 176));
    if (*(int *)(v4 + 168) >= 1)
    {
      uint64_t v11 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(this, *(_DWORD *)(*(void *)(v4 + 160) + 4 * v11++));
      while (v11 < *(int *)(v4 + 168));
    }
  }
  int v14 = *(void **)(v4 + 8);
  int v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  uint64_t v12 = v14;
  if (v14 && *v12 != v12[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v13, this, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10012F598(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  if (*((int *)this + 6) >= 1)
  {
    for (uint64_t i = 0; i < *((int *)this + 6); ++i)
    {
      uint64_t v11 = *(void *)(*((void *)this + 2) + 8 * i);
      *(unsigned char *)a2 = 10;
      if (*(char *)(v11 + 23) < 0)
      {
        uint64_t v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v11 + 8);
        if (v12 <= 0x7F)
        {
LABEL_15:
          *((unsigned char *)a2 + 1) = (_BYTE)v12;
          int v7 = a2 + 2;
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v11 + 23);
        if (*(unsigned __int8 *)(v11 + 23) <= 0x7Fu) {
          goto LABEL_15;
        }
      }
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)a2 + 1, a3);
LABEL_4:
      int v8 = *(char *)(v11 + 23);
      if (v8 >= 0) {
        uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11;
      }
      else {
        uint64_t v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v11;
      }
      if (v8 >= 0) {
        uint64_t v10 = (const void *)*(unsigned __int8 *)(v11 + 23);
      }
      else {
        uint64_t v10 = (const void *)*(unsigned int *)(v11 + 8);
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v9, v10, v7, a4);
    }
  }
  if (*((int *)this + 12) > 0)
  {
    *(unsigned char *)a2 = 18;
    int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if (v13 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)a2 + 1, a3);
      if (*((int *)this + 12) < 1) {
        goto LABEL_23;
      }
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v13;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      if (*((int *)this + 12) < 1) {
        goto LABEL_23;
      }
    }
    uint64_t v14 = 0;
    do
    {
      *(void *)a2 = *(void *)(*((void *)this + 5) + 8 * v14);
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 8);
      ++v14;
    }
    while (v14 < *((int *)this + 12));
  }
LABEL_23:
  if (*((int *)this + 18) <= 0) {
    goto LABEL_30;
  }
  *(unsigned char *)a2 = 26;
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
  if (v15 > 0x7F)
  {
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, (int)a2 + 1, a3);
    if (*((int *)this + 18) < 1) {
      goto LABEL_30;
    }
  }
  else
  {
    *((unsigned char *)a2 + 1) = (_BYTE)v15;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    if (*((int *)this + 18) < 1) {
      goto LABEL_30;
    }
  }
  uint64_t v16 = 0;
  do
  {
    *(void *)a2 = *(void *)(*((void *)this + 8) + 8 * v16);
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 8);
    ++v16;
  }
  while (v16 < *((int *)this + 18));
LABEL_30:
  if (*((int *)this + 24) <= 0) {
    goto LABEL_37;
  }
  *(unsigned char *)a2 = 34;
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 26);
  if (v17 > 0x7F)
  {
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)a2 + 1, a3);
    if (*((int *)this + 24) < 1) {
      goto LABEL_37;
    }
  }
  else
  {
    *((unsigned char *)a2 + 1) = (_BYTE)v17;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    if (*((int *)this + 24) < 1) {
      goto LABEL_37;
    }
  }
  uint64_t v18 = 0;
  do
  {
    *(void *)a2 = *(void *)(*((void *)this + 11) + 8 * v18);
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 8);
    ++v18;
  }
  while (v18 < *((int *)this + 24));
LABEL_37:
  if (*((int *)this + 30) <= 0) {
    goto LABEL_44;
  }
  *(unsigned char *)a2 = 42;
  int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 32);
  if (v19 > 0x7F)
  {
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)a2 + 1, a3);
    if (*((int *)this + 30) < 1) {
      goto LABEL_44;
    }
  }
  else
  {
    *((unsigned char *)a2 + 1) = (_BYTE)v19;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    if (*((int *)this + 30) < 1) {
      goto LABEL_44;
    }
  }
  uint64_t v20 = 0;
  do
  {
    *(void *)a2 = *(void *)(*((void *)this + 14) + 8 * v20);
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 8);
    ++v20;
  }
  while (v20 < *((int *)this + 30));
LABEL_44:
  if (*((int *)this + 36) <= 0) {
    goto LABEL_51;
  }
  *(unsigned char *)a2 = 50;
  int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 38);
  if (v21 > 0x7F)
  {
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (int)a2 + 1, a3);
    if (*((int *)this + 36) < 1) {
      goto LABEL_51;
    }
  }
  else
  {
    *((unsigned char *)a2 + 1) = (_BYTE)v21;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    if (*((int *)this + 36) < 1) {
      goto LABEL_51;
    }
  }
  uint64_t v22 = 0;
  do
  {
    *(void *)a2 = *(void *)(*((void *)this + 17) + 8 * v22);
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 8);
    ++v22;
  }
  while (v22 < *((int *)this + 36));
LABEL_51:
  if (*((int *)this + 42) > 0)
  {
    *(unsigned char *)a2 = 58;
    int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 44);
    if (v23 > 0x7F)
    {
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, (int)a2 + 1, a3);
      if (*((int *)this + 42) < 1) {
        goto LABEL_60;
      }
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v23;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      if (*((int *)this + 42) < 1) {
        goto LABEL_60;
      }
    }
    uint64_t v24 = 0;
    do
    {
      while (1)
      {
        int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 20)
                                                                                               + 4 * v24);
        if (v25 <= 0x7F) {
          break;
        }
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, a2, a3);
        if (++v24 >= *((int *)this + 42)) {
          goto LABEL_60;
        }
      }
      *(unsigned char *)a2 = (_BYTE)v25;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 1);
      ++v24;
    }
    while (v24 < *((int *)this + 42));
  }
LABEL_60:
  int v28 = (void *)*((void *)this + 1);
  uint64_t v27 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v26 = v28;
  if (!v28 || *v26 == v26[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v27, a2, a3);
}

uint64_t sub_10012F960(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 24);
  if (v3 < 1)
  {
    int v5 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    uint64_t v4 = 0;
    int v5 = *(_DWORD *)(a1 + 24);
    do
    {
      uint64_t v10 = *(void *)(*(void *)(a1 + 16) + 8 * v4);
      int v7 = *(unsigned __int8 *)(v10 + 23);
      char v9 = v7;
      uint64_t v8 = *(void *)(v10 + 8);
      if ((v7 & 0x80u) == 0) {
        unint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      }
      else {
        unint64_t v11 = v8;
      }
      if (v11 >= 0x80)
      {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
        int v7 = *(unsigned __int8 *)(v10 + 23);
        uint64_t v8 = *(void *)(v10 + 8);
        int v3 = *(_DWORD *)(a1 + 24);
        char v9 = *(unsigned char *)(v10 + 23);
      }
      else
      {
        int v6 = 1;
      }
      if (v9 < 0) {
        int v7 = v8;
      }
      v5 += v6 + v7;
      ++v4;
    }
    while (v4 < v3);
  }
  int v12 = *(_DWORD *)(a1 + 48);
  unsigned int v13 = 8 * v12;
  if (v12 > 0)
  {
    if (v13 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v12), a2);
    }
    else {
      int v14 = 1;
    }
    v5 += v14 + 1;
  }
  *(_DWORD *)(a1 + 56) = v13;
  int v15 = v5 + v13;
  int v16 = *(_DWORD *)(a1 + 72);
  unsigned int v17 = 8 * v16;
  if (v16 >= 1)
  {
    if (v17 >= 0x80) {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v16), a2)+ 1;
    }
    else {
      int v18 = 2;
    }
    v15 += v18;
  }
  *(_DWORD *)(a1 + 80) = v17;
  int v19 = v15 + v17;
  int v20 = *(_DWORD *)(a1 + 96);
  unsigned int v21 = 8 * v20;
  if (v20 >= 1)
  {
    if (v21 >= 0x80) {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v20), a2)+ 1;
    }
    else {
      int v22 = 2;
    }
    v19 += v22;
  }
  *(_DWORD *)(a1 + 104) = v21;
  int v23 = v19 + v21;
  int v24 = *(_DWORD *)(a1 + 120);
  unsigned int v25 = 8 * v24;
  if (v24 >= 1)
  {
    if (v25 >= 0x80) {
      int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v24), a2)+ 1;
    }
    else {
      int v26 = 2;
    }
    v23 += v26;
  }
  *(_DWORD *)(a1 + 128) = v25;
  int v27 = v23 + v25;
  int v28 = *(_DWORD *)(a1 + 144);
  unsigned int v29 = 8 * v28;
  if (v28 >= 1)
  {
    if (v29 >= 0x80) {
      int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v28), a2)+ 1;
    }
    else {
      int v30 = 2;
    }
    v27 += v30;
  }
  *(_DWORD *)(a1 + 152) = v29;
  int v31 = v27 + v29;
  int v32 = *(_DWORD *)(a1 + 168);
  if (v32 < 1)
  {
    LODWORD(v34) = 0;
  }
  else
  {
    uint64_t v33 = 0;
    LODWORD(v34) = 0;
    do
    {
      while (1)
      {
        uint64_t v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 160)
                                                                                               + 4 * v33);
        if (v36 < 0x80) {
          break;
        }
        int v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36, a2);
        int v32 = *(_DWORD *)(a1 + 168);
        unint64_t v34 = (v35 + v34);
        if (++v33 >= v32) {
          goto LABEL_43;
        }
      }
      unint64_t v34 = (v34 + 1);
      ++v33;
    }
    while (v33 < v32);
LABEL_43:
    if ((int)v34 > 0)
    {
      if (v34 >= 0x80) {
        int v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34, a2)+ 1;
      }
      else {
        int v37 = 2;
      }
      int v42 = v37 + v31;
      int v38 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v39 = *(void **)(a1 + 8);
      *(_DWORD *)(a1 + 176) = v34;
      uint64_t v40 = (v42 + v34);
      if (!v39) {
        goto LABEL_48;
      }
      goto LABEL_51;
    }
  }
  int v38 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v39 = *(void **)(a1 + 8);
  *(_DWORD *)(a1 + 176) = v34;
  uint64_t v40 = (v31 + v34);
  if (!v39)
  {
LABEL_48:
    *(_DWORD *)(a1 + 180) = v40;
    return v40;
  }
LABEL_51:
  if (*v39 == v39[1]) {
    goto LABEL_48;
  }
  uint64_t v43 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v38, a2)
      + v40;
  *(_DWORD *)(a1 + 180) = v43;
  return v43;
}

uint64_t sub_10012FBF8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10012DD74((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10012FCD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10012FCEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012FD00(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10012FD8C()
{
  return 1;
}

uint64_t sub_10012FD94()
{
  uint64_t v0 = qword_10047DAA8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001204DC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DA18;
}

void sub_10012FE24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10012FE38(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
    LOBYTE(v4) = *(unsigned char *)(a2 + 72);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 72);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    int v5 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 72) |= 1u;
    int v6 = *(std::string **)(a1 + 16);
    if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v6, v5);
    int v4 = *(_DWORD *)(a2 + 72);
    if ((v4 & 2) == 0)
    {
LABEL_7:
      if ((v4 & 4) == 0) {
        goto LABEL_8;
      }
      goto LABEL_19;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_7;
  }
  int v7 = *(const std::string **)(a2 + 24);
  *(_DWORD *)(a1 + 72) |= 2u;
  uint64_t v8 = *(std::string **)(a1 + 24);
  if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v8, v7);
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 4) == 0)
  {
LABEL_8:
    if ((v4 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v9 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 72) |= 4u;
  *(_DWORD *)(a1 + 64) = v9;
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 8) == 0)
  {
LABEL_9:
    if ((v4 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v10 = *(const std::string **)(a2 + 32);
  *(_DWORD *)(a1 + 72) |= 8u;
  unint64_t v11 = *(std::string **)(a1 + 32);
  if (v11 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v11, v10);
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x10) == 0)
  {
LABEL_10:
    if ((v4 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_23:
  int v12 = *(const std::string **)(a2 + 40);
  *(_DWORD *)(a1 + 72) |= 0x10u;
  unsigned int v13 = *(std::string **)(a1 + 40);
  if (v13 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v13, v12);
  int v4 = *(_DWORD *)(a2 + 72);
  if ((v4 & 0x20) == 0)
  {
LABEL_11:
    if ((v4 & 0x40) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_30;
  }
LABEL_26:
  int v14 = *(const std::string **)(a2 + 48);
  *(_DWORD *)(a1 + 72) |= 0x20u;
  int v15 = *(std::string **)(a1 + 48);
  if (v15 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v15, v14);
  if ((*(_DWORD *)(a2 + 72) & 0x40) != 0)
  {
LABEL_30:
    *(_DWORD *)(a1 + 72) |= 0x40u;
    int v16 = *(_DWORD **)(a1 + 56);
    if (!v16) {
      operator new();
    }
    uint64_t v17 = *(void *)(a2 + 56);
    if (!v17) {
      uint64_t v17 = *(void *)(qword_10047EAC0 + 56);
    }
    sub_10012220C(v16, v17);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100130148()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100130170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100130184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100130198(void *result)
{
  uint64_t v1 = result[2];
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  uint64_t v3 = result[3];
  if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  uint64_t v5 = result[4];
  if ((_UNKNOWN *)v5 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    operator delete();
  }
  uint64_t v7 = result[5];
  if ((_UNKNOWN *)v7 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v7 != 0)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    operator delete();
  }
  uint64_t v9 = result[6];
  if ((_UNKNOWN *)v9 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v9)
  {
    if (*(char *)(v9 + 23) < 0) {
      operator delete(*(void **)v9);
    }
    operator delete();
  }
  if ((void *)qword_10047EAC0 != result)
  {
    uint64_t result = (void *)result[7];
    if (result)
    {
      uint64_t v10 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v10();
    }
  }
  return result;
}

void sub_100130378(void *a1)
{
  *a1 = off_1004576E0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100130198(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001303D8(void *a1)
{
  *a1 = off_1004576E0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100130198(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10013044C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 68) = a2;
  return result;
}

void sub_100130454()
{
}

void sub_1001304D4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001304FC(uint64_t this)
{
  uint64_t v1 = this;
  if (!*(unsigned char *)(this + 72)) {
    goto LABEL_43;
  }
  if ((*(unsigned char *)(this + 72) & 1) == 0
    || (uint64_t v2 = *(void *)(this + 16), (_UNKNOWN *)v2 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
  {
LABEL_6:
    if ((*(unsigned char *)(this + 72) & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_6;
  }
  **(unsigned char **)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((*(unsigned char *)(this + 72) & 2) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  uint64_t v3 = *(void *)(this + 24);
  if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_13:
  *(_DWORD *)(this + 64) = 1;
  if ((*(unsigned char *)(this + 72) & 8) == 0
    || (uint64_t v4 = *(void *)(this + 32), (_UNKNOWN *)v4 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
  {
LABEL_17:
    if ((*(unsigned char *)(this + 72) & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_18;
  }
  if ((*(char *)(v4 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v4 = 0;
    *(unsigned char *)(v4 + 23) = 0;
    goto LABEL_17;
  }
  **(unsigned char **)uint64_t v4 = 0;
  *(void *)(v4 + 8) = 0;
  if ((*(unsigned char *)(this + 72) & 0x10) == 0) {
    goto LABEL_24;
  }
LABEL_18:
  uint64_t v5 = *(void *)(this + 40);
  if ((_UNKNOWN *)v5 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)uint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
LABEL_24:
  if ((*(unsigned char *)(this + 72) & 0x20) != 0)
  {
    uint64_t v6 = *(void *)(this + 48);
    if ((_UNKNOWN *)v6 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)uint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((*(unsigned char *)(this + 72) & 0x40) == 0) {
          goto LABEL_43;
        }
        goto LABEL_29;
      }
      *(unsigned char *)uint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
  if ((*(unsigned char *)(this + 72) & 0x40) == 0) {
    goto LABEL_43;
  }
LABEL_29:
  this = *(void *)(this + 56);
  if (this)
  {
    if (*(int *)(this + 24) >= 1)
    {
      uint64_t v7 = 0;
      do
      {
        while (1)
        {
          uint64_t v8 = *(void *)(*(void *)(this + 16) + 8 * v7);
          if (*(char *)(v8 + 23) < 0) {
            break;
          }
          *(unsigned char *)uint64_t v8 = 0;
          *(unsigned char *)(v8 + 23) = 0;
          if (++v7 >= *(int *)(this + 24)) {
            goto LABEL_35;
          }
        }
        **(unsigned char **)uint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
        ++v7;
      }
      while (v7 < *(int *)(this + 24));
    }
LABEL_35:
    *(_DWORD *)(this + 24) = 0;
    if (*(int *)(this + 48) >= 1)
    {
      uint64_t v9 = 0;
      do
      {
        while (1)
        {
          uint64_t v10 = *(void *)(*(void *)(this + 40) + 8 * v9);
          if (*(char *)(v10 + 23) < 0) {
            break;
          }
          *(unsigned char *)uint64_t v10 = 0;
          *(unsigned char *)(v10 + 23) = 0;
          if (++v9 >= *(int *)(this + 48)) {
            goto LABEL_40;
          }
        }
        **(unsigned char **)uint64_t v10 = 0;
        *(void *)(v10 + 8) = 0;
        ++v9;
      }
      while (v9 < *(int *)(this + 48));
    }
LABEL_40:
    uint64_t v11 = *(void *)(this + 8);
    this += 8;
    *(_DWORD *)(this + 40) = 0;
    *(_DWORD *)(this + 60) = 0;
    if (v11) {
      this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
    }
  }
LABEL_43:
  uint64_t v13 = *(void *)(v1 + 8);
  int v12 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v12 + 16) = 0;
  if (v13)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v12);
  }
  return this;
}

uint64_t sub_100130750(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 72) |= 1u;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 18) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_17:
        *(_DWORD *)(a1 + 72) |= 2u;
        if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        uint64_t v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 != 24) {
          continue;
        }
        int v14 = v13 + 1;
        *((void *)this + 1) = v14;
LABEL_25:
        unsigned int v30 = 0;
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v30);
          if (!result) {
            return result;
          }
          signed int v15 = v30;
          if (v30 - 1 <= 0xB)
          {
LABEL_28:
            *(_DWORD *)(a1 + 72) |= 4u;
            *(_DWORD *)(a1 + 64) = v15;
            goto LABEL_48;
          }
        }
        else
        {
          signed int v15 = *v14;
          *((void *)this + 1) = v14 + 1;
          if ((v15 - 1) <= 0xB) {
            goto LABEL_28;
          }
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 3, v15);
LABEL_48:
        int v16 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 != 34) {
          continue;
        }
        *((void *)this + 1) = v16 + 1;
        *(_DWORD *)(a1 + 72) |= 8u;
        if (*(_UNKNOWN **)(a1 + 32) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_51:
        }
          operator new();
LABEL_31:
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 42) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        *(_DWORD *)(a1 + 72) |= 0x10u;
        if (*(_UNKNOWN **)(a1 + 40) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_55:
        }
          operator new();
LABEL_35:
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v18 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 != 50) {
          continue;
        }
        *((void *)this + 1) = v18 + 1;
        *(_DWORD *)(a1 + 72) |= 0x20u;
        if (*(_UNKNOWN **)(a1 + 48) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_59:
        }
          operator new();
LABEL_39:
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 58) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_63:
        *(_DWORD *)(a1 + 72) |= 0x40u;
        uint64_t v20 = *(void *)(a1 + 56);
        if (!v20) {
          operator new();
        }
        unsigned int v31 = 0;
        unsigned int v21 = (char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v31))return 0; {
        }
          }
        else
        {
          unsigned int v31 = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        int v22 = *((_DWORD *)this + 14);
        int v23 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        int v24 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v31);
        if (!sub_1001226E8(v20, this, v25, v26) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v24);
        int v27 = *((_DWORD *)this + 14);
        BOOL v28 = __OFSUB__(v27, 1);
        int v29 = v27 - 1;
        if (v29 < 0 == v28) {
          *((_DWORD *)this + 14) = v29;
        }
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 == 2) {
          goto LABEL_17;
        }
        goto LABEL_42;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_25;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 72) |= 8u;
        if (*(_UNKNOWN **)(a1 + 32) != &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          goto LABEL_31;
        }
        goto LABEL_51;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 72) |= 0x10u;
        if (*(_UNKNOWN **)(a1 + 40) != &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          goto LABEL_35;
        }
        goto LABEL_55;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 72) |= 0x20u;
        if (*(_UNKNOWN **)(a1 + 48) != &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          goto LABEL_39;
        }
        goto LABEL_59;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_42;
        }
        goto LABEL_63;
      default:
        int v9 = TagFallback & 7;
LABEL_42:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_100130D10()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100130D54(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 72);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 64), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  if ((*(_DWORD *)(v5 + 72) & 0x40) == 0)
  {
LABEL_8:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_20;
  }
LABEL_16:
  uint64_t v10 = *(void *)(v5 + 56);
  if (v10)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, a2, a4);
    uint64_t v11 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v11;
    if (!v11) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(qword_10047EAC0 + 56), a2, a4);
    unint64_t v12 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v12;
    if (!v12) {
      return result;
    }
  }
LABEL_20:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100130EA4(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 18);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
    goto LABEL_22;
  }
  uint64_t v11 = *((void *)this + 2);
  *(unsigned char *)a2 = 10;
  unsigned int v12 = a2 + 1;
  if (*(char *)(v11 + 23) < 0)
  {
    uint64_t v13 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v11 + 8);
    if (v13 <= 0x7F) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v11 + 23);
    if (*(unsigned __int8 *)(v11 + 23) <= 0x7Fu)
    {
LABEL_12:
      *((unsigned char *)v4 + 1) = (_BYTE)v13;
      int v14 = v4 + 2;
      goto LABEL_15;
    }
  }
  int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v12, a3);
LABEL_15:
  int v15 = *(char *)(v11 + 23);
  if (v15 >= 0) {
    int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11;
  }
  else {
    int v16 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v11;
  }
  if (v15 >= 0) {
    uint64_t v17 = (const void *)*(unsigned __int8 *)(v11 + 23);
  }
  else {
    uint64_t v17 = (const void *)*(unsigned int *)(v11 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v16, v17, v14, a4);
  int v6 = *((_DWORD *)this + 18);
  if ((v6 & 2) == 0)
  {
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
LABEL_34:
    int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 16);
    *(unsigned char *)uint64_t v4 = 24;
    unint64_t v25 = (unint64_t)v4 + 1;
    if ((v24 & 0x80000000) != 0)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v24, v25, a3);
      int v7 = *((_DWORD *)this + 18);
      if ((v7 & 8) != 0) {
        goto LABEL_41;
      }
    }
    else if (v24 > 0x7F)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v24, v25, a3);
      int v7 = *((_DWORD *)this + 18);
      if ((v7 & 8) != 0) {
        goto LABEL_41;
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v24;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      int v7 = *((_DWORD *)this + 18);
      if ((v7 & 8) != 0) {
        goto LABEL_41;
      }
    }
LABEL_5:
    if ((v7 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_53;
  }
LABEL_22:
  uint64_t v18 = *((void *)this + 3);
  *(unsigned char *)uint64_t v4 = 18;
  if (*(char *)(v18 + 23) < 0)
  {
    int v19 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v18 + 8);
    if (v19 <= 0x7F) {
      goto LABEL_24;
    }
  }
  else
  {
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v18 + 23);
    if (*(unsigned __int8 *)(v18 + 23) <= 0x7Fu)
    {
LABEL_24:
      *((unsigned char *)v4 + 1) = (_BYTE)v19;
      int v20 = v4 + 2;
      goto LABEL_27;
    }
  }
  int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)v4 + 1, a3);
LABEL_27:
  int v21 = *(char *)(v18 + 23);
  if (v21 >= 0) {
    int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18;
  }
  else {
    int v22 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v18;
  }
  if (v21 >= 0) {
    int v23 = (const void *)*(unsigned __int8 *)(v18 + 23);
  }
  else {
    int v23 = (const void *)*(unsigned int *)(v18 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v22, v23, v20, a4);
  if ((*((_DWORD *)this + 18) & 4) != 0) {
    goto LABEL_34;
  }
LABEL_4:
  int v7 = *((_DWORD *)this + 18);
  if ((v7 & 8) == 0) {
    goto LABEL_5;
  }
LABEL_41:
  uint64_t v26 = *((void *)this + 4);
  *(unsigned char *)uint64_t v4 = 34;
  if (*(char *)(v26 + 23) < 0)
  {
    int v27 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v26 + 8);
    if (v27 <= 0x7F) {
      goto LABEL_43;
    }
  }
  else
  {
    int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v26 + 23);
    if (*(unsigned __int8 *)(v26 + 23) <= 0x7Fu)
    {
LABEL_43:
      *((unsigned char *)v4 + 1) = (_BYTE)v27;
      int v28 = v4 + 2;
      goto LABEL_46;
    }
  }
  int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, (int)v4 + 1, a3);
LABEL_46:
  int v29 = *(char *)(v26 + 23);
  if (v29 >= 0) {
    unsigned int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26;
  }
  else {
    unsigned int v30 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v26;
  }
  if (v29 >= 0) {
    unsigned int v31 = (const void *)*(unsigned __int8 *)(v26 + 23);
  }
  else {
    unsigned int v31 = (const void *)*(unsigned int *)(v26 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v30, v31, v28, a4);
  int v7 = *((_DWORD *)this + 18);
  if ((v7 & 0x10) == 0)
  {
LABEL_6:
    if ((v7 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_65;
  }
LABEL_53:
  uint64_t v32 = *((void *)this + 5);
  *(unsigned char *)uint64_t v4 = 42;
  if (*(char *)(v32 + 23) < 0)
  {
    uint64_t v33 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v32 + 8);
    if (v33 <= 0x7F) {
      goto LABEL_55;
    }
  }
  else
  {
    uint64_t v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v32 + 23);
    if (*(unsigned __int8 *)(v32 + 23) <= 0x7Fu)
    {
LABEL_55:
      *((unsigned char *)v4 + 1) = (_BYTE)v33;
      int v34 = v4 + 2;
      goto LABEL_58;
    }
  }
  int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v33, (int)v4 + 1, a3);
LABEL_58:
  int v35 = *(char *)(v32 + 23);
  if (v35 >= 0) {
    uint64_t v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v32;
  }
  else {
    uint64_t v36 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v32;
  }
  if (v35 >= 0) {
    int v37 = (const void *)*(unsigned __int8 *)(v32 + 23);
  }
  else {
    int v37 = (const void *)*(unsigned int *)(v32 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v36, v37, v34, a4);
  int v7 = *((_DWORD *)this + 18);
  if ((v7 & 0x20) == 0)
  {
LABEL_7:
    if ((v7 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_77;
  }
LABEL_65:
  uint64_t v38 = *((void *)this + 6);
  *(unsigned char *)uint64_t v4 = 50;
  if (*(char *)(v38 + 23) < 0)
  {
    int v39 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v38 + 8);
    if (v39 <= 0x7F) {
      goto LABEL_67;
    }
  }
  else
  {
    int v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v38 + 23);
    if (*(unsigned __int8 *)(v38 + 23) <= 0x7Fu)
    {
LABEL_67:
      *((unsigned char *)v4 + 1) = (_BYTE)v39;
      int v40 = v4 + 2;
      goto LABEL_70;
    }
  }
  int v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v39, (int)v4 + 1, a3);
LABEL_70:
  int v41 = *(char *)(v38 + 23);
  if (v41 >= 0) {
    int v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v38;
  }
  else {
    int v42 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v38;
  }
  if (v41 >= 0) {
    uint64_t v43 = (const void *)*(unsigned __int8 *)(v38 + 23);
  }
  else {
    uint64_t v43 = (const void *)*(unsigned int *)(v38 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v42, v43, v40, a4);
  if ((*((_DWORD *)this + 18) & 0x40) == 0)
  {
LABEL_8:
    uint64_t v10 = (void *)*((void *)this + 1);
    int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v8 = v10;
    if (!v10) {
      return v4;
    }
    goto LABEL_83;
  }
LABEL_77:
  uint64_t v44 = (unsigned int *)*((void *)this + 7);
  if (v44)
  {
    *(unsigned char *)uint64_t v4 = 58;
    unsigned int v45 = v4 + 1;
    int v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v44[16];
    if (v46 <= 0x7F) {
      goto LABEL_79;
    }
  }
  else
  {
    uint64_t v44 = *(unsigned int **)(qword_10047EAC0 + 56);
    *(unsigned char *)uint64_t v4 = 58;
    unsigned int v45 = v4 + 1;
    int v46 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v44[16];
    if (v46 <= 0x7F)
    {
LABEL_79:
      *((unsigned char *)v4 + 1) = (_BYTE)v46;
      uint64_t v4 = sub_100122A44((wireless_diagnostics::google::protobuf::internal::WireFormat *)v44, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3, a4);
      uint64_t v47 = (void *)*((void *)this + 1);
      int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      uint64_t v8 = v47;
      if (!v47) {
        return v4;
      }
      goto LABEL_83;
    }
  }
  unsigned int v48 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v46, v45, a3);
  uint64_t v4 = sub_100122A44((wireless_diagnostics::google::protobuf::internal::WireFormat *)v44, v48, v49, v50);
  uint64_t v51 = (void *)*((void *)this + 1);
  int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v8 = v51;
  if (!v51) {
    return v4;
  }
LABEL_83:
  if (*v8 == v8[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, v4, a3);
}

uint64_t sub_100131230(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 72);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v6 = *(void **)(a1 + 8);
    if (!v6) {
      goto LABEL_31;
    }
    goto LABEL_72;
  }
  if ((*(unsigned char *)(a1 + 72) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 72) & 2) == 0) {
      goto LABEL_25;
    }
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  int v8 = *(unsigned __int8 *)(v7 + 23);
  char v9 = v8;
  uint64_t v10 = *(void *)(v7 + 8);
  if ((v8 & 0x80u) == 0) {
    unint64_t v11 = *(unsigned __int8 *)(v7 + 23);
  }
  else {
    unint64_t v11 = v10;
  }
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v10 = *(void *)(v7 + 8);
    int v3 = *(_DWORD *)(a1 + 72);
    char v9 = *(unsigned char *)(v7 + 23);
  }
  else
  {
    int v12 = 1;
  }
  if (v9 < 0) {
    int v8 = v10;
  }
  uint64_t v4 = (v12 + v8 + 1);
  if ((v3 & 2) != 0)
  {
LABEL_16:
    uint64_t v13 = *(void *)(a1 + 24);
    int v14 = *(unsigned __int8 *)(v13 + 23);
    char v15 = v14;
    uint64_t v16 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      unint64_t v17 = *(unsigned __int8 *)(v13 + 23);
    }
    else {
      unint64_t v17 = v16;
    }
    if (v17 >= 0x80)
    {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17, a2);
      int v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v16 = *(void *)(v13 + 8);
      int v3 = *(_DWORD *)(a1 + 72);
      char v15 = *(unsigned char *)(v13 + 23);
    }
    else
    {
      int v18 = 1;
    }
    if (v15 < 0) {
      int v14 = v16;
    }
    uint64_t v4 = (v4 + v18 + v14 + 1);
  }
LABEL_25:
  if ((v3 & 4) != 0)
  {
    int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
    if ((v20 & 0x80000000) != 0)
    {
      uint64_t v4 = (v4 + 11);
      if ((v3 & 8) != 0) {
        goto LABEL_39;
      }
    }
    else if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
      int v3 = *(_DWORD *)(a1 + 72);
      uint64_t v4 = (v21 + 1 + v4);
      if ((v3 & 8) != 0) {
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      if ((v3 & 8) != 0) {
        goto LABEL_39;
      }
    }
LABEL_27:
    if ((v3 & 0x10) == 0) {
      goto LABEL_28;
    }
    goto LABEL_48;
  }
  if ((v3 & 8) == 0) {
    goto LABEL_27;
  }
LABEL_39:
  uint64_t v22 = *(void *)(a1 + 32);
  int v23 = *(unsigned __int8 *)(v22 + 23);
  char v24 = v23;
  uint64_t v25 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    unint64_t v26 = *(unsigned __int8 *)(v22 + 23);
  }
  else {
    unint64_t v26 = v25;
  }
  if (v26 >= 0x80)
  {
    int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26, a2);
    int v23 = *(unsigned __int8 *)(v22 + 23);
    uint64_t v25 = *(void *)(v22 + 8);
    int v3 = *(_DWORD *)(a1 + 72);
    char v24 = *(unsigned char *)(v22 + 23);
  }
  else
  {
    int v27 = 1;
  }
  if (v24 < 0) {
    int v23 = v25;
  }
  uint64_t v4 = (v4 + v27 + v23 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_28:
    if ((v3 & 0x20) == 0) {
      goto LABEL_29;
    }
    goto LABEL_57;
  }
LABEL_48:
  uint64_t v28 = *(void *)(a1 + 40);
  int v29 = *(unsigned __int8 *)(v28 + 23);
  char v30 = v29;
  uint64_t v31 = *(void *)(v28 + 8);
  if ((v29 & 0x80u) == 0) {
    unint64_t v32 = *(unsigned __int8 *)(v28 + 23);
  }
  else {
    unint64_t v32 = v31;
  }
  if (v32 >= 0x80)
  {
    int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v32, a2);
    int v29 = *(unsigned __int8 *)(v28 + 23);
    uint64_t v31 = *(void *)(v28 + 8);
    int v3 = *(_DWORD *)(a1 + 72);
    char v30 = *(unsigned char *)(v28 + 23);
  }
  else
  {
    int v33 = 1;
  }
  if (v30 < 0) {
    int v29 = v31;
  }
  uint64_t v4 = (v4 + v33 + v29 + 1);
  if ((v3 & 0x20) == 0)
  {
LABEL_29:
    if ((v3 & 0x40) == 0) {
      goto LABEL_30;
    }
LABEL_66:
    uint64_t v40 = *(void *)(a1 + 56);
    if (v40)
    {
      int v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100122BD8(v40, a2);
      if (v41 < 0x80)
      {
LABEL_68:
        int v42 = 1;
        goto LABEL_71;
      }
    }
    else
    {
      int v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100122BD8(*(void *)(qword_10047EAC0 + 56), a2);
      if (v41 < 0x80) {
        goto LABEL_68;
      }
    }
    int v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41, a2);
LABEL_71:
    uint64_t v4 = (v4 + v41 + v42 + 1);
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v6 = *(void **)(a1 + 8);
    if (!v6) {
      goto LABEL_31;
    }
    goto LABEL_72;
  }
LABEL_57:
  uint64_t v34 = *(void *)(a1 + 48);
  int v35 = *(unsigned __int8 *)(v34 + 23);
  char v36 = v35;
  uint64_t v37 = *(void *)(v34 + 8);
  if ((v35 & 0x80u) == 0) {
    unint64_t v38 = *(unsigned __int8 *)(v34 + 23);
  }
  else {
    unint64_t v38 = v37;
  }
  if (v38 >= 0x80)
  {
    int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v38, a2);
    int v35 = *(unsigned __int8 *)(v34 + 23);
    uint64_t v37 = *(void *)(v34 + 8);
    int v3 = *(_DWORD *)(a1 + 72);
    char v36 = *(unsigned char *)(v34 + 23);
  }
  else
  {
    int v39 = 1;
  }
  if (v36 < 0) {
    int v35 = v37;
  }
  uint64_t v4 = (v4 + v39 + v35 + 1);
  if ((v3 & 0x40) != 0) {
    goto LABEL_66;
  }
LABEL_30:
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v6 = *(void **)(a1 + 8);
  if (!v6)
  {
LABEL_31:
    *(_DWORD *)(a1 + 68) = v4;
    return v4;
  }
LABEL_72:
  if (*v6 == v6[1]) {
    goto LABEL_31;
  }
  uint64_t v43 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
      + v4;
  *(_DWORD *)(a1 + 68) = v43;
  return v43;
}

uint64_t sub_100131528(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10012FE38((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100131608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013161C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100131630(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001316BC()
{
  return 1;
}

uint64_t sub_1001316C4()
{
  uint64_t v0 = qword_10047DAA8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001204DC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DA28;
}

void sub_100131754(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100131768(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 60);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 60))
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 60) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_13;
    }
  }
  else if ((*(unsigned char *)(a2 + 60) & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 60) |= 2u;
  *(void *)(a1 + 24) = v8;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_14:
    uint64_t v10 = *(const std::string **)(a2 + 40);
    *(_DWORD *)(a1 + 60) |= 8u;
    unint64_t v11 = *(std::string **)(a1 + 40);
    if (v11 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v11, v10);
    if ((*(_DWORD *)(a2 + 60) & 0x10) != 0) {
      goto LABEL_9;
    }
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
LABEL_13:
  uint64_t v9 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 60) |= 4u;
  *(void *)(a1 + 32) = v9;
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_8:
  if ((v4 & 0x10) != 0)
  {
LABEL_9:
    uint64_t v5 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 60) |= 0x10u;
    *(void *)(a1 + 48) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001318E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001318F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100131908(void *a1)
{
  *a1 = off_100457790;
  uint64_t v2 = a1[5];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001319A0(void *a1)
{
  *a1 = off_100457790;
  uint64_t v2 = a1[5];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100131A4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 56) = a2;
  return result;
}

void sub_100131A54()
{
}

void sub_100131AC4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100131AEC(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 60);
  if (v1)
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    if ((v1 & 8) != 0)
    {
      uint64_t v2 = *(void *)(a1 + 40);
      if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(a1 + 48) = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 13) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100131B4C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (unint64_t *)(a1 + 48);
  unsigned int v7 = a1 + 8;
  while (2)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_38;
        }
        unint64_t v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v17;
        *(_DWORD *)(a1 + 60) |= 1u;
        unint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 17) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_15:
        unint64_t v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v17;
        *(_DWORD *)(a1 + 60) |= 2u;
        int v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 25) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_20:
        unint64_t v17 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v17))
        {
          *(void *)(a1 + 32) = v17;
          int v13 = *(_DWORD *)(a1 + 60) | 4;
          *(_DWORD *)(a1 + 60) = v13;
          int v14 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v14 < *((void *)this + 2) && *v14 == 34)
          {
            *((void *)this + 1) = v14 + 1;
            *(_DWORD *)(a1 + 60) = v13 | 8;
            if (*(_UNKNOWN **)(a1 + 40) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_27:
            }
              operator new();
LABEL_28:
            uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
            if (!result) {
              return result;
            }
            uint64_t v16 = (unsigned char *)*((void *)this + 1);
            if ((unint64_t)v16 < *((void *)this + 2) && *v16 == 41)
            {
              *((void *)this + 1) = v16 + 1;
LABEL_33:
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v6);
              if (!result) {
                return result;
              }
              *(_DWORD *)(a1 + 60) |= 0x10u;
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
        return 0;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 == 1) {
          goto LABEL_15;
        }
        goto LABEL_38;
      case 3u:
        int v10 = TagFallback & 7;
        if (v10 == 1) {
          goto LABEL_20;
        }
        goto LABEL_38;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 60) |= 8u;
        if (*(_UNKNOWN **)(a1 + 40) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          goto LABEL_27;
        }
        goto LABEL_28;
      case 5u:
        int v10 = TagFallback & 7;
        if (v10 == 1) {
          goto LABEL_33;
        }
        goto LABEL_38;
      default:
        int v10 = TagFallback & 7;
LABEL_38:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100131E68(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 60);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  if ((*(_DWORD *)(v5 + 60) & 0x10) == 0)
  {
LABEL_6:
    uint64_t v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    unsigned int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFixed64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(v5 + 48), (unint64_t)a2, a4);
  int v10 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_13:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_100131F58(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v5 = *((_DWORD *)this + 15);
  if (v5)
  {
    uint64_t v9 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v9;
    a2 += 9;
    int v5 = *((_DWORD *)this + 15);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v10 = *((void *)this + 3);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v10;
  a2 += 9;
  int v5 = *((_DWORD *)this + 15);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t v11 = *((void *)this + 4);
  *(unsigned char *)a2 = 25;
  *(void *)(a2 + 1) = v11;
  a2 += 9;
  int v5 = *((_DWORD *)this + 15);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_11:
  uint64_t v12 = *((void *)this + 5);
  *(unsigned char *)a2 = 34;
  if (*(char *)(v12 + 23) < 0)
  {
    int v13 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v12 + 8);
    if (v13 <= 0x7F) {
      goto LABEL_13;
    }
  }
  else
  {
    int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v12 + 23);
    if (*(unsigned __int8 *)(v12 + 23) <= 0x7Fu)
    {
LABEL_13:
      *(unsigned char *)(a2 + 1) = (_BYTE)v13;
      int v14 = a2 + 2;
      goto LABEL_16;
    }
  }
  int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)a2 + 1, a3);
LABEL_16:
  int v15 = *(char *)(v12 + 23);
  if (v15 >= 0) {
    uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12;
  }
  else {
    uint64_t v16 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v12;
  }
  if (v15 >= 0) {
    unint64_t v17 = (const void *)*(unsigned __int8 *)(v12 + 23);
  }
  else {
    unint64_t v17 = (const void *)*(unsigned int *)(v12 + 8);
  }
  a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v16, v17, v14, a4);
  if ((*((_DWORD *)this + 15) & 0x10) == 0)
  {
LABEL_6:
    uint64_t v8 = (void *)*((void *)this + 1);
    unsigned int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v6 = v8;
    if (!v8) {
      return a2;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v18 = *((void *)this + 6);
  *(unsigned char *)a2 = 41;
  *(void *)(a2 + 1) = v18;
  a2 += 9;
  int v19 = (void *)*((void *)this + 1);
  unsigned int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v6 = v19;
  if (!v19) {
    return a2;
  }
LABEL_24:
  if (*v6 == v6[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v7, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100132190(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 60);
  if (*(unsigned char *)(a1 + 60))
  {
    int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      LODWORD(v5) = v4 + 9;
    }
    else {
      LODWORD(v5) = v4;
    }
    if ((v3 & 8) != 0)
    {
      uint64_t v6 = *(void *)(a1 + 40);
      int v7 = *(unsigned __int8 *)(v6 + 23);
      char v8 = v7;
      uint64_t v9 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        unint64_t v10 = *(unsigned __int8 *)(v6 + 23);
      }
      else {
        unint64_t v10 = v9;
      }
      if (v10 >= 0x80)
      {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10, a2);
        int v7 = *(unsigned __int8 *)(v6 + 23);
        uint64_t v9 = *(void *)(v6 + 8);
        int v3 = *(_DWORD *)(a1 + 60);
        char v8 = *(unsigned char *)(v6 + 23);
      }
      else
      {
        int v11 = 1;
      }
      if (v8 < 0) {
        int v7 = v9;
      }
      LODWORD(v5) = v5 + v11 + v7 + 1;
    }
    if ((v3 & 0x10) != 0) {
      uint64_t v5 = (v5 + 9);
    }
    else {
      uint64_t v5 = v5;
    }
    uint64_t v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v13 = *(void **)(a1 + 8);
    if (!v13) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v13 = *(void **)(a1 + 8);
    if (!v13)
    {
LABEL_14:
      *(_DWORD *)(a1 + 56) = v5;
      return v5;
    }
  }
  if (*v13 == v13[1]) {
    goto LABEL_14;
  }
  uint64_t v15 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v12, a2)
      + v5;
  *(_DWORD *)(a1 + 56) = v15;
  return v15;
}

uint64_t sub_100132298(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100131768((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100132378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013238C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001323A0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10013242C()
{
  return 1;
}

uint64_t sub_100132434()
{
  uint64_t v0 = qword_10047DAA8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001204DC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DA40;
}

void sub_1001324C4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001324D8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  sub_10013974C((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), a2 + 16);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100132560(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100132574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100132588(uint64_t a1)
{
  *(void *)a1 = off_100457840;
  int v2 = *(_DWORD *)(a1 + 28);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *(_DWORD *)(a1 + 28);
      }
    }
  }
  if (*(void *)(a1 + 16)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100132654(uint64_t a1)
{
  *(void *)a1 = off_100457840;
  int v2 = *(_DWORD *)(a1 + 28);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *(_DWORD *)(a1 + 28);
      }
    }
  }
  if (*(void *)(a1 + 16)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100132734(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_10013273C()
{
}

void sub_1001327A4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1001327CC(uint64_t this)
{
  uint64_t v1 = this;
  if (*(int *)(this + 24) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t v3 = *(void *)(*(void *)(v1 + 16) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 24));
  }
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + 4) = 0;
  *((_DWORD *)v4 + 9) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_100132868(int *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 4);
  unsigned int v7 = a1 + 8;
  while (1)
  {
LABEL_2:
    char v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (TagFallback == 10) {
        goto LABEL_12;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (TagFallback == 10)
      {
        while (1)
        {
LABEL_12:
          int v10 = a1[7];
          uint64_t v11 = a1[6];
          if ((int)v11 >= v10)
          {
            if (v10 == a1[8])
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v10 + 1);
              int v10 = a1[7];
            }
            a1[7] = v10 + 1;
            operator new();
          }
          uint64_t v12 = *((void *)a1 + 2);
          a1[6] = v11 + 1;
          uint64_t v13 = *(void *)(v12 + 8 * v11);
          unsigned int v26 = 0;
          int v14 = (char *)*((void *)this + 1);
          if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26))return 0; {
          }
            }
          else
          {
            unsigned int v26 = *v14;
            *((void *)this + 1) = v14 + 1;
          }
          int v15 = *((_DWORD *)this + 14);
          int v16 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v15 + 1;
          if (v15 >= v16) {
            return 0;
          }
          int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
          if (!sub_100131B4C(v13, this, v18, v19) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v17);
          int v20 = *((_DWORD *)this + 14);
          BOOL v21 = __OFSUB__(v20, 1);
          int v22 = v20 - 1;
          if (v22 < 0 == v21) {
            *((_DWORD *)this + 14) = v22;
          }
          int v23 = (unsigned char *)*((void *)this + 1);
          char v24 = (unsigned char *)*((void *)this + 2);
          if (v23 >= v24 || *v23 != 10)
          {
            if (v23 == v24 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
            goto LABEL_2;
          }
          *((void *)this + 1) = v23 + 1;
        }
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_100132ABC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100132AE4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  uint64_t v9 = *(void **)(v5 + 8);
  char v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100132B80(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      char v8 = *(unsigned int **)(*((void *)this + 2) + 8 * v6);
      *(unsigned char *)a2 = 10;
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8[14];
      if (v9 > 0x7F)
      {
        unsigned int v7 = (char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)a2 + 1, a3);
      }
      else
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v9;
        unsigned int v7 = (char *)a2 + 2;
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100131F58((wireless_diagnostics::google::protobuf::internal::WireFormat *)v8, (uint64_t)v7, a3, a4);
      ++v6;
    }
    while (v6 < *((int *)this + 6));
  }
  uint64_t v12 = (void *)*((void *)this + 1);
  uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v10 = v12;
  if (!v12 || *v10 == v10[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v11, a2, a3);
}

uint64_t sub_100132C50(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3 = *(unsigned int *)(a1 + 24);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100132190(*(void *)(*(void *)(a1 + 16) + 8 * v4), a2);
      int v7 = (int)v6;
      if (v6 >= 0x80) {
        int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
      }
      else {
        int v5 = 1;
      }
      uint64_t v3 = (v7 + v3 + v5);
      ++v4;
    }
    while (v4 < *(int *)(a1 + 24));
  }
  char v8 = *(void **)(a1 + 8);
  if (v8 && *v8 != v8[1]) {
    uint64_t v3 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v3;
  }
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_100132CF4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001324D8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100132DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100132DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100132DFC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100132E88()
{
  return 1;
}

uint64_t sub_100132E90()
{
  uint64_t v0 = qword_10047DAA8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001204DC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DA50;
}

void sub_100132F20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100132F34(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v29);
    int v4 = *(_DWORD *)(a2 + 116);
    if (!(_BYTE)v4) {
      goto LABEL_42;
    }
  }
  else
  {
    int v4 = *(_DWORD *)(a2 + 116);
    if (!(_BYTE)v4) {
      goto LABEL_42;
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 116) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047EAD8 + 16);
    }
    sub_10012FE38(v5, v6);
    int v4 = *(_DWORD *)(a2 + 116);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 116) |= 2u;
    *(void *)(a1 + 24) = v7;
    int v4 = *(_DWORD *)(a2 + 116);
  }
  if ((v4 & 4) != 0)
  {
    *(_DWORD *)(a1 + 116) |= 4u;
    uint64_t v8 = *(void *)(a1 + 32);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = *(void *)(a2 + 32);
    if (!v9) {
      uint64_t v9 = *(void *)(qword_10047EAD8 + 32);
    }
    sub_100124774(v8, v9);
    int v4 = *(_DWORD *)(a2 + 116);
  }
  if ((v4 & 8) != 0)
  {
    *(_DWORD *)(a1 + 116) |= 8u;
    uint64_t v10 = *(void *)(a1 + 40);
    if (!v10) {
      operator new();
    }
    uint64_t v11 = *(void *)(a2 + 40);
    if (!v11) {
      uint64_t v11 = *(void *)(qword_10047EAD8 + 40);
    }
    sub_100124774(v10, v11);
    int v4 = *(_DWORD *)(a2 + 116);
  }
  if ((v4 & 0x10) != 0)
  {
    *(_DWORD *)(a1 + 116) |= 0x10u;
    uint64_t v12 = *(void *)(a1 + 48);
    if (!v12) {
      operator new();
    }
    uint64_t v13 = *(void *)(a2 + 48);
    if (!v13) {
      uint64_t v13 = *(void *)(qword_10047EAD8 + 48);
    }
    sub_100124774(v12, v13);
    int v4 = *(_DWORD *)(a2 + 116);
  }
  if ((v4 & 0x20) != 0)
  {
    *(_DWORD *)(a1 + 116) |= 0x20u;
    uint64_t v14 = *(void *)(a1 + 56);
    if (!v14) {
      operator new();
    }
    uint64_t v15 = *(void *)(a2 + 56);
    if (!v15) {
      uint64_t v15 = *(void *)(qword_10047EAD8 + 56);
    }
    sub_100124774(v14, v15);
    int v4 = *(_DWORD *)(a2 + 116);
  }
  if ((v4 & 0x40) != 0)
  {
    *(_DWORD *)(a1 + 116) |= 0x40u;
    uint64_t v16 = *(void *)(a1 + 64);
    if (!v16) {
      operator new();
    }
    uint64_t v17 = *(void *)(a2 + 64);
    if (!v17) {
      uint64_t v17 = *(void *)(qword_10047EAD8 + 64);
    }
    sub_100124774(v16, v17);
    int v4 = *(_DWORD *)(a2 + 116);
  }
  if ((v4 & 0x80) != 0)
  {
    *(_DWORD *)(a1 + 116) |= 0x80u;
    uint64_t v18 = *(void *)(a1 + 72);
    if (!v18) {
      operator new();
    }
    uint64_t v19 = *(void *)(a2 + 72);
    if (!v19) {
      uint64_t v19 = *(void *)(qword_10047EAD8 + 72);
    }
    sub_10012C9EC(v18, v19);
    int v4 = *(_DWORD *)(a2 + 116);
  }
LABEL_42:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 116) |= 0x100u;
      uint64_t v20 = *(void *)(a1 + 80);
      if (!v20) {
        operator new();
      }
      uint64_t v21 = *(void *)(a2 + 80);
      if (!v21) {
        uint64_t v21 = *(void *)(qword_10047EAD8 + 80);
      }
      sub_10012C9EC(v20, v21);
      int v4 = *(_DWORD *)(a2 + 116);
    }
    if ((v4 & 0x200) != 0)
    {
      *(_DWORD *)(a1 + 116) |= 0x200u;
      uint64_t v22 = *(void *)(a1 + 88);
      if (!v22) {
        operator new();
      }
      uint64_t v23 = *(void *)(a2 + 88);
      if (!v23) {
        uint64_t v23 = *(void *)(qword_10047EAD8 + 88);
      }
      sub_10012C9EC(v22, v23);
      int v4 = *(_DWORD *)(a2 + 116);
    }
    if ((v4 & 0x400) != 0)
    {
      *(_DWORD *)(a1 + 116) |= 0x400u;
      uint64_t v24 = *(void *)(a1 + 96);
      if (!v24) {
        operator new();
      }
      uint64_t v25 = *(void *)(a2 + 96);
      if (!v25) {
        uint64_t v25 = *(void *)(qword_10047EAD8 + 96);
      }
      sub_10012DD74(v24, v25);
      int v4 = *(_DWORD *)(a2 + 116);
    }
    if ((v4 & 0x800) != 0)
    {
      *(_DWORD *)(a1 + 116) |= 0x800u;
      uint64_t v26 = *(void *)(a1 + 104);
      if (!v26) {
        operator new();
      }
      uint64_t v27 = *(void *)(a2 + 104);
      if (!v27) {
        uint64_t v27 = *(void *)(qword_10047EAD8 + 104);
      }
      sub_1001324D8(v26, v27);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100133658()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100133680()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001336A8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001336E8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100133710()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100133738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013374C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100133760(void *result)
{
  if ((void *)qword_10047EAD8 != result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = v1[4];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = v1[5];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[6];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = v1[7];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = v1[8];
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = v1[9];
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = v1[10];
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = v1[11];
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = v1[12];
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t result = (void *)v1[13];
    if (result)
    {
      uint64_t v12 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v12();
    }
  }
  return result;
}

void sub_10013398C(void *a1)
{
  *a1 = off_1004578F0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100133760(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001339EC(void *a1)
{
  *a1 = off_1004578F0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100133760(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100133A60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 112) = a2;
  return result;
}

void sub_100133A68()
{
}

void sub_100133AD8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100133B00(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 116);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        this = sub_1001304FC(this);
        int v2 = *(_DWORD *)(v1 + 116);
      }
    }
    *(void *)(v1 + 24) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 32);
      if (v3)
      {
        char v4 = *(unsigned char *)(v3 + 32);
        if (v4)
        {
          *(_DWORD *)(v3 + 24) = 0;
          if ((v4 & 2) != 0)
          {
            this = *(void *)(v3 + 16);
            if (this)
            {
              uint64_t v5 = *(void *)(this + 8);
              this += 8;
              *(_DWORD *)(this + 16) = 0;
              *(_DWORD *)(this + 40) = 0;
              *(_DWORD *)(this + 64) = 0;
              *(_DWORD *)(this + 88) = 0;
              *(_DWORD *)(this + 104) = 0;
              if (v5) {
                this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
              }
            }
          }
        }
        uint64_t v7 = *(void *)(v3 + 8);
        uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v3 + 8);
        *((_DWORD *)v6 + 6) = 0;
        if (v7) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 116) & 8) != 0)
    {
      uint64_t v8 = *(void *)(v1 + 40);
      if (v8)
      {
        char v9 = *(unsigned char *)(v8 + 32);
        if (v9)
        {
          *(_DWORD *)(v8 + 24) = 0;
          if ((v9 & 2) != 0)
          {
            this = *(void *)(v8 + 16);
            if (this)
            {
              uint64_t v10 = *(void *)(this + 8);
              this += 8;
              *(_DWORD *)(this + 16) = 0;
              *(_DWORD *)(this + 40) = 0;
              *(_DWORD *)(this + 64) = 0;
              *(_DWORD *)(this + 88) = 0;
              *(_DWORD *)(this + 104) = 0;
              if (v10) {
                this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
              }
            }
          }
        }
        uint64_t v12 = *(void *)(v8 + 8);
        uint64_t v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v8 + 8);
        *((_DWORD *)v11 + 6) = 0;
        if (v12) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v11);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 116) & 0x10) != 0)
    {
      uint64_t v13 = *(void *)(v1 + 48);
      if (v13)
      {
        char v14 = *(unsigned char *)(v13 + 32);
        if (v14)
        {
          *(_DWORD *)(v13 + 24) = 0;
          if ((v14 & 2) != 0)
          {
            this = *(void *)(v13 + 16);
            if (this)
            {
              uint64_t v15 = *(void *)(this + 8);
              this += 8;
              *(_DWORD *)(this + 16) = 0;
              *(_DWORD *)(this + 40) = 0;
              *(_DWORD *)(this + 64) = 0;
              *(_DWORD *)(this + 88) = 0;
              *(_DWORD *)(this + 104) = 0;
              if (v15) {
                this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
              }
            }
          }
        }
        uint64_t v17 = *(void *)(v13 + 8);
        uint64_t v16 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v13 + 8);
        *((_DWORD *)v16 + 6) = 0;
        if (v17) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v16);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 116) & 0x20) != 0)
    {
      uint64_t v18 = *(void *)(v1 + 56);
      if (v18)
      {
        char v19 = *(unsigned char *)(v18 + 32);
        if (v19)
        {
          *(_DWORD *)(v18 + 24) = 0;
          if ((v19 & 2) != 0)
          {
            this = *(void *)(v18 + 16);
            if (this)
            {
              uint64_t v20 = *(void *)(this + 8);
              this += 8;
              *(_DWORD *)(this + 16) = 0;
              *(_DWORD *)(this + 40) = 0;
              *(_DWORD *)(this + 64) = 0;
              *(_DWORD *)(this + 88) = 0;
              *(_DWORD *)(this + 104) = 0;
              if (v20) {
                this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
              }
            }
          }
        }
        uint64_t v22 = *(void *)(v18 + 8);
        uint64_t v21 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v18 + 8);
        *((_DWORD *)v21 + 6) = 0;
        if (v22) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v21);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 116) & 0x40) != 0)
    {
      uint64_t v23 = *(void *)(v1 + 64);
      if (v23)
      {
        char v24 = *(unsigned char *)(v23 + 32);
        if (v24)
        {
          *(_DWORD *)(v23 + 24) = 0;
          if ((v24 & 2) != 0)
          {
            this = *(void *)(v23 + 16);
            if (this)
            {
              uint64_t v25 = *(void *)(this + 8);
              this += 8;
              *(_DWORD *)(this + 16) = 0;
              *(_DWORD *)(this + 40) = 0;
              *(_DWORD *)(this + 64) = 0;
              *(_DWORD *)(this + 88) = 0;
              *(_DWORD *)(this + 104) = 0;
              if (v25) {
                this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
              }
            }
          }
        }
        uint64_t v27 = *(void *)(v23 + 8);
        uint64_t v26 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v23 + 8);
        *((_DWORD *)v26 + 6) = 0;
        if (v27) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v26);
        }
      }
    }
    int v2 = *(_DWORD *)(v1 + 116);
    if ((v2 & 0x80) != 0)
    {
      this = *(void *)(v1 + 72);
      if (this)
      {
        this = sub_10012CF2C(this);
        int v2 = *(_DWORD *)(v1 + 116);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      this = *(void *)(v1 + 80);
      if (this)
      {
        this = sub_10012CF2C(this);
        int v2 = *(_DWORD *)(v1 + 116);
      }
    }
    if ((v2 & 0x200) != 0)
    {
      this = *(void *)(v1 + 88);
      if (this)
      {
        this = sub_10012CF2C(this);
        int v2 = *(_DWORD *)(v1 + 116);
      }
    }
    if ((v2 & 0x400) != 0)
    {
      this = *(void *)(v1 + 96);
      if (this)
      {
        if (*(int *)(this + 24) >= 1)
        {
          uint64_t v28 = 0;
          do
          {
            while (1)
            {
              uint64_t v29 = *(void *)(*(void *)(this + 16) + 8 * v28);
              if (*(char *)(v29 + 23) < 0) {
                break;
              }
              *(unsigned char *)uint64_t v29 = 0;
              *(unsigned char *)(v29 + 23) = 0;
              if (++v28 >= *(int *)(this + 24)) {
                goto LABEL_67;
              }
            }
            **(unsigned char **)uint64_t v29 = 0;
            *(void *)(v29 + 8) = 0;
            ++v28;
          }
          while (v28 < *(int *)(this + 24));
        }
LABEL_67:
        uint64_t v30 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 16) = 0;
        *(_DWORD *)(this + 40) = 0;
        *(_DWORD *)(this + 64) = 0;
        *(_DWORD *)(this + 88) = 0;
        *(_DWORD *)(this + 112) = 0;
        *(_DWORD *)(this + 136) = 0;
        *(_DWORD *)(this + 160) = 0;
        *(_DWORD *)(this + 176) = 0;
        if (v30) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    if ((*(unsigned char *)(v1 + 117) & 8) != 0)
    {
      uint64_t v31 = *(void *)(v1 + 104);
      if (v31)
      {
        if (*(int *)(v31 + 24) >= 1)
        {
          uint64_t v32 = 0;
          do
          {
            uint64_t v33 = *(void *)(*(void *)(v31 + 16) + 8 * v32);
            this = (*(uint64_t (**)(uint64_t))(*(void *)v33 + 32))(v33);
            ++v32;
          }
          while (v32 < *(int *)(v31 + 24));
        }
        uint64_t v35 = *(void *)(v31 + 8);
        uint64_t v34 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v31 + 8);
        *((_DWORD *)v34 + 4) = 0;
        *((_DWORD *)v34 + 9) = 0;
        if (v35) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v34);
        }
      }
    }
  }
  uint64_t v37 = *(void *)(v1 + 8);
  char v36 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v36 + 27) = 0;
  if (v37)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v36);
  }
  return this;
}

uint64_t sub_100133E90(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (unint64_t *)(a1 + 24);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 < *((void *)this + 2) && (*v8 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 116) |= 1u;
        uint64_t v11 = *(void *)(a1 + 16);
        if (!v11) {
          operator new();
        }
        unsigned int v124 = 0;
        uint64_t v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v124))return 0; {
        }
          }
        else
        {
          unsigned int v124 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        int v31 = *((_DWORD *)this + 14);
        int v32 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v31 + 1;
        if (v31 >= v32) {
          return 0;
        }
        int v33 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v124);
        if (!sub_100130750(v11, this, v34, v35) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v33);
        int v36 = *((_DWORD *)this + 14);
        BOOL v37 = __OFSUB__(v36, 1);
        int v38 = v36 - 1;
        if (v38 < 0 == v37) {
          *((_DWORD *)this + 14) = v38;
        }
        int v39 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v39 >= *((void *)this + 2) || *v39 != 17) {
          continue;
        }
        *((void *)this + 1) = v39 + 1;
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v6);
        if (!result) {
          return result;
        }
LABEL_66:
        int v40 = *(_DWORD *)(a1 + 116) | 2;
        *(_DWORD *)(a1 + 116) = v40;
        int v41 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 != 26) {
          continue;
        }
        *((void *)this + 1) = v41 + 1;
        *(_DWORD *)(a1 + 116) = v40 | 4;
        uint64_t v14 = *(void *)(a1 + 32);
        if (!v14) {
LABEL_69:
        }
          operator new();
LABEL_70:
        unsigned int v124 = 0;
        int v42 = (char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v124))return 0; {
        }
          }
        else
        {
          unsigned int v124 = *v42;
          *((void *)this + 1) = v42 + 1;
        }
        int v43 = *((_DWORD *)this + 14);
        int v44 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v43 + 1;
        if (v43 >= v44) {
          return 0;
        }
        int v45 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v124);
        if (!sub_100124B60(v14, this, v46, v47) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v45);
        int v48 = *((_DWORD *)this + 14);
        BOOL v37 = __OFSUB__(v48, 1);
        int v49 = v48 - 1;
        if (v49 < 0 == v37) {
          *((_DWORD *)this + 14) = v49;
        }
        uint64_t v50 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v50 >= *((void *)this + 2) || *v50 != 34) {
          continue;
        }
        *((void *)this + 1) = v50 + 1;
        *(_DWORD *)(a1 + 116) |= 8u;
        uint64_t v15 = *(void *)(a1 + 40);
        if (!v15) {
LABEL_82:
        }
          operator new();
LABEL_22:
        unsigned int v124 = 0;
        uint64_t v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v124))return 0; {
        }
          }
        else
        {
          unsigned int v124 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        int v51 = *((_DWORD *)this + 14);
        int v52 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v51 + 1;
        if (v51 >= v52) {
          return 0;
        }
        int v53 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v124);
        if (!sub_100124B60(v15, this, v54, v55) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v53);
        int v56 = *((_DWORD *)this + 14);
        BOOL v37 = __OFSUB__(v56, 1);
        int v57 = v56 - 1;
        if (v57 < 0 == v37) {
          *((_DWORD *)this + 14) = v57;
        }
        uint64_t v58 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v58 >= *((void *)this + 2) || *v58 != 42) {
          continue;
        }
        *((void *)this + 1) = v58 + 1;
        *(_DWORD *)(a1 + 116) |= 0x10u;
        uint64_t v17 = *(void *)(a1 + 48);
        if (!v17) {
LABEL_94:
        }
          operator new();
LABEL_26:
        unsigned int v124 = 0;
        uint64_t v18 = (char *)*((void *)this + 1);
        if ((unint64_t)v18 >= *((void *)this + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v124))return 0; {
        }
          }
        else
        {
          unsigned int v124 = *v18;
          *((void *)this + 1) = v18 + 1;
        }
        int v59 = *((_DWORD *)this + 14);
        int v60 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v59 + 1;
        if (v59 >= v60) {
          return 0;
        }
        int v61 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v124);
        if (!sub_100124B60(v17, this, v62, v63) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v61);
        int v64 = *((_DWORD *)this + 14);
        BOOL v37 = __OFSUB__(v64, 1);
        int v65 = v64 - 1;
        if (v65 < 0 == v37) {
          *((_DWORD *)this + 14) = v65;
        }
        int v66 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v66 >= *((void *)this + 2) || *v66 != 50) {
          continue;
        }
        *((void *)this + 1) = v66 + 1;
        *(_DWORD *)(a1 + 116) |= 0x20u;
        uint64_t v19 = *(void *)(a1 + 56);
        if (!v19) {
LABEL_106:
        }
          operator new();
LABEL_30:
        unsigned int v124 = 0;
        uint64_t v20 = (char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v124))return 0; {
        }
          }
        else
        {
          unsigned int v124 = *v20;
          *((void *)this + 1) = v20 + 1;
        }
        int v67 = *((_DWORD *)this + 14);
        int v68 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v67 + 1;
        if (v67 >= v68) {
          return 0;
        }
        int v69 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v124);
        if (!sub_100124B60(v19, this, v70, v71) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v69);
        int v72 = *((_DWORD *)this + 14);
        BOOL v37 = __OFSUB__(v72, 1);
        int v73 = v72 - 1;
        if (v73 < 0 == v37) {
          *((_DWORD *)this + 14) = v73;
        }
        int v74 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v74 >= *((void *)this + 2) || *v74 != 58) {
          continue;
        }
        *((void *)this + 1) = v74 + 1;
        *(_DWORD *)(a1 + 116) |= 0x80u;
        uint64_t v21 = *(void *)(a1 + 72);
        if (!v21) {
LABEL_118:
        }
          operator new();
LABEL_34:
        unsigned int v124 = 0;
        uint64_t v22 = (char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v124))return 0; {
        }
          }
        else
        {
          unsigned int v124 = *v22;
          *((void *)this + 1) = v22 + 1;
        }
        int v75 = *((_DWORD *)this + 14);
        int v76 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v75 + 1;
        if (v75 >= v76) {
          return 0;
        }
        int v77 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v124);
        if (!sub_10012D028(v21, this, v78, v79) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v77);
        int v80 = *((_DWORD *)this + 14);
        BOOL v37 = __OFSUB__(v80, 1);
        int v81 = v80 - 1;
        if (v81 < 0 == v37) {
          *((_DWORD *)this + 14) = v81;
        }
        uint64_t v82 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v82 >= *((void *)this + 2) || *v82 != 66) {
          continue;
        }
        *((void *)this + 1) = v82 + 1;
        *(_DWORD *)(a1 + 116) |= 0x100u;
        uint64_t v23 = *(void *)(a1 + 80);
        if (!v23) {
LABEL_130:
        }
          operator new();
LABEL_38:
        unsigned int v124 = 0;
        char v24 = (char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v124))return 0; {
        }
          }
        else
        {
          unsigned int v124 = *v24;
          *((void *)this + 1) = v24 + 1;
        }
        int v83 = *((_DWORD *)this + 14);
        int v84 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v83 + 1;
        if (v83 >= v84) {
          return 0;
        }
        int v85 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v124);
        if (!sub_10012D028(v23, this, v86, v87) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v85);
        int v88 = *((_DWORD *)this + 14);
        BOOL v37 = __OFSUB__(v88, 1);
        int v89 = v88 - 1;
        if (v89 < 0 == v37) {
          *((_DWORD *)this + 14) = v89;
        }
        BOOL v90 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v90 >= *((void *)this + 2) || *v90 != 74) {
          continue;
        }
        *((void *)this + 1) = v90 + 1;
        *(_DWORD *)(a1 + 116) |= 0x200u;
        uint64_t v25 = *(void *)(a1 + 88);
        if (!v25) {
LABEL_142:
        }
          operator new();
LABEL_42:
        unsigned int v124 = 0;
        uint64_t v26 = (char *)*((void *)this + 1);
        if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v124))return 0; {
        }
          }
        else
        {
          unsigned int v124 = *v26;
          *((void *)this + 1) = v26 + 1;
        }
        int v91 = *((_DWORD *)this + 14);
        int v92 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v91 + 1;
        if (v91 >= v92) {
          return 0;
        }
        int v93 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v124);
        if (!sub_10012D028(v25, this, v94, v95) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v93);
        int v96 = *((_DWORD *)this + 14);
        BOOL v37 = __OFSUB__(v96, 1);
        int v97 = v96 - 1;
        if (v97 < 0 == v37) {
          *((_DWORD *)this + 14) = v97;
        }
        uint64_t v98 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v98 >= *((void *)this + 2) || *v98 != 82) {
          continue;
        }
        *((void *)this + 1) = v98 + 1;
        *(_DWORD *)(a1 + 116) |= 0x400u;
        uint64_t v27 = *(void *)(a1 + 96);
        if (!v27) {
LABEL_154:
        }
          operator new();
LABEL_46:
        unsigned int v124 = 0;
        uint64_t v28 = (char *)*((void *)this + 1);
        if ((unint64_t)v28 >= *((void *)this + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v124))return 0; {
        }
          }
        else
        {
          unsigned int v124 = *v28;
          *((void *)this + 1) = v28 + 1;
        }
        int v99 = *((_DWORD *)this + 14);
        int v100 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v99 + 1;
        if (v99 >= v100) {
          return 0;
        }
        int v101 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v124);
        if (!sub_10012E600(v27, this, v102, v103) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v101);
        int v104 = *((_DWORD *)this + 14);
        BOOL v37 = __OFSUB__(v104, 1);
        int v105 = v104 - 1;
        if (v105 < 0 == v37) {
          *((_DWORD *)this + 14) = v105;
        }
        uint64_t v106 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v106 >= *((void *)this + 2) || *v106 != 98) {
          continue;
        }
        *((void *)this + 1) = v106 + 1;
        *(_DWORD *)(a1 + 116) |= 0x800u;
        uint64_t v29 = *(int **)(a1 + 104);
        if (!v29) {
LABEL_166:
        }
          operator new();
LABEL_51:
        unsigned int v124 = 0;
        uint64_t v30 = (char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v124))return 0; {
        }
          }
        else
        {
          unsigned int v124 = *v30;
          *((void *)this + 1) = v30 + 1;
        }
        int v107 = *((_DWORD *)this + 14);
        int v108 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v107 + 1;
        if (v107 >= v108) {
          return 0;
        }
        int v109 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v124);
        if (!sub_100132868(v29, this, v110, v111) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v109);
        int v112 = *((_DWORD *)this + 14);
        BOOL v37 = __OFSUB__(v112, 1);
        int v113 = v112 - 1;
        if (v113 < 0 == v37) {
          *((_DWORD *)this + 14) = v113;
        }
        int v114 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v114 >= *((void *)this + 2) || *v114 != 106) {
          continue;
        }
        *((void *)this + 1) = v114 + 1;
LABEL_178:
        *(_DWORD *)(a1 + 116) |= 0x40u;
        uint64_t v115 = *(void *)(a1 + 64);
        if (!v115) {
          operator new();
        }
        unsigned int v124 = 0;
        int v116 = (char *)*((void *)this + 1);
        if ((unint64_t)v116 >= *((void *)this + 2) || *v116 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v124))return 0; {
        }
          }
        else
        {
          unsigned int v124 = *v116;
          *((void *)this + 1) = v116 + 1;
        }
        int v117 = *((_DWORD *)this + 14);
        int v118 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v117 + 1;
        if (v117 >= v118) {
          return 0;
        }
        int v119 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v124);
        if (!sub_100124B60(v115, this, v120, v121) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v119);
        int v122 = *((_DWORD *)this + 14);
        BOOL v37 = __OFSUB__(v122, 1);
        int v123 = v122 - 1;
        if (v123 < 0 == v37) {
          *((_DWORD *)this + 14) = v123;
        }
        if (*((void *)this + 1) == *((void *)this + 2)
          && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 1) {
          goto LABEL_54;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, v6);
        if (!result) {
          return result;
        }
        goto LABEL_66;
      case 3u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 116) |= 4u;
        uint64_t v14 = *(void *)(a1 + 32);
        if (!v14) {
          goto LABEL_69;
        }
        goto LABEL_70;
      case 4u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 116) |= 8u;
        uint64_t v15 = *(void *)(a1 + 40);
        if (v15) {
          goto LABEL_22;
        }
        goto LABEL_82;
      case 5u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 116) |= 0x10u;
        uint64_t v17 = *(void *)(a1 + 48);
        if (v17) {
          goto LABEL_26;
        }
        goto LABEL_94;
      case 6u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 116) |= 0x20u;
        uint64_t v19 = *(void *)(a1 + 56);
        if (v19) {
          goto LABEL_30;
        }
        goto LABEL_106;
      case 7u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 116) |= 0x80u;
        uint64_t v21 = *(void *)(a1 + 72);
        if (v21) {
          goto LABEL_34;
        }
        goto LABEL_118;
      case 8u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 116) |= 0x100u;
        uint64_t v23 = *(void *)(a1 + 80);
        if (v23) {
          goto LABEL_38;
        }
        goto LABEL_130;
      case 9u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 116) |= 0x200u;
        uint64_t v25 = *(void *)(a1 + 88);
        if (v25) {
          goto LABEL_42;
        }
        goto LABEL_142;
      case 0xAu:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 116) |= 0x400u;
        uint64_t v27 = *(void *)(a1 + 96);
        if (v27) {
          goto LABEL_46;
        }
        goto LABEL_154;
      case 0xCu:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 116) |= 0x800u;
        uint64_t v29 = *(int **)(a1 + 104);
        if (v29) {
          goto LABEL_51;
        }
        goto LABEL_166;
      case 0xDu:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_54;
        }
        goto LABEL_178;
      default:
        int v10 = TagFallback & 7;
LABEL_54:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_100134DDC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100134E04()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100134EF0(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 116);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 116);
      if ((v6 & 2) != 0) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047EAD8 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 116);
      if ((v6 & 2) != 0) {
        goto LABEL_19;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
LABEL_20:
    uint64_t v11 = *(void *)(v5 + 32);
    if (v11)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v11, a2, a4);
      int v6 = *(_DWORD *)(v5 + 116);
      if ((v6 & 8) != 0) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(qword_10047EAD8 + 32), a2, a4);
      int v6 = *(_DWORD *)(v5 + 116);
      if ((v6 & 8) != 0) {
        goto LABEL_24;
      }
    }
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_28:
    uint64_t v13 = *(void *)(v5 + 48);
    if (v13)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v13, a2, a4);
      int v6 = *(_DWORD *)(v5 + 116);
      if ((v6 & 0x20) != 0) {
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(qword_10047EAD8 + 48), a2, a4);
      int v6 = *(_DWORD *)(v5 + 116);
      if ((v6 & 0x20) != 0) {
        goto LABEL_32;
      }
    }
LABEL_7:
    if ((v6 & 0x80) == 0) {
      goto LABEL_8;
    }
LABEL_36:
    uint64_t v15 = *(void *)(v5 + 72);
    if (v15)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v15, a2, a4);
      int v6 = *(_DWORD *)(v5 + 116);
      if ((v6 & 0x100) != 0) {
        goto LABEL_40;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(qword_10047EAD8 + 72), a2, a4);
      int v6 = *(_DWORD *)(v5 + 116);
      if ((v6 & 0x100) != 0) {
        goto LABEL_40;
      }
    }
LABEL_9:
    if ((v6 & 0x200) == 0) {
      goto LABEL_10;
    }
LABEL_44:
    uint64_t v17 = *(void *)(v5 + 88);
    if (v17)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v17, a2, a4);
      int v6 = *(_DWORD *)(v5 + 116);
      if ((v6 & 0x400) != 0) {
        goto LABEL_48;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(void *)(qword_10047EAD8 + 88), a2, a4);
      int v6 = *(_DWORD *)(v5 + 116);
      if ((v6 & 0x400) != 0) {
        goto LABEL_48;
      }
    }
LABEL_11:
    if ((v6 & 0x800) == 0) {
      goto LABEL_12;
    }
LABEL_52:
    uint64_t v19 = *(void *)(v5 + 104);
    if (v19)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v19, a2, a4);
      if ((*(_DWORD *)(v5 + 116) & 0x40) != 0) {
        goto LABEL_56;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(void *)(qword_10047EAD8 + 104), a2, a4);
      if ((*(_DWORD *)(v5 + 116) & 0x40) != 0) {
        goto LABEL_56;
      }
    }
LABEL_13:
    char v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    unsigned int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_60;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFixed64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 24), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 4) != 0) {
    goto LABEL_20;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    goto LABEL_5;
  }
LABEL_24:
  uint64_t v12 = *(void *)(v5 + 40);
  if (v12)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v12, a2, a4);
    int v6 = *(_DWORD *)(v5 + 116);
    if ((v6 & 0x10) != 0) {
      goto LABEL_28;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(qword_10047EAD8 + 40), a2, a4);
    int v6 = *(_DWORD *)(v5 + 116);
    if ((v6 & 0x10) != 0) {
      goto LABEL_28;
    }
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    goto LABEL_7;
  }
LABEL_32:
  uint64_t v14 = *(void *)(v5 + 56);
  if (v14)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v14, a2, a4);
    int v6 = *(_DWORD *)(v5 + 116);
    if ((v6 & 0x80) != 0) {
      goto LABEL_36;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(qword_10047EAD8 + 56), a2, a4);
    int v6 = *(_DWORD *)(v5 + 116);
    if ((v6 & 0x80) != 0) {
      goto LABEL_36;
    }
  }
LABEL_8:
  if ((v6 & 0x100) == 0) {
    goto LABEL_9;
  }
LABEL_40:
  uint64_t v16 = *(void *)(v5 + 80);
  if (v16)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v16, a2, a4);
    int v6 = *(_DWORD *)(v5 + 116);
    if ((v6 & 0x200) != 0) {
      goto LABEL_44;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(qword_10047EAD8 + 80), a2, a4);
    int v6 = *(_DWORD *)(v5 + 116);
    if ((v6 & 0x200) != 0) {
      goto LABEL_44;
    }
  }
LABEL_10:
  if ((v6 & 0x400) == 0) {
    goto LABEL_11;
  }
LABEL_48:
  uint64_t v18 = *(void *)(v5 + 96);
  if (v18)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v18, a2, a4);
    int v6 = *(_DWORD *)(v5 + 116);
    if ((v6 & 0x800) != 0) {
      goto LABEL_52;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(void *)(qword_10047EAD8 + 96), a2, a4);
    int v6 = *(_DWORD *)(v5 + 116);
    if ((v6 & 0x800) != 0) {
      goto LABEL_52;
    }
  }
LABEL_12:
  if ((v6 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_56:
  uint64_t v20 = *(void *)(v5 + 64);
  if (v20)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v20, a2, a4);
    uint64_t v21 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    unsigned int v7 = v21;
    if (!v21) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(void *)(qword_10047EAD8 + 64), a2, a4);
    uint64_t v22 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    unsigned int v7 = v22;
    if (!v22) {
      return result;
    }
  }
LABEL_60:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10013525C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  char v4 = a2;
  int v6 = *((_DWORD *)this + 29);
  if (v6)
  {
    unsigned int v7 = (unsigned int *)*((void *)this + 2);
    if (v7)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v8 = a2 + 1;
      char v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7[17];
      if (v9 <= 0x7F) {
        goto LABEL_15;
      }
    }
    else
    {
      unsigned int v7 = *(unsigned int **)(qword_10047EAD8 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v8 = a2 + 1;
      char v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7[17];
      if (v9 <= 0x7F)
      {
LABEL_15:
        *((unsigned char *)v4 + 1) = (_BYTE)v9;
        char v4 = sub_100130EA4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v7, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3, a4);
        int v6 = *((_DWORD *)this + 29);
        if ((v6 & 2) != 0) {
          goto LABEL_19;
        }
LABEL_3:
        if ((v6 & 4) == 0) {
          goto LABEL_4;
        }
LABEL_20:
        uint64_t v14 = (unsigned int *)*((void *)this + 4);
        if (v14)
        {
          *(unsigned char *)char v4 = 26;
          unsigned int v15 = v4 + 1;
          uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[7];
          if (v16 <= 0x7F) {
            goto LABEL_22;
          }
        }
        else
        {
          uint64_t v14 = *(unsigned int **)(qword_10047EAD8 + 32);
          *(unsigned char *)char v4 = 26;
          unsigned int v15 = v4 + 1;
          uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v14[7];
          if (v16 <= 0x7F)
          {
LABEL_22:
            *((unsigned char *)v4 + 1) = (_BYTE)v16;
            char v4 = sub_100124F2C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v14, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3);
            int v6 = *((_DWORD *)this + 29);
            if ((v6 & 8) != 0) {
              goto LABEL_26;
            }
LABEL_5:
            if ((v6 & 0x10) == 0) {
              goto LABEL_6;
            }
LABEL_32:
            char v24 = (unsigned int *)*((void *)this + 6);
            if (v24)
            {
              *(unsigned char *)char v4 = 42;
              unsigned int v25 = v4 + 1;
              uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24[7];
              if (v26 <= 0x7F) {
                goto LABEL_34;
              }
            }
            else
            {
              char v24 = *(unsigned int **)(qword_10047EAD8 + 48);
              *(unsigned char *)char v4 = 42;
              unsigned int v25 = v4 + 1;
              uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24[7];
              if (v26 <= 0x7F)
              {
LABEL_34:
                *((unsigned char *)v4 + 1) = (_BYTE)v26;
                char v4 = sub_100124F2C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v24, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3);
                int v6 = *((_DWORD *)this + 29);
                if ((v6 & 0x20) != 0) {
                  goto LABEL_38;
                }
LABEL_7:
                if ((v6 & 0x80) == 0) {
                  goto LABEL_8;
                }
LABEL_44:
                uint64_t v34 = (unsigned int *)*((void *)this + 9);
                if (v34)
                {
                  *(unsigned char *)char v4 = 58;
                  unsigned int v35 = v4 + 1;
                  int v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34[15];
                  if (v36 <= 0x7F) {
                    goto LABEL_46;
                  }
                }
                else
                {
                  uint64_t v34 = *(unsigned int **)(qword_10047EAD8 + 72);
                  *(unsigned char *)char v4 = 58;
                  unsigned int v35 = v4 + 1;
                  int v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v34[15];
                  if (v36 <= 0x7F)
                  {
LABEL_46:
                    *((unsigned char *)v4 + 1) = (_BYTE)v36;
                    char v4 = sub_10012D6F8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v34, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3, a4);
                    int v6 = *((_DWORD *)this + 29);
                    if ((v6 & 0x100) != 0) {
                      goto LABEL_50;
                    }
LABEL_9:
                    if ((v6 & 0x200) == 0) {
                      goto LABEL_10;
                    }
LABEL_56:
                    uint64_t v46 = (unsigned int *)*((void *)this + 11);
                    if (v46)
                    {
                      *(unsigned char *)char v4 = 74;
                      unsigned int v47 = v4 + 1;
                      int v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v46[15];
                      if (v48 <= 0x7F) {
                        goto LABEL_58;
                      }
                    }
                    else
                    {
                      uint64_t v46 = *(unsigned int **)(qword_10047EAD8 + 88);
                      *(unsigned char *)char v4 = 74;
                      unsigned int v47 = v4 + 1;
                      int v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v46[15];
                      if (v48 <= 0x7F)
                      {
LABEL_58:
                        *((unsigned char *)v4 + 1) = (_BYTE)v48;
                        char v4 = sub_10012D6F8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v46, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3, a4);
                        int v6 = *((_DWORD *)this + 29);
                        if ((v6 & 0x400) != 0) {
                          goto LABEL_62;
                        }
LABEL_11:
                        if ((v6 & 0x800) == 0) {
                          goto LABEL_82;
                        }
                        goto LABEL_68;
                      }
                    }
                    int v49 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v48, v47, a3);
                    char v4 = sub_10012D6F8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v46, v49, v50, v51);
                    int v6 = *((_DWORD *)this + 29);
                    if ((v6 & 0x400) != 0) {
                      goto LABEL_62;
                    }
                    goto LABEL_11;
                  }
                }
                BOOL v37 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v36, v35, a3);
                char v4 = sub_10012D6F8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v34, v37, v38, v39);
                int v6 = *((_DWORD *)this + 29);
                if ((v6 & 0x100) != 0) {
                  goto LABEL_50;
                }
                goto LABEL_9;
              }
            }
            uint64_t v27 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, v25, a3);
            char v4 = sub_100124F2C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v24, v27, v28);
            int v6 = *((_DWORD *)this + 29);
            if ((v6 & 0x20) != 0) {
              goto LABEL_38;
            }
            goto LABEL_7;
          }
        }
        uint64_t v17 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, v15, a3);
        char v4 = sub_100124F2C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v14, v17, v18);
        int v6 = *((_DWORD *)this + 29);
        if ((v6 & 8) != 0) {
          goto LABEL_26;
        }
        goto LABEL_5;
      }
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v8, a3);
    char v4 = sub_100130EA4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v7, v10, v11, v12);
    int v6 = *((_DWORD *)this + 29);
    if ((v6 & 2) != 0) {
      goto LABEL_19;
    }
    goto LABEL_3;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_19:
  uint64_t v13 = *((void *)this + 3);
  *(unsigned char *)char v4 = 17;
  *(void *)((char *)v4 + 1) = v13;
  char v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 29);
  if ((v6 & 4) != 0) {
    goto LABEL_20;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    goto LABEL_5;
  }
LABEL_26:
  uint64_t v19 = (unsigned int *)*((void *)this + 5);
  if (v19)
  {
    *(unsigned char *)char v4 = 34;
    unsigned int v20 = v4 + 1;
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19[7];
    if (v21 <= 0x7F) {
      goto LABEL_28;
    }
LABEL_31:
    uint64_t v22 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, v20, a3);
    char v4 = sub_100124F2C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v19, v22, v23);
    int v6 = *((_DWORD *)this + 29);
    if ((v6 & 0x10) != 0) {
      goto LABEL_32;
    }
    goto LABEL_6;
  }
  uint64_t v19 = *(unsigned int **)(qword_10047EAD8 + 40);
  *(unsigned char *)char v4 = 34;
  unsigned int v20 = v4 + 1;
  uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19[7];
  if (v21 > 0x7F) {
    goto LABEL_31;
  }
LABEL_28:
  *((unsigned char *)v4 + 1) = (_BYTE)v21;
  char v4 = sub_100124F2C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v19, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3);
  int v6 = *((_DWORD *)this + 29);
  if ((v6 & 0x10) != 0) {
    goto LABEL_32;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    goto LABEL_7;
  }
LABEL_38:
  uint64_t v29 = (unsigned int *)*((void *)this + 7);
  if (v29)
  {
    *(unsigned char *)char v4 = 50;
    unsigned int v30 = v4 + 1;
    int v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v29[7];
    if (v31 <= 0x7F) {
      goto LABEL_40;
    }
LABEL_43:
    int v32 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, v30, a3);
    char v4 = sub_100124F2C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v29, v32, v33);
    int v6 = *((_DWORD *)this + 29);
    if ((v6 & 0x80) != 0) {
      goto LABEL_44;
    }
    goto LABEL_8;
  }
  uint64_t v29 = *(unsigned int **)(qword_10047EAD8 + 56);
  *(unsigned char *)char v4 = 50;
  unsigned int v30 = v4 + 1;
  int v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v29[7];
  if (v31 > 0x7F) {
    goto LABEL_43;
  }
LABEL_40:
  *((unsigned char *)v4 + 1) = (_BYTE)v31;
  char v4 = sub_100124F2C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v29, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3);
  int v6 = *((_DWORD *)this + 29);
  if ((v6 & 0x80) != 0) {
    goto LABEL_44;
  }
LABEL_8:
  if ((v6 & 0x100) == 0) {
    goto LABEL_9;
  }
LABEL_50:
  int v40 = (unsigned int *)*((void *)this + 10);
  if (v40)
  {
    *(unsigned char *)char v4 = 66;
    unsigned int v41 = v4 + 1;
    int v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v40[15];
    if (v42 <= 0x7F) {
      goto LABEL_52;
    }
LABEL_55:
    int v43 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v42, v41, a3);
    char v4 = sub_10012D6F8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v40, v43, v44, v45);
    int v6 = *((_DWORD *)this + 29);
    if ((v6 & 0x200) != 0) {
      goto LABEL_56;
    }
    goto LABEL_10;
  }
  int v40 = *(unsigned int **)(qword_10047EAD8 + 80);
  *(unsigned char *)char v4 = 66;
  unsigned int v41 = v4 + 1;
  int v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v40[15];
  if (v42 > 0x7F) {
    goto LABEL_55;
  }
LABEL_52:
  *((unsigned char *)v4 + 1) = (_BYTE)v42;
  char v4 = sub_10012D6F8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v40, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3, a4);
  int v6 = *((_DWORD *)this + 29);
  if ((v6 & 0x200) != 0) {
    goto LABEL_56;
  }
LABEL_10:
  if ((v6 & 0x400) == 0) {
    goto LABEL_11;
  }
LABEL_62:
  int v52 = (unsigned int *)*((void *)this + 12);
  if (v52)
  {
    *(unsigned char *)char v4 = 82;
    unsigned int v53 = v4 + 1;
    uint64_t v54 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v52[45];
    if (v54 <= 0x7F) {
      goto LABEL_64;
    }
LABEL_67:
    unsigned int v55 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v54, v53, a3);
    char v4 = sub_10012F598((wireless_diagnostics::google::protobuf::internal::WireFormat *)v52, v55, v56, v57);
    if ((*((_DWORD *)this + 29) & 0x800) == 0) {
      goto LABEL_82;
    }
    goto LABEL_68;
  }
  int v52 = *(unsigned int **)(qword_10047EAD8 + 96);
  *(unsigned char *)char v4 = 82;
  unsigned int v53 = v4 + 1;
  uint64_t v54 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v52[45];
  if (v54 > 0x7F) {
    goto LABEL_67;
  }
LABEL_64:
  *((unsigned char *)v4 + 1) = (_BYTE)v54;
  char v4 = sub_10012F598((wireless_diagnostics::google::protobuf::internal::WireFormat *)v52, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3, a4);
  if ((*((_DWORD *)this + 29) & 0x800) == 0) {
    goto LABEL_82;
  }
LABEL_68:
  uint64_t v58 = *((void *)this + 13);
  if (v58)
  {
    *(unsigned char *)char v4 = 98;
    unsigned int v59 = v4 + 1;
    int v60 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v58 + 40);
    if (v60 <= 0x7F) {
      goto LABEL_70;
    }
LABEL_73:
    char v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v60, v59, a3);
    if (*(int *)(v58 + 24) < 1) {
      goto LABEL_79;
    }
    goto LABEL_74;
  }
  uint64_t v58 = *(void *)(qword_10047EAD8 + 104);
  *(unsigned char *)char v4 = 98;
  unsigned int v59 = v4 + 1;
  int v60 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v58 + 40);
  if (v60 > 0x7F) {
    goto LABEL_73;
  }
LABEL_70:
  *((unsigned char *)v4 + 1) = (_BYTE)v60;
  char v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  if (*(int *)(v58 + 24) < 1) {
    goto LABEL_79;
  }
LABEL_74:
  uint64_t v61 = 0;
  do
  {
    int v63 = *(unsigned int **)(*(void *)(v58 + 16) + 8 * v61);
    *(unsigned char *)char v4 = 10;
    int v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v63[14];
    if (v64 > 0x7F)
    {
      uint64_t v62 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v64, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v64;
      uint64_t v62 = (uint64_t)v4 + 2;
    }
    char v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100131F58((wireless_diagnostics::google::protobuf::internal::WireFormat *)v63, v62, a3, a4);
    ++v61;
  }
  while (v61 < *(int *)(v58 + 24));
LABEL_79:
  int v67 = *(void **)(v58 + 8);
  int v66 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v58 + 8);
  int v65 = v67;
  if (v67 && *v65 != v65[1]) {
    char v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v66, v4, a3);
  }
LABEL_82:
  if ((*((unsigned char *)this + 116) & 0x40) != 0)
  {
    int v68 = (unsigned int *)*((void *)this + 8);
    if (v68)
    {
      *(unsigned char *)char v4 = 106;
      unsigned int v69 = v4 + 1;
      uint64_t v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v68[7];
      if (v70 <= 0x7F)
      {
LABEL_85:
        *((unsigned char *)v4 + 1) = (_BYTE)v70;
        uint64_t v71 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_88:
        char v4 = sub_100124F2C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v68, v71, a3);
        goto LABEL_89;
      }
    }
    else
    {
      int v68 = *(unsigned int **)(qword_10047EAD8 + 64);
      *(unsigned char *)char v4 = 106;
      unsigned int v69 = v4 + 1;
      uint64_t v70 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v68[7];
      if (v70 <= 0x7F) {
        goto LABEL_85;
      }
    }
    uint64_t v71 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v70, v69, a3);
    goto LABEL_88;
  }
LABEL_89:
  int v74 = (void *)*((void *)this + 1);
  int v73 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v72 = v74;
  if (!v74 || *v72 == v72[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v73, v4, a3);
}

uint64_t sub_100135934(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 116);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    if ((v3 & 0xFF00) == 0) {
      goto LABEL_66;
    }
    goto LABEL_62;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) != 0) {
      uint64_t v4 = 9;
    }
    else {
      uint64_t v4 = 0;
    }
    if ((v3 & 4) == 0) {
      goto LABEL_25;
    }
LABEL_19:
    uint64_t v8 = *(void *)(a1 + 32);
    if (v8)
    {
      char v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100125074(v8, a2);
      if (v9 < 0x80)
      {
LABEL_21:
        int v10 = 1;
LABEL_24:
        uint64_t v4 = (v4 + v9 + v10 + 1);
        int v3 = *(_DWORD *)(a1 + 116);
        goto LABEL_25;
      }
    }
    else
    {
      char v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100125074(*(void *)(qword_10047EAD8 + 32), a2);
      if (v9 < 0x80) {
        goto LABEL_21;
      }
    }
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
    goto LABEL_24;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100131230(v5, a2);
    if (v6 < 0x80)
    {
LABEL_12:
      int v7 = 1;
      goto LABEL_15;
    }
  }
  else
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100131230(*(void *)(qword_10047EAD8 + 16), a2);
    if (v6 < 0x80) {
      goto LABEL_12;
    }
  }
  int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
LABEL_15:
  int v3 = *(_DWORD *)(a1 + 116);
  if ((v3 & 2) != 0) {
    uint64_t v4 = (v6 + v7 + 10);
  }
  else {
    uint64_t v4 = (v6 + v7 + 1);
  }
  if ((v3 & 4) != 0) {
    goto LABEL_19;
  }
LABEL_25:
  if ((v3 & 8) != 0)
  {
    uint64_t v11 = *(void *)(a1 + 40);
    if (v11)
    {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100125074(v11, a2);
      if (v12 < 0x80) {
        goto LABEL_34;
      }
    }
    else
    {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100125074(*(void *)(qword_10047EAD8 + 40), a2);
      if (v12 < 0x80)
      {
LABEL_34:
        uint64_t v4 = (v4 + v12 + 2);
        int v3 = *(_DWORD *)(a1 + 116);
        if ((v3 & 0x10) != 0) {
          goto LABEL_38;
        }
LABEL_27:
        if ((v3 & 0x20) == 0) {
          goto LABEL_28;
        }
LABEL_44:
        uint64_t v15 = *(void *)(a1 + 56);
        if (v15)
        {
          uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100125074(v15, a2);
          if (v16 < 0x80) {
            goto LABEL_46;
          }
        }
        else
        {
          uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100125074(*(void *)(qword_10047EAD8 + 56), a2);
          if (v16 < 0x80)
          {
LABEL_46:
            uint64_t v4 = (v4 + v16 + 2);
            int v3 = *(_DWORD *)(a1 + 116);
            if ((v3 & 0x40) != 0) {
              goto LABEL_50;
            }
LABEL_29:
            if ((v3 & 0x80) == 0) {
              goto LABEL_30;
            }
LABEL_56:
            uint64_t v19 = *(void *)(a1 + 72);
            if (v19)
            {
              unsigned int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10012D948(v19, a2);
              if (v20 < 0x80)
              {
LABEL_58:
                int v21 = 1;
                goto LABEL_61;
              }
            }
            else
            {
              unsigned int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10012D948(*(void *)(qword_10047EAD8 + 72), a2);
              if (v20 < 0x80) {
                goto LABEL_58;
              }
            }
            int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
LABEL_61:
            uint64_t v4 = (v4 + v20 + v21 + 1);
            int v3 = *(_DWORD *)(a1 + 116);
            if ((v3 & 0xFF00) == 0) {
              goto LABEL_66;
            }
            goto LABEL_62;
          }
        }
        uint64_t v4 = v4
           + v16
           + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2)+ 1;
        int v3 = *(_DWORD *)(a1 + 116);
        if ((v3 & 0x40) != 0) {
          goto LABEL_50;
        }
        goto LABEL_29;
      }
    }
    uint64_t v4 = v4
       + v12
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 116);
    if ((v3 & 0x10) != 0) {
      goto LABEL_38;
    }
    goto LABEL_27;
  }
  if ((v3 & 0x10) == 0) {
    goto LABEL_27;
  }
LABEL_38:
  uint64_t v13 = *(void *)(a1 + 48);
  if (v13)
  {
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100125074(v13, a2);
    if (v14 < 0x80) {
      goto LABEL_40;
    }
LABEL_43:
    uint64_t v4 = v4
       + v14
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 116);
    if ((v3 & 0x20) != 0) {
      goto LABEL_44;
    }
    goto LABEL_28;
  }
  uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100125074(*(void *)(qword_10047EAD8 + 48), a2);
  if (v14 >= 0x80) {
    goto LABEL_43;
  }
LABEL_40:
  uint64_t v4 = (v4 + v14 + 2);
  int v3 = *(_DWORD *)(a1 + 116);
  if ((v3 & 0x20) != 0) {
    goto LABEL_44;
  }
LABEL_28:
  if ((v3 & 0x40) == 0) {
    goto LABEL_29;
  }
LABEL_50:
  uint64_t v17 = *(void *)(a1 + 64);
  if (v17)
  {
    uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100125074(v17, a2);
    if (v18 < 0x80) {
      goto LABEL_52;
    }
LABEL_55:
    uint64_t v4 = v4
       + v18
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 116);
    if ((v3 & 0x80) != 0) {
      goto LABEL_56;
    }
    goto LABEL_30;
  }
  uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100125074(*(void *)(qword_10047EAD8 + 64), a2);
  if (v18 >= 0x80) {
    goto LABEL_55;
  }
LABEL_52:
  uint64_t v4 = (v4 + v18 + 2);
  int v3 = *(_DWORD *)(a1 + 116);
  if ((v3 & 0x80) != 0) {
    goto LABEL_56;
  }
LABEL_30:
  if ((v3 & 0xFF00) == 0)
  {
LABEL_66:
    uint64_t v22 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v23 = *(void **)(a1 + 8);
    if (!v23) {
      goto LABEL_103;
    }
    goto LABEL_101;
  }
LABEL_62:
  if ((v3 & 0x100) == 0)
  {
    if ((v3 & 0x200) == 0) {
      goto LABEL_64;
    }
LABEL_74:
    uint64_t v26 = *(void *)(a1 + 88);
    if (v26)
    {
      uint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10012D948(v26, a2);
      if (v27 < 0x80) {
        goto LABEL_76;
      }
    }
    else
    {
      uint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10012D948(*(void *)(qword_10047EAD8 + 88), a2);
      if (v27 < 0x80)
      {
LABEL_76:
        uint64_t v4 = (v4 + v27 + 2);
        int v3 = *(_DWORD *)(a1 + 116);
        if ((v3 & 0x400) != 0) {
          goto LABEL_80;
        }
LABEL_65:
        if ((v3 & 0x800) == 0) {
          goto LABEL_66;
        }
        goto LABEL_86;
      }
    }
    uint64_t v4 = v4
       + v27
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 116);
    if ((v3 & 0x400) != 0) {
      goto LABEL_80;
    }
    goto LABEL_65;
  }
  uint64_t v24 = *(void *)(a1 + 80);
  if (v24)
  {
    unsigned int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10012D948(v24, a2);
    if (v25 < 0x80) {
      goto LABEL_70;
    }
LABEL_73:
    uint64_t v4 = v4
       + v25
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 116);
    if ((v3 & 0x200) != 0) {
      goto LABEL_74;
    }
    goto LABEL_64;
  }
  unsigned int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10012D948(*(void *)(qword_10047EAD8 + 80), a2);
  if (v25 >= 0x80) {
    goto LABEL_73;
  }
LABEL_70:
  uint64_t v4 = (v4 + v25 + 2);
  int v3 = *(_DWORD *)(a1 + 116);
  if ((v3 & 0x200) != 0) {
    goto LABEL_74;
  }
LABEL_64:
  if ((v3 & 0x400) == 0) {
    goto LABEL_65;
  }
LABEL_80:
  uint64_t v28 = *(void *)(a1 + 96);
  if (v28)
  {
    uint64_t v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10012F960(v28, a2);
    if (v29 < 0x80) {
      goto LABEL_82;
    }
  }
  else
  {
    uint64_t v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10012F960(*(void *)(qword_10047EAD8 + 96), a2);
    if (v29 < 0x80)
    {
LABEL_82:
      uint64_t v4 = (v4 + v29 + 2);
      if ((*(_DWORD *)(a1 + 116) & 0x800) == 0) {
        goto LABEL_66;
      }
      goto LABEL_86;
    }
  }
  uint64_t v4 = v4
     + v29
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29, a2)+ 1;
  if ((*(_DWORD *)(a1 + 116) & 0x800) == 0) {
    goto LABEL_66;
  }
LABEL_86:
  uint64_t v30 = *(void *)(a1 + 104);
  if (!v30) {
    uint64_t v30 = *(void *)(qword_10047EAD8 + 104);
  }
  unint64_t v31 = *(unsigned int *)(v30 + 24);
  if ((int)v31 >= 1)
  {
    uint64_t v32 = 0;
    do
    {
      uint64_t v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100132190(*(void *)(*(void *)(v30 + 16)+ 8 * v32), a2);
      int v35 = (int)v34;
      if (v34 >= 0x80) {
        int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34, a2);
      }
      else {
        int v33 = 1;
      }
      unint64_t v31 = (v35 + v31 + v33);
      ++v32;
    }
    while (v32 < *(int *)(v30 + 24));
  }
  int v36 = *(void **)(v30 + 8);
  if (v36 && *v36 != v36[1]) {
    unint64_t v31 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v30 + 8), a2)+ v31;
  }
  *(_DWORD *)(v30 + 40) = v31;
  if (v31 >= 0x80) {
    int v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v31, a2);
  }
  else {
    int v37 = 1;
  }
  uint64_t v4 = (v4 + v31 + v37 + 1);
  uint64_t v22 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v23 = *(void **)(a1 + 8);
  if (v23)
  {
LABEL_101:
    if (*v23 != v23[1]) {
      uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v22, a2)
    }
         + v4;
  }
LABEL_103:
  *(_DWORD *)(a1 + 112) = v4;
  return v4;
}

uint64_t sub_100135EB8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100132F34((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100135F98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100135FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100135FC0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10013604C()
{
  return 1;
}

uint64_t sub_100136054()
{
  uint64_t v0 = qword_10047DAA8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001204DC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DA60;
}

void sub_1001360E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001360F8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 56);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 56))
  {
    int v7 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 56) |= 1u;
    *(_DWORD *)(a1 + 32) = v7;
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_16;
    }
  }
  else if ((*(unsigned char *)(a2 + 56) & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = *(const std::string **)(a2 + 16);
  *(_DWORD *)(a1 + 56) |= 2u;
  char v9 = *(std::string **)(a1 + 16);
  if (v9 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v9, v8);
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_16:
  int v10 = *(const std::string **)(a2 + 24);
  *(_DWORD *)(a1 + 56) |= 4u;
  uint64_t v11 = *(std::string **)(a1 + 24);
  if (v11 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v11, v10);
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
LABEL_22:
    int v14 = *(_DWORD *)(a2 + 36);
    *(_DWORD *)(a1 + 56) |= 0x10u;
    *(_DWORD *)(a1 + 36) = v14;
    if ((*(_DWORD *)(a2 + 56) & 0x20) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_10;
  }
LABEL_19:
  uint64_t v12 = *(const std::string **)(a2 + 40);
  *(_DWORD *)(a1 + 56) |= 8u;
  uint64_t v13 = *(std::string **)(a1 + 40);
  if (v13 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v13, v12);
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x10) != 0) {
    goto LABEL_22;
  }
LABEL_9:
  if ((v4 & 0x20) != 0)
  {
LABEL_10:
    int v5 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 56) |= 0x20u;
    *(_DWORD *)(a1 + 48) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1001362EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100136300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100136314(void *result)
{
  uint64_t v1 = result[2];
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  uint64_t v3 = result[3];
  if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  uint64_t v5 = result[5];
  if ((_UNKNOWN *)v5 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    operator delete();
  }
  return result;
}

void sub_100136428(void *a1)
{
  *a1 = off_1004579A0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100136314(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100136488(void *a1)
{
  *a1 = off_1004579A0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100136314(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_1001364FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 52) = a2;
  return result;
}

void sub_100136504()
{
}

void sub_100136580()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001365A8(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 56);
  if (!v1) {
    goto LABEL_19;
  }
  *(_DWORD *)(a1 + 32) = 1;
  if ((v1 & 2) == 0
    || (uint64_t v2 = *(void *)(a1 + 16), (_UNKNOWN *)v2 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
  {
LABEL_6:
    if ((*(unsigned char *)(a1 + 56) & 4) != 0) {
      goto LABEL_7;
    }
    goto LABEL_13;
  }
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_6;
  }
  **(unsigned char **)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((*(unsigned char *)(a1 + 56) & 4) != 0)
  {
LABEL_7:
    uint64_t v3 = *(void *)(a1 + 24);
    if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)uint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
      }
    }
  }
LABEL_13:
  if ((*(unsigned char *)(a1 + 56) & 8) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 40);
    if ((_UNKNOWN *)v4 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)uint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v4 = 0;
        *(unsigned char *)(v4 + 23) = 0;
      }
    }
  }
  *(_DWORD *)(a1 + 36) = 0;
  *(_DWORD *)(a1 + 48) = 0;
LABEL_19:
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 12) = 0;
  if (v6) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10013667C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  int v7 = (unsigned int *)(a1 + 36);
  uint64_t v8 = (unsigned int *)(a1 + 48);
  while (1)
  {
    char v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 < *((void *)this + 2) && (*v9 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        unsigned int v26 = 0;
        uint64_t v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26);
          if (!result) {
            return result;
          }
          signed int v13 = v26;
          if (v26 - 1 <= 1)
          {
LABEL_12:
            *(_DWORD *)(a1 + 56) |= 1u;
            *(_DWORD *)(a1 + 32) = v13;
            goto LABEL_62;
          }
        }
        else
        {
          signed int v13 = *v12;
          *((void *)this + 1) = v12 + 1;
          if ((v13 - 1) <= 1) {
            goto LABEL_12;
          }
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, v13);
LABEL_62:
        unsigned int v25 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 != 18) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
        *(_DWORD *)(a1 + 56) |= 2u;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_16:
        }
          operator new();
LABEL_17:
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        uint64_t v15 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 != 26) {
          continue;
        }
        *((void *)this + 1) = v15 + 1;
LABEL_22:
        *(_DWORD *)(a1 + 56) |= 4u;
        if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        uint64_t v16 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 != 34) {
          continue;
        }
        *((void *)this + 1) = v16 + 1;
LABEL_29:
        *(_DWORD *)(a1 + 56) |= 8u;
        if (*(_UNKNOWN **)(a1 + 40) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        uint64_t v18 = (unsigned char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v18 >= v17 || *v18 != 40) {
          continue;
        }
        uint64_t v19 = v18 + 1;
        *((void *)this + 1) = v19;
        if ((unint64_t)v19 >= v17) {
          goto LABEL_46;
        }
LABEL_38:
        if (*v19 < 0)
        {
LABEL_46:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unsigned int v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v17 = *((void *)this + 2);
          *(_DWORD *)(a1 + 56) |= 0x10u;
          if ((unint64_t)v20 >= v17) {
            continue;
          }
        }
        else
        {
          unsigned int *v7 = *v19;
          unsigned int v20 = v19 + 1;
          *((void *)this + 1) = v20;
          *(_DWORD *)(a1 + 56) |= 0x10u;
          if ((unint64_t)v20 >= v17) {
            continue;
          }
        }
        if (*v20 != 48) {
          continue;
        }
        int v21 = v20 + 1;
        *((void *)this + 1) = v21;
LABEL_50:
        if ((unint64_t)v21 >= v17 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          uint64_t v24 = *((void *)this + 1);
          uint64_t v23 = *((void *)this + 2);
          *(_DWORD *)(a1 + 56) |= 0x20u;
          if (v24 != v23) {
            continue;
          }
        }
        else
        {
          unsigned int *v8 = *v21;
          uint64_t v22 = (unsigned __int8 *)(v21 + 1);
          *((void *)this + 1) = v22;
          *(_DWORD *)(a1 + 56) |= 0x20u;
          if (v22 != (unsigned __int8 *)v17) {
            continue;
          }
        }
        if (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 2u:
        int v11 = TagFallback & 7;
        if (v11 != 2) {
          goto LABEL_42;
        }
        *(_DWORD *)(a1 + 56) |= 2u;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          goto LABEL_16;
        }
        goto LABEL_17;
      case 3u:
        int v11 = TagFallback & 7;
        if (v11 == 2) {
          goto LABEL_22;
        }
        goto LABEL_42;
      case 4u:
        int v11 = TagFallback & 7;
        if (v11 == 2) {
          goto LABEL_29;
        }
        goto LABEL_42;
      case 5u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        uint64_t v19 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v19 < v17) {
          goto LABEL_38;
        }
        goto LABEL_46;
      case 6u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_50;
      default:
        int v11 = TagFallback & 7;
LABEL_42:
        if (v11 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100136B18(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 32), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 36), a2, a4);
  if ((*(_DWORD *)(v5 + 56) & 0x20) == 0)
  {
LABEL_7:
    char v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 48), a2, a4);
  int v10 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_15:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100136C24(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 56))
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
    *(unsigned char *)a2 = 8;
    uint64_t v12 = (char *)a2 + 1;
    if ((v11 & 0x80000000) != 0)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v11, (unint64_t)v12, a3);
      int v6 = *((_DWORD *)this + 14);
      if ((v6 & 2) != 0) {
        goto LABEL_19;
      }
    }
    else if (v11 > 0x7F)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v12, a3);
      int v6 = *((_DWORD *)this + 14);
      if ((v6 & 2) != 0) {
        goto LABEL_19;
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v11;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      int v6 = *((_DWORD *)this + 14);
      if ((v6 & 2) != 0) {
        goto LABEL_19;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_31;
  }
  int v6 = *((_DWORD *)this + 14);
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_19:
  uint64_t v13 = *((void *)this + 2);
  *(unsigned char *)uint64_t v4 = 18;
  if (*(char *)(v13 + 23) < 0)
  {
    int v14 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v13 + 8);
    if (v14 <= 0x7F) {
      goto LABEL_21;
    }
  }
  else
  {
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v13 + 23);
    if (*(unsigned __int8 *)(v13 + 23) <= 0x7Fu)
    {
LABEL_21:
      *((unsigned char *)v4 + 1) = (_BYTE)v14;
      int v15 = v4 + 2;
      goto LABEL_24;
    }
  }
  int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v4 + 1, a3);
LABEL_24:
  int v16 = *(char *)(v13 + 23);
  if (v16 >= 0) {
    unint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13;
  }
  else {
    unint64_t v17 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v13;
  }
  if (v16 >= 0) {
    uint64_t v18 = (const void *)*(unsigned __int8 *)(v13 + 23);
  }
  else {
    uint64_t v18 = (const void *)*(unsigned int *)(v13 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v17, v18, v15, a4);
  int v6 = *((_DWORD *)this + 14);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_43;
  }
LABEL_31:
  uint64_t v19 = *((void *)this + 3);
  *(unsigned char *)uint64_t v4 = 26;
  if (*(char *)(v19 + 23) < 0)
  {
    unsigned int v20 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v19 + 8);
    if (v20 <= 0x7F) {
      goto LABEL_33;
    }
  }
  else
  {
    unsigned int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v19 + 23);
    if (*(unsigned __int8 *)(v19 + 23) <= 0x7Fu)
    {
LABEL_33:
      *((unsigned char *)v4 + 1) = (_BYTE)v20;
      int v21 = v4 + 2;
      goto LABEL_36;
    }
  }
  int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, (int)v4 + 1, a3);
LABEL_36:
  int v22 = *(char *)(v19 + 23);
  if (v22 >= 0) {
    uint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19;
  }
  else {
    uint64_t v23 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v19;
  }
  if (v22 >= 0) {
    uint64_t v24 = (const void *)*(unsigned __int8 *)(v19 + 23);
  }
  else {
    uint64_t v24 = (const void *)*(unsigned int *)(v19 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v23, v24, v21, a4);
  int v6 = *((_DWORD *)this + 14);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_55;
  }
LABEL_43:
  uint64_t v25 = *((void *)this + 5);
  *(unsigned char *)uint64_t v4 = 34;
  if (*(char *)(v25 + 23) < 0)
  {
    unsigned int v26 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v25 + 8);
    if (v26 <= 0x7F) {
      goto LABEL_45;
    }
  }
  else
  {
    unsigned int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v25 + 23);
    if (*(unsigned __int8 *)(v25 + 23) <= 0x7Fu)
    {
LABEL_45:
      *((unsigned char *)v4 + 1) = (_BYTE)v26;
      int v27 = v4 + 2;
      goto LABEL_48;
    }
  }
  int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, (int)v4 + 1, a3);
LABEL_48:
  int v28 = *(char *)(v25 + 23);
  if (v28 >= 0) {
    uint64_t v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25;
  }
  else {
    uint64_t v29 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v25;
  }
  if (v28 >= 0) {
    uint64_t v30 = (const void *)*(unsigned __int8 *)(v25 + 23);
  }
  else {
    uint64_t v30 = (const void *)*(unsigned int *)(v25 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v29, v30, v27, a4);
  if ((*((_DWORD *)this + 14) & 0x10) == 0)
  {
LABEL_6:
    if ((*((unsigned char *)this + 56) & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_59:
    uint64_t v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    *(unsigned char *)uint64_t v4 = 48;
    if (v32 > 0x7F)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v32, (int)v4 + 1, a3);
      uint64_t v34 = (void *)*((void *)this + 1);
      uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      int v7 = v34;
      if (!v34) {
        return v4;
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v32;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      int v33 = (void *)*((void *)this + 1);
      uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      int v7 = v33;
      if (!v33) {
        return v4;
      }
    }
    goto LABEL_8;
  }
LABEL_55:
  unint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  *(unsigned char *)uint64_t v4 = 40;
  if (v31 > 0x7F)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, (int)v4 + 1, a3);
    if ((*((unsigned char *)this + 56) & 0x20) != 0) {
      goto LABEL_59;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v31;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((*((unsigned char *)this + 56) & 0x20) != 0) {
      goto LABEL_59;
    }
  }
LABEL_7:
  char v9 = (void *)*((void *)this + 1);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v7 = v9;
  if (!v9) {
    return v4;
  }
LABEL_8:
  if (*v7 == v7[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, v4, a3);
}

uint64_t sub_100136EC4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 56);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v6 = *(void **)(a1 + 8);
    if (!v6) {
      goto LABEL_28;
    }
    goto LABEL_55;
  }
  if (*(unsigned char *)(a1 + 56))
  {
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v7 & 0x80000000) != 0)
    {
      uint64_t v4 = 11;
      if ((v3 & 2) == 0) {
        goto LABEL_23;
      }
    }
    else if (v7 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 56);
      if ((v3 & 2) == 0) {
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_23;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 56) & 2) == 0) {
      goto LABEL_23;
    }
  }
  uint64_t v8 = *(void *)(a1 + 16);
  int v9 = *(unsigned __int8 *)(v8 + 23);
  char v10 = v9;
  uint64_t v11 = *(void *)(v8 + 8);
  if ((v9 & 0x80u) == 0) {
    unint64_t v12 = *(unsigned __int8 *)(v8 + 23);
  }
  else {
    unint64_t v12 = v11;
  }
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12, a2);
    int v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v11 = *(void *)(v8 + 8);
    int v3 = *(_DWORD *)(a1 + 56);
    char v10 = *(unsigned char *)(v8 + 23);
  }
  else
  {
    int v13 = 1;
  }
  if (v10 < 0) {
    int v9 = v11;
  }
  uint64_t v4 = (v4 + v13 + v9 + 1);
LABEL_23:
  if ((v3 & 4) != 0)
  {
    uint64_t v15 = *(void *)(a1 + 24);
    int v16 = *(unsigned __int8 *)(v15 + 23);
    char v17 = v16;
    uint64_t v18 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      unint64_t v19 = *(unsigned __int8 *)(v15 + 23);
    }
    else {
      unint64_t v19 = v18;
    }
    if (v19 >= 0x80)
    {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19, a2);
      int v16 = *(unsigned __int8 *)(v15 + 23);
      uint64_t v18 = *(void *)(v15 + 8);
      int v3 = *(_DWORD *)(a1 + 56);
      char v17 = *(unsigned char *)(v15 + 23);
    }
    else
    {
      int v20 = 1;
    }
    if (v17 < 0) {
      int v16 = v18;
    }
    uint64_t v4 = (v4 + v20 + v16 + 1);
    if ((v3 & 8) == 0)
    {
LABEL_25:
      if ((v3 & 0x10) == 0) {
        goto LABEL_26;
      }
      goto LABEL_47;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_25;
  }
  uint64_t v21 = *(void *)(a1 + 40);
  int v22 = *(unsigned __int8 *)(v21 + 23);
  char v23 = v22;
  uint64_t v24 = *(void *)(v21 + 8);
  if ((v22 & 0x80u) == 0) {
    unint64_t v25 = *(unsigned __int8 *)(v21 + 23);
  }
  else {
    unint64_t v25 = v24;
  }
  if (v25 >= 0x80)
  {
    int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25, a2);
    int v22 = *(unsigned __int8 *)(v21 + 23);
    uint64_t v24 = *(void *)(v21 + 8);
    int v3 = *(_DWORD *)(a1 + 56);
    char v23 = *(unsigned char *)(v21 + 23);
  }
  else
  {
    int v26 = 1;
  }
  if (v23 < 0) {
    int v22 = v24;
  }
  uint64_t v4 = (v4 + v26 + v22 + 1);
  if ((v3 & 0x10) == 0)
  {
LABEL_26:
    if ((v3 & 0x20) == 0) {
      goto LABEL_27;
    }
LABEL_51:
    int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 48);
    if (v28 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28, a2)+ 1+ v4;
      uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v6 = *(void **)(a1 + 8);
      if (!v6) {
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v6 = *(void **)(a1 + 8);
      if (!v6) {
        goto LABEL_28;
      }
    }
    goto LABEL_55;
  }
LABEL_47:
  int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
  if (v27 >= 0x80)
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2)+ 1+ v4;
    if ((*(_DWORD *)(a1 + 56) & 0x20) != 0) {
      goto LABEL_51;
    }
  }
  else
  {
    uint64_t v4 = (v4 + 2);
    if ((v3 & 0x20) != 0) {
      goto LABEL_51;
    }
  }
LABEL_27:
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v6 = *(void **)(a1 + 8);
  if (!v6)
  {
LABEL_28:
    *(_DWORD *)(a1 + 52) = v4;
    return v4;
  }
LABEL_55:
  if (*v6 == v6[1]) {
    goto LABEL_28;
  }
  uint64_t v29 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
      + v4;
  *(_DWORD *)(a1 + 52) = v29;
  return v29;
}

uint64_t sub_100137110(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001360F8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001371F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100137204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100137218(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001372A4()
{
  return 1;
}

uint64_t sub_1001372AC()
{
  uint64_t v0 = qword_10047DAA8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001204DC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DA70;
}

void sub_10013733C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100137350(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 56);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 56))
  {
    int v7 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 56) |= 1u;
    uint64_t v8 = *(std::string **)(a1 + 16);
    if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v8, v7);
    int v4 = *(_DWORD *)(a2 + 56);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_16;
    }
  }
  else if ((*(unsigned char *)(a2 + 56) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v9 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 56) |= 2u;
  *(_DWORD *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  int v10 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 56) |= 4u;
  *(_DWORD *)(a1 + 28) = v10;
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
LABEL_20:
    uint64_t v13 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 56) |= 0x10u;
    *(void *)(a1 + 40) = v13;
    if ((*(_DWORD *)(a2 + 56) & 0x20) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_10;
  }
LABEL_17:
  uint64_t v11 = *(const std::string **)(a2 + 32);
  *(_DWORD *)(a1 + 56) |= 8u;
  unint64_t v12 = *(std::string **)(a1 + 32);
  if (v12 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v12, v11);
  int v4 = *(_DWORD *)(a2 + 56);
  if ((v4 & 0x10) != 0) {
    goto LABEL_20;
  }
LABEL_9:
  if ((v4 & 0x20) != 0)
  {
LABEL_10:
    char v5 = *(unsigned char *)(a2 + 48);
    *(_DWORD *)(a1 + 56) |= 0x20u;
    *(unsigned char *)(a1 + 48) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100137508(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013751C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100137530(void *a1)
{
  *a1 = off_100457A50;
  uint64_t v2 = a1[2];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  uint64_t v4 = a1[4];
  if ((_UNKNOWN *)v4 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    operator delete();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10013760C(void *a1)
{
  sub_100137530(a1);

  operator delete();
}

uint64_t sub_100137644(uint64_t result, int a2)
{
  *(_DWORD *)(result + 52) = a2;
  return result;
}

void sub_10013764C()
{
}

void sub_1001376C8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001376F0(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 56)) {
    goto LABEL_14;
  }
  if ((*(unsigned char *)(a1 + 56) & 1) == 0
    || (uint64_t v1 = *(void *)(a1 + 16), (_UNKNOWN *)v1 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
  {
LABEL_6:
    *(void *)(a1 + 24) = 0;
    if ((*(unsigned char *)(a1 + 56) & 8) != 0) {
      goto LABEL_7;
    }
    goto LABEL_13;
  }
  if ((*(char *)(v1 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v1 = 0;
    *(unsigned char *)(v1 + 23) = 0;
    goto LABEL_6;
  }
  **(unsigned char **)uint64_t v1 = 0;
  *(void *)(v1 + 8) = 0;
  *(void *)(a1 + 24) = 0;
  if ((*(unsigned char *)(a1 + 56) & 8) != 0)
  {
LABEL_7:
    uint64_t v2 = *(void *)(a1 + 32);
    if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)uint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v2 = 0;
        *(unsigned char *)(v2 + 23) = 0;
      }
    }
  }
LABEL_13:
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 0;
LABEL_14:
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 12) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100137790(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (unsigned int *)(a1 + 24);
  int v7 = (unsigned int *)(a1 + 28);
  uint64_t v8 = (unint64_t *)(a1 + 40);
  unsigned int v9 = a1 + 8;
  while (1)
  {
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 < *((void *)this + 2) && (*v10 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 56) |= 1u;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        uint64_t v15 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 != 16) {
          continue;
        }
        int v16 = v15 + 1;
        *((void *)this + 1) = v16;
LABEL_18:
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          char v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          *(_DWORD *)(a1 + 56) |= 2u;
          if ((unint64_t)v17 >= v14) {
            continue;
          }
        }
        else
        {
          *int v6 = *v16;
          char v17 = v16 + 1;
          *((void *)this + 1) = v17;
          *(_DWORD *)(a1 + 56) |= 2u;
          if ((unint64_t)v17 >= v14) {
            continue;
          }
        }
        if (*v17 != 24) {
          continue;
        }
        uint64_t v18 = v17 + 1;
        *((void *)this + 1) = v18;
        if ((unint64_t)v18 >= v14) {
          goto LABEL_63;
        }
LABEL_60:
        if (*v18 < 0)
        {
LABEL_63:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          int v26 = (unsigned char *)*((void *)this + 1);
          unint64_t v28 = *((void *)this + 2);
          int v27 = *(_DWORD *)(a1 + 56) | 4;
          *(_DWORD *)(a1 + 56) = v27;
          if ((unint64_t)v26 >= v28) {
            continue;
          }
        }
        else
        {
          unsigned int *v7 = *v18;
          int v26 = v18 + 1;
          *((void *)this + 1) = v26;
          int v27 = *(_DWORD *)(a1 + 56) | 4;
          *(_DWORD *)(a1 + 56) = v27;
          if ((unint64_t)v26 >= v14) {
            continue;
          }
        }
        if (*v26 != 34) {
          continue;
        }
        *((void *)this + 1) = v26 + 1;
        *(_DWORD *)(a1 + 56) = v27 | 8;
        if (*(_UNKNOWN **)(a1 + 32) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_27:
        }
          operator new();
LABEL_28:
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v20 = (unsigned char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        if ((unint64_t)v20 >= v19 || *v20 != 40) {
          continue;
        }
        uint64_t v21 = v20 + 1;
        *((void *)this + 1) = v21;
        if ((unint64_t)v21 >= v19) {
          goto LABEL_43;
        }
LABEL_35:
        if (*v21 < 0)
        {
LABEL_43:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v8);
          if (!result) {
            return result;
          }
          int v22 = (unsigned char *)*((void *)this + 1);
          unint64_t v19 = *((void *)this + 2);
          *(_DWORD *)(a1 + 56) |= 0x10u;
          if ((unint64_t)v22 >= v19) {
            continue;
          }
        }
        else
        {
          unint64_t *v8 = *v21;
          int v22 = v21 + 1;
          *((void *)this + 1) = v22;
          *(_DWORD *)(a1 + 56) |= 0x10u;
          if ((unint64_t)v22 >= v19) {
            continue;
          }
        }
        if (*v22 == 48)
        {
          char v23 = v22 + 1;
          *((void *)this + 1) = v23;
LABEL_47:
          unsigned int v29 = 0;
          if ((unint64_t)v23 >= v19 || *v23 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v29);
            if (!result) {
              return result;
            }
            unsigned int v24 = v29;
            unint64_t v25 = (unsigned __int8 *)*((void *)this + 1);
            unint64_t v19 = *((void *)this + 2);
          }
          else
          {
            unsigned int v24 = *v23;
            unint64_t v25 = (unsigned __int8 *)(v23 + 1);
            *((void *)this + 1) = v25;
          }
          *(unsigned char *)(a1 + 48) = v24 != 0;
          *(_DWORD *)(a1 + 56) |= 0x20u;
          if (v25 == (unsigned __int8 *)v19
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
        }
        break;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        int v16 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_18;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v18 >= v14) {
          goto LABEL_63;
        }
        goto LABEL_60;
      case 4u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 56) |= 8u;
        if (*(_UNKNOWN **)(a1 + 32) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          goto LABEL_27;
        }
        goto LABEL_28;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        uint64_t v21 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        if ((unint64_t)v21 < v19) {
          goto LABEL_35;
        }
        goto LABEL_43;
      case 6u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        char v23 = (char *)*((void *)this + 1);
        unint64_t v19 = *((void *)this + 2);
        goto LABEL_47;
      default:
        int v12 = TagFallback & 7;
LABEL_39:
        if (v12 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v9, a4))continue; {
        return 0;
        }
    }
  }
}

uint64_t sub_100137BE0(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 56);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(v5 + 40), (unint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 56) & 0x20) == 0)
  {
LABEL_7:
    unsigned int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 48), (BOOL)a2, a4);
  int v10 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_15:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100137CEC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 14);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
    goto LABEL_21;
  }
  uint64_t v11 = *((void *)this + 2);
  *(unsigned char *)a2 = 10;
  unsigned int v12 = a2 + 1;
  if (*(char *)(v11 + 23) < 0)
  {
    uint64_t v13 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v11 + 8);
    if (v13 <= 0x7F) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v11 + 23);
    if (*(unsigned __int8 *)(v11 + 23) <= 0x7Fu)
    {
LABEL_11:
      *((unsigned char *)v4 + 1) = (_BYTE)v13;
      int v14 = v4 + 2;
      goto LABEL_14;
    }
  }
  int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v12, a3);
LABEL_14:
  int v15 = *(char *)(v11 + 23);
  if (v15 >= 0) {
    int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11;
  }
  else {
    int v16 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v11;
  }
  if (v15 >= 0) {
    char v17 = (const void *)*(unsigned __int8 *)(v11 + 23);
  }
  else {
    char v17 = (const void *)*(unsigned int *)(v11 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v16, v17, v14, a4);
  if ((*((_DWORD *)this + 14) & 2) == 0)
  {
LABEL_3:
    if ((*((unsigned char *)this + 56) & 4) == 0) {
      goto LABEL_4;
    }
LABEL_25:
    unint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    *(unsigned char *)uint64_t v4 = 24;
    if (v19 > 0x7F)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)v4 + 1, a3);
      int v7 = *((_DWORD *)this + 14);
      if ((v7 & 8) != 0) {
        goto LABEL_29;
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v19;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      int v7 = *((_DWORD *)this + 14);
      if ((v7 & 8) != 0) {
        goto LABEL_29;
      }
    }
LABEL_5:
    if ((v7 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_41;
  }
LABEL_21:
  uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  *(unsigned char *)uint64_t v4 = 16;
  if (v18 > 0x7F)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)v4 + 1, a3);
    if ((*((unsigned char *)this + 56) & 4) != 0) {
      goto LABEL_25;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v18;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((*((unsigned char *)this + 56) & 4) != 0) {
      goto LABEL_25;
    }
  }
LABEL_4:
  int v7 = *((_DWORD *)this + 14);
  if ((v7 & 8) == 0) {
    goto LABEL_5;
  }
LABEL_29:
  uint64_t v20 = *((void *)this + 4);
  *(unsigned char *)uint64_t v4 = 34;
  if (*(char *)(v20 + 23) < 0)
  {
    uint64_t v21 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v20 + 8);
    if (v21 <= 0x7F) {
      goto LABEL_31;
    }
  }
  else
  {
    uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v20 + 23);
    if (*(unsigned __int8 *)(v20 + 23) <= 0x7Fu)
    {
LABEL_31:
      *((unsigned char *)v4 + 1) = (_BYTE)v21;
      int v22 = v4 + 2;
      goto LABEL_34;
    }
  }
  int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (int)v4 + 1, a3);
LABEL_34:
  int v23 = *(char *)(v20 + 23);
  if (v23 >= 0) {
    unsigned int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20;
  }
  else {
    unsigned int v24 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v20;
  }
  if (v23 >= 0) {
    unint64_t v25 = (const void *)*(unsigned __int8 *)(v20 + 23);
  }
  else {
    unint64_t v25 = (const void *)*(unsigned int *)(v20 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v24, v25, v22, a4);
  int v7 = *((_DWORD *)this + 14);
  if ((v7 & 0x10) == 0)
  {
LABEL_6:
    if ((v7 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 5);
  *(unsigned char *)uint64_t v4 = 40;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v26, (unint64_t)v4 + 1, a3);
  if ((*((_DWORD *)this + 14) & 0x20) == 0)
  {
LABEL_7:
    int v10 = (void *)*((void *)this + 1);
    unsigned int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v8 = v10;
    if (!v10) {
      return v4;
    }
    goto LABEL_43;
  }
LABEL_42:
  char v27 = *((unsigned char *)this + 48);
  *(unsigned char *)uint64_t v4 = 48;
  *((unsigned char *)v4 + 1) = v27;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  unint64_t v28 = (void *)*((void *)this + 1);
  unsigned int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v8 = v28;
  if (!v28) {
    return v4;
  }
LABEL_43:
  if (*v8 == v8[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, v4, a3);
}

uint64_t sub_100137F08(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 56);
  if ((_BYTE)v3)
  {
    if ((*(unsigned char *)(a1 + 56) & 1) == 0)
    {
      LODWORD(v4) = 0;
      if ((*(unsigned char *)(a1 + 56) & 2) == 0) {
        goto LABEL_22;
      }
      goto LABEL_18;
    }
    uint64_t v8 = *(void *)(a1 + 16);
    int v9 = *(unsigned __int8 *)(v8 + 23);
    if ((v9 & 0x80u) == 0) {
      unint64_t v10 = *(unsigned __int8 *)(v8 + 23);
    }
    else {
      unint64_t v10 = *(void *)(v8 + 8);
    }
    if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10, a2);
      int v12 = *(unsigned __int8 *)(v8 + 23);
      int v3 = *(_DWORD *)(a1 + 56);
      if (*(char *)(v8 + 23) < 0) {
        int v12 = *(void *)(v8 + 8);
      }
      LODWORD(v4) = v11 + 1 + v12;
      if ((v3 & 2) == 0)
      {
LABEL_22:
        if ((v3 & 4) == 0)
        {
          if ((v3 & 8) == 0) {
            goto LABEL_24;
          }
LABEL_36:
          uint64_t v18 = *(void *)(a1 + 32);
          int v19 = *(unsigned __int8 *)(v18 + 23);
          char v20 = v19;
          uint64_t v21 = *(void *)(v18 + 8);
          if ((v19 & 0x80u) == 0) {
            unint64_t v22 = *(unsigned __int8 *)(v18 + 23);
          }
          else {
            unint64_t v22 = v21;
          }
          if (v22 >= 0x80)
          {
            int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v22, a2);
            int v19 = *(unsigned __int8 *)(v18 + 23);
            uint64_t v21 = *(void *)(v18 + 8);
            int v3 = *(_DWORD *)(a1 + 56);
            char v20 = *(unsigned char *)(v18 + 23);
          }
          else
          {
            int v23 = 1;
          }
          if (v20 < 0) {
            int v19 = v21;
          }
          LODWORD(v4) = v4 + v23 + v19 + 1;
          if ((v3 & 0x10) == 0)
          {
LABEL_26:
            if ((v3 & 0x20) != 0) {
              uint64_t v4 = (v4 + 2);
            }
            else {
              uint64_t v4 = v4;
            }
            uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
            int v6 = *(void **)(a1 + 8);
            if (!v6) {
              goto LABEL_6;
            }
            goto LABEL_30;
          }
LABEL_25:
          LODWORD(v4) = v4
                      + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 40), (unint64_t)a2)+ 1;
          int v3 = *(_DWORD *)(a1 + 56);
          goto LABEL_26;
        }
        int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
        if (v16 >= 0x80)
        {
          int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
          int v3 = *(_DWORD *)(a1 + 56);
          LODWORD(v4) = v17 + 1 + v4;
          if ((v3 & 8) != 0) {
            goto LABEL_36;
          }
        }
        else
        {
          LODWORD(v4) = v4 + 2;
          if ((v3 & 8) != 0) {
            goto LABEL_36;
          }
        }
LABEL_24:
        if ((v3 & 0x10) == 0) {
          goto LABEL_26;
        }
        goto LABEL_25;
      }
    }
    else
    {
      if ((v9 & 0x80u) != 0) {
        int v9 = *(void *)(v8 + 8);
      }
      LODWORD(v4) = v9 + 2;
      if ((v3 & 2) == 0) {
        goto LABEL_22;
      }
    }
LABEL_18:
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
    if (v13 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 56);
    }
    else
    {
      int v14 = 2;
    }
    LODWORD(v4) = v14 + v4;
    goto LABEL_22;
  }
  uint64_t v4 = 0;
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v6 = *(void **)(a1 + 8);
  if (!v6)
  {
LABEL_6:
    *(_DWORD *)(a1 + 52) = v4;
    return v4;
  }
LABEL_30:
  if (*v6 == v6[1]) {
    goto LABEL_6;
  }
  uint64_t v15 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
      + v4;
  *(_DWORD *)(a1 + 52) = v15;
  return v15;
}

uint64_t sub_1001380DC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100137350((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001381BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001381D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001381E4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100138270(uint64_t a1)
{
  return *(_DWORD *)(a1 + 56) & 1;
}

uint64_t sub_10013827C()
{
  uint64_t v0 = qword_10047DAA8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001204DC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DA88;
}

void sub_10013830C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100138320(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
    sub_10013989C((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 32), a2 + 32);
    LOBYTE(v4) = *(unsigned char *)(a2 + 64);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    sub_10013989C((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 32), a2 + 32);
    LOBYTE(v4) = *(unsigned char *)(a2 + 64);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 64) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047EAF0 + 16);
    }
    sub_1000E2E2C(v5, v6);
    int v4 = *(_DWORD *)(a2 + 64);
  }
  if ((v4 & 2) == 0)
  {
    if ((v4 & 4) == 0) {
      goto LABEL_12;
    }
LABEL_16:
    int v10 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 64) |= 4u;
    *(_DWORD *)(a1 + 28) = v10;
    if ((*(_DWORD *)(a2 + 64) & 8) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_13;
  }
  int v9 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 64) |= 2u;
  *(_DWORD *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_12:
  if ((v4 & 8) != 0)
  {
LABEL_13:
    int v7 = *(_DWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 64) |= 8u;
    *(_DWORD *)(a1 + 56) = v7;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100138494()
{
}

void sub_1001384B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001384CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001384E0(uint64_t a1)
{
  *(void *)a1 = off_100457B00;
  if (qword_10047EAF0 != a1)
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  int v3 = *(_DWORD *)(a1 + 44);
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i < v3; ++i)
    {
      uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8 * i);
      if (v5)
      {
        (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
        int v3 = *(_DWORD *)(a1 + 44);
      }
    }
  }
  if (*(void *)(a1 + 32)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001385EC(uint64_t a1)
{
  sub_1001384E0(a1);

  operator delete();
}

uint64_t sub_100138624(uint64_t result, int a2)
{
  *(_DWORD *)(result + 60) = a2;
  return result;
}

void sub_10013862C()
{
}

void sub_10013869C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001386C4(wireless_diagnostics::google::protobuf::UnknownFieldSet *this)
{
  uint64_t v1 = this;
  if (*((unsigned char *)this + 64))
  {
    if (*((unsigned char *)this + 64))
    {
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)*((void *)this + 2);
      if (this) {
        this = sub_1000E3098((uint64_t)this);
      }
    }
    *((void *)v1 + 3) = 0;
    *((_DWORD *)v1 + 14) = 0;
  }
  if (*((int *)v1 + 10) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t v3 = *(void *)(*((void *)v1 + 4) + 8 * v2);
      this = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(*(uint64_t (**)(uint64_t))(*(void *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *((int *)v1 + 10));
  }
  uint64_t v5 = *((void *)v1 + 1);
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v1 + 8);
  *((_DWORD *)v4 + 8) = 0;
  *((_DWORD *)v4 + 14) = 0;
  if (v5)
  {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_100138780(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (unsigned int *)(a1 + 24);
  int v7 = (unsigned int *)(a1 + 28);
  uint64_t v8 = (unsigned int *)(a1 + 56);
  int v9 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 32);
  unsigned int v10 = a1 + 8;
  while (1)
  {
    int v11 = (char *)*((void *)this + 1);
    if ((unint64_t)v11 < *((void *)this + 2) && (*v11 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v11;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_25;
        }
        *(_DWORD *)(a1 + 64) |= 1u;
        uint64_t v14 = *(void *)(a1 + 16);
        if (!v14) {
          operator new();
        }
        unsigned int v47 = 0;
        uint64_t v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v47))return 0; {
        }
          }
        else
        {
          unsigned int v47 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v20 = *((_DWORD *)this + 14);
        int v21 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0;
        }
        int v22 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v47);
        if (!sub_1000E30B8(v14, this, v23, v24) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v22);
        int v25 = *((_DWORD *)this + 14);
        BOOL v26 = __OFSUB__(v25, 1);
        int v27 = v25 - 1;
        if (v27 < 0 == v26) {
          *((_DWORD *)this + 14) = v27;
        }
        unint64_t v28 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v28 >= v16 || *v28 != 16) {
          continue;
        }
        int v17 = v28 + 1;
        *((void *)this + 1) = v17;
        if ((unint64_t)v17 >= v16) {
          goto LABEL_40;
        }
        goto LABEL_37;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v17 >= v16) {
          goto LABEL_40;
        }
LABEL_37:
        if (*v17 < 0)
        {
LABEL_40:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          unsigned int v29 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
          *(_DWORD *)(a1 + 64) |= 2u;
          if ((unint64_t)v29 >= v16) {
            continue;
          }
        }
        else
        {
          *uint64_t v6 = *v17;
          unsigned int v29 = v17 + 1;
          *((void *)this + 1) = v29;
          *(_DWORD *)(a1 + 64) |= 2u;
          if ((unint64_t)v29 >= v16) {
            continue;
          }
        }
        if (*v29 != 24) {
          continue;
        }
        uint64_t v18 = v29 + 1;
        *((void *)this + 1) = v18;
        if ((unint64_t)v18 >= v16) {
          goto LABEL_47;
        }
LABEL_44:
        if (*v18 < 0)
        {
LABEL_47:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
          if (!result) {
            return result;
          }
          unint64_t v31 = (unsigned char *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
          *(_DWORD *)(a1 + 64) |= 4u;
          if ((unint64_t)v31 >= v16) {
            continue;
          }
        }
        else
        {
          unsigned int *v7 = *v18;
          unint64_t v31 = v18 + 1;
          *((void *)this + 1) = v31;
          *(_DWORD *)(a1 + 64) |= 4u;
          if ((unint64_t)v31 >= v16) {
            continue;
          }
        }
        if (*v31 != 32) {
          continue;
        }
        int v19 = v31 + 1;
        *((void *)this + 1) = v19;
        if ((unint64_t)v19 >= v16) {
          goto LABEL_54;
        }
LABEL_51:
        if (*v19 < 0)
        {
LABEL_54:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
          if (!result) {
            return result;
          }
          uint64_t v32 = (unsigned char *)*((void *)this + 1);
          unint64_t v33 = *((void *)this + 2);
          *(_DWORD *)(a1 + 64) |= 8u;
          if ((unint64_t)v32 >= v33) {
            continue;
          }
        }
        else
        {
          unsigned int *v8 = *v19;
          uint64_t v32 = v19 + 1;
          *((void *)this + 1) = v32;
          *(_DWORD *)(a1 + 64) |= 8u;
          if ((unint64_t)v32 >= v16) {
            continue;
          }
        }
        if (*v32 != 42) {
          continue;
        }
        do
        {
          *((void *)this + 1) = v32 + 1;
LABEL_58:
          int v34 = *(_DWORD *)(a1 + 44);
          uint64_t v35 = *(int *)(a1 + 40);
          if ((int)v35 >= v34)
          {
            if (v34 == *(_DWORD *)(a1 + 48))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9, v34 + 1);
              int v34 = *(_DWORD *)(a1 + 44);
            }
            *(_DWORD *)(a1 + 44) = v34 + 1;
            operator new();
          }
          uint64_t v36 = *(void *)(a1 + 32);
          *(_DWORD *)(a1 + 40) = v35 + 1;
          uint64_t v37 = *(void *)(v36 + 8 * v35);
          unsigned int v48 = 0;
          int v38 = (char *)*((void *)this + 1);
          if ((unint64_t)v38 >= *((void *)this + 2) || *v38 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v48))return 0; {
          }
            }
          else
          {
            unsigned int v48 = *v38;
            *((void *)this + 1) = v38 + 1;
          }
          int v39 = *((_DWORD *)this + 14);
          int v40 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v39 + 1;
          if (v39 >= v40) {
            return 0;
          }
          int v41 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v48);
          if (!sub_100137790(v37, this, v42, v43) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v41);
          int v44 = *((_DWORD *)this + 14);
          BOOL v26 = __OFSUB__(v44, 1);
          int v45 = v44 - 1;
          if (v45 < 0 == v26) {
            *((_DWORD *)this + 14) = v45;
          }
          uint64_t v32 = (unsigned char *)*((void *)this + 1);
          uint64_t v46 = (unsigned char *)*((void *)this + 2);
        }
        while (v32 < v46 && *v32 == 42);
        if (v32 == v46 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v18 >= v16) {
          goto LABEL_47;
        }
        goto LABEL_44;
      case 4u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v19 >= v16) {
          goto LABEL_54;
        }
        goto LABEL_51;
      case 5u:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_25;
        }
        goto LABEL_58;
      default:
        int v13 = TagFallback & 7;
LABEL_25:
        if (v13 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v10, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_100138CBC()
{
}

void sub_100138CE0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100138D1C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 64);
  if (v6)
  {
    uint64_t v7 = *(void *)(result + 16);
    if (v7)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
      int v6 = *(_DWORD *)(v5 + 64);
      if ((v6 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047EAF0 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 64);
      if ((v6 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_13:
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 56), a2, a4);
    if (*(int *)(v5 + 40) < 1) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), a2, a4);
  if ((*(_DWORD *)(v5 + 64) & 8) != 0) {
    goto LABEL_13;
  }
LABEL_5:
  if (*(int *)(v5 + 40) < 1) {
    goto LABEL_16;
  }
LABEL_14:
  uint64_t v8 = 0;
  do
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(*(void *)(v5 + 32) + 8 * v8++), a2, a4);
  while (v8 < *(int *)(v5 + 40));
LABEL_16:
  int v11 = *(void **)(v5 + 8);
  unsigned int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v9 = v11;
  if (v11 && *v9 != v9[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, a3);
  }
  return result;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100138E5C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v4 = a2;
  int v6 = *((_DWORD *)this + 16);
  if (v6)
  {
    int v11 = (unsigned int *)*((void *)this + 2);
    if (v11)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v12 = a2 + 1;
      int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[8];
      if (v13 <= 0x7F) {
        goto LABEL_13;
      }
    }
    else
    {
      int v11 = *(unsigned int **)(qword_10047EAF0 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v12 = a2 + 1;
      int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[8];
      if (v13 <= 0x7F)
      {
LABEL_13:
        *((unsigned char *)v4 + 1) = (_BYTE)v13;
        int v4 = sub_1000E3350((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3);
        if ((*((_DWORD *)this + 16) & 2) != 0) {
          goto LABEL_17;
        }
LABEL_3:
        if ((*((unsigned char *)this + 64) & 4) == 0) {
          goto LABEL_4;
        }
LABEL_21:
        int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
        *(unsigned char *)int v4 = 24;
        if (v17 > 0x7F)
        {
          int v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)v4 + 1, a3);
          if ((*((unsigned char *)this + 64) & 8) != 0) {
            goto LABEL_25;
          }
        }
        else
        {
          *((unsigned char *)v4 + 1) = (_BYTE)v17;
          int v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
          if ((*((unsigned char *)this + 64) & 8) != 0) {
            goto LABEL_25;
          }
        }
LABEL_5:
        if (*((int *)this + 10) < 1) {
          goto LABEL_29;
        }
        goto LABEL_6;
      }
    }
    uint64_t v14 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v12, a3);
    int v4 = sub_1000E3350((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v14, v15);
    if ((*((_DWORD *)this + 16) & 2) != 0) {
      goto LABEL_17;
    }
    goto LABEL_3;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_17:
  unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  *(unsigned char *)int v4 = 16;
  if (v16 > 0x7F)
  {
    int v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)v4 + 1, a3);
    if ((*((unsigned char *)this + 64) & 4) != 0) {
      goto LABEL_21;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v16;
    int v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((*((unsigned char *)this + 64) & 4) != 0) {
      goto LABEL_21;
    }
  }
LABEL_4:
  if ((*((unsigned char *)this + 64) & 8) == 0) {
    goto LABEL_5;
  }
LABEL_25:
  uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  *(unsigned char *)int v4 = 32;
  if (v18 > 0x7F)
  {
    int v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)v4 + 1, a3);
    if (*((int *)this + 10) < 1) {
      goto LABEL_29;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v18;
    int v4 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if (*((int *)this + 10) < 1) {
      goto LABEL_29;
    }
  }
LABEL_6:
  uint64_t v7 = 0;
  do
  {
    int v9 = *(unsigned int **)(*((void *)this + 4) + 8 * v7);
    *(unsigned char *)int v4 = 42;
    unsigned int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9[13];
    if (v10 > 0x7F)
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v10;
      uint64_t v8 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    int v4 = sub_100137CEC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v9, v8, a3, a4);
    ++v7;
  }
  while (v7 < *((int *)this + 10));
LABEL_29:
  int v21 = (void *)*((void *)this + 1);
  int v20 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v19 = v21;
  if (!v21 || *v19 == v19[1]) {
    return v4;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v20, v4, a3);
}

uint64_t sub_100139084(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 64);
  if (!(_BYTE)v3)
  {
    int v5 = *(_DWORD *)(a1 + 40);
    uint64_t v6 = v5;
    if (v5 < 1) {
      goto LABEL_34;
    }
    goto LABEL_29;
  }
  if ((*(unsigned char *)(a1 + 64) & 1) == 0)
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 64) & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000E3400(v7, a2);
    if (v8 < 0x80) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000E3400(*(void *)(qword_10047EAF0 + 16), a2);
    if (v8 < 0x80)
    {
LABEL_9:
      int v4 = v8 + 2;
      int v3 = *(_DWORD *)(a1 + 64);
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
      goto LABEL_13;
    }
  }
  int v4 = v8
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2)
     + 1;
  int v3 = *(_DWORD *)(a1 + 64);
  if ((v3 & 2) == 0) {
    goto LABEL_17;
  }
LABEL_13:
  int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 64);
  }
  else
  {
    int v10 = 2;
  }
  v4 += v10;
LABEL_17:
  if ((v3 & 4) != 0)
  {
    unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v12 >= 0x80)
    {
      v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2)
          + 1;
      if ((*(_DWORD *)(a1 + 64) & 8) != 0) {
        goto LABEL_25;
      }
    }
    else
    {
      v4 += 2;
      if ((v3 & 8) != 0) {
        goto LABEL_25;
      }
    }
LABEL_19:
    int v11 = *(_DWORD *)(a1 + 40);
    uint64_t v6 = (v11 + v4);
    if (v11 < 1) {
      goto LABEL_34;
    }
    goto LABEL_29;
  }
  if ((v3 & 8) == 0) {
    goto LABEL_19;
  }
LABEL_25:
  int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
  if (v13 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
    int v16 = *(_DWORD *)(a1 + 40);
    uint64_t v6 = (v16 + v15 + 1 + v4);
    if (v16 < 1) {
      goto LABEL_34;
    }
  }
  else
  {
    int v14 = *(_DWORD *)(a1 + 40);
    uint64_t v6 = (v14 + v4 + 2);
    if (v14 < 1) {
      goto LABEL_34;
    }
  }
LABEL_29:
  uint64_t v17 = 0;
  do
  {
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100137F08(*(void *)(*(void *)(a1 + 32) + 8 * v17), a2);
    int v20 = (int)v19;
    if (v19 >= 0x80) {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
    }
    else {
      int v18 = 1;
    }
    uint64_t v6 = (v20 + v6 + v18);
    ++v17;
  }
  while (v17 < *(int *)(a1 + 40));
LABEL_34:
  int v21 = *(void **)(a1 + 8);
  if (v21 && *v21 != v21[1]) {
    uint64_t v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v6;
  }
  *(_DWORD *)(a1 + 60) = v6;
  return v6;
}

uint64_t sub_100139264(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100138320((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100139344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100139358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013936C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001393F8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 64))
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 40))(v2);
      if (!result) {
        return result;
      }
    }
    else
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(qword_10047EAF0 + 16) + 40))(*(void *)(qword_10047EAF0 + 16));
      if (!result) {
        return result;
      }
    }
  }
  if (*(int *)(a1 + 40) < 1) {
    return 1;
  }
  uint64_t v4 = 0;
  do
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 32) + 8 * v4);
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 40))(v5);
    if ((result & 1) == 0) {
      break;
    }
    ++v4;
  }
  while (v4 < *(int *)(a1 + 40));
  return result;
}

uint64_t sub_1001394E8()
{
  uint64_t v0 = qword_10047DAA8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001204DC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DA98;
}

void sub_100139578(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013958C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_100139594(uint64_t a1)
{
  return *(unsigned int *)(a1 + 108);
}

uint64_t sub_10013959C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_1001395A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 156);
}

uint64_t sub_1001395AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_1001395B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 348);
}

uint64_t sub_1001395BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_1001395C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 180);
}

uint64_t sub_1001395CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_1001395D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_1001395DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1001395E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 112);
}

uint64_t sub_1001395EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_1001395F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_1001395FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_100139604(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_10012796C(*(void *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_100139724()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10013974C(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_100131768(*(void *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_100139874()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10013989C(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_100137350(*(void *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_1001399D0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001399FC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  sub_100139C18(a1, a2, a3, a4);
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v4);
  char v7 = 17;
  strcpy(__p, "CLPLogEntry.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  if (!FileByName)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)__p);
  }
  qword_10047DAC0 = *(void *)(FileByName + 80);
  operator new();
}

void sub_100139BAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100139BC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100139BD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100139C18(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10047DAB0 & 1) == 0)
  {
    byte_10047DAB0 = 1;
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/protobuf/clpsensorsurvey/Proto/CLPLogEntry.pb.cc", a4);
    sub_1000E4790(v4, v5, v6, v7);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n\x11CLPLogEntry.proto\x12\x12proto.CLP.LogEntry\x1A\x1BCLPPrivateDataCapture.proto\"\xB2\x02\n\bLogEntry\x12A\n\x11event_record_time\x18\x01 \x01(\v2&.proto.CLP.LogEntry.LogEntry.TimeStamp\x12P\n\x14private_data_capture\x18\x04 \x01(\v22.proto.CLP.LogEntry.PrivateData.PrivateDataCapture\x1A\x8A\x01\n\tTimeStamp\x12\x1A\n\x12cf_absolute_time_s\x18\x01 \x01(\x01\x12\x1C\n\x14mach_absolute_time_s\x18\x02 \x01(\x01\x12\x1E\n\x16mach_continuous_time_s\x18\x03 \x01(\x01\x12#\n\x1Bpipelined_monotonic_time_ns\x18\x04 \x01(\x03*\x04\b\x02\x10\x03", (const void *)0x179, v8);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_100139D7C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100139DA4()
{
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100139DE0()
{
  if (qword_10047EAF8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EAF8 + 8))(qword_10047EAF8);
  }
  if (qword_10047DAC8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DAC8 + 8))(qword_10047DAC8);
  }
  if (qword_10047EB00) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EB00 + 8))(qword_10047EB00);
  }
  uint64_t result = qword_10047DAD8;
  if (qword_10047DAD8)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10047DAD8 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_100139EC8()
{
  uint64_t v0 = qword_10047DAE0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v3[1] = sub_1001399FC;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
  if (!qword_10047EAF8) {
    ((void (*)(void))sub_100139C18)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EB00) {
    sub_100139C18(v1);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_100139FAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100139FC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_100139FC8()
{
}

void sub_10013A030()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10013A058(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 52))
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 11) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10013A07C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    char v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_26;
        }
        unint64_t v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v20;
        *(_DWORD *)(a1 + 52) |= 1u;
        int v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_26;
        }
LABEL_15:
        unint64_t v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v20;
        *(_DWORD *)(a1 + 52) |= 2u;
        int v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 25) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_20:
        unint64_t v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v20;
        *(_DWORD *)(a1 + 52) |= 4u;
        int v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 != 32) {
          continue;
        }
        int v14 = v13 + 1;
        *((void *)this + 1) = v14;
        unint64_t v20 = 0;
        if ((unint64_t)v14 >= v12) {
          goto LABEL_33;
        }
LABEL_30:
        int v15 = *v14;
        if ((v15 & 0x80000000) == 0)
        {
          int v16 = v14 + 1;
          *((void *)this + 1) = v16;
          *(void *)(a1 + 40) = v15;
          *(_DWORD *)(a1 + 52) |= 8u;
          if (v16 == (char *)v12) {
            goto LABEL_35;
          }
          continue;
        }
LABEL_33:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v20);
        if (!result) {
          return result;
        }
        uint64_t v19 = *((void *)this + 1);
        uint64_t v18 = *((void *)this + 2);
        *(void *)(a1 + 40) = v20;
        *(_DWORD *)(a1 + 52) |= 8u;
        if (v19 != v18) {
          continue;
        }
LABEL_35:
        if (!*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_20;
        }
        goto LABEL_26;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        unint64_t v20 = 0;
        if ((unint64_t)v14 < v12) {
          goto LABEL_30;
        }
        goto LABEL_33;
      default:
        int v9 = TagFallback & 7;
LABEL_26:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10013A338(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 32), a3);
  if ((*(_DWORD *)(v5 + 52) & 8) == 0)
  {
LABEL_5:
    int v9 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    char v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(v5 + 40), (uint64_t)a2, a4);
  int v10 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  char v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_11:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_10013A40C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 52);
  if (*(unsigned char *)(a1 + 52))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 8) != 0) {
      uint64_t v5 = v5
    }
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 40), (unint64_t)a2)+ 1;
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    char v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v5 = 0;
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    char v7 = *(void **)(a1 + 8);
    if (!v7)
    {
LABEL_10:
      *(_DWORD *)(a1 + 48) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1]) {
    goto LABEL_10;
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
     + v5;
  *(_DWORD *)(a1 + 48) = v9;
  return v9;
}

uint64_t sub_10013A4B8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000188F4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10013A598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013A5AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013A5C0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10013A64C()
{
  return 1;
}

uint64_t sub_10013A654()
{
  uint64_t v0 = qword_10047DAE0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001399FC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DAD0;
}

void sub_10013A6E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013A6F8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
    LOBYTE(v4) = *(unsigned char *)(a2 + 60);
    if (!(_BYTE)v4) {
      goto LABEL_15;
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 60);
    if (!(_BYTE)v4) {
      goto LABEL_15;
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 60) |= 1u;
    uint64_t v5 = *(void *)(a1 + 40);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 40);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047EAF8 + 40);
    }
    sub_1000188F4(v5, v6);
    int v4 = *(_DWORD *)(a2 + 60);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 60) |= 2u;
    uint64_t v7 = *(void *)(a1 + 48);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 48);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10047EAF8 + 48);
    }
    sub_1000E4A54(v7, v8);
  }
LABEL_15:
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::MergeFrom((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a2 + 8));
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 32), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 32));
}

void sub_10013A890()
{
}

void sub_10013A8B4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10013A8DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013A8F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013A904(void *a1)
{
  *a1 = off_100457DC8;
  if ((void *)qword_10047EAF8 != a1)
  {
    uint64_t v2 = a1[5];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = a1[6];
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 4));
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::~ExtensionSet((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10013A9E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 56) = a2;
  return result;
}

void sub_10013A9E8()
{
}

void sub_10013AA64()
{
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10013AA9C(uint64_t a1)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::ExtensionSet::Clear((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 8));
  if (*(unsigned char *)(a1 + 60))
  {
    if (*(unsigned char *)(a1 + 60))
    {
      uint64_t result = *(void *)(a1 + 40);
      if (result)
      {
        if (*(unsigned char *)(result + 52))
        {
          *(_OWORD *)(result + 16) = 0u;
          *(_OWORD *)(result + 32) = 0u;
        }
        uint64_t v3 = *(void *)(result + 8);
        result += 8;
        *(_DWORD *)(result + 44) = 0;
        if (v3) {
          uint64_t result = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)result);
        }
      }
    }
    if ((*(unsigned char *)(a1 + 60) & 2) != 0)
    {
      uint64_t result = *(void *)(a1 + 48);
      if (result) {
        uint64_t result = sub_1000E4FF8(result);
      }
    }
  }
  uint64_t v5 = *(void *)(a1 + 32);
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 32);
  *((_DWORD *)v4 + 7) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return result;
}

uint64_t sub_10013AB38(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 32);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 8);
  while (1)
  {
    while (1)
    {
      uint64_t v8 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v8;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v8 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 2) {
        goto LABEL_21;
      }
      *(_DWORD *)(a1 + 60) |= 1u;
      uint64_t v13 = *(void *)(a1 + 40);
      if (!v13) {
        operator new();
      }
      unsigned int v32 = 0;
      int v14 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32)) {
          return 0;
        }
      }
      else
      {
        unsigned int v32 = *v14;
        *((void *)a2 + 1) = v14 + 1;
      }
      int v15 = *((_DWORD *)a2 + 14);
      int v16 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v15 + 1;
      if (v15 >= v16) {
        return 0;
      }
      int v17 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v32);
      if (!sub_10013A07C(v13, a2, v18, v19) || !*((unsigned char *)a2 + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v17);
      int v20 = *((_DWORD *)a2 + 14);
      BOOL v21 = __OFSUB__(v20, 1);
      int v22 = v20 - 1;
      if (v22 < 0 == v21) {
        *((_DWORD *)a2 + 14) = v22;
      }
      uint64_t v23 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v23 < *((void *)a2 + 2) && *v23 == 34)
      {
        *((void *)a2 + 1) = v23 + 1;
        *(_DWORD *)(a1 + 60) |= 2u;
        uint64_t v11 = *(void *)(a1 + 48);
        if (!v11) {
LABEL_34:
        }
          operator new();
LABEL_12:
        unsigned int v33 = 0;
        unint64_t v12 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33))return 0; {
        }
          }
        else
        {
          unsigned int v33 = *v12;
          *((void *)a2 + 1) = v12 + 1;
        }
        int v24 = *((_DWORD *)a2 + 14);
        int v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        int v26 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2, v33);
        if (!sub_1000E50D4(v11, a2, v27, v28) || !*((unsigned char *)a2 + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2, v26);
        int v29 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v29, 1);
        int v30 = v29 - 1;
        if (v30 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v30;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 4)
    {
      int v10 = TagFallback & 7;
      if (v10 == 2)
      {
        *(_DWORD *)(a1 + 60) |= 2u;
        uint64_t v11 = *(void *)(a1 + 48);
        if (!v11) {
          goto LABEL_34;
        }
        goto LABEL_12;
      }
    }
    else
    {
      int v10 = TagFallback & 7;
    }
LABEL_21:
    if (v10 == 4) {
      return 1;
    }
    if ((TagFallback & 0xFFFFFFF8) == 0x10)
    {
      if ((wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseField(v7, TagFallback, a2, (const wireless_diagnostics::google::protobuf::Message *)qword_10047EAF8, v6) & 1) == 0)return 0; {
    }
      }
    else if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)
    {
      return 0;
    }
  }
}

void sub_10013AE84()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10013AEAC()
{
}

uint64_t sub_10013AED0(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(a1 + 60))
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047EAF8 + 40);
    }
    wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizes((wireless_diagnostics::google::protobuf::internal::ExtensionSet *)(a1 + 8), 2, 3, a2);
  if ((*(unsigned char *)(a1 + 60) & 2) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 48);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_10047EAF8 + 48);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, v9);
  }
  uint64_t v13 = *(void **)(a1 + 32);
  unint64_t v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 32);
  uint64_t v11 = v13;
  if (v13 && *v11 != v11[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v12, a2, v8);
  }
  return result;
}

uint64_t sub_10013AF90(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10013A6F8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10013B070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013B084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013B098(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10013B124(uint64_t a1)
{
  return wireless_diagnostics::google::protobuf::internal::ExtensionSet::IsInitialized(a1 + 8);
}

uint64_t sub_10013B12C()
{
  uint64_t v0 = qword_10047DAE0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1001399FC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DAC0;
}

void sub_10013B1BC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013B1D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_10013B1D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

void sub_10013B1E4()
{
  uint64_t v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_10013B964();
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  __p = operator new(0x20uLL);
  long long v3 = xmmword_1003E74B0;
  strcpy((char *)__p, "CLPSensorSurveyEvent.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  operator delete(__p);
  if (!FileByName)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  }
  qword_10047DAF8 = *(void *)(FileByName + 80);
  operator new();
}

void sub_10013B8D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013B8E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013B8F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10013B964(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10047DAE8 & 1) == 0)
  {
    byte_10047DAE8 = 1;
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/protobuf/clpsensorsurvey/Proto/CLPSensorSurveyEvent.pb.cc", a4);
    sub_10011C1E4(v4, v5, v6, v7);
    sub_1000E6AE4(v8, v9, v10, v11);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)&unk_1003EC760, (const void *)0xE11, v12);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_10013C010()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10013C03C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10013C068()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10013C094()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10013C0C0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10013C0EC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10013C118()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10013C144()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10013C170()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10013C19C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10013C1C8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10013C1F4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10013C220()
{
  if (qword_10047EB08) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EB08 + 8))(qword_10047EB08);
  }
  if (qword_10047DB00) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DB00 + 8))(qword_10047DB00);
  }
  if (qword_10047EB10) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EB10 + 8))(qword_10047EB10);
  }
  if (qword_10047DB10) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DB10 + 8))(qword_10047DB10);
  }
  if (qword_10047EB18) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EB18 + 8))(qword_10047EB18);
  }
  if (qword_10047DB20) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DB20 + 8))(qword_10047DB20);
  }
  if (qword_10047EB20) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EB20 + 8))(qword_10047EB20);
  }
  if (qword_10047DB30) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DB30 + 8))(qword_10047DB30);
  }
  if (qword_10047EB28) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EB28 + 8))(qword_10047EB28);
  }
  if (qword_10047DB40) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DB40 + 8))(qword_10047DB40);
  }
  if (qword_10047EB30) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EB30 + 8))(qword_10047EB30);
  }
  if (qword_10047DB50) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DB50 + 8))(qword_10047DB50);
  }
  if (qword_10047EB38) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EB38 + 8))(qword_10047EB38);
  }
  if (qword_10047DB60) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DB60 + 8))(qword_10047DB60);
  }
  if (qword_10047EB40) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EB40 + 8))(qword_10047EB40);
  }
  if (qword_10047DB70) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DB70 + 8))(qword_10047DB70);
  }
  if (qword_10047EB48) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EB48 + 8))(qword_10047EB48);
  }
  if (qword_10047DB80) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DB80 + 8))(qword_10047DB80);
  }
  if (qword_10047EB50) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EB50 + 8))(qword_10047EB50);
  }
  if (qword_10047DB90) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DB90 + 8))(qword_10047DB90);
  }
  if (qword_10047EB58) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EB58 + 8))(qword_10047EB58);
  }
  if (qword_10047DBA0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047DBA0 + 8))(qword_10047DBA0);
  }
  if (qword_10047EB60) {
    (*(void (**)(uint64_t))(*(void *)qword_10047EB60 + 8))(qword_10047EB60);
  }
  uint64_t result = qword_10047DBB0;
  if (qword_10047DBB0)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10047DBB0 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_10013C6C8()
{
  uint64_t v0 = qword_10047DBE0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v13[1] = sub_10013B1E4;
    char v14 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v13);
  }
  if (!qword_10047EB08) {
    ((void (*)(void))sub_10013B964)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EB10) {
    sub_10013B964(v1);
  }
  uint64_t v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EB18) {
    sub_10013B964(v2);
  }
  uint64_t v3 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EB20) {
    sub_10013B964(v3);
  }
  uint64_t v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EB28) {
    sub_10013B964(v4);
  }
  uint64_t v5 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EB30) {
    sub_10013B964(v5);
  }
  uint64_t v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EB38) {
    sub_10013B964(v6);
  }
  uint64_t v7 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EB40) {
    sub_10013B964(v7);
  }
  uint64_t v8 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EB48) {
    sub_10013B964(v8);
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EB50) {
    sub_10013B964(v9);
  }
  uint64_t v10 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EB58) {
    sub_10013B964(v10);
  }
  uint64_t v11 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_10047EB60) {
    sub_10013B964(v11);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_10013C914(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_10013C928(void *a1)
{
  *a1 = off_100458168;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  a1[5] = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  a1[6] = 0;
  return a1;
}

void sub_10013C980(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10013C994(uint64_t a1)
{
  *(void *)a1 = off_100458218;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(void *)(a1 + 32) = 0;
  return a1;
}

void sub_10013C9E4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void *sub_10013C9F8(void *a1)
{
  *a1 = off_1004582C8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_10013CA44(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10013CA58(uint64_t a1)
{
  *(void *)a1 = off_100458378;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_10013CAAC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10013CAC0(uint64_t a1)
{
  *(void *)a1 = off_100458428;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 48) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_10013CB1C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10013CB30(uint64_t a1)
{
  *(void *)a1 = off_1004584D8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = &wireless_diagnostics::google::protobuf::internal::kEmptyString;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(_DWORD *)(a1 + 128) = 0;
  return a1;
}

void sub_10013CB98(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_10013CBAC(uint64_t a1)
{
  *(void *)a1 = off_100457EA8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_10013CC00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

void sub_10013CC08()
{
}

void sub_10013CC70()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10013CC98(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 52))
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 11) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10013CCBC(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_26;
        }
        unint64_t v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v20;
        *(_DWORD *)(a1 + 52) |= 1u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_26;
        }
LABEL_15:
        unint64_t v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 24) = v20;
        *(_DWORD *)(a1 + 52) |= 2u;
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 25) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_20:
        unint64_t v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v20;
        *(_DWORD *)(a1 + 52) |= 4u;
        uint64_t v13 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 != 32) {
          continue;
        }
        char v14 = v13 + 1;
        *((void *)this + 1) = v14;
        unint64_t v20 = 0;
        if ((unint64_t)v14 >= v12) {
          goto LABEL_33;
        }
LABEL_30:
        int v15 = *v14;
        if ((v15 & 0x80000000) == 0)
        {
          int v16 = v14 + 1;
          *((void *)this + 1) = v16;
          *(void *)(a1 + 40) = v15;
          *(_DWORD *)(a1 + 52) |= 8u;
          if (v16 == (char *)v12) {
            goto LABEL_35;
          }
          continue;
        }
LABEL_33:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v20);
        if (!result) {
          return result;
        }
        uint64_t v19 = *((void *)this + 1);
        uint64_t v18 = *((void *)this + 2);
        *(void *)(a1 + 40) = v20;
        *(_DWORD *)(a1 + 52) |= 8u;
        if (v19 != v18) {
          continue;
        }
LABEL_35:
        if (!*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_20;
        }
        goto LABEL_26;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        char v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        unint64_t v20 = 0;
        if ((unint64_t)v14 < v12) {
          goto LABEL_30;
        }
        goto LABEL_33;
      default:
        int v9 = TagFallback & 7;
LABEL_26:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10013CF78(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 32), a3);
  if ((*(_DWORD *)(v5 + 52) & 8) == 0)
  {
LABEL_5:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(v5 + 40), (uint64_t)a2, a4);
  uint64_t v10 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_11:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_10013D04C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 52);
  if (*(unsigned char *)(a1 + 52))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 8) != 0) {
      uint64_t v5 = v5
    }
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 40), (unint64_t)a2)+ 1;
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v5 = 0;
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7)
    {
LABEL_10:
      *(_DWORD *)(a1 + 48) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1]) {
    goto LABEL_10;
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
     + v5;
  *(_DWORD *)(a1 + 48) = v9;
  return v9;
}

uint64_t sub_10013D0F8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10001DD10((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10013D1D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013D1EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013D200(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10013D28C()
{
  return 1;
}

uint64_t sub_10013D294()
{
  uint64_t v0 = qword_10047DBE0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10013B1E4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DAF8;
}

void sub_10013D324(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013D338(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 40))
  {
    int v7 = *(_DWORD *)(a2 + 16);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(_DWORD *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 40);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_12:
      int v9 = *(_DWORD *)(a2 + 32);
      *(_DWORD *)(a1 + 40) |= 4u;
      *(_DWORD *)(a1 + 32) = v9;
      if ((*(_DWORD *)(a2 + 40) & 8) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_8;
    }
  }
  else if ((*(unsigned char *)(a2 + 40) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 40) |= 2u;
  *(_DWORD *)(a1 + 20) = v8;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_7:
  if ((v4 & 8) != 0)
  {
LABEL_8:
    uint64_t v5 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 40) |= 8u;
    *(void *)(a1 + 24) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10013D438(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013D44C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013D460(uint64_t a1)
{
  *(void *)a1 = off_100457F58;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_10013D4B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_10013D4BC()
{
}

void sub_10013D524()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10013D54C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 8) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10013D570(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        v22[0] = 0;
        uint64_t v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v22);
          if (!result) {
            return result;
          }
          unsigned int v11 = v22[0];
          if (v22[0] <= 5) {
            goto LABEL_12;
          }
        }
        else
        {
          unsigned int v11 = *v10;
          *((void *)this + 1) = v10 + 1;
          if (v11 <= 5)
          {
LABEL_12:
            *(_DWORD *)(a1 + 40) |= 1u;
            *(_DWORD *)(a1 + 16) = v11;
            goto LABEL_27;
          }
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 1, (int)v11);
LABEL_27:
        int v16 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v16 >= v12 || *v16 != 16) {
          continue;
        }
        uint64_t v13 = v16 + 1;
        *((void *)this + 1) = v13;
        v22[0] = 0;
        if ((unint64_t)v13 >= v12) {
          goto LABEL_33;
        }
        goto LABEL_30;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        v22[0] = 0;
        if ((unint64_t)v13 >= v12) {
          goto LABEL_33;
        }
LABEL_30:
        int v17 = *v13;
        if ((v17 & 0x80000000) == 0)
        {
          uint64_t v18 = v13 + 1;
          *((void *)this + 1) = v18;
          *(_DWORD *)(a1 + 20) = v17;
          *(_DWORD *)(a1 + 40) |= 2u;
          if ((unint64_t)v18 < v12) {
            goto LABEL_35;
          }
          continue;
        }
LABEL_33:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v22);
        if (!result) {
          return result;
        }
        uint64_t v18 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        *(_DWORD *)(a1 + 20) = v22[0];
        *(_DWORD *)(a1 + 40) |= 2u;
        if ((unint64_t)v18 >= v12) {
          continue;
        }
LABEL_35:
        if (*v18 != 24) {
          continue;
        }
        char v14 = v18 + 1;
        *((void *)this + 1) = v14;
        v22[0] = 0;
        if ((unint64_t)v14 >= v12)
        {
LABEL_40:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v22);
          if (!result) {
            return result;
          }
          unint64_t v20 = (unsigned char *)*((void *)this + 1);
          unint64_t v21 = *((void *)this + 2);
          *(_DWORD *)(a1 + 32) = v22[0];
          *(_DWORD *)(a1 + 40) |= 4u;
          if ((unint64_t)v20 < v21) {
            goto LABEL_42;
          }
          continue;
        }
LABEL_37:
        int v19 = *v14;
        if (v19 < 0) {
          goto LABEL_40;
        }
        unint64_t v20 = v14 + 1;
        *((void *)this + 1) = v20;
        *(_DWORD *)(a1 + 32) = v19;
        *(_DWORD *)(a1 + 40) |= 4u;
        if ((unint64_t)v20 >= v12) {
          continue;
        }
LABEL_42:
        if (*v20 != 33) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
LABEL_44:
        *(void *)int v22 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v22) & 1) == 0)return 0; {
        *(void *)(a1 + 24) = *(void *)v22;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        char v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        v22[0] = 0;
        if ((unint64_t)v14 >= v12) {
          goto LABEL_40;
        }
        goto LABEL_37;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_21;
        }
        goto LABEL_44;
      default:
        int v9 = TagFallback & 7;
LABEL_21:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_10013D8AC(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 32), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 8) == 0)
  {
LABEL_5:
    int v9 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 24), a3);
  uint64_t v10 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_11:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_10013D980(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10013D338((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10013DA60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013DA74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013DA88(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10013DB14()
{
  return 1;
}

uint64_t sub_10013DB1C()
{
  uint64_t v0 = qword_10047DBE0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10013B1E4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DB08;
}

void sub_10013DBAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013DBC0(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
    if ((*(unsigned char *)(a2 + 28) & 1) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else if ((*(unsigned char *)(a2 + 28) & 1) == 0)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  *(_DWORD *)(a1 + 28) |= 1u;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    operator new();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_10047EB18 + 16);
  }
  sub_10013D338(v4, v5);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10013DCE0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10013DD08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013DD1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013DD30(void *a1)
{
  *a1 = off_100458008;
  if ((void *)qword_10047EB18 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_10013DDC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_10013DDCC()
{
}

void sub_10013DE2C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10013DE54(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 28))
  {
    this = *(void *)(this + 16);
    if (this)
    {
      if (*(unsigned char *)(this + 40))
      {
        *(void *)(this + 16) = 0;
        *(void *)(this + 24) = 0;
        *(_DWORD *)(this + 32) = 0;
      }
      uint64_t v2 = *(void *)(this + 8);
      this += 8;
      *(_DWORD *)(this + 32) = 0;
      if (v2) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  uint64_t v4 = *(void *)(v1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 5) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_10013DED0(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      int v7 = (unsigned __int8 *)*((void *)this + 1);
      if ((unint64_t)v7 < *((void *)this + 2) && ((char)*v7 & 0x80000000) == 0) {
        break;
      }
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (TagFallback != 10) {
        goto LABEL_5;
      }
LABEL_10:
      *(_DWORD *)(a1 + 28) |= 1u;
      uint64_t v9 = *(void *)(a1 + 16);
      if (!v9) {
        operator new();
      }
      unsigned int v20 = 0;
      uint64_t v10 = (char *)*((void *)this + 1);
      if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v20))return 0; {
      }
        }
      else
      {
        unsigned int v20 = *v10;
        *((void *)this + 1) = v10 + 1;
      }
      int v11 = *((_DWORD *)this + 14);
      int v12 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v11 + 1;
      if (v11 >= v12) {
        return 0;
      }
      int v13 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v20);
      if (!sub_10013D570(v9, this, v14, v15) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v13);
      int v16 = *((_DWORD *)this + 14);
      BOOL v17 = __OFSUB__(v16, 1);
      int v18 = v16 - 1;
      if (v18 < 0 == v17) {
        *((_DWORD *)this + 14) = v18;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    unint64_t TagFallback = *v7;
    *((_DWORD *)this + 8) = TagFallback;
    *((void *)this + 1) = v7 + 1;
    if (TagFallback == 10) {
      goto LABEL_10;
    }
LABEL_5:
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_10013E0D4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10013E0FC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 28))
  {
    uint64_t v6 = *(void *)(result + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047EB18 + 16);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  uint64_t v9 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10013E180(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((unsigned char *)this + 28))
  {
    uint64_t v4 = (unsigned int *)*((void *)this + 2);
    if (v4)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v5 = a2 + 1;
      uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v4[9];
      if (v6 <= 0x7F)
      {
LABEL_4:
        *((unsigned char *)a2 + 1) = (_BYTE)v6;
        int v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
LABEL_7:
        a2 = sub_10009B7F4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v4, v7, a3);
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v4 = *(unsigned int **)(qword_10047EB18 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v5 = a2 + 1;
      uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v4[9];
      if (v6 <= 0x7F) {
        goto LABEL_4;
      }
    }
    int v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, v5, a3);
    goto LABEL_7;
  }
LABEL_8:
  uint64_t v10 = (void *)*((void *)this + 1);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v8 = v10;
  if (!v10 || *v8 == v8[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, a2, a3);
}

uint64_t sub_10013E248(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 28))
  {
    uint64_t v7 = *(void *)(a1 + 16);
    if (v7)
    {
      int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10009B6C8(v7, a2);
      if (v8 < 0x80) {
        goto LABEL_6;
      }
    }
    else
    {
      int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10009B6C8(*(void *)(qword_10047EB18 + 16), a2);
      if (v8 < 0x80)
      {
LABEL_6:
        uint64_t v3 = (v8 + 2);
        uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        unsigned int v5 = *(void **)(a1 + 8);
        if (!v5) {
          goto LABEL_3;
        }
        goto LABEL_10;
      }
    }
    uint64_t v3 = v8
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2)+ 1;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    unsigned int v5 = *(void **)(a1 + 8);
    if (!v5) {
      goto LABEL_3;
    }
    goto LABEL_10;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  unsigned int v5 = *(void **)(a1 + 8);
  if (!v5)
  {
LABEL_3:
    *(_DWORD *)(a1 + 24) = v3;
    return v3;
  }
LABEL_10:
  if (*v5 == v5[1]) {
    goto LABEL_3;
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v4, a2)
     + v3;
  *(_DWORD *)(a1 + 24) = v9;
  return v9;
}

uint64_t sub_10013E31C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10013DBC0((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10013E3FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013E410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013E424(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10013E4B0()
{
  return 1;
}

uint64_t sub_10013E4B8()
{
  uint64_t v0 = qword_10047DBE0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10013B1E4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DB18;
}

void sub_10013E548(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013E55C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
    LOBYTE(v4) = *(unsigned char *)(a2 + 76);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 76);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 76) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047EB20 + 16);
    }
    sub_10001DD10(v5, v6);
    int v4 = *(_DWORD *)(a2 + 76);
  }
  if ((v4 & 2) != 0)
  {
    int v9 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 76) |= 2u;
    *(_DWORD *)(a1 + 48) = v9;
    int v4 = *(_DWORD *)(a2 + 76);
    if ((v4 & 4) == 0)
    {
LABEL_12:
      if ((v4 & 8) == 0) {
        goto LABEL_13;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v10 = *(const std::string **)(a2 + 24);
  *(_DWORD *)(a1 + 76) |= 4u;
  int v11 = *(std::string **)(a1 + 24);
  if (v11 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v11, v10);
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 8) == 0)
  {
LABEL_13:
    if ((v4 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_26;
  }
LABEL_23:
  int v12 = *(const std::string **)(a2 + 32);
  *(_DWORD *)(a1 + 76) |= 8u;
  int v13 = *(std::string **)(a1 + 32);
  if (v13 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v13, v12);
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x10) == 0)
  {
LABEL_14:
    if ((v4 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_29;
  }
LABEL_26:
  uint64_t v14 = *(const std::string **)(a2 + 40);
  *(_DWORD *)(a1 + 76) |= 0x10u;
  int v15 = *(std::string **)(a1 + 40);
  if (v15 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v15, v14);
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x20) == 0)
  {
LABEL_15:
    if ((v4 & 0x40) == 0) {
      goto LABEL_16;
    }
LABEL_32:
    *(_DWORD *)(a1 + 76) |= 0x40u;
    uint64_t v18 = *(void *)(a1 + 64);
    if (!v18) {
      operator new();
    }
    uint64_t v19 = *(void *)(a2 + 64);
    if (v19)
    {
      sub_10013DBC0(v18, v19);
      if ((*(_DWORD *)(a2 + 76) & 0x80) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
    }
    else
    {
      sub_10013DBC0(v18, *(void *)(qword_10047EB20 + 64));
      if ((*(_DWORD *)(a2 + 76) & 0x80) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
    }
    goto LABEL_17;
  }
LABEL_29:
  int v16 = *(const std::string **)(a2 + 56);
  *(_DWORD *)(a1 + 76) |= 0x20u;
  BOOL v17 = *(std::string **)(a1 + 56);
  if (v17 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v17, v16);
  int v4 = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x40) != 0) {
    goto LABEL_32;
  }
LABEL_16:
  if ((v4 & 0x80) != 0)
  {
LABEL_17:
    int v7 = *(_DWORD *)(a2 + 52);
    *(_DWORD *)(a1 + 76) |= 0x80u;
    *(_DWORD *)(a1 + 52) = v7;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10013E8BC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10013E8E4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10013E90C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013E920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013E934(void *a1)
{
  *a1 = off_1004580B8;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_1000123D4(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_10013E994(uint64_t result, int a2)
{
  *(_DWORD *)(result + 72) = a2;
  return result;
}

uint64_t sub_10013E99C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047EB20;
  if (!qword_10047EB20)
  {
    sub_10013B964(0, a2, a3, a4);
    return qword_10047EB20;
  }
  return result;
}

void sub_10013E9D8()
{
}

void sub_10013EA54()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10013EA7C(uint64_t this)
{
  uint64_t v1 = this;
  if (!*(unsigned char *)(this + 76)) {
    goto LABEL_41;
  }
  if (*(unsigned char *)(this + 76))
  {
    this = *(void *)(this + 16);
    if (this)
    {
      if (*(unsigned char *)(this + 52))
      {
        *(_OWORD *)(this + 16) = 0u;
        *(_OWORD *)(this + 32) = 0u;
      }
      uint64_t v2 = *(void *)(this + 8);
      this += 8;
      *(_DWORD *)(this + 44) = 0;
      if (v2) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  *(_DWORD *)(v1 + 48) = 0;
  if ((*(unsigned char *)(v1 + 76) & 4) == 0
    || (uint64_t v3 = *(void *)(v1 + 24), (_UNKNOWN *)v3 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
  {
LABEL_12:
    if ((*(unsigned char *)(v1 + 76) & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }
  if ((*(char *)(v3 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
    goto LABEL_12;
  }
  **(unsigned char **)uint64_t v3 = 0;
  *(void *)(v3 + 8) = 0;
  if ((*(unsigned char *)(v1 + 76) & 8) == 0) {
    goto LABEL_19;
  }
LABEL_13:
  uint64_t v4 = *(void *)(v1 + 32);
  if ((_UNKNOWN *)v4 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
LABEL_19:
  if ((*(unsigned char *)(v1 + 76) & 0x10) == 0
    || (uint64_t v5 = *(void *)(v1 + 40), (_UNKNOWN *)v5 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
  {
LABEL_23:
    if ((*(unsigned char *)(v1 + 76) & 0x20) != 0) {
      goto LABEL_24;
    }
    goto LABEL_30;
  }
  if ((*(char *)(v5 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    goto LABEL_23;
  }
  **(unsigned char **)uint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  if ((*(unsigned char *)(v1 + 76) & 0x20) != 0)
  {
LABEL_24:
    uint64_t v6 = *(void *)(v1 + 56);
    if ((_UNKNOWN *)v6 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)uint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v6 = 0;
        *(unsigned char *)(v6 + 23) = 0;
      }
    }
  }
LABEL_30:
  if ((*(unsigned char *)(v1 + 76) & 0x40) != 0)
  {
    uint64_t v7 = *(void *)(v1 + 64);
    if (v7)
    {
      if (*(unsigned char *)(v7 + 28))
      {
        this = *(void *)(v7 + 16);
        if (this)
        {
          if (*(unsigned char *)(this + 40))
          {
            *(void *)(this + 16) = 0;
            *(void *)(this + 24) = 0;
            *(_DWORD *)(this + 32) = 0;
          }
          uint64_t v8 = *(void *)(this + 8);
          this += 8;
          *(_DWORD *)(this + 32) = 0;
          if (v8) {
            this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
          }
        }
      }
      uint64_t v10 = *(void *)(v7 + 8);
      int v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v7 + 8);
      *((_DWORD *)v9 + 5) = 0;
      if (v10) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v9);
      }
    }
  }
  *(_DWORD *)(v1 + 52) = 0;
LABEL_41:
  uint64_t v12 = *(void *)(v1 + 8);
  int v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v11 + 17) = 0;
  if (v12)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v11);
  }
  return this;
}

uint64_t sub_10013EC58(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 76) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        unsigned int v47 = 0;
        int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v47))return 0; {
        }
          }
        else
        {
          unsigned int v47 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v19 = *((_DWORD *)this + 14);
        int v20 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        int v21 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v47);
        if (!sub_10013CCBC(v10, this, v22, v23) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v21);
        int v24 = *((_DWORD *)this + 14);
        BOOL v25 = __OFSUB__(v24, 1);
        int v26 = v24 - 1;
        if (v26 < 0 == v25) {
          *((_DWORD *)this + 14) = v26;
        }
        unint64_t v28 = (unsigned char *)*((void *)this + 1);
        unint64_t v27 = *((void *)this + 2);
        if ((unint64_t)v28 >= v27 || *v28 != 16) {
          continue;
        }
        int v13 = v28 + 1;
        *((void *)this + 1) = v13;
        unsigned int v47 = 0;
        if ((unint64_t)v13 >= v27) {
          goto LABEL_55;
        }
LABEL_52:
        if (*v13 < 0)
        {
LABEL_55:
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v47);
          if (!result) {
            return result;
          }
          unsigned int v29 = v47;
          if (v47 <= 2)
          {
LABEL_54:
            *(_DWORD *)(a1 + 76) |= 2u;
            *(_DWORD *)(a1 + 48) = v29;
            goto LABEL_58;
          }
        }
        else
        {
          unsigned int v29 = *v13;
          *((void *)this + 1) = v13 + 1;
          if (v29 <= 2) {
            goto LABEL_54;
          }
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 2, (int)v29);
LABEL_58:
        int v30 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v30 >= *((void *)this + 2) || *v30 != 26) {
          continue;
        }
        *((void *)this + 1) = v30 + 1;
        *(_DWORD *)(a1 + 76) |= 4u;
        if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_61:
        }
          operator new();
LABEL_20:
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unint64_t v31 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v31 >= *((void *)this + 2) || *v31 != 34) {
          continue;
        }
        *((void *)this + 1) = v31 + 1;
        *(_DWORD *)(a1 + 76) |= 8u;
        if (*(_UNKNOWN **)(a1 + 32) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_65:
        }
          operator new();
LABEL_24:
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unsigned int v32 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v32 >= *((void *)this + 2) || *v32 != 42) {
          continue;
        }
        *((void *)this + 1) = v32 + 1;
        *(_DWORD *)(a1 + 76) |= 0x10u;
        if (*(_UNKNOWN **)(a1 + 40) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_69:
        }
          operator new();
LABEL_28:
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unsigned int v33 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v33 >= *((void *)this + 2) || *v33 != 50) {
          continue;
        }
        *((void *)this + 1) = v33 + 1;
        *(_DWORD *)(a1 + 76) |= 0x20u;
        if (*(_UNKNOWN **)(a1 + 56) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_73:
        }
          operator new();
LABEL_32:
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v34 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 != 58) {
          continue;
        }
        *((void *)this + 1) = v34 + 1;
        *(_DWORD *)(a1 + 76) |= 0x40u;
        uint64_t v15 = *(void *)(a1 + 64);
        if (!v15) {
LABEL_77:
        }
          operator new();
LABEL_36:
        unsigned int v47 = 0;
        int v16 = (char *)*((void *)this + 1);
        if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v47))return 0; {
        }
          }
        else
        {
          unsigned int v47 = *v16;
          *((void *)this + 1) = v16 + 1;
        }
        int v35 = *((_DWORD *)this + 14);
        int v36 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v47);
        if (!sub_10013DED0(v15, this, v38, v39) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
        int v40 = *((_DWORD *)this + 14);
        BOOL v25 = __OFSUB__(v40, 1);
        int v41 = v40 - 1;
        if (v41 < 0 == v25) {
          *((_DWORD *)this + 14) = v41;
        }
        uint64_t v42 = (unsigned char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        if ((unint64_t)v42 >= v17 || *v42 != 64) {
          continue;
        }
        uint64_t v18 = v42 + 1;
        *((void *)this + 1) = v18;
LABEL_89:
        unsigned int v47 = 0;
        if ((unint64_t)v18 < v17)
        {
          int v43 = *v18;
          if ((v43 & 0x80000000) == 0)
          {
            int v44 = v18 + 1;
            *((void *)this + 1) = v44;
            *(_DWORD *)(a1 + 52) = v43;
            *(_DWORD *)(a1 + 76) |= 0x80u;
            if (v44 == (char *)v17) {
              goto LABEL_95;
            }
            continue;
          }
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v47);
        if (!result) {
          return result;
        }
        uint64_t v46 = *((void *)this + 1);
        uint64_t v45 = *((void *)this + 2);
        *(_DWORD *)(a1 + 52) = v47;
        *(_DWORD *)(a1 + 76) |= 0x80u;
        if (v46 != v45) {
          continue;
        }
LABEL_95:
        if (!*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10)) {
          continue;
        }
        *((_DWORD *)this + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        int v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        unsigned int v47 = 0;
        if ((unint64_t)v13 >= v12) {
          goto LABEL_55;
        }
        goto LABEL_52;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 76) |= 4u;
        if (*(_UNKNOWN **)(a1 + 24) != &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          goto LABEL_20;
        }
        goto LABEL_61;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 76) |= 8u;
        if (*(_UNKNOWN **)(a1 + 32) != &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          goto LABEL_24;
        }
        goto LABEL_65;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 76) |= 0x10u;
        if (*(_UNKNOWN **)(a1 + 40) != &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          goto LABEL_28;
        }
        goto LABEL_69;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 76) |= 0x20u;
        if (*(_UNKNOWN **)(a1 + 56) != &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          goto LABEL_32;
        }
        goto LABEL_73;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 76) |= 0x40u;
        uint64_t v15 = *(void *)(a1 + 64);
        if (v15) {
          goto LABEL_36;
        }
        goto LABEL_77;
      case 8u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        uint64_t v18 = (char *)*((void *)this + 1);
        unint64_t v17 = *((void *)this + 2);
        goto LABEL_89;
      default:
        int v9 = TagFallback & 7;
LABEL_39:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_10013F390()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10013F3B8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10013F400(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 76);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 76);
      if ((v6 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047EB20 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 76);
      if ((v6 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_16;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 48), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_20:
    uint64_t v11 = *(void *)(v5 + 64);
    if (v11)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v11, a2, a4);
      if ((*(_DWORD *)(v5 + 76) & 0x80) != 0) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(qword_10047EB20 + 64), a2, a4);
      if ((*(_DWORD *)(v5 + 76) & 0x80) != 0) {
        goto LABEL_24;
      }
    }
LABEL_9:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_25;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x40) != 0) {
    goto LABEL_20;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    goto LABEL_9;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(v5 + 52), (int)a2, a4);
  unint64_t v12 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v12;
  if (!v12) {
    return result;
  }
LABEL_25:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_10013F594(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10013E55C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10013F674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013F688(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013F69C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10013F728()
{
  return 1;
}

uint64_t sub_10013F730()
{
  uint64_t v0 = qword_10047DBE0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10013B1E4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DB28;
}

void sub_10013F7C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013F7D4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
    LOBYTE(v4) = *(unsigned char *)(a2 + 52);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 52);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 52) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047EB28 + 16);
    }
    sub_10001DD10(v5, v6);
    int v4 = *(_DWORD *)(a2 + 52);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 52) |= 2u;
    uint64_t v7 = *(void *)(a1 + 24);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = *(void *)(a2 + 24);
    if (!v8) {
      uint64_t v8 = *(void *)(qword_10047EB28 + 24);
    }
    sub_1000F7BB8(v7, v8);
    int v4 = *(_DWORD *)(a2 + 52);
  }
  if ((v4 & 4) != 0)
  {
    *(_DWORD *)(a1 + 52) |= 4u;
    uint64_t v9 = *(void *)(a1 + 32);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = *(void *)(a2 + 32);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_10047EB28 + 32);
    }
    sub_1000E98DC(v9, v10);
    int v4 = *(_DWORD *)(a2 + 52);
  }
  if ((v4 & 8) != 0)
  {
    uint64_t v11 = *(const std::string **)(a2 + 40);
    *(_DWORD *)(a1 + 52) |= 8u;
    unint64_t v12 = *(std::string **)(a1 + 40);
    if (v12 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v12, v11);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10013FA20()
{
}

void sub_10013FA44()
{
}

void sub_10013FA68()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10013FA90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10013FAA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_10013FAB8(void *result)
{
  uint64_t v1 = result;
  uint64_t v2 = result[5];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if ((void *)qword_10047EB28 != result)
  {
    uint64_t v4 = result[2];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = v1[3];
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t result = (void *)v1[4];
    if (result)
    {
      uint64_t v6 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v6();
    }
  }
  return result;
}

void sub_10013FBC4(void *a1)
{
  *a1 = off_100458168;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_10013FAB8(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10013FC24(void *a1)
{
  *a1 = off_100458168;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_10013FAB8(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10013FC98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

uint64_t sub_10013FCA0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047EB28;
  if (!qword_10047EB28)
  {
    sub_10013B964(0, a2, a3, a4);
    return qword_10047EB28;
  }
  return result;
}

void sub_10013FCDC()
{
}

void sub_10013FD4C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10013FD74(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 52))
  {
    if (*(unsigned char *)(this + 52))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 52))
        {
          *(_OWORD *)(this + 16) = 0u;
          *(_OWORD *)(this + 32) = 0u;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 44) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    int v3 = *(_DWORD *)(v1 + 52);
    if ((v3 & 2) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this)
      {
        this = sub_1000F7F50(this);
        int v3 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v3 & 4) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        this = (uint64_t)sub_1000E9C0C(this);
        int v3 = *(_DWORD *)(v1 + 52);
      }
    }
    if ((v3 & 8) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 40);
      if ((_UNKNOWN *)v4 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
          uint64_t v7 = *(void *)(v1 + 8);
          uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
          *((_DWORD *)v5 + 11) = 0;
          if (!v7) {
            return this;
          }
          goto LABEL_19;
        }
        *(unsigned char *)uint64_t v4 = 0;
        *(unsigned char *)(v4 + 23) = 0;
      }
    }
  }
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v5 + 11) = 0;
  if (!v6) {
    return this;
  }
LABEL_19:

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
}

uint64_t sub_10013FE60(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 < *((void *)this + 2) && (*v7 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
    *((_DWORD *)this + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 52) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        unsigned int v42 = 0;
        uint64_t v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42))return 0; {
        }
          }
        else
        {
          unsigned int v42 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v17 = *((_DWORD *)this + 14);
        int v18 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v17 + 1;
        if (v17 >= v18) {
          return 0;
        }
        int v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v42);
        if (!sub_10013CCBC(v10, this, v20, v21) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
        int v22 = *((_DWORD *)this + 14);
        BOOL v23 = __OFSUB__(v22, 1);
        int v24 = v22 - 1;
        if (v24 < 0 == v23) {
          *((_DWORD *)this + 14) = v24;
        }
        BOOL v25 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v25 >= *((void *)this + 2) || *v25 != 18) {
          continue;
        }
        *((void *)this + 1) = v25 + 1;
        *(_DWORD *)(a1 + 52) |= 2u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12) {
LABEL_39:
        }
          operator new();
LABEL_16:
        unsigned int v43 = 0;
        int v13 = (char *)*((void *)this + 1);
        if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v43))return 0; {
        }
          }
        else
        {
          unsigned int v43 = *v13;
          *((void *)this + 1) = v13 + 1;
        }
        int v26 = *((_DWORD *)this + 14);
        int v27 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0;
        }
        int v28 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v43);
        if (!sub_1000F7FC8(v12, this, v29, v30) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v28);
        int v31 = *((_DWORD *)this + 14);
        BOOL v23 = __OFSUB__(v31, 1);
        int v32 = v31 - 1;
        if (v32 < 0 == v23) {
          *((_DWORD *)this + 14) = v32;
        }
        unsigned int v33 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v33 >= *((void *)this + 2) || *v33 != 26) {
          continue;
        }
        *((void *)this + 1) = v33 + 1;
        *(_DWORD *)(a1 + 52) |= 4u;
        uint64_t v14 = *(void *)(a1 + 32);
        if (!v14) {
LABEL_51:
        }
          operator new();
LABEL_20:
        unsigned int v44 = 0;
        uint64_t v15 = (char *)*((void *)this + 1);
        if ((unint64_t)v15 >= *((void *)this + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44))return 0; {
        }
          }
        else
        {
          unsigned int v44 = *v15;
          *((void *)this + 1) = v15 + 1;
        }
        int v34 = *((_DWORD *)this + 14);
        int v35 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v34 + 1;
        if (v34 >= v35) {
          return 0;
        }
        int v36 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v44);
        if (!sub_1000E9C24(v14, this, v37, v38) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v36);
        int v39 = *((_DWORD *)this + 14);
        BOOL v23 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v23) {
          *((_DWORD *)this + 14) = v40;
        }
        int v41 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v41 < *((void *)this + 2) && *v41 == 34)
        {
          *((void *)this + 1) = v41 + 1;
          *(_DWORD *)(a1 + 52) |= 8u;
          if (*(_UNKNOWN **)(a1 + 40) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_63:
          }
            operator new();
LABEL_24:
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
          if (!result) {
            return result;
          }
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 52) |= 2u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (v12) {
          goto LABEL_16;
        }
        goto LABEL_39;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 52) |= 4u;
        uint64_t v14 = *(void *)(a1 + 32);
        if (v14) {
          goto LABEL_20;
        }
        goto LABEL_51;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 52) |= 8u;
        if (*(_UNKNOWN **)(a1 + 40) != &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          goto LABEL_24;
        }
        goto LABEL_63;
      default:
        int v9 = TagFallback & 7;
LABEL_27:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_100140380()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001403A8()
{
}

void sub_1001403CC()
{
}

uint64_t sub_100140400(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 52);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 52);
      if ((v6 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047EB28 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 52);
      if ((v6 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
LABEL_15:
    uint64_t v12 = *(void *)(v5 + 32);
    if (v12)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v12, a2, a4);
      if ((*(_DWORD *)(v5 + 52) & 8) != 0) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(qword_10047EB28 + 32), a2, a4);
      if ((*(_DWORD *)(v5 + 52) & 8) != 0) {
        goto LABEL_19;
      }
    }
LABEL_5:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_20;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_11:
  uint64_t v11 = *(void *)(v5 + 24);
  if (v11)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v11, a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 4) != 0) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(qword_10047EB28 + 24), a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 4) != 0) {
      goto LABEL_15;
    }
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    goto LABEL_5;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v13 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v13;
  if (!v13) {
    return result;
  }
LABEL_20:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10014054C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 13);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_13:
    uint64_t v15 = (unsigned int *)*((void *)this + 3);
    if (v15)
    {
      *(unsigned char *)uint64_t v4 = 18;
      unsigned int v16 = v4 + 1;
      int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15[8];
      if (v17 <= 0x7F) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v15 = *(unsigned int **)(qword_10047EB28 + 24);
      *(unsigned char *)uint64_t v4 = 18;
      unsigned int v16 = v4 + 1;
      int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15[8];
      if (v17 <= 0x7F)
      {
LABEL_15:
        *((unsigned char *)v4 + 1) = (_BYTE)v17;
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000F8338((wireless_diagnostics::google::protobuf::internal::WireFormat *)v15, (unsigned char *)v4 + 2, a3);
        int v6 = *((_DWORD *)this + 13);
        if ((v6 & 4) != 0) {
          goto LABEL_19;
        }
LABEL_4:
        if ((v6 & 8) == 0) {
          goto LABEL_5;
        }
LABEL_25:
        uint64_t v25 = *((void *)this + 5);
        *(unsigned char *)uint64_t v4 = 34;
        if (*(char *)(v25 + 23) < 0)
        {
          int v26 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v25 + 8);
          if (v26 <= 0x7F) {
            goto LABEL_27;
          }
        }
        else
        {
          int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v25 + 23);
          if (*(unsigned __int8 *)(v25 + 23) <= 0x7Fu)
          {
LABEL_27:
            *((unsigned char *)v4 + 1) = (_BYTE)v26;
            int v27 = v4 + 2;
            goto LABEL_30;
          }
        }
        int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, (int)v4 + 1, a3);
LABEL_30:
        int v28 = *(char *)(v25 + 23);
        if (v28 >= 0) {
          uint64_t v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25;
        }
        else {
          uint64_t v29 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v25;
        }
        if (v28 >= 0) {
          int v30 = (const void *)*(unsigned __int8 *)(v25 + 23);
        }
        else {
          int v30 = (const void *)*(unsigned int *)(v25 + 8);
        }
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v29, v30, v27, a4);
        int v31 = (void *)*((void *)this + 1);
        uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
        uint64_t v7 = v31;
        if (!v31) {
          return v4;
        }
        goto LABEL_37;
      }
    }
    int v18 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, v16, a3);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000F8338((wireless_diagnostics::google::protobuf::internal::WireFormat *)v15, v18, v19);
    int v6 = *((_DWORD *)this + 13);
    if ((v6 & 4) != 0) {
      goto LABEL_19;
    }
    goto LABEL_4;
  }
  uint64_t v10 = (unsigned int *)*((void *)this + 2);
  if (v10)
  {
    *(unsigned char *)a2 = 10;
    unsigned int v11 = a2 + 1;
    uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[12];
    if (v12 <= 0x7F) {
      goto LABEL_9;
    }
LABEL_12:
    uint64_t v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v11, a3);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000035A8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v13, v14);
    int v6 = *((_DWORD *)this + 13);
    if ((v6 & 2) != 0) {
      goto LABEL_13;
    }
    goto LABEL_3;
  }
  uint64_t v10 = *(unsigned int **)(qword_10047EB28 + 16);
  *(unsigned char *)a2 = 10;
  unsigned int v11 = a2 + 1;
  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[12];
  if (v12 > 0x7F) {
    goto LABEL_12;
  }
LABEL_9:
  *((unsigned char *)v4 + 1) = (_BYTE)v12;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000035A8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, (uint64_t)v4 + 2, a3);
  int v6 = *((_DWORD *)this + 13);
  if ((v6 & 2) != 0) {
    goto LABEL_13;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    goto LABEL_4;
  }
LABEL_19:
  uint64_t v20 = *((void *)this + 4);
  if (v20)
  {
    *(unsigned char *)uint64_t v4 = 26;
    unsigned int v21 = v4 + 1;
    int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v20 + 32);
    if (v22 <= 0x7F) {
      goto LABEL_21;
    }
LABEL_24:
    uint64_t v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, v21, a3);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000EA0DC(v20, v23, v24);
    if ((*((_DWORD *)this + 13) & 8) != 0) {
      goto LABEL_25;
    }
    goto LABEL_5;
  }
  uint64_t v20 = *(void *)(qword_10047EB28 + 32);
  *(unsigned char *)uint64_t v4 = 26;
  unsigned int v21 = v4 + 1;
  int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v20 + 32);
  if (v22 > 0x7F) {
    goto LABEL_24;
  }
LABEL_21:
  *((unsigned char *)v4 + 1) = (_BYTE)v22;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000EA0DC(v20, (uint64_t)v4 + 2, a3);
  if ((*((_DWORD *)this + 13) & 8) != 0) {
    goto LABEL_25;
  }
LABEL_5:
  int v9 = (void *)*((void *)this + 1);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v7 = v9;
  if (!v9) {
    return v4;
  }
LABEL_37:
  if (*v7 == v7[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, v4, a3);
}

uint64_t sub_1001407B4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 52);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v6 = *(void **)(a1 + 8);
    if (!v6) {
      goto LABEL_35;
    }
    goto LABEL_51;
  }
  if ((*(unsigned char *)(a1 + 52) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 52) & 2) == 0) {
      goto LABEL_32;
    }
LABEL_26:
    uint64_t v13 = *(void *)(a1 + 24);
    if (v13)
    {
      uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000F84E4(v13, a2);
      if (v14 < 0x80)
      {
LABEL_28:
        int v15 = 1;
LABEL_31:
        uint64_t v4 = (v4 + v14 + v15 + 1);
        int v3 = *(_DWORD *)(a1 + 52);
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000F84E4(*(void *)(qword_10047EB28 + 24), a2);
      if (v14 < 0x80) {
        goto LABEL_28;
      }
    }
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
    goto LABEL_31;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    int v8 = *(unsigned __int8 *)(v7 + 52);
    if (*(unsigned char *)(v7 + 52)) {
      goto LABEL_9;
    }
LABEL_19:
    uint64_t v10 = 0;
    unsigned int v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v7 + 8);
    uint64_t v12 = *(void **)(v7 + 8);
    if (!v12) {
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  uint64_t v7 = *(void *)(qword_10047EB28 + 16);
  int v8 = *(unsigned __int8 *)(v7 + 52);
  if (!*(unsigned char *)(v7 + 52)) {
    goto LABEL_19;
  }
LABEL_9:
  unsigned int v9 = (v8 << 31 >> 31) & 9;
  if ((v8 & 2) != 0) {
    v9 += 9;
  }
  if ((v8 & 4) != 0) {
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v9 + 9);
  }
  else {
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9;
  }
  if ((v8 & 8) != 0) {
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v10
  }
                                                                          + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v7 + 40), (unint64_t)a2)+ 1);
  unsigned int v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v7 + 8);
  uint64_t v12 = *(void **)(v7 + 8);
  if (v12)
  {
LABEL_20:
    if (*v12 != v12[1]) {
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v11, a2)+ v10);
    }
  }
LABEL_22:
  *(_DWORD *)(v7 + 48) = v10;
  if (v10 >= 0x80)
  {
    uint64_t v4 = v10
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 52);
    if ((v3 & 2) == 0) {
      goto LABEL_32;
    }
    goto LABEL_26;
  }
  uint64_t v4 = (v10 + 2);
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 2) != 0) {
    goto LABEL_26;
  }
LABEL_32:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_34;
    }
LABEL_42:
    uint64_t v19 = *(void *)(a1 + 40);
    int v20 = *(unsigned __int8 *)(v19 + 23);
    char v21 = v20;
    uint64_t v22 = *(void *)(v19 + 8);
    if ((v20 & 0x80u) == 0) {
      unint64_t v23 = *(unsigned __int8 *)(v19 + 23);
    }
    else {
      unint64_t v23 = v22;
    }
    if (v23 >= 0x80)
    {
      int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23, a2);
      int v20 = *(unsigned __int8 *)(v19 + 23);
      uint64_t v22 = *(void *)(v19 + 8);
      char v21 = *(unsigned char *)(v19 + 23);
    }
    else
    {
      int v24 = 1;
    }
    if (v21 < 0) {
      int v20 = v22;
    }
    uint64_t v4 = (v4 + v24 + v20 + 1);
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v6 = *(void **)(a1 + 8);
    if (!v6) {
      goto LABEL_35;
    }
    goto LABEL_51;
  }
  uint64_t v17 = *(void *)(a1 + 32);
  if (v17)
  {
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000EA16C(v17, a2);
    if (v18 < 0x80) {
      goto LABEL_38;
    }
LABEL_41:
    uint64_t v4 = v4
       + v18
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2)+ 1;
    if ((*(_DWORD *)(a1 + 52) & 8) != 0) {
      goto LABEL_42;
    }
    goto LABEL_34;
  }
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000EA16C(*(void *)(qword_10047EB28 + 32), a2);
  if (v18 >= 0x80) {
    goto LABEL_41;
  }
LABEL_38:
  uint64_t v4 = (v4 + v18 + 2);
  if ((*(_DWORD *)(a1 + 52) & 8) != 0) {
    goto LABEL_42;
  }
LABEL_34:
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v6 = *(void **)(a1 + 8);
  if (!v6)
  {
LABEL_35:
    *(_DWORD *)(a1 + 48) = v4;
    return v4;
  }
LABEL_51:
  if (*v6 == v6[1]) {
    goto LABEL_35;
  }
  uint64_t v25 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
      + v4;
  *(_DWORD *)(a1 + 48) = v25;
  return v25;
}

uint64_t sub_100140A38(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10013F7D4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100140B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100140B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100140B40(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100140BCC()
{
  return 1;
}

uint64_t sub_100140BD4()
{
  uint64_t v0 = qword_10047DBE0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10013B1E4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DB38;
}

void sub_100140C64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100140C78(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
    LOBYTE(v4) = *(unsigned char *)(a2 + 40);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 40);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047EB30 + 16);
    }
    sub_10001DD10(v5, v6);
    int v4 = *(_DWORD *)(a2 + 40);
  }
  if ((v4 & 2) == 0)
  {
    if ((v4 & 4) == 0) {
      goto LABEL_12;
    }
LABEL_16:
    int v10 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 40) |= 4u;
    *(_DWORD *)(a1 + 28) = v10;
    if ((*(_DWORD *)(a2 + 40) & 8) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_13;
  }
  int v9 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 40) |= 2u;
  *(_DWORD *)(a1 + 24) = v9;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_12:
  if ((v4 & 8) != 0)
  {
LABEL_13:
    int v7 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 8u;
    *(_DWORD *)(a1 + 32) = v7;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100140DFC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100140E24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100140E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100140E4C(void *a1)
{
  *a1 = off_100458218;
  if ((void *)qword_10047EB30 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100140EE0(void *a1)
{
  *a1 = off_100458218;
  if ((void *)qword_10047EB30 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100140F88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

uint64_t sub_100140F90(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047EB30;
  if (!qword_10047EB30)
  {
    sub_10013B964(0, a2, a3, a4);
    return qword_10047EB30;
  }
  return result;
}

void sub_100140FCC()
{
}

void sub_100141034()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10014105C(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 40))
  {
    if (*(unsigned char *)(this + 40))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 52))
        {
          *(_OWORD *)(this + 16) = 0u;
          *(_OWORD *)(this + 32) = 0u;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 44) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(void *)(v1 + 24) = 0;
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v4 = *(void *)(v1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 8) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_1001410E4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_22;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        unsigned int v24 = 0;
        unsigned int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v24))return 0; {
        }
          }
        else
        {
          unsigned int v24 = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v12 = *((_DWORD *)this + 14);
        int v13 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        int v14 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v24);
        if (!sub_10013CCBC(v10, this, v15, v16) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v14);
        int v17 = *((_DWORD *)this + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)this + 14) = v19;
        }
        int v20 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v20 >= *((void *)this + 2) || *v20 != 21) {
          continue;
        }
        *((void *)this + 1) = v20 + 1;
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
        goto LABEL_34;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_22;
        }
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
LABEL_34:
        *(_DWORD *)(a1 + 24) = v24;
        *(_DWORD *)(a1 + 40) |= 2u;
        char v21 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 != 29) {
          continue;
        }
        *((void *)this + 1) = v21 + 1;
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
LABEL_37:
        *(_DWORD *)(a1 + 28) = v24;
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 != 37) {
          continue;
        }
        *((void *)this + 1) = v22 + 1;
LABEL_40:
        unsigned int v24 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24))
        {
          *(_DWORD *)(a1 + 32) = v24;
          *(_DWORD *)(a1 + 40) |= 8u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_22;
        }
        unsigned int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
          return 0;
        }
        goto LABEL_37;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 5) {
          goto LABEL_22;
        }
        goto LABEL_40;
      default:
        int v9 = TagFallback & 7;
LABEL_22:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_10014144C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100141484(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 40);
      if ((v6 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047EB30 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 40);
      if ((v6 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 28), a3);
  if ((*(_DWORD *)(v5 + 40) & 8) == 0)
  {
LABEL_5:
    int v9 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 32), a3);
  unsigned int v11 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v11;
  if (!v11) {
    return result;
  }
LABEL_14:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

unsigned char *sub_100141580(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 10);
  if (v4)
  {
    int v8 = (unsigned int *)*((void *)this + 2);
    if (v8)
    {
      *a2 = 10;
      unsigned int v9 = a2 + 1;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8[12];
      if (v10 <= 0x7F) {
        goto LABEL_9;
      }
    }
    else
    {
      int v8 = *(unsigned int **)(qword_10047EB30 + 16);
      *a2 = 10;
      unsigned int v9 = a2 + 1;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8[12];
      if (v10 <= 0x7F)
      {
LABEL_9:
        a2[1] = (_BYTE)v10;
        a2 = (unsigned char *)sub_1000035A8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v8, (uint64_t)(a2 + 2), a3);
        int v4 = *((_DWORD *)this + 10);
        if ((v4 & 2) != 0) {
          goto LABEL_13;
        }
LABEL_3:
        if ((v4 & 4) == 0) {
          goto LABEL_4;
        }
        goto LABEL_14;
      }
    }
    uint64_t v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, v9, a3);
    a2 = (unsigned char *)sub_1000035A8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v8, v11, v12);
    int v4 = *((_DWORD *)this + 10);
    if ((v4 & 2) != 0) {
      goto LABEL_13;
    }
    goto LABEL_3;
  }
  if ((v4 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_13:
  int v13 = *((_DWORD *)this + 6);
  *a2 = 21;
  *(_DWORD *)(a2 + 1) = v13;
  a2 += 5;
  int v4 = *((_DWORD *)this + 10);
  if ((v4 & 4) == 0)
  {
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  int v14 = *((_DWORD *)this + 7);
  *a2 = 29;
  *(_DWORD *)(a2 + 1) = v14;
  a2 += 5;
  if ((*((_DWORD *)this + 10) & 8) == 0)
  {
LABEL_5:
    int v7 = (void *)*((void *)this + 1);
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = v7;
    if (!v7) {
      return a2;
    }
    goto LABEL_16;
  }
LABEL_15:
  int v15 = *((_DWORD *)this + 8);
  *a2 = 37;
  *(_DWORD *)(a2 + 1) = v15;
  a2 += 5;
  unsigned int v16 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v16;
  if (!v16) {
    return a2;
  }
LABEL_16:
  if (*v5 == v5[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100141710(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if ((_BYTE)v3)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0)
    {
      unsigned int v4 = 0;
      goto LABEL_25;
    }
    uint64_t v9 = *(void *)(a1 + 16);
    if (v9)
    {
      int v10 = *(unsigned __int8 *)(v9 + 52);
      if (*(unsigned char *)(v9 + 52)) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v9 = *(void *)(qword_10047EB30 + 16);
      int v10 = *(unsigned __int8 *)(v9 + 52);
      if (*(unsigned char *)(v9 + 52))
      {
LABEL_8:
        unsigned int v11 = (v10 << 31 >> 31) & 9;
        if ((v10 & 2) != 0) {
          v11 += 9;
        }
        if ((v10 & 4) != 0) {
          int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v11 + 9);
        }
        else {
          int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11;
        }
        if ((v10 & 8) != 0) {
          int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v12
        }
                                                                                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v9 + 40), (unint64_t)a2)+ 1);
        int v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8);
        int v14 = *(void **)(v9 + 8);
        if (!v14) {
          goto LABEL_21;
        }
        goto LABEL_19;
      }
    }
    int v12 = 0;
    int v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8);
    int v14 = *(void **)(v9 + 8);
    if (!v14)
    {
LABEL_21:
      *(_DWORD *)(v9 + 48) = v12;
      if (v12 >= 0x80) {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
      }
      else {
        int v15 = 1;
      }
      unsigned int v4 = v12 + v15 + 1;
      int v3 = *(_DWORD *)(a1 + 40);
LABEL_25:
      if ((v3 & 2) != 0) {
        v4 += 5;
      }
      if ((v3 & 4) != 0) {
        v4 += 5;
      }
      if ((v3 & 8) != 0) {
        uint64_t v5 = v4 + 5;
      }
      else {
        uint64_t v5 = v4;
      }
      int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v7 = *(void **)(a1 + 8);
      if (!v7) {
        goto LABEL_5;
      }
      goto LABEL_33;
    }
LABEL_19:
    if (*v14 != v14[1]) {
      int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v13, a2)+ v12);
    }
    goto LABEL_21;
  }
  uint64_t v5 = 0;
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = *(void **)(a1 + 8);
  if (!v7)
  {
LABEL_5:
    *(_DWORD *)(a1 + 36) = v5;
    return v5;
  }
LABEL_33:
  if (*v7 == v7[1]) {
    goto LABEL_5;
  }
  uint64_t v16 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 36) = v16;
  return v16;
}

uint64_t sub_100141878(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100140C78((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100141958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10014196C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100141980(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100141A0C()
{
  return 1;
}

uint64_t sub_100141A14()
{
  uint64_t v0 = qword_10047DBE0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10013B1E4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DB48;
}

void sub_100141AA4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100141AB8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
    LOBYTE(v4) = *(unsigned char *)(a2 + 36);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 36);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 36) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047EB38 + 16);
    }
    sub_10001DD10(v5, v6);
    int v4 = *(_DWORD *)(a2 + 36);
  }
  if ((v4 & 2) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 36) |= 2u;
    *(_DWORD *)(a1 + 24) = v7;
    int v4 = *(_DWORD *)(a2 + 36);
  }
  if ((v4 & 4) != 0)
  {
    int v8 = *(_DWORD *)(a2 + 28);
    *(_DWORD *)(a1 + 36) |= 4u;
    *(_DWORD *)(a1 + 28) = v8;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100141C14()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100141C3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100141C50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100141C64(void *a1)
{
  *a1 = off_1004582C8;
  if ((void *)qword_10047EB38 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100141CF8(void *a1)
{
  *a1 = off_1004582C8;
  if ((void *)qword_10047EB38 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100141DA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

uint64_t sub_100141DA8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047EB38;
  if (!qword_10047EB38)
  {
    sub_10013B964(0, a2, a3, a4);
    return qword_10047EB38;
  }
  return result;
}

void sub_100141DE4()
{
}

void sub_100141E48()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100141E70(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 36))
  {
    if (*(unsigned char *)(this + 36))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 52))
        {
          *(_OWORD *)(this + 16) = 0u;
          *(_OWORD *)(this + 32) = 0u;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 44) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(void *)(v1 + 24) = 0;
  }
  uint64_t v4 = *(void *)(v1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 7) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_100141EF4(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      int v7 = (char *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      unsigned int v9 = TagFallback >> 3;
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (v9 == 2)
      {
        int v10 = TagFallback & 7;
        if (v10 != 5) {
          goto LABEL_23;
        }
        unsigned int v25 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v25) & 1) == 0) {
          return 0;
        }
LABEL_35:
        *(_DWORD *)(a1 + 24) = v25;
        *(_DWORD *)(a1 + 36) |= 2u;
        uint64_t v22 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v22 < *((void *)this + 2) && *v22 == 29)
        {
          *((void *)this + 1) = v22 + 1;
          unsigned int v24 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
            return 0;
          }
LABEL_38:
          *(_DWORD *)(a1 + 28) = v24;
          *(_DWORD *)(a1 + 36) |= 4u;
          if (*((void *)this + 1) == *((void *)this + 2)
            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
        }
      }
      else
      {
        if (v9 == 3)
        {
          int v10 = TagFallback & 7;
          if (v10 == 5)
          {
            unsigned int v24 = 0;
            if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v24) & 1) == 0) {
              return 0;
            }
            goto LABEL_38;
          }
        }
        else
        {
          int v10 = TagFallback & 7;
        }
LABEL_23:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
      }
        }
    }
    int v10 = TagFallback & 7;
    if (v10 != 2) {
      goto LABEL_23;
    }
    *(_DWORD *)(a1 + 36) |= 1u;
    uint64_t v11 = *(void *)(a1 + 16);
    if (!v11) {
      operator new();
    }
    unsigned int v26 = 0;
    int v12 = (char *)*((void *)this + 1);
    if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v26)) {
        return 0;
      }
    }
    else
    {
      unsigned int v26 = *v12;
      *((void *)this + 1) = v12 + 1;
    }
    int v13 = *((_DWORD *)this + 14);
    int v14 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 14) = v13 + 1;
    if (v13 >= v14) {
      return 0;
    }
    int v15 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v26);
    if (!sub_10013CCBC(v11, this, v16, v17) || !*((unsigned char *)this + 36)) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v15);
    int v18 = *((_DWORD *)this + 14);
    BOOL v19 = __OFSUB__(v18, 1);
    int v20 = v18 - 1;
    if (v20 < 0 == v19) {
      *((_DWORD *)this + 14) = v20;
    }
    char v21 = (unsigned char *)*((void *)this + 1);
    if ((unint64_t)v21 < *((void *)this + 2) && *v21 == 21)
    {
      *((void *)this + 1) = v21 + 1;
      unsigned int v25 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v25) & 1) == 0) {
        return 0;
      }
      goto LABEL_35;
    }
  }
}

void sub_1001421F0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100142218(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 36);
      if ((v6 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047EB38 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 36);
      if ((v6 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 36) & 4) == 0)
  {
LABEL_4:
    unsigned int v9 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 28), a3);
  uint64_t v11 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v11;
  if (!v11) {
    return result;
  }
LABEL_12:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

unsigned char *sub_1001422F8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 9);
  if (v4)
  {
    int v8 = (unsigned int *)*((void *)this + 2);
    if (v8)
    {
      *a2 = 10;
      unsigned int v9 = a2 + 1;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8[12];
      if (v10 <= 0x7F) {
        goto LABEL_8;
      }
    }
    else
    {
      int v8 = *(unsigned int **)(qword_10047EB38 + 16);
      *a2 = 10;
      unsigned int v9 = a2 + 1;
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8[12];
      if (v10 <= 0x7F)
      {
LABEL_8:
        a2[1] = (_BYTE)v10;
        a2 = (unsigned char *)sub_1000035A8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v8, (uint64_t)(a2 + 2), a3);
        int v4 = *((_DWORD *)this + 9);
        if ((v4 & 2) != 0) {
          goto LABEL_12;
        }
LABEL_3:
        if ((v4 & 4) == 0) {
          goto LABEL_4;
        }
        goto LABEL_13;
      }
    }
    uint64_t v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, v9, a3);
    a2 = (unsigned char *)sub_1000035A8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v8, v11, v12);
    int v4 = *((_DWORD *)this + 9);
    if ((v4 & 2) != 0) {
      goto LABEL_12;
    }
    goto LABEL_3;
  }
  if ((v4 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_12:
  int v13 = *((_DWORD *)this + 6);
  *a2 = 21;
  *(_DWORD *)(a2 + 1) = v13;
  a2 += 5;
  if ((*((_DWORD *)this + 9) & 4) == 0)
  {
LABEL_4:
    int v7 = (void *)*((void *)this + 1);
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = v7;
    if (!v7) {
      return a2;
    }
    goto LABEL_14;
  }
LABEL_13:
  int v14 = *((_DWORD *)this + 7);
  *a2 = 29;
  *(_DWORD *)(a2 + 1) = v14;
  a2 += 5;
  int v15 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v15;
  if (!v15) {
    return a2;
  }
LABEL_14:
  if (*v5 == v5[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100142450(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if ((*(unsigned char *)(a1 + 36) & 1) == 0)
    {
      unsigned int v4 = 0;
      goto LABEL_25;
    }
    uint64_t v9 = *(void *)(a1 + 16);
    if (v9)
    {
      int v10 = *(unsigned __int8 *)(v9 + 52);
      if (*(unsigned char *)(v9 + 52)) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v9 = *(void *)(qword_10047EB38 + 16);
      int v10 = *(unsigned __int8 *)(v9 + 52);
      if (*(unsigned char *)(v9 + 52))
      {
LABEL_8:
        unsigned int v11 = (v10 << 31 >> 31) & 9;
        if ((v10 & 2) != 0) {
          v11 += 9;
        }
        if ((v10 & 4) != 0) {
          int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v11 + 9);
        }
        else {
          int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11;
        }
        if ((v10 & 8) != 0) {
          int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v12
        }
                                                                                + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v9 + 40), (unint64_t)a2)+ 1);
        int v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8);
        int v14 = *(void **)(v9 + 8);
        if (!v14) {
          goto LABEL_21;
        }
        goto LABEL_19;
      }
    }
    int v12 = 0;
    int v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8);
    int v14 = *(void **)(v9 + 8);
    if (!v14)
    {
LABEL_21:
      *(_DWORD *)(v9 + 48) = v12;
      if (v12 >= 0x80) {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
      }
      else {
        int v15 = 1;
      }
      unsigned int v4 = v12 + v15 + 1;
      int v3 = *(_DWORD *)(a1 + 36);
LABEL_25:
      if ((v3 & 2) != 0) {
        v4 += 5;
      }
      if ((v3 & 4) != 0) {
        uint64_t v5 = v4 + 5;
      }
      else {
        uint64_t v5 = v4;
      }
      int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v7 = *(void **)(a1 + 8);
      if (!v7) {
        goto LABEL_5;
      }
      goto LABEL_31;
    }
LABEL_19:
    if (*v14 != v14[1]) {
      int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v13, a2)+ v12);
    }
    goto LABEL_21;
  }
  uint64_t v5 = 0;
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = *(void **)(a1 + 8);
  if (!v7)
  {
LABEL_5:
    *(_DWORD *)(a1 + 32) = v5;
    return v5;
  }
LABEL_31:
  if (*v7 == v7[1]) {
    goto LABEL_5;
  }
  uint64_t v16 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 32) = v16;
  return v16;
}

uint64_t sub_1001425AC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100141AB8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10014268C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001426A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001426B4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100142740()
{
  return 1;
}

uint64_t sub_100142748()
{
  uint64_t v0 = qword_10047DBE0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10013B1E4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DB58;
}

void sub_1001427D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001427EC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
    sub_100148458((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), a2 + 24);
    if ((*(unsigned char *)(a2 + 52) & 1) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    sub_100148458((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), a2 + 24);
    if ((*(unsigned char *)(a2 + 52) & 1) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  *(_DWORD *)(a1 + 52) |= 1u;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    operator new();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_10047EB40 + 16);
  }
  sub_10001DD10(v4, v5);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100142924()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10014294C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100142960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100142974(uint64_t a1)
{
  *(void *)a1 = off_100458378;
  if (qword_10047EB40 != a1)
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  int v3 = *(_DWORD *)(a1 + 36);
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i < v3; ++i)
    {
      uint64_t v5 = *(void *)(*(void *)(a1 + 24) + 8 * i);
      if (v5)
      {
        (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
        int v3 = *(_DWORD *)(a1 + 36);
      }
    }
  }
  if (*(void *)(a1 + 24)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100142A80(uint64_t a1)
{
  sub_100142974(a1);

  operator delete();
}

uint64_t sub_100142AB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 48) = a2;
  return result;
}

uint64_t sub_100142AC0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047EB40;
  if (!qword_10047EB40)
  {
    sub_10013B964(0, a2, a3, a4);
    return qword_10047EB40;
  }
  return result;
}

void sub_100142AFC()
{
}

void sub_100142B68()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100142B90(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 52))
  {
    this = *(void *)(this + 16);
    if (this)
    {
      if (*(unsigned char *)(this + 52))
      {
        *(_OWORD *)(this + 16) = 0u;
        *(_OWORD *)(this + 32) = 0u;
      }
      uint64_t v2 = *(void *)(this + 8);
      this += 8;
      *(_DWORD *)(this + 44) = 0;
      if (v2) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  if (*(int *)(v1 + 32) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(v1 + 24) + 8 * v3);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 32));
  }
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v5 + 6) = 0;
  *((_DWORD *)v5 + 11) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return this;
}

uint64_t sub_100142C5C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      int v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v8;
        *((_DWORD *)this + 8) = TagFallback;
        *((void *)this + 1) = v8 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 2) {
        goto LABEL_19;
      }
      *(_DWORD *)(a1 + 52) |= 1u;
      uint64_t v15 = *(void *)(a1 + 16);
      if (!v15) {
        operator new();
      }
      unsigned int v36 = 0;
      uint64_t v16 = (char *)*((void *)this + 1);
      if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36))return 0; {
      }
        }
      else
      {
        unsigned int v36 = *v16;
        *((void *)this + 1) = v16 + 1;
      }
      int v17 = *((_DWORD *)this + 14);
      int v18 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v17 + 1;
      if (v17 >= v18) {
        return 0;
      }
      int v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v36);
      if (!sub_10013CCBC(v15, this, v20, v21) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
      int v22 = *((_DWORD *)this + 14);
      BOOL v23 = __OFSUB__(v22, 1);
      int v24 = v22 - 1;
      if (v24 < 0 == v23) {
        *((_DWORD *)this + 14) = v24;
      }
      unsigned int v25 = (unsigned char *)*((void *)this + 1);
      if ((unint64_t)v25 < *((void *)this + 2) && *v25 == 18)
      {
        do
        {
          *((void *)this + 1) = v25 + 1;
          int v11 = *(_DWORD *)(a1 + 36);
          uint64_t v12 = *(int *)(a1 + 32);
          if ((int)v12 >= v11) {
            goto LABEL_31;
          }
LABEL_11:
          uint64_t v13 = *(void *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v12 + 1;
          uint64_t v14 = *(void *)(v13 + 8 * v12);
          unsigned int v37 = 0;
          unsigned int v26 = (char *)*((void *)this + 1);
          if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0; {
          }
            }
          else
          {
            unsigned int v37 = *v26;
            *((void *)this + 1) = v26 + 1;
          }
          int v27 = *((_DWORD *)this + 14);
          int v28 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v27 + 1;
          if (v27 >= v28) {
            return 0;
          }
          int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
          if (!sub_10011D86C(v14, this, v30, v31) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
          int v32 = *((_DWORD *)this + 14);
          BOOL v23 = __OFSUB__(v32, 1);
          int v33 = v32 - 1;
          if (v33 < 0 == v23) {
            *((_DWORD *)this + 14) = v33;
          }
          unsigned int v25 = (unsigned char *)*((void *)this + 1);
          int v34 = (unsigned char *)*((void *)this + 2);
        }
        while (v25 < v34 && *v25 == 18);
        if (v25 == v34 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v10 = TagFallback & 7;
      if (v10 == 2)
      {
        int v11 = *(_DWORD *)(a1 + 36);
        uint64_t v12 = *(int *)(a1 + 32);
        if ((int)v12 < v11) {
          goto LABEL_11;
        }
LABEL_31:
        if (v11 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v11 + 1);
          int v11 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v11 + 1;
        operator new();
      }
    }
    else
    {
      int v10 = TagFallback & 7;
    }
LABEL_19:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_100142FDC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100143004()
{
}

uint64_t sub_100143028(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 52))
  {
    uint64_t v6 = *(void *)(result + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047EB40 + 16);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  int v10 = *(void **)(v5 + 8);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1001430EC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 52))
  {
    uint64_t v6 = (unsigned int *)*((void *)this + 2);
    if (v6)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v7 = a2 + 1;
      int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[12];
      if (v8 <= 0x7F)
      {
LABEL_4:
        *((unsigned char *)v4 + 1) = (_BYTE)v8;
        uint64_t v9 = (uint64_t)v4 + 2;
LABEL_7:
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000035A8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v6, v9, a3);
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v6 = *(unsigned int **)(qword_10047EB40 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v7 = a2 + 1;
      int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[12];
      if (v8 <= 0x7F) {
        goto LABEL_4;
      }
    }
    uint64_t v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    goto LABEL_7;
  }
LABEL_8:
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      uint64_t v12 = *(unsigned int **)(*((void *)this + 3) + 8 * v10);
      *(unsigned char *)uint64_t v4 = 18;
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12[20];
      if (v13 > 0x7F)
      {
        int v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)v4 + 1, a3);
      }
      else
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v13;
        int v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      uint64_t v4 = sub_10011E03C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v12, v11, a3, a4);
      ++v10;
    }
    while (v10 < *((int *)this + 8));
  }
  uint64_t v16 = (void *)*((void *)this + 1);
  uint64_t v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v14 = v16;
  if (!v16 || *v14 == v14[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v15, v4, a3);
}

uint64_t sub_100143228(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if ((*(unsigned char *)(a1 + 52) & 1) == 0)
  {
    int v3 = *(_DWORD *)(a1 + 32);
    uint64_t v4 = v3;
    if (v3 < 1) {
      goto LABEL_28;
    }
    goto LABEL_23;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    int v6 = *(unsigned __int8 *)(v5 + 52);
    if (*(unsigned char *)(v5 + 52)) {
      goto LABEL_6;
    }
LABEL_16:
    int v8 = 0;
    uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v10 = *(void **)(v5 + 8);
    if (!v10) {
      goto LABEL_19;
    }
    goto LABEL_17;
  }
  uint64_t v5 = *(void *)(qword_10047EB40 + 16);
  int v6 = *(unsigned __int8 *)(v5 + 52);
  if (!*(unsigned char *)(v5 + 52)) {
    goto LABEL_16;
  }
LABEL_6:
  unsigned int v7 = (v6 << 31 >> 31) & 9;
  if ((v6 & 2) != 0) {
    v7 += 9;
  }
  if ((v6 & 4) != 0) {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v7 + 9);
  }
  else {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7;
  }
  if ((v6 & 8) != 0) {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v8
  }
                                                                         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v5 + 40), (unint64_t)a2)+ 1);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v10 = *(void **)(v5 + 8);
  if (v10)
  {
LABEL_17:
    if (*v10 != v10[1]) {
      int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v9, a2)+ v8);
    }
  }
LABEL_19:
  *(_DWORD *)(v5 + 48) = v8;
  if (v8 >= 0x80) {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
  }
  else {
    int v11 = 1;
  }
  int v12 = *(_DWORD *)(a1 + 32);
  uint64_t v4 = (v12 + v8 + v11 + 1);
  if (v12 < 1) {
    goto LABEL_28;
  }
LABEL_23:
  uint64_t v13 = 0;
  do
  {
    uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10011E3C0(*(void *)(*(void *)(a1 + 24) + 8 * v13), a2);
    int v16 = (int)v15;
    if (v15 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    }
    else {
      int v14 = 1;
    }
    uint64_t v4 = (v16 + v4 + v14);
    ++v13;
  }
  while (v13 < *(int *)(a1 + 32));
LABEL_28:
  int v17 = *(void **)(a1 + 8);
  if (v17 && *v17 != v17[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 48) = v4;
  return v4;
}

uint64_t sub_1001433A4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001427EC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100143484(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100143498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001434AC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100143538()
{
  return 1;
}

uint64_t sub_100143540()
{
  uint64_t v0 = qword_10047DBE0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10013B1E4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DB68;
}

void sub_1001435D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001435E4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
    LOBYTE(v4) = *(unsigned char *)(a2 + 64);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    LOBYTE(v4) = *(unsigned char *)(a2 + 64);
    if (!(_BYTE)v4) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 64) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047EB48 + 16);
    }
    sub_10001DD10(v5, v6);
    int v4 = *(_DWORD *)(a2 + 64);
  }
  if ((v4 & 2) != 0)
  {
    unsigned int v7 = *(const std::string **)(a2 + 24);
    *(_DWORD *)(a1 + 64) |= 2u;
    int v8 = *(std::string **)(a1 + 24);
    if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v8, v7);
    int v4 = *(_DWORD *)(a2 + 64);
    if ((v4 & 4) == 0)
    {
LABEL_12:
      if ((v4 & 8) == 0) {
        goto LABEL_13;
      }
      goto LABEL_20;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v9 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 64) |= 4u;
  *(void *)(a1 + 32) = v9;
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 8) == 0)
  {
LABEL_13:
    if ((v4 & 0x10) == 0) {
      goto LABEL_14;
    }
LABEL_21:
    *(_DWORD *)(a1 + 64) |= 0x10u;
    uint64_t v11 = *(void *)(a1 + 40);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 40);
    if (v12)
    {
      sub_1000F7BB8(v11, v12);
      if ((*(_DWORD *)(a2 + 64) & 0x20) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
    }
    else
    {
      sub_1000F7BB8(v11, *(void *)(qword_10047EB48 + 40));
      if ((*(_DWORD *)(a2 + 64) & 0x20) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
    }
    goto LABEL_28;
  }
LABEL_20:
  int v10 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 64) |= 8u;
  *(_DWORD *)(a1 + 56) = v10;
  int v4 = *(_DWORD *)(a2 + 64);
  if ((v4 & 0x10) != 0) {
    goto LABEL_21;
  }
LABEL_14:
  if ((v4 & 0x20) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
LABEL_28:
  uint64_t v13 = *(const std::string **)(a2 + 48);
  *(_DWORD *)(a1 + 64) |= 0x20u;
  int v14 = *(std::string **)(a1 + 48);
  if (v14 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v14, v13);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10014387C()
{
}

void sub_1001438A0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001438C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001438DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_1001438F0(void *result)
{
  uint64_t v1 = result;
  uint64_t v2 = result[3];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  uint64_t v4 = result[6];
  if ((_UNKNOWN *)v4 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v4 != 0)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    operator delete();
  }
  if ((void *)qword_10047EB48 != result)
  {
    uint64_t v6 = result[2];
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t result = (void *)v1[5];
    if (result)
    {
      unsigned int v7 = *(uint64_t (**)(void))(*result + 8);
      return (void *)v7();
    }
  }
  return result;
}

void sub_100143A38(void *a1)
{
  *a1 = off_100458428;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_1001438F0(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100143A98(void *a1)
{
  *a1 = off_100458428;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_1001438F0(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100143B0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 60) = a2;
  return result;
}

uint64_t sub_100143B14(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047EB48;
  if (!qword_10047EB48)
  {
    sub_10013B964(0, a2, a3, a4);
    return qword_10047EB48;
  }
  return result;
}

void sub_100143B50()
{
}

void sub_100143BC4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100143BEC(uint64_t this)
{
  uint64_t v1 = this;
  if (!*(unsigned char *)(this + 64)) {
    goto LABEL_19;
  }
  if (*(unsigned char *)(this + 64))
  {
    this = *(void *)(this + 16);
    if (this)
    {
      if (*(unsigned char *)(this + 52))
      {
        *(_OWORD *)(this + 16) = 0u;
        *(_OWORD *)(this + 32) = 0u;
      }
      uint64_t v2 = *(void *)(this + 8);
      this += 8;
      *(_DWORD *)(this + 44) = 0;
      if (v2) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  if ((*(unsigned char *)(v1 + 64) & 2) == 0
    || (uint64_t v3 = *(void *)(v1 + 24), (_UNKNOWN *)v3 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
  {
LABEL_12:
    *(void *)(v1 + 32) = 0;
    *(_DWORD *)(v1 + 56) = 0;
    int v4 = *(_DWORD *)(v1 + 64);
    if ((v4 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if ((*(char *)(v3 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
    goto LABEL_12;
  }
  **(unsigned char **)uint64_t v3 = 0;
  *(void *)(v3 + 8) = 0;
  *(void *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 56) = 0;
  int v4 = *(_DWORD *)(v1 + 64);
  if ((v4 & 0x10) == 0) {
    goto LABEL_15;
  }
LABEL_13:
  this = *(void *)(v1 + 40);
  if (this)
  {
    this = sub_1000F7F50(this);
    int v4 = *(_DWORD *)(v1 + 64);
  }
LABEL_15:
  if ((v4 & 0x20) != 0)
  {
    uint64_t v5 = *(void *)(v1 + 48);
    if ((_UNKNOWN *)v5 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)uint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
        uint64_t v8 = *(void *)(v1 + 8);
        uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
        *((_DWORD *)v6 + 14) = 0;
        if (!v8) {
          return this;
        }
        goto LABEL_20;
      }
      *(unsigned char *)uint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
LABEL_19:
  uint64_t v7 = *(void *)(v1 + 8);
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v6 + 14) = 0;
  if (!v7) {
    return this;
  }
LABEL_20:

  return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v6);
}

uint64_t sub_100143D10(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (unint64_t *)(a1 + 32);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 64) |= 1u;
        uint64_t v11 = *(void *)(a1 + 16);
        if (!v11) {
          operator new();
        }
        unsigned int v43 = 0;
        uint64_t v12 = (char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v43))return 0; {
        }
          }
        else
        {
          unsigned int v43 = *v12;
          *((void *)this + 1) = v12 + 1;
        }
        int v34 = *((_DWORD *)this + 14);
        int v35 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v34 + 1;
        if (v34 >= v35) {
          return 0;
        }
        int v36 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v43);
        if (!sub_10013CCBC(v11, this, v37, v38) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v36);
        int v39 = *((_DWORD *)this + 14);
        BOOL v31 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v31) {
          *((_DWORD *)this + 14) = v40;
        }
        int v41 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 != 18) {
          continue;
        }
        *((void *)this + 1) = v41 + 1;
        *(_DWORD *)(a1 + 64) |= 2u;
        if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_17:
        }
          operator new();
LABEL_18:
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        uint64_t v15 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v15 >= v14 || *v15 != 24) {
          continue;
        }
        int v16 = v15 + 1;
        *((void *)this + 1) = v16;
LABEL_24:
        if ((unint64_t)v16 >= v14 || (char)*v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, v6);
          if (!result) {
            return result;
          }
          int v17 = (unsigned char *)*((void *)this + 1);
          unint64_t v14 = *((void *)this + 2);
          *(_DWORD *)(a1 + 64) |= 4u;
          if ((unint64_t)v17 < v14) {
            goto LABEL_41;
          }
          continue;
        }
        *uint64_t v6 = *v16;
        int v17 = v16 + 1;
        *((void *)this + 1) = v17;
        *(_DWORD *)(a1 + 64) |= 4u;
        if ((unint64_t)v17 >= v14) {
          continue;
        }
LABEL_41:
        if (*v17 != 32) {
          continue;
        }
        int v19 = v17 + 1;
        *((void *)this + 1) = v19;
        unsigned int v42 = 0;
        if ((unint64_t)v19 < v14)
        {
LABEL_43:
          int v22 = (char)*v19;
          if ((v22 & 0x80000000) == 0)
          {
            signed int v23 = *v19;
            *((void *)this + 1) = v19 + 1;
            if (!sub_10011C654(v22)) {
              goto LABEL_48;
            }
            goto LABEL_45;
          }
        }
LABEL_46:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v42);
        if (!result) {
          return result;
        }
        signed int v23 = v42;
        if (!sub_10011C654(v42))
        {
LABEL_48:
          wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v7, 4, v23);
          goto LABEL_49;
        }
LABEL_45:
        *(_DWORD *)(a1 + 64) |= 8u;
        *(_DWORD *)(a1 + 56) = v23;
LABEL_49:
        int v24 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v24 >= *((void *)this + 2) || *v24 != 42) {
          continue;
        }
        *((void *)this + 1) = v24 + 1;
        *(_DWORD *)(a1 + 64) |= 0x10u;
        uint64_t v20 = *(void *)(a1 + 40);
        if (!v20) {
LABEL_52:
        }
          operator new();
LABEL_33:
        unsigned int v44 = 0;
        char v21 = (char *)*((void *)this + 1);
        if ((unint64_t)v21 >= *((void *)this + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44))return 0; {
        }
          }
        else
        {
          unsigned int v44 = *v21;
          *((void *)this + 1) = v21 + 1;
        }
        int v25 = *((_DWORD *)this + 14);
        int v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 < v26)
        {
          int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v44);
          if (sub_1000F7FC8(v20, this, v28, v29))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
              int v30 = *((_DWORD *)this + 14);
              BOOL v31 = __OFSUB__(v30, 1);
              int v32 = v30 - 1;
              if (v32 < 0 == v31) {
                *((_DWORD *)this + 14) = v32;
              }
              int v33 = (unsigned char *)*((void *)this + 1);
              if ((unint64_t)v33 < *((void *)this + 2) && *v33 == 50)
              {
                *((void *)this + 1) = v33 + 1;
LABEL_64:
                *(_DWORD *)(a1 + 64) |= 0x20u;
                if (*(_UNKNOWN **)(a1 + 48) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
                  operator new();
                }
                uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
                if (!result) {
                  return result;
                }
                if (*((void *)this + 1) == *((void *)this + 2)
                  && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                {
                  *((_DWORD *)this + 8) = 0;
                  uint64_t result = 1;
                  *((unsigned char *)this + 36) = 1;
                  return result;
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 64) |= 2u;
        if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          goto LABEL_17;
        }
        goto LABEL_18;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v16 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_24;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_36;
        }
        int v19 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        unsigned int v42 = 0;
        if ((unint64_t)v19 >= v18) {
          goto LABEL_46;
        }
        goto LABEL_43;
      case 5u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 64) |= 0x10u;
        uint64_t v20 = *(void *)(a1 + 40);
        if (v20) {
          goto LABEL_33;
        }
        goto LABEL_52;
      case 6u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_36;
        }
        goto LABEL_64;
      default:
        int v10 = TagFallback & 7;
LABEL_36:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_100144298()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1001442C0()
{
}

uint64_t sub_1001442FC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 64);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 64);
      if ((v6 & 2) != 0) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047EB48 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 64);
      if ((v6 & 2) != 0) {
        goto LABEL_13;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 32), (unint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_16:
    uint64_t v11 = *(void *)(v5 + 40);
    if (v11)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
      if ((*(_DWORD *)(v5 + 64) & 0x20) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(qword_10047EB48 + 40), a2, a4);
      if ((*(_DWORD *)(v5 + 64) & 0x20) != 0) {
        goto LABEL_20;
      }
    }
LABEL_7:
    uint64_t v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_15:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 56), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 64);
  if ((v6 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    goto LABEL_7;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  uint64_t v12 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v12;
  if (!v12) {
    return result;
  }
LABEL_21:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100144458(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v4 = a2;
  int v6 = *((_DWORD *)this + 16);
  if (v6)
  {
    uint64_t v11 = (unsigned int *)*((void *)this + 2);
    if (v11)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v12 = a2 + 1;
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[12];
      if (v13 <= 0x7F) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v11 = *(unsigned int **)(qword_10047EB48 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v12 = a2 + 1;
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[12];
      if (v13 <= 0x7F)
      {
LABEL_11:
        *((unsigned char *)v4 + 1) = (_BYTE)v13;
        int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000035A8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, (uint64_t)v4 + 2, a3);
        int v6 = *((_DWORD *)this + 16);
        if ((v6 & 2) != 0) {
          goto LABEL_15;
        }
LABEL_3:
        if ((v6 & 4) == 0) {
          goto LABEL_4;
        }
        goto LABEL_27;
      }
    }
    uint64_t v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v12, a3);
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000035A8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v14, v15);
    int v6 = *((_DWORD *)this + 16);
    if ((v6 & 2) != 0) {
      goto LABEL_15;
    }
    goto LABEL_3;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_15:
  uint64_t v16 = *((void *)this + 3);
  *(unsigned char *)int v4 = 18;
  if (*(char *)(v16 + 23) < 0)
  {
    int v17 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v16 + 8);
    if (v17 <= 0x7F) {
      goto LABEL_17;
    }
  }
  else
  {
    int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v16 + 23);
    if (*(unsigned __int8 *)(v16 + 23) <= 0x7Fu)
    {
LABEL_17:
      *((unsigned char *)v4 + 1) = (_BYTE)v17;
      int v18 = v4 + 2;
      goto LABEL_20;
    }
  }
  int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)v4 + 1, a3);
LABEL_20:
  int v19 = *(char *)(v16 + 23);
  if (v19 >= 0) {
    uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16;
  }
  else {
    uint64_t v20 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v16;
  }
  if (v19 >= 0) {
    char v21 = (const void *)*(unsigned __int8 *)(v16 + 23);
  }
  else {
    char v21 = (const void *)*(unsigned int *)(v16 + 8);
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v20, v21, v18, a4);
  int v6 = *((_DWORD *)this + 16);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_28:
    signed int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 14);
    *(unsigned char *)int v4 = 32;
    unint64_t v24 = (unint64_t)v4 + 1;
    if ((v23 & 0x80000000) != 0)
    {
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v23, v24, a3);
      int v7 = *((_DWORD *)this + 16);
      if ((v7 & 0x10) != 0) {
        goto LABEL_35;
      }
    }
    else if (v23 > 0x7F)
    {
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, v24, a3);
      int v7 = *((_DWORD *)this + 16);
      if ((v7 & 0x10) != 0) {
        goto LABEL_35;
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v23;
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      int v7 = *((_DWORD *)this + 16);
      if ((v7 & 0x10) != 0) {
        goto LABEL_35;
      }
    }
LABEL_6:
    if ((v7 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_41:
    uint64_t v30 = *((void *)this + 6);
    *(unsigned char *)int v4 = 50;
    if (*(char *)(v30 + 23) < 0)
    {
      BOOL v31 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v30 + 8);
      if (v31 <= 0x7F) {
        goto LABEL_43;
      }
    }
    else
    {
      BOOL v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v30 + 23);
      if (*(unsigned __int8 *)(v30 + 23) <= 0x7Fu)
      {
LABEL_43:
        *((unsigned char *)v4 + 1) = (_BYTE)v31;
        int v32 = v4 + 2;
        goto LABEL_46;
      }
    }
    int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, (int)v4 + 1, a3);
LABEL_46:
    int v33 = *(char *)(v30 + 23);
    if (v33 >= 0) {
      int v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v30;
    }
    else {
      int v34 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v30;
    }
    if (v33 >= 0) {
      int v35 = (const void *)*(unsigned __int8 *)(v30 + 23);
    }
    else {
      int v35 = (const void *)*(unsigned int *)(v30 + 8);
    }
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v34, v35, v32, a4);
    int v36 = (void *)*((void *)this + 1);
    uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v8 = v36;
    if (!v36) {
      return v4;
    }
    goto LABEL_53;
  }
LABEL_27:
  int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 4);
  *(unsigned char *)int v4 = 24;
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v22, (unint64_t)v4 + 1, a3);
  if ((*((_DWORD *)this + 16) & 8) != 0) {
    goto LABEL_28;
  }
LABEL_5:
  int v7 = *((_DWORD *)this + 16);
  if ((v7 & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_35:
  int v25 = (unsigned int *)*((void *)this + 5);
  if (v25)
  {
    *(unsigned char *)int v4 = 42;
    unsigned int v26 = v4 + 1;
    int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25[8];
    if (v27 <= 0x7F) {
      goto LABEL_37;
    }
LABEL_40:
    uint64_t v28 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, v26, a3);
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000F8338((wireless_diagnostics::google::protobuf::internal::WireFormat *)v25, v28, v29);
    if ((*((_DWORD *)this + 16) & 0x20) != 0) {
      goto LABEL_41;
    }
    goto LABEL_7;
  }
  int v25 = *(unsigned int **)(qword_10047EB48 + 40);
  *(unsigned char *)int v4 = 42;
  unsigned int v26 = v4 + 1;
  int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25[8];
  if (v27 > 0x7F) {
    goto LABEL_40;
  }
LABEL_37:
  *((unsigned char *)v4 + 1) = (_BYTE)v27;
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000F8338((wireless_diagnostics::google::protobuf::internal::WireFormat *)v25, (unsigned char *)v4 + 2, a3);
  if ((*((_DWORD *)this + 16) & 0x20) != 0) {
    goto LABEL_41;
  }
LABEL_7:
  uint64_t v10 = (void *)*((void *)this + 1);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v8 = v10;
  if (!v10) {
    return v4;
  }
LABEL_53:
  if (*v8 == v8[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, v4, a3);
}

uint64_t sub_100144730(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 64);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v6 = *(void **)(a1 + 8);
    if (!v6) {
      goto LABEL_40;
    }
    goto LABEL_64;
  }
  if ((*(unsigned char *)(a1 + 64) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 64) & 2) == 0) {
      goto LABEL_35;
    }
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    int v8 = *(unsigned __int8 *)(v7 + 52);
    if (*(unsigned char *)(v7 + 52)) {
      goto LABEL_9;
    }
LABEL_19:
    uint64_t v10 = 0;
    uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v7 + 8);
    unsigned int v12 = *(void **)(v7 + 8);
    if (!v12) {
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  uint64_t v7 = *(void *)(qword_10047EB48 + 16);
  int v8 = *(unsigned __int8 *)(v7 + 52);
  if (!*(unsigned char *)(v7 + 52)) {
    goto LABEL_19;
  }
LABEL_9:
  unsigned int v9 = (v8 << 31 >> 31) & 9;
  if ((v8 & 2) != 0) {
    v9 += 9;
  }
  if ((v8 & 4) != 0) {
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v9 + 9);
  }
  else {
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9;
  }
  if ((v8 & 8) != 0) {
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v10
  }
                                                                          + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v7 + 40), (unint64_t)a2)+ 1);
  uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v7 + 8);
  unsigned int v12 = *(void **)(v7 + 8);
  if (v12)
  {
LABEL_20:
    if (*v12 != v12[1]) {
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v11, a2)+ v10);
    }
  }
LABEL_22:
  *(_DWORD *)(v7 + 48) = v10;
  if (v10 >= 0x80)
  {
    uint64_t v4 = v10
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 64);
    if ((v3 & 2) == 0) {
      goto LABEL_35;
    }
  }
  else
  {
    uint64_t v4 = (v10 + 2);
    int v3 = *(_DWORD *)(a1 + 64);
    if ((v3 & 2) == 0) {
      goto LABEL_35;
    }
  }
LABEL_26:
  uint64_t v13 = *(void *)(a1 + 24);
  int v14 = *(unsigned __int8 *)(v13 + 23);
  char v15 = v14;
  uint64_t v16 = *(void *)(v13 + 8);
  if ((v14 & 0x80u) == 0) {
    unint64_t v17 = *(unsigned __int8 *)(v13 + 23);
  }
  else {
    unint64_t v17 = v16;
  }
  if (v17 >= 0x80)
  {
    int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17, a2);
    int v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v16 = *(void *)(v13 + 8);
    int v3 = *(_DWORD *)(a1 + 64);
    char v15 = *(unsigned char *)(v13 + 23);
  }
  else
  {
    int v18 = 1;
  }
  if (v15 < 0) {
    int v14 = v16;
  }
  uint64_t v4 = (v4 + v18 + v14 + 1);
LABEL_35:
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_37;
    }
LABEL_42:
    uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    if ((v20 & 0x80000000) != 0)
    {
      uint64_t v4 = (v4 + 11);
      if ((v3 & 0x10) != 0) {
        goto LABEL_49;
      }
    }
    else if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
      int v3 = *(_DWORD *)(a1 + 64);
      uint64_t v4 = (v21 + 1 + v4);
      if ((v3 & 0x10) != 0) {
        goto LABEL_49;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      if ((v3 & 0x10) != 0) {
        goto LABEL_49;
      }
    }
LABEL_38:
    if ((v3 & 0x20) == 0) {
      goto LABEL_39;
    }
LABEL_55:
    uint64_t v24 = *(void *)(a1 + 48);
    int v25 = *(unsigned __int8 *)(v24 + 23);
    char v26 = v25;
    uint64_t v27 = *(void *)(v24 + 8);
    if ((v25 & 0x80u) == 0) {
      unint64_t v28 = *(unsigned __int8 *)(v24 + 23);
    }
    else {
      unint64_t v28 = v27;
    }
    if (v28 >= 0x80)
    {
      int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v28, a2);
      int v25 = *(unsigned __int8 *)(v24 + 23);
      uint64_t v27 = *(void *)(v24 + 8);
      char v26 = *(unsigned char *)(v24 + 23);
    }
    else
    {
      int v29 = 1;
    }
    if (v26 < 0) {
      int v25 = v27;
    }
    uint64_t v4 = (v4 + v29 + v25 + 1);
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v6 = *(void **)(a1 + 8);
    if (!v6) {
      goto LABEL_40;
    }
    goto LABEL_64;
  }
  uint64_t v4 = v4
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 32), (unint64_t)a2)+ 1;
  int v3 = *(_DWORD *)(a1 + 64);
  if ((v3 & 8) != 0) {
    goto LABEL_42;
  }
LABEL_37:
  if ((v3 & 0x10) == 0) {
    goto LABEL_38;
  }
LABEL_49:
  uint64_t v22 = *(void *)(a1 + 40);
  if (v22)
  {
    signed int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000F84E4(v22, a2);
    if (v23 < 0x80) {
      goto LABEL_51;
    }
LABEL_54:
    uint64_t v4 = v4
       + v23
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23, a2)+ 1;
    if ((*(_DWORD *)(a1 + 64) & 0x20) != 0) {
      goto LABEL_55;
    }
    goto LABEL_39;
  }
  signed int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1000F84E4(*(void *)(qword_10047EB48 + 40), a2);
  if (v23 >= 0x80) {
    goto LABEL_54;
  }
LABEL_51:
  uint64_t v4 = (v4 + v23 + 2);
  if ((*(_DWORD *)(a1 + 64) & 0x20) != 0) {
    goto LABEL_55;
  }
LABEL_39:
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v6 = *(void **)(a1 + 8);
  if (!v6)
  {
LABEL_40:
    *(_DWORD *)(a1 + 60) = v4;
    return v4;
  }
LABEL_64:
  if (*v6 == v6[1]) {
    goto LABEL_40;
  }
  uint64_t v30 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
      + v4;
  *(_DWORD *)(a1 + 60) = v30;
  return v30;
}

uint64_t sub_100144A18(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1001435E4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100144AF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100144B0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100144B20(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100144BAC()
{
  return 1;
}

uint64_t sub_100144BB4()
{
  uint64_t v0 = qword_10047DBE0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10013B1E4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DB78;
}

void sub_100144C44(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100144C58(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
    int v4 = *(_DWORD *)(a2 + 128);
    if (!(_BYTE)v4) {
      goto LABEL_18;
    }
  }
  else
  {
    int v4 = *(_DWORD *)(a2 + 128);
    if (!(_BYTE)v4) {
      goto LABEL_18;
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 128) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_10047EB50 + 16);
    }
    sub_10001DD10(v5, v6);
    int v4 = *(_DWORD *)(a2 + 128);
  }
  if ((v4 & 2) != 0)
  {
    uint64_t v17 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 128) |= 2u;
    *(void *)(a1 + 24) = v17;
    int v4 = *(_DWORD *)(a2 + 128);
    if ((v4 & 4) == 0)
    {
LABEL_12:
      if ((v4 & 8) == 0) {
        goto LABEL_13;
      }
      goto LABEL_39;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v18 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 128) |= 4u;
  *(void *)(a1 + 32) = v18;
  int v4 = *(_DWORD *)(a2 + 128);
  if ((v4 & 8) == 0)
  {
LABEL_13:
    if ((v4 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v19 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 128) |= 8u;
  *(void *)(a1 + 40) = v19;
  int v4 = *(_DWORD *)(a2 + 128);
  if ((v4 & 0x10) == 0)
  {
LABEL_14:
    if ((v4 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v20 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 128) |= 0x10u;
  *(void *)(a1 + 48) = v20;
  int v4 = *(_DWORD *)(a2 + 128);
  if ((v4 & 0x20) == 0)
  {
LABEL_15:
    if ((v4 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_42;
  }
LABEL_41:
  int v21 = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 128) |= 0x20u;
  *(_DWORD *)(a1 + 80) = v21;
  int v4 = *(_DWORD *)(a2 + 128);
  if ((v4 & 0x40) == 0)
  {
LABEL_16:
    if ((v4 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_42:
  uint64_t v22 = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 128) |= 0x40u;
  *(void *)(a1 + 56) = v22;
  int v4 = *(_DWORD *)(a2 + 128);
  if ((v4 & 0x80) != 0)
  {
LABEL_17:
    uint64_t v7 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 128) |= 0x80u;
    *(void *)(a1 + 64) = v7;
    int v4 = *(_DWORD *)(a2 + 128);
  }
LABEL_18:
  if ((v4 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t v10 = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 128) |= 0x100u;
    *(void *)(a1 + 72) = v10;
    int v4 = *(_DWORD *)(a2 + 128);
    if ((v4 & 0x200) == 0)
    {
LABEL_21:
      if ((v4 & 0x400) == 0) {
        goto LABEL_22;
      }
      goto LABEL_30;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_21;
  }
  uint64_t v11 = *(void *)(a2 + 88);
  *(_DWORD *)(a1 + 128) |= 0x200u;
  *(void *)(a1 + 88) = v11;
  int v4 = *(_DWORD *)(a2 + 128);
  if ((v4 & 0x400) == 0)
  {
LABEL_22:
    if ((v4 & 0x800) == 0) {
      goto LABEL_23;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v12 = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 128) |= 0x400u;
  *(void *)(a1 + 96) = v12;
  int v4 = *(_DWORD *)(a2 + 128);
  if ((v4 & 0x800) == 0)
  {
LABEL_23:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_34;
  }
LABEL_31:
  uint64_t v13 = *(const std::string **)(a2 + 104);
  *(_DWORD *)(a1 + 128) |= 0x800u;
  int v14 = *(std::string **)(a1 + 104);
  if (v14 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v14, v13);
  int v4 = *(_DWORD *)(a2 + 128);
  if ((v4 & 0x1000) == 0)
  {
LABEL_24:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_25;
    }
LABEL_35:
    uint64_t v16 = *(void *)(a2 + 112);
    *(_DWORD *)(a1 + 128) |= 0x2000u;
    *(void *)(a1 + 112) = v16;
    if ((*(_DWORD *)(a2 + 128) & 0x4000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_26;
  }
LABEL_34:
  int v15 = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 128) |= 0x1000u;
  *(_DWORD *)(a1 + 84) = v15;
  int v4 = *(_DWORD *)(a2 + 128);
  if ((v4 & 0x2000) != 0) {
    goto LABEL_35;
  }
LABEL_25:
  if ((v4 & 0x4000) != 0)
  {
LABEL_26:
    int v8 = *(_DWORD *)(a2 + 120);
    *(_DWORD *)(a1 + 128) |= 0x4000u;
    *(_DWORD *)(a1 + 120) = v8;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100144F88()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100144FB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100144FC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100144FD8(void *a1)
{
  *a1 = off_1004584D8;
  uint64_t v2 = a1[13];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if ((void *)qword_10047EB50 != a1)
  {
    uint64_t v4 = a1[2];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1001450AC(void *a1)
{
  *a1 = off_1004584D8;
  uint64_t v2 = a1[13];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if ((void *)qword_10047EB50 != a1)
  {
    uint64_t v4 = a1[2];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100145194(uint64_t result, int a2)
{
  *(_DWORD *)(result + 124) = a2;
  return result;
}

uint64_t sub_10014519C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047EB50;
  if (!qword_10047EB50)
  {
    sub_10013B964(0, a2, a3, a4);
    return qword_10047EB50;
  }
  return result;
}

void sub_1001451D8()
{
}

void sub_100145258()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100145280(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 128);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 52))
        {
          *(_OWORD *)(this + 16) = 0u;
          *(_OWORD *)(this + 32) = 0u;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 44) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(_DWORD *)(v1 + 80) = 0;
    *(_OWORD *)(v1 + 24) = 0u;
    *(_OWORD *)(v1 + 40) = 0u;
    *(_OWORD *)(v1 + 56) = 0u;
    int v2 = *(_DWORD *)(v1 + 128);
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 88) = 0;
    *(void *)(v1 + 96) = 0;
    if ((v2 & 0x800) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 104);
      if ((_UNKNOWN *)v4 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(v1 + 84) = 0;
    *(void *)(v1 + 112) = 0;
    *(_DWORD *)(v1 + 120) = 0;
  }
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v5 + 30) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return this;
}

uint64_t sub_100145370(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_61;
        }
        *(_DWORD *)(a1 + 128) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        v46[0] = 0;
        uint64_t v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46))return 0; {
        }
          }
        else
        {
          v46[0] = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v25 = *((_DWORD *)this + 14);
        int v26 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v25 + 1;
        if (v25 >= v26) {
          return 0;
        }
        int v27 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v46[0]);
        if (!sub_10013CCBC(v10, this, v28, v29) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v27);
        int v30 = *((_DWORD *)this + 14);
        BOOL v31 = __OFSUB__(v30, 1);
        int v32 = v30 - 1;
        if (v32 < 0 == v31) {
          *((_DWORD *)this + 14) = v32;
        }
        int v33 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v33 >= *((void *)this + 2) || *v33 != 17) {
          continue;
        }
        *((void *)this + 1) = v33 + 1;
        *(void *)uint64_t v46 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46) & 1) == 0)return 0; {
LABEL_94:
        }
        *(void *)(a1 + 24) = *(void *)v46;
        *(_DWORD *)(a1 + 128) |= 2u;
        int v34 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v34 >= *((void *)this + 2) || *v34 != 25) {
          continue;
        }
        *((void *)this + 1) = v34 + 1;
        *(void *)uint64_t v46 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46) & 1) == 0)return 0; {
LABEL_97:
        }
        *(void *)(a1 + 32) = *(void *)v46;
        *(_DWORD *)(a1 + 128) |= 4u;
        int v35 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v35 >= *((void *)this + 2) || *v35 != 33) {
          continue;
        }
        *((void *)this + 1) = v35 + 1;
        *(void *)uint64_t v46 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46) & 1) == 0)return 0; {
LABEL_100:
        }
        *(void *)(a1 + 40) = *(void *)v46;
        *(_DWORD *)(a1 + 128) |= 8u;
        int v36 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v36 >= *((void *)this + 2) || *v36 != 41) {
          continue;
        }
        *((void *)this + 1) = v36 + 1;
        *(void *)uint64_t v46 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46) & 1) == 0)return 0; {
LABEL_103:
        }
        *(void *)(a1 + 48) = *(void *)v46;
        *(_DWORD *)(a1 + 128) |= 0x10u;
        uint64_t v37 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v37 >= v12 || *v37 != 48) {
          continue;
        }
        uint64_t v13 = v37 + 1;
        *((void *)this + 1) = v13;
LABEL_106:
        v46[0] = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46);
          if (!result) {
            return result;
          }
          unsigned int v38 = v46[0];
          if (v46[0] <= 2)
          {
LABEL_109:
            *(_DWORD *)(a1 + 128) |= 0x20u;
            *(_DWORD *)(a1 + 80) = v38;
            goto LABEL_113;
          }
        }
        else
        {
          unsigned int v38 = *v13;
          *((void *)this + 1) = v13 + 1;
          if (v38 <= 2) {
            goto LABEL_109;
          }
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 6, (int)v38);
LABEL_113:
        int v39 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v39 >= *((void *)this + 2) || *v39 != 57) {
          continue;
        }
        *((void *)this + 1) = v39 + 1;
        *(void *)uint64_t v46 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46) & 1) == 0)return 0; {
LABEL_116:
        }
        *(void *)(a1 + 56) = *(void *)v46;
        *(_DWORD *)(a1 + 128) |= 0x40u;
        int v40 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v40 >= *((void *)this + 2) || *v40 != 65) {
          continue;
        }
        *((void *)this + 1) = v40 + 1;
        *(void *)uint64_t v46 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46) & 1) == 0)return 0; {
LABEL_119:
        }
        *(void *)(a1 + 64) = *(void *)v46;
        *(_DWORD *)(a1 + 128) |= 0x80u;
        int v41 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v41 >= *((void *)this + 2) || *v41 != 73) {
          continue;
        }
        *((void *)this + 1) = v41 + 1;
        *(void *)uint64_t v46 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46) & 1) == 0)return 0; {
LABEL_122:
        }
        *(void *)(a1 + 72) = *(void *)v46;
        *(_DWORD *)(a1 + 128) |= 0x100u;
        unsigned int v42 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v42 >= *((void *)this + 2) || *v42 != 81) {
          continue;
        }
        *((void *)this + 1) = v42 + 1;
        *(void *)uint64_t v46 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46) & 1) == 0)return 0; {
LABEL_125:
        }
        *(void *)(a1 + 88) = *(void *)v46;
        *(_DWORD *)(a1 + 128) |= 0x200u;
        unsigned int v43 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v43 >= *((void *)this + 2) || *v43 != 89) {
          continue;
        }
        *((void *)this + 1) = v43 + 1;
        *(void *)uint64_t v46 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46))
        {
LABEL_128:
          *(void *)(a1 + 96) = *(void *)v46;
          int v44 = *(_DWORD *)(a1 + 128) | 0x400;
          *(_DWORD *)(a1 + 128) = v44;
          uint64_t v45 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v45 < *((void *)this + 2) && *v45 == 98)
          {
            *((void *)this + 1) = v45 + 1;
            *(_DWORD *)(a1 + 128) = v44 | 0x800;
            if (*(_UNKNOWN **)(a1 + 104) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_46:
            }
              operator new();
LABEL_47:
            uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
            if (!result) {
              return result;
            }
            uint64_t v16 = (unsigned char *)*((void *)this + 1);
            unint64_t v15 = *((void *)this + 2);
            if ((unint64_t)v16 < v15 && *v16 == 104)
            {
              uint64_t v17 = v16 + 1;
              *((void *)this + 1) = v17;
              v46[0] = 0;
              if ((unint64_t)v17 < v15)
              {
LABEL_54:
                if ((*v17 & 0x80000000) == 0)
                {
                  unsigned int v19 = *v17;
                  *((void *)this + 1) = v17 + 1;
                  if (v19 > 2) {
                    goto LABEL_67;
                  }
                  goto LABEL_56;
                }
              }
LABEL_65:
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46);
              if (!result) {
                return result;
              }
              unsigned int v19 = v46[0];
              if (v46[0] > 2)
              {
LABEL_67:
                wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 13, (int)v19);
                goto LABEL_68;
              }
LABEL_56:
              *(_DWORD *)(a1 + 128) |= 0x1000u;
              *(_DWORD *)(a1 + 84) = v19;
LABEL_68:
              uint64_t v22 = (unsigned char *)*((void *)this + 1);
              if ((unint64_t)v22 < *((void *)this + 2) && *v22 == 113)
              {
                *((void *)this + 1) = v22 + 1;
                *(void *)uint64_t v46 = 0;
                if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46) & 1) == 0)return 0; {
LABEL_71:
                }
                *(void *)(a1 + 112) = *(void *)v46;
                *(_DWORD *)(a1 + 128) |= 0x2000u;
                signed int v23 = (unsigned char *)*((void *)this + 1);
                unint64_t v20 = *((void *)this + 2);
                if ((unint64_t)v23 < v20 && *v23 == 120)
                {
                  int v21 = v23 + 1;
                  *((void *)this + 1) = v21;
LABEL_74:
                  v46[0] = 0;
                  if ((unint64_t)v21 >= v20 || *v21 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v46);
                    if (!result) {
                      return result;
                    }
                    unsigned int v24 = v46[0];
                    if (v46[0] <= 5) {
                      goto LABEL_77;
                    }
LABEL_81:
                    wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 15, (int)v24);
                    if (*((void *)this + 1) == *((void *)this + 2)) {
                      goto LABEL_82;
                    }
                  }
                  else
                  {
                    unsigned int v24 = *v21;
                    *((void *)this + 1) = v21 + 1;
                    if (v24 > 5) {
                      goto LABEL_81;
                    }
LABEL_77:
                    *(_DWORD *)(a1 + 128) |= 0x4000u;
                    *(_DWORD *)(a1 + 120) = v24;
                    if (*((void *)this + 1) == *((void *)this + 2))
                    {
LABEL_82:
                      if (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
                      {
                        *((_DWORD *)this + 8) = 0;
                        uint64_t result = 1;
                        *((unsigned char *)this + 36) = 1;
                        return result;
                      }
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_61;
        }
        *(void *)uint64_t v46 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46) & 1) == 0)return 0; {
        goto LABEL_94;
        }
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_61;
        }
        *(void *)uint64_t v46 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46) & 1) == 0)return 0; {
        goto LABEL_97;
        }
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_61;
        }
        *(void *)uint64_t v46 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46) & 1) == 0)return 0; {
        goto LABEL_100;
        }
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_61;
        }
        *(void *)uint64_t v46 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46) & 1) == 0)return 0; {
        goto LABEL_103;
        }
      case 6u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_61;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_106;
      case 7u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_61;
        }
        *(void *)uint64_t v46 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46) & 1) == 0)return 0; {
        goto LABEL_116;
        }
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_61;
        }
        *(void *)uint64_t v46 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46) & 1) == 0)return 0; {
        goto LABEL_119;
        }
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_61;
        }
        *(void *)uint64_t v46 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46) & 1) == 0)return 0; {
        goto LABEL_122;
        }
      case 0xAu:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_61;
        }
        *(void *)uint64_t v46 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46) & 1) == 0)return 0; {
        goto LABEL_125;
        }
      case 0xBu:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_61;
        }
        *(void *)uint64_t v46 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46) & 1) == 0)return 0; {
        goto LABEL_128;
        }
      case 0xCu:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_61;
        }
        *(_DWORD *)(a1 + 128) |= 0x800u;
        if (*(_UNKNOWN **)(a1 + 104) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          goto LABEL_46;
        }
        goto LABEL_47;
      case 0xDu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_61;
        }
        uint64_t v17 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        v46[0] = 0;
        if ((unint64_t)v17 < v18) {
          goto LABEL_54;
        }
        goto LABEL_65;
      case 0xEu:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_61;
        }
        *(void *)uint64_t v46 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v46) & 1) == 0)return 0; {
        goto LABEL_71;
        }
      case 0xFu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_61;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_74;
      default:
        int v9 = TagFallback & 7;
LABEL_61:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_100145C60()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100145CC4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 128);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 128);
      if ((v6 & 2) != 0) {
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047EB50 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 128);
      if ((v6 & 2) != 0) {
        goto LABEL_22;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_23;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 128);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 128);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 128);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 128);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 80), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 128);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 128);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 128);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 128);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 128);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(double *)(v5 + 96), a3);
  int v6 = *(_DWORD *)(v5 + 128);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 128);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(_DWORD *)(v5 + 84), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 128);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (int)a2, *(double *)(v5 + 112), a3);
  if ((*(_DWORD *)(v5 + 128) & 0x4000) == 0)
  {
LABEL_16:
    int v9 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(_DWORD *)(v5 + 120), (int)a2, a4);
  uint64_t v11 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v11;
  if (!v11) {
    return result;
  }
LABEL_36:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100145EF4(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 32);
  if (v6)
  {
    unint64_t v12 = (unsigned int *)*((void *)this + 2);
    if (v12)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v13 = a2 + 1;
      int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12[12];
      if (v14 <= 0x7F) {
        goto LABEL_20;
      }
    }
    else
    {
      unint64_t v12 = *(unsigned int **)(qword_10047EB50 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v13 = a2 + 1;
      int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12[12];
      if (v14 <= 0x7F)
      {
LABEL_20:
        *((unsigned char *)v4 + 1) = (_BYTE)v14;
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000035A8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v12, (uint64_t)v4 + 2, a3);
        int v6 = *((_DWORD *)this + 32);
        if ((v6 & 2) != 0) {
          goto LABEL_24;
        }
LABEL_3:
        if ((v6 & 4) == 0) {
          goto LABEL_4;
        }
        goto LABEL_25;
      }
    }
    uint64_t v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, v13, a3);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1000035A8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v12, v15, v16);
    int v6 = *((_DWORD *)this + 32);
    if ((v6 & 2) != 0) {
      goto LABEL_24;
    }
    goto LABEL_3;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_24:
  uint64_t v17 = *((void *)this + 3);
  *(unsigned char *)uint64_t v4 = 17;
  *(void *)((char *)v4 + 1) = v17;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v18 = *((void *)this + 4);
  *(unsigned char *)uint64_t v4 = 25;
  *(void *)((char *)v4 + 1) = v18;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 32);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v19 = *((void *)this + 5);
  *(unsigned char *)uint64_t v4 = 33;
  *(void *)((char *)v4 + 1) = v19;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v6 = *((_DWORD *)this + 32);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_28:
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 20);
    *(unsigned char *)uint64_t v4 = 48;
    unint64_t v22 = (unint64_t)v4 + 1;
    if ((v21 & 0x80000000) != 0)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v21, v22, a3);
      int v7 = *((_DWORD *)this + 32);
      if ((v7 & 0x40) != 0) {
        goto LABEL_35;
      }
    }
    else if (v21 > 0x7F)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, v22, a3);
      int v7 = *((_DWORD *)this + 32);
      if ((v7 & 0x40) != 0) {
        goto LABEL_35;
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v21;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      int v7 = *((_DWORD *)this + 32);
      if ((v7 & 0x40) != 0) {
        goto LABEL_35;
      }
    }
LABEL_8:
    if ((v7 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_36;
  }
LABEL_27:
  uint64_t v20 = *((void *)this + 6);
  *(unsigned char *)uint64_t v4 = 41;
  *(void *)((char *)v4 + 1) = v20;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 32) & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_7:
  int v7 = *((_DWORD *)this + 32);
  if ((v7 & 0x40) == 0) {
    goto LABEL_8;
  }
LABEL_35:
  uint64_t v23 = *((void *)this + 7);
  *(unsigned char *)uint64_t v4 = 57;
  *(void *)((char *)v4 + 1) = v23;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v7 = *((_DWORD *)this + 32);
  if ((v7 & 0x80) == 0)
  {
LABEL_9:
    if ((v7 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t v24 = *((void *)this + 8);
  *(unsigned char *)uint64_t v4 = 65;
  *(void *)((char *)v4 + 1) = v24;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v7 = *((_DWORD *)this + 32);
  if ((v7 & 0x100) == 0)
  {
LABEL_10:
    if ((v7 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t v25 = *((void *)this + 9);
  *(unsigned char *)uint64_t v4 = 73;
  *(void *)((char *)v4 + 1) = v25;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v7 = *((_DWORD *)this + 32);
  if ((v7 & 0x200) == 0)
  {
LABEL_11:
    if ((v7 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t v26 = *((void *)this + 11);
  *(unsigned char *)uint64_t v4 = 81;
  *(void *)((char *)v4 + 1) = v26;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v7 = *((_DWORD *)this + 32);
  if ((v7 & 0x400) == 0)
  {
LABEL_12:
    if ((v7 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v27 = *((void *)this + 12);
  *(unsigned char *)uint64_t v4 = 89;
  *(void *)((char *)v4 + 1) = v27;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v7 = *((_DWORD *)this + 32);
  if ((v7 & 0x800) == 0)
  {
LABEL_13:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_14;
    }
LABEL_52:
    int v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 21);
    *(unsigned char *)uint64_t v4 = 104;
    unint64_t v35 = (unint64_t)v4 + 1;
    if ((v34 & 0x80000000) != 0)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v34, v35, a3);
      int v8 = *((_DWORD *)this + 32);
      if ((v8 & 0x2000) != 0) {
        goto LABEL_59;
      }
    }
    else if (v34 > 0x7F)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v34, v35, a3);
      int v8 = *((_DWORD *)this + 32);
      if ((v8 & 0x2000) != 0) {
        goto LABEL_59;
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v34;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      int v8 = *((_DWORD *)this + 32);
      if ((v8 & 0x2000) != 0) {
        goto LABEL_59;
      }
    }
LABEL_15:
    if ((v8 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_60;
  }
LABEL_40:
  uint64_t v28 = *((void *)this + 13);
  *(unsigned char *)uint64_t v4 = 98;
  if (*(char *)(v28 + 23) < 0)
  {
    int v29 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v28 + 8);
    if (v29 <= 0x7F) {
      goto LABEL_42;
    }
  }
  else
  {
    int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v28 + 23);
    if (*(unsigned __int8 *)(v28 + 23) <= 0x7Fu)
    {
LABEL_42:
      *((unsigned char *)v4 + 1) = (_BYTE)v29;
      int v30 = v4 + 2;
      goto LABEL_45;
    }
  }
  int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v29, (int)v4 + 1, a3);
LABEL_45:
  int v31 = *(char *)(v28 + 23);
  if (v31 >= 0) {
    int v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v28;
  }
  else {
    int v32 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v28;
  }
  if (v31 >= 0) {
    int v33 = (const void *)*(unsigned __int8 *)(v28 + 23);
  }
  else {
    int v33 = (const void *)*(unsigned int *)(v28 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v32, v33, v30, a4);
  if ((*((_DWORD *)this + 32) & 0x1000) != 0) {
    goto LABEL_52;
  }
LABEL_14:
  int v8 = *((_DWORD *)this + 32);
  if ((v8 & 0x2000) == 0) {
    goto LABEL_15;
  }
LABEL_59:
  uint64_t v36 = *((void *)this + 14);
  *(unsigned char *)uint64_t v4 = 113;
  *(void *)((char *)v4 + 1) = v36;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 32) & 0x4000) == 0)
  {
LABEL_16:
    uint64_t v11 = (void *)*((void *)this + 1);
    uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v9 = v11;
    if (!v11) {
      return v4;
    }
    goto LABEL_67;
  }
LABEL_60:
  uint64_t v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 30);
  *(unsigned char *)uint64_t v4 = 120;
  unint64_t v38 = (unint64_t)v4 + 1;
  if ((v37 & 0x80000000) != 0)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v37, v38, a3);
    int v40 = (void *)*((void *)this + 1);
    uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v9 = v40;
    if (!v40) {
      return v4;
    }
  }
  else if (v37 > 0x7F)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v37, v38, a3);
    int v41 = (void *)*((void *)this + 1);
    uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v9 = v41;
    if (!v41) {
      return v4;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v37;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    int v39 = (void *)*((void *)this + 1);
    uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v9 = v39;
    if (!v39) {
      return v4;
    }
  }
LABEL_67:
  if (*v9 == v9[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, v4, a3);
}

uint64_t sub_1001464D4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 128);
  if ((_BYTE)v3)
  {
    if ((v3 & 1) == 0)
    {
      int v4 = 0;
      goto LABEL_25;
    }
    uint64_t v6 = *(void *)(a1 + 16);
    if (v6)
    {
      int v7 = *(unsigned __int8 *)(v6 + 52);
      if (*(unsigned char *)(v6 + 52)) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v6 = *(void *)(qword_10047EB50 + 16);
      int v7 = *(unsigned __int8 *)(v6 + 52);
      if (*(unsigned char *)(v6 + 52))
      {
LABEL_8:
        unsigned int v8 = (v7 << 31 >> 31) & 9;
        if ((v7 & 2) != 0) {
          v8 += 9;
        }
        if ((v7 & 4) != 0) {
          int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v8 + 9);
        }
        else {
          int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8;
        }
        if ((v7 & 8) != 0) {
          int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v9
        }
                                                                               + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v6 + 40), (unint64_t)a2)+ 1);
        uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v6 + 8);
        uint64_t v11 = *(void **)(v6 + 8);
        if (!v11) {
          goto LABEL_21;
        }
        goto LABEL_19;
      }
    }
    int v9 = 0;
    uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v6 + 8);
    uint64_t v11 = *(void **)(v6 + 8);
    if (!v11)
    {
LABEL_21:
      *(_DWORD *)(v6 + 48) = v9;
      if (v9 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      }
      else {
        int v12 = 1;
      }
      int v4 = v9 + v12 + 1;
      int v3 = *(_DWORD *)(a1 + 128);
LABEL_25:
      if ((v3 & 2) != 0) {
        v4 += 9;
      }
      if ((v3 & 4) != 0) {
        v4 += 9;
      }
      if ((v3 & 8) != 0) {
        v4 += 9;
      }
      if ((v3 & 0x10) != 0) {
        int v13 = v4 + 9;
      }
      else {
        int v13 = v4;
      }
      if ((v3 & 0x20) != 0)
      {
        int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 80);
        if ((v14 & 0x80000000) != 0)
        {
          int v15 = 11;
        }
        else if (v14 >= 0x80)
        {
          int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2)+ 1;
          int v3 = *(_DWORD *)(a1 + 128);
        }
        else
        {
          int v15 = 2;
        }
        v13 += v15;
      }
      unsigned int v16 = v13 + 9;
      if ((v3 & 0x40) == 0) {
        unsigned int v16 = v13;
      }
      if ((v3 & 0x80) != 0) {
        uint64_t v5 = v16 + 9;
      }
      else {
        uint64_t v5 = v16;
      }
      if ((v3 & 0xFF00) == 0) {
        goto LABEL_60;
      }
      goto LABEL_47;
    }
LABEL_19:
    if (*v11 != v11[1]) {
      int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v10, a2)+ v9);
    }
    goto LABEL_21;
  }
  uint64_t v5 = 0;
  if ((v3 & 0xFF00) == 0) {
    goto LABEL_60;
  }
LABEL_47:
  int v17 = v5 + 9;
  if ((v3 & 0x100) == 0) {
    int v17 = v5;
  }
  if ((v3 & 0x200) != 0) {
    v17 += 9;
  }
  if ((v3 & 0x400) != 0) {
    LODWORD(v5) = v17 + 9;
  }
  else {
    LODWORD(v5) = v17;
  }
  if ((v3 & 0x800) != 0)
  {
    uint64_t v21 = *(void *)(a1 + 104);
    int v22 = *(unsigned __int8 *)(v21 + 23);
    char v23 = v22;
    uint64_t v24 = *(void *)(v21 + 8);
    if ((v22 & 0x80u) == 0) {
      unint64_t v25 = *(unsigned __int8 *)(v21 + 23);
    }
    else {
      unint64_t v25 = v24;
    }
    if (v25 >= 0x80)
    {
      int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25, a2);
      int v22 = *(unsigned __int8 *)(v21 + 23);
      uint64_t v24 = *(void *)(v21 + 8);
      int v3 = *(_DWORD *)(a1 + 128);
      char v23 = *(unsigned char *)(v21 + 23);
    }
    else
    {
      int v26 = 1;
    }
    if (v23 < 0) {
      int v22 = v24;
    }
    LODWORD(v5) = v5 + v26 + v22 + 1;
    if ((v3 & 0x1000) == 0)
    {
LABEL_56:
      if ((v3 & 0x2000) != 0) {
        uint64_t v5 = (v5 + 9);
      }
      else {
        uint64_t v5 = v5;
      }
      if ((v3 & 0x4000) == 0) {
        goto LABEL_60;
      }
LABEL_87:
      int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 120);
      if ((v30 & 0x80000000) != 0)
      {
        uint64_t v5 = (v5 + 11);
        uint64_t v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        uint64_t v19 = *(void **)(a1 + 8);
        if (!v19) {
          goto LABEL_61;
        }
      }
      else if (v30 >= 0x80)
      {
        uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2)+ 1+ v5;
        uint64_t v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        uint64_t v19 = *(void **)(a1 + 8);
        if (!v19) {
          goto LABEL_61;
        }
      }
      else
      {
        uint64_t v5 = (v5 + 2);
        uint64_t v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        uint64_t v19 = *(void **)(a1 + 8);
        if (!v19) {
          goto LABEL_61;
        }
      }
      goto LABEL_94;
    }
  }
  else if ((v3 & 0x1000) == 0)
  {
    goto LABEL_56;
  }
  uint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 84);
  if ((v27 & 0x80000000) != 0)
  {
    LODWORD(v5) = v5 + 11;
    if ((v3 & 0x2000) != 0) {
      uint64_t v5 = (v5 + 9);
    }
    else {
      uint64_t v5 = v5;
    }
    if ((v3 & 0x4000) != 0) {
      goto LABEL_87;
    }
  }
  else if (v27 >= 0x80)
  {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2);
    int v29 = *(_DWORD *)(a1 + 128);
    LODWORD(v5) = v28 + 1 + v5;
    if ((v29 & 0x2000) != 0) {
      uint64_t v5 = (v5 + 9);
    }
    else {
      uint64_t v5 = v5;
    }
    if ((v29 & 0x4000) != 0) {
      goto LABEL_87;
    }
  }
  else
  {
    LODWORD(v5) = v5 + 2;
    if ((v3 & 0x2000) != 0) {
      uint64_t v5 = (v5 + 9);
    }
    else {
      uint64_t v5 = v5;
    }
    if ((v3 & 0x4000) != 0) {
      goto LABEL_87;
    }
  }
LABEL_60:
  uint64_t v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v19 = *(void **)(a1 + 8);
  if (!v19)
  {
LABEL_61:
    *(_DWORD *)(a1 + 124) = v5;
    return v5;
  }
LABEL_94:
  if (*v19 == v19[1]) {
    goto LABEL_61;
  }
  uint64_t v31 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v18, a2)
      + v5;
  *(_DWORD *)(a1 + 124) = v31;
  return v31;
}

uint64_t sub_1001467F4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100144C58((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1001468D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1001468E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001468FC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100146988()
{
  return 1;
}

uint64_t sub_100146990()
{
  uint64_t v0 = qword_10047DBE0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10013B1E4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DB88;
}

void sub_100146A20(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_100146A34(uint64_t a1)
{
  *(void *)a1 = off_100458588;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_100146A88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 20) = a2;
  return result;
}

void sub_100146A90()
{
}

void sub_100146AF4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100146B1C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 24)) {
    *(_DWORD *)(a1 + 16) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100146B3C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (1)
  {
    while (1)
    {
      int v7 = (unsigned __int8 *)*((void *)this + 1);
      if ((unint64_t)v7 >= *((void *)this + 2) || (char)*v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + 8) = TagFallback;
        if (TagFallback != 8) {
          break;
        }
        goto LABEL_10;
      }
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (TagFallback != 8) {
        break;
      }
LABEL_10:
      unsigned int v16 = 0;
      uint64_t v10 = (char *)*((void *)this + 1);
      unint64_t v9 = *((void *)this + 2);
      if ((unint64_t)v10 >= v9 || (int v11 = *v10, v11 < 0))
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
        if (!result) {
          return result;
        }
        uint64_t v14 = *((void *)this + 1);
        uint64_t v13 = *((void *)this + 2);
        *(_DWORD *)(a1 + 16) = v16;
        *(_DWORD *)(a1 + 24) |= 1u;
        if (v14 == v13) {
          goto LABEL_16;
        }
      }
      else
      {
        int v12 = v10 + 1;
        *((void *)this + 1) = v12;
        *(_DWORD *)(a1 + 16) = v11;
        *(_DWORD *)(a1 + 24) |= 1u;
        if (v12 == (char *)v9)
        {
LABEL_16:
          if (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
          {
            *((_DWORD *)this + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)this + 36) = 1;
            return result;
          }
        }
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_100146CA0(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 24)) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), (int)a2, a4);
  }
  unsigned int v8 = *(void **)(v5 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  unsigned int v6 = v8;
  if (v8 && *v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

const wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100146D14(wireless_diagnostics::google::protobuf::internal::WireFormat *this, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if ((*((unsigned char *)this + 24) & 1) == 0)
  {
LABEL_5:
    int v7 = (void *)*((void *)this + 1);
    unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = v7;
    if (!v7) {
      return a2;
    }
    goto LABEL_10;
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 4);
  *(unsigned char *)a2 = 8;
  if ((v4 & 0x80000000) != 0)
  {
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v4, (unint64_t)a2 + 1, a3);
    unsigned int v8 = (void *)*((void *)this + 1);
    unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = v8;
    if (!v8) {
      return a2;
    }
    goto LABEL_10;
  }
  if (v4 <= 0x7F)
  {
    *((unsigned char *)a2 + 1) = (_BYTE)v4;
    a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    goto LABEL_5;
  }
  a2 = (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
  unint64_t v9 = (void *)*((void *)this + 1);
  unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v9;
  if (!v9) {
    return a2;
  }
LABEL_10:
  if (*v5 == v5[1]) {
    return a2;
  }

  return (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, a2, a3);
}

uint64_t sub_100146DC8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 24))
  {
    unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if ((v6 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      uint64_t v5 = *(void **)(a1 + 8);
      if (v5) {
        goto LABEL_11;
      }
    }
    else
    {
      if (v6 < 0x80)
      {
        uint64_t v3 = 2;
        uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        uint64_t v5 = *(void **)(a1 + 8);
        if (!v5) {
          goto LABEL_9;
        }
        goto LABEL_11;
      }
      uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)+ 1;
      uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      uint64_t v5 = *(void **)(a1 + 8);
      if (v5) {
        goto LABEL_11;
      }
    }
LABEL_9:
    *(_DWORD *)(a1 + 20) = v3;
    return v3;
  }
  uint64_t v3 = 0;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v5 = *(void **)(a1 + 8);
  if (!v5) {
    goto LABEL_9;
  }
LABEL_11:
  if (*v5 == v5[1]) {
    goto LABEL_9;
  }
  uint64_t v8 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v4, a2)
     + v3;
  *(_DWORD *)(a1 + 20) = v8;
  return v8;
}

uint64_t sub_100146E7C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10001DE38(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100146F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100146F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100146F84(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100147010()
{
  return 1;
}

uint64_t sub_100147018()
{
  uint64_t v0 = qword_10047DBE0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10013B1E4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DB98;
}

void sub_1001470A8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001470BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 152) = a2;
  return result;
}

uint64_t sub_1001470C4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_10047EB60;
  if (!qword_10047EB60)
  {
    sub_10013B964(0, a2, a3, a4);
    return qword_10047EB60;
  }
  return result;
}

void sub_100147100()
{
}

void sub_100147174()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10014719C(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 156);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 52))
        {
          *(_OWORD *)(this + 16) = 0u;
          *(_OWORD *)(this + 32) = 0u;
        }
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 44) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(_OWORD *)(v1 + 56) = 0u;
    *(_OWORD *)(v1 + 40) = 0u;
    *(_OWORD *)(v1 + 24) = 0u;
    int v2 = *(_DWORD *)(v1 + 156);
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 120) = 0;
    *(_OWORD *)(v1 + 104) = 0u;
    *(_OWORD *)(v1 + 88) = 0u;
    *(_OWORD *)(v1 + 72) = 0u;
  }
  if ((v2 & 0xFF0000) != 0)
  {
    *(void *)(v1 + 128) = 0;
    *(void *)(v1 + 136) = 0;
    if ((v2 & 0x40000) != 0)
    {
      this = *(void *)(v1 + 144);
      if (this)
      {
        if (*(unsigned char *)(this + 24)) {
          *(_DWORD *)(this + 16) = 0;
        }
        uint64_t v4 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 16) = 0;
        if (v4) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
  }
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v5 + 37) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return this;
}

uint64_t sub_100147284(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    int v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 156) |= 1u;
        uint64_t v10 = *(void *)(a1 + 16);
        if (!v10) {
          operator new();
        }
        v61[0] = 0;
        int v11 = (char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v61))return 0; {
        }
          }
        else
        {
          v61[0] = *v11;
          *((void *)this + 1) = v11 + 1;
        }
        int v31 = *((_DWORD *)this + 14);
        int v32 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v31 + 1;
        if (v31 >= v32) {
          return 0;
        }
        int v33 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v61[0]);
        if (!sub_10013CCBC(v10, this, v34, v35) || !*((unsigned char *)this + 36)) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v33);
        int v36 = *((_DWORD *)this + 14);
        BOOL v29 = __OFSUB__(v36, 1);
        int v37 = v36 - 1;
        if (v37 < 0 == v29) {
          *((_DWORD *)this + 14) = v37;
        }
        unint64_t v38 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v38 >= *((void *)this + 2) || *v38 != 17) {
          continue;
        }
        *((void *)this + 1) = v38 + 1;
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
LABEL_94:
        }
        *(void *)(a1 + 24) = *(void *)v61;
        *(_DWORD *)(a1 + 156) |= 2u;
        int v39 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v39 >= *((void *)this + 2) || *v39 != 25) {
          continue;
        }
        *((void *)this + 1) = v39 + 1;
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
LABEL_97:
        }
        *(void *)(a1 + 32) = *(void *)v61;
        *(_DWORD *)(a1 + 156) |= 4u;
        int v40 = (unsigned char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v40 >= v12 || *v40 != 32) {
          continue;
        }
        uint64_t v13 = v40 + 1;
        *((void *)this + 1) = v13;
LABEL_100:
        v61[0] = 0;
        if ((unint64_t)v13 >= v12 || (int v41 = *v13, v41 < 0))
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v61);
          if (!result) {
            return result;
          }
          unsigned int v42 = (unsigned char *)*((void *)this + 1);
          unint64_t v44 = *((void *)this + 2);
          *(_DWORD *)(a1 + 48) = v61[0];
          *(_DWORD *)(a1 + 156) |= 8u;
          if ((unint64_t)v42 < v44) {
            goto LABEL_106;
          }
          continue;
        }
        unsigned int v42 = v13 + 1;
        *((void *)this + 1) = v42;
        *(_DWORD *)(a1 + 48) = v41;
        *(_DWORD *)(a1 + 156) |= 8u;
        if ((unint64_t)v42 >= v12) {
          continue;
        }
LABEL_106:
        if (*v42 != 41) {
          continue;
        }
        *((void *)this + 1) = v42 + 1;
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
LABEL_108:
        }
        *(void *)(a1 + 40) = *(void *)v61;
        *(_DWORD *)(a1 + 156) |= 0x10u;
        uint64_t v45 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v45 >= *((void *)this + 2) || *v45 != 49) {
          continue;
        }
        *((void *)this + 1) = v45 + 1;
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
LABEL_111:
        }
        *(void *)(a1 + 56) = *(void *)v61;
        *(_DWORD *)(a1 + 156) |= 0x20u;
        uint64_t v46 = (unsigned char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        if ((unint64_t)v46 >= v14 || *v46 != 56) {
          continue;
        }
        int v15 = v46 + 1;
        *((void *)this + 1) = v15;
LABEL_114:
        v61[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v61);
          if (!result) {
            return result;
          }
          unsigned int v47 = v61[0];
          if (v61[0] > 2)
          {
LABEL_120:
            wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 7, (int)v47);
            goto LABEL_121;
          }
        }
        else
        {
          unsigned int v47 = *v15;
          *((void *)this + 1) = v15 + 1;
          if (v47 > 2) {
            goto LABEL_120;
          }
        }
        *(_DWORD *)(a1 + 156) |= 0x40u;
        *(_DWORD *)(a1 + 52) = v47;
LABEL_121:
        unsigned int v48 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v48 >= *((void *)this + 2) || *v48 != 65) {
          continue;
        }
        *((void *)this + 1) = v48 + 1;
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
LABEL_124:
        }
        *(void *)(a1 + 64) = *(void *)v61;
        *(_DWORD *)(a1 + 156) |= 0x80u;
        int v49 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v49 >= *((void *)this + 2) || *v49 != 73) {
          continue;
        }
        *((void *)this + 1) = v49 + 1;
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
LABEL_127:
        }
        *(void *)(a1 + 72) = *(void *)v61;
        *(_DWORD *)(a1 + 156) |= 0x100u;
        uint64_t v50 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v50 >= *((void *)this + 2) || *v50 != 81) {
          continue;
        }
        *((void *)this + 1) = v50 + 1;
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
LABEL_130:
        }
        *(void *)(a1 + 80) = *(void *)v61;
        *(_DWORD *)(a1 + 156) |= 0x200u;
        int v51 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v51 >= *((void *)this + 2) || *v51 != 89) {
          continue;
        }
        *((void *)this + 1) = v51 + 1;
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
LABEL_133:
        }
        *(void *)(a1 + 88) = *(void *)v61;
        *(_DWORD *)(a1 + 156) |= 0x400u;
        int v52 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v52 >= *((void *)this + 2) || *v52 != 97) {
          continue;
        }
        *((void *)this + 1) = v52 + 1;
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
LABEL_136:
        }
        *(void *)(a1 + 96) = *(void *)v61;
        *(_DWORD *)(a1 + 156) |= 0x800u;
        unsigned int v53 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v53 >= *((void *)this + 2) || *v53 != 105) {
          continue;
        }
        *((void *)this + 1) = v53 + 1;
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
LABEL_139:
        }
        *(void *)(a1 + 104) = *(void *)v61;
        *(_DWORD *)(a1 + 156) |= 0x1000u;
        uint64_t v54 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        if ((unint64_t)v54 >= v16 || *v54 != 112) {
          continue;
        }
        int v17 = v54 + 1;
        *((void *)this + 1) = v17;
LABEL_142:
        v61[0] = 0;
        if ((unint64_t)v17 < v16)
        {
          int v55 = *v17;
          if ((v55 & 0x80000000) == 0)
          {
            int v56 = v17 + 1;
            *((void *)this + 1) = v56;
            *(_DWORD *)(a1 + 112) = v55;
            *(_DWORD *)(a1 + 156) |= 0x2000u;
            if ((unint64_t)v56 < v16) {
              goto LABEL_148;
            }
            continue;
          }
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v61);
        if (!result) {
          return result;
        }
        int v56 = (unsigned char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        *(_DWORD *)(a1 + 112) = v61[0];
        *(_DWORD *)(a1 + 156) |= 0x2000u;
        if ((unint64_t)v56 >= v16) {
          continue;
        }
LABEL_148:
        if (*v56 != 120) {
          continue;
        }
        uint64_t v18 = v56 + 1;
        *((void *)this + 1) = v18;
LABEL_150:
        v61[0] = 0;
        if ((unint64_t)v18 >= v16 || (char)*v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v61);
          if (!result) {
            return result;
          }
          unsigned int v57 = v61[0];
          uint64_t v58 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v16 = *((void *)this + 2);
        }
        else
        {
          unsigned int v57 = *v18;
          uint64_t v58 = v18 + 1;
          *((void *)this + 1) = v58;
        }
        *(_DWORD *)(a1 + 116) = v57;
        *(_DWORD *)(a1 + 156) |= 0x4000u;
        if ((int)v16 - (int)v58 < 2 || *v58 != 129 || v58[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v58 + 2;
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
LABEL_159:
        }
        *(void *)(a1 + 120) = *(void *)v61;
        *(_DWORD *)(a1 + 156) |= 0x8000u;
        unsigned int v59 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v59 < 2 || *v59 != 137 || v59[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v59 + 2;
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
LABEL_163:
        }
        *(void *)(a1 + 128) = *(void *)v61;
        *(_DWORD *)(a1 + 156) |= 0x10000u;
        int v60 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v60 < 2 || *v60 != 145 || v60[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v60 + 2;
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
LABEL_61:
        }
        *(void *)(a1 + 136) = *(void *)v61;
        int v19 = *(_DWORD *)(a1 + 156) | 0x20000;
        *(_DWORD *)(a1 + 156) = v19;
        uint64_t v20 = (unsigned __int8 *)*((void *)this + 1);
        if (*((_DWORD *)this + 4) - (int)v20 < 2 || *v20 != 154 || v20[1] != 1) {
          continue;
        }
        *((void *)this + 1) = v20 + 2;
        *(_DWORD *)(a1 + 156) = v19 | 0x40000;
        uint64_t v21 = *(void *)(a1 + 144);
        if (!v21) {
LABEL_68:
        }
          operator new();
LABEL_69:
        v61[0] = 0;
        int v22 = (char *)*((void *)this + 1);
        if ((unint64_t)v22 >= *((void *)this + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v61))return 0; {
        }
          }
        else
        {
          v61[0] = *v22;
          *((void *)this + 1) = v22 + 1;
        }
        int v23 = *((_DWORD *)this + 14);
        int v24 = *((_DWORD *)this + 15);
        *((_DWORD *)this + 14) = v23 + 1;
        if (v23 < v24)
        {
          int v25 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v61[0]);
          if (sub_100146B3C(v21, this, v26, v27))
          {
            if (*((unsigned char *)this + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v25);
              int v28 = *((_DWORD *)this + 14);
              BOOL v29 = __OFSUB__(v28, 1);
              int v30 = v28 - 1;
              if (v30 < 0 == v29) {
                *((_DWORD *)this + 14) = v30;
              }
              if (*((void *)this + 1) == *((void *)this + 2)
                && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
              {
                *((_DWORD *)this + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)this + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_72;
        }
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
        goto LABEL_94;
        }
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_72;
        }
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
        goto LABEL_97;
        }
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_72;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        goto LABEL_100;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_72;
        }
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
        goto LABEL_108;
        }
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_72;
        }
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
        goto LABEL_111;
        }
      case 7u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_72;
        }
        int v15 = (char *)*((void *)this + 1);
        unint64_t v14 = *((void *)this + 2);
        goto LABEL_114;
      case 8u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_72;
        }
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
        goto LABEL_124;
        }
      case 9u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_72;
        }
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
        goto LABEL_127;
        }
      case 0xAu:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_72;
        }
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
        goto LABEL_130;
        }
      case 0xBu:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_72;
        }
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
        goto LABEL_133;
        }
      case 0xCu:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_72;
        }
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
        goto LABEL_136;
        }
      case 0xDu:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_72;
        }
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
        goto LABEL_139;
        }
      case 0xEu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_72;
        }
        int v17 = (char *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_142;
      case 0xFu:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_72;
        }
        uint64_t v18 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v16 = *((void *)this + 2);
        goto LABEL_150;
      case 0x10u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_72;
        }
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
        goto LABEL_159;
        }
      case 0x11u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_72;
        }
        *(void *)uint64_t v61 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61) & 1) == 0)return 0; {
        goto LABEL_163;
        }
      case 0x12u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_72;
        }
        *(void *)uint64_t v61 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v61))goto LABEL_61; {
        return 0;
        }
      case 0x13u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 156) |= 0x40000u;
        uint64_t v21 = *(void *)(a1 + 144);
        if (!v21) {
          goto LABEL_68;
        }
        goto LABEL_69;
      default:
        int v9 = TagFallback & 7;
LABEL_72:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

void sub_100147DE8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100147E10()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100147E84(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 156);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 156);
      if ((v6 & 2) != 0) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_10047EB60 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 156);
      if ((v6 & 2) != 0) {
        goto LABEL_26;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_27;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 48), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(_DWORD *)(v5 + 52), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (int)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (int)a2, *(double *)(v5 + 96), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (int)a2, *(double *)(v5 + 104), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(_DWORD *)(v5 + 112), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(_DWORD *)(v5 + 116), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, (int)a2, *(double *)(v5 + 120), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, (int)a2, *(double *)(v5 + 128), a3);
  int v6 = *(_DWORD *)(v5 + 156);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, (int)a2, *(double *)(v5 + 136), a3);
  if ((*(_DWORD *)(v5 + 156) & 0x40000) == 0)
  {
LABEL_20:
    int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_47;
  }
LABEL_43:
  uint64_t v11 = *(void *)(v5 + 144);
  if (v11)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v11, a2, a4);
    unint64_t v12 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v12;
    if (!v12) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(void *)(qword_10047EB60 + 144), a2, a4);
    uint64_t v13 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v13;
    if (!v13) {
      return result;
    }
  }
LABEL_47:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_10014814C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10001D8AC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10014822C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100148240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100148254(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1001482E0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    return sub_10001D8AC(v4, a2);
  }
  return result;
}

uint64_t sub_10014834C()
{
  return 1;
}

uint64_t sub_100148354()
{
  uint64_t v0 = qword_10047DBE0;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10013B1E4;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047DBA8;
}

void sub_1001483E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001483F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_100148400(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_100148408(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_100148410(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_100148418(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_100148420(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_100148428(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_100148430(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_100148438(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_100148440(uint64_t a1)
{
  return *(unsigned int *)(a1 + 124);
}

uint64_t sub_100148448(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_100148450(uint64_t a1)
{
  return *(unsigned int *)(a1 + 152);
}

uint64_t sub_100148458(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_10011D190(*(void *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_100148550()
{
}

void sub_100148578(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1001AA12C(a1, a2);
  uint64_t v5 = a3[1];
  v4[4] = *a3;
  v4[5] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  v4[6] = 0;
  v4[7] = 0;
}

void sub_1001485B8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = v5;
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10035941C(&v11, (uint64_t)&v9, a2);
  v6.n128_f64[0] = sub_10014B044(a1, (uint64_t)&v11, a3);
  uint64_t v7 = v12;
  if (v12 && !atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *, double))v7->__on_zero_shared)(v7, v6.n128_f64[0]);
    std::__shared_weak_count::__release_weak(v7);
  }
  int v8 = v10;
  if (v10)
  {
    if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *, __n128))v8->__on_zero_shared)(v8, v6);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_1001486BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_1001486D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

double sub_1001486EC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double v6 = sub_10014B1B4(a1, a2);
  double v7 = sub_10014B27C(a1, a2);
  __double2 v8 = __sincos_stret(1.57079633 - v7);
  double result = v6 * v8.__sinval;
  *(double *)a3 = v6 * v8.__cosval;
  *(double *)(a3 + 8) = v6 * v8.__sinval;
  *(void *)(a3 + 16) = a1;
  return result;
}

void sub_100148758(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = v5;
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10035941C(&v10, (uint64_t)&v8, a2);
  double v6 = v9;
  if (v9 && !atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  *(_OWORD *)a3 = v12;
  *(void *)(a3 + 16) = a1;
  double v7 = v11;
  if (v11)
  {
    if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_100148864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100148878(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(v3 + 32);
  uint64_t v4 = *(std::__shared_weak_count **)(v3 + 40);
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = v5;
  uint64_t v9 = v4;
  sub_10007314C((uint64_t)&v10, (uint64_t)&v8, *(double *)a1, *(double *)(a1 + 8));
  sub_1000727B4(&v10, a2);
  double v6 = v11;
  if (v11 && !atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  double v7 = v9;
  if (v9)
  {
    if (!atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_1001489C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13)
{
}

void sub_1001489E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_100148A04(uint64_t a1@<X0>, void *a2@<X8>)
{
  if ((*(unsigned char *)(a1 + 1913) & 0x80) != 0)
  {
    sub_1001AA12C((uint64_t)v22, a1 + 1624);
    sub_100072B90(&v18);
    __n128 v8 = sub_1001AA12C((uint64_t)a2, (uint64_t)v22);
    uint64_t v9 = v19;
    a2[4] = v18;
    a2[5] = v9;
    if (v9)
    {
      atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
      long double v10 = v19;
      a2[6] = 0;
      a2[7] = 0;
      if (v10 && !atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *, __n128))v10->__on_zero_shared)(v10, v8);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    else
    {
      a2[6] = 0;
      a2[7] = 0;
    }
    nullsub_15(v22);
  }
  else
  {
    sub_10014FA98(a1 + 1056, &v20);
    sub_10014FE38(v20, (uint64_t)&v16);
    sub_1000727B4(&v16, (uint64_t)&v18);
    uint64_t v4 = v17;
    if (v17 && !atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
    sub_1001AA12C((uint64_t)&v16, a1 + 1296);
    sub_100071EF8(a1, &v14);
    if (*(double *)(v14 + 40) != 0.0)
    {
      long long v12 = sub_1000AE4B0(v24, "");
      sub_10016A2C4((uint64_t)v12, 0, 0);
      if (v25 < 0) {
        operator delete(v24[0]);
      }
      sub_1000D11E0((uint64_t)v23);
    }
    if (*(double *)(v14 + 48) != 0.0)
    {
      uint64_t v13 = sub_1000AE4B0(v24, "");
      sub_10016A2C4((uint64_t)v13, 0, 0);
      if (v25 < 0) {
        operator delete(v24[0]);
      }
      sub_1000D11E0((uint64_t)v23);
    }
    sub_100076494((__n128 *)(v14 + 24), (uint64_t)&v18);
    __n128 v5 = sub_1001AA12C((uint64_t)a2, (uint64_t)&v16);
    double v6 = v15;
    a2[4] = v14;
    a2[5] = v6;
    if (v6)
    {
      atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
      double v7 = v15;
      a2[6] = 0;
      a2[7] = 0;
      if (v7 && !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *, __n128))v7->__on_zero_shared)(v7, v5);
        std::__shared_weak_count::__release_weak(v7);
      }
    }
    else
    {
      a2[6] = 0;
      a2[7] = 0;
    }
    nullsub_15(&v16);
    nullsub_17(&v18);
    double v11 = v21;
    if (v21)
    {
      if (!atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
}

void sub_100148D0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  if (*(char *)(v19 - 57) < 0) {
    operator delete(*(void **)(v19 - 80));
  }
  sub_1000BA884((uint64_t)&a9);
  nullsub_15(&a11);
  nullsub_17(&a15);
  sub_1000BA884((uint64_t)&a19);
  _Unwind_Resume(a1);
}

uint64_t sub_100148DD8(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 56);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v3)
    {
LABEL_5:
      uint64_t v4 = a1;
      return nullsub_15(v4);
    }
  }
  else
  {
    uint64_t v3 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v3) {
      goto LABEL_5;
    }
  }
  if (atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_5;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  uint64_t v4 = a1;

  return nullsub_15(v4);
}

void sub_100148EC8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100458808;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100148EE8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100458808;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_100148F3C(uint64_t a1, double a2)
{
  nullsub_16(a1 + 48, a2);
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 32);
  if (v3)
  {
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_100148F8C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100149004()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_10014907C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = operator new(0x38uLL);
  v2[1] = 0;
  void v2[2] = 0;
  *uint64_t v2 = off_100458858;
  sub_1002C0DD0((uint64_t)(v2 + 3), 13);
  v2[3] = off_1004588A8;
  uint64_t result = sub_1002C0DD0((uint64_t)(v2 + 5), 6);
  v2[5] = off_100458938;
  *a1 = v2 + 3;
  a1[1] = v2;
  return result;
}

void sub_100149128(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_100149140(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100458858;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100149160(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100458858;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_1001491C0()
{
}

uint64_t sub_1001491D4()
{
  return 5;
}

uint64_t sub_1001491DC()
{
  return 3;
}

uint64_t sub_1001491E4()
{
  return 257;
}

uint64_t sub_1001491EC()
{
  return 0;
}

uint64_t sub_1001491F4()
{
  return 1;
}

uint64_t sub_1001491FC(uint64_t a1)
{
  return a1 + 16;
}

uint64_t sub_100149204()
{
  return 1;
}

void sub_10014920C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5) {
    sub_100149524();
  }
  sub_1000AE4B0(v6, "");
  sub_10014AE94("DirectionOfTravelFake depends on truth, which is not available right now. Please use another motion model instead!", &__p);
  sub_10016A2C4((uint64_t)v6, (uint64_t)&__p, 1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v7 < 0) {
    operator delete(v6[0]);
  }
  sub_100149690((uint64_t)&v5);
}

void sub_10014930C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100149350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4) {
    operator new();
  }
  sub_1000AE4B0(v5, "");
  sub_10014AEE4("DirectionOfTravelFake/ParticleVenueForceInit depends on truth, which is not available right now. Please use another venue model instead!", &__p);
  sub_10016A2C4((uint64_t)v5, (uint64_t)&__p, 1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  sub_100149690((uint64_t)&v4);
}

void sub_100149454(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001494C0()
{
}

uint64_t sub_1001494D4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1);
}

uint64_t sub_10014950C()
{
  return 0;
}

uint64_t sub_100149514()
{
  return 1;
}

uint64_t sub_10014951C()
{
  return 0;
}

void sub_100149524()
{
}

void sub_10014965C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_100149690(uint64_t a1)
{
  char v25 = 0;
  buf[0] = 0;
  if (*(char *)(a1 + 23) < 0) {
    sub_1000559FC(&__p, *(void **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __p = *(std::string *)a1;
  }
  sub_10016A2C4((uint64_t)buf, (uint64_t)&__p, 1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v25 < 0) {
    operator delete(*(void **)buf);
  }
  int v1 = rand();
  if (qword_10047BED8 == -1)
  {
    uint64_t v2 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
      goto LABEL_11;
    }
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_100458A50);
    uint64_t v2 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
    {
LABEL_11:
      if (sub_10016A1C0())
      {
        if (qword_10047BED8 == -1)
        {
          uint64_t v3 = qword_10047BEE0;
          if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
            goto LABEL_22;
          }
        }
        else
        {
          dispatch_once(&qword_10047BED8, &stru_100458A50);
          uint64_t v3 = qword_10047BEE0;
          if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
            goto LABEL_22;
          }
        }
        sub_1001664D8(0);
        uint64_t v4 = v18;
        if (v19 < 0) {
          uint64_t v4 = (void *)v18[0];
        }
        if (v25 >= 0) {
          __n128 v5 = buf;
        }
        else {
          __n128 v5 = *(unsigned char **)buf;
        }
        LODWORD(__p.__r_.__value_.__l.__data_) = 136381187;
        *(std::string::size_type *)((char *)__p.__r_.__value_.__r.__words + 4) = (std::string::size_type)v4;
        WORD2(__p.__r_.__value_.__r.__words[1]) = 2080;
        *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v5;
        HIWORD(__p.__r_.__value_.__r.__words[2]) = 1024;
        int v21 = v1;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Precondition failure: %{private}s\n %s \n trace link nonce = %d", (uint8_t *)&__p, 0x1Cu);
        if (v25 < 0) {
          operator delete(*(void **)buf);
        }
      }
      if (qword_10047BED8 != -1)
      {
        dispatch_once(&qword_10047BED8, &stru_100458A50);
        char v6 = qword_10047BEE0;
        if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
          goto LABEL_30;
        }
        goto LABEL_23;
      }
LABEL_22:
      char v6 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_30;
      }
LABEL_23:
      int v7 = v19;
      __n128 v8 = (void *)v18[0];
      sub_1001664D8(0);
      uint64_t v9 = v18;
      if (v7 < 0) {
        uint64_t v9 = v8;
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      *(_DWORD *)buf = 136380931;
      *(void *)&buf[4] = v9;
      __int16 v23 = 2080;
      int v24 = p_p;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Precondition failure: %{private}s\n %s \n", buf, 0x16u);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
LABEL_30:
      __cxa_allocate_exception(0x40uLL);
      if (v19 >= 0) {
        double v11 = (const char *)v18;
      }
      else {
        double v11 = (const char *)v18[0];
      }
      size_t v12 = strlen(v11);
      if (v12 >= 0x7FFFFFFFFFFFFFF8) {
        sub_1000A6968();
      }
      std::string::size_type v13 = v12;
      if (v12 >= 0x17)
      {
        uint64_t v15 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v12 | 7) != 0x17) {
          uint64_t v15 = v12 | 7;
        }
        uint64_t v16 = v15 + 1;
        uint64_t v14 = (std::string *)operator new(v15 + 1);
        __p.__r_.__value_.__l.__size_ = v13;
        __p.__r_.__value_.__r.__words[2] = v16 | 0x8000000000000000;
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v14;
      }
      else
      {
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = v12;
        uint64_t v14 = &__p;
        if (!v12)
        {
LABEL_42:
          v14->__r_.__value_.__s.__data_[v13] = 0;
          std::runtime_error::runtime_error((std::runtime_error *)buf, &__p);
          *(void *)buf = &off_100458B70;
          sub_10018E868((uint64_t)v17);
          sub_100149B48((std::runtime_error *)buf, (uint64_t)"void Preconditions::details::checkFailed(const Args &...) [E = std::null_pointer_error, Args = <std::string>]", (uint64_t)"../../../common/util/preconditions.h", 88, (uint64_t)v17);
        }
      }
      memmove(v14, v11, v13);
      goto LABEL_42;
    }
  }
  LODWORD(__p.__r_.__value_.__l.__data_) = 67109120;
  HIDWORD(__p.__r_.__value_.__r.__words[0]) = v1;
  _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "Precondition failure. log link nonce = %d", (uint8_t *)&__p, 8u);
  goto LABEL_11;
}

void sub_100149A88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,std::runtime_error a25,int a26,__int16 a27,char a28,char a29)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a25);
  if (a23 < 0) {
    operator delete(a18);
  }
  if ((a17 & 0x80000000) == 0) {
    _Unwind_Resume(a1);
  }
  operator delete(a12);
  _Unwind_Resume(a1);
}

void sub_100149B48(std::runtime_error *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  std::runtime_error::runtime_error(&v12, a1);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  int v17 = -1;
  v12.__vftable = (std::runtime_error_vtbl *)off_100458B28;
  std::string::size_type v13 = off_100458B50;
  sub_10014A46C((uint64_t)&v18, (uint64_t)&v12);
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  int v21 = a4;
  uint64_t v9 = *(const void **)a5;
  size_t v10 = *(void *)(a5 + 8) - *(void *)a5;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0) {
      sub_1000A9108();
    }
    std::string __p = operator new(v10);
    memcpy(__p, v9, v10);
  }
  sub_10014A110();
}

void sub_100149E54(void *a1)
{
  std::runtime_error::~runtime_error(v1);
  sub_1000A6954(a1);
}

void sub_100149E68(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    operator delete(__p);
    sub_1000A6954(a1);
  }
  sub_1000A6954(a1);
}

void sub_100149E90(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_100149F20(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

uint64_t sub_100149F50(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2)->__vftable = (std::runtime_error_vtbl *)&off_100458B70;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = off_100458A88;
  *(void *)(a1 + 16) = off_100458AC0;
  *(void *)(a1 + 56) = &off_100458AF8;
  return a1;
}

void sub_10014A070(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10014A084(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_10014A110()
{
}

void sub_10014A3AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CD2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10014A3C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_1000CD2E0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10014A3DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10014A46C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4->__vftable = (std::runtime_error_vtbl *)&off_100458B70;
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_100458A88;
  *(void *)(a1 + 16) = off_100458AC0;
  *(void *)(a1 + 56) = &off_100458AF8;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_10014A598(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10014A5AC(_Unwind_Exception *a1)
{
  sub_10014A5C0(v1);
  _Unwind_Resume(a1);
}

void sub_10014A5C0(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_10014A64C(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_10014A6EC()
{
}

void sub_10014A748()
{
}

void sub_10014A76C(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100149F50((uint64_t)exception, a1);
}

void sub_10014A7B4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10014A7C8(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_10014A850(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

void sub_10014A8EC()
{
}

void sub_10014A95C()
{
}

void sub_10014A980(void *a1)
{
  uint64_t v1 = (uint64_t)a1 + *(void *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100149F50((uint64_t)exception, v1);
}

void sub_10014A9DC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10014A9F0(void *a1)
{
  uint64_t v1 = (std::runtime_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(v1);
}

void sub_10014AA90(void *a1)
{
  uint64_t v1 = (std::runtime_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(v1);

  operator delete();
}

void sub_10014AB44(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_10014ABE4(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_10014AC6C(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

void sub_10014AD08(std::runtime_error *a1)
{
  std::runtime_error::~runtime_error(a1);

  operator delete();
}

uint64_t sub_10014AD40(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4->__vftable = (std::runtime_error_vtbl *)&off_100458B70;
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_100458A88;
  *(void *)(a1 + 16) = off_100458AC0;
  *(void *)(a1 + 56) = &off_100458AF8;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_10014AE6C(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10014AE80(_Unwind_Exception *a1)
{
  sub_10014A5C0(v1);
  _Unwind_Resume(a1);
}

std::string *sub_10014AE94@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10014AEC8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_10014AEE4@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10014AF18(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10014AF34()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10014AFAC()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

double sub_10014B024(double a1)
{
  return a1 * 0.0174532925;
}

double sub_10014B034(double a1)
{
  return a1 * 57.2957795;
}

double sub_10014B044@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  double v4 = *(double *)(a1 + 8) * 0.0174532925;
  double v5 = *(double *)(a1 + 16) * 0.0174532925;
  long double v6 = *(double *)(a2 + 16);
  long double v7 = *(double *)(a2 + 24);
  long double v8 = atan2(v7, v6) + -1.57079633;
  double v9 = hypot(v6, v7) / 1852.0 * 3.14159265 / 180.0 / 60.0;
  __double2 v10 = __sincos_stret(v4);
  __double2 v11 = __sincos_stret(v9);
  long double v12 = cos(v8);
  long double v13 = asin(v12 * (v10.__cosval * v11.__sinval) + v10.__sinval * v11.__cosval);
  double v14 = cos(v13);
  if (v14 != 0.0)
  {
    double v15 = v14;
    long double v16 = sin(v8);
    long double v17 = asin(v16 * v11.__sinval / v15);
    double v5 = fmod(v5 - v17 + 3.14159265, 6.28318531) + -3.14159265;
  }
  *(void *)a3 = off_10045DAB8;
  *(unsigned char *)(a3 + 24) |= 3u;
  double result = v5 * 57.2957795;
  *(long double *)(a3 + 8) = v13 * 57.2957795;
  *(double *)(a3 + 16) = v5 * 57.2957795;
  return result;
}

long double sub_10014B1B4(uint64_t a1, uint64_t a2)
{
  long double v2 = *(double *)(a1 + 8) * 0.0174532925;
  long double v3 = *(double *)(a2 + 8) * 0.0174532925;
  long double v4 = sin((*(double *)(a1 + 16) * 0.0174532925 - *(double *)(a2 + 16) * 0.0174532925) * 0.5);
  long double v5 = v4 * v4;
  long double v6 = sin((v2 - v3) * 0.5);
  long double v7 = v6 * v6;
  double v8 = cos(v2);
  long double v9 = cos(v3);
  long double v10 = asin(sqrt(v7 + v8 * v9 * v5));
  return (v10 + v10) * 180.0 / 3.14159265 * 60.0 * 1852.0;
}

double sub_10014B27C(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 8) * 0.0174532925;
  double v3 = *(double *)(a2 + 8) * 0.0174532925;
  __double2 v4 = __sincos_stret(*(double *)(a2 + 16) * 0.0174532925 - *(double *)(a1 + 16) * 0.0174532925);
  __double2 v5 = __sincos_stret(v3);
  __double2 v6 = __sincos_stret(v2);

  return atan2(v5.__cosval * v4.__sinval, -(v6.__sinval * v5.__cosval) * v4.__cosval + v6.__cosval * v5.__sinval);
}

long double sub_10014B314(double *a1, double *a2)
{
  long double v2 = *a1;
  long double v3 = *a2;
  long double v4 = sin((a1[1] - a2[1]) * 0.5);
  long double v5 = v4 * v4;
  long double v6 = sin((v2 - v3) * 0.5);
  long double v7 = v6 * v6;
  double v8 = cos(v2);
  long double v9 = cos(v3);
  long double v10 = asin(sqrt(v7 + v8 * v9 * v5));
  return (v10 + v10) * 180.0 / 3.14159265 * 60.0 * 1852.0;
}

double sub_10014B3C4(uint64_t a1, double a2)
{
  double result = a2 * -0.0174532925 + 1.57079633 - *(double *)(*(void *)a1 + 80);
  if (!*(unsigned char *)(*(void *)a1 + 72)) {
    return -result;
  }
  return result;
}

void sub_10014B3FC(uint64_t a1)
{
  char v20 = 0;
  buf[0] = 0;
  if (*(char *)(a1 + 23) < 0)
  {
    sub_1000559FC(__p, *(void **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a1;
    *(void *)&__p[16] = *(void *)(a1 + 16);
  }
  sub_10016A2C4((uint64_t)buf, (uint64_t)__p, 1);
  if ((__p[23] & 0x80000000) != 0) {
    operator delete(*(void **)__p);
  }
  if (v20 < 0) {
    operator delete(*(void **)buf);
  }
  int v1 = rand();
  if (qword_10047BED8 == -1)
  {
    long double v2 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
      goto LABEL_11;
    }
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_100458BA8);
    long double v2 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
    {
LABEL_11:
      if (sub_10016A1C0())
      {
        if (qword_10047BED8 == -1)
        {
          long double v3 = qword_10047BEE0;
          if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
            goto LABEL_22;
          }
        }
        else
        {
          dispatch_once(&qword_10047BED8, &stru_100458BA8);
          long double v3 = qword_10047BEE0;
          if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
            goto LABEL_22;
          }
        }
        sub_1001664D8(0);
        long double v4 = v13;
        if (v14 < 0) {
          long double v4 = (void *)v13[0];
        }
        if (v20 >= 0) {
          long double v5 = buf;
        }
        else {
          long double v5 = *(unsigned char **)buf;
        }
        *(_DWORD *)std::string __p = 136381187;
        *(void *)&__p[4] = v4;
        *(_WORD *)&__p[12] = 2080;
        *(void *)&__p[14] = v5;
        *(_WORD *)&__p[22] = 1024;
        int v16 = v1;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Precondition failure: %{private}s\n %s \n trace link nonce = %d", __p, 0x1Cu);
        if (v20 < 0) {
          operator delete(*(void **)buf);
        }
      }
      if (qword_10047BED8 != -1)
      {
        dispatch_once(&qword_10047BED8, &stru_100458BA8);
        long double v6 = qword_10047BEE0;
        if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
          goto LABEL_30;
        }
        goto LABEL_23;
      }
LABEL_22:
      long double v6 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_30;
      }
LABEL_23:
      int v7 = v14;
      double v8 = (void *)v13[0];
      sub_1001664D8(0);
      long double v9 = v13;
      if (v7 < 0) {
        long double v9 = v8;
      }
      if (__p[23] >= 0) {
        long double v10 = __p;
      }
      else {
        long double v10 = *(unsigned char **)__p;
      }
      *(_DWORD *)buf = 136380931;
      *(void *)&buf[4] = v9;
      __int16 v18 = 2080;
      uint64_t v19 = v10;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Precondition failure: %{private}s\n %s \n", buf, 0x16u);
      if ((__p[23] & 0x80000000) != 0) {
        operator delete(*(void **)__p);
      }
LABEL_30:
      __cxa_allocate_exception(0x40uLL);
      if (v14 >= 0) {
        __double2 v11 = (const char *)v13;
      }
      else {
        __double2 v11 = (const char *)v13[0];
      }
      std::logic_error::logic_error((std::logic_error *)__p, v11);
      sub_10018E868((uint64_t)v12);
      sub_1000D8F04((std::logic_error *)__p, (uint64_t)"void Preconditions::details::checkFailed(const Args &...) [E = std::invalid_argument, Args = <std::string>]", (uint64_t)"../../../common/util/preconditions.h", 88, (uint64_t)v12);
    }
  }
  *(_DWORD *)std::string __p = 67109120;
  *(_DWORD *)&__p[4] = v1;
  _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "Precondition failure. log link nonce = %d", __p, 8u);
  goto LABEL_11;
}

void sub_10014B770(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::invalid_argument a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a17 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10014B814(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

std::string *sub_10014B844@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10014B878(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_10014B894@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10014B8C8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_10014B8E4@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10014B918(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10014B934()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10014B9AC()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_10014BA24(uint64_t result, void *a2, uint64_t a3, int a4)
{
  uint64_t v4 = a2[1];
  *(void *)double result = *a2;
  *(void *)(result + 8) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  *(_DWORD *)(result + 16) = a4 % *(_DWORD *)(a3 + 4);
  *(_DWORD *)(result + 20) = a4 / *(_DWORD *)(a3 + 4);
  return result;
}

uint64_t sub_10014BA5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100357D2C(a2, a1, a3);
}

int32x2_t sub_10014BA6C(int32x2_t *a1, float64x2_t *a2)
{
  __asm { FMOV            V1.2D, #0.5 }
  int32x2_t result = vmovn_s64(vcvtq_s64_f64(vrndmq_f64(vaddq_f64(a2[1], _Q1))));
  a1[2] = result;
  return result;
}

double sub_10014BA8C(uint64_t a1)
{
  return *(double *)(*(void *)a1 + 64);
}

void sub_10014BA98(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (std::__shared_weak_count *)a1[1];
  uint64_t v6 = *a1;
  int v7 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10007314C(a2, (uint64_t)&v6, (double)*((int *)a1 + 4), (double)*((int *)a1 + 5));
  long double v5 = v7;
  if (v7)
  {
    if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_10014BB50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

double sub_10014BB64(uint64_t *a1)
{
  long double v2 = (std::__shared_weak_count *)a1[1];
  uint64_t v27 = *a1;
  int v28 = v2;
  if (v2) {
    atomic_fetch_add_explicit(&v2->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10007314C((uint64_t)v29, (uint64_t)&v27, (double)*((int *)a1 + 4), (double)*((int *)a1 + 5));
  long double v3 = v28;
  if (v28 && !atomic_fetch_add(&v28->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  double v5 = v31;
  double v4 = v32;
  double v6 = v31 + -0.5;
  int v7 = (std::__shared_weak_count *)a1[1];
  double v8 = 0.5;
  if (*(unsigned char *)(*a1 + 72)) {
    double v9 = 0.5;
  }
  else {
    double v9 = -0.5;
  }
  if (*(unsigned char *)(*a1 + 72)) {
    double v8 = -0.5;
  }
  double v10 = v32 + v8;
  uint64_t v23 = *a1;
  int v24 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10007314C((uint64_t)&v25, (uint64_t)&v23, v6, v10);
  sub_1000727B4(&v25, (uint64_t)&v27);
  __double2 v11 = (std::__shared_weak_count *)a1[1];
  uint64_t v18 = *a1;
  uint64_t v19 = v11;
  if (v11) {
    atomic_fetch_add_explicit(&v11->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10007314C((uint64_t)&v20, (uint64_t)&v18, v5 + 1.0 + -0.5, v4 + v9);
  sub_1000727B4(&v20, (uint64_t)v22);
  sub_100072EC0((uint64_t)&v33, (uint64_t)&v27, (uint64_t)v22);
  nullsub_17(v22);
  long double v12 = v21;
  if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  long double v13 = v19;
  if (v19 && !atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  nullsub_17(&v27);
  char v14 = v26;
  if (v26 && !atomic_fetch_add(&v26->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
    std::__shared_weak_count::__release_weak(v14);
  }
  double v15 = v24;
  if (v24 && !atomic_fetch_add(&v24->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
  }
  int v16 = v30;
  if (v30 && !atomic_fetch_add(&v30->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
  }
  return v33;
}

void sub_10014BE48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  nullsub_17(&a15);
  sub_1000BA884((uint64_t)&a11);
  sub_1000BA884((uint64_t)&a9);
  nullsub_17(&a25);
  sub_1000BA884((uint64_t)&a21);
  sub_1000BA884((uint64_t)&a19);
  sub_1000BA884(v25 - 128);
  _Unwind_Resume(a1);
}

void sub_10014BEA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1000BA884((uint64_t)va);
  sub_1000BA884(v11 - 128);
  _Unwind_Resume(a1);
}

void sub_10014BEC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  sub_1000BA884((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10014BED4(int32x2_t *a1@<X0>, unsigned int a2@<W1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = 0;
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  int32x2_t v8 = *a1;
  double v9 = (std::__shared_weak_count *)a1[1];
  int v37 = v9;
  if (v9)
  {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
    int32x2_t v10 = a1[2];
    int32x2_t v38 = v8;
    int v39 = v9;
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    int32x2_t v10 = a1[2];
    int32x2_t v38 = *a1;
    int v39 = 0;
  }
  unint64_t v40 = (unint64_t)vadd_s32(v10, (int32x2_t)__PAIR64__(a2, a3));
  uint64_t v11 = sub_10014C7E0((char **)a4, (uint64_t)&v38);
  long double v12 = v39;
  *(void *)(a4 + 8) = v11;
  if (v12 && !atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  if (v37 && !atomic_fetch_add(&v37->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
    std::__shared_weak_count::__release_weak(v37);
    if (!a3) {
      goto LABEL_23;
    }
  }
  else if (!a3)
  {
    goto LABEL_23;
  }
  int32x2_t v13 = *a1;
  char v14 = (std::__shared_weak_count *)a1[1];
  int v36 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  unsigned int v15 = a1[2].i32[0] - a3;
  unsigned int v16 = a1[2].i32[1] + a2;
  int32x2_t v38 = v13;
  int v39 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  unint64_t v40 = __PAIR64__(v16, v15);
  long double v17 = *(int32x2_t **)(a4 + 8);
  if ((unint64_t)v17 >= *(void *)(a4 + 16))
  {
    uint64_t v18 = sub_10014C7E0((char **)a4, (uint64_t)&v38);
    uint64_t v19 = v39;
    *(void *)(a4 + 8) = v18;
    if (v19 && !atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
    }
  }
  else
  {
    int32x2_t *v17 = v13;
    v17[1] = (int32x2_t)v39;
    int32x2_t v38 = 0;
    int v39 = 0;
    v17[2].i32[0] = v15;
    v17[2].i32[1] = v16;
    *(void *)(a4 + 8) = v17 + 3;
  }
  if (v36 && !atomic_fetch_add(&v36->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
    std::__shared_weak_count::__release_weak(v36);
  }
LABEL_23:
  if (!a2) {
    return;
  }
  int32x2_t v20 = *a1;
  int v21 = (std::__shared_weak_count *)a1[1];
  unint64_t v35 = v21;
  if (v21) {
    atomic_fetch_add_explicit(&v21->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  unsigned int v22 = a1[2].i32[0] + a3;
  unsigned int v23 = a1[2].i32[1] - a2;
  int32x2_t v38 = v20;
  int v39 = v21;
  if (v21) {
    atomic_fetch_add_explicit(&v21->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  unint64_t v40 = __PAIR64__(v23, v22);
  int v24 = *(int32x2_t **)(a4 + 8);
  if ((unint64_t)v24 >= *(void *)(a4 + 16))
  {
    uint64_t v25 = sub_10014C7E0((char **)a4, (uint64_t)&v38);
    uint64_t v26 = v39;
    *(void *)(a4 + 8) = v25;
    if (v26 && !atomic_fetch_add(&v26->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
  else
  {
    *int v24 = v20;
    v24[1] = (int32x2_t)v21;
    int32x2_t v38 = 0;
    int v39 = 0;
    v24[2].i32[0] = v22;
    v24[2].i32[1] = v23;
    *(void *)(a4 + 8) = v24 + 3;
  }
  if (v35 && !atomic_fetch_add(&v35->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
    std::__shared_weak_count::__release_weak(v35);
    if (!a3) {
      return;
    }
  }
  else if (!a3)
  {
    return;
  }
  int32x2_t v27 = *a1;
  int v28 = (std::__shared_weak_count *)a1[1];
  uint64_t v34 = v28;
  if (v28) {
    atomic_fetch_add_explicit(&v28->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  unsigned int v29 = a1[2].i32[0] - a3;
  unsigned int v30 = a1[2].i32[1] - a2;
  int32x2_t v38 = v27;
  int v39 = v28;
  if (v28) {
    atomic_fetch_add_explicit(&v28->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  unint64_t v40 = __PAIR64__(v30, v29);
  double v31 = *(int32x2_t **)(a4 + 8);
  if ((unint64_t)v31 >= *(void *)(a4 + 16))
  {
    double v32 = sub_10014C7E0((char **)a4, (uint64_t)&v38);
    double v33 = v39;
    *(void *)(a4 + 8) = v32;
    if (v33 && !atomic_fetch_add(&v33->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }
  else
  {
    int32x2_t *v31 = v27;
    v31[1] = (int32x2_t)v28;
    int32x2_t v38 = 0;
    int v39 = 0;
    v31[2].i32[0] = v29;
    v31[2].i32[1] = v30;
    *(void *)(a4 + 8) = v31 + 3;
  }
  if (v34)
  {
    if (!atomic_fetch_add(&v34->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
}

void sub_10014C33C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  sub_1000BA884((uint64_t)va1);
  sub_1000BA884((uint64_t)va);
  sub_10014C3CC(v2);
  _Unwind_Resume(a1);
}

void sub_10014C360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va1, a4);
  va_start(va, a4);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  sub_1000BA884((uint64_t)va1);
  sub_1000BA884((uint64_t)va);
  sub_10014C3CC(v4);
  _Unwind_Resume(a1);
}

void sub_10014C384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va1, a6);
  va_start(va, a6);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  sub_1000BA884((uint64_t)va1);
  sub_1000BA884((uint64_t)va);
  sub_10014C3CC(v6);
  _Unwind_Resume(a1);
}

void sub_10014C3A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  sub_1000BA884((uint64_t)va1);
  sub_1000BA884((uint64_t)va);
  sub_10014C3CC(v8);
  _Unwind_Resume(a1);
}

void **sub_10014C3CC(void **a1)
{
  long double v2 = (char *)*a1;
  if (*a1)
  {
    long double v3 = (char *)a1[1];
    uint64_t v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        double v5 = (std::__shared_weak_count *)*((void *)v3 - 2);
        if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 24;
      }
      while (v3 != v2);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_10014C480(int32x2_t *a1@<X0>, signed int a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  if (a2 >= 1)
  {
    for (unsigned int i = 0; i != a2; ++i)
    {
      sub_10014BED4(a1, i, a2, (uint64_t)&__p);
      sub_10014C970((char **)a3, *(void *)(a3 + 8), (uint64_t *)__p, v21, 0xAAAAAAAAAAAAAAABLL * (((char *)v21 - (unsigned char *)__p) >> 3));
      uint64_t v8 = (uint64_t *)__p;
      if (__p)
      {
        uint64_t v9 = v21;
        uint64_t v7 = __p;
        if (v21 != __p)
        {
          do
          {
            uint64_t v10 = (std::__shared_weak_count *)*(v9 - 2);
            if (v10 && !atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
              std::__shared_weak_count::__release_weak(v10);
            }
            v9 -= 3;
          }
          while (v9 != v8);
          uint64_t v7 = __p;
        }
        int v21 = v8;
        operator delete(v7);
      }
    }
    unsigned int v11 = 0;
    do
    {
      sub_10014BED4(a1, a2, v11, (uint64_t)&__p);
      sub_10014C970((char **)a3, *(void *)(a3 + 8), (uint64_t *)__p, v21, 0xAAAAAAAAAAAAAAABLL * (((char *)v21 - (unsigned char *)__p) >> 3));
      int32x2_t v13 = (uint64_t *)__p;
      if (__p)
      {
        char v14 = v21;
        uint64_t v12 = __p;
        if (v21 != __p)
        {
          do
          {
            unsigned int v15 = (std::__shared_weak_count *)*(v14 - 2);
            if (v15 && !atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
              std::__shared_weak_count::__release_weak(v15);
            }
            v14 -= 3;
          }
          while (v14 != v13);
          uint64_t v12 = __p;
        }
        int v21 = v13;
        operator delete(v12);
      }
      ++v11;
    }
    while (v11 != a2);
  }
  sub_10014BED4(a1, a2, a2, (uint64_t)&__p);
  sub_10014C970((char **)a3, *(void *)(a3 + 8), (uint64_t *)__p, v21, 0xAAAAAAAAAAAAAAABLL * (((char *)v21 - (unsigned char *)__p) >> 3));
  unsigned int v16 = (uint64_t *)__p;
  if (__p)
  {
    long double v17 = v21;
    uint64_t v18 = __p;
    if (v21 != __p)
    {
      do
      {
        uint64_t v19 = (std::__shared_weak_count *)*(v17 - 2);
        if (v19)
        {
          if (!atomic_fetch_add(&v19->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
            std::__shared_weak_count::__release_weak(v19);
          }
        }
        v17 -= 3;
      }
      while (v17 != v16);
      uint64_t v18 = __p;
    }
    int v21 = v16;
    operator delete(v18);
  }
}

void sub_10014C730(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10014C3CC((void **)va);
  sub_10014C3CC(v2);
  _Unwind_Resume(a1);
}

void sub_10014C77C(_Unwind_Exception *a1)
{
  sub_10014C3CC(v1);
  _Unwind_Resume(a1);
}

std::string *sub_10014C790@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10014C7C4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

char *sub_10014C7E0(char **a1, uint64_t a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_1000A9108();
  }
  if (0x5555555555555556 * ((a1[2] - *a1) >> 3) > v4) {
    unint64_t v4 = 0x5555555555555556 * ((a1[2] - *a1) >> 3);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 3) >= 0x555555555555555) {
    unint64_t v5 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v5 = v4;
  }
  if (v5 > 0xAAAAAAAAAAAAAAALL) {
    sub_1000A6A10();
  }
  uint64_t v7 = 24 * v5;
  uint64_t v8 = (char *)operator new(24 * v5);
  uint64_t v9 = &v8[24 * v3];
  uint64_t v10 = &v8[v7];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)a2;
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *((void *)v9 + 2) = *(void *)(a2 + 16);
  unsigned int v11 = v9 + 24;
  uint64_t v12 = *a1;
  int32x2_t v13 = a1[1];
  if (v13 == *a1)
  {
    *a1 = v9;
    a1[1] = v11;
    a1[2] = v10;
    if (!v13) {
      return v11;
    }
    goto LABEL_18;
  }
  do
  {
    long long v14 = *(_OWORD *)(v13 - 24);
    v13 -= 24;
    *(_OWORD *)(v9 - 24) = v14;
    v9 -= 24;
    *(void *)int32x2_t v13 = 0;
    *((void *)v13 + 1) = 0;
    *((void *)v9 + 2) = *((void *)v13 + 2);
  }
  while (v13 != v12);
  unsigned int v15 = *a1;
  int32x2_t v13 = a1[1];
  *a1 = v9;
  a1[1] = v11;
  a1[2] = v10;
  if (v13 != v15)
  {
    do
    {
      unsigned int v16 = (std::__shared_weak_count *)*((void *)v13 - 2);
      if (v16 && !atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
        std::__shared_weak_count::__release_weak(v16);
      }
      v13 -= 24;
    }
    while (v13 != v15);
    int32x2_t v13 = v15;
  }
  if (v13) {
LABEL_18:
  }
    operator delete(v13);
  return v11;
}

uint64_t sub_10014C970(char **a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5)
{
  unint64_t v5 = *a1;
  uint64_t v6 = (a2 - (uint64_t)*a1) / 24;
  uint64_t v7 = (uint64_t)&(*a1)[24 * v6];
  if (a5 < 1) {
    return v7;
  }
  uint64_t v9 = a3;
  unint64_t v11 = (unint64_t)a1[1];
  uint64_t v12 = a1[2];
  if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v12[-v11] >> 3)) >= a5)
  {
    if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v11 - v7) >> 3)) >= a5)
    {
      long double v17 = &a3[3 * a5];
      uint64_t v18 = a1[1];
    }
    else
    {
      long double v17 = &a3[(uint64_t)(v11 - v7) >> 3];
      if (v17 == a4)
      {
        uint64_t v18 = a1[1];
      }
      else
      {
        uint64_t v18 = a1[1];
        uint64_t v19 = &a3[(uint64_t)(v11 - v7) >> 3];
        int32x2_t v20 = v18;
        do
        {
          uint64_t v21 = v19[1];
          *(void *)int32x2_t v20 = *v19;
          *((void *)v20 + 1) = v21;
          if (v21) {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(v21 + 8), 1uLL, memory_order_relaxed);
          }
          *((void *)v20 + 2) = v19[2];
          v18 += 24;
          v19 += 3;
          v20 += 24;
        }
        while (v19 != a4);
      }
      a1[1] = v18;
      if ((uint64_t)(v11 - v7) < 1) {
        return v7;
      }
    }
    int v49 = v17;
    uint64_t v35 = v7 + 24 * a5;
    int v36 = &v18[-24 * a5];
    int v37 = v18;
    if ((unint64_t)v36 < v11)
    {
      int v37 = v18;
      do
      {
        *(_OWORD *)int v37 = *(_OWORD *)v36;
        *(void *)int v36 = 0;
        *((void *)v36 + 1) = 0;
        *((void *)v37 + 2) = *((void *)v36 + 2);
        v37 += 24;
        v36 += 24;
      }
      while ((unint64_t)v36 < v11);
    }
    a1[1] = v37;
    if (v18 != (char *)v35)
    {
      unint64_t v38 = 0;
      int v39 = &v5[24 * v6 + 8 * ((uint64_t)&v18[-v35] >> 3)];
      uint64_t v40 = -8 * ((uint64_t)&v18[-v35] >> 3);
      do
      {
        int v41 = &v39[v38];
        long long v42 = *(_OWORD *)&v39[v38 - 24];
        *((void *)v41 - 3) = 0;
        *((void *)v41 - 2) = 0;
        unsigned int v43 = *(std::__shared_weak_count **)&v18[v38 - 16];
        *(_OWORD *)&v18[v38 - 24] = v42;
        if (v43 && !atomic_fetch_add(&v43->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
          std::__shared_weak_count::__release_weak(v43);
        }
        *(void *)&v18[v38 - 8] = *((void *)v41 - 1);
        v38 -= 24;
      }
      while (v40 != v38);
    }
    if (v49 != v9)
    {
      unint64_t v44 = (void *)v7;
      do
      {
        uint64_t v46 = *v9;
        uint64_t v45 = v9[1];
        if (v45) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v45 + 8), 1uLL, memory_order_relaxed);
        }
        unsigned int v47 = (std::__shared_weak_count *)v44[1];
        *unint64_t v44 = v46;
        v44[1] = v45;
        if (v47 && !atomic_fetch_add(&v47->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
          std::__shared_weak_count::__release_weak(v47);
        }
        v44[2] = v9[2];
        v9 += 3;
        v44 += 3;
      }
      while (v9 != v49);
    }
    return v7;
  }
  unint64_t v13 = a5 - 0x5555555555555555 * ((uint64_t)(v11 - (void)v5) >> 3);
  if (v13 > 0xAAAAAAAAAAAAAAALL) {
    sub_1000A9108();
  }
  unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((v12 - v5) >> 3);
  if (2 * v14 > v13) {
    unint64_t v13 = 2 * v14;
  }
  if (v14 >= 0x555555555555555) {
    unint64_t v15 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v15 = v13;
  }
  if (v15)
  {
    if (v15 > 0xAAAAAAAAAAAAAAALL) {
      sub_1000A6A10();
    }
    unsigned int v16 = (char *)operator new(24 * v15);
  }
  else
  {
    unsigned int v16 = 0;
  }
  unsigned int v22 = &v16[24 * v6];
  unsigned int v23 = &v16[24 * v15];
  int v24 = &v22[24 * a5];
  uint64_t v25 = v22;
  do
  {
    uint64_t v26 = v9[1];
    *(void *)uint64_t v25 = *v9;
    *((void *)v25 + 1) = v26;
    if (v26) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v26 + 8), 1uLL, memory_order_relaxed);
    }
    *((void *)v25 + 2) = v9[2];
    v25 += 24;
    v9 += 3;
  }
  while (v25 != v24);
  int32x2_t v27 = *a1;
  int v28 = &v16[24 * v6];
  if (*a1 != (char *)v7)
  {
    uint64_t v29 = 24 * v6;
    do
    {
      unsigned int v30 = &v16[v29];
      double v31 = &v5[v29];
      *(_OWORD *)(v30 - 24) = *(_OWORD *)&v5[v29 - 24];
      *((void *)v31 - 3) = 0;
      *((void *)v31 - 2) = 0;
      *((void *)v30 - 1) = *(void *)&v5[v29 - 8];
      v16 -= 24;
      v5 -= 24;
    }
    while (&v5[v29] != v27);
    int v28 = &v16[24 * v6];
  }
  double v32 = a1[1];
  if (v32 != (char *)v7)
  {
    do
    {
      *(_OWORD *)int v24 = *(_OWORD *)v7;
      *(void *)uint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      *((void *)v24 + 2) = *(void *)(v7 + 16);
      v24 += 24;
      v7 += 24;
    }
    while ((char *)v7 != v32);
    uint64_t v7 = (uint64_t)a1[1];
  }
  double v33 = *a1;
  *a1 = v28;
  a1[1] = v24;
  for (a1[2] = v23; (char *)v7 != v33; v7 -= 24)
  {
    uint64_t v34 = *(std::__shared_weak_count **)(v7 - 16);
    if (v34 && !atomic_fetch_add(&v34->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
      std::__shared_weak_count::__release_weak(v34);
    }
  }
  if (v33) {
    operator delete(v33);
  }
  return (uint64_t)v22;
}

void sub_10014CDF4()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10014CE6C()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_10014CEE4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void *a5)
{
  sub_10002FC84(a3, __p);
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  *a2 = 0;
  a2[1] = 0;
  *(void *)a1 = off_100458C30;
  sub_10002FA20((void *)(a1 + 8), (uint64_t)__p);
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  sub_10002FCB0((uint64_t)__p);
  *(void *)a1 = off_100458BD8;
  sub_100032E28(a3, (uint64_t)__p);
  sub_10002FD04(a1 + 72, (long long *)__p, 0.25);
  v12.n128_u64[0] = 0.25;
  sub_10002FC40(a3, a1 + 120, v12);
  sub_10002FD50();
  *(void *)(a1 + 184) = v13;
  *(void *)(a1 + 192) = v14;
  *(void *)(a1 + 200) = *a5;
  uint64_t v15 = a5[1];
  *(void *)(a1 + 208) = v15;
  if (v15) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v15 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 224) = a4;
  *(double *)(a1 + 232) = sub_1002A3F68(a3);
  *(void *)(a1 + 240) = sub_1002A3F94(a3);
  *(double *)(a1 + 248) = sub_1002A3FD0(a3);
  if (!a4)
  {
    sub_1000AE4B0(v18, "");
    sub_10014AE94("DirectionOfTravelFake depends on truth, which is not available right now. Please use another motion model instead!", __p);
    sub_10016A2C4((uint64_t)v18, (uint64_t)__p, 1);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if (v19 < 0) {
      operator delete(v18[0]);
    }
    sub_100149690((uint64_t)&v17);
  }
  *(double *)(a1 + 216) = sqrt(sub_10002FC28(a3, 0.25));
  return a1;
}

void sub_10014D0E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,char a24)
{
  if (a17 < 0)
  {
    operator delete(__p);
    sub_1000BA884(v25);
    sub_10014D18C(v24);
    _Unwind_Resume(a1);
  }
  sub_1000BA884(v25);
  sub_10014D18C(v24);
  _Unwind_Resume(a1);
}

void *sub_10014D18C(void *a1)
{
  *a1 = off_100458C30;
  long double v2 = (std::__shared_weak_count *)a1[8];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    sub_10002FCB0((uint64_t)(a1 + 1));
    return a1;
  }
  else
  {
    sub_10002FCB0((uint64_t)(a1 + 1));
    return a1;
  }
}

uint64_t sub_10014D238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1002AC76C(a1 + 72, *(void *)(a1 + 56));
  *(void *)(a2 + 40) = v8;

  return sub_10014D2A0(a1, a2, a3, a4);
}

uint64_t sub_10014D2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v9 = *(double *)(a2 + 16);
  double v8 = *(double *)(a2 + 24);
  uint64_t v10 = a1 + 56;
  uint64_t v11 = *(void *)(a1 + 56);
  if (*(_DWORD *)(a3 + 4) != 2)
  {
    *(long double *)(a2 + 32) = hypot(0.001, *(double *)(a1 + 248) * 0.25) + *(double *)(a2 + 32);
    *(double *)(a2 + 32) = (*(double (**)(uint64_t, double))(*(void *)v11 + 64))(v11, 0.0)
                         + *(double *)(a2 + 32);
  }
  if (*(void *)(a3 + 16) / *(uint64_t *)(a1 + 240) == (*(void *)(a3 + 16) - 250000000) / *(void *)(a1 + 240))
  {
    uint64_t v12 = *(void *)(a1 + 224);
    unsigned int v30 = *(uint64_t ***)(a3 + 16);
    sub_100290090(v12, &v30);
    double v14 = v13;
    uint64_t v15 = *(void *)(a1 + 224);
    unsigned int v30 = (uint64_t **)(*(void *)(a3 + 16) - 250000000);
    sub_100290090(v15, &v30);
    sub_100357D60(v14 - v16);
    double v18 = *(double *)(a2 + 32) + v17 * *(double *)(a1 + 232);
  }
  else
  {
    double v18 = *(double *)(a2 + 32)
        + dbl_1003ED950[(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v11 + 80))(v11, 2) == 0];
  }
  *(double *)(a2 + 32) = v18;
  int v19 = *(_DWORD *)(a3 + 4);
  if (v19 == 3)
  {
    double v21 = (*(double (**)(uint64_t))(*(void *)v11 + 48))(v11);
    double v23 = sub_100314D4C(a1 + 120);
    (*(void (**)(uint64_t, double, double))(*(void *)v11 + 64))(v11, 0.0, v23);
    goto LABEL_12;
  }
  if (v19 == 2)
  {
    double v21 = (*(double (**)(uint64_t))(*(void *)v11 + 48))(v11);
    double v24 = sub_100314D4C(a1 + 120);
    double v22 = (*(double (**)(uint64_t, double, double))(*(void *)v11 + 24))(v11, 0.0, v24 * 0.5);
    goto LABEL_12;
  }
  double v20 = 0.0;
  double v21 = 0.0;
  if (v19 == 1)
  {
    double v21 = (*(double (**)(uint64_t, double, double))(*(void *)v11 + 64))(v11, 0.0, *(double *)(a1 + 216))
        + *(double *)(a2 + 32);
    *(double *)(a2 + 32) = v21;
    double v22 = sub_1002A59BC((double *)(a1 + 184), v11, *(double *)(a3 + 8));
LABEL_12:
    double v20 = v22;
  }
  __double2 v25 = __sincos_stret(v21);
  uint64_t v26 = *(void *)(a3 + 16);
  unsigned int v30 = 0;
  double v31 = 0;
  uint64_t v27 = sub_10024A1E0(a2, v9 + v25.__cosval * v20, v8 + v25.__sinval * v20, v26, a4, v10, a1 + 8, &v30);
  int v28 = v31;
  if (v31 && !atomic_fetch_add(&v31->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
    std::__shared_weak_count::__release_weak(v28);
  }
  return v27;
}

void sub_10014D604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_10014D618(void *a1)
{
  *a1 = off_100458BD8;
  long double v2 = (std::__shared_weak_count *)a1[26];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *a1 = off_100458C30;
    unint64_t v3 = (std::__shared_weak_count *)a1[8];
    if (!v3) {
      goto LABEL_5;
    }
  }
  else
  {
    *a1 = off_100458C30;
    unint64_t v3 = (std::__shared_weak_count *)a1[8];
    if (!v3)
    {
LABEL_5:
      sub_10002FCB0((uint64_t)(a1 + 1));
      return a1;
    }
  }
  if (atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_5;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  sub_10002FCB0((uint64_t)(a1 + 1));
  return a1;
}

void sub_10014D74C(void *a1)
{
  *a1 = off_100458BD8;
  long double v2 = (std::__shared_weak_count *)a1[26];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *a1 = off_100458C30;
    unint64_t v3 = (std::__shared_weak_count *)a1[8];
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    *a1 = off_100458C30;
    unint64_t v3 = (std::__shared_weak_count *)a1[8];
    if (!v3) {
      goto LABEL_7;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
LABEL_7:
  sub_10002FCB0((uint64_t)(a1 + 1));

  operator delete();
}

void sub_10014D88C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10014D904()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_10014D97C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint8_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  if (qword_10047BED8 == -1)
  {
    uint64_t v12 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_4;
    }
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_100458C70);
    uint64_t v12 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG))
    {
LABEL_4:
      double v14 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_6;
      }
      goto LABEL_5;
    }
  }
  double v13 = *((double *)a3 + 19);
  *(_DWORD *)buf = 134217984;
  double v38 = v13;
  _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "indoorPose.sigmaDist: %f", buf, 0xCu);
  if (qword_10047BED8 == -1) {
    goto LABEL_4;
  }
  dispatch_once(&qword_10047BED8, &stru_100458C70);
  double v14 = qword_10047BEE0;
  if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG))
  {
LABEL_6:
    double v16 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_5:
  double v15 = *(double *)(a2 + 152);
  *(_DWORD *)buf = 134217984;
  double v38 = v15;
  _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEBUG, "gpsPose.sigmaDist: %f", buf, 0xCu);
  if (qword_10047BED8 == -1) {
    goto LABEL_6;
  }
  dispatch_once(&qword_10047BED8, &stru_100458C70);
  double v16 = qword_10047BEE0;
  if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG))
  {
LABEL_8:
    double v18 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_7:
  double v17 = *((double *)a3 + 35);
  *(_DWORD *)buf = 134217984;
  double v38 = v17;
  _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "indoorPose.horizontalAccuracy: %f", buf, 0xCu);
  if (qword_10047BED8 == -1) {
    goto LABEL_8;
  }
  dispatch_once(&qword_10047BED8, &stru_100458C70);
  double v18 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG))
  {
LABEL_9:
    double v19 = *(double *)(a2 + 280);
    *(_DWORD *)buf = 134217984;
    double v38 = v19;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEBUG, "gpsPose.horizontalAccuracy: %f", buf, 0xCu);
  }
LABEL_10:
  if (*((_DWORD *)a3 + 131))
  {
    if (qword_10047BED8 == -1)
    {
      double v20 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        return sub_1001A39A4(a6, a3);
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100458C70);
      double v20 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        return sub_1001A39A4(a6, a3);
      }
    }
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, OS_LOG_TYPE_INFO, "WARNING: GPS Indoor fusion requested but yieldSource is not Indoor, skip fusion", buf, 2u);
    return sub_1001A39A4(a6, a3);
  }
  uint64_t v22 = *(void *)(a2 + 240);
  double v23 = sub_1002A3C78(a5);
  if ((double)(a4 - v22) / 1000000000.0 >= v23)
  {
    if (qword_10047BED8 == -1)
    {
      uint64_t v27 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        return sub_1001A39A4(a6, a3);
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100458C70);
      uint64_t v27 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        return sub_1001A39A4(a6, a3);
      }
    }
    *(_DWORD *)buf = 134218240;
    double v38 = (double)(a4 - v22) / 1000000000.0;
    __int16 v39 = 2048;
    double v40 = v23;
    _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_INFO, "Choosing indoor as gps has age %f(s) exceeding its lifespan %f(s)", buf, 0x16u);
    return sub_1001A39A4(a6, a3);
  }
  double v24 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1);
  if (v24)
  {
    sub_1001A9C7C((uint64_t)v36, (uint64_t)(a3 + 8));
    double v25 = sub_100370590(v24, (uint64_t)v36, 1, 1, 1, 0.0);
    nullsub_17(v36);
    if (v25 < 0.0)
    {
      if (qword_10047BED8 == -1)
      {
        uint64_t v26 = qword_10047BEE0;
        if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
          return sub_1001A39A4(a6, a3);
        }
      }
      else
      {
        dispatch_once(&qword_10047BED8, &stru_100458C70);
        uint64_t v26 = qword_10047BEE0;
        if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
          return sub_1001A39A4(a6, a3);
        }
      }
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, "Choosing indoor as it is in surveyed area", buf, 2u);
      return sub_1001A39A4(a6, a3);
    }
  }
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 16))(a1);
  uint64_t v29 = v28;
  if (v28 && (!sub_10031F03C(v28, (uint64_t)(a3 + 8)) || (sub_10031F03C(v29, a2 + 8) & 1) == 0))
  {
    if (qword_10047BED8 == -1)
    {
      double v33 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        return sub_1001A39A4(a6, a3);
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100458C70);
      double v33 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        return sub_1001A39A4(a6, a3);
      }
    }
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_INFO, "Choosing indoor as not both fixes are outside this building", buf, 2u);
    return sub_1001A39A4(a6, a3);
  }
  sub_1001A39A4(buf, a3);
  double v30 = *((double *)a3 + 19) / *(double *)(a2 + 152);
  if (v30 > 1.5)
  {
    sub_1001A0BAC((uint64_t)buf, a2 + 8);
    sub_1001A0BF4((uint64_t)buf, *(double *)(a2 + 152));
    sub_1001A0C60((uint64_t)buf, *(double *)(a2 + 280));
    sub_1001A0D14((uint64_t)buf, 2);
    if (qword_10047BED8 != -1)
    {
      dispatch_once(&qword_10047BED8, &stru_100458C70);
      double v31 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        goto LABEL_45;
      }
      goto LABEL_32;
    }
    double v31 = qword_10047BEE0;
    if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO))
    {
LABEL_32:
      *(_WORD *)uint64_t v35 = 0;
      double v32 = "Choosing gps as gps is more confident";
LABEL_44:
      _os_log_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_INFO, v32, v35, 2u);
    }
LABEL_45:
    a3 = buf;
    goto LABEL_46;
  }
  if (v30 >= 0.625)
  {
    sub_10014E168((float64x2_t *)a2, (float64x2_t *)a3, (uint64_t)buf);
    sub_1001A0D14((uint64_t)buf, 2);
    if (qword_10047BED8 == -1)
    {
      double v31 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        goto LABEL_45;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100458C70);
      double v31 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        goto LABEL_45;
      }
    }
    *(_WORD *)uint64_t v35 = 0;
    double v32 = "Aggregating gps and indoor";
    goto LABEL_44;
  }
  if (qword_10047BED8 != -1)
  {
    dispatch_once(&qword_10047BED8, &stru_100458C70);
    uint64_t v34 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
      goto LABEL_46;
    }
    goto LABEL_40;
  }
  uint64_t v34 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO))
  {
LABEL_40:
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, OS_LOG_TYPE_INFO, "Choosing indoor as indoor is more confident", v35, 2u);
  }
LABEL_46:
  sub_1001A39A4(a6, a3);
  return sub_1001A0B70(buf);
}

void sub_10014E13C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  nullsub_17(va);
  _Unwind_Resume(a1);
}

void sub_10014E150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_1001A0B70(va);
  _Unwind_Resume(a1);
}

float64_t sub_10014E168(float64x2_t *a1, float64x2_t *a2, uint64_t a3)
{
  uint64_t v12 = off_10045DA98;
  char v14 = 0;
  __asm { FMOV            V2.2D, #0.5 }
  float64x2_t v13 = vmlaq_f64(vmulq_f64(a2[1], _Q2), _Q2, a1[1]);
  sub_10007B704(a3 + 8, (uint64_t)&v12);
  nullsub_17(&v12);
  float64_t result = a2[9].f64[1] * 0.5 + a1[9].f64[1] * 0.5;
  *(float64_t *)(a3 + 152) = result;
  return result;
}

void sub_10014E208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

int64x2_t sub_10014E21C@<Q0>(uint64_t a1@<X8>)
{
  *(void *)a1 = off_10045D828;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = off_10045DA98;
  *(unsigned char *)(a1 + 32) &= 0xFCu;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = off_10045DAB8;
  *(unsigned char *)(a1 + 64) &= 0xFCu;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(_DWORD *)(a1 + 88) = 0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_DWORD *)(a1 + 128) = 0;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  uint64_t v2 = a1 + 136;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(void *)(a1 + 304) = off_10045D7E8;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_DWORD *)(a1 + 424) = 0;
  *(void *)(a1 + 440) = 0;
  *(void *)(a1 + 448) = 0;
  *(void *)(a1 + 432) = 0;
  *(unsigned char *)(a1 + 456) &= 0xC0u;
  *(_WORD *)(a1 + 464) = 0;
  *(_OWORD *)(a1 + 472) = 0u;
  *(_OWORD *)(a1 + 488) = 0u;
  *(_OWORD *)(a1 + 504) = 0u;
  *(void *)(a1 + 520) = 0;
  *(void *)(a1 + 528) = off_10045DAB8;
  *(void *)(a1 + 544) = 0;
  *(void *)(a1 + 536) = 0;
  *(unsigned char *)(a1 + 552) &= 0xFCu;
  *(void *)(a1 + 560) = 0;
  *(void *)(a1 + 568) = off_10045D808;
  *(void *)(a1 + 584) = 0;
  *(void *)(a1 + 576) = 0;
  *(unsigned char *)(a1 + 592) &= 0xF8u;
  *(void *)(a1 + 600) = 0;
  *(_DWORD *)(a1 + 608) = 0;
  *(_OWORD *)(a1 + 616) = 0u;
  *(_OWORD *)(a1 + 632) = 0u;
  *(_OWORD *)(a1 + 648) = 0u;
  *(_DWORD *)(a1 + 664) = 0;
  *(_OWORD *)(a1 + 700) = 0u;
  *(_OWORD *)(a1 + 672) = 0u;
  *(_OWORD *)(a1 + 688) = 0u;
  *(_OWORD *)(a1 + 720) = 0u;
  *(_OWORD *)(a1 + 736) = 0u;
  *(void *)(a1 + 752) = *(void *)(a1 + 752) & 0xF000000000000000 | 0x10000000;
  *(void *)(a1 + 296) = 4;
  unint64_t v3 = (const std::string *)sub_100085D38((uint64_t)&qword_10047ED40);
  std::string::operator=((std::string *)(a1 + 104), v3);
  int64x2_t v4 = vdupq_n_s64(0x7FF8000000000000uLL);
  *(void *)(a1 + 152) = 0x7FF8000000000000;
  *(int64x2_t *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(int64x2_t *)(a1 + 48) = v4;
  sub_10019FAAC(a1, NAN);
  sub_1001A0BBC(a1, NAN);
  int64x2_t result = vdupq_n_s64(0x7FF8000000000000uLL);
  *(int64x2_t *)(a1 + 200) = result;
  *(int64x2_t *)(a1 + 216) = result;
  *(void *)(a1 + 232) = 0x7FF8000000000000;
  return result;
}

void sub_10014E468(_Unwind_Exception *a1)
{
  sub_1001A0B70(v1);
  _Unwind_Resume(a1);
}

double sub_10014E47C(uint64_t a1, double a2)
{
  double result = *(double *)(a1 + 24) + *(double *)(a1 + 16) * a2;
  if (result >= *(double *)(a1 + 32) && (*(_DWORD *)(a1 + 52) & 4) != 0) {
    double result = *(double *)(a1 + 32);
  }
  if (*(double *)(a1 + 40) >= result && (*(_DWORD *)(a1 + 52) & 8) != 0) {
    return *(double *)(a1 + 40);
  }
  return result;
}

void sub_10014E4B0(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  double v19 = 0;
  uint64_t v20 = 0;
  double v18 = &v19;
  uint64_t v5 = **(void **)(a1 + 40);
  if (*(void *)(*(void *)(a1 + 40) + 8) != v5)
  {
    unint64_t v7 = 0;
    do
    {
      long long v8 = *(_OWORD *)(v5 + 16 * v7);
      long long v16 = v8;
      double v17 = (std::__shared_weak_count *)*((void *)&v8 + 1);
      double v9 = *(std::__shared_weak_count **)(v5 + 16 * v7 + 8);
      if (*((void *)&v8 + 1)) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v8 + 1) + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t v10 = v19;
      uint64_t v11 = &v19;
      uint64_t v12 = &v19;
      if (v19)
      {
        while (1)
        {
          while (1)
          {
            uint64_t v12 = (uint64_t **)v10;
            unint64_t v13 = v10[4];
            if ((unint64_t)v8 >= v13) {
              break;
            }
            uint64_t v10 = *v12;
            uint64_t v11 = v12;
            if (!*v12) {
              goto LABEL_13;
            }
          }
          if (v13 >= (unint64_t)v8) {
            break;
          }
          uint64_t v10 = v12[1];
          if (!v10)
          {
            uint64_t v11 = v12 + 1;
            goto LABEL_13;
          }
        }
      }
      else
      {
LABEL_13:
        char v14 = (uint64_t *)operator new(0x30uLL);
        double v15 = v14;
        *((_OWORD *)v14 + 2) = v16;
        if (v9) {
          atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        *char v14 = 0;
        v14[1] = 0;
        v14[2] = (uint64_t)v12;
        *uint64_t v11 = v14;
        if (*v18)
        {
          double v18 = (uint64_t **)*v18;
          double v15 = *v11;
        }
        sub_1000619B8(v19, v15);
        ++v20;
        double v9 = v17;
      }
      if (v9 && !atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
        std::__shared_weak_count::__release_weak(v9);
      }
      ++v7;
      uint64_t v5 = **(void **)(a1 + 40);
    }
    while (v7 < (*(void *)(*(void *)(a1 + 40) + 8) - v5) >> 4);
  }
  sub_10014E69C(a3, &v18, a2);
  sub_10014EAB8((uint64_t)&v18, v19);
}

void sub_10014E664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, void *a15)
{
}

void sub_10014E67C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, char a14, void *a15)
{
}

void *sub_10014E69C(void *result, void *a2, uint64_t a3)
{
  *double result = 0;
  result[1] = 0;
  unint64_t v3 = a2 + 1;
  int64x2_t v4 = (void *)*a2;
  if ((void *)*a2 != a2 + 1)
  {
    uint64_t v5 = result;
    uint64_t v6 = a3 + 32;
    double v7 = INFINITY;
    do
    {
      uint64_t v8 = (*(uint64_t (**)(void))(*(void *)v4[4] + 56))(v4[4]);
      sub_1000776C4(v19, v8);
      sub_100148A04((uint64_t)v19, v20);
      __n128 v9 = sub_1001AA12C((uint64_t)v23, (uint64_t)v20);
      uint64_t v10 = v22;
      if (v22 && !atomic_fetch_add(&v22->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *, __n128))v10->__on_zero_shared)(v10, v9);
        std::__shared_weak_count::__release_weak(v10);
        uint64_t v11 = v21;
        if (v21)
        {
LABEL_7:
          if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *, __n128))v11->__on_zero_shared)(v11, v9);
            std::__shared_weak_count::__release_weak(v11);
          }
        }
      }
      else
      {
        uint64_t v11 = v21;
        if (v21) {
          goto LABEL_7;
        }
      }
      nullsub_15(v20);
      sub_100074A24(v19);
      double v12 = sub_10014B1B4((uint64_t)v23, v6);
      if (v12 < v7)
      {
        uint64_t v14 = v4[4];
        uint64_t v13 = v4[5];
        if (v13) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v13 + 8), 1uLL, memory_order_relaxed);
        }
        double v15 = (std::__shared_weak_count *)v5[1];
        *uint64_t v5 = v14;
        v5[1] = v13;
        if (v15 && !atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
          std::__shared_weak_count::__release_weak(v15);
        }
        double v7 = v12;
      }
      double result = (void *)nullsub_15(v23);
      long long v16 = (void *)v4[1];
      if (v16)
      {
        do
        {
          double v17 = v16;
          long long v16 = (void *)*v16;
        }
        while (v16);
      }
      else
      {
        do
        {
          double v17 = (void *)v4[2];
          BOOL v18 = *v17 == (void)v4;
          int64x2_t v4 = v17;
        }
        while (!v18);
      }
      int64x2_t v4 = v17;
    }
    while (v17 != v3);
  }
  return result;
}

void sub_10014E8B8(_Unwind_Exception *a1)
{
  nullsub_15(v2 - 112);
  sub_1000BA884(v1);
  _Unwind_Resume(a1);
}

void sub_10014E8D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100148DD8(v10 - 176);
  sub_100074A24(&a9);
  sub_1000BA884(v9);
  _Unwind_Resume(a1);
}

void sub_10014E900(_Unwind_Exception *a1)
{
  sub_1000BA884(v1);
  _Unwind_Resume(a1);
}

void sub_10014E914(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  long long v16 = 0;
  uint64_t v17 = 0;
  double v15 = &v16;
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if (*a1 != v6)
  {
    do
    {
      unint64_t v7 = *(void *)(v5 + 56);
      uint64_t v8 = &v16;
      uint64_t v9 = &v16;
      if (v16)
      {
        uint64_t v10 = v16;
        while (1)
        {
          while (1)
          {
            uint64_t v9 = (uint64_t **)v10;
            unint64_t v11 = v10[4];
            if (v7 >= v11) {
              break;
            }
            uint64_t v10 = *v9;
            uint64_t v8 = v9;
            if (!*v9) {
              goto LABEL_12;
            }
          }
          if (v11 >= v7) {
            break;
          }
          uint64_t v10 = v9[1];
          if (!v10)
          {
            uint64_t v8 = v9 + 1;
            goto LABEL_12;
          }
        }
      }
      else
      {
LABEL_12:
        double v12 = (uint64_t *)operator new(0x30uLL);
        uint64_t v13 = v12;
        v12[4] = v7;
        uint64_t v14 = *(void *)(v5 + 64);
        v12[5] = v14;
        if (v14) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v14 + 8), 1uLL, memory_order_relaxed);
        }
        *double v12 = 0;
        v12[1] = 0;
        v12[2] = (uint64_t)v9;
        char *v8 = v12;
        if (*v15)
        {
          double v15 = (uint64_t **)*v15;
          uint64_t v13 = *v8;
        }
        sub_1000619B8(v16, v13);
        ++v17;
      }
      v5 += 80;
    }
    while (v5 != v6);
  }
  sub_10014E69C(a3, &v15, a2);
  sub_10014EAB8((uint64_t)&v15, v16);
}

void sub_10014EA54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, void *a11)
{
}

void sub_10014EA70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10014EAB8((uint64_t)va, v2);
  _Unwind_Resume(a1);
}

void sub_10014EA88(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

void sub_10014EAB8(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10014EAB8(a1, *a2);
    sub_10014EAB8(a1, a2[1]);
    int64x2_t v4 = (std::__shared_weak_count *)a2[5];
    if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      uint64_t v5 = a2;
    }
    else
    {
      uint64_t v5 = a2;
    }
    operator delete(v5);
  }
}

void sub_10014EB74()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10014EBEC()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_10014EC64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = operator new(0x28uLL);
  v2[1] = 0;
  void v2[2] = 0;
  *uint64_t v2 = off_100458CA0;
  uint64_t result = sub_1002C0DD0((uint64_t)(v2 + 3), 15);
  v2[3] = off_100458CF0;
  *a1 = result;
  a1[1] = (uint64_t)v2;
  return result;
}

void sub_10014ECD8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_10014ECF0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100458CA0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10014ED10(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100458CA0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10014ED64(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_10014ED90()
{
}

uint64_t sub_10014EDA4()
{
  return 5;
}

uint64_t sub_10014EDAC()
{
  return 2;
}

uint64_t sub_10014EDB4(uint64_t a1)
{
  return (*(unsigned int (**)(uint64_t))(*(void *)a1 + 48))(a1) | 0x100;
}

uint64_t sub_10014EDF0()
{
  return 0;
}

uint64_t sub_10014EDF8()
{
  return 0;
}

uint64_t sub_10014EE00()
{
  return 0;
}

uint64_t sub_10014EE08()
{
  return 1;
}

void sub_10014EE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5) {
    sub_10014F0C8();
  }
  sub_1000AE4B0(v6, "");
  sub_10014F22C("MultiphonePdrForceInit depends on truth, which is not available right now. Please use another motion model instead!", &__p);
  sub_10016A2C4((uint64_t)v6, (uint64_t)&__p, 1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v7 < 0) {
    operator delete(v6[0]);
  }
  sub_100149690((uint64_t)&v5);
}

void sub_10014EF18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10014EF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4) {
    operator new();
  }
  sub_1000AE4B0(v5, "");
  sub_10014AEE4("DirectionOfTravelFake/ParticleVenueForceInit depends on truth, which is not available right now. Please use another venue model instead!", &__p);
  sub_10016A2C4((uint64_t)v5, (uint64_t)&__p, 1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  sub_100149690((uint64_t)&v4);
}

void sub_10014F060(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10014F0C8()
{
}

void sub_10014F1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

std::string *sub_10014F22C@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10014F260(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10014F27C(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v9 = a2[1];
  uint64_t v16 = *a2;
  uint64_t v17 = (std::__shared_weak_count *)v9;
  if (v9) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v10 = (std::__shared_weak_count *)a6[1];
  uint64_t v14 = *a6;
  double v15 = v10;
  if (v10) {
    atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10002F844((uint64_t)a1, &v16, a3, 0, &v14);
  unint64_t v11 = v15;
  if (v15 && !atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
  double v12 = v17;
  if (v17 && !atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  *a1 = off_100458D70;
  a1[30] = a4;
  a1[31] = a5;
  return a1;
}

void sub_10014F3AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

void *sub_10014F3C8(void *a1)
{
  *a1 = off_100462D20;
  uint64_t v2 = (std::__shared_weak_count *)a1[29];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *a1 = off_100458C30;
    unint64_t v3 = (std::__shared_weak_count *)a1[8];
    if (!v3) {
      goto LABEL_5;
    }
  }
  else
  {
    *a1 = off_100458C30;
    unint64_t v3 = (std::__shared_weak_count *)a1[8];
    if (!v3)
    {
LABEL_5:
      sub_10002FCB0((uint64_t)(a1 + 1));
      return a1;
    }
  }
  if (atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_5;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  sub_10002FCB0((uint64_t)(a1 + 1));
  return a1;
}

void sub_10014F4FC(void *a1)
{
  *a1 = off_100462D20;
  uint64_t v2 = (std::__shared_weak_count *)a1[29];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *a1 = off_100458C30;
    unint64_t v3 = (std::__shared_weak_count *)a1[8];
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    *a1 = off_100458C30;
    unint64_t v3 = (std::__shared_weak_count *)a1[8];
    if (!v3) {
      goto LABEL_7;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
LABEL_7:
  sub_10002FCB0((uint64_t)(a1 + 1));

  operator delete();
}

uint64_t sub_10014F638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = *(void *)(a3 + 16);
  if (v21 < **(void **)(sub_100085D38(*(void *)(a1 + 240)) + 56) + 1000000000)
  {
    sub_1002900BC(*(void *)(a1 + 240));
    *(_OWORD *)(a2 + 16) = v20;
    sub_100290090(*(void *)(a1 + 240), &v21);
    *(void *)(a2 + 32) = v8;
    sub_1002900E4(*(void *)(a1 + 240), v21, &v16);
    (*(void (**)(long long *__return_ptr))(**(void **)(a1 + 248) + 16))(&v15);
    long long v14 = v15;
    if (*((void *)&v15 + 1)) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v15 + 1) + 8), 1uLL, memory_order_relaxed);
    }
    sub_10024A158(a2, &v14);
    uint64_t v9 = (std::__shared_weak_count *)*((void *)&v14 + 1);
    if (*((void *)&v14 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v14 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
    uint64_t v10 = (std::__shared_weak_count *)*((void *)&v15 + 1);
    if (*((void *)&v15 + 1)
      && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v15 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
    unint64_t v11 = v18;
    if (v18 && !atomic_fetch_add(&v18->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
    double v12 = v17;
    if (v17 && !atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
    nullsub_17(v19);
  }
  sub_1002753A8((double *)a2, 20.0);
  return sub_10025ECB8(a1, a2, a3, a4);
}

void sub_10014F87C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va3, a2);
  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v6 = va_arg(va2, void);
  uint64_t v8 = va_arg(va2, void);
  va_copy(va3, va2);
  uint64_t v9 = va_arg(va3, void);
  uint64_t v11 = va_arg(va3, void);
  uint64_t v12 = va_arg(va3, void);
  uint64_t v13 = va_arg(va3, void);
  sub_1000BA884((uint64_t)va);
  sub_1000BA884((uint64_t)va1);
  sub_10014F8D8((uint64_t)va2);
  nullsub_17(va3);
  _Unwind_Resume(a1);
}

void sub_10014F8B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  nullsub_17(va);
  _Unwind_Resume(a1);
}

void sub_10014F8C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  nullsub_17(va);
  _Unwind_Resume(a1);
}

uint64_t sub_10014F8D8(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 24);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = *(std::__shared_weak_count **)(a1 + 8);
    if (!v3) {
      return a1;
    }
  }
  else
  {
    uint64_t v3 = *(std::__shared_weak_count **)(a1 + 8);
    if (!v3) {
      return a1;
    }
  }
  if (atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_10014F9A8()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10014FA20()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10014FA98(uint64_t a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_10014FAC8@<X0>(void *a1@<X8>, double a2@<D0>)
{
  v14[1] = 0;
  v14[2] = 0;
  v14[0] = off_10045DA98;
  char v15 = 0;
  sub_100076484((uint64_t)v14, 0.0);
  sub_10007647C((uint64_t)v14, 0.0);
  v6.n128_u64[0] = (unint64_t)off_10045DAD8;
  uint64_t v10 = 0;
  char v11 = 0;
  uint64_t v12 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  v6.n128_u64[1] = (unint64_t)off_10045DA98;
  char v9 = 0;
  char v13 = 4;
  sub_100076494(&v6, (uint64_t)v14);
  sub_10007648C((uint64_t)&v6, 1.0);
  sub_1000764BC((uint64_t)&v6, 1);
  sub_1000764A8((uint64_t)&v6, a2 + -1.57079633);
  sub_100072C74((uint64_t)&unk_1003ED7E5, (uint64_t)&v6, a1);
  nullsub_16(&v6, v4);
  return nullsub_17(v14);
}

void sub_10014FBF8(_Unwind_Exception *a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
}

uint64_t sub_10014FC2C(double *a1)
{
  if (a1[8] <= 0.0)
  {
    sub_1000AE4B0(__p, "");
    sub_10016A2C4((uint64_t)__p, 0, 0);
    if (v9 < 0) {
      operator delete(__p[0]);
    }
    sub_1000D11E0((uint64_t)v7);
  }
  double v2 = sub_100072640(a1);
  double v4 = (v3 - v2) / a1[8];
  uint64_t v5 = llround(v4);
  if (vabdd_f64((double)v5, v4) >= 0.001)
  {
    sub_1000AE4B0(__p, "");
    sub_10016A2C4((uint64_t)__p, 0, 0);
    if (v9 < 0) {
      operator delete(__p[0]);
    }
    sub_1000D11E0((uint64_t)v7);
  }
  return v5;
}

void sub_10014FD44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10014FD64(double *a1)
{
  sub_100072640(a1);
  double v4 = (v2 - v3) / a1[8];
  uint64_t v5 = llround(v4);
  if (vabdd_f64((double)v5, v4) >= 0.001)
  {
    sub_1000AE4B0(__p, "");
    sub_10016A2C4((uint64_t)__p, 0, 0);
    if (v9 < 0) {
      operator delete(__p[0]);
    }
    sub_1000D11E0((uint64_t)&v7);
  }
  return v5;
}

void sub_10014FE1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10014FE38(double *a1@<X0>, uint64_t a2@<X8>)
{
  double v5 = *a1;
  double v4 = (std::__shared_weak_count *)*((void *)a1 + 1);
  double v7 = v5;
  if (!v4 || (uint64_t v8 = std::__shared_weak_count::lock(v4)) == 0) {
    sub_100150A28();
  }
  sub_10007314C(a2, (uint64_t)&v7, a1[12], a1[14]);
  __n128 v6 = v8;
  if (v8)
  {
    if (!atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_10014FEEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

std::string *sub_10014FF00@<X0>(std::string *result@<X0>, uint64_t a2@<X8>)
{
  double v2 = result;
  std::string::size_type v5 = result->__r_.__value_.__r.__words[0];
  std::string::size_type size = result->__r_.__value_.__l.__size_;
  uint64_t v6 = size - result->__r_.__value_.__r.__words[0];
  if (size == result->__r_.__value_.__r.__words[0])
  {
    if (result[3].__r_.__value_.__s.__data_[15] < 0)
    {
      uint64_t v27 = (void *)result[2].__r_.__value_.__r.__words[2];
      unint64_t v28 = result[3].__r_.__value_.__r.__words[0];
      return (std::string *)sub_1000559FC((unsigned char *)a2, v27, v28);
    }
    else
    {
      *(_OWORD *)a2 = *(_OWORD *)&result[2].__r_.__value_.__r.__words[2];
      *(void *)(a2 + 16) = result[3].__r_.__value_.__l.__size_;
    }
    return result;
  }
  uint64_t v7 = SHIDWORD(result[2].__r_.__value_.__r.__words[0]);
  uint64_t v8 = SLODWORD(result[2].__r_.__value_.__r.__words[1]);
  if ((int)v7 < (int)v8 && (result[3].__r_.__value_.__s.__data_[16] & 2) != 0)
  {
    v29[0] = &off_1004592A8;
    v29[1] = v7;
    v29[2] = v8;
    sub_100155B74((uint64_t)v29);
  }
  unint64_t v9 = 0xEEEEEEEEEEEEEEEFLL * (v6 >> 3);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  if (result[3].__r_.__value_.__s.__data_[15] < 0) {
    std::string::size_type v10 = result[3].__r_.__value_.__r.__words[0];
  }
  else {
    std::string::size_type v10 = result[3].__r_.__value_.__s.__data_[15];
  }
  if (v9 <= 1) {
    unint64_t v9 = 1;
  }
  char v11 = (std::string::size_type *)(v5 + 56);
  do
  {
    while (1)
    {
      if (*((char *)v11 - 25) < 0)
      {
        std::string::size_type v12 = *(v11 - 5) + v10;
        if (*((_DWORD *)v11 - 14) != -2) {
          goto LABEL_12;
        }
      }
      else
      {
        std::string::size_type v12 = *((unsigned __int8 *)v11 - 25) + v10;
        if (*((_DWORD *)v11 - 14) != -2) {
          goto LABEL_12;
        }
      }
      if (v12 <= *v11) {
        std::string::size_type v12 = *v11;
      }
LABEL_12:
      if (*((char *)v11 - 1) < 0) {
        break;
      }
      std::string::size_type v10 = *((unsigned __int8 *)v11 - 1) + v12;
      v11 += 15;
      if (!--v9) {
        goto LABEL_23;
      }
    }
    std::string::size_type v10 = *(v11 - 2) + v12;
    v11 += 15;
    --v9;
  }
  while (v9);
LABEL_23:
  std::string::reserve((std::string *)a2, v10);
  int v13 = v2[3].__r_.__value_.__s.__data_[15];
  if (v13 >= 0) {
    long long v14 = &v2[2].__r_.__value_.__s.__data_[16];
  }
  else {
    long long v14 = (const std::string::value_type *)v2[2].__r_.__value_.__r.__words[2];
  }
  if (v13 >= 0) {
    std::string::size_type v15 = v2[3].__r_.__value_.__s.__data_[15];
  }
  else {
    std::string::size_type v15 = v2[3].__r_.__value_.__r.__words[0];
  }
  uint64_t result = std::string::append((std::string *)a2, v14, v15);
  std::string::size_type v16 = v2->__r_.__value_.__r.__words[0];
  if (v2->__r_.__value_.__l.__size_ != v2->__r_.__value_.__r.__words[0])
  {
    uint64_t v17 = 0;
    unint64_t v18 = 0;
    while (1)
    {
      int v19 = *(char *)(v16 + v17 + 31);
      if (v19 >= 0) {
        long long v20 = (const std::string::value_type *)(v16 + v17 + 8);
      }
      else {
        long long v20 = *(const std::string::value_type **)(v16 + v17 + 8);
      }
      if (v19 >= 0) {
        std::string::size_type v21 = *(unsigned __int8 *)(v16 + v17 + 31);
      }
      else {
        std::string::size_type v21 = *(void *)(v16 + v17 + 16);
      }
      std::string::append((std::string *)a2, v20, v21);
      if (*(_DWORD *)(v16 + v17) != -2) {
        goto LABEL_43;
      }
      unint64_t v22 = *(void *)(v16 + v17 + 56);
      if ((*(char *)(a2 + 23) & 0x80000000) == 0) {
        break;
      }
      unint64_t v23 = *(void *)(a2 + 8);
      if (v22 > v23) {
        goto LABEL_42;
      }
LABEL_43:
      int v24 = *(char *)(v16 + v17 + 55);
      if (v24 >= 0) {
        double v25 = (const std::string::value_type *)(v16 + v17 + 32);
      }
      else {
        double v25 = *(const std::string::value_type **)(v16 + v17 + 32);
      }
      if (v24 >= 0) {
        std::string::size_type v26 = *(unsigned __int8 *)(v16 + v17 + 55);
      }
      else {
        std::string::size_type v26 = *(void *)(v16 + v17 + 40);
      }
      uint64_t result = std::string::append((std::string *)a2, v25, v26);
      ++v18;
      std::string::size_type v16 = v2->__r_.__value_.__r.__words[0];
      v17 += 120;
      if (v18 >= 0xEEEEEEEEEEEEEEEFLL
                * ((uint64_t)(v2->__r_.__value_.__l.__size_ - v2->__r_.__value_.__r.__words[0]) >> 3))
        goto LABEL_50;
    }
    unint64_t v23 = *(unsigned __int8 *)(a2 + 23);
    if (v22 <= v23) {
      goto LABEL_43;
    }
LABEL_42:
    std::string::append((std::string *)a2, v22 - v23, *(unsigned char *)(v16 + v17 + 72));
    goto LABEL_43;
  }
LABEL_50:
  v2[2].__r_.__value_.__s.__data_[12] = 1;
  return result;
}

void sub_1001501B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception a10)
{
}

void sub_1001501C8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001501E8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 184))
  {
    std::locale::~locale((std::locale *)(a1 + 192));
    *(unsigned char *)(a1 + 184) = 0;
  }
  *(void *)(a1 + 96) = off_100458DB8;
  if (*(unsigned char *)(a1 + 168)) {
    operator delete(*(void **)(a1 + 112));
  }
  *(_OWORD *)(a1 + 153) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  std::streambuf::~streambuf();
  if ((*(char *)(a1 + 87) & 0x80000000) == 0)
  {
    double v2 = *(void **)(a1 + 24);
    if (!v2) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  operator delete(*(void **)(a1 + 64));
  double v2 = *(void **)(a1 + 24);
  if (v2) {
LABEL_7:
  }
    operator delete(v2);
LABEL_8:
  double v3 = *(std::locale **)a1;
  if (*(void *)a1)
  {
    double v4 = *(std::locale **)(a1 + 8);
    std::string::size_type v5 = *(std::locale **)a1;
    if (v4 == v3)
    {
LABEL_22:
      *(void *)(a1 + 8) = v3;
      operator delete(v5);
      return a1;
    }
    while (1)
    {
      if (LOBYTE(v4[-4].__locale_))
      {
        std::locale::~locale(v4 - 3);
        LOBYTE(v4[-4].__locale_) = 0;
      }
      if (SHIBYTE(v4[-9].__locale_) < 0)
      {
        operator delete(v4[-11].__locale_);
        if (SHIBYTE(v4[-12].__locale_) < 0) {
LABEL_18:
        }
          operator delete(v4[-14].__locale_);
      }
      else if (SHIBYTE(v4[-12].__locale_) < 0)
      {
        goto LABEL_18;
      }
      v4 -= 15;
      if (v4 == v3)
      {
        std::string::size_type v5 = *(std::locale **)a1;
        goto LABEL_22;
      }
    }
  }
  return a1;
}

uint64_t sub_100150310(uint64_t a1)
{
  *(void *)a1 = off_100458DB8;
  if (*(unsigned char *)(a1 + 72)) {
    operator delete(*(void **)(a1 + 16));
  }
  *(_OWORD *)(a1 + 57) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;

  return std::streambuf::~streambuf();
}

void **sub_100150380(void **a1)
{
  double v2 = (std::locale *)*a1;
  if (*a1)
  {
    double v3 = (std::locale *)a1[1];
    double v4 = *a1;
    if (v3 == v2)
    {
LABEL_13:
      a1[1] = v2;
      operator delete(v4);
      return a1;
    }
    while (1)
    {
      if (LOBYTE(v3[-4].__locale_))
      {
        std::locale::~locale(v3 - 3);
        LOBYTE(v3[-4].__locale_) = 0;
      }
      if (SHIBYTE(v3[-9].__locale_) < 0)
      {
        operator delete(v3[-11].__locale_);
        if (SHIBYTE(v3[-12].__locale_) < 0) {
LABEL_11:
        }
          operator delete(v3[-14].__locale_);
      }
      else if (SHIBYTE(v3[-12].__locale_) < 0)
      {
        goto LABEL_11;
      }
      v3 -= 15;
      if (v3 == v2)
      {
        double v4 = *a1;
        goto LABEL_13;
      }
    }
  }
  return a1;
}

void sub_100150424(uint64_t a1)
{
  *(void *)a1 = off_100458DB8;
  if (*(unsigned char *)(a1 + 72)) {
    operator delete(*(void **)(a1 + 16));
  }
  *(_OWORD *)(a1 + 57) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  std::streambuf::~streambuf();

  operator delete();
}

double sub_1001504A8@<D0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  unint64_t v5 = a1[6];
  if (v5 && a1[8] < v5) {
    a1[8] = v5;
  }
  if ((a4 & 8) != 0)
  {
    uint64_t v6 = a1[3];
    if (v6)
    {
      if (a3)
      {
        if (a3 == 1)
        {
          if ((a4 & 0x10) != 0) {
            goto LABEL_29;
          }
          goto LABEL_21;
        }
        if (a3 != 2) {
          goto LABEL_29;
        }
        uint64_t v7 = a1 + 8;
      }
      else
      {
        uint64_t v7 = a1 + 2;
      }
      a2 = a2 - v6 + *v7;
LABEL_21:
      if (a1[2] <= (unint64_t)(v6 + a2) && (unint64_t)(v6 + a2) <= a1[8])
      {
        uint64_t v9 = v6 + (int)a2;
        a1[3] = v9;
        if ((a4 & 0x10) == 0 || !v5) {
          goto LABEL_27;
        }
        LODWORD(v9) = v9 - v5;
LABEL_26:
        a1[6] = v5 + (int)v9;
LABEL_27:
        uint64_t v8 = a2;
        goto LABEL_30;
      }
LABEL_29:
      uint64_t v8 = -1;
      goto LABEL_30;
    }
  }
  uint64_t v8 = -1;
  if ((a4 & 0x10) != 0 && v5)
  {
    if (!a3)
    {
      unint64_t v11 = a1[5];
      uint64_t v9 = v11 - v5 + a2;
      unint64_t v10 = v11 + a2;
      if (v11 > v11 + a2) {
        goto LABEL_29;
      }
      goto LABEL_17;
    }
    if (a3 == 2)
    {
      uint64_t v9 = a1[8] - v5 + a2;
      unint64_t v10 = a1[8] + a2;
      if (a1[5] > v10) {
        goto LABEL_29;
      }
LABEL_17:
      a2 = v9;
      if (v10 <= a1[8]) {
        goto LABEL_26;
      }
      goto LABEL_29;
    }
  }
LABEL_30:
  double result = 0.0;
  *(_OWORD *)(a5 + 96) = 0u;
  *(_OWORD *)(a5 + 112) = 0u;
  *(_OWORD *)(a5 + 64) = 0u;
  *(_OWORD *)(a5 + 80) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)(a5 + 48) = 0u;
  *(_OWORD *)a5 = 0u;
  *(_OWORD *)(a5 + 16) = 0u;
  *(void *)(a5 + 128) = v8;
  return result;
}

double sub_1001505C0@<D0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4 = *(void *)(a2 + 128);
  unint64_t v5 = a1[6];
  if (v5 && a1[8] < v5) {
    a1[8] = v5;
  }
  if (v4 == -1)
  {
LABEL_16:
    uint64_t v10 = -1;
    goto LABEL_17;
  }
  if ((a3 & 8) != 0)
  {
    uint64_t v6 = a1[3];
    if (v6)
    {
      if ((v4 & 0x8000000000000000) == 0)
      {
        uint64_t v7 = a1[2];
        if (v4 <= a1[8] - v7)
        {
          uint64_t v8 = v6 + (int)v4 - (int)v6 + (int)v7;
          a1[3] = v8;
          if ((a3 & 0x10) == 0 || !v5) {
            goto LABEL_20;
          }
          int v9 = v8 - v5;
LABEL_19:
          a1[6] = v5 + v9;
LABEL_20:
          uint64_t v10 = v4;
          goto LABEL_17;
        }
      }
      goto LABEL_16;
    }
  }
  uint64_t v10 = -1;
  if ((a3 & 0x10) != 0 && v5 && (v4 & 0x8000000000000000) == 0)
  {
    uint64_t v11 = a1[2];
    if (v4 <= a1[8] - v11)
    {
      int v9 = v4 - v5 + v11;
      goto LABEL_19;
    }
    goto LABEL_16;
  }
LABEL_17:
  double result = 0.0;
  *(_OWORD *)(a4 + 96) = 0u;
  *(_OWORD *)(a4 + 112) = 0u;
  *(_OWORD *)(a4 + 64) = 0u;
  *(_OWORD *)(a4 + 80) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)(a4 + 48) = 0u;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  *(void *)(a4 + 128) = v10;
  return result;
}

uint64_t sub_100150684(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 **)(a1 + 24);
  if (!v1) {
    return 0xFFFFFFFFLL;
  }
  if ((unint64_t)v1 < *(void *)(a1 + 32)) {
    return *v1;
  }
  if ((*(unsigned char *)(a1 + 76) & 8) == 0) {
    return 0xFFFFFFFFLL;
  }
  unint64_t v3 = *(void *)(a1 + 48);
  if (!v3) {
    return 0xFFFFFFFFLL;
  }
  unint64_t v4 = *(void *)(a1 + 64);
  if ((unint64_t)v1 >= v3 && (unint64_t)v1 >= v4) {
    return 0xFFFFFFFFLL;
  }
  if (v4 < v3)
  {
    *(void *)(a1 + 64) = v3;
    unint64_t v4 = v3;
  }
  *(void *)(a1 + 32) = v4;
  return *v1;
}

uint64_t sub_1001506E8(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 24);
  if (!v2 || *(void *)(a1 + 16) >= v2) {
    return 0xFFFFFFFFLL;
  }
  if (a2 != -1 && (*(_DWORD *)(a1 + 76) & 0x10) == 0)
  {
    int v4 = *(unsigned __int8 *)(v2 - 1);
    unint64_t v3 = (unsigned char *)(v2 - 1);
    if (v4 == a2)
    {
      *(void *)(a1 + 24) = v3;
      *unint64_t v3 = a2;
      return a2;
    }
    return 0xFFFFFFFFLL;
  }
  uint64_t v6 = (unsigned char *)(v2 - 1);
  *(void *)(a1 + 24) = v6;
  if (a2 == -1) {
    return 0;
  }
  *uint64_t v6 = a2;
  return a2;
}

uint64_t sub_100150754(uint64_t a1, uint64_t a2)
{
  if (a2 == -1) {
    return 0;
  }
  int v4 = *(unsigned char **)(a1 + 48);
  if (v4)
  {
    unint64_t v5 = *(void *)(a1 + 56);
    if ((unint64_t)v4 < v5)
    {
      *(void *)(a1 + 48) = v4 + 1;
      unsigned char *v4 = a2;
      return a2;
    }
    if ((*(unsigned char *)(a1 + 76) & 0x10) == 0) {
      return 0xFFFFFFFFLL;
    }
    uint64_t v8 = *(void **)(a1 + 16);
    size_t v7 = v5 - (void)v8;
  }
  else
  {
    if ((*(unsigned char *)(a1 + 76) & 0x10) == 0) {
      return 0xFFFFFFFFLL;
    }
    size_t v7 = 0;
    uint64_t v8 = *(void **)(a1 + 16);
  }
  unint64_t v9 = v7 >> 1;
  if (v7 >> 1 <= 0x100) {
    unint64_t v9 = 256;
  }
  while (__CFADD__(v9, v7))
  {
    BOOL v10 = v9 >= 2;
    v9 >>= 1;
    if (!v10)
    {
      uint64_t v11 = 0;
      size_t v12 = v7;
LABEL_18:
      memmove(v11, v8, v7);
      int v13 = 0;
      if (!*(unsigned char *)(a1 + 72)) {
        goto LABEL_20;
      }
LABEL_19:
      operator delete(v8);
      goto LABEL_20;
    }
  }
  size_t v12 = v9 + v7;
  uint64_t v11 = operator new(v9 + v7);
  if (v7) {
    goto LABEL_18;
  }
  int v13 = 1;
  if (*(unsigned char *)(a1 + 72)) {
    goto LABEL_19;
  }
LABEL_20:
  *(unsigned char *)(a1 + 72) = 1;
  if (v13)
  {
    long long v14 = &v11[v12];
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = v11;
    *(void *)(a1 + 56) = &v11[v12];
    *(void *)(a1 + 64) = v11;
    if ((*(unsigned char *)(a1 + 76) & 8) != 0)
    {
      *(void *)(a1 + 16) = v11;
      *(void *)(a1 + 24) = v11;
      *(void *)(a1 + 32) = v11 + 1;
      if (v11 == v14) {
        goto LABEL_23;
      }
    }
    else
    {
      *(void *)(a1 + 16) = v11;
      *(void *)(a1 + 24) = 0;
      *(void *)(a1 + 32) = v11;
      if (v11 == v14)
      {
LABEL_23:
        (*(void (**)(uint64_t, void))(*(void *)a1 + 104))(a1, a2);
        return a2;
      }
    }
  }
  else
  {
    std::string::size_type v15 = &v11[*(void *)(a1 + 64) - (void)v8];
    uint64_t v16 = *(void *)(a1 + 40);
    int v17 = *(_DWORD *)(a1 + 48) - v16;
    uint64_t v18 = v16 - (void)v8;
    uint64_t v20 = *(void *)(a1 + 16);
    uint64_t v19 = *(void *)(a1 + 24);
    std::string::size_type v21 = &v11[v18];
    unint64_t v22 = &v11[v12];
    *(void *)(a1 + 56) = &v11[v12];
    *(void *)(a1 + 64) = v15;
    unint64_t v23 = &v21[v17];
    *(void *)(a1 + 40) = v21;
    *(void *)(a1 + 48) = v23;
    if ((*(unsigned char *)(a1 + 76) & 8) != 0)
    {
      *(void *)(a1 + 16) = v11;
      *(void *)(a1 + 24) = &v11[(int)v19 - (int)v20];
      uint64_t v11 = &v21[v17];
      *(void *)(a1 + 32) = v23 + 1;
      if (v23 == v22) {
        goto LABEL_23;
      }
    }
    else
    {
      *(void *)(a1 + 16) = v11;
      *(void *)(a1 + 24) = 0;
      int v24 = v11;
      uint64_t v11 = &v21[v17];
      *(void *)(a1 + 32) = v24;
      if (v23 == v22) {
        goto LABEL_23;
      }
    }
  }
  *(void *)(a1 + 48) = v11 + 1;
  *uint64_t v11 = a2;
  return a2;
}

uint64_t sub_1001509B8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 88))
  {
    std::locale::~locale((std::locale *)(a1 + 96));
    *(unsigned char *)(a1 + 88) = 0;
  }
  if (*(char *)(a1 + 55) < 0)
  {
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
      return a1;
    }
  }
  else if ((*(char *)(a1 + 31) & 0x80000000) == 0)
  {
    return a1;
  }
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_100150A28()
{
  exception = __cxa_allocate_exception(8uLL);
}

uint64_t sub_100150A74(uint64_t a1, const char *a2)
{
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 45) = 0u;
  *(unsigned char *)(a1 + 88) = -1;
  std::streambuf::basic_streambuf();
  *(void *)(a1 + 96) = off_100458DB8;
  *(void *)(a1 + 160) = 0;
  *(unsigned char *)(a1 + 168) = 0;
  *(_DWORD *)(a1 + 172) = 24;
  *(unsigned char *)(a1 + 184) = 0;
  if (!a2) {
    return a1;
  }
  size_t v4 = strlen(a2);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  std::string::size_type v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    p_dst = (std::string *)operator new(v7 + 1);
    __dst.__r_.__value_.__l.__size_ = v5;
    __dst.__r_.__value_.__r.__words[2] = v8 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    goto LABEL_9;
  }
  *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v4;
  p_dst = &__dst;
  if (v4) {
LABEL_9:
  }
    memcpy(p_dst, a2, v5);
  p_dst->__r_.__value_.__s.__data_[v5] = 0;
  sub_100150C40(a1, &__dst);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_100150BBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(unsigned char *)(v15 + 184))
  {
    std::locale::~locale((std::locale *)(v15 + 192));
    *(unsigned char *)(v15 + 184) = 0;
  }
  sub_100150310(v16);
  if (*(char *)(v15 + 87) < 0)
  {
    operator delete(*v17);
    uint64_t v19 = *(void **)(v15 + 24);
    if (!v19)
    {
LABEL_7:
      sub_100150380((void **)v15);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    uint64_t v19 = *(void **)(v15 + 24);
    if (!v19) {
      goto LABEL_7;
    }
  }
  operator delete(v19);
  sub_100150380((void **)v15);
  _Unwind_Resume(a1);
}

uint64_t sub_100150C40(uint64_t a1, const std::string *a2)
{
  if (*(unsigned char *)(a1 + 184)) {
    std::locale::locale(&v47, (const std::locale *)(a1 + 192));
  }
  else {
    std::locale::locale(&v47);
  }
  size_t v4 = (std::locale::facet *)std::locale::use_facet(&v47, &std::ctype<char>::id);
  std::locale::~locale(&v47);
  char v5 = ((uint64_t (*)(std::locale::facet *, uint64_t))v4->__vftable[2].~facet_0)(v4, 37);
  int v6 = sub_1001511F0(a2, v5, (uint64_t)v4, *(unsigned char *)(a1 + 88));
  sub_10015138C((char **)a1, v6);
  uint64_t v46 = 0;
  std::string::size_type v7 = std::string::find(a2, v5, 0);
  if (v7 == -1)
  {
    std::string::size_type v10 = 0;
    int v45 = 0;
    int v44 = -1;
    char v42 = 0;
    char v43 = 1;
    goto LABEL_43;
  }
  std::string::size_type v8 = v7;
  int v9 = 0;
  std::string::size_type v10 = 0;
  int v45 = 0;
  int v44 = -1;
  char v42 = 0;
  char v43 = 1;
  do
  {
    uint64_t v11 = (std::string *)(a1 + 64);
    if (v9) {
      uint64_t v11 = (std::string *)(*(void *)a1 + 120 * v9 - 88);
    }
    std::string::size_type v12 = v8 + 1;
    std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
    long long v14 = (char *)a2->__r_.__value_.__r.__words[0];
    if ((size & 0x80u) == 0) {
      long long v14 = (char *)a2;
    }
    if (v14[v12] == v14[v8])
    {
      sub_100152CCC(v11, (unint64_t)&v14[v10], &v14[v12]);
      std::string::size_type v10 = v8 + 2;
      uint64_t v15 = (unsigned __int8 *)(v8 + 2);
      goto LABEL_7;
    }
    if (v8 != v10)
    {
      sub_100152CCC(v11, (unint64_t)&v14[v10], &v14[v8]);
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
    }
    if ((size & 0x80) != 0)
    {
      uint64_t v16 = (const std::string *)a2->__r_.__value_.__r.__words[0];
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      uint64_t v16 = a2;
    }
    uint64_t v46 = (const std::string *)((char *)v16 + v12);
    v47.__locale_ = (std::locale::__imp *)((char *)v16 + size);
    int v17 = sub_1001516A8((unsigned __int8 **)&v46, (char **)&v47, *(void *)a1 + 120 * v9, v4, (unsigned __int8 *)(v8 + 1), *(unsigned __int8 *)(a1 + 88));
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v18 = (std::string::size_type)a2;
    }
    else {
      std::string::size_type v18 = a2->__r_.__value_.__r.__words[0];
    }
    uint64_t v15 = (unsigned __int8 *)v46 - v18;
    if (!v17)
    {
      std::string::size_type v10 = v8;
      goto LABEL_7;
    }
    uint64_t v19 = *(char **)a1;
    uint64_t v20 = (_DWORD *)(*(void *)a1 + 120 * v9);
    std::string::size_type v21 = v20 + 28;
    unsigned int v22 = v20[28];
    if ((v22 & 1) == 0) {
      goto LABEL_26;
    }
    unint64_t v23 = &v19[120 * v9];
    int v26 = *((_DWORD *)v23 + 19);
    int v24 = (unsigned int *)(v23 + 76);
    int v25 = v26;
    if ((v26 & 0x20) == 0)
    {
      v22 &= ~2u;
      unsigned int *v21 = v22;
      v19[120 * v9 + 72] = 48;
      *int v24 = v25 & 0xFFFFFF4F | 0x10;
LABEL_26:
      if ((v22 & 2) != 0) {
        goto LABEL_27;
      }
      goto LABEL_30;
    }
    v22 &= ~1u;
    unsigned int *v21 = v22;
    if ((v22 & 2) != 0)
    {
LABEL_27:
      if ((v19[120 * v9 + 77] & 8) != 0) {
        unsigned int *v21 = v22 & 0xFFFFFFFD;
      }
    }
LABEL_30:
    int v27 = *v20;
    if (v27 != -3)
    {
      if (v27 == -1)
      {
        char v43 = 0;
        int v28 = v45;
      }
      else
      {
        int v28 = v45;
        if (v27 == -2)
        {
          char v42 = 1;
        }
        else
        {
          int v29 = v44;
          if (v27 > v44) {
            int v29 = v27;
          }
          int v44 = v29;
        }
      }
      int v45 = v28 + 1;
      ++v9;
    }
    std::string::size_type v10 = (std::string::size_type)v15;
LABEL_7:
    std::string::size_type v8 = std::string::find(a2, v5, (std::string::size_type)v15);
  }
  while (v8 != -1);
  if (v9)
  {
    double v30 = (std::string *)(*(void *)a1 + 120 * v9 - 88);
    goto LABEL_44;
  }
LABEL_43:
  double v30 = (std::string *)(a1 + 64);
LABEL_44:
  std::string::size_type v31 = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  BOOL v32 = (v31 & 0x80u) != 0;
  if ((v31 & 0x80u) != 0) {
    std::string::size_type v31 = a2->__r_.__value_.__l.__size_;
  }
  if (v32) {
    double v33 = (char *)a2->__r_.__value_.__r.__words[0];
  }
  else {
    double v33 = (char *)a2;
  }
  sub_100152CCC(v30, (unint64_t)&v33[v10], &v33[v31]);
  if ((v43 & 1) == 0)
  {
    if (v44 & 0x80000000) == 0 && (*(unsigned char *)(a1 + 88))
    {
      v47.__locale_ = (std::locale::__imp *)&off_100458F40;
      v48[0] = (void *)v44;
      v48[1] = 0;
      sub_1001524D4((uint64_t)&v47);
    }
    if (v45 < 1)
    {
      int v34 = 0;
    }
    else
    {
      int v34 = 0;
      uint64_t v35 = *(char **)a1;
      uint64_t v36 = v45;
      do
      {
        if (*(_DWORD *)v35 == -1) {
          *(_DWORD *)uint64_t v35 = v34++;
        }
        v35 += 120;
        --v36;
      }
      while (v36);
    }
    int v44 = v34 - 1;
  }
  char v37 = ((uint64_t (*)(std::locale::facet *, uint64_t))v4->__vftable[2].~facet_0)(v4, 32);
  LODWORD(v47.__locale_) = -1;
  char v56 = 0;
  *(_OWORD *)unsigned int v48 = 0u;
  *(_OWORD *)std::string __p = 0u;
  long long v50 = 0u;
  uint64_t v51 = 0;
  uint64_t v52 = 6;
  char v53 = v37;
  int v55 = 0;
  uint64_t v54 = 4098;
  v57[1].__locale_ = (std::locale::__imp *)0x7FFFFFFFFFFFFFFFLL;
  int v58 = 0;
  uint64_t v38 = *(void *)(a1 + 8);
  unint64_t v39 = 0xEEEEEEEEEEEEEEEFLL * ((v38 - *(void *)a1) >> 3);
  if (v45 > v39)
  {
    sub_100153860((void **)a1, v45 - v39, (uint64_t)&v47);
    goto LABEL_72;
  }
  if (v45 < v39)
  {
    uint64_t v40 = *(void *)a1 + 120 * v45;
    while (1)
    {
      if (v38 == v40)
      {
        *(void *)(a1 + 8) = v40;
        break;
      }
      if (*(unsigned char *)(v38 - 32))
      {
        std::locale::~locale((std::locale *)(v38 - 24));
        *(unsigned char *)(v38 - 32) = 0;
      }
      if (*(char *)(v38 - 65) < 0)
      {
        operator delete(*(void **)(v38 - 88));
        if ((*(char *)(v38 - 89) & 0x80000000) == 0) {
          goto LABEL_64;
        }
      }
      else if ((*(char *)(v38 - 89) & 0x80000000) == 0)
      {
        goto LABEL_64;
      }
      operator delete(*(void **)(v38 - 112));
LABEL_64:
      v38 -= 120;
    }
  }
LABEL_72:
  if (v56)
  {
    std::locale::~locale(v57);
    char v56 = 0;
  }
  if ((SHIBYTE(v50) & 0x80000000) == 0)
  {
    if ((SHIBYTE(__p[0]) & 0x80000000) == 0) {
      goto LABEL_76;
    }
LABEL_80:
    operator delete(v48[0]);
    if ((v42 & 1) == 0) {
      goto LABEL_78;
    }
LABEL_77:
    *(_DWORD *)(a1 + 48) |= 4u;
    goto LABEL_78;
  }
  operator delete(__p[1]);
  if (SHIBYTE(__p[0]) < 0) {
    goto LABEL_80;
  }
LABEL_76:
  if (v42) {
    goto LABEL_77;
  }
LABEL_78:
  *(_DWORD *)(a1 + 56) = v44 + 1;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a1 + 48) & 0xFFFFFFFE | v43 & 1;
  return a1;
}

void sub_1001511B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::exception a14)
{
}

void sub_1001511C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1001509B8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001511D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::locale a14)
{
}

uint64_t sub_1001511F0(const std::string *a1, unsigned __int8 a2, uint64_t a3, char a4)
{
  std::string::size_type v8 = std::string::find(a1, a2, 0);
  if (v8 == -1) {
    return 0;
  }
  uint64_t v9 = 0;
  while (1)
  {
    std::string::size_type v10 = v8 + 1;
    std::string::size_type size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
    std::string::size_type v12 = (size & 0x80u) == 0 ? HIBYTE(a1->__r_.__value_.__r.__words[2]) : a1->__r_.__value_.__l.__size_;
    if (v10 >= v12) {
      break;
    }
    int v13 = (const std::string *)a1->__r_.__value_.__r.__words[0];
    if ((size & 0x80u) == 0) {
      std::string::size_type v14 = (std::string::size_type)a1;
    }
    else {
      std::string::size_type v14 = a1->__r_.__value_.__r.__words[0];
    }
    int v15 = *(unsigned __int8 *)(v14 + v10);
    if ((size & 0x80) != 0)
    {
      std::string::size_type size = a1->__r_.__value_.__l.__size_;
      if (v15 == v13->__r_.__value_.__s.__data_[v8]) {
        goto LABEL_3;
      }
LABEL_15:
      uint64_t v16 = (unsigned __int8 *)v13 + v10;
      if (v10 != size)
      {
        int v17 = (unsigned __int8 *)v13 + size;
        std::string::size_type v18 = ~v8 + size;
        while (((char)*v16 & 0x80000000) == 0 && (*(_DWORD *)(*(void *)(a3 + 16) + 4 * *v16) & 0x400) != 0)
        {
          ++v16;
          if (!--v18)
          {
            uint64_t v16 = v17;
            break;
          }
        }
      }
      std::string::size_type v19 = (std::string::size_type)&v16[-v14];
      if ((unint64_t)&v16[-v14] < v12 && *v16 == a2) {
        ++v19;
      }
      uint64_t v9 = (v9 + 1);
      std::string::size_type v8 = std::string::find(a1, a2, v19);
      if (v8 == -1) {
        return v9;
      }
    }
    else
    {
      int v13 = a1;
      if (v15 != a1->__r_.__value_.__s.__data_[v8]) {
        goto LABEL_15;
      }
LABEL_3:
      std::string::size_type v8 = std::string::find(a1, a2, v8 + 2);
      if (v8 == -1) {
        return v9;
      }
    }
  }
  if (a4)
  {
    v21[0] = &off_100458F40;
    v21[1] = v8;
    v21[2] = v12;
    sub_1001524D4((uint64_t)v21);
  }
  return (v9 + 1);
}

void sub_100151378(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception a10)
{
}

void sub_10015138C(char **a1, unint64_t a2)
{
  if (*((unsigned char *)a1 + 184)) {
    std::locale::locale(&v12, (const std::locale *)a1 + 24);
  }
  else {
    std::locale::locale(&v12);
  }
  size_t v4 = std::locale::use_facet(&v12, &std::ctype<char>::id);
  char v5 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v4->__vftable[2].~facet_0)(v4, 32);
  std::locale::~locale(&v12);
  uint64_t v6 = a1[1] - *a1;
  if (!v6)
  {
    LODWORD(v12.__locale_) = -1;
    char v21 = 0;
    *(_OWORD *)int v13 = 0u;
    *(_OWORD *)std::string __p = 0u;
    long long v15 = 0u;
    uint64_t v16 = 0;
    uint64_t v17 = 6;
    char v18 = v5;
    int v20 = 0;
    uint64_t v19 = 4098;
    uint64_t v23 = 0x7FFFFFFFFFFFFFFFLL;
    int v24 = 0;
    sub_100152534((void **)a1, a2, (uint64_t)&v12);
    if (v21)
    {
      std::locale::~locale(&v22);
      char v21 = 0;
    }
    if (SHIBYTE(v15) < 0)
    {
      operator delete(__p[1]);
      if ((SHIBYTE(__p[0]) & 0x80000000) == 0) {
        goto LABEL_22;
      }
    }
    else if ((SHIBYTE(__p[0]) & 0x80000000) == 0)
    {
      goto LABEL_22;
    }
    operator delete(v13[0]);
    goto LABEL_22;
  }
  unint64_t v7 = 0xEEEEEEEEEEEEEEEFLL * (v6 >> 3);
  if (a2 <= v7)
  {
    sub_100152858((uint64_t)(a1 + 3), 0, 0);
    if (!a2) {
      goto LABEL_22;
    }
    goto LABEL_17;
  }
  LODWORD(v12.__locale_) = -1;
  char v21 = 0;
  *(_OWORD *)int v13 = 0u;
  *(_OWORD *)std::string __p = 0u;
  long long v15 = 0u;
  uint64_t v16 = 0;
  uint64_t v17 = 6;
  char v18 = v5;
  int v20 = 0;
  uint64_t v19 = 4098;
  uint64_t v23 = 0x7FFFFFFFFFFFFFFFLL;
  int v24 = 0;
  sub_100153860((void **)a1, a2 - v7, (uint64_t)&v12);
  if (v21)
  {
    std::locale::~locale(&v22);
    char v21 = 0;
  }
  if (SHIBYTE(v15) < 0)
  {
    operator delete(__p[1]);
    if ((SHIBYTE(__p[0]) & 0x80000000) == 0) {
      goto LABEL_10;
    }
LABEL_24:
    operator delete(v13[0]);
    goto LABEL_10;
  }
  if (SHIBYTE(__p[0]) < 0) {
    goto LABEL_24;
  }
LABEL_10:
  sub_100152858((uint64_t)(a1 + 3), 0, 0);
LABEL_17:
  uint64_t v8 = 0;
  do
  {
    uint64_t v9 = *a1;
    std::string::size_type v10 = &(*a1)[v8];
    *(_DWORD *)std::string::size_type v10 = -1;
    *((void *)v10 + 13) = 0x7FFFFFFFFFFFFFFFLL;
    *((_DWORD *)v10 + 28) = 0;
    std::string::resize((std::string *)(v10 + 8), 0, 0);
    std::string::resize((std::string *)(v10 + 32), 0, 0);
    uint64_t v11 = &v9[v8];
    *(_OWORD *)(v11 + 56) = xmmword_1003EDA40;
    v11[72] = v5;
    *((_DWORD *)v11 + 21) = 0;
    *(void *)(v11 + 76) = 4098;
    v8 += 120;
    --a2;
  }
  while (a2);
LABEL_22:
  std::string::resize((std::string *)(a1 + 8), 0, 0);
}

void sub_100151668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1001509B8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10015167C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1001509B8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100151690(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::locale a11)
{
}

uint64_t sub_1001516A8(unsigned __int8 **a1, char **a2, uint64_t a3, void *a4, unsigned __int8 *a5, uint64_t a6)
{
  *(_DWORD *)a3 = -1;
  uint64_t v8 = *a1;
  uint64_t v9 = (uint64_t)&a5[*a2 - (char *)*a1];
  if (*a2 <= (char *)*a1)
  {
    if (a6)
    {
      int v58 = &off_100458F40;
      unsigned int v59 = a5;
      uint64_t v60 = v9;
      sub_1001524D4((uint64_t)&v58);
    }
    return 0;
  }
  int v14 = *v8;
  unsigned __int8 v15 = (*(uint64_t (**)(void *, uint64_t))(*a4 + 56))(a4, 124);
  uint64_t v16 = *a1;
  if (v14 == v15)
  {
    *a1 = ++v16;
    if (v16 >= (unsigned __int8 *)*a2)
    {
      if (a6)
      {
        int v58 = &off_100458F40;
        unsigned int v59 = &v16[a5 - v8];
        uint64_t v60 = v9;
        sub_1001524D4((uint64_t)&v58);
      }
      return 0;
    }
  }
  unsigned __int8 v56 = v15;
  int v57 = v14;
  int v17 = *v16;
  unsigned __int8 v18 = (*(uint64_t (**)(void *, uint64_t))(*a4 + 56))(a4, 48);
  uint64_t v19 = *a1;
  if (v17 == v18 || (char)*v19 < 0 || (*(_DWORD *)(a4[2] + 4 * *v19) & 0x400) == 0) {
    goto LABEL_29;
  }
  uint64_t v55 = v9;
  if (*a2 == (char *)v19)
  {
    int v20 = 0;
  }
  else
  {
    int v20 = 0;
    do
    {
      if ((char)*v19 < 0) {
        break;
      }
      uint64_t v21 = *v19;
      if ((*(_DWORD *)(a4[2] + 4 * v21) & 0x400) == 0) {
        break;
      }
      int v20 = (*(uint64_t (**)(void *, void, void))(*a4 + 72))(a4, (char)v21, 0)
          + 10 * v20
          - 48;
      ++v19;
    }
    while (v19 != (unsigned __int8 *)*a2);
  }
  *a1 = v19;
  if (v19 >= (unsigned __int8 *)*a2)
  {
    if (a6)
    {
      int v58 = &off_100458F40;
      unsigned int v59 = &v19[a5 - v8];
      uint64_t v60 = v55;
      sub_1001524D4((uint64_t)&v58);
    }
    return 0;
  }
  int v23 = *v19;
  if (v23 == (*(unsigned __int8 (**)(void *, uint64_t))(*a4 + 56))(a4, 37))
  {
    *(_DWORD *)a3 = v20 - 1;
    uint64_t v24 = (uint64_t)(*a1 + 1);
    *a1 = (unsigned __int8 *)v24;
    if (v57 == v56)
    {
      uint64_t v25 = a5 - v8 + v24;
      uint64_t v26 = a6;
      uint64_t v27 = v55;
      goto LABEL_79;
    }
    return 1;
  }
  int v28 = **a1;
  if (v28 == (*(unsigned __int8 (**)(void *, uint64_t))(*a4 + 56))(a4, 36))
  {
    *(_DWORD *)a3 = v20 - 1;
    uint64_t v19 = *a1 + 1;
    *a1 = v19;
    uint64_t v9 = v55;
LABEL_29:
    while (2)
    {
      if (v19 == (unsigned __int8 *)*a2)
      {
        if (a6)
        {
          int v58 = &off_100458F40;
          unsigned int v59 = &v19[a5 - v8];
          uint64_t v60 = v9;
          sub_1001524D4((uint64_t)&v58);
        }
        return 1;
      }
      switch((*(unsigned int (**)(void *, void, void))(*a4 + 72))(a4, (char)*v19, 0))
      {
        case ' ':
          *(_DWORD *)(a3 + 112) |= 2u;
          goto LABEL_28;
        case '#':
          int v29 = *(_DWORD *)(a3 + 76) | 0x600;
          goto LABEL_27;
        case '\'':
          goto LABEL_28;
        case '+':
          int v29 = *(_DWORD *)(a3 + 76) | 0x800;
          goto LABEL_27;
        case '-':
          int v29 = *(_DWORD *)(a3 + 76) | 0x20;
          goto LABEL_27;
        case '0':
          *(_DWORD *)(a3 + 112) |= 1u;
          goto LABEL_28;
        case '=':
          *(_DWORD *)(a3 + 112) |= 4u;
          goto LABEL_28;
        case '_':
          int v29 = *(_DWORD *)(a3 + 76) | 0x10;
LABEL_27:
          *(_DWORD *)(a3 + 76) = v29;
LABEL_28:
          uint64_t v19 = *a1 + 1;
          *a1 = v19;
          continue;
        default:
          int v30 = **a1;
          unsigned __int8 v31 = (*(uint64_t (**)(void *, uint64_t))(*a4 + 56))(a4, 42);
          BOOL v32 = *a1;
          if (v30 == v31)
          {
            ++v32;
LABEL_41:
            *a1 = v32;
            goto LABEL_51;
          }
          if (v32 != (unsigned __int8 *)*a2
            && ((char)*v32 & 0x80000000) == 0
            && (*(_DWORD *)(a4[2] + 4 * *v32) & 0x400) != 0)
          {
            *(void *)(a3 + 56) = 0;
            do
            {
              if ((char)*v32 < 0) {
                break;
              }
              uint64_t v33 = *v32;
              if ((*(_DWORD *)(a4[2] + 4 * v33) & 0x400) == 0) {
                break;
              }
              *(void *)(a3 + 56) = 10 * *(void *)(a3 + 56)
                                   + (*(int (**)(void *, void, void))(*a4 + 72))(a4, (char)v33, 0)- 48;
              ++v32;
            }
            while (v32 != (unsigned __int8 *)*a2);
            goto LABEL_41;
          }
          break;
      }
      goto LABEL_51;
    }
  }
  *(void *)(a3 + 56) = v20;
  *(_DWORD *)a3 = -1;
  BOOL v32 = *a1;
  uint64_t v9 = v55;
LABEL_51:
  if (v32 >= (unsigned __int8 *)*a2)
  {
    if (a6)
    {
      int v58 = &off_100458F40;
      unsigned int v59 = &v32[a5 - v8];
      uint64_t v60 = v9;
      sub_1001524D4((uint64_t)&v58);
    }
    return 1;
  }
  int v34 = *v32;
  unsigned __int8 v35 = (*(uint64_t (**)(void *, uint64_t))(*a4 + 56))(a4, 46);
  uint64_t v36 = *a1;
  if (v34 != v35)
  {
    int v39 = 0;
    if (v36 == (unsigned __int8 *)*a2)
    {
LABEL_96:
      if (a6)
      {
        int v58 = &off_100458F40;
        unsigned int v59 = &v36[a5 - v8];
        uint64_t v60 = v9;
        sub_1001524D4((uint64_t)&v58);
      }
      return 1;
    }
    goto LABEL_65;
  }
  *a1 = ++v36;
  if (v36 == (unsigned __int8 *)*a2) {
    goto LABEL_64;
  }
  int v37 = *v36;
  unsigned __int8 v38 = (*(uint64_t (**)(void *, uint64_t))(*a4 + 56))(a4, 42);
  uint64_t v36 = *a1;
  if (v37 == v38)
  {
    int v39 = 0;
    *a1 = ++v36;
    if (v36 == (unsigned __int8 *)*a2) {
      goto LABEL_96;
    }
    goto LABEL_65;
  }
  if (v36 == (unsigned __int8 *)*a2 || (char)*v36 < 0 || (*(_DWORD *)(a4[2] + 4 * *v36) & 0x400) == 0)
  {
LABEL_64:
    int v39 = 0;
    *(void *)(a3 + 64) = 0;
    if (v36 == (unsigned __int8 *)*a2) {
      goto LABEL_96;
    }
  }
  else
  {
    uint64_t v36 = sub_100152FEC(a1, a2, (void *)(a3 + 64), a4);
    *a1 = v36;
    int v39 = 1;
    if (v36 == (unsigned __int8 *)*a2) {
      goto LABEL_96;
    }
  }
LABEL_65:
  int v40 = 0;
  while (2)
  {
    switch((*(unsigned int (**)(void *, void, void))(*a4 + 72))(a4, (char)*v36, 0))
    {
      case '2':
        if (v40 == 51) {
          goto LABEL_72;
        }
        goto LABEL_77;
      case '3':
        if (v40 != 73) {
          goto LABEL_77;
        }
        int v40 = 51;
        goto LABEL_67;
      case '4':
        if (v40 != 54) {
          goto LABEL_77;
        }
LABEL_72:
        int v40 = 0;
        goto LABEL_67;
      case '6':
        if (v40 == 73)
        {
          int v40 = 54;
LABEL_67:
          uint64_t v36 = *a1 + 1;
          *a1 = v36;
          if (v36 == (unsigned __int8 *)*a2) {
            goto LABEL_96;
          }
          continue;
        }
LABEL_77:
        int v41 = *a1;
LABEL_78:
        uint64_t v25 = (uint64_t)&v41[a5 - v8];
        uint64_t v26 = a6;
        uint64_t v27 = v9;
LABEL_79:
        sub_100152F80(v26, v25, v27);
        return 1;
      case 'I':
        int v40 = 73;
        goto LABEL_67;
      case 'L':
      case 'h':
      case 'j':
      case 'l':
      case 'w':
      case 'z':
        goto LABEL_67;
      default:
        uint64_t v36 = *a1;
        BOOL v42 = v40 == 73 || v40 == 0;
        int v43 = !v42;
        if (v36 >= (unsigned __int8 *)*a2 || v43 != 0) {
          goto LABEL_96;
        }
        int v45 = v57;
        if (v57 == v56)
        {
          int v46 = *v36;
          unsigned __int8 v47 = (*(uint64_t (**)(void *, uint64_t))(*a4 + 56))(a4, 124);
          uint64_t v36 = *a1;
          BOOL v42 = v46 == v47;
          int v45 = v57;
          if (v42)
          {
            *a1 = v36 + 1;
            return 1;
          }
        }
        switch((*(unsigned int (**)(void *, void, void))(*a4 + 72))(a4, (char)*v36, 0))
        {
          case 'A':
            int v50 = *(_DWORD *)(a3 + 76) | 0x4000;
            *(_DWORD *)(a3 + 76) = v50;
            goto LABEL_117;
          case 'C':
          case 'c':
            *(void *)(a3 + 104) = 1;
            goto LABEL_123;
          case 'E':
            int v51 = *(_DWORD *)(a3 + 76) | 0x4000;
            *(_DWORD *)(a3 + 76) = v51;
            goto LABEL_120;
          case 'F':
            int v52 = *(_DWORD *)(a3 + 76) | 0x4000;
            *(_DWORD *)(a3 + 76) = v52;
            unsigned int v49 = v52 | 4;
            goto LABEL_121;
          case 'G':
            *(_DWORD *)(a3 + 76) |= 0x4000u;
            goto LABEL_123;
          case 'S':
          case 's':
            if (v39) {
              *(void *)(a3 + 104) = *(void *)(a3 + 64);
            }
            *(void *)(a3 + 64) = 6;
            goto LABEL_122;
          case 'T':
            unsigned int v48 = *a1 + 1;
            *a1 = v48;
            if (v48 >= (unsigned __int8 *)*a2)
            {
              sub_100152F80(a6, (uint64_t)&v48[a5 - v8], v9);
              return 0;
            }
            *(unsigned char *)(a3 + 72) = *v48;
            *(_DWORD *)(a3 + 112) |= 8u;
            *(_DWORD *)a3 = -2;
LABEL_122:
            int v45 = v57;
LABEL_123:
            int v41 = *a1 + 1;
            *a1 = v41;
            if (v45 != v56) {
              return 1;
            }
            if (v41 != (unsigned __int8 *)*a2)
            {
              int v53 = *v41;
              unsigned __int8 v54 = (*(uint64_t (**)(void *, uint64_t))(*a4 + 56))(a4, 124);
              int v41 = *a1;
              if (v53 == v54)
              {
                *a1 = v41 + 1;
                return 1;
              }
            }
            break;
          case 'X':
            *(_DWORD *)(a3 + 76) |= 0x4000u;
            goto LABEL_109;
          case 'a':
            int v50 = *(_DWORD *)(a3 + 76);
LABEL_117:
            unsigned int v49 = v50 & 0xFFFFFEB1 | 0x104;
            goto LABEL_121;
          case 'b':
            *(_DWORD *)(a3 + 76) |= 1u;
            goto LABEL_123;
          case 'd':
          case 'g':
          case 'i':
          case 'u':
            goto LABEL_123;
          case 'e':
            int v51 = *(_DWORD *)(a3 + 76);
LABEL_120:
            unsigned int v49 = v51 | 0x100;
            goto LABEL_121;
          case 'f':
            unsigned int v49 = *(_DWORD *)(a3 + 76) | 4;
LABEL_121:
            *(_DWORD *)(a3 + 76) = v49;
            goto LABEL_122;
          case 'n':
            *(_DWORD *)a3 = -3;
            goto LABEL_123;
          case 'o':
            *(_DWORD *)(a3 + 76) = *(_DWORD *)(a3 + 76) & 0xFFFFFFB5 | 0x40;
            goto LABEL_123;
          case 'p':
          case 'x':
LABEL_109:
            *(_DWORD *)(a3 + 76) = *(_DWORD *)(a3 + 76) & 0xFFFFFFB5 | 8;
            goto LABEL_123;
          case 't':
            *(unsigned char *)(a3 + 72) = (*(uint64_t (**)(void *, uint64_t))(*a4 + 56))(a4, 32);
            *(_DWORD *)(a3 + 112) |= 8u;
            *(_DWORD *)a3 = -2;
            goto LABEL_123;
          default:
            sub_100152F80(a6, (uint64_t)&(*a1)[a5 - v8], v9);
            goto LABEL_123;
        }
        goto LABEL_78;
    }
  }
}

void sub_100152158(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::exception a12)
{
}

void sub_10015216C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::exception a12)
{
}

void sub_100152180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::exception a12)
{
}

void sub_100152194(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::exception a12)
{
}

void sub_1001521A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::exception a12)
{
}

void sub_1001521BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::exception a12)
{
}

void sub_1001524D4(uint64_t a1)
{
  exception = (__n128 *)__cxa_allocate_exception(0x48uLL);
  sub_1001530AC(exception, a1);
}

void sub_10015251C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100152534(void **a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = (uint64_t)(a1 + 2);
  uint64_t v6 = (uint64_t)a1[2];
  uint64_t v8 = (std::locale *)*a1;
  if (0xEEEEEEEEEEEEEEEFLL * ((v6 - (uint64_t)*a1) >> 3) >= a2)
  {
    unint64_t v29 = ((unsigned char *)a1[1] - (unsigned char *)v8) / 120;
    if (v29 >= a2) {
      uint64_t v11 = a2;
    }
    else {
      uint64_t v11 = ((unsigned char *)a1[1] - (unsigned char *)v8) / 120;
    }
    if (v11)
    {
      std::locale v12 = (_OWORD *)(a3 + 56);
      int v13 = v8 + 13;
      do
      {
        LODWORD(v13[-13].__locale_) = *(_DWORD *)a3;
        std::string::operator=((std::string *)&v13[-12], (const std::string *)(a3 + 8));
        std::string::operator=((std::string *)&v13[-9], (const std::string *)(a3 + 32));
        long long v15 = *(_OWORD *)(a3 + 72);
        *(_OWORD *)&v13[-6].__locale_ = *v12;
        *(_OWORD *)&v13[-4].__locale_ = v15;
        if (LOBYTE(v13[-2].__locale_))
        {
          uint64_t v16 = v13 - 1;
          if (*(unsigned char *)(a3 + 88))
          {
            std::locale::operator=(v16, (const std::locale *)(a3 + 96));
          }
          else
          {
            std::locale::~locale(v16);
            LOBYTE(v13[-2].__locale_) = 0;
          }
        }
        else if (*(unsigned char *)(a3 + 88))
        {
          std::locale::locale(v13 - 1, (const std::locale *)(a3 + 96));
          LOBYTE(v13[-2].__locale_) = 1;
        }
        int v14 = *(std::locale::__imp **)(a3 + 104);
        LODWORD(v13[1].__locale_) = *(_DWORD *)(a3 + 112);
        v13->__locale_ = v14;
        v13 += 15;
        --v11;
      }
      while (v11);
    }
    if (a2 > v29)
    {
      uint64_t v17 = (uint64_t)a1[1];
      unint64_t v18 = v17 + 120 * (a2 - v29);
      uint64_t v19 = 120 * a2 - 120 * v29;
      do
      {
        sub_100152AC4(v7, v17, a3);
        v17 += 120;
        v19 -= 120;
      }
      while (v19);
      a1[1] = (void *)v18;
      return;
    }
    int v20 = (std::locale *)a1[1];
    uint64_t v21 = (uint64_t)*a1 + 120 * a2;
    while (1)
    {
      if (v20 == (std::locale *)v21)
      {
        a1[1] = (void *)v21;
        return;
      }
      if (LOBYTE(v20[-4].__locale_))
      {
        std::locale::~locale(v20 - 3);
        LOBYTE(v20[-4].__locale_) = 0;
      }
      if (SHIBYTE(v20[-9].__locale_) < 0)
      {
        operator delete(v20[-11].__locale_);
        if ((SHIBYTE(v20[-12].__locale_) & 0x80000000) == 0) {
          goto LABEL_30;
        }
      }
      else if ((SHIBYTE(v20[-12].__locale_) & 0x80000000) == 0)
      {
        goto LABEL_30;
      }
      operator delete(v20[-14].__locale_);
LABEL_30:
      v20 -= 15;
    }
  }
  if (!v8) {
    goto LABEL_42;
  }
  uint64_t v9 = (std::locale *)a1[1];
  std::string::size_type v10 = *a1;
  if (v9 != v8)
  {
    while (1)
    {
      if (LOBYTE(v9[-4].__locale_))
      {
        std::locale::~locale(v9 - 3);
        LOBYTE(v9[-4].__locale_) = 0;
      }
      if (SHIBYTE(v9[-9].__locale_) < 0)
      {
        operator delete(v9[-11].__locale_);
        if (SHIBYTE(v9[-12].__locale_) < 0) {
LABEL_12:
        }
          operator delete(v9[-14].__locale_);
      }
      else if (SHIBYTE(v9[-12].__locale_) < 0)
      {
        goto LABEL_12;
      }
      v9 -= 15;
      if (v9 == v8)
      {
        std::string::size_type v10 = *a1;
        break;
      }
    }
  }
  a1[1] = v8;
  operator delete(v10);
  uint64_t v6 = 0;
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
LABEL_42:
  if (a2 > 0x222222222222222) {
    goto LABEL_52;
  }
  unint64_t v22 = 0xEEEEEEEEEEEEEEEFLL * (v6 >> 3);
  uint64_t v23 = 2 * v22;
  if (2 * v22 <= a2) {
    uint64_t v23 = a2;
  }
  unint64_t v24 = v22 >= 0x111111111111111 ? 0x222222222222222 : v23;
  if (v24 > 0x222222222222222) {
LABEL_52:
  }
    sub_1000A9108();
  uint64_t v25 = 120 * v24;
  uint64_t v26 = (char *)operator new(120 * v24);
  *a1 = v26;
  a1[1] = v26;
  a1[2] = &v26[v25];
  uint64_t v27 = 120 * a2;
  int v28 = &v26[v27];
  do
  {
    sub_100152AC4(v7, (uint64_t)v26, a3);
    v26 += 120;
    v27 -= 120;
  }
  while (v27);
  a1[1] = v28;
}

void sub_100152848(_Unwind_Exception *a1)
{
  *(void *)(v2 + 8) = v1;
  _Unwind_Resume(a1);
}

void sub_100152850(_Unwind_Exception *a1)
{
  *(void *)(v2 + 8) = v1;
  _Unwind_Resume(a1);
}

void sub_100152858(uint64_t a1, unint64_t a2, size_t __len)
{
  unint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = a2 - v4;
  if (a2 <= v4)
  {
    *(void *)(a1 + 8) = a2;
    return;
  }
  int v6 = __len;
  uint64_t v7 = *(void *)(a1 + 16);
  unint64_t v8 = v7 << 6;
  if (v7 << 6 < v5 || v4 > (v7 << 6) - v5)
  {
    std::string __dst = 0;
    long long v23 = 0uLL;
    if ((a2 & 0x8000000000000000) != 0) {
      sub_1000A9108();
    }
    unint64_t v10 = v7 << 7;
    if (v10 <= ((a2 + 63) & 0xFFFFFFFFFFFFFFC0)) {
      unint64_t v10 = (a2 + 63) & 0xFFFFFFFFFFFFFFC0;
    }
    if (v8 <= 0x3FFFFFFFFFFFFFFELL) {
      unint64_t v11 = v10;
    }
    else {
      unint64_t v11 = 0x7FFFFFFFFFFFFFFFLL;
    }
    sub_100152BB8((uint64_t)&__dst, v11);
    std::locale v12 = *(void **)a1;
    uint64_t v13 = *(void *)(a1 + 8);
    *(void *)&long long v23 = v13 + v5;
    long long v15 = __dst;
    if (v13 < 1)
    {
      LODWORD(v16) = 0;
    }
    else
    {
      unint64_t v14 = (unint64_t)v13 >> 6;
      if ((unint64_t)v13 >= 0x40) {
        memmove(__dst, v12, 8 * v14);
      }
      v15 += v14;
      uint64_t v16 = v13 & 0x3F;
      if (v16) {
        *long long v15 = *v15 & ~(0xFFFFFFFFFFFFFFFFLL >> -(char)v16) | *((void *)v12 + v14) & (0xFFFFFFFFFFFFFFFFLL >> -(char)v16);
      }
      std::locale v12 = *(void **)a1;
    }
    *(void *)a1 = __dst;
    std::string __dst = v12;
    long long v17 = *(_OWORD *)(a1 + 8);
    *(_OWORD *)(a1 + 8) = v23;
    long long v23 = v17;
    if (v12) {
      operator delete(v12);
    }
  }
  else
  {
    long long v15 = (void *)(*(void *)a1 + 8 * (v4 >> 6));
    uint64_t v16 = *(void *)(a1 + 8) & 0x3FLL;
    *(void *)(a1 + 8) = a2;
  }
  if (v5)
  {
    if (v6)
    {
      if (v16)
      {
        if ((64 - v16) >= v5) {
          unint64_t v18 = v5;
        }
        else {
          unint64_t v18 = (64 - v16);
        }
        *v15++ |= (0xFFFFFFFFFFFFFFFFLL >> (64 - v16 - v18)) & (-1 << v16);
        v5 -= v18;
      }
      uint64_t v19 = v5 >> 6;
      if (v5 >= 0x40) {
        memset(v15, 255, 8 * (v5 >> 6));
      }
      if ((v5 & 0x3F) != 0)
      {
        unint64_t v20 = v15[v19] | (0xFFFFFFFFFFFFFFFFLL >> -(v5 & 0x3F));
LABEL_43:
        v15[v19] = v20;
      }
    }
    else
    {
      if (v16)
      {
        if ((64 - v16) >= v5) {
          unint64_t v21 = v5;
        }
        else {
          unint64_t v21 = (64 - v16);
        }
        *v15++ &= ~((0xFFFFFFFFFFFFFFFFLL >> (64 - v16 - v21)) & (-1 << v16));
        v5 -= v21;
      }
      uint64_t v19 = v5 >> 6;
      if (v5 >= 0x40) {
        bzero(v15, 8 * (v5 >> 6));
      }
      if ((v5 & 0x3F) != 0)
      {
        unint64_t v20 = v15[v19] & ~(0xFFFFFFFFFFFFFFFFLL >> -(v5 & 0x3F));
        goto LABEL_43;
      }
    }
  }
}

void sub_100152AAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100152AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a2 = *(_DWORD *)a3;
  unint64_t v5 = (unsigned char *)(a2 + 8);
  if (*(char *)(a3 + 31) < 0)
  {
    sub_1000559FC(v5, *(void **)(a3 + 8), *(void *)(a3 + 16));
    double result = (void *)(a2 + 32);
    if ((*(char *)(a3 + 55) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    long long v6 = *(_OWORD *)(a3 + 8);
    *(void *)(a2 + 24) = *(void *)(a3 + 24);
    *(_OWORD *)unint64_t v5 = v6;
    double result = (void *)(a2 + 32);
    if ((*(char *)(a3 + 55) & 0x80000000) == 0)
    {
LABEL_3:
      long long v8 = *(_OWORD *)(a3 + 32);
      result[2] = *(void *)(a3 + 48);
      *(_OWORD *)double result = v8;
      goto LABEL_6;
    }
  }
  double result = sub_1000559FC(result, *(void **)(a3 + 32), *(void *)(a3 + 40));
LABEL_6:
  long long v9 = *(_OWORD *)(a3 + 56);
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(a3 + 72);
  *(_OWORD *)(a2 + 56) = v9;
  *(unsigned char *)(a2 + 88) = 0;
  if (*(unsigned char *)(a3 + 88))
  {
    double result = std::locale::locale((std::locale *)(a2 + 96), (const std::locale *)(a3 + 96));
    *(unsigned char *)(a2 + 88) = 1;
  }
  uint64_t v10 = *(void *)(a3 + 104);
  *(_DWORD *)(a2 + 112) = *(_DWORD *)(a3 + 112);
  *(void *)(a2 + 104) = v10;
  return result;
}

void sub_100152B9C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_100152BB8(uint64_t a1, unint64_t a2)
{
  if (a2 > *(void *)(a1 + 16) << 6)
  {
    if ((a2 & 0x8000000000000000) != 0) {
      sub_1000A9108();
    }
    unint64_t v3 = ((a2 - 1) >> 6) + 1;
    unint64_t v4 = (uint64_t *)operator new(8 * v3);
    unint64_t v5 = *(void **)a1;
    unint64_t v6 = *(void *)(a1 + 8);
    int v7 = v6 & 0x3F;
    unint64_t v8 = (v6 - 1) >> 6;
    if (v6 < 0x41) {
      unint64_t v8 = 0;
    }
    v4[v8] = 0;
    if (v6 > 0x3F || (v6 & 0x3F) != 0)
    {
      int v9 = 0;
      int v10 = 0;
      unint64_t v11 = &v5[v6 >> 6];
      std::locale v12 = v4;
      uint64_t v13 = v5;
      do
      {
        uint64_t v14 = 1 << v9;
        if ((*v13 >> v10)) {
          uint64_t v15 = *v12 | v14;
        }
        else {
          uint64_t v15 = *v12 & ~v14;
        }
        *std::locale v12 = v15;
        v13 += v10 == 63;
        if (v10 == 63) {
          int v10 = 0;
        }
        else {
          ++v10;
        }
        v12 += v9 == 63;
        if (v9 == 63) {
          int v9 = 0;
        }
        else {
          ++v9;
        }
      }
      while (v10 != v7 || v13 != v11);
    }
    *(void *)a1 = v4;
    *(void *)(a1 + 16) = v3;
    if (v5)
    {
      operator delete(v5);
    }
  }
}

std::string *sub_100152CCC(std::string *this, unint64_t a2, char *a3)
{
  LODWORD(v6) = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  unint64_t v7 = (unint64_t)&a3[-a2];
  if ((v6 & 0x80000000) != 0)
  {
    if (a3 == (char *)a2) {
      return this;
    }
    std::string::size_type size = this->__r_.__value_.__l.__size_;
    unint64_t v11 = this->__r_.__value_.__r.__words[2];
    std::string::size_type v9 = (v11 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    int v10 = (std::string *)this->__r_.__value_.__r.__words[0];
    unint64_t v6 = HIBYTE(v11);
    if (this->__r_.__value_.__r.__words[0] > a2) {
      goto LABEL_17;
    }
  }
  else
  {
    if (a3 == (char *)a2) {
      return this;
    }
    std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    std::string::size_type v9 = 22;
    int v10 = this;
    if ((unint64_t)this > a2)
    {
LABEL_17:
      if (v9 - size < v7)
      {
        std::string::__grow_by(this, v9, size - v9 + v7, size, size, 0, 0);
        this->__r_.__value_.__l.__size_ = size;
        uint64_t v19 = this;
        if ((*((unsigned char *)&this->__r_.__value_.__s + 23) & 0x80) == 0)
        {
LABEL_19:
          unint64_t v20 = (char *)v19 + size;
          if ((char *)a2 == a3) {
            goto LABEL_34;
          }
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t v19 = this;
        if ((v6 & 0x80) == 0) {
          goto LABEL_19;
        }
      }
      uint64_t v19 = (std::string *)this->__r_.__value_.__r.__words[0];
      unint64_t v20 = (unsigned char *)(this->__r_.__value_.__r.__words[0] + size);
      if ((char *)a2 == a3) {
        goto LABEL_34;
      }
LABEL_23:
      if (v7 >= 0x20)
      {
        unint64_t v24 = (char *)v19 + size;
        unint64_t v25 = (unint64_t)v19 + size - a2;
        unint64_t v21 = (char *)a2;
        if (v25 >= 0x20)
        {
          v20 += v7 & 0xFFFFFFFFFFFFFFE0;
          unint64_t v21 = (char *)(a2 + (v7 & 0xFFFFFFFFFFFFFFE0));
          uint64_t v26 = (long long *)(a2 + 16);
          uint64_t v27 = v24 + 16;
          unint64_t v28 = v7 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v29 = *v26;
            *(v27 - 1) = *(v26 - 1);
            *uint64_t v27 = v29;
            v26 += 2;
            v27 += 2;
            v28 -= 32;
          }
          while (v28);
          if (v7 == (v7 & 0xFFFFFFFFFFFFFFE0)) {
            goto LABEL_34;
          }
        }
      }
      else
      {
        unint64_t v21 = (char *)a2;
      }
      do
      {
        char v30 = *v21++;
        *v20++ = v30;
      }
      while (v21 != a3);
LABEL_34:
      unsigned char *v20 = 0;
      std::string::size_type v31 = v7 + size;
      if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
        this->__r_.__value_.__l.__size_ = v31;
      }
      else {
        *((unsigned char *)&this->__r_.__value_.__s + 23) = v31 & 0x7F;
      }
      return this;
    }
  }
  if ((unint64_t)v10->__r_.__value_.__r.__words + size + 1 <= a2) {
    goto LABEL_17;
  }
  if (v7 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  if (v7 <= 0x16)
  {
    HIBYTE(v38) = v7;
    p_p = (char *)&__p;
    if ((char *)a2 != a3) {
      goto LABEL_11;
    }
LABEL_28:
    uint64_t v13 = p_p;
    goto LABEL_39;
  }
  uint64_t v22 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v7 | 7) != 0x17) {
    uint64_t v22 = v7 | 7;
  }
  uint64_t v23 = v22 + 1;
  p_p = (char *)operator new(v22 + 1);
  std::string::size_type v37 = v7;
  int64_t v38 = v23 | 0x8000000000000000;
  std::string __p = p_p;
  if ((char *)a2 == a3) {
    goto LABEL_28;
  }
LABEL_11:
  if (v7 < 0x20 || (unint64_t)&p_p[-a2] < 0x20)
  {
    uint64_t v13 = p_p;
    uint64_t v14 = (char *)a2;
    do
    {
LABEL_38:
      char v32 = *v14++;
      *v13++ = v32;
    }
    while (v14 != a3);
    goto LABEL_39;
  }
  uint64_t v13 = &p_p[v7 & 0xFFFFFFFFFFFFFFE0];
  uint64_t v14 = (char *)(a2 + (v7 & 0xFFFFFFFFFFFFFFE0));
  uint64_t v15 = (long long *)(a2 + 16);
  uint64_t v16 = p_p + 16;
  unint64_t v17 = v7 & 0xFFFFFFFFFFFFFFE0;
  do
  {
    long long v18 = *v15;
    *(v16 - 1) = *(v15 - 1);
    _OWORD *v16 = v18;
    v15 += 2;
    v16 += 2;
    v17 -= 32;
  }
  while (v17);
  if (v7 != (v7 & 0x7FFFFFFFFFFFFFE0)) {
    goto LABEL_38;
  }
LABEL_39:
  *uint64_t v13 = 0;
  if (v38 >= 0) {
    uint64_t v33 = (const std::string::value_type *)&__p;
  }
  else {
    uint64_t v33 = (const std::string::value_type *)__p;
  }
  if (v38 >= 0) {
    std::string::size_type v34 = HIBYTE(v38);
  }
  else {
    std::string::size_type v34 = v37;
  }
  std::string::append(this, v33, v34);
  if (SHIBYTE(v38) < 0) {
    operator delete(__p);
  }
  return this;
}

void sub_100152F64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100152F80(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    v3[0] = &off_100458F40;
    v3[1] = a2;
    void v3[2] = a3;
    sub_1001524D4((uint64_t)v3);
  }
  return result;
}

void sub_100152FD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception a10)
{
}

unsigned __int8 *sub_100152FEC(unsigned __int8 **a1, char **a2, void *a3, void *a4)
{
  *a3 = 0;
  for (unsigned int i = *a1; i != (unsigned __int8 *)*a2; ++i)
  {
    if ((char)*i < 0) {
      break;
    }
    uint64_t v8 = *i;
    if ((*(_DWORD *)(a4[2] + 4 * v8) & 0x400) == 0) {
      break;
    }
    *a3 = 10 * *a3
        + (*(int (**)(void *, void, void))(*a4 + 72))(a4, (char)v8, 0)
        - 48;
  }
  return i;
}

__n128 sub_1001530AC(__n128 *a1, uint64_t a2)
{
  a1->n128_u64[0] = (unint64_t)&off_100451ED0;
  a1->n128_u64[1] = (unint64_t)&off_100458F40;
  __n128 result = *(__n128 *)(a2 + 8);
  a1[1] = result;
  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u32[0] = -1;
  a1->n128_u64[0] = (unint64_t)&off_100458EC8;
  a1->n128_u64[1] = (unint64_t)off_100458EF8;
  a1[2].n128_u64[0] = (unint64_t)off_100458F20;
  a1[2].n128_u64[1] = 0;
  return result;
}

std::exception *sub_100153158(std::exception *a1)
{
  a1[4].__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[5].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[5].__vftable = 0;
  }
  std::exception::~exception(a1 + 1);
  return a1;
}

void sub_1001531DC()
{
}

void sub_100153324()
{
  std::exception::~exception(v0);
  operator delete();
}

void sub_100153350(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100153384(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x48uLL);
  sub_100153728((uint64_t)exception, a1);
}

void sub_1001533CC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1001533E0(std::exception *a1)
{
  a1[4].__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[5].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[5].__vftable = 0;
  }
  std::exception::~exception(a1 + 1);

  operator delete();
}

void sub_100153484(std::exception *this)
{
  this[3].__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = this[4].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    this[4].__vftable = 0;
  }

  std::exception::~exception(this);
}

void sub_100153510(std::exception *this)
{
  this[3].__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = this[4].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    this[4].__vftable = 0;
  }
  std::exception::~exception(this);

  operator delete();
}

const char *sub_1001535B8()
{
  return "boost::bad_format_string: format-string is ill-formed";
}

void sub_1001535C4(std::exception *a1)
{
  a1->__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  std::exception::~exception(a1 - 3);
}

void sub_10015364C(std::exception *a1)
{
  a1->__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  std::exception::~exception(a1 - 3);

  operator delete();
}

void sub_1001536F0(std::exception *a1)
{
  std::exception::~exception(a1);

  operator delete();
}

uint64_t sub_100153728(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  *(void *)(a1 + 8) = &off_100458F40;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = &off_100451DC0;
  *(void *)(a1 + 40) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)a1 = &off_100458EC8;
  *(void *)(a1 + 8) = off_100458EF8;
  *(void *)(a1 + 32) = off_100458F20;
  return a1;
}

void sub_10015384C(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

void sub_100153860(void **a1, unint64_t a2, uint64_t a3)
{
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v6 = a1[2];
  uint64_t v8 = (uint64_t)a1[1];
  if (0xEEEEEEEEEEEEEEEFLL * ((uint64_t)&v6[-v8] >> 3) < a2)
  {
    unint64_t v9 = 0xEEEEEEEEEEEEEEEFLL * ((v8 - (uint64_t)*a1) >> 3);
    unint64_t v10 = v9 + a2;
    if (v9 + a2 > 0x222222222222222) {
      sub_1000A9108();
    }
    unint64_t v11 = 0xEEEEEEEEEEEEEEEFLL * ((v6 - (unsigned char *)*a1) >> 3);
    if (2 * v11 > v10) {
      unint64_t v10 = 2 * v11;
    }
    if (v11 >= 0x111111111111111) {
      unint64_t v12 = 0x222222222222222;
    }
    else {
      unint64_t v12 = v10;
    }
    uint64_t v31 = (uint64_t)(a1 + 2);
    if (v12)
    {
      if (v12 > 0x222222222222222) {
        sub_1000A6A10();
      }
      uint64_t v13 = (char *)operator new(120 * v12);
    }
    else
    {
      uint64_t v13 = 0;
    }
    uint64_t v16 = (uint64_t)&v13[120 * v9];
    uint64_t v29 = v16;
    char v30 = &v13[120 * v12];
    uint64_t v17 = 120 * a2;
    unint64_t v18 = v16 + 120 * a2;
    do
    {
      sub_100152AC4(v31, v16, a3);
      v16 += 120;
      v17 -= 120;
    }
    while (v17);
    unint64_t v20 = (std::locale *)*a1;
    uint64_t v19 = (std::locale *)a1[1];
    if (v19 == *a1)
    {
      *a1 = (void *)v29;
      a1[1] = (void *)v18;
      a1[2] = v30;
LABEL_36:
      if (v19) {
        operator delete(v19);
      }
      return;
    }
    uint64_t v21 = 0;
    do
    {
      uint64_t v23 = v29 + v21 * 8;
      unint64_t v24 = &v19[v21];
      *(_DWORD *)(v23 - 120) = v19[v21 - 15].__locale_;
      long long v25 = *(_OWORD *)&v19[v21 - 14].__locale_;
      *(std::locale *)(v23 - 96) = v19[v21 - 12];
      *(_OWORD *)(v23 - 112) = v25;
      v24[-13].__locale_ = 0;
      v24[-12].__locale_ = 0;
      v24[-14].__locale_ = 0;
      long long v26 = *(_OWORD *)&v19[v21 - 11].__locale_;
      *(std::locale *)(v23 - 72) = v19[v21 - 9];
      *(_OWORD *)(v23 - 88) = v26;
      v24[-10].__locale_ = 0;
      v24[-9].__locale_ = 0;
      v24[-11].__locale_ = 0;
      long long v27 = *(_OWORD *)&v19[v21 - 6].__locale_;
      *(_OWORD *)(v23 - 64) = *(_OWORD *)&v19[v21 - 8].__locale_;
      *(_OWORD *)(v23 - 48) = v27;
      *(unsigned char *)(v23 - 32) = 0;
      if (LOBYTE(v19[v21 - 4].__locale_))
      {
        std::locale::locale((std::locale *)(v23 - 24), v24 - 3);
        *(unsigned char *)(v23 - 32) = 1;
      }
      locale = v24[-2].__locale_;
      *(_DWORD *)(v23 - 8) = v24[-1].__locale_;
      *(void *)(v23 - 16) = locale;
      v21 -= 15;
    }
    while (&v19[v21] != v20);
    unint64_t v28 = (std::locale *)*a1;
    uint64_t v19 = (std::locale *)a1[1];
    *a1 = (void *)(v29 + v21 * 8);
    a1[1] = (void *)v18;
    a1[2] = v30;
    if (v19 == v28) {
      goto LABEL_36;
    }
    while (1)
    {
      if (LOBYTE(v19[-4].__locale_))
      {
        std::locale::~locale(v19 - 3);
        LOBYTE(v19[-4].__locale_) = 0;
      }
      if (SHIBYTE(v19[-9].__locale_) < 0)
      {
        operator delete(v19[-11].__locale_);
        if (SHIBYTE(v19[-12].__locale_) < 0) {
LABEL_34:
        }
          operator delete(v19[-14].__locale_);
      }
      else if (SHIBYTE(v19[-12].__locale_) < 0)
      {
        goto LABEL_34;
      }
      v19 -= 15;
      if (v19 == v28)
      {
        uint64_t v19 = v28;
        goto LABEL_36;
      }
    }
  }
  if (a2)
  {
    uint64_t v14 = v8 + 120 * a2;
    uint64_t v15 = 120 * a2;
    do
    {
      sub_100152AC4(v7, v8, a3);
      v8 += 120;
      v15 -= 120;
    }
    while (v15);
    uint64_t v8 = v14;
  }
  a1[1] = (void *)v8;
}

void sub_100153B14(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_100153B1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100153B34((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100153B34(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 120;
    if (*(unsigned char *)(i - 32))
    {
      std::locale::~locale((std::locale *)(i - 24));
      *(unsigned char *)(i - 32) = 0;
    }
    if (*(char *)(i - 65) < 0)
    {
      operator delete(*(void **)(i - 88));
      if ((*(char *)(i - 89) & 0x80000000) == 0) {
        continue;
      }
    }
    else if ((*(char *)(i - 89) & 0x80000000) == 0)
    {
      continue;
    }
    operator delete(*(void **)(i - 112));
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_100153BCC(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 60))
  {
    uint64_t v5 = *(void *)a1;
    uint64_t v4 = *(void *)(a1 + 8);
    if (v4 != *(void *)a1)
    {
      uint64_t v6 = 0;
      unint64_t v7 = 0;
      do
      {
        if (!*(void *)(a1 + 32)
          || (unint64_t v8 = *(unsigned int *)(v5 + v6), (v8 & 0x80000000) != 0)
          || ((*(void *)(*(void *)(a1 + 24) + ((v8 >> 3) & 0x1FFFFFF8)) >> v8) & 1) == 0)
        {
          std::string::resize((std::string *)(v5 + v6 + 8), 0, 0);
          uint64_t v5 = *(void *)a1;
          uint64_t v4 = *(void *)(a1 + 8);
        }
        ++v7;
        v6 += 120;
      }
      while (v7 < 0xEEEEEEEEEEEEEEEFLL * ((v4 - v5) >> 3));
    }
    *(_DWORD *)(a1 + 52) = 0;
    *(unsigned char *)(a1 + 60) = 0;
    if (*(void *)(a1 + 32))
    {
      uint64_t v9 = *(unsigned int *)(a1 + 56);
      if ((int)v9 >= 1)
      {
        unint64_t v10 = 0;
        uint64_t v11 = *(void *)(a1 + 24);
        do
        {
          if (((*(void *)(v11 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
            break;
          }
          *(_DWORD *)(a1 + 52) = ++v10;
        }
        while (v9 != v10);
      }
    }
  }
  sub_100153D30((uint64_t *)a1, a2);
  uint64_t v12 = *(int *)(a1 + 52);
  unint64_t v13 = v12 + 1;
  *(_DWORD *)(a1 + 52) = v12 + 1;
  if (*(void *)(a1 + 32))
  {
    uint64_t v14 = *(int *)(a1 + 56);
    if ((int)v13 < (int)v14)
    {
      uint64_t v15 = *(void *)(a1 + 24);
      int v16 = v12 + 2;
      do
      {
        if (((*(void *)(v15 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        ++v13;
        *(_DWORD *)(a1 + 52) = v16++;
      }
      while (v14 != v13);
    }
  }
  return a1;
}

uint64_t *sub_100153D30(uint64_t *result, uint64_t a2)
{
  uint64_t v2 = *((int *)result + 13);
  uint64_t v3 = *((int *)result + 14);
  if ((int)v2 >= (int)v3)
  {
    if ((result[11] & 4) != 0)
    {
      v8[0] = &off_100459040;
      v8[1] = v2;
      v8[2] = v3;
      sub_100153E48((uint64_t)v8);
    }
  }
  else
  {
    uint64_t v5 = *result;
    uint64_t v4 = result[1];
    if (v4 != *result)
    {
      uint64_t v6 = 0;
      unint64_t v7 = 0;
      do
      {
        if (*(_DWORD *)(v5 + v6) == *((_DWORD *)result + 13)) {
          sub_100153EA8(a2, v5 + v6, v5 + v6 + 8, (uint64_t)(result + 12));
        }
        ++v7;
        v6 += 120;
      }
      while (v7 < 0xEEEEEEEEEEEEEEEFLL * ((v4 - v5) >> 3));
    }
  }
  return result;
}

void sub_100153E34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception a10)
{
}

void sub_100153E48(uint64_t a1)
{
  exception = (__n128 *)__cxa_allocate_exception(0x48uLL);
  sub_1001549D4(exception, a1);
}

void sub_100153E90(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100153EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100155188(&v4, a4);
}

void sub_1001548C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,std::locale a38)
{
  std::locale::~locale((std::locale *)(v38 - 240));
  sub_1001556C8((uint64_t)&a38);
  sub_1001556C8((uint64_t)&a14);
  _Unwind_Resume(a1);
}

void sub_1001549AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1001556C8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001549C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1001556C8((uint64_t)va);
  _Unwind_Resume(a1);
}

__n128 sub_1001549D4(__n128 *a1, uint64_t a2)
{
  a1->n128_u64[0] = (unint64_t)&off_100451ED0;
  a1->n128_u64[1] = (unint64_t)&off_100459040;
  __n128 result = *(__n128 *)(a2 + 8);
  a1[1] = result;
  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u32[0] = -1;
  a1->n128_u64[0] = (unint64_t)&off_100458FC8;
  a1->n128_u64[1] = (unint64_t)off_100458FF8;
  a1[2].n128_u64[0] = (unint64_t)off_100459020;
  a1[2].n128_u64[1] = 0;
  return result;
}

std::exception *sub_100154A80(std::exception *a1)
{
  a1[4].__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[5].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[5].__vftable = 0;
  }
  std::exception::~exception(a1 + 1);
  return a1;
}

void sub_100154B04()
{
}

void sub_100154C4C()
{
  std::exception::~exception(v0);
  operator delete();
}

void sub_100154C78(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100154CAC(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x48uLL);
  sub_100155050((uint64_t)exception, a1);
}

void sub_100154CF4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100154D08(std::exception *a1)
{
  a1[4].__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[5].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[5].__vftable = 0;
  }
  std::exception::~exception(a1 + 1);

  operator delete();
}

void sub_100154DAC(std::exception *this)
{
  this[3].__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = this[4].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    this[4].__vftable = 0;
  }

  std::exception::~exception(this);
}

void sub_100154E38(std::exception *this)
{
  this[3].__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = this[4].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    this[4].__vftable = 0;
  }
  std::exception::~exception(this);

  operator delete();
}

const char *sub_100154EE0()
{
  return "boost::too_many_args: format-string referred to fewer arguments than were passed";
}

void sub_100154EEC(std::exception *a1)
{
  a1->__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  std::exception::~exception(a1 - 3);
}

void sub_100154F74(std::exception *a1)
{
  a1->__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  std::exception::~exception(a1 - 3);

  operator delete();
}

void sub_100155018(std::exception *a1)
{
  std::exception::~exception(a1);

  operator delete();
}

uint64_t sub_100155050(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  *(void *)(a1 + 8) = &off_100459040;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = &off_100451DC0;
  *(void *)(a1 + 40) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)a1 = &off_100458FC8;
  *(void *)(a1 + 8) = off_100458FF8;
  *(void *)(a1 + 32) = off_100459020;
  return a1;
}

void sub_100155174(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

void sub_100155188(void *a1, uint64_t a2)
{
  a1[1] = a2;
  a1[2] = 0;
  operator new();
}

void sub_1001552AC(_Unwind_Exception *a1)
{
  sub_100155784(v1);
  std::ios::~ios();
  _Unwind_Resume(a1);
}

void sub_1001552C8(void *a1)
{
}

void sub_1001552D4(_Unwind_Exception *a1)
{
}

void sub_1001552F0(uint64_t a1, std::ios_base *this, const std::locale *a3)
{
  if (*(unsigned char *)(a1 + 32))
  {
    std::ios_base::getloc(this);
    std::ios_base::imbue(this, (const std::locale *)(a1 + 40));
    std::locale::~locale(&v18);
    rdbuf = (std::locale *)this->__rdbuf_;
    if (rdbuf)
    {
      (*((void (**)(void *, uint64_t))rdbuf->__locale_ + 2))(this->__rdbuf_, a1 + 40);
      uint64_t v6 = rdbuf + 1;
      std::locale::locale(&v17, v6);
      std::locale::operator=(v6, (const std::locale *)(a1 + 40));
      std::locale::~locale(&v17);
    }
    unint64_t v7 = (std::locale *)&v16;
  }
  else
  {
    if (!a3) {
      goto LABEL_10;
    }
    std::ios_base::getloc(this);
    std::ios_base::imbue(this, a3);
    std::locale::~locale(&v18);
    uint64_t v9 = (std::locale *)this->__rdbuf_;
    if (v9)
    {
      (*((void (**)(void *, const std::locale *))v9->__locale_ + 2))(this->__rdbuf_, a3);
      unint64_t v10 = v9 + 1;
      std::locale::locale(&v17, v10);
      std::locale::operator=(v10, a3);
      std::locale::~locale(&v17);
    }
    unint64_t v7 = (std::locale *)&v15;
  }
  std::locale::~locale(v7);
LABEL_10:
  if (*(void *)a1 != -1) {
    this->__width_ = *(void *)a1;
  }
  std::streamsize v11 = *(void *)(a1 + 8);
  if (v11 != -1) {
    this->__precision_ = v11;
  }
  std::ios_base::fmtflags v12 = *(char *)(a1 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (this[1].__fmtflags_ == -1)
    {
      std::ios_base::getloc(this);
      unint64_t v13 = std::locale::use_facet(&v18, &std::ctype<char>::id);
      std::ios_base::fmtflags v14 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v13->__vftable[2].~facet_0)(v13, 32);
      std::locale::~locale(&v18);
      this[1].__fmtflags_ = v14;
    }
    this[1].__fmtflags_ = v12;
  }
  this->__fmtflags_ = *(_DWORD *)(a1 + 20);
  std::ios_base::clear(this, *(_DWORD *)(a1 + 24));
  this->__exceptions_ = *(_DWORD *)(a1 + 28);
  std::ios_base::clear(this, this->__rdstate_);
}

void sub_1001554F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::locale a9)
{
}

void sub_100155508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::locale a12)
{
}

void sub_10015551C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10)
{
}

void sub_100155530(std::string *a1, const std::string::value_type *a2, std::string::size_type a3, int64_t a4, std::string::value_type a5, char a6, int a7, int a8)
{
  std::string::resize(a1, 0, 0);
  if (a4 >= 1 && a4 > a3)
  {
    int64_t v16 = a4 - a3 - (a7 != 0);
    std::string::reserve(a1, a4);
    if (a8)
    {
      if (v16 >= 0) {
        uint64_t v17 = a4 - a3 - (a7 != 0);
      }
      else {
        uint64_t v17 = v16 + 1;
      }
      std::string::size_type v18 = v17 >> 1;
      v16 -= v17 >> 1;
      if (!v16) {
        goto LABEL_21;
      }
    }
    else
    {
      if ((a6 & 0x20) != 0)
      {
        std::string::size_type v18 = a4 - a3 - (a7 != 0);
        if (!a7) {
          goto LABEL_23;
        }
        goto LABEL_22;
      }
      std::string::size_type v18 = 0;
      if (!v16)
      {
LABEL_21:
        if (!a7)
        {
LABEL_23:
          if (a3) {
            std::string::append(a1, a2, a3);
          }
          if (v18)
          {
            std::string::append(a1, v18, a5);
          }
          return;
        }
LABEL_22:
        std::string::append(a1, 1uLL, a7);
        goto LABEL_23;
      }
    }
    std::string::append(a1, v16, a5);
    goto LABEL_21;
  }
  if (a7) {
    std::string::size_type v19 = a3 + 1;
  }
  else {
    std::string::size_type v19 = a3;
  }
  std::string::reserve(a1, v19);
  if (a7) {
    std::string::append(a1, 1uLL, a7);
  }
  if (a3)
  {
    std::string::append(a1, a2, a3);
  }
}

uint64_t sub_1001556C8(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(std::ostream::~ostream() + 16);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  std::ios::~ios();
  return a1;
}

uint64_t sub_100155784(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_10015582C()
{
  uint64_t v0 = *(atomic_uint **)(std::ostream::~ostream() + 16);
  if (v0)
  {
    if (atomic_fetch_add(v0 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v0 + 16))(v0);
      if (atomic_fetch_add(v0 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v0 + 24))(v0);
      }
    }
  }
  std::ios::~ios();

  operator delete();
}

uint64_t sub_100155908(void *a1)
{
  uint64_t v1 = (char *)a1 + *(void *)(*a1 - 24);
  std::ostream::~ostream();
  uint64_t v2 = (atomic_uint *)*((void *)v1 + 2);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }

  return std::ios::~ios();
}

void sub_1001559E4(void *a1)
{
  uint64_t v1 = (char *)a1 + *(void *)(*a1 - 24);
  std::ostream::~ostream();
  uint64_t v2 = (atomic_uint *)*((void *)v1 + 2);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  std::ios::~ios();

  operator delete();
}

void sub_100155ADC()
{
}

uint64_t sub_100155AF4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost2io22basic_oaltstringstreamIcNSt3__111char_traitsIcEENS2_9allocatorIcEEE5No_OpE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"N5boost2io22basic_oaltstringstreamIcNSt3__111char_traitsIcEENS2_9allocatorIcEEE5No_OpE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost2io22basic_oaltstringstreamIcNSt3__111char_traitsIcEENS2_9allocatorIcEEE5No_OpE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost2io22basic_oaltstringstreamIcNSt3__111char_traitsIcEENS2_9allocatorIcEEE5No_OpE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_100155B64()
{
  return 0;
}

uint64_t sub_100155B6C(uint64_t a1)
{
  return a1 + 24;
}

void sub_100155B74(uint64_t a1)
{
  exception = (__n128 *)__cxa_allocate_exception(0x48uLL);
  sub_100155BD4(exception, a1);
}

void sub_100155BBC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

__n128 sub_100155BD4(__n128 *a1, uint64_t a2)
{
  a1->n128_u64[0] = (unint64_t)&off_100451ED0;
  a1->n128_u64[1] = (unint64_t)&off_1004592A8;
  __n128 result = *(__n128 *)(a2 + 8);
  a1[1] = result;
  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u32[0] = -1;
  a1->n128_u64[0] = (unint64_t)&off_100459230;
  a1->n128_u64[1] = (unint64_t)off_100459260;
  a1[2].n128_u64[0] = (unint64_t)off_100459288;
  a1[2].n128_u64[1] = 0;
  return result;
}

std::exception *sub_100155C80(std::exception *a1)
{
  a1[4].__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[5].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[5].__vftable = 0;
  }
  std::exception::~exception(a1 + 1);
  return a1;
}

void sub_100155D04()
{
}

void sub_100155E4C()
{
  std::exception::~exception(v0);
  operator delete();
}

void sub_100155E78(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100155EAC(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x48uLL);
  sub_100156250((uint64_t)exception, a1);
}

void sub_100155EF4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100155F08(std::exception *a1)
{
  a1[4].__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[5].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[5].__vftable = 0;
  }
  std::exception::~exception(a1 + 1);

  operator delete();
}

void sub_100155FAC(std::exception *this)
{
  this[3].__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = this[4].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    this[4].__vftable = 0;
  }

  std::exception::~exception(this);
}

void sub_100156038(std::exception *this)
{
  this[3].__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = this[4].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    this[4].__vftable = 0;
  }
  std::exception::~exception(this);

  operator delete();
}

const char *sub_1001560E0()
{
  return "boost::too_few_args: format-string referred to more arguments than were passed";
}

void sub_1001560EC(std::exception *a1)
{
  a1->__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  std::exception::~exception(a1 - 3);
}

void sub_100156174(std::exception *a1)
{
  a1->__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  std::exception::~exception(a1 - 3);

  operator delete();
}

void sub_100156218(std::exception *a1)
{
  std::exception::~exception(a1);

  operator delete();
}

uint64_t sub_100156250(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  *(void *)(a1 + 8) = &off_1004592A8;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = &off_100451DC0;
  *(void *)(a1 + 40) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)a1 = &off_100459230;
  *(void *)(a1 + 8) = off_100459260;
  *(void *)(a1 + 32) = off_100459288;
  return a1;
}

void sub_100156374(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

void sub_100156388()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100156400()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void *sub_100156478(void *a1, long long *a2)
{
  *a1 = off_100459328;
  unint64_t v3 = a1 + 1;
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000559FC(v3, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    void v3[2] = *((void *)a2 + 2);
    *(_OWORD *)unint64_t v3 = v4;
  }
  return a1;
}

uint64_t sub_1001564EC(uint64_t result)
{
  uint64_t v1 = result;
  *(void *)__n128 result = off_100459328;
  if (*(char *)(result + 31) < 0)
  {
    operator delete(*(void **)(result + 8));
    return v1;
  }
  return result;
}

void sub_10015654C(void *a1)
{
  (*(void (**)(uint64_t *__return_ptr))(*a1 + 48))(&v8);
  uint64_t v2 = v8;
  *(unsigned char *)(v8 + 32) = 0;
  *((unsigned char *)&__str.__r_.__value_.__s + 23) = 0;
  __str.__r_.__value_.__s.__data_[0] = 0;
  std::string::operator=((std::string *)(v2 + 8), &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  uint64_t v4 = v8;
  unint64_t v3 = v9;
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  long long v5 = (std::__shared_weak_count *)a1[2];
  a1[1] = v4;
  a1[2] = v3;
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  uint64_t v6 = v9;
  if (v9)
  {
    if (!atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_100156680(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1000BA884((uint64_t)&a16);
  _Unwind_Resume(a1);
}

void sub_1001566A8()
{
}

void sub_100156738()
{
}

void sub_10015675C(uint64_t a1)
{
  *(void *)a1 = off_100459328;
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }

  operator delete();
}

void sub_1001567CC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  sub_1000CD728((const char *)((unint64_t)"PN5boost10filesystem4pathE" & 0x7FFFFFFFFFFFFFFFLL), &v13);
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)&v13;
  }
  else {
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)v13.__r_.__value_.__r.__words[0];
  }
  std::string::insert(&v13, v4, 91);
  std::string v14 = v13;
  memset(&v13, 0, sizeof(v13));
  long long v5 = std::string::append(&v14, "] = ");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v15.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v15.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  sub_100156A10((long long *)(a1 + 8));
  if ((v12 & 0x80u) == 0) {
    unint64_t v7 = __p;
  }
  else {
    unint64_t v7 = (void **)__p[0];
  }
  if ((v12 & 0x80u) == 0) {
    std::string::size_type v8 = v12;
  }
  else {
    std::string::size_type v8 = (std::string::size_type)__p[1];
  }
  uint64_t v9 = std::string::append(&v15, (const std::string::value_type *)v7, v8);
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v16.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v16.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  std::string::push_back(&v16, 10);
  *a2 = v16;
  memset(&v16, 0, sizeof(v16));
  if ((char)v12 < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_17;
    }
  }
  else if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v15.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_13:
    if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_18:
    operator delete(v13.__r_.__value_.__l.__data_);
    return;
  }
LABEL_17:
  operator delete(v14.__r_.__value_.__l.__data_);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_18;
  }
}

void sub_10015694C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0)
  {
    operator delete(*(void **)(v33 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a33 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_6:
  }
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100156A10(long long *a1)
{
  sub_1000CD96C((uint64_t)v3);
  if (*((char *)a1 + 23) < 0)
  {
    sub_1000559FC(&__dst, *(void **)a1, *((void *)a1 + 1));
  }
  else
  {
    long long __dst = *a1;
    uint64_t v6 = *((void *)a1 + 2);
  }
  sub_1000DA93C(v3, (unsigned __int8 *)&__dst, 0x26u, 0x22u);
  if (SHIBYTE(v6) < 0) {
    operator delete((void *)__dst);
  }
  std::stringbuf::str();
  if (v4 < 0) {
    operator delete((void *)v3[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_100156B84(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  if (*(char *)(v2 - 41) < 0)
  {
    operator delete(*(void **)(v2 - 64));
    sub_1000CDB10((uint64_t)va);
    _Unwind_Resume(a1);
  }
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100156BBC()
{
}

void sub_100156E58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100156F18((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100156E6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100156F18((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_100156E88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100156F18(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_100156FC0()
{
}

void sub_1001570AC(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    sub_1003A3598(v1);
  }
  __cxa_rethrow();
}

void sub_1001570C4(_Unwind_Exception *a1)
{
}

void sub_1001570DC()
{
}

uint64_t sub_1001570F0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 24))();
  }
  return result;
}

uint64_t sub_100157120()
{
  return 0;
}

uint64_t sub_100157128()
{
  return 0;
}

uint64_t sub_100157130()
{
  return 0;
}

std::string *sub_100157138@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10015716C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100157188()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100157200()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_100157278(uint64_t a1)
{
  *(void *)a1 = off_1004594E8;
  uint64_t v2 = *(void **)(a1 + 56);
  if (v2)
  {
    free(v2);
    *(_DWORD *)(a1 + 64) = 0;
  }
  *(void *)a1 = off_100454688;
  unint64_t v3 = *(atomic_uint **)(a1 + 16);
  if (v3)
  {
    if (atomic_fetch_add(v3 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v3 + 16))(v3);
      if (atomic_fetch_add(v3 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v3 + 24))(v3);
      }
    }
  }
  return a1;
}

uint64_t sub_100157368(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

uint64_t sub_100157410(uint64_t a1)
{
  *(void *)a1 = off_1004593D0;
  if (*(unsigned char *)(a1 + 24))
  {
    (**(void (***)(uint64_t))(a1 + 32))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

uint64_t sub_100157488(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterIN6apache6thrift9transport22TOutputStreamTransportEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterIN6apache6thrift9transport22TOutputStreamTransportEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterIN6apache6thrift9transport22TOutputStreamTransportEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterIN6apache6thrift9transport22TOutputStreamTransportEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_1001574F8()
{
  return 0;
}

uint64_t sub_100157500(uint64_t a1)
{
  return a1 + 24;
}

void sub_100157508(void *a1)
{
  *a1 = off_100459430;
  uint64_t v1 = (std::__shared_weak_count *)a1[3];
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  operator delete();
}

void sub_1001575B0(uint64_t a1)
{
  uint64_t v1 = *(const void **)(a1 + 8);
  if (v1)
  {
    if (v2)
    {
      unint64_t v3 = v2;
      if (!std::filebuf::close())
      {
        uint64_t v4 = (std::ios_base *)((char *)v3 + *(void *)(*v3 - 24));
        std::ios_base::iostate v5 = v4->__rdstate_ | 4;
        std::ios_base::clear(v4, v5);
      }
    }
  }
}

uint64_t sub_10015766C()
{
  return std::ostream::write();
}

uint64_t sub_100157678()
{
  return std::ostream::flush();
}

uint64_t sub_100157680()
{
  return 0;
}

void sub_10015768C()
{
  exception = __cxa_allocate_exception(0x28uLL);
  uint64_t v1 = (char *)operator new(0x20uLL);
  strcpy(v1, "Can't read from output stream");
  *(void *)exception = off_100454188;
  sub_1000559FC(exception + 8, v1, 0x1DuLL);
  *(void *)exception = off_10046A768;
  *((_DWORD *)exception + 8) = 1;
}

void sub_100157748(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_10015775C(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  operator delete(v2);
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100157780(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100157794(uint64_t a1, uint64_t a2, int a3)
{
  if (a3) {
    sub_10015768C();
  }
  return 0;
}

void sub_10015786C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v16 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v16)
  {
    goto LABEL_6;
  }
  __cxa_free_exception(v15);
  goto LABEL_6;
}

void sub_1001578A4(uint64_t a1)
{
  *(void *)a1 = off_1004594E8;
  uint64_t v2 = *(void **)(a1 + 56);
  if (v2)
  {
    free(v2);
    *(_DWORD *)(a1 + 64) = 0;
  }
  *(void *)a1 = off_100454688;
  unint64_t v3 = *(atomic_uint **)(a1 + 16);
  if (v3)
  {
    if (atomic_fetch_add(v3 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v3 + 16))(v3);
      if (atomic_fetch_add(v3 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v3 + 24))(v3);
      }
    }
  }

  operator delete();
}

uint64_t sub_1001579B8()
{
  return 0;
}

uint64_t sub_1001579C0()
{
  return 5;
}

uint64_t sub_100157A24()
{
  return 0;
}

uint64_t sub_100157A2C()
{
  return 1;
}

uint64_t sub_100157A64()
{
  return 2;
}

uint64_t sub_100157AA4(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) < 0)
  {
    unint64_t v2 = *(void *)(a2 + 8);
    if (v2 >> 31)
    {
      exception = __cxa_allocate_exception(0x28uLL);
      exception[2] = 0;
      exception[3] = 0;
      void *exception = off_100454818;
      exception[1] = 0;
      *((_DWORD *)exception + 8) = 3;
    }
  }
  else
  {
    LODWORD(v2) = *(unsigned __int8 *)(a2 + 23);
  }
  std::ostream::write();
  if (v2) {
    std::ostream::write();
  }
  return (v2 + 4);
}

uint64_t sub_100157B88()
{
  return 0;
}

uint64_t sub_100157B90(int a1, std::string *this)
{
  return 0;
}

uint64_t sub_100157BB8()
{
  return 0;
}

uint64_t sub_100157BC0(uint64_t a1, uint64_t a2, _DWORD *a3, _WORD *a4)
{
  uint64_t v7 = 1;
  sub_100157794(*(void *)(a1 + 32), (uint64_t)&v10, 1);
  unsigned int v8 = v10;
  *a3 = v10;
  if (v8)
  {
    sub_100157794(*(void *)(a1 + 32), (uint64_t)&v11, 2);
    unsigned int v8 = bswap32(v11) >> 16;
    uint64_t v7 = 3;
  }
  *a4 = v8;
  return v7;
}

uint64_t sub_100157C40()
{
  return 0;
}

uint64_t sub_100157C4C()
{
  return 0;
}

uint64_t sub_100157C58()
{
  return 0;
}

uint64_t sub_100157C64()
{
  return 0;
}

uint64_t sub_100157C6C(uint64_t a1, BOOL *a2)
{
  sub_100157794(*(void *)(a1 + 32), (uint64_t)&v4, 1);
  *a2 = v4 != 0;
  return 1;
}

uint64_t sub_100157CB8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_100157794(*(void *)(a1 + 32), (uint64_t)&v7, 1);
  if (v7) {
    uint64_t v5 = *a2 | a3;
  }
  else {
    uint64_t v5 = *a2 & ~a3;
  }
  *a2 = v5;
  return 1;
}

uint64_t sub_100157D2C(uint64_t a1, unsigned char *a2)
{
  sub_100157794(*(void *)(a1 + 32), (uint64_t)&v4, 1);
  *a2 = v4;
  return 1;
}

uint64_t sub_100157D70(uint64_t a1, _WORD *a2)
{
  sub_100157794(*(void *)(a1 + 32), (uint64_t)&v4, 2);
  *a2 = bswap32(v4) >> 16;
  return 2;
}

uint64_t sub_100157DBC(uint64_t a1, _DWORD *a2)
{
  sub_100157794(*(void *)(a1 + 32), (uint64_t)&v4, 4);
  *a2 = bswap32(v4);
  return 4;
}

uint64_t sub_100157E04(uint64_t a1, void *a2)
{
  sub_100157794(*(void *)(a1 + 32), (uint64_t)&v4, 8);
  *a2 = bswap64(v4);
  return 8;
}

uint64_t sub_100157E4C(uint64_t a1, void *a2)
{
  sub_100157794(*(void *)(a1 + 32), (uint64_t)&v4, 8);
  *a2 = bswap64(v4);
  return 8;
}

uint64_t sub_100157E94(uint64_t a1, std::string *a2)
{
  sub_100157794(*(void *)(a1 + 32), (uint64_t)&v5, 4);
  return sub_1001584D8(a1, a2, bswap32(v5)) + 4;
}

uint64_t sub_100157EE8(uint64_t a1, std::string *a2)
{
  sub_100157794(*(void *)(a1 + 32), (uint64_t)&v5, 4);
  return sub_1001584D8(a1, a2, bswap32(v5)) + 4;
}

void *sub_100157F40(void *a1)
{
  *a1 = off_100454688;
  unint64_t v2 = (atomic_uint *)a1[2];
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_100158004(void *a1)
{
  *a1 = off_100454688;
  uint64_t v1 = (atomic_uint *)a1[2];
  if (v1)
  {
    if (atomic_fetch_add(v1 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v1 + 16))(v1);
      if (atomic_fetch_add(v1 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v1 + 24))(v1);
      }
    }
  }

  operator delete();
}

uint64_t sub_1001580E8(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 49))
  {
    std::ostream::write();
    if ((*(char *)(a2 + 23) & 0x80000000) == 0)
    {
      LODWORD(v3) = *(unsigned __int8 *)(a2 + 23);
LABEL_7:
      std::ostream::write();
      if (v3) {
        std::ostream::write();
      }
      std::ostream::write();
      return (v3 + 12);
    }
    unint64_t v3 = *(void *)(a2 + 8);
    if (!(v3 >> 31)) {
      goto LABEL_7;
    }
LABEL_14:
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 3;
  }
  if (*(char *)(a2 + 23) < 0)
  {
    unint64_t v4 = *(void *)(a2 + 8);
    if (v4 >> 31) {
      goto LABEL_14;
    }
  }
  else
  {
    LODWORD(v4) = *(unsigned __int8 *)(a2 + 23);
  }
  std::ostream::write();
  if (v4) {
    std::ostream::write();
  }
  std::ostream::write();
  std::ostream::write();
  return (v4 + 9);
}

uint64_t sub_1001582CC(uint64_t a1, std::string *a2, _DWORD *a3, _DWORD *a4)
{
  sub_100157794(*(void *)(a1 + 32), (uint64_t)&v14, 4);
  std::string::size_type v8 = bswap32(v14);
  if ((v8 & 0x80000000) != 0)
  {
    if (WORD1(v8) != 32769)
    {
      exception = __cxa_allocate_exception(0x28uLL);
      sub_1000AE4B0(&v14, "Bad version identifier");
      sub_1000DE0C8((uint64_t)exception, 4, &v14);
    }
    *a3 = v8;
    sub_100157794(*(void *)(a1 + 32), (uint64_t)&v14, 4);
    int v11 = sub_1001584D8(a1, a2, bswap32(v14));
    sub_100157794(*(void *)(a1 + 32), (uint64_t)&v14, 4);
    *a4 = bswap32(v14);
    return (v11 + 12);
  }
  else
  {
    if (*(unsigned char *)(a1 + 48))
    {
      unsigned __int8 v12 = __cxa_allocate_exception(0x28uLL);
      sub_1000AE4B0(&v14, "No version identifier... old protocol client in strict mode?");
      sub_1000DE0C8((uint64_t)v12, 4, &v14);
    }
    int v9 = sub_1001584D8(a1, a2, v8);
    sub_100157794(*(void *)(a1 + 32), (uint64_t)&v14, 1);
    *a3 = (char)v14;
    sub_100157794(*(void *)(a1 + 32), (uint64_t)&v14, 4);
    *a4 = bswap32(v14);
    return (v9 + 9);
  }
}

void sub_100158494(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (v16) {
    __cxa_free_exception(v15);
  }
  _Unwind_Resume(exception_object);
}

std::string::size_type sub_1001584D8(uint64_t a1, std::string *this, std::string::size_type __n)
{
  if ((__n & 0x80000000) != 0)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 2;
  }
  int v5 = *(_DWORD *)(a1 + 40);
  if (v5 >= 1 && v5 < (int)__n)
  {
    int v11 = __cxa_allocate_exception(0x28uLL);
    v11[2] = 0;
    v11[3] = 0;
    *int v11 = off_100454818;
    v11[1] = 0;
    *((_DWORD *)v11 + 8) = 3;
  }
  if (__n)
  {
    std::string::resize(this, __n, 0);
    if ((this->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v8 = this;
    }
    else {
      std::string::size_type v8 = (std::string *)this->__r_.__value_.__r.__words[0];
    }
    sub_100157794(*(void *)(a1 + 32), (uint64_t)v8, __n);
    return __n;
  }
  else
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
    {
      *this->__r_.__value_.__l.__data_ = 0;
      this->__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      this->__r_.__value_.__s.__data_[0] = 0;
      *((unsigned char *)&this->__r_.__value_.__s + 23) = 0;
    }
    return __n;
  }
}

uint64_t sub_10015862C(uint64_t a1, _DWORD *a2, _DWORD *a3, signed int *a4)
{
  sub_100157794(*(void *)(a1 + 32), (uint64_t)&v13, 1);
  *a2 = v13;
  sub_100157794(*(void *)(a1 + 32), (uint64_t)&v14, 1);
  *a3 = v14;
  sub_100157794(*(void *)(a1 + 32), (uint64_t)&v15, 4);
  signed int v8 = bswap32(v15);
  if (v8 < 0)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 2;
  }
  signed int v9 = *(_DWORD *)(a1 + 44);
  if (v9 && v8 > v9)
  {
    unsigned __int8 v12 = __cxa_allocate_exception(0x28uLL);
    v12[2] = 0;
    v12[3] = 0;
    *unsigned __int8 v12 = off_100454818;
    v12[1] = 0;
    *((_DWORD *)v12 + 8) = 3;
  }
  *a4 = v8;
  return 6;
}

uint64_t sub_100158764(uint64_t a1, _DWORD *a2, signed int *a3)
{
  sub_100157794(*(void *)(a1 + 32), (uint64_t)&v12, 1);
  *a2 = v12;
  sub_100157794(*(void *)(a1 + 32), (uint64_t)&v13, 4);
  signed int v6 = bswap32(v13);
  if (v6 < 0)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 2;
  }
  signed int v7 = *(_DWORD *)(a1 + 44);
  if (v7) {
    BOOL v8 = v6 <= v7;
  }
  else {
    BOOL v8 = 1;
  }
  if (!v8)
  {
    int v11 = __cxa_allocate_exception(0x28uLL);
    v11[2] = 0;
    v11[3] = 0;
    *int v11 = off_100454818;
    v11[1] = 0;
    *((_DWORD *)v11 + 8) = 3;
  }
  *a3 = v6;
  return 5;
}

uint64_t sub_100158880(uint64_t a1, int a2)
{
  uint64_t v2 = 0;
  switch(a2)
  {
    case 2:
    case 3:
      sub_100157794(*(void *)(a1 + 32), (uint64_t)&v15, 1);
      return 1;
    case 4:
    case 10:
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = 8;
      int v7 = 8;
      goto LABEL_6;
    case 6:
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = 2;
      int v7 = 2;
      goto LABEL_6;
    case 8:
      uint64_t v5 = *(void *)(a1 + 32);
      uint64_t v6 = 4;
      int v7 = 4;
LABEL_6:
      sub_100157794(v5, (uint64_t)&v15, v7);
      return v6;
    case 11:
      memset(&v15, 0, sizeof(v15));
      sub_100157794(*(void *)(a1 + 32), (uint64_t)&v16, 4);
      uint64_t v2 = sub_1001584D8(a1, &v15, bswap32(v16)) + 4;
      if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_8;
      }
      goto LABEL_25;
    case 12:
      memset(&v15, 0, sizeof(v15));
      std::string::assign(&v15, "");
      for (int i = 0; ; i += sub_100158880(a1, v10) + 3)
      {
        sub_100157794(*(void *)(a1 + 32), (uint64_t)&v16, 1);
        uint64_t v10 = (char)v16;
        if (!(_BYTE)v16) {
          break;
        }
        sub_100157794(*(void *)(a1 + 32), (uint64_t)&v16, 2);
      }
      uint64_t v2 = (i + 1);
      if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_8;
      }
LABEL_25:
      operator delete(v15.__r_.__value_.__l.__data_);
      uint64_t result = v2;
      break;
    case 13:
      unsigned int v14 = 0;
      LODWORD(v15.__r_.__value_.__l.__data_) = 0;
      unsigned int v16 = 0;
      uint64_t v2 = sub_10015862C(a1, &v15, &v16, (signed int *)&v14);
      if (v14)
      {
        for (unsigned int j = 0; j < v14; ++j)
        {
          int v12 = sub_100158880(a1, LODWORD(v15.__r_.__value_.__l.__data_)) + v2;
          uint64_t v2 = v12 + sub_100158880(a1, v16);
        }
      }
      goto LABEL_8;
    case 14:
      LODWORD(v15.__r_.__value_.__l.__data_) = 0;
      unsigned int v16 = 0;
      uint64_t v2 = sub_100158764(a1, &v15, (signed int *)&v16);
      if (v16)
      {
        for (unsigned int k = 0; k < v16; ++k)
          uint64_t v2 = sub_100158880(a1, LODWORD(v15.__r_.__value_.__l.__data_)) + v2;
      }
      goto LABEL_8;
    case 15:
      LODWORD(v15.__r_.__value_.__l.__data_) = 0;
      unsigned int v16 = 0;
      uint64_t v2 = sub_100158764(a1, &v15, (signed int *)&v16);
      if (v16)
      {
        for (unsigned int m = 0; m < v16; ++m)
          uint64_t v2 = sub_100158880(a1, LODWORD(v15.__r_.__value_.__l.__data_)) + v2;
      }
      goto LABEL_8;
    default:
LABEL_8:
      uint64_t result = v2;
      break;
  }
  return result;
}

void sub_100158B1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100158B78(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100459808;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100158B98(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100459808;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

int *sub_100158BEC(uint64_t a1)
{
  return sub_100052AEC((int *)(a1 + 24));
}

void sub_100158BF8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100459858;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100158C18(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100459858;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_100158C6C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_100158C94()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100158D0C()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void **sub_100158D84(void **a1)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    uint64_t v3 = (uint64_t)a1[1];
    unint64_t v4 = v2;
    if ((void *)v3 != v2)
    {
      do
        uint64_t v3 = sub_100374180(v3 - 16);
      while ((void *)v3 != v2);
      unint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void *sub_100158DE0(void *result)
{
  uint64_t v1 = result;
  *uint64_t result = off_1004592E0;
  uint64_t v2 = (std::__shared_weak_count *)result[2];
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_100158E78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = operator new(0x20uLL);
  v3[1] = 0;
  void v3[2] = 0;
  *uint64_t v3 = off_10045A060;
  void v3[3] = off_10045A0B0;
  unint64_t v4 = operator new(0x38uLL);
  v4[1] = 0;
  v4[2] = 0;
  void *v4 = off_100459F80;
  v4[3] = off_100459FD0;
  v4[4] = a2;
  v4[6] = v4 + 3;
  sub_100160C18();
}

void sub_100159160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13)
{
}

void sub_100159190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_1001591AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_1000BA884(v11 - 64);
  sub_1000BA884((uint64_t)&a11);
  sub_1000BA884((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1001591D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = operator new(0x20uLL);
  v3[1] = 0;
  void v3[2] = 0;
  *uint64_t v3 = off_10045A060;
  void v3[3] = off_10045A0B0;
  unint64_t v4 = operator new(0x38uLL);
  v4[1] = 0;
  v4[2] = 0;
  void *v4 = off_10045A1B0;
  v4[3] = off_10045A200;
  v4[4] = a2;
  v4[6] = v4 + 3;
  sub_100161FBC();
}

void sub_1001594B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13)
{
}

void sub_1001594E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
}

void sub_100159504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_1000BA884(v11 - 64);
  sub_1000BA884((uint64_t)&a11);
  sub_1000BA884((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_100159528(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 80)) {
    *(unsigned char *)(a1 + 80) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 48);
    unint64_t v4 = *(void **)(a1 + 40);
    if (v3 != v2)
    {
      do
        uint64_t v3 = sub_100374180(v3 - 16);
      while (v3 != v2);
      unint64_t v4 = *(void **)(a1 + 40);
    }
    *(void *)(a1 + 48) = v2;
    operator delete(v4);
  }
  *(void *)a1 = off_1004592E0;
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v5 || atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  return a1;
}

uint64_t sub_100159604(uint64_t a1, uint64_t *a2)
{
  if (*(unsigned char *)(a1 + 68))
  {
    unint64_t v4 = sub_100017318((_DWORD *)*a2);
    sub_100045EC8(a1 + 72, (uint64_t)v4);
  }
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 24) + 32))();
  if (result)
  {
    uint64_t v6 = a1 + 32;
    return sub_1000460F8(*a2, &v6);
  }
  return result;
}

uint64_t sub_10015969C(uint64_t a1)
{
  return *(unsigned __int8 *)(*(void *)(a1 + 8) + 32);
}

double sub_1001596A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)&double result = sub_100041AD4(a1 + 48, a2 + 48).n128_u64[0];
  return result;
}

void sub_1001596EC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void *)(v1 + 40);
  if (v3) {
    sub_1003A3868(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_100159704(uint64_t a1)
{
  nullsub_8(a1 + 48);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 40);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
}

uint64_t sub_10015978C(uint64_t a1)
{
  nullsub_8(a1 + 16);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_100159810(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 - 16);
  uint64_t v5 = *(std::__shared_weak_count **)(a1 - 8);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_100041EC0(v4 + 3064, a2);
  sub_100041808(a1 - 24, 7, *(void *)(a2 + 8));
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_1001598CC(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1003A3868(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001598E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 - 24);
  uint64_t v5 = *(std::__shared_weak_count **)(a1 - 16);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_100041EC0(v4 + 3064, a2);
  sub_100041808(a1 - 32, 7, *(void *)(a2 + 8));
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_1001599A0(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1003A3868(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001599B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_100159A98(v4 + 1384, a2);
  sub_100041808(a1, 11, *(void *)(a2 + 8));
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_100159A84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100159A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8;
  if (*(void *)(a1 + 48))
  {
    sub_1000AE4B0(v7, "");
    sub_10014C790("Unexpected request to record legacy data for ", &v9);
    sub_1000DA214(v4, &v10);
    sub_10016A2C4((uint64_t)v7, (uint64_t)&v9, 2);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v10.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_5:
        if ((v8 & 0x80000000) == 0) {
          goto LABEL_6;
        }
LABEL_9:
        operator delete(v7[0]);
LABEL_6:
        sub_1000D11E0((uint64_t)&__p);
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }
  sub_1000484E8(a1);
  sub_1001ABE78(a2, (_DWORD *)(a1 + 80));
  *(unsigned char *)a1 = 1;
  return a1;
}

void sub_100159BC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100159C80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 - 16);
  uint64_t v5 = *(std::__shared_weak_count **)(a1 - 8);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_100159A98(v4 + 1384, a2);
  sub_100041808(a1 - 24, 11, *(void *)(a2 + 8));
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_100159D3C(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1003A3868(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100159D54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 - 24);
  uint64_t v5 = *(std::__shared_weak_count **)(a1 - 16);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_100159A98(v4 + 1384, a2);
  sub_100041808(a1 - 32, 11, *(void *)(a2 + 8));
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_100159E10(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1003A3868(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100159E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1000A4744(v4 + 208, a2);
  sub_100041808(a1, 14, *(void *)(a2 + 16));
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_100159EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100159F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 - 16);
  uint64_t v5 = *(std::__shared_weak_count **)(a1 - 8);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1000A4744(v4 + 208, a2);
  sub_100041808(a1 - 24, 14, *(void *)(a2 + 16));
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_100159FC4(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1003A3868(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100159FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v9 = *(void *)(a1 + 8);
  char v8 = *(std::__shared_weak_count **)(a1 + 16);
  v11[20] = v9;
  v11[21] = v8;
  if (v8) {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10036C138(a2, a3, a4, (uint64_t)v11);
  sub_10015A1B8(v9 + 4240, (uint64_t)v11);
  sub_1001AE958((uint64_t)v11);
  if ((*(unsigned char *)(a1 + 64) & 0x10) != 0)
  {
    sub_10036C47C(a2, a3, a4, (uint64_t)v11);
    sub_10000AAE8(v9 + 6576);
    if (*(void *)(v9 + 6624)) {
      sub_1000213B4((wireless_diagnostics::google::protobuf::MessageLite *)v11);
    }
    *(unsigned char *)(v9 + 6576) = 1;
    sub_1000243FC(v11);
  }
  sub_100041808(a1, 1, a2);
  if (*(unsigned char *)(a1 + 68))
  {
    uint64_t v10 = a1 + 72;
    if (*(unsigned char *)(a1 + 97)) {
      sub_10029FF30(v10, a2);
    }
    else {
      sub_10029FEF0(v10, a2);
    }
  }
  if (v8)
  {
    if (!atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_10015A144(_Unwind_Exception *a1)
{
  sub_1000BA884(v1 - 64);
  _Unwind_Resume(a1);
}

void sub_10015A158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000243FC(&a9);
  sub_1000BA884(v9 - 64);
  _Unwind_Resume(a1);
}

void sub_10015A174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1001AE958((uint64_t)&a9);
  sub_1000BA884(v9 - 64);
  _Unwind_Resume(a1);
}

void sub_10015A190(_Unwind_Exception *a1)
{
  sub_1000BA884(v1 - 64);
  _Unwind_Resume(a1);
}

void sub_10015A1A4(_Unwind_Exception *a1)
{
  sub_1000BA884(v1 - 64);
  _Unwind_Resume(a1);
}

uint64_t sub_10015A1B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8;
  if (*(void *)(a1 + 48))
  {
    sub_1000AE4B0(v7, "");
    sub_10014C790("Unexpected request to record legacy data for ", &v9);
    sub_1000DA214(v4, &v10);
    sub_10016A2C4((uint64_t)v7, (uint64_t)&v9, 2);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v10.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_5:
        if ((v8 & 0x80000000) == 0) {
          goto LABEL_6;
        }
LABEL_9:
        operator delete(v7[0]);
LABEL_6:
        sub_1000D11E0((uint64_t)&__p);
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }
  sub_1000484E8(a1);
  sub_1001AEEE4(a2, (_DWORD *)(a1 + 80));
  *(unsigned char *)a1 = 1;
  return a1;
}

void sub_10015A2E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015A3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
}

void sub_10015A3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
}

void sub_10015A3B0(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10015A490(v4 + 1720, a2);
  sub_100041808(a1, 5, a2[1]);
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_10015A47C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10015A490(uint64_t a1, void *a2)
{
  uint64_t v4 = a1 + 8;
  if (*(void *)(a1 + 48))
  {
    sub_1000AE4B0(v7, "");
    sub_10014C790("Unexpected request to record legacy data for ", &v9);
    sub_1000DA214(v4, &v10);
    sub_10016A2C4((uint64_t)v7, (uint64_t)&v9, 2);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v10.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_5:
        if ((v8 & 0x80000000) == 0) {
          goto LABEL_6;
        }
LABEL_9:
        operator delete(v7[0]);
LABEL_6:
        sub_1000D11E0((uint64_t)&__p);
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }
  sub_1000484E8(a1);
  sub_1001B79F0(a2, (_DWORD *)(a1 + 80));
  *(unsigned char *)a1 = 1;
  return a1;
}

void sub_10015A5C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015A678(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a1 - 16);
  uint64_t v5 = *(std::__shared_weak_count **)(a1 - 8);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10015A490(v4 + 1720, a2);
  sub_100041808(a1 - 24, 5, a2[1]);
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_10015A734(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1003A3868(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015A74C(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(a1 - 24);
  uint64_t v5 = *(std::__shared_weak_count **)(a1 - 16);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10015A490(v4 + 1720, a2);
  sub_100041808(a1 - 32, 5, a2[1]);
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_10015A808(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1003A3868(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015A820(uint64_t a1, uint64_t a2)
{
}

void sub_10015A828(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_100048324(v2 + 2728, a2);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_10015A8CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10015A8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 - 16);
  uint64_t v3 = *(std::__shared_weak_count **)(a1 - 8);
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_100048324(v2 + 2728, a2);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_10015A974(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1003A3868(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015A98C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 - 24);
  uint64_t v3 = *(std::__shared_weak_count **)(a1 - 16);
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_100048324(v2 + 2728, a2);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_10015AA20(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1003A3868(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015AA5C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  if (a3 <= 2) {
    sub_100041808(a1, a3 + 18, a2);
  }
  char v8 = *(unsigned __int8 **)(a1 + 8);
  std::string v9 = *(std::__shared_weak_count **)(a1 + 16);
  std::string::size_type v18 = v8;
  std::string::size_type v19 = v9;
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  std::string v10 = sub_10015AC8C(v8, a2, a3, a4);
  uint64_t v11 = (void *)*((void *)v10 + 2);
  sub_100364068(a2, 1000000000);
  if (([v11 appendPixelBuffer:a4 withPresentationTime:v17] & 1) == 0)
  {
    if (qword_10047BED8 != -1) {
      dispatch_once(&qword_10047BED8, &stru_100459D18);
    }
    int v12 = (id)qword_10047BEE0;
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      id v13 = [*(id *)v10 status];
      unsigned int v14 = [*(id *)v10 error];
      id v15 = [v14 description];
      id v16 = [v15 UTF8String];
      *(_DWORD *)buf = 67109634;
      unsigned int v21 = a3;
      __int16 v22 = 2048;
      id v23 = v13;
      __int16 v24 = 2080;
      id v25 = v16;
      _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "failed to write frame for source %hhu - dropping. writer status = %ld %s", buf, 0x1Cu);
    }
  }
  if (v9)
  {
    if (!atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_10015AC4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);

  sub_1000BA884((uint64_t)va);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_10015AC8C(unsigned __int8 *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4 = a1 + 6744;
  if (a3 == 2)
  {
    uint64_t v4 = a1 + 6808;
    if (a1[6808]) {
      return v4 + 8;
    }
  }
  else if (a3 == 1)
  {
    if (*v4) {
      return v4 + 8;
    }
  }
  else
  {
    uint64_t v4 = a1 + 6776;
    if (a1[6776]) {
      return v4 + 8;
    }
  }
  sub_10015D2DC(a2, (uint64_t)(a1 + 8), a3, a4, &v15);
  int v6 = *v4;
  id v7 = v15;
  id v15 = 0;
  if (v6)
  {
    char v8 = (void *)*((void *)v4 + 1);
    *((void *)v4 + 1) = v7;

    uint64_t v9 = v16;
    *(void *)&long long v16 = 0;
    std::string v10 = (void *)*((void *)v4 + 2);
    *((void *)v4 + 2) = v9;

    uint64_t v11 = *((void *)&v16 + 1);
    *((void *)&v16 + 1) = 0;
    int v12 = (void *)*((void *)v4 + 3);
    *((void *)v4 + 3) = v11;

    id v13 = (void *)*((void *)&v16 + 1);
  }
  else
  {
    id v13 = 0;
    *((void *)v4 + 1) = v7;
    long long v14 = v16;
    long long v16 = 0uLL;
    *((_OWORD *)v4 + 1) = v14;
    unsigned __int8 *v4 = 1;
  }

  return v4 + 8;
}

id sub_10015AD8C()
{
  if (qword_10047BED8 == -1)
  {
    uint64_t v0 = (void *)qword_10047BEE0;
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_100459D18);
    uint64_t v0 = (void *)qword_10047BEE0;
  }
  return v0;
}

void sub_10015ADFC(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
}

void sub_10015AE04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_100048324(v2 + 2392, a2);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_10015AEA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10015AEBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 - 24);
  uint64_t v3 = *(std::__shared_weak_count **)(a1 - 16);
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_100048324(v2 + 2392, a2);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_10015AF50(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1003A3868(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015AF68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if ((*(unsigned char *)(v2 + 6840) & 8) != 0) {
    sub_10015B02C(v2 + 3400, a2);
  }
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_10015B018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10015B02C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8;
  if (*(void *)(a1 + 48))
  {
    sub_1000AE4B0(v7, "");
    sub_10014C790("Unexpected request to record legacy data for ", &v9);
    sub_1000DA214(v4, &v10);
    sub_10016A2C4((uint64_t)v7, (uint64_t)&v9, 2);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v10.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_5:
        if ((v8 & 0x80000000) == 0) {
          goto LABEL_6;
        }
LABEL_9:
        operator delete(v7[0]);
LABEL_6:
        sub_1000D11E0((uint64_t)&__p);
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }
  sub_1000484E8(a1);
  sub_1001A0E4C(a2, (_DWORD *)(a1 + 80));
  *(unsigned char *)a1 = 1;
  return a1;
}

void sub_10015B15C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015B214(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 16);
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10015B2CC(v2 + 2560, a2);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_10015B2B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10015B2CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8;
  if (*(void *)(a1 + 48))
  {
    sub_1000AE4B0(v7, "");
    sub_10014C790("Unexpected request to record legacy data for ", &v9);
    sub_1000DA214(v4, &v10);
    sub_10016A2C4((uint64_t)v7, (uint64_t)&v9, 2);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v10.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_5:
        if ((v8 & 0x80000000) == 0) {
          goto LABEL_6;
        }
LABEL_9:
        operator delete(v7[0]);
LABEL_6:
        sub_1000D11E0((uint64_t)&__p);
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }
  sub_1000484E8(a1);
  sub_1001A45E4(a2, (_DWORD *)(a1 + 80));
  *(unsigned char *)a1 = 1;
  return a1;
}

void sub_10015B3FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015B4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 - 16);
  uint64_t v3 = *(std::__shared_weak_count **)(a1 - 8);
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10015B2CC(v2 + 2560, a2);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_10015B548(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1003A3868(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015B560(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 - 24);
  uint64_t v3 = *(std::__shared_weak_count **)(a1 - 16);
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10015B2CC(v2 + 2560, a2);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_10015B5F4(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1003A3868(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015B62C(uint64_t a1, uint64_t a2)
{
}

void sub_10015B63C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10015B71C(v4 + 3232, a2);
  sub_100041808(a1, 16, *(void *)(a2 + 8));
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_10015B708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10015B71C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8;
  if (*(void *)(a1 + 48))
  {
    sub_1000AE4B0(v7, "");
    sub_10014C790("Unexpected request to record legacy data for ", &v9);
    sub_1000DA214(v4, &v10);
    sub_10016A2C4((uint64_t)v7, (uint64_t)&v9, 2);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v10.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_5:
        if ((v8 & 0x80000000) == 0) {
          goto LABEL_6;
        }
LABEL_9:
        operator delete(v7[0]);
LABEL_6:
        sub_1000D11E0((uint64_t)&__p);
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }
  sub_1000484E8(a1);
  sub_1001A7D38(a2, (_DWORD *)(a1 + 80));
  *(unsigned char *)a1 = 1;
  return a1;
}

void sub_10015B84C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015B904(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 - 16);
  uint64_t v5 = *(std::__shared_weak_count **)(a1 - 8);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10015B71C(v4 + 3232, a2);
  sub_100041808(a1 - 24, 16, *(void *)(a2 + 8));
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_10015B9C0(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1003A3868(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015B9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 - 24);
  uint64_t v5 = *(std::__shared_weak_count **)(a1 - 16);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10015B71C(v4 + 3232, a2);
  sub_100041808(a1 - 32, 16, *(void *)(a2 + 8));
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_10015BA94(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1003A3868(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015BAAC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 16);
  v6[8] = v5;
  v6[9] = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10015BC00(v5 + 376, a2);
  if ((*(unsigned char *)(a1 + 64) & 0x10) != 0) {
    sub_100357064(v6);
  }
  sub_100041808(a1, 17, *(void *)(a2 + 16));
  if (v4)
  {
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_10015BBBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_1000BA884((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10015BBD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
}

void sub_10015BBEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_1000BA884((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10015BC00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8;
  if (*(void *)(a1 + 48))
  {
    sub_1000AE4B0(v7, "");
    sub_10014C790("Unexpected request to record legacy data for ", &v9);
    sub_1000DA214(v4, &v10);
    sub_10016A2C4((uint64_t)v7, (uint64_t)&v9, 2);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v10.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_5:
        if ((v8 & 0x80000000) == 0) {
          goto LABEL_6;
        }
LABEL_9:
        operator delete(v7[0]);
LABEL_6:
        sub_1000D11E0((uint64_t)&__p);
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }
  sub_1000484E8(a1);
  sub_1001A89B8(a2, (_DWORD *)(a1 + 80));
  *(unsigned char *)a1 = 1;
  return a1;
}

void sub_10015BD30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015BDE8(uint64_t a1, uint64_t a2)
{
}

void sub_10015BDF0(uint64_t a1, uint64_t a2)
{
}

void sub_10015BDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10015BED8(v4 + 1552, a2);
  sub_100041808(a1, 21, *(void *)(a2 + 8));
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_10015BEC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10015BED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8;
  if (*(void *)(a1 + 48))
  {
    sub_1000AE4B0(v7, "");
    sub_10014C790("Unexpected request to record legacy data for ", &v9);
    sub_1000DA214(v4, &v10);
    sub_10016A2C4((uint64_t)v7, (uint64_t)&v9, 2);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v10.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_5:
        if ((v8 & 0x80000000) == 0) {
          goto LABEL_6;
        }
LABEL_9:
        operator delete(v7[0]);
LABEL_6:
        sub_1000D11E0((uint64_t)&__p);
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }
  sub_1000484E8(a1);
  sub_1001B01A0(a2, (_DWORD *)(a1 + 80));
  *(unsigned char *)a1 = 1;
  return a1;
}

void sub_10015C008(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015C0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 - 16);
  uint64_t v5 = *(std::__shared_weak_count **)(a1 - 8);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10015BED8(v4 + 1552, a2);
  sub_100041808(a1 - 24, 21, *(void *)(a2 + 8));
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_10015C17C(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1003A3868(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015C194(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 - 24);
  uint64_t v5 = *(std::__shared_weak_count **)(a1 - 16);
  if (v5) {
    atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_10015BED8(v4 + 1552, a2);
  sub_100041808(a1 - 32, 21, *(void *)(a2 + 8));
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_10015C250(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1003A3868(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10015C268(uint64_t result)
{
  if ((*(unsigned char *)(result + 64) & 0x10) != 0)
  {
    uint64_t v1 = *(void *)(result + 16);
    v2[8] = *(void *)(result + 8);
    v2[9] = v1;
    if (v1) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v1 + 8), 1uLL, memory_order_relaxed);
    }
    sub_1003564AC(v2);
  }
  return result;
}

void sub_10015C34C(_Unwind_Exception *a1)
{
  sub_1000BA884(v1 - 48);
  _Unwind_Resume(a1);
}

void sub_10015C360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000243FC(&a9);
  sub_1000BA884(v9 - 48);
  _Unwind_Resume(a1);
}

uint64_t sub_10015C37C(uint64_t a1)
{
  return sub_10015C268(a1 - 24);
}

uint64_t sub_10015C384(uint64_t a1)
{
  return sub_10015C268(a1 - 32);
}

void sub_10015C38C(uint64_t a1)
{
}

void sub_10015C394(uint64_t a1)
{
}

void sub_10015C39C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  v2[8] = *(void *)(a1 + 8);
  v2[9] = v1;
  if (v1) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v1 + 8), 1uLL, memory_order_relaxed);
  }
  sub_100356844(v2);
}

void sub_10015C478(_Unwind_Exception *a1)
{
  sub_1000BA884(v1 - 48);
  _Unwind_Resume(a1);
}

void sub_10015C48C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000243FC(&a9);
  sub_1000BA884(v9 - 48);
  _Unwind_Resume(a1);
}

void sub_10015C4A8(uint64_t a1)
{
}

void sub_10015C4B0(uint64_t a1)
{
}

void sub_10015C4B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  v2[8] = *(void *)(a1 + 8);
  v2[9] = v1;
  if (v1) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v1 + 8), 1uLL, memory_order_relaxed);
  }
  sub_100356A34(v2);
}

void sub_10015C594(_Unwind_Exception *a1)
{
  sub_1000BA884(v1 - 48);
  _Unwind_Resume(a1);
}

void sub_10015C5A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000243FC(&a9);
  sub_1000BA884(v9 - 48);
  _Unwind_Resume(a1);
}

void sub_10015C5C4(uint64_t a1)
{
}

void sub_10015C5CC(uint64_t a1)
{
}

void sub_10015C5D4(uint64_t a1)
{
}

void sub_10015C5DC(uint64_t a1)
{
}

void sub_10015C5F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  v2[8] = *(void *)(a1 + 8);
  v2[9] = v1;
  if (v1) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v1 + 8), 1uLL, memory_order_relaxed);
  }
  sub_100356C24(v2);
}

void sub_10015C6CC(_Unwind_Exception *a1)
{
  sub_1000BA884(v1 - 48);
  _Unwind_Resume(a1);
}

void sub_10015C6E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000243FC(&a9);
  sub_1000BA884(v9 - 48);
  _Unwind_Resume(a1);
}

void sub_10015C6FC(uint64_t a1)
{
}

void sub_10015C704(uint64_t a1)
{
}

void sub_10015C70C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 16);
  uint64_t v12 = v3;
  id v13 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  uint64_t v5 = (unsigned char *)(v3 + 40);
  int v6 = (unsigned char *)(v3 + 4576);
  do
  {
    if (*v5)
    {
      sub_10015C88C((uint64_t)v5, (uint64_t)&__p);
      sub_100162A70((void **)a2, *(void *)(a2 + 8), (std::string *)__p, v11, 0xAAAAAAAAAAAAAAABLL * (((char *)v11 - (unsigned char *)__p) >> 3));
      char v8 = (std::string *)__p;
      if (__p)
      {
        uint64_t v9 = v11;
        id v7 = __p;
        if (v11 != __p)
        {
          do
          {
            if (SHIBYTE(v9[-1].__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v9[-1].__r_.__value_.__l.__data_);
            }
            --v9;
          }
          while (v9 != v8);
          id v7 = __p;
        }
        uint64_t v11 = v8;
        operator delete(v7);
      }
    }
    v5 += 168;
  }
  while (v5 != v6);
  if (v4)
  {
    if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_10015C84C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v4 = va_arg(va1, void *);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  sub_1000E0AA4((void **)va);
  sub_1000E0AA4(v2);
  sub_1000BA884((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10015C870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000E0AA4(v5);
  sub_1000BA884((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10015C88C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  if (*(void *)(a1 + 48))
  {
    if (!*(unsigned char *)(a1 + 64)) {
      *(void *)(a2 + 8) = sub_1000E2670((char **)a2, a1 + 8);
    }
    sub_10005349C(a1 + 8, (uint64_t)__p);
    unint64_t v4 = *(void *)(a2 + 8);
    if (v4 >= *(void *)(a2 + 16))
    {
      uint64_t v6 = sub_10008CF94((void **)a2, (uint64_t)__p);
      int v7 = SHIBYTE(v9);
      *(void *)(a2 + 8) = v6;
      if (v7 < 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
      long long v5 = *(_OWORD *)__p;
      *(void *)(v4 + 16) = v9;
      *(_OWORD *)unint64_t v4 = v5;
      *(void *)(a2 + 8) = v4 + 24;
    }
  }
  else
  {
    *(void *)(a2 + 8) = sub_1000E2670((char **)a2, a1 + 8);
  }
}

void sub_10015C95C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    sub_1000E0AA4(v15);
    _Unwind_Resume(a1);
  }
  sub_1000E0AA4(v15);
  _Unwind_Resume(a1);
}

void sub_10015C9A0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 80)) {
    *(unsigned char *)(a1 + 80) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 40);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 48);
    unint64_t v4 = *(void **)(a1 + 40);
    if (v3 != v2)
    {
      do
        uint64_t v3 = sub_100374180(v3 - 16);
      while (v3 != v2);
      unint64_t v4 = *(void **)(a1 + 40);
    }
    *(void *)(a1 + 48) = v2;
    operator delete(v4);
  }
  *(void *)a1 = off_1004592E0;
  long long v5 = *(std::__shared_weak_count **)(a1 + 16);
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }

  operator delete();
}

void sub_10015CA8C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v4 = a1;
  memset(&v5, 0, sizeof(v5));
  if ((sub_10015E6D8((uint64_t)&v4, &v5) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v6);
    v6.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v6);
  }
  uint64_t v3 = std::string::insert(&v5, 0, "CombinedLogger ");
  *a2 = *v3;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v5.__r_.__value_.__l.__data_);
  }
}

void sub_10015CB60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, std::bad_cast a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015CB90(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56)) {
    *(unsigned char *)(a1 + 56) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 24);
    uint64_t v4 = *(void **)(a1 + 16);
    if (v3 != v2)
    {
      do
        uint64_t v3 = sub_100374180(v3 - 16);
      while (v3 != v2);
      uint64_t v4 = *(void **)(a1 + 16);
    }
    *(void *)(a1 + 24) = v2;
    operator delete(v4);
  }
  *(void *)(a1 - 24) = off_1004592E0;
  std::string v5 = *(std::__shared_weak_count **)(a1 - 8);
  if (v5)
  {
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_10015CC74(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56)) {
    *(unsigned char *)(a1 + 56) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 24);
    uint64_t v4 = *(void **)(a1 + 16);
    if (v3 != v2)
    {
      do
        uint64_t v3 = sub_100374180(v3 - 16);
      while (v3 != v2);
      uint64_t v4 = *(void **)(a1 + 16);
    }
    *(void *)(a1 + 24) = v2;
    operator delete(v4);
  }
  *(void *)(a1 - 24) = off_1004592E0;
  std::string v5 = *(std::__shared_weak_count **)(a1 - 8);
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }

  operator delete();
}

void sub_10015CD6C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
}

void sub_10015CD74(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48)) {
    *(unsigned char *)(a1 + 48) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 16);
    uint64_t v4 = *(void **)(a1 + 8);
    if (v3 != v2)
    {
      do
        uint64_t v3 = sub_100374180(v3 - 16);
      while (v3 != v2);
      uint64_t v4 = *(void **)(a1 + 8);
    }
    *(void *)(a1 + 16) = v2;
    operator delete(v4);
  }
  *(void *)(a1 - 32) = off_1004592E0;
  std::string v5 = *(std::__shared_weak_count **)(a1 - 16);
  if (v5)
  {
    if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_10015CE58(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 48)) {
    *(unsigned char *)(a1 + 48) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 16);
    uint64_t v4 = *(void **)(a1 + 8);
    if (v3 != v2)
    {
      do
        uint64_t v3 = sub_100374180(v3 - 16);
      while (v3 != v2);
      uint64_t v4 = *(void **)(a1 + 8);
    }
    *(void *)(a1 + 16) = v2;
    operator delete(v4);
  }
  *(void *)(a1 - 32) = off_1004592E0;
  std::string v5 = *(std::__shared_weak_count **)(a1 - 16);
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }

  operator delete();
}

uint64_t sub_10015CF50(uint64_t a1, uint64_t a2, int a3, long long *a4)
{
  sub_10000C898((uint64_t)v20);
  int v7 = strerror(a3);
  size_t v8 = strlen(v7);
  uint64_t v9 = sub_10002986C(v21, (uint64_t)v7, v8);
  sub_10002986C(v9, (uint64_t)", ", 2);
  std::string v10 = (void *)std::ostream::operator<<();
  uint64_t v11 = sub_10002986C(v10, (uint64_t)", ", 2);
  uint64_t v12 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)a2 + 16))(a2);
  size_t v13 = strlen(v12);
  long long v14 = sub_10002986C(v11, (uint64_t)v12, v13);
  id v15 = sub_10002986C(v14, (uint64_t)", ", 2);
  if (*((char *)a4 + 23) < 0)
  {
    sub_1000559FC(&__dst, *(void **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long __dst = *a4;
    uint64_t v24 = *((void *)a4 + 2);
  }
  sub_1000DA93C(v15, (unsigned __int8 *)&__dst, 0x26u, 0x22u);
  if (SHIBYTE(v24) < 0) {
    operator delete((void *)__dst);
  }
  if (qword_10047BED8 != -1) {
    dispatch_once(&qword_10047BED8, &stru_100459D18);
  }
  long long v16 = (id)qword_10047BEE0;
  if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
  {
    std::stringbuf::str();
    uint64_t v17 = v24 >= 0 ? &__dst : (long long *)__dst;
    *(_DWORD *)buf = 136380675;
    long long v26 = v17;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "Error writing to stream: %{private}s", buf, 0xCu);
    if (SHIBYTE(v24) < 0) {
      operator delete((void *)__dst);
    }
  }

  *(void *)((char *)v20
  v21[0] = v18;
  if (v22 < 0) {
    operator delete((void *)v21[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return std::ios::~ios();
}

void sub_10015D294(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);

  sub_1000DEA14((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10015D2DC(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v40 = 0;
  if (a3 == 2)
  {
    *((unsigned char *)&v42.__r_.__value_.__s + 23) = 10;
    strcpy((char *)&v42, "screen.mp4");
    if ((*(char *)(a2 + 23) & 0x80000000) == 0)
    {
      *(_OWORD *)buf = *(_OWORD *)a2;
      *(void *)&buf[16] = *(void *)(a2 + 16);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (a3 == 1)
  {
    *((unsigned char *)&v42.__r_.__value_.__s + 23) = 9;
    strcpy((char *)&v42, "front.mp4");
    if ((*(char *)(a2 + 23) & 0x80000000) == 0)
    {
      *(_OWORD *)buf = *(_OWORD *)a2;
      *(void *)&buf[16] = *(void *)(a2 + 16);
      goto LABEL_11;
    }
LABEL_10:
    sub_1000559FC(buf, *(void **)a2, *(void *)(a2 + 8));
    goto LABEL_11;
  }
  if (a3) {
    goto LABEL_15;
  }
  *((unsigned char *)&v42.__r_.__value_.__s + 23) = 8;
  strcpy((char *)&v42, "back.mp4");
  if (*(char *)(a2 + 23) < 0) {
    goto LABEL_10;
  }
  *(_OWORD *)buf = *(_OWORD *)a2;
  *(void *)&buf[16] = *(void *)(a2 + 16);
LABEL_11:
  sub_1000512AC((std::string *)buf, (uint64_t)&v42);
  if (SHIBYTE(v40) < 0) {
    operator delete(__p[0]);
  }
  *(_OWORD *)std::string __p = *(_OWORD *)buf;
  uint64_t v40 = *(void *)&buf[16];
  buf[23] = 0;
  buf[0] = 0;
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v42.__r_.__value_.__l.__data_);
  }
LABEL_15:
  uint64_t v9 = sub_1003640F8(a4);
  uint64_t v10 = sub_100364104(a4);
  if (qword_10047BED8 == -1)
  {
    uint64_t v11 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  dispatch_once(&qword_10047BED8, &stru_100459D18);
  uint64_t v11 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO))
  {
LABEL_17:
    *(_DWORD *)buf = 67109632;
    *(_DWORD *)&uint8_t buf[4] = a3;
    *(_WORD *)&buf[8] = 2048;
    *(void *)&buf[10] = v9;
    *(_WORD *)&buf[18] = 2048;
    *(void *)&buf[20] = v10;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Recording source %hhu at %lu x %lu", buf, 0x1Cu);
  }
LABEL_18:
  uint64_t v12 = off_10047D0F0();
  v46[0] = v12;
  size_t v13 = +[NSNumber numberWithUnsignedLong:v9];
  v47[0] = v13;
  long long v14 = off_10047D0F8();
  v46[1] = v14;
  id v15 = +[NSNumber numberWithUnsignedLong:v10];
  v47[1] = v15;
  long long v16 = off_10047D0E0();
  unsigned int v46[2] = v16;
  uint64_t v17 = off_10047D0E8();
  v47[2] = v17;
  uint64_t v18 = +[NSDictionary dictionaryWithObjects:v47 forKeys:v46 count:3];

  Class v19 = off_10047D0A8();
  unint64_t v20 = off_10047D0D0();
  unsigned int v21 = [(objc_class *)v19 assetWriterInputWithMediaType:v20 outputSettings:v18];

  [v21 setExpectsMediaDataInRealTime:1];
  id v22 = objc_alloc((Class)NSURL);
  if (v40 >= 0) {
    id v23 = __p;
  }
  else {
    id v23 = (void **)__p[0];
  }
  uint64_t v24 = +[NSString stringWithUTF8String:v23];
  id v25 = [v22 initFileURLWithPath:v24];

  id v26 = objc_alloc(off_10047D0A0());
  long long v27 = off_10047D0D8();
  id v38 = 0;
  id v28 = [v26 initWithURL:v25 fileType:v27 error:&v38];
  id v29 = v38;

  if (v29)
  {
    __cxa_allocate_exception(0x40uLL);
    sub_1000AE4B0(&v42, "Failed to create video writer");
    std::runtime_error::runtime_error(&v41, &v42);
    v41.__vftable = (std::runtime_error_vtbl *)&off_100453860;
    sub_10018E868((uint64_t)v37);
    sub_1000D1698(&v41, (uint64_t)"static AVWriter sensors::CombinedState::createCameraWriter(std::chrono::nanoseconds, const fs::path &, VideoSource, CVPixelBufferRef)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/sensors/sensor_logger.mm", 398, (uint64_t)v37);
  }
  if (([v28 canAddInput:v21] & 1) == 0)
  {
    sub_1000AE4B0(&v42, "");
    sub_10015E5F4("Can't add video writer", (std::string *)buf);
    sub_10016A2C4((uint64_t)&v42, (uint64_t)buf, 1);
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v42.__r_.__value_.__l.__data_);
    }
    sub_1000D11E0((uint64_t)&v41);
  }
  [v28 addInput:v21];
  a5[1] = 0;
  a5[2] = 0;
  id v30 = v28;
  *a5 = v30;
  id v31 = objc_alloc(off_10047D0B0());
  uint64_t v43 = off_10047D120();
  int v44 = &off_10046F058;
  char v32 = +[NSDictionary dictionaryWithObjects:&v44 forKeys:&v43 count:1];
  a5[2] = [v31 initWithAssetWriterInput:v21 sourcePixelBufferAttributes:v32];

  long long v35 = 0uLL;
  uint64_t v36 = 0;
  sub_100364068(a1, 1000000000);
  if (([v30 startWriting] & 1) == 0)
  {
    sub_1000AE4B0(&v42, "");
    sub_10015E644("Failed to start video asset writer", (std::string *)buf);
    sub_10016A2C4((uint64_t)&v42, (uint64_t)buf, 1);
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v42.__r_.__value_.__l.__data_);
    }
    sub_1000D11E0((uint64_t)&v41);
  }
  long long v33 = v35;
  uint64_t v34 = v36;
  [v30 startSessionAtSourceTime:&v33];

  if (SHIBYTE(v40) < 0) {
    operator delete(__p[0]);
  }
}

void sub_10015DA14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,uint64_t a39,std::runtime_error a40,int a41,__int16 a42,char a43,char a44)
{
  if (a31 < 0) {
    operator delete(__p);
  }
  sub_10015DC38(v44);

  if (a24 < 0)
  {
    operator delete(a19);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

id *sub_10015DC38(id *a1)
{
  return a1;
}

uint64_t sub_10015DC74(uint64_t a1)
{
  return a1;
}

void sub_10015DCA0()
{
}

void sub_10015DF2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_10015DFEC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10015DF40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_10015DFEC((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10015DF5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10015DFEC(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_10015E098()
{
}

void sub_10015E100(uint64_t a1)
{
  operator delete();
}

void sub_10015E14C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  sub_1000CD728((const char *)((unint64_t)"P11tag_nserror" & 0x7FFFFFFFFFFFFFFFLL), &v13);
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)&v13;
  }
  else {
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)v13.__r_.__value_.__r.__words[0];
  }
  std::string::insert(&v13, v4, 91);
  std::string v14 = v13;
  memset(&v13, 0, sizeof(v13));
  std::string v5 = std::string::append(&v14, "] = ");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v15.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v15.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  sub_10015E390((id *)(a1 + 8), __p);
  if ((v12 & 0x80u) == 0) {
    int v7 = __p;
  }
  else {
    int v7 = (void **)__p[0];
  }
  if ((v12 & 0x80u) == 0) {
    std::string::size_type v8 = v12;
  }
  else {
    std::string::size_type v8 = (std::string::size_type)__p[1];
  }
  uint64_t v9 = std::string::append(&v15, (const std::string::value_type *)v7, v8);
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v16.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v16.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  std::string::push_back(&v16, 10);
  *a2 = v16;
  memset(&v16, 0, sizeof(v16));
  if ((char)v12 < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_17;
    }
  }
  else if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v15.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_13:
    if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_18:
    operator delete(v13.__r_.__value_.__l.__data_);
    return;
  }
LABEL_17:
  operator delete(v14.__r_.__value_.__l.__data_);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_18;
  }
}

void sub_10015E2CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0)
  {
    operator delete(*(void **)(v33 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a33 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_6:
  }
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

void sub_10015E390(id *a1@<X0>, void *a2@<X8>)
{
  id v9 = [*a1 description];
  uint64_t v3 = (const char *)[v9 UTF8String];
  size_t v4 = strlen(v3);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v6 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v6 = v4 | 7;
    }
    uint64_t v7 = v6 + 1;
    std::string::size_type v8 = operator new(v6 + 1);
    a2[1] = v5;
    a2[2] = v7 | 0x8000000000000000;
    *a2 = v8;
    a2 = v8;
    goto LABEL_8;
  }
  *((unsigned char *)a2 + 23) = v4;
  if (v4) {
LABEL_8:
  }
    memmove(a2, v3, v5);
  *((unsigned char *)a2 + v5) = 0;
}

void sub_10015E468(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10015E47C()
{
}

void sub_10015E568(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    sub_1003A3598(v1);
  }
  __cxa_rethrow();
}

void sub_10015E580(_Unwind_Exception *a1)
{
}

void sub_10015E598()
{
}

uint64_t sub_10015E5AC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 24))();
  }
  return result;
}

uint64_t sub_10015E5DC()
{
  return 0;
}

uint64_t sub_10015E5E4()
{
  return 0;
}

uint64_t sub_10015E5EC()
{
  return 0;
}

std::string *sub_10015E5F4@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10015E628(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_10015E644@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10015E678(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015E694(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  uint64_t v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

uint64_t sub_10015E6D8(uint64_t a1, std::string *a2)
{
  long long v25 = 0u;
  long long v26 = 0u;
  memset(v24, 0, sizeof(v24));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v28 = 0u;
  uint64_t v29 = 24;
  *(void *)&long long v25 = 0;
  *(void *)&v24[0] = off_100453E60;
  std::ios_base::init(&v31, v24);
  uint64_t v32 = 0;
  int v33 = -1;
  long long v35 = &v34;
  uint64_t v36 = (char *)&v34 + 2;
  uint64_t v3 = (std::ios_base *)((char *)&v30 + (void)*(v30 - 3));
  v3->__exceptions_ = 1;
  std::ios_base::clear(v3, v3->__rdstate_);
  size_t v4 = (void *)std::ostream::operator<<();
  int v5 = *(_DWORD *)((char *)v4 + *(void *)(*v4 - 24) + 32);
  uint64_t v6 = *(void *)((char *)&v31.__rdstate_ + (void)*(v30 - 3));
  uint64_t v7 = *(void *)(v6 + 40);
  long long v35 = (uint64_t *)v7;
  std::string::size_type v8 = *(char **)(v6 + 48);
  uint64_t v36 = v8;
  if ((v5 & 5) == 0)
  {
    unint64_t v10 = (unint64_t)&v8[-v7];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v14 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v13 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v13 >= v10)
      {
        unint64_t v15 = HIBYTE(v14);
LABEL_10:
        if ((v15 & 0x80u) == 0) {
          uint64_t v11 = a2;
        }
        else {
          uint64_t v11 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v7 == v8)
        {
          std::string v16 = v11;
          goto LABEL_23;
        }
        if (v10 < 0x20 || (unint64_t)v11 - v7 < 0x20)
        {
          std::string v16 = v11;
          uint64_t v17 = (char *)v7;
        }
        else
        {
          std::string v16 = (std::string *)((char *)v11 + (v10 & 0xFFFFFFFFFFFFFFE0));
          uint64_t v17 = (char *)(v7 + (v10 & 0xFFFFFFFFFFFFFFE0));
          uint64_t v18 = (long long *)(v7 + 16);
          Class v19 = &v11->__r_.__value_.__r.__words[2];
          unint64_t v20 = v10 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v21 = *v18;
            *((_OWORD *)v19 - 1) = *(v18 - 1);
            *(_OWORD *)Class v19 = v21;
            v18 += 2;
            v19 += 4;
            v20 -= 32;
          }
          while (v20);
          if (v10 == (v10 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v16->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v10;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v10 & 0x7F;
            }
            uint64_t v9 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v22 = *v17++;
          v16->__r_.__value_.__s.__data_[0] = v22;
          std::string v16 = (std::string *)((char *)v16 + 1);
        }
        while (v17 != v8);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      uint64_t v11 = a2;
      if (v10 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v13 = 22;
    }
    std::string::__grow_by(a2, v13, v10 - v13, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v15) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v9 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v28) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v9;
}

void sub_10015E9B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10015E9E4(void *a1)
{
}

uint64_t sub_10015EA8C@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  uint64_t result = sub_10015EB3C(a1, a2);
  if ((result & 1) == 0)
  {
    std::bad_cast::bad_cast(&v3);
    v3.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v3);
  }
  return result;
}

void sub_10015EB10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
  std::bad_cast::~bad_cast(&a10);
  if (*(char *)(v10 + 23) < 0) {
    operator delete(*(void **)v10);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10015EB3C(uint64_t a1, std::string *a2)
{
  long long v25 = 0u;
  long long v26 = 0u;
  memset(v24, 0, sizeof(v24));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v28 = 0u;
  uint64_t v29 = 24;
  *(void *)&long long v25 = 0;
  *(void *)&v24[0] = off_100453E60;
  std::ios_base::init(&v31, v24);
  uint64_t v32 = 0;
  int v33 = -1;
  long long v35 = &v34;
  uint64_t v36 = (char *)&v34 + 2;
  std::bad_cast v3 = (std::ios_base *)((char *)&v30 + (void)*(v30 - 3));
  v3->__exceptions_ = 1;
  std::ios_base::clear(v3, v3->__rdstate_);
  size_t v4 = (void *)std::ostream::operator<<();
  int v5 = *(_DWORD *)((char *)v4 + *(void *)(*v4 - 24) + 32);
  uint64_t v6 = *(void *)((char *)&v31.__rdstate_ + (void)*(v30 - 3));
  uint64_t v7 = *(void *)(v6 + 40);
  long long v35 = (uint64_t *)v7;
  std::string::size_type v8 = *(char **)(v6 + 48);
  uint64_t v36 = v8;
  if ((v5 & 5) == 0)
  {
    unint64_t v10 = (unint64_t)&v8[-v7];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v14 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v13 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v13 >= v10)
      {
        unint64_t v15 = HIBYTE(v14);
LABEL_10:
        if ((v15 & 0x80u) == 0) {
          uint64_t v11 = a2;
        }
        else {
          uint64_t v11 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v7 == v8)
        {
          std::string v16 = v11;
          goto LABEL_23;
        }
        if (v10 < 0x20 || (unint64_t)v11 - v7 < 0x20)
        {
          std::string v16 = v11;
          uint64_t v17 = (char *)v7;
        }
        else
        {
          std::string v16 = (std::string *)((char *)v11 + (v10 & 0xFFFFFFFFFFFFFFE0));
          uint64_t v17 = (char *)(v7 + (v10 & 0xFFFFFFFFFFFFFFE0));
          uint64_t v18 = (long long *)(v7 + 16);
          Class v19 = &v11->__r_.__value_.__r.__words[2];
          unint64_t v20 = v10 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v21 = *v18;
            *((_OWORD *)v19 - 1) = *(v18 - 1);
            *(_OWORD *)Class v19 = v21;
            v18 += 2;
            v19 += 4;
            v20 -= 32;
          }
          while (v20);
          if (v10 == (v10 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v16->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v10;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v10 & 0x7F;
            }
            uint64_t v9 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v22 = *v17++;
          v16->__r_.__value_.__s.__data_[0] = v22;
          std::string v16 = (std::string *)((char *)v16 + 1);
        }
        while (v17 != v8);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      uint64_t v11 = a2;
      if (v10 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v13 = 22;
    }
    std::string::__grow_by(a2, v13, v10 - v13, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v15) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v9 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v28) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v9;
}

void sub_10015EE14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10015EE48(void *a1)
{
}

uint64_t sub_10015EE60(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 8);
  if (v2 == 2)
  {
    uint64_t v9 = a1 + 176;
    uint64_t v4 = a1 + 16;
    int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 232);
    uint64_t v6 = a2;
    uint64_t v7 = v9;
  }
  else
  {
    if (v2 != 1)
    {
      __cxa_allocate_exception(0x40uLL);
      sub_1000AE4B0(&v11, "Unsupported ProviderPositionDataFlow");
      std::runtime_error::runtime_error(&v12, &v11);
      v12.__vftable = (std::runtime_error_vtbl *)&off_100453630;
      sub_10018E868((uint64_t)v10);
      sub_1000CC8F4(&v12, (uint64_t)"void CLProviderPositionInputEvent::applyTo(Receiver *) const [Receiver = ILocalizerInputEventReceiver]", (uint64_t)"../../../common/localize/localizer_input_event.h", 996, (uint64_t)v10);
    }
    uint64_t v3 = a1 + 176;
    uint64_t v4 = a1 + 16;
    int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 224);
    uint64_t v6 = a2;
    uint64_t v7 = v3;
  }
  return v5(v6, v7, v4);
}

void sub_10015EFCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void sub_10015F044(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100459D58;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10015F064(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100459D58;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_10015F0B8(uint64_t a1)
{
  sub_1000126E8(a1);

  operator delete();
}

intptr_t sub_10015F0F4(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

id sub_10015F0FC(uint64_t a1, uint64_t a2)
{
  id result = *(id *)(a2 + 32);
  *(void *)(a1 + 32) = result;
  return result;
}

void sub_10015F128(uint64_t a1)
{
}

intptr_t sub_10015F130(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t sub_10015F138(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

std::string *sub_10015F140@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10015F174(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

double sub_10015F190@<D0>(_DWORD *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  uint64_t v3 = "<vector>";
  switch(*a1 ^ ((int)*a1 >> 31))
  {
    case 0:
      uint64_t v3 = "None";
      goto LABEL_13;
    case 1:
      std::to_string(&v5, a1[2]);
      goto LABEL_9;
    case 2:
      std::to_string(&v5, *((void *)a1 + 1));
      goto LABEL_9;
    case 3:
      std::string::operator=((std::string *)a2, (const std::string *)(a1 + 2));
      return result;
    case 4:
      std::to_string(&v5, *((double *)a1 + 1));
LABEL_9:
      if (*(char *)(a2 + 23) < 0) {
        operator delete(*(void **)a2);
      }
      double result = *(double *)&v5.__r_.__value_.__l.__data_;
      *(std::string *)a2 = v5;
      return result;
    case 5:
      goto LABEL_13;
    case 6:
      uint64_t v3 = "<map>";
      goto LABEL_13;
    default:
      uint64_t v3 = "<unknown>";
LABEL_13:
      std::string::assign((std::string *)a2, v3);
      return result;
  }
}

void sub_10015F28C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10015F2D0()
{
}

void sub_10015F2F4()
{
}

char *sub_10015F318(void *a1, int a2)
{
  uint64_t v6 = __cxa_begin_catch(a1);
  __cxa_end_catch();
  if (a2 == 3) {
    unint64_t v7 = (unint64_t)v6;
  }
  else {
    unint64_t v7 = 0;
  }
  if (!(v4 | v7)) {
    return sub_1003A3A10((uint64_t)v3);
  }
  return (char *)sub_10016010C(v4, v7, 1, v2, v3);
}

uint64_t sub_10015F388(_DWORD *a1, uint64_t a2)
{
  int v2 = (int64_t *)(a1 + 2);
  switch(*a1 ^ ((int)*a1 >> 31))
  {
    case 1:
      uint64_t result = *(unsigned int *)v2;
      break;
    case 2:
      int64_t v4 = *v2;
      sub_1000647A4(*v2);
      uint64_t result = v4;
      break;
    case 3:
      uint64_t result = sub_10015F760(a2, (unsigned __int8 *)v2);
      break;
    case 4:
      double v5 = *(double *)v2;
      sub_10015FD80(*(double *)v2);
      double v6 = ceil(v5);
      double v7 = floor(v5);
      if (v5 >= 0.0) {
        double v6 = v7;
      }
      uint64_t result = (int)v6;
      break;
    case 5:
      sub_10015FE24();
    case 6:
      sub_10015FF98();
    default:
      sub_10015F4F4();
  }
  return result;
}

void sub_10015F4F4()
{
  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003EE0F0;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert empty value to a type");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_100453860;
  sub_10018E868((uint64_t)v0);
  sub_1000D1698(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<int>::operator()(boost::none_t) const [T = int]", (uint64_t)"../../../common/util/overridable_setting.h", 111, (uint64_t)v0);
}

void sub_10015F5C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void sub_10015F630(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x10015F620);
}

void sub_10015F654(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::bad_cast *sub_10015F668(std::bad_cast *a1)
{
  uint64_t result = std::bad_cast::bad_cast(a1);
  result->__vftable = (std::bad_cast_vtbl *)&off_100459EB8;
  return result;
}

std::bad_cast *sub_10015F6A0(std::bad_cast *a1)
{
  uint64_t result = std::bad_cast::bad_cast(a1);
  result->__vftable = (std::bad_cast_vtbl *)&off_100459EE0;
  return result;
}

void sub_10015F6D8(std::bad_cast *a1)
{
  std::bad_cast::~bad_cast(a1);

  operator delete();
}

const char *sub_10015F710()
{
  return "bad numeric conversion: negative overflow";
}

void sub_10015F71C(std::bad_cast *a1)
{
  std::bad_cast::~bad_cast(a1);

  operator delete();
}

const char *sub_10015F754()
{
  return "bad numeric conversion: positive overflow";
}

uint64_t sub_10015F760(uint64_t a1, unsigned __int8 *a2)
{
  int v2 = (char)a2[23];
  BOOL v3 = v2 < 0;
  int64_t v4 = *(unsigned __int8 **)a2;
  if (v2 >= 0) {
    int64_t v4 = a2;
  }
  uint64_t v5 = a2[23];
  if (v3) {
    uint64_t v5 = *((void *)a2 + 1);
  }
  if (!v5) {
    goto LABEL_17;
  }
  double v6 = &v4[v5];
  int v14 = 0;
  int v7 = *v4;
  if (v7 == 45 || v7 == 43) {
    ++v4;
  }
  LOBYTE(v10.__vftable) = 0;
  HIDWORD(v10.__vftable) = 1;
  std::string v11 = &v14;
  std::runtime_error v12 = v4;
  std::string::size_type v13 = v6;
  char v8 = sub_10015F87C((uint64_t)&v10);
  uint64_t result = v14;
  if (v7 == 45)
  {
    if (v14 >= 0x80000001) {
      char v8 = 0;
    }
    if (v8) {
      return -v14;
    }
LABEL_17:
    std::bad_cast::bad_cast(&v10);
    v10.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v10);
  }
  if (v14 < 0) {
    char v8 = 0;
  }
  if ((v8 & 1) == 0) {
    goto LABEL_17;
  }
  return result;
}

void sub_10015F868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
}

uint64_t sub_10015F87C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = v1 - 1;
  int v2 = *(_DWORD **)(a1 + 8);
  *int v2 = 0;
  if (*(void *)(a1 + 16) > (unint64_t)(v1 - 1)) {
    return 0;
  }
  int v3 = *(unsigned __int8 *)(v1 - 1);
  if ((v3 - 58) < 0xFFFFFFF6) {
    return 0;
  }
  *int v2 = v3 - 48;
  *(void *)(a1 + 24) = v1 - 2;
  std::locale::locale(&v49);
  double v6 = std::locale::classic();
  if (std::locale::operator==(&v49, v6))
  {
    unint64_t v7 = *(void *)(a1 + 16);
    char v8 = *(unsigned char **)(a1 + 24);
    if ((unint64_t)v8 >= v7)
    {
      char v12 = *(unsigned char *)a1 != 0;
      while (1)
      {
        unsigned int v15 = *(_DWORD *)(a1 + 4);
        v12 |= v15 > 0x19999999;
        *(unsigned char *)a1 = v12 & 1;
        unsigned int v16 = 10 * v15;
        *(_DWORD *)(a1 + 4) = 10 * v15;
        int v17 = (char)*v8;
        if ((*v8 - 58) < 0xF6u) {
          break;
        }
        unsigned int v18 = v17 - 48;
        int v19 = (v17 - 48) * v16;
        if (v18)
        {
          if (v12) {
            break;
          }
          if (((v18 * (unint64_t)v16) & 0xFFFFFFFF00000000) != 0) {
            break;
          }
          std::string::size_type v13 = *(_DWORD **)(a1 + 8);
          int v14 = *v13;
          if (__CFADD__(v19, *v13)) {
            break;
          }
        }
        else
        {
          std::string::size_type v13 = *(_DWORD **)(a1 + 8);
          int v14 = *v13;
        }
        *std::string::size_type v13 = v14 + v19;
        *(void *)(a1 + 24) = --v8;
        if ((unint64_t)v8 < v7) {
          goto LABEL_6;
        }
      }
      uint64_t v9 = 0;
    }
    else
    {
LABEL_6:
      uint64_t v9 = 1;
    }
    goto LABEL_66;
  }
  std::bad_cast v10 = std::locale::use_facet(&v49, &std::numpunct<char>::id);
  ((void (*)(void **__return_ptr))v10->__vftable[1].__on_zero_shared)(&__p);
  if ((char)v48 < 0)
  {
    uint64_t v11 = v47;
    if (!v47 || *(char *)__p <= 0)
    {
LABEL_27:
      unint64_t v26 = *(void *)(a1 + 16);
      long long v27 = *(unsigned char **)(a1 + 24);
      if ((unint64_t)v27 >= v26)
      {
        char v38 = *(unsigned char *)a1 != 0;
        while (1)
        {
          unsigned int v41 = *(_DWORD *)(a1 + 4);
          v38 |= v41 > 0x19999999;
          *(unsigned char *)a1 = v38 & 1;
          unsigned int v42 = 10 * v41;
          *(_DWORD *)(a1 + 4) = 10 * v41;
          int v43 = (char)*v27;
          if ((*v27 - 58) < 0xF6u) {
            break;
          }
          unsigned int v44 = v43 - 48;
          int v45 = (v43 - 48) * v42;
          if (v44)
          {
            if (v38) {
              break;
            }
            if (((v44 * (unint64_t)v42) & 0xFFFFFFFF00000000) != 0) {
              break;
            }
            int v39 = *(_DWORD **)(a1 + 8);
            int v40 = *v39;
            if (__CFADD__(v45, *v39)) {
              break;
            }
          }
          else
          {
            int v39 = *(_DWORD **)(a1 + 8);
            int v40 = *v39;
          }
          _DWORD *v39 = v40 + v45;
          *(void *)(a1 + 24) = --v27;
          if ((unint64_t)v27 < v26) {
            goto LABEL_28;
          }
        }
LABEL_64:
        uint64_t v9 = 0;
        if (((char)v48 & 0x80000000) == 0) {
          goto LABEL_66;
        }
        goto LABEL_65;
      }
      goto LABEL_28;
    }
  }
  else
  {
    uint64_t v11 = v48;
    if (!v48 || (char)__p <= 0) {
      goto LABEL_27;
    }
  }
  char v20 = ((uint64_t (*)(const std::locale::facet *))v10->__vftable[1].~facet_0)(v10);
  long long v21 = *(unsigned char **)(a1 + 16);
  std::string::value_type v22 = *(unsigned char **)(a1 + 24);
  if (v22 >= v21)
  {
    unsigned __int8 v23 = 0;
    p_p = __p;
    if ((v48 & 0x80u) == 0) {
      p_p = &__p;
    }
    char v25 = *p_p - 1;
    while (1)
    {
      while (v25)
      {
        unsigned int v30 = *(_DWORD *)(a1 + 4);
        if (*(unsigned char *)a1) {
          BOOL v31 = 1;
        }
        else {
          BOOL v31 = v30 > 0x19999999;
        }
        char v32 = v31;
        *(unsigned char *)a1 = v32;
        unsigned int v33 = 10 * v30;
        *(_DWORD *)(a1 + 4) = 10 * v30;
        int v34 = (char)*v22;
        if ((*v22 - 58) < 0xF6u) {
          goto LABEL_64;
        }
        unsigned int v35 = v34 - 48;
        int v36 = (v34 - 48) * v33;
        if (v35)
        {
          if (v32) {
            goto LABEL_64;
          }
          if (((v35 * (unint64_t)v33) & 0xFFFFFFFF00000000) != 0) {
            goto LABEL_64;
          }
          long long v28 = *(_DWORD **)(a1 + 8);
          int v29 = *v28;
          if (__CFADD__(v36, *v28)) {
            goto LABEL_64;
          }
        }
        else
        {
          long long v28 = *(_DWORD **)(a1 + 8);
          int v29 = *v28;
        }
        *long long v28 = v29 + v36;
        --v25;
        *(void *)(a1 + 24) = --v22;
        if (v22 < v21) {
          goto LABEL_28;
        }
      }
      if (*v22 != v20) {
        break;
      }
      if (v22 == v21) {
        goto LABEL_64;
      }
      if (v11 - 1 > (unint64_t)v23) {
        ++v23;
      }
      if ((v48 & 0x80u) == 0) {
        std::string::size_type v37 = &__p;
      }
      else {
        std::string::size_type v37 = __p;
      }
      char v25 = v37[v23];
      *(void *)(a1 + 24) = --v22;
      if (v22 < v21) {
        goto LABEL_28;
      }
    }
    uint64_t v9 = sub_10015FCC8(a1);
    if (((char)v48 & 0x80000000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_65;
  }
LABEL_28:
  uint64_t v9 = 1;
  if ((char)v48 < 0) {
LABEL_65:
  }
    operator delete(__p);
LABEL_66:
  std::locale::~locale(&v49);
  return v9;
}

void sub_10015FC88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    std::locale::~locale(&a15);
    _Unwind_Resume(a1);
  }
  std::locale::~locale(&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_10015FCC8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  int v2 = *(unsigned char **)(a1 + 24);
  if ((unint64_t)v2 < v1) {
    return 1;
  }
  char v4 = *(unsigned char *)a1 != 0;
  while (1)
  {
    unsigned int v7 = *(_DWORD *)(a1 + 4);
    v4 |= v7 > 0x19999999;
    *(unsigned char *)a1 = v4 & 1;
    unsigned int v8 = 10 * v7;
    *(_DWORD *)(a1 + 4) = 10 * v7;
    int v9 = (char)*v2;
    if ((*v2 - 58) < 0xF6u) {
      break;
    }
    unsigned int v10 = v9 - 48;
    int v11 = (v9 - 48) * v8;
    if (v10)
    {
      if (v4) {
        return 0;
      }
      if (((v10 * (unint64_t)v8) & 0xFFFFFFFF00000000) != 0) {
        return 0;
      }
      uint64_t v5 = *(_DWORD **)(a1 + 8);
      int v6 = *v5;
      if (__CFADD__(v11, *v5)) {
        return 0;
      }
    }
    else
    {
      uint64_t v5 = *(_DWORD **)(a1 + 8);
      int v6 = *v5;
    }
    *uint64_t v5 = v6 + v11;
    *(void *)(a1 + 24) = --v2;
    if ((unint64_t)v2 < v1) {
      return 1;
    }
  }
  return 0;
}

void sub_10015FD80(double a1)
{
  int v1 = 2 * (a1 >= 2147483650.0);
  if (a1 <= -2147483650.0) {
    int v1 = 1;
  }
  if (v1 == 2)
  {
    exception = (std::bad_cast *)__cxa_allocate_exception(8uLL);
    exception->__vftable = 0;
    int v3 = sub_10015F6A0(exception);
  }
  if (v1 == 1)
  {
    char v4 = (std::bad_cast *)__cxa_allocate_exception(8uLL);
    v4->__vftable = 0;
    uint64_t v5 = sub_10015F668(v4);
  }
}

void sub_10015FE24()
{
  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003EE100;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert between incompatible types");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_100453860;
  sub_10018E868((uint64_t)v0);
  sub_1000D1698(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<int>::operator()(const F &) const [T = int, F = std::vector<boost::variant<boost::detail::variant::recursive_flag<boost::none_t>, int, long long, std::string, double, std::vector<boost::recursive_variant_>, std::unordered_map<std::string, boost::recursive_variant_>>>]", (uint64_t)"../../../common/util/overridable_setting.h", 106, (uint64_t)v0);
}

void sub_10015FEF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void sub_10015FF60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x10015FF50);
}

void sub_10015FF84(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10015FF98()
{
  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003EE100;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert between incompatible types");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_100453860;
  sub_10018E868((uint64_t)v0);
  sub_1000D1698(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<int>::operator()(const F &) const [T = int, F = std::unordered_map<std::string, boost::variant<boost::detail::variant::recursive_flag<boost::none_t>, int, long long, std::string, double, std::vector<boost::recursive_variant_>, std::unordered_map<std::string, boost::recursive_variant_>>>]", (uint64_t)"../../../common/util/overridable_setting.h", 106, (uint64_t)v0);
}

void sub_10016006C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void sub_1001600D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x1001600C4);
}

void sub_1001600F8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_10016010C@<X0>(unint64_t lpsrc@<X0>, unint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, char *a5@<X8>)
{
  uint64_t v5 = a5;
  if (!(lpsrc | a2))
  {
    a5[23] = 18;
    strcpy(a5, "Unknown exception.");
    return lpsrc;
  }
  unsigned int v8 = (void *)a2;
  unint64_t v9 = lpsrc;
  if (lpsrc)
  {
    if (!a2) {
    unsigned int v10 = 0;
    }
    int v11 = 1;
    if (!a3)
    {
LABEL_17:
      sub_1000CD96C((uint64_t)v42);
      if (!v9) {
        goto LABEL_31;
      }
      goto LABEL_18;
    }
  }
  else
  {
    if (!a2)
    {
      unint64_t v9 = 0;
      unsigned int v10 = 0;
      int v11 = 1;
      sub_1000CD96C((uint64_t)v42);
      goto LABEL_31;
    }
    unsigned int v10 = 0;
    int v11 = 1;
    if (!a3) {
      goto LABEL_17;
    }
  }
  if (!v8) {
    goto LABEL_17;
  }
  unsigned int v10 = (const char *)(*(uint64_t (**)(void *))(*(void *)v8 + 16))(v8);
  if (!v9)
  {
    int v11 = 0;
    goto LABEL_17;
  }
  char v12 = *(uint64_t (****)(void, void))(v9 + 8);
  if (!v12) {
    operator new();
  }
  if ((const char *)(**v12)(v12, 0) == v10)
  {
    lpsrc = strlen(v10);
    if (lpsrc > 0x7FFFFFFFFFFFFFF7) {
      sub_1000A6968();
    }
    size_t v31 = lpsrc;
    if (lpsrc >= 0x17)
    {
      uint64_t v32 = (lpsrc & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((lpsrc | 7) != 0x17) {
        uint64_t v32 = lpsrc | 7;
      }
      uint64_t v33 = v32 + 1;
      int v34 = (char *)operator new(v32 + 1);
      *((void *)v5 + 1) = v31;
      *((void *)v5 + 2) = v33 | 0x8000000000000000;
      *(void *)uint64_t v5 = v34;
      uint64_t v5 = v34;
    }
    else
    {
      v5[23] = lpsrc;
      if (!lpsrc) {
        goto LABEL_65;
      }
    }
    lpsrc = (unint64_t)memmove(v5, v10, v31);
LABEL_65:
    v5[v31] = 0;
    return lpsrc;
  }
  int v11 = 0;
  sub_1000CD96C((uint64_t)v42);
LABEL_18:
  if (a4)
  {
    uint64_t v13 = *(void *)(v9 + 24);
    if (v13 || *(_DWORD *)(v9 + 32) != -1 || *(void *)(v9 + 16))
    {
      if (v13)
      {
        size_t v14 = strlen(*(const char **)(v9 + 24));
        sub_10002986C(v42, v13, v14);
        if (*(_DWORD *)(v9 + 32) != -1)
        {
          LOBYTE(__p[0]) = 40;
          sub_10002986C(v42, (uint64_t)__p, 1);
          unsigned int v15 = (void *)std::ostream::operator<<();
          sub_10002986C(v15, (uint64_t)"): ", 3);
        }
      }
      sub_10002986C(v42, (uint64_t)"Throw in function ", 18);
      unsigned int v16 = *(const char **)(v9 + 16);
      if (v16)
      {
        size_t v17 = strlen(*(const char **)(v9 + 16));
      }
      else
      {
        unsigned int v16 = "(unknown)";
        size_t v17 = 9;
      }
      sub_10002986C(v42, (uint64_t)v16, v17);
      LOBYTE(__p[0]) = 10;
      sub_10002986C(v42, (uint64_t)__p, 1);
    }
    else
    {
      sub_10002986C(v42, (uint64_t)"Throw location unknown (consider using BOOST_THROW_EXCEPTION)\n", 62);
    }
  }
LABEL_31:
  if (!a4) {
    goto LABEL_48;
  }
  unsigned int v18 = (char *)operator new(0x20uLL);
  strcpy(v18, "Dynamic exception type: ");
  int v19 = sub_10002986C(v42, (uint64_t)v18, 24);
  if (v9)
  {
    unsigned int v8 = (void *)v9;
  }
  else if (!v8)
  {
    __cxa_bad_typeid();
  }
  sub_1000CD728((const char *)(*(void *)(*(void *)(*(void *)v8 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL), __p);
  if ((v41 & 0x80u) == 0) {
    char v20 = __p;
  }
  else {
    char v20 = (void **)__p[0];
  }
  if ((v41 & 0x80u) == 0) {
    uint64_t v21 = v41;
  }
  else {
    uint64_t v21 = (uint64_t)__p[1];
  }
  std::string::value_type v22 = sub_10002986C(v19, (uint64_t)v20, v21);
  char v44 = 10;
  sub_10002986C(v22, (uint64_t)&v44, 1);
  int v23 = a4 ^ 1;
  if ((char)v41 < 0)
  {
    operator delete(__p[0]);
    operator delete(v18);
    if ((v11 | v23)) {
      goto LABEL_48;
    }
  }
  else
  {
    operator delete(v18);
    if ((v11 | v23)) {
      goto LABEL_48;
    }
  }
  uint64_t v24 = sub_10002986C(v42, (uint64_t)"std::exception::what: ", 22);
  if (!v10) {
    unsigned int v10 = "(null)";
  }
  size_t v25 = strlen(v10);
  unint64_t v26 = sub_10002986C(v24, (uint64_t)v10, v25);
  LOBYTE(__p[0]) = 10;
  sub_10002986C(v26, (uint64_t)__p, 1);
LABEL_48:
  if (v9)
  {
    long long v27 = __p;
    std::stringbuf::str();
    if ((v41 & 0x80u) != 0) {
      long long v27 = (void **)__p[0];
    }
    long long v28 = *(uint64_t (****)(void, void **))(v9 + 8);
    if (!v28) {
      operator new();
    }
    uint64_t v29 = (**v28)(v28, v27);
    unsigned int v30 = (const char *)v29;
    if ((char)v41 < 0)
    {
      operator delete(__p[0]);
      if (!v30) {
        goto LABEL_73;
      }
    }
    else if (!v29)
    {
      goto LABEL_73;
    }
    if (*v30)
    {
      size_t v35 = strlen(v30);
      if (v35 > 0x7FFFFFFFFFFFFFF7) {
        sub_1000A6968();
      }
      size_t v36 = v35;
      if (v35 >= 0x17)
      {
        uint64_t v37 = (v35 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v35 | 7) != 0x17) {
          uint64_t v37 = v35 | 7;
        }
        uint64_t v38 = v37 + 1;
        int v39 = (char *)operator new(v37 + 1);
        *((void *)v5 + 1) = v36;
        *((void *)v5 + 2) = v38 | 0x8000000000000000;
        *(void *)uint64_t v5 = v39;
        uint64_t v5 = v39;
      }
      else
      {
        v5[23] = v35;
        if (!v35) {
          goto LABEL_78;
        }
      }
      memmove(v5, v30, v36);
LABEL_78:
      v5[v36] = 0;
      goto LABEL_79;
    }
  }
LABEL_73:
  std::stringbuf::str();
LABEL_79:
  if (v43 < 0) {
    operator delete((void *)v42[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_100160930(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    sub_1000CDB10((uint64_t)&a16);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x100160998);
}

void sub_10016095C(_Unwind_Exception *a1)
{
  operator delete(v1);
  sub_1000CDB10(&v3);
  _Unwind_Resume(a1);
}

void sub_100160968(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  operator delete(v15);
  sub_1000CDB10((uint64_t)&v17);
  _Unwind_Resume(a1);
}

void sub_100160994(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001609A8(uint64_t a1)
{
  std::runtime_error v2 = *(std::__shared_weak_count **)(a1 + 40);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = *(void *)(a1 + 8);
    if (!v3) {
      return a1;
    }
    goto LABEL_4;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3) {
LABEL_4:
  }
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  return a1;
}

char *sub_100160A4C(char **a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (a1[1] - *a1) >> 4;
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 60) {
    sub_1000A9108();
  }
  uint64_t v8 = a1[2] - *a1;
  if (v8 >> 3 > v5) {
    unint64_t v5 = v8 >> 3;
  }
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0) {
    unint64_t v9 = 0xFFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v9 = v5;
  }
  if (v9)
  {
    if (v9 >> 60) {
      sub_1000A6A10();
    }
    unsigned int v10 = (char *)operator new(16 * v9);
  }
  else
  {
    unsigned int v10 = 0;
  }
  int v19 = &v10[16 * v4];
  char v20 = &v10[16 * v9];
  sub_100373EAC(v19, a2, a3);
  int v11 = v19;
  char v12 = v19 + 16;
  size_t v14 = *a1;
  uint64_t v13 = a1[1];
  if (v13 == *a1)
  {
    *a1 = v19;
    a1[1] = v12;
    a1[2] = v20;
  }
  else
  {
    do
    {
      uint64_t v15 = *((void *)v13 - 2);
      v13 -= 16;
      *((void *)v11 - 2) = v15;
      v11 -= 16;
      uint64_t v16 = *((void *)v13 + 1);
      *((void *)v11 + 1) = v16;
      if (v16) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v16 + 8), 1uLL, memory_order_relaxed);
      }
    }
    while (v13 != v14);
    uint64_t v17 = *a1;
    uint64_t v13 = a1[1];
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v20;
    if (v13 != v17)
    {
      do
        uint64_t v13 = (char *)sub_100374180(v13 - 16);
      while (v13 != v17);
      uint64_t v13 = v17;
    }
  }
  if (v13) {
    operator delete(v13);
  }
  return v19 + 16;
}

void sub_100160BB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100160BC4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100160BC4(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 16;
    sub_100374180(i - 16);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_100160C18()
{
  operator new();
}

void sub_100160FE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  *(void *)(v18 + 32) = v19;
  std::mutex::unlock(v17);
  sub_1001609A8((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void sub_100161024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_1001609A8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100161038(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2) {
    return a1;
  }
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void **)(a1 + 8);
  if (v3 == v2) {
    goto LABEL_12;
  }
  do
  {
    unint64_t v5 = *(std::__shared_weak_count **)(v3 - 8);
    if (!v5 || atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      uint64_t v6 = *(void *)(v3 - 40);
      if (!v6) {
        goto LABEL_4;
      }
LABEL_8:
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
      goto LABEL_4;
    }
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    uint64_t v6 = *(void *)(v3 - 40);
    if (v6) {
      goto LABEL_8;
    }
LABEL_4:
    v3 -= 48;
  }
  while (v3 != v2);
  uint64_t v4 = *(void **)(a1 + 8);
LABEL_12:
  *(void *)(a1 + 16) = v2;
  operator delete(v4);
  return a1;
}

void **sub_100161124(void **a1)
{
  uint64_t v2 = (char *)*a1;
  if (!*a1) {
    return a1;
  }
  uint64_t v3 = (char *)a1[1];
  uint64_t v4 = *a1;
  if (v3 == v2) {
    goto LABEL_12;
  }
  do
  {
    unint64_t v5 = (std::__shared_weak_count *)*((void *)v3 - 1);
    if (!v5 || atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      uint64_t v6 = *((void *)v3 - 5);
      if (!v6) {
        goto LABEL_4;
      }
LABEL_8:
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
      goto LABEL_4;
    }
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    uint64_t v6 = *((void *)v3 - 5);
    if (v6) {
      goto LABEL_8;
    }
LABEL_4:
    v3 -= 48;
  }
  while (v3 != v2);
  uint64_t v4 = *a1;
LABEL_12:
  a1[1] = v2;
  operator delete(v4);
  return a1;
}

uint64_t sub_100161210(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_10016128C(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  operator delete();
}

_UNKNOWN **sub_100161318()
{
}

void sub_100161324()
{
}

void *sub_100161390(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  unint64_t v6 = ~(*a2 + ((unint64_t)*a2 >> 3)) + ((*a2 + ((unint64_t)*a2 >> 3)) << 21);
  unint64_t v7 = 21 * ((265 * (v6 ^ (v6 >> 24))) ^ ((265 * (v6 ^ (v6 >> 24))) >> 14));
  uint64_t v8 = 2147483649u * (v7 ^ (v7 >> 28));
  if (a1[2])
  {
    uint64_t v9 = v8 & (a1[1] - 1);
    uint64_t v10 = *(void *)(a1[5] + 8 * v9);
    if (v10)
    {
      int v11 = *(void **)v10;
      if (*(void *)v10)
      {
        if (v5 == v11[2]) {
          return *(void **)v10;
        }
        uint64_t v12 = v11[1];
LABEL_6:
        if ((v12 & 0x7FFFFFFFFFFFFFFFLL) == v9)
        {
          while (1)
          {
            int v11 = (void *)*v11;
            if (!v11) {
              break;
            }
            uint64_t v12 = v11[1];
            if ((v12 & 0x8000000000000000) == 0)
            {
              if (v5 != v11[2]) {
                goto LABEL_6;
              }
              return v11;
            }
          }
        }
      }
    }
  }
  int v11 = operator new(0x30uLL);
  *int v11 = 0;
  v11[1] = 0;
  long long v13 = *(_OWORD *)(a3 + 16);
  *((_OWORD *)v11 + 1) = *(_OWORD *)a3;
  *((_OWORD *)v11 + 2) = v13;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  sub_10016152C((uint64_t)a1, a1[2] + 1);
  uint64_t v14 = a1[1];
  uint64_t v15 = (v14 - 1) & v8;
  uint64_t v16 = a1[5];
  v11[1] = v15 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v17 = *(void **)(v16 + 8 * v15);
  if (v17)
  {
    *int v11 = *v17;
    uint64_t v18 = *(void *)(v16 + 8 * v15);
  }
  else
  {
    uint64_t v18 = v16 + 8 * v14;
    if (*(void *)v18) {
      *(void *)(v16 + 8 * *(void *)(*(void *)v18 + 8)) = v11;
    }
    *(void *)(v16 + 8 * v15) = v18;
    *int v11 = *(void *)v18;
  }
  *(void *)uint64_t v18 = v11;
  ++a1[2];
  return v11;
}

void sub_100161504(_Unwind_Exception *a1)
{
  if (v1[3]) {
    sub_1003A3A68();
  }
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_10016152C(uint64_t a1, unint64_t a2)
{
  if (*(void *)(a1 + 40))
  {
    if (*(void *)(a1 + 32) >= a2) {
      return;
    }
    unint64_t v3 = *(void *)(a1 + 16) + (*(void *)(a1 + 16) >> 1);
    if (v3 <= a2) {
      unint64_t v3 = a2;
    }
    double v4 = floor((double)v3 / *(float *)(a1 + 24)) + 1.0;
    unint64_t v5 = (unint64_t)v4;
    if (v4 >= 1.84467441e19) {
      unint64_t v5 = -1;
    }
    if (v5 >= 5)
    {
      unint64_t v13 = (v5 - 1) | ((v5 - 1) >> 1) | (((v5 - 1) | ((v5 - 1) >> 1)) >> 2);
      unint64_t v14 = v13 | (v13 >> 4) | ((v13 | (v13 >> 4)) >> 8);
      unint64_t v6 = (v14 | (v14 >> 16) | ((v14 | (v14 >> 16)) >> 32)) + 1;
      if (v6 == *(void *)(a1 + 8)) {
        return;
      }
    }
    else
    {
      unint64_t v6 = 4;
      if (*(void *)(a1 + 8) == 4) {
        return;
      }
    }
    sub_100161744(a1, v6);
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = *(void *)(a1 + 40);
    uint64_t v17 = (void *)(v16 + 8 * v15);
    uint64_t v18 = (void *)*v17;
    if (*v17)
    {
      uint64_t v19 = v15 - 1;
      do
      {
        while (1)
        {
          uint64_t v21 = v18[2] + (v18[2] >> 3);
          unint64_t v22 = 265 * ((~v21 + (v21 << 21)) ^ ((unint64_t)(~v21 + (v21 << 21)) >> 24));
          unint64_t v23 = (2147483649u * ((21 * (v22 ^ (v22 >> 14))) ^ ((21 * (v22 ^ (v22 >> 14))) >> 28))) & v19;
          v18[1] = v23 & 0x7FFFFFFFFFFFFFFFLL;
          uint64_t v24 = (void *)*v18;
          if (*v18 && (v24[1] & 0x8000000000000000) != 0)
          {
            do
            {
              uint64_t v18 = v24;
              v24[1] = v23 | 0x8000000000000000;
              uint64_t v24 = (void *)*v24;
            }
            while (v24 && (v24[1] & 0x8000000000000000) != 0);
          }
          char v20 = *(void **)(v16 + 8 * v23);
          if (!v20) {
            break;
          }
          *uint64_t v18 = *v20;
          **(void **)(v16 + 8 * v23) = *v17;
          void *v17 = v24;
          uint64_t v18 = v24;
          if (!v24) {
            return;
          }
        }
        *(void *)(v16 + 8 * v23) = v17;
        uint64_t v17 = v18;
        uint64_t v18 = (void *)*v18;
      }
      while (v18);
    }
  }
  else
  {
    double v7 = floor((double)a2 / *(float *)(a1 + 24)) + 1.0;
    unint64_t v8 = (unint64_t)v7;
    if (v7 >= 1.84467441e19) {
      unint64_t v8 = -1;
    }
    if (v8 >= 5)
    {
      unint64_t v10 = (v8 - 1) | ((v8 - 1) >> 1) | (((v8 - 1) | ((v8 - 1) >> 1)) >> 2);
      unint64_t v11 = v10 | (v10 >> 4) | ((v10 | (v10 >> 4)) >> 8);
      unint64_t v9 = (v11 | (v11 >> 16) | ((v11 | (v11 >> 16)) >> 32)) + 1;
    }
    else
    {
      unint64_t v9 = 4;
    }
    if (*(void *)(a1 + 8) <= v9) {
      unint64_t v12 = v9;
    }
    else {
      unint64_t v12 = *(void *)(a1 + 8);
    }
    sub_100161744(a1, v12);
  }
}

void sub_100161744(uint64_t a1, unint64_t a2)
{
  double v4 = *(void **)(a1 + 40);
  unint64_t v5 = a2 + 1;
  unint64_t v6 = (a2 + 1) >> 61;
  if (v4)
  {
    if (!v6)
    {
      uint64_t v7 = v4[*(void *)(a1 + 8)];
      unint64_t v8 = operator new(8 * v5);
      operator delete(v4);
      goto LABEL_6;
    }
LABEL_11:
    sub_1000A6A10();
  }
  if (v6) {
    goto LABEL_11;
  }
  unint64_t v8 = operator new(8 * v5);
  uint64_t v7 = 0;
LABEL_6:
  *(void *)(a1 + 8) = a2;
  double v9 = (double)a2 * *(float *)(a1 + 24);
  unint64_t v10 = vcvtpd_u64_f64(v9);
  if (ceil(v9) >= 1.84467441e19) {
    unint64_t v10 = -1;
  }
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v8;
  if (a2) {
    bzero(v8, 8 * a2);
  }
  *((void *)v8 + a2) = v7;
}

uint64_t sub_100161808(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 4);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x555555555555555) {
    sub_1000A9108();
  }
  if (0x5555555555555556 * ((a1[2] - *a1) >> 4) > v4) {
    unint64_t v4 = 0x5555555555555556 * ((a1[2] - *a1) >> 4);
  }
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 4) >= 0x2AAAAAAAAAAAAAALL) {
    unint64_t v6 = 0x555555555555555;
  }
  else {
    unint64_t v6 = v4;
  }
  unint64_t v23 = a1 + 2;
  if (v6)
  {
    if (v6 > 0x555555555555555) {
      sub_1000A6A10();
    }
    uint64_t v7 = (char *)operator new(48 * v6);
  }
  else
  {
    uint64_t v7 = 0;
  }
  unint64_t v8 = &v7[48 * v3];
  std::string __p = v7;
  char v20 = v8;
  uint64_t v21 = v8;
  unint64_t v22 = &v7[48 * v6];
  uint64_t v9 = *(void *)(a2 + 8);
  *(void *)unint64_t v8 = *(void *)a2;
  unint64_t v10 = (uint64_t *)(v8 + 8);
  if (v9) {
    uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)v9 + 24))(v9);
  }
  *unint64_t v10 = v9;
  unint64_t v11 = &v7[48 * v3];
  *((_OWORD *)v11 + 1) = *(_OWORD *)(a2 + 16);
  uint64_t v12 = *(void *)(a2 + 40);
  *((void *)v11 + 4) = *(void *)(a2 + 32);
  *((void *)v11 + 5) = v12;
  if (v12) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v12 + 8), 1uLL, memory_order_relaxed);
  }
  v21 += 48;
  sub_100161A2C(a1, &__p);
  uint64_t v13 = a1[1];
  unint64_t v14 = v20;
  uint64_t v15 = v21;
  if (v21 != v20)
  {
    while (1)
    {
      uint64_t v21 = v15 - 48;
      uint64_t v16 = (std::__shared_weak_count *)*((void *)v15 - 1);
      if (v16)
      {
        if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
      }
      uint64_t v17 = *((void *)v15 - 5);
      if (v17) {
        goto LABEL_21;
      }
LABEL_17:
      uint64_t v15 = v21;
      if (v21 == v14) {
        goto LABEL_24;
      }
    }
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    uint64_t v17 = *((void *)v15 - 5);
    if (!v17) {
      goto LABEL_17;
    }
LABEL_21:
    (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
    goto LABEL_17;
  }
LABEL_24:
  if (__p) {
    operator delete(__p);
  }
  return v13;
}

void sub_100161A18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100161B50((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_100161A2C(uint64_t *result, void *a2)
{
  unint64_t v3 = result;
  uint64_t v5 = *result;
  uint64_t v4 = result[1];
  uint64_t v6 = a2[1];
  if (v4 != *result)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = v6 + v7;
      uint64_t v9 = v4 + v7;
      uint64_t result = *(uint64_t **)(v4 + v7 - 40);
      *(void *)(v6 + v7 - 48) = *(void *)(v4 + v7 - 48);
      if (result) {
        uint64_t result = (uint64_t *)(*(uint64_t (**)(uint64_t *))(*result + 24))(result);
      }
      *(void *)(v8 - 40) = result;
      *(_OWORD *)(v8 - 32) = *(_OWORD *)(v9 - 32);
      uint64_t v10 = *(void *)(v9 - 8);
      *(void *)(v8 - 16) = *(void *)(v9 - 16);
      *(void *)(v8 - 8) = v10;
      if (v10) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v10 + 8), 1uLL, memory_order_relaxed);
      }
      v7 -= 48;
    }
    while (v4 + v7 != v5);
    v6 += v7;
  }
  a2[1] = v6;
  uint64_t v11 = *v3;
  *unint64_t v3 = v6;
  a2[1] = v11;
  uint64_t v12 = v3[1];
  v3[1] = a2[2];
  a2[2] = v12;
  uint64_t v13 = v3[2];
  void v3[2] = a2[3];
  a2[3] = v13;
  *a2 = a2[1];
  return result;
}

void sub_100161B34(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_1003A3B44();
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100161B50(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3 != v2)
  {
    while (1)
    {
      *(void *)(a1 + 16) = v3 - 48;
      uint64_t v4 = *(std::__shared_weak_count **)(v3 - 8);
      if (v4)
      {
        if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
          break;
        }
      }
      uint64_t v5 = *(void *)(v3 - 40);
      if (v5) {
        goto LABEL_7;
      }
LABEL_3:
      uint64_t v3 = *(void *)(a1 + 16);
      if (v3 == v2) {
        goto LABEL_10;
      }
    }
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    uint64_t v5 = *(void *)(v3 - 40);
    if (!v5) {
      goto LABEL_3;
    }
LABEL_7:
    (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    goto LABEL_3;
  }
LABEL_10:
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_100161C38(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100459F80;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100161C58(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100459F80;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_100161CAC(uint64_t a1)
{
  uint64_t v1 = a1 + 24;
  uint64_t result = *(void *)(a1 + 48);
  if (result == v1) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 32))(v1);
  }
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 40))();
  }
  return result;
}

void sub_100161D18()
{
}

void *sub_100161D2C(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_100459FD0;
  result[1] = v3;
  return result;
}

uint64_t sub_100161D74(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_100459FD0;
  a2[1] = v2;
  return result;
}

void sub_100161DA0(uint64_t a1, uint64_t *a2)
{
}

uint64_t sub_100161DB0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN7sensors14CombinedLoggerC1EiRKNSt3__110shared_ptrI19_EventBusCollectionEEbE3$_0") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"ZN7sensors14CombinedLoggerC1EiRKNSt3__110shared_ptrI19_EventBusCollectionEEbE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN7sensors14CombinedLoggerC1EiRKNSt3__110shared_ptrI19_EventBusCollectionEEbE3$_0")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN7sensors14CombinedLoggerC1EiRKNSt3__110shared_ptrI19_EventBusCollectionEEbE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

_UNKNOWN **sub_100161E20()
{
}

void sub_100161E2C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10045A060;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100161E4C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10045A060;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_100161EA0(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_100161ECC()
{
}

uint64_t sub_100161EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 24);
  if (!v3) {
    sub_10008F39C();
  }
  uint64_t v4 = *(uint64_t (**)(void))(*(void *)v3 + 48);

  return v4();
}

uint64_t sub_100161F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 24);
  if (!v3) {
    sub_10008F39C();
  }
  uint64_t v4 = *(uint64_t (**)(void))(*(void *)v3 + 48);

  return v4();
}

void sub_100161F84(std::exception *a1)
{
  std::exception::~exception(a1);

  operator delete();
}

void sub_100161FBC()
{
  operator new();
}

void sub_100162388(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  *(void *)(v18 + 32) = v19;
  std::mutex::unlock(v17);
  sub_1001609A8((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void sub_1001623C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  sub_1001609A8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001623DC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_100162458(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  operator delete();
}

_UNKNOWN **sub_1001624E4()
{
}

void sub_1001624F0()
{
}

void sub_10016255C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10045A1B0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10016257C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10045A1B0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1001625D0(uint64_t a1)
{
  uint64_t v1 = a1 + 24;
  uint64_t result = *(void *)(a1 + 48);
  if (result == v1) {
    return (*(uint64_t (**)(uint64_t))(*(void *)v1 + 32))(v1);
  }
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 40))();
  }
  return result;
}

void sub_10016263C()
{
}

void *sub_100162650(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_10045A200;
  result[1] = v3;
  return result;
}

uint64_t sub_100162698(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_10045A200;
  a2[1] = v2;
  return result;
}

uint64_t sub_1001626C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  std::chrono::duration<long long, std::ratio<1, 1000000>>::rep rep = std::chrono::system_clock::now().__d_.__rep_;
  v8[0].__r_.__value_.__r.__words[0] = (std::string::size_type)off_100469B18;
  *(_OWORD *)&v8[0].__r_.__value_.__r.__words[1] = 0u;
  memset(&v8[1], 0, 25);
  sub_100041B18((uint64_t)v8, *(void *)a2);
  sub_100041B20((uint64_t)v8, 1000 * rep);
  sub_100359724(v8, (const std::string *)(a2 + 8));
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(std::__shared_weak_count **)(v3 + 16);
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (*(void *)(v5 + 3600)) {
    sub_100162888(v5 + 3568, (uint64_t)v8);
  }
  if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  return sub_100359654((uint64_t)v8);
}

void sub_1001627C8(_Unwind_Exception *a1, int a2, uint64_t a3, ...)
{
  va_start(va, a3);
  if (v3)
  {
    sub_1003A3BE0(v3, (uint64_t)a1, a2, v4 - 48);
    uint64_t v6 = *(_Unwind_Exception **)(v4 - 48);
    sub_100359654((uint64_t)va);
    _Unwind_Resume(v6);
  }
  sub_100359654((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10016280C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN7sensors14CombinedLoggerC1EiRKNSt3__110shared_ptrI19_EventBusCollectionEEbE3$_1") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"ZN7sensors14CombinedLoggerC1EiRKNSt3__110shared_ptrI19_EventBusCollectionEEbE3$_1" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN7sensors14CombinedLoggerC1EiRKNSt3__110shared_ptrI19_EventBusCollectionEEbE3$_1")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN7sensors14CombinedLoggerC1EiRKNSt3__110shared_ptrI19_EventBusCollectionEEbE3$_1" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

_UNKNOWN **sub_10016287C()
{
}

uint64_t sub_100162888(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 8;
  if (*(void *)(a1 + 48))
  {
    sub_1000AE4B0(v7, "");
    sub_10014C790("Unexpected request to record legacy data for ", &v9);
    sub_1000DA214(v4, &v10);
    sub_10016A2C4((uint64_t)v7, (uint64_t)&v9, 2);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v10.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_5:
        if ((v8 & 0x80000000) == 0) {
          goto LABEL_6;
        }
LABEL_9:
        operator delete(v7[0]);
LABEL_6:
        sub_1000D11E0((uint64_t)&__p);
      }
    }
    else if ((SHIBYTE(v9.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((v8 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }
  sub_1000484E8(a1);
  sub_10035972C(a2, (_DWORD *)(a1 + 80));
  *(unsigned char *)a1 = 1;
  return a1;
}

void sub_1001629B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

char *sub_100162A70(void **a1, uint64_t a2, std::string *__str, std::string *a4, uint64_t a5)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (a2 - (uint64_t)*a1) / 24;
  uint64_t v7 = (uint64_t)*a1 + 24 * v6;
  if (a5 < 1) {
    return (char *)v7;
  }
  std::string v9 = __str;
  uint64_t v11 = a1[2];
  uint64_t v12 = (long long *)a1[1];
  if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * ((v11 - (unsigned char *)v12) >> 3)) >= a5)
  {
    uint64_t v18 = (uint64_t)v12 - v7;
    if ((uint64_t)(0xAAAAAAAAAAAAAAABLL * (((uint64_t)v12 - v7) >> 3)) >= a5)
    {
      char v20 = &__str[a5];
      size_t v25 = (char *)a1[1];
      goto LABEL_42;
    }
    char v20 = (std::string *)((char *)__str + 8 * (((uint64_t)v12 - v7) >> 3));
    if (v20 != a4)
    {
      uint64_t v21 = 0;
      do
      {
        unint64_t v23 = (char *)v12 + v21 * 24;
        uint64_t v24 = &v20[v21];
        if (SHIBYTE(v20[v21].__r_.__value_.__r.__words[2]) < 0)
        {
          sub_1000559FC(v23, v24->__r_.__value_.__l.__data_, v24->__r_.__value_.__l.__size_);
        }
        else
        {
          long long v22 = *(_OWORD *)&v24->__r_.__value_.__l.__data_;
          *((void *)v23 + 2) = *((void *)&v24->__r_.__value_.__l + 2);
          *(_OWORD *)unint64_t v23 = v22;
        }
        ++v21;
      }
      while (&v20[v21] != a4);
      size_t v25 = (char *)v12 + v21 * 24;
      a1[1] = (char *)v12 + v21 * 24;
      if (v18 < 1) {
        return (char *)v7;
      }
LABEL_42:
      uint64_t v39 = v7 + 24 * a5;
      int v40 = (long long *)&v25[-24 * a5];
      unsigned __int8 v41 = v25;
      if (v40 < v12)
      {
        unsigned __int8 v41 = v25;
        do
        {
          long long v42 = *v40;
          *((void *)v41 + 2) = *((void *)v40 + 2);
          *(_OWORD *)unsigned __int8 v41 = v42;
          v41 += 24;
          *((void *)v40 + 1) = 0;
          *((void *)v40 + 2) = 0;
          *(void *)int v40 = 0;
          int v40 = (long long *)((char *)v40 + 24);
        }
        while (v40 < v12);
      }
      a1[1] = v41;
      if (v25 != (char *)v39)
      {
        char v43 = v25 - 24;
        uint64_t v44 = 8 * ((uint64_t)&v25[-v39] >> 3);
        do
        {
          if (v43[23] < 0) {
            operator delete(*(void **)v43);
          }
          int v45 = (long long *)(v7 + v44 - 24);
          long long v46 = *v45;
          *((void *)v43 + 2) = *(void *)(v7 + v44 - 8);
          *(_OWORD *)char v43 = v46;
          v43 -= 24;
          *(unsigned char *)(v7 + v44 - 1) = 0;
          *(unsigned char *)int v45 = 0;
          v44 -= 24;
        }
        while (v44);
      }
      if (v20 != v9)
      {
        uint64_t v47 = (std::string *)v7;
        do
          std::string::operator=(v47++, v9++);
        while (v9 != v20);
      }
      return (char *)v7;
    }
    size_t v25 = (char *)a1[1];
    a1[1] = v12;
    if (v18 >= 1) {
      goto LABEL_42;
    }
    return (char *)v7;
  }
  unint64_t v13 = a5 - 0x5555555555555555 * (((char *)v12 - v5) >> 3);
  if (v13 > 0xAAAAAAAAAAAAAAALL) {
    sub_1000A9108();
  }
  unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((v11 - v5) >> 3);
  uint64_t v15 = 2 * v14;
  if (2 * v14 <= v13) {
    uint64_t v15 = v13;
  }
  if (v14 >= 0x555555555555555) {
    unint64_t v16 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v16 = v15;
  }
  if (v16)
  {
    if (v16 > 0xAAAAAAAAAAAAAAALL) {
      sub_1000A6A10();
    }
    uint64_t v17 = (char *)operator new(24 * v16);
  }
  else
  {
    uint64_t v17 = 0;
  }
  unint64_t v26 = &v17[24 * v6];
  std::locale v49 = v26;
  int v50 = &v17[24 * v16];
  uint64_t v27 = 24 * a5;
  long long v28 = &v26[v27];
  do
  {
    if (SHIBYTE(v9->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_1000559FC(v26, v9->__r_.__value_.__l.__data_, v9->__r_.__value_.__l.__size_);
    }
    else
    {
      long long v29 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
      *((void *)v26 + 2) = *((void *)&v9->__r_.__value_.__l + 2);
      *(_OWORD *)unint64_t v26 = v29;
    }
    v26 += 24;
    ++v9;
    v27 -= 24;
  }
  while (v27);
  unsigned int v30 = v49;
  size_t v31 = *a1;
  uint64_t v32 = v49;
  if (*a1 != (void *)v7)
  {
    uint64_t v33 = v49;
    uint64_t v34 = v7;
    do
    {
      uint64_t v32 = v33 - 24;
      long long v35 = *(_OWORD *)(v34 - 24);
      *((void *)v33 - 1) = *(void *)(v34 - 8);
      *(_OWORD *)(v33 - 24) = v35;
      *(void *)(v34 - 16) = 0;
      *(void *)(v34 - 8) = 0;
      *(void *)(v34 - 24) = 0;
      v33 -= 24;
      v34 -= 24;
    }
    while ((void *)v34 != v31);
  }
  size_t v36 = a1[1];
  if (v36 != (void *)v7)
  {
    do
    {
      long long v37 = *(_OWORD *)v7;
      *((void *)v28 + 2) = *(void *)(v7 + 16);
      *(_OWORD *)long long v28 = v37;
      v28 += 24;
      *(void *)(v7 + 8) = 0;
      *(void *)(v7 + 16) = 0;
      *(void *)uint64_t v7 = 0;
      v7 += 24;
    }
    while ((void *)v7 != v36);
    uint64_t v7 = (uint64_t)a1[1];
  }
  uint64_t v38 = *a1;
  *a1 = v32;
  a1[1] = v28;
  a1[2] = v50;
  while ((void *)v7 != v38)
  {
    if (*(char *)(v7 - 1) < 0) {
      operator delete(*(void **)(v7 - 24));
    }
    v7 -= 24;
  }
  if (v38) {
    operator delete(v38);
  }
  return v30;
}

void sub_100162E60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000E2848((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100162E78(uint64_t result)
{
  return result;
}

uint64_t sub_100162E98()
{
  return v0;
}

void sub_100162EA8()
{
  atomic_fetch_add((atomic_ullong *volatile)(v0 + 8), 0xFFFFFFFFFFFFFFFFLL);
}

void sub_100162ED0()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100162F48()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100162FC0()
{
}

uint64_t sub_100162FEC(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  uint64_t v2 = (std::string *)(a1 + 32);
  *(void *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 88) = 0u;
  unint64_t v3 = (std::string *)(a1 + 88);
  uint64_t v32 = (std::string *)(a1 + 112);
  uint64_t v33 = (std::string *)(a1 + 56);
  *(_OWORD *)(a1 + 136) = 0u;
  uint64_t v4 = (void **)(a1 + 136);
  *(_OWORD *)(a1 + 176) = 0u;
  uint64_t v5 = (std::string *)(a1 + 176);
  size_t v31 = (std::string *)(a1 + 200);
  *(_OWORD *)(a1 + 224) = 0u;
  uint64_t v6 = (std::string *)(a1 + 224);
  uint64_t v7 = (std::string *)(a1 + 248);
  char v8 = (std::string *)(a1 + 272);
  std::string v9 = (std::string *)(a1 + 296);
  std::string v10 = (void **)(a1 + 328);
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  long long v28 = (void **)(a1 + 352);
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(void *)(a1 + 152) = 0;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  std::string::assign((std::string *)a1, "3");
  *(_DWORD *)(a1 + 24) = 13;
  std::string::assign(v2, "28");
  std::string::assign(v33, "28");
  *(_DWORD *)(a1 + 80) = 41521;
  std::string::assign(v3, "1234567");
  std::string::assign(v32, "7654321");
  __p[23] = 7;
  strcpy(__p, "1234567");
  unint64_t v11 = *(void *)(a1 + 144);
  if (v11 >= *(void *)(a1 + 152))
  {
    unint64_t v13 = sub_10008CF94(v4, (uint64_t)__p);
    int v14 = __p[23];
    *(void *)(a1 + 144) = v13;
    if (v14 < 0)
    {
      operator delete(*(void **)__p);
      unint64_t v13 = *(char **)(a1 + 144);
    }
  }
  else
  {
    long long v12 = *(_OWORD *)__p;
    *(void *)(v11 + 16) = *(void *)&__p[16];
    *(_OWORD *)unint64_t v11 = v12;
    unint64_t v13 = (char *)(v11 + 24);
    *(void *)(a1 + 144) = v11 + 24;
  }
  __p[23] = 7;
  strcpy(__p, "7654321");
  if ((unint64_t)v13 >= *(void *)(a1 + 152))
  {
    unint64_t v16 = sub_10008CF94(v4, (uint64_t)__p);
    int v17 = __p[23];
    *(void *)(a1 + 144) = v16;
    if (v17 < 0) {
      operator delete(*(void **)__p);
    }
  }
  else
  {
    long long v15 = *(_OWORD *)__p;
    *((void *)v13 + 2) = *(void *)&__p[16];
    *(_OWORD *)unint64_t v13 = v15;
    *(void *)(a1 + 144) = v13 + 24;
  }
  *(void *)(a1 + 160) = 0xC00000002;
  *(_DWORD *)(a1 + 168) = 2013;
  std::string::assign(v5, "_WFS-USERNAME");
  std::string::assign(v31, "c3f5372b0c9a719f9141623ff9e5547a");
  std::string::assign(v6, "X-PIPELINE-API-AUTHORIZATION");
  std::string::assign(v7, "https");
  std::string::assign(v8, "cl4.apple.com");
  std::string::assign(v9, "2/m2/");
  *(_DWORD *)(a1 + 320) = 0;
  *(void *)std::string __p = operator new(0x20uLL);
  long long v30 = xmmword_1003E74F0;
  *(_OWORD *)&__p[8] = xmmword_1003E74F0;
  strcpy(*(char **)__p, "purple-loc-indoor@apple.com");
  qmemcpy(v29, "indoor@apple.compurple-loc-indoo", sizeof(v29));
  unint64_t v18 = *(void *)(a1 + 336);
  if (v18 >= *(void *)(a1 + 344))
  {
    char v20 = sub_10008CF94(v10, (uint64_t)__p);
    int v21 = __p[23];
    *(void *)(a1 + 336) = v20;
    if (v21 < 0) {
      operator delete(*(void **)__p);
    }
  }
  else
  {
    long long v19 = *(_OWORD *)__p;
    *(void *)(v18 + 16) = *(void *)&__p[16];
    *(_OWORD *)unint64_t v18 = v19;
    *(void *)(a1 + 336) = v18 + 24;
  }
  long long v22 = (char *)operator new(0x20uLL);
  *(void *)std::string __p = v22;
  *(_OWORD *)&__p[8] = v30;
  *(_OWORD *)long long v22 = v29[1];
  *(_OWORD *)(v22 + 11) = v29[0];
  v22[27] = 0;
  unint64_t v23 = *(void *)(a1 + 360);
  if (v23 >= *(void *)(a1 + 368))
  {
    size_t v25 = sub_10008CF94(v28, (uint64_t)__p);
    int v26 = __p[23];
    *(void *)(a1 + 360) = v25;
    if (v26 < 0) {
      operator delete(*(void **)__p);
    }
  }
  else
  {
    long long v24 = *(_OWORD *)__p;
    *(void *)(v23 + 16) = *(void *)&__p[16];
    *(_OWORD *)unint64_t v23 = v24;
    *(void *)(a1 + 360) = v23 + 24;
  }
  return a1;
}

void sub_100163360(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, _Unwind_Exception *exception_object, uint64_t a16, void **a17, void **a18, void **a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0)
  {
    operator delete(__p);
    sub_1000E0AA4(a10);
    sub_1000E0AA4(v32);
    if (*(char *)(v25 + 319) < 0)
    {
LABEL_5:
      operator delete(*v29);
      if ((*(char *)(v25 + 295) & 0x80000000) == 0) {
        goto LABEL_6;
      }
      goto LABEL_17;
    }
  }
  else
  {
    sub_1000E0AA4(a10);
    sub_1000E0AA4(v32);
    if (*(char *)(v25 + 319) < 0) {
      goto LABEL_5;
    }
  }
  if ((*(char *)(v25 + 295) & 0x80000000) == 0)
  {
LABEL_6:
    if (*(char *)(v25 + 271) < 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(*v27);
  if (*(char *)(v25 + 271) < 0)
  {
LABEL_7:
    operator delete(*v34);
    if ((*(char *)(v25 + 247) & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  if ((*(char *)(v25 + 247) & 0x80000000) == 0)
  {
LABEL_8:
    if (*(char *)(v25 + 223) < 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(*v33);
  if (*(char *)(v25 + 223) < 0)
  {
LABEL_9:
    operator delete(*a17);
    if ((*(char *)(v25 + 199) & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  if ((*(char *)(v25 + 199) & 0x80000000) == 0)
  {
LABEL_10:
    sub_1000E0AA4(v30);
    if (*(char *)(v25 + 135) < 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(*v31);
  sub_1000E0AA4(v30);
  if (*(char *)(v25 + 135) < 0)
  {
LABEL_11:
    operator delete(*a18);
    if ((*(char *)(v25 + 111) & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  if ((*(char *)(v25 + 111) & 0x80000000) == 0)
  {
LABEL_12:
    if (*(char *)(v25 + 79) < 0) {
      goto LABEL_13;
    }
    goto LABEL_24;
  }
LABEL_23:
  operator delete(*v28);
  if (*(char *)(v25 + 79) < 0)
  {
LABEL_13:
    operator delete(*a19);
    if ((*(char *)(v25 + 55) & 0x80000000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_25;
  }
LABEL_24:
  if ((*(char *)(v25 + 55) & 0x80000000) == 0)
  {
LABEL_14:
    if (*(char *)(v25 + 23) < 0) {
      goto LABEL_15;
    }
    goto LABEL_26;
  }
LABEL_25:
  operator delete(*v26);
  if (*(char *)(v25 + 23) < 0)
  {
LABEL_15:
    operator delete(*(void **)v25);
    _Unwind_Resume(a1);
  }
LABEL_26:
  _Unwind_Resume(a1);
}

uint64_t sub_1001634FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 352);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 360);
    uint64_t v4 = *(void **)(a1 + 352);
    if (v3 != v2)
    {
      do
      {
        if (*(char *)(v3 - 1) < 0) {
          operator delete(*(void **)(v3 - 24));
        }
        v3 -= 24;
      }
      while (v3 != v2);
      uint64_t v4 = *(void **)(a1 + 352);
    }
    *(void *)(a1 + 360) = v2;
    operator delete(v4);
  }
  uint64_t v5 = *(void *)(a1 + 328);
  if (v5)
  {
    uint64_t v6 = *(void *)(a1 + 336);
    uint64_t v7 = *(void **)(a1 + 328);
    if (v6 != v5)
    {
      do
      {
        if (*(char *)(v6 - 1) < 0) {
          operator delete(*(void **)(v6 - 24));
        }
        v6 -= 24;
      }
      while (v6 != v5);
      uint64_t v7 = *(void **)(a1 + 328);
    }
    *(void *)(a1 + 336) = v5;
    operator delete(v7);
  }
  if (*(char *)(a1 + 319) < 0)
  {
    operator delete(*(void **)(a1 + 296));
    if ((*(char *)(a1 + 295) & 0x80000000) == 0)
    {
LABEL_19:
      if ((*(char *)(a1 + 271) & 0x80000000) == 0) {
        goto LABEL_20;
      }
      goto LABEL_32;
    }
  }
  else if ((*(char *)(a1 + 295) & 0x80000000) == 0)
  {
    goto LABEL_19;
  }
  operator delete(*(void **)(a1 + 272));
  if ((*(char *)(a1 + 271) & 0x80000000) == 0)
  {
LABEL_20:
    if ((*(char *)(a1 + 247) & 0x80000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_33;
  }
LABEL_32:
  operator delete(*(void **)(a1 + 248));
  if ((*(char *)(a1 + 247) & 0x80000000) == 0)
  {
LABEL_21:
    if ((*(char *)(a1 + 223) & 0x80000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_34;
  }
LABEL_33:
  operator delete(*(void **)(a1 + 224));
  if ((*(char *)(a1 + 223) & 0x80000000) == 0)
  {
LABEL_22:
    if ((*(char *)(a1 + 199) & 0x80000000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_35;
  }
LABEL_34:
  operator delete(*(void **)(a1 + 200));
  if ((*(char *)(a1 + 199) & 0x80000000) == 0)
  {
LABEL_23:
    char v8 = *(void ***)(a1 + 136);
    if (!v8) {
      goto LABEL_24;
    }
LABEL_36:
    std::string v10 = *(void ***)(a1 + 144);
    if (v10 == v8)
    {
      *(void *)(a1 + 144) = v8;
      operator delete(v8);
      if (*(char *)(a1 + 135) < 0) {
        goto LABEL_43;
      }
    }
    else
    {
      do
      {
        if (*((char *)v10 - 1) < 0) {
          operator delete(*(v10 - 3));
        }
        v10 -= 3;
      }
      while (v10 != v8);
      unint64_t v11 = *(void **)(a1 + 136);
      *(void *)(a1 + 144) = v8;
      operator delete(v11);
      if (*(char *)(a1 + 135) < 0) {
        goto LABEL_43;
      }
    }
LABEL_25:
    if ((*(char *)(a1 + 111) & 0x80000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_44;
  }
LABEL_35:
  operator delete(*(void **)(a1 + 176));
  char v8 = *(void ***)(a1 + 136);
  if (v8) {
    goto LABEL_36;
  }
LABEL_24:
  if ((*(char *)(a1 + 135) & 0x80000000) == 0) {
    goto LABEL_25;
  }
LABEL_43:
  operator delete(*(void **)(a1 + 112));
  if ((*(char *)(a1 + 111) & 0x80000000) == 0)
  {
LABEL_26:
    if ((*(char *)(a1 + 79) & 0x80000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_45;
  }
LABEL_44:
  operator delete(*(void **)(a1 + 88));
  if ((*(char *)(a1 + 79) & 0x80000000) == 0)
  {
LABEL_27:
    if ((*(char *)(a1 + 55) & 0x80000000) == 0) {
      goto LABEL_28;
    }
LABEL_46:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
      return a1;
    }
    goto LABEL_47;
  }
LABEL_45:
  operator delete(*(void **)(a1 + 56));
  if (*(char *)(a1 + 55) < 0) {
    goto LABEL_46;
  }
LABEL_28:
  if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
    return a1;
  }
LABEL_47:
  operator delete(*(void **)a1);
  return a1;
}

uint64_t sub_10016372C()
{
  sub_100162FEC((uint64_t)&unk_10047EB68);

  return __cxa_atexit((void (*)(void *))sub_100162FE8, &unk_10047EB68, (void *)&_mh_execute_header);
}

const char *sub_100163784()
{
  return "BEACON_COMPLAIN_SECONDS";
}

const char *sub_100163794()
{
  return "COARSE_REGIONAL_WITH_WIFI";
}

void sub_1001637A4(uint64_t a1@<X8>)
{
  *(void *)a1 = "DATA_PROTECTION_CLASS";
  *(unsigned char *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 39) = 1;
  *(_WORD *)(a1 + 16) = 65;
}

const char *sub_1001637C8()
{
  return "FETCH_EVICT_TEST_INTERVALS";
}

const char *sub_1001637D8()
{
  return "HTTP_REQUEST_TIMEOUT";
}

const char *sub_1001637E8()
{
  return "INDOOR_SCAN_DUTY_CYCLE";
}

const char *sub_1001637F8()
{
  return "LOAD_BEACONS";
}

const char *sub_100163808()
{
  return "LOAD_WIFI";
}

const char *sub_100163818()
{
  return "LOG_ALL_BLUETOOTH";
}

const char *sub_100163828()
{
  return "MUTUAL_INFORMATION_ENABLED";
}

const char *sub_100163838()
{
  return "NOTIFICATION_DELAY";
}

const char *sub_100163848()
{
  return "PREFETCH_REQUEST_BATCH_CAP";
}

const char *sub_100163858()
{
  return "PROMPT_WIFI_OUTAGE";
}

const char *sub_100163868()
{
  return "REGIONAL_SCAN_DUTY_CYCLE";
}

const char *sub_100163878()
{
  return "REGIONAL_TILES_ONLY_IGNORE_INDOOR";
}

const char *sub_100163888()
{
  return "SHOW_PROMPTS";
}

const char *sub_100163898()
{
  return "STROBE_GPS";
}

const char *sub_1001638A8()
{
  return "SURVEY_USE_SDB";
}

void sub_1001638B8(uint64_t a1@<X8>)
{
  *(void *)a1 = "TILE_RESOURCE_KNOWN_DOWNLOAD_TIMEOUT";
  *(unsigned char *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0x3FF0000000000000;
}

void sub_1001638D4(uint64_t a1@<X8>)
{
  *(void *)a1 = "TILE_RESOURCE_UNKNOWN_DOWNLOAD_TIMEOUT";
  *(unsigned char *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0x403E000000000000;
}

const char *sub_1001638F0()
{
  return "WIFI_COMPLAIN_LOGGER_SECONDS";
}

const char *sub_100163900()
{
  return "WIFI_COMPLAIN_SECONDS";
}

const char *sub_100163910()
{
  return "WORKDIR";
}

const char *sub_100163920()
{
  return "YIELD_GIVE_UP_SECONDS";
}

void sub_100163930()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1001639A8()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100163A20(uint64_t a1@<X8>)
{
  CFArrayRef v10 = SCNetworkInterfaceCopyAll();
  uint64_t v2 = (char *)[(__CFArray *)v10 count];
  if (v2)
  {
    for (uint64_t i = 0; v2 != i; ++i)
    {
      uint64_t v4 = [(__CFArray *)v10 objectAtIndexedSubscript:i];

      uint64_t v5 = SCNetworkInterfaceGetInterfaceType((SCNetworkInterfaceRef)v4);
      if ([v5 isEqualToString:kSCNetworkInterfaceTypeIEEE80211])
      {
        uint64_t v6 = SCNetworkInterfaceGetHardwareAddressString((SCNetworkInterfaceRef)v4);
        uint64_t v7 = v6;
        if (v6)
        {
          char v8 = [v6 stringByReplacingOccurrencesOfString:@":" withString:&stru_10046D078];
          std::string v9 = [v8 uppercaseString];

          if (v9)
          {
            [v9 ps_STLString];
          }
          else
          {
            *(void *)a1 = 0;
            *(void *)(a1 + 8) = 0;
            *(void *)(a1 + 16) = 0;
          }

          goto LABEL_12;
        }
        NSLog(@"failed to get device mac address for interface %u", i);
      }
    }
  }
  *(unsigned char *)(a1 + 23) = 12;
  strcpy((char *)a1, "020000000000");
LABEL_12:
}

void sub_100163B90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100163BB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100163BCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100163BE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100163C00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100163C14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100163C28()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100163CA0()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100163D18()
{
}

void sub_100163D40(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10045A290;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100163D60(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10045A290;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_100163DB4(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_100163DE0()
{
}

double sub_100163DF4(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  double v2 = *(double *)(a1 + 2552);
  uint64_t v3 = *(void *)(a1 + 2504);
  unint64_t v4 = (v3 + 1) % 0x270uLL;
  uint64_t v5 = 4 * v3;
  uint64_t v6 = 4 * v4;
  LODWORD(v3) = *(_DWORD *)(a1 + 8 + 4 * ((v3 + 397) % 0x270uLL)) ^ ((*(_DWORD *)(a1 + 8 + 4 * v4) & 0x7FFFFFFE | *(_DWORD *)(a1 + 8 + 4 * v3) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(a1 + 8 + 4 * v4) << 31) >> 31) & 0x9908B0DF;
  *(_DWORD *)(a1 + 8 + v5) = v3;
  LODWORD(v3) = ((v3 ^ (v3 >> 11)) << 7) & 0x9D2C5680 ^ v3 ^ (v3 >> 11);
  double v7 = (double)((v3 << 15) & 0xEFC60000 ^ v3 ^ (((v3 << 15) & 0xEFC60000 ^ v3) >> 18));
  double v8 = *(double *)(a1 + 2544);
  if (v4 == 623) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = v4 + 1;
  }
  uint64_t v10 = 397;
  if (v4 >= 0xE3) {
    uint64_t v10 = -227;
  }
  unsigned int v11 = *(_DWORD *)(v1 + 4 * (v10 + v4)) ^ ((*(_DWORD *)(v1 + 4 * v9) & 0x7FFFFFFE | *(_DWORD *)(v1 + 4 * v4) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(v1 + 4 * v9) << 31) >> 31) & 0x9908B0DF;
  *(_DWORD *)(v1 + v6) = v11;
  unsigned int v12 = ((v11 ^ (v11 >> 11)) << 7) & 0x9D2C5680 ^ v11 ^ (v11 >> 11);
  *(void *)(a1 + 2504) = v9;
  return v8
       + (v2 - v8)
       * ((v7 + (double)((v12 << 15) & 0xEFC60000 ^ v12 ^ (((v12 << 15) & 0xEFC60000 ^ v12) >> 18)) * 4294967300.0)
        * 5.42101086e-20);
}

double sub_100163F34(uint64_t a1, double a2, double a3)
{
  double v16 = a3;
  double v17 = a2;
  if (a2 >= a3)
  {
    sub_1000AE4B0(v19, "");
    sub_1001644DC("min=", &v21);
    sub_10016452C(&v17, &v22);
    sub_100164950(", max=", &v23);
    sub_10016452C(&v16, &v24);
    sub_10016A2C4((uint64_t)v19, (uint64_t)&v21, 4);
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v24.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v23.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_10:
        if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_11;
        }
        goto LABEL_16;
      }
    }
    else if ((SHIBYTE(v23.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_10;
    }
    operator delete(v23.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v22.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_11:
      if ((SHIBYTE(v21.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_12;
      }
      goto LABEL_17;
    }
LABEL_16:
    operator delete(v22.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v21.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((v20 & 0x80000000) == 0) {
        goto LABEL_13;
      }
LABEL_18:
      operator delete(v19[0]);
LABEL_13:
      sub_1000D11E0((uint64_t)&__p);
    }
LABEL_17:
    operator delete(v21.__r_.__value_.__l.__data_);
    if ((v20 & 0x80000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_18;
  }
  uint64_t v3 = a1 + 8;
  uint64_t v4 = *(void *)(a1 + 2504);
  uint64_t v5 = 4 * v4;
  unint64_t v6 = (v4 + 1) % 0x270uLL;
  uint64_t v7 = 4 * v6;
  unsigned int v8 = *(_DWORD *)(a1 + 8 + 4 * ((v4 + 397) % 0x270uLL)) ^ ((*(_DWORD *)(a1 + 8 + 4 * v6) & 0x7FFFFFFE | *(_DWORD *)(a1 + 8 + 4 * v4) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(a1 + 8 + 4 * v6) << 31) >> 31) & 0x9908B0DF;
  *(_DWORD *)(a1 + 8 + v5) = v8;
  if (v6 == 623) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = v6 + 1;
  }
  uint64_t v10 = 397;
  if (v6 >= 0xE3) {
    uint64_t v10 = -227;
  }
  unsigned int v11 = *(_DWORD *)(v3 + 4 * (v10 + v6)) ^ ((*(_DWORD *)(v3 + 4 * v9) & 0x7FFFFFFE | *(_DWORD *)(v3 + 4 * v6) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(v3 + 4 * v9) << 31) >> 31) & 0x9908B0DF;
  *(_DWORD *)(v3 + v7) = v11;
  *(void *)(a1 + 2504) = v9;
  unsigned int v12 = ((v8 ^ (v8 >> 11)) << 7) & 0x9D2C5680 ^ v8 ^ (v8 >> 11);
  double v13 = (double)((v12 << 15) & 0xEFC60000 ^ v12 ^ (((v12 << 15) & 0xEFC60000 ^ v12) >> 18));
  unsigned int v14 = ((v11 ^ (v11 >> 11)) << 7) & 0x9D2C5680 ^ v11 ^ (v11 >> 11);
  return a2
       + (a3 - a2)
       * ((v13 + (double)((v14 << 15) & 0xEFC60000 ^ v14 ^ (((v14 << 15) & 0xEFC60000 ^ v14) >> 18)) * 4294967300.0)
        * 5.42101086e-20);
}

void sub_1001641D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100164218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  while (1)
  {
    if (*((char *)v18 - 1) < 0) {
      operator delete(*(v18 - 3));
    }
    v18 -= 3;
    if (v18 == (void **)&a18) {
      JUMPOUT(0x1001641F4);
    }
  }
}

float sub_100164244(uint64_t a1)
{
  float v1 = *(float *)(a1 + 2560);
  float v2 = *(float *)(a1 + 2564) - v1;
  uint64_t v3 = *(void *)(a1 + 2504);
  uint64_t v4 = 4 * v3;
  unint64_t v5 = (v3 + 1) % 0x270uLL;
  LODWORD(v3) = *(_DWORD *)(a1 + 8 + 4 * ((v3 + 397) % 0x270uLL)) ^ ((*(_DWORD *)(a1 + 8 + 4 * v5) & 0x7FFFFFFE | *(_DWORD *)(a1 + 8 + 4 * v3) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(a1 + 8 + 4 * v5) << 31) >> 31) & 0x9908B0DF;
  *(_DWORD *)(a1 + 8 + v4) = v3;
  int v6 = ((v3 ^ (v3 >> 11)) << 7) & 0x9D2C5680 ^ v3 ^ (v3 >> 11);
  *(void *)(a1 + 2504) = v5;
  return v1
       + (float)(v2
               * (float)((float)((v6 << 15) & 0xEFC60000 ^ v6 ^ (((v6 << 15) & 0xEFC60000 ^ v6) >> 18)) * 2.3283e-10));
}

float sub_10016430C(uint64_t a1, float a2, float a3)
{
  uint64_t v3 = *(void *)(a1 + 2504);
  uint64_t v4 = 4 * v3;
  unint64_t v5 = (v3 + 1) % 0x270uLL;
  LODWORD(v3) = *(_DWORD *)(a1 + 8 + 4 * ((v3 + 397) % 0x270uLL)) ^ ((*(_DWORD *)(a1 + 8 + 4 * v5) & 0x7FFFFFFE | *(_DWORD *)(a1 + 8 + 4 * v3) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(a1 + 8 + 4 * v5) << 31) >> 31) & 0x9908B0DF;
  *(_DWORD *)(a1 + 8 + v4) = v3;
  int v6 = ((v3 ^ (v3 >> 11)) << 7) & 0x9D2C5680 ^ v3 ^ (v3 >> 11);
  *(void *)(a1 + 2504) = v5;
  return a2
       + (float)((float)(a3 - a2)
               * (float)((float)((v6 << 15) & 0xEFC60000 ^ v6 ^ (((v6 << 15) & 0xEFC60000 ^ v6) >> 18)) * 2.3283e-10));
}

uint64_t sub_1001643CC(uint64_t a1)
{
  return (*(uint64_t (**)(double, double))(*(void *)a1 + 24))(0.0, 6.28318531);
}

double sub_1001643FC(uint64_t a1)
{
  return sub_1001649A0(a1 + 2512, a1 + 8, (double *)(a1 + 2512));
}

double sub_10016440C(uint64_t a1, double a2, double a3)
{
  v4[0] = a2;
  v4[1] = a3;
  return sub_1001649A0(a1 + 2512, a1 + 8, v4);
}

uint64_t sub_100164440(uint64_t a1, uint64_t a2)
{
  v3[0] = 0;
  v3[1] = a2 - 1;
  return sub_100164C58((uint64_t)v3, a1 + 8, v3);
}

uint64_t sub_100164474(uint64_t a1, int a2)
{
  v3[0] = 0;
  v3[1] = a2 - 1;
  return sub_100165130((uint64_t)v3, a1 + 8, v3);
}

uint64_t sub_1001644A8(uint64_t a1, uint64_t a2)
{
  v3[0] = 0;
  v3[1] = a2 - 1;
  return sub_100164C58((uint64_t)v3, a1 + 8, v3);
}

std::string *sub_1001644DC@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_100164510(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10016452C@<X0>(double *a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  uint64_t result = sub_1001645DC(a1, a2);
  if ((result & 1) == 0)
  {
    std::bad_cast::bad_cast(&v3);
    v3.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v3);
  }
  return result;
}

void sub_1001645B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
  std::bad_cast::~bad_cast(&a10);
  if (*(char *)(v10 + 23) < 0) {
    operator delete(*(void **)v10);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_1001645DC(double *a1, std::string *a2)
{
  long long v23 = 0u;
  long long v24 = 0u;
  memset(__sb, 0, sizeof(__sb));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v26 = 0u;
  uint64_t v27 = 24;
  *(void *)&long long v23 = 0;
  *(void *)&__sb[0] = off_100453E60;
  std::ios_base::init(&v29, __sb);
  uint64_t v30 = 0;
  int v31 = -1;
  uint64_t v4 = &v32;
  long long v35 = &v32;
  size_t v36 = v34;
  if (fabs(*a1) == INFINITY)
  {
    unint64_t v5 = &v32;
    if ((*(void *)a1 & 0x8000000000000000) != 0)
    {
      char v32 = 45;
      unint64_t v5 = v33;
    }
    v5[2] = 102;
    *(_WORD *)unint64_t v5 = 28265;
    int v6 = v5 + 3;
    size_t v36 = v5 + 3;
LABEL_6:
    unint64_t v7 = v6 - v4;
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v11 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v10 = (v11 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v10 >= v7)
      {
        unint64_t v12 = HIBYTE(v11);
LABEL_14:
        if ((v12 & 0x80u) == 0) {
          unsigned int v8 = a2;
        }
        else {
          unsigned int v8 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_17:
        if (v4 == v6)
        {
          unsigned int v14 = v8;
          goto LABEL_27;
        }
        if (v7 < 0x20 || (unint64_t)((char *)v8 - v4) < 0x20)
        {
          unsigned int v14 = v8;
          long long v15 = v4;
        }
        else
        {
          unsigned int v14 = (std::string *)((char *)v8 + (v7 & 0xFFFFFFFFFFFFFFE0));
          long long v15 = &v4[v7 & 0xFFFFFFFFFFFFFFE0];
          double v16 = (long long *)(v4 + 16);
          double v17 = &v8->__r_.__value_.__r.__words[2];
          unint64_t v18 = v7 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v19 = *v16;
            *((_OWORD *)v17 - 1) = *(v16 - 1);
            *(_OWORD *)double v17 = v19;
            v16 += 2;
            v17 += 4;
            v18 -= 32;
          }
          while (v18);
          if (v7 == (v7 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_27:
            v14->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v7;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v7 & 0x7F;
            }
            uint64_t v13 = 1;
            goto LABEL_31;
          }
        }
        do
        {
          std::string::value_type v20 = *v15++;
          v14->__r_.__value_.__s.__data_[0] = v20;
          unsigned int v14 = (std::string *)((char *)v14 + 1);
        }
        while (v15 != v6);
        goto LABEL_27;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      unsigned int v8 = a2;
      if (v7 <= 0x16) {
        goto LABEL_17;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v10 = 22;
    }
    std::string::__grow_by(a2, v10, v7 - v10, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v12) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_14;
  }
  int v6 = &v33[sprintf(&v32, "%.*g", 17, *a1) - 1];
  size_t v36 = v6;
  uint64_t v4 = v35;
  if (v6 > v35) {
    goto LABEL_6;
  }
  uint64_t v13 = 0;
LABEL_31:
  std::ostream::~ostream();
  if (SBYTE7(v26) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v13;
}

void sub_10016490C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000DA568((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100164920(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    std::ios::~ios();
    sub_1000A6954(exception_object);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_100164950@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_100164984(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

double sub_1001649A0(uint64_t a1, uint64_t a2, double *a3)
{
  if (*(unsigned char *)(a1 + 24))
  {
    *(unsigned char *)(a1 + 24) = 0;
    double v5 = *(double *)(a1 + 16);
  }
  else
  {
    unint64_t v6 = *(void *)(a2 + 2496);
    do
    {
      uint64_t v7 = 4 * v6;
      unint64_t v8 = (v6 + 1) % 0x270;
      unsigned int v9 = *(_DWORD *)(a2 + 4 * ((v6 + 397) % 0x270)) ^ ((*(_DWORD *)(a2 + 4 * v8) & 0x7FFFFFFE | *(_DWORD *)(a2 + 4 * v6) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(a2 + 4 * v8) << 31) >> 31) & 0x9908B0DF;
      *(_DWORD *)(a2 + v7) = v9;
      unsigned int v10 = ((v9 ^ (v9 >> 11)) << 7) & 0x9D2C5680 ^ v9 ^ (v9 >> 11);
      if (v8 == 623) {
        unint64_t v11 = 0;
      }
      else {
        unint64_t v11 = v8 + 1;
      }
      unsigned int v12 = (v10 << 15) & 0xEFC60000 ^ v10 ^ (((v10 << 15) & 0xEFC60000 ^ v10) >> 18);
      if (v8 >= 0xE3) {
        uint64_t v13 = -227;
      }
      else {
        uint64_t v13 = 397;
      }
      double v14 = (double)v12;
      unsigned int v15 = *(_DWORD *)(a2 + 4 * (v13 + v8)) ^ ((*(_DWORD *)(a2 + 4 * v11) & 0x7FFFFFFE | *(_DWORD *)(a2 + 4 * v8) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(a2 + 4 * v11) << 31) >> 31) & 0x9908B0DF;
      *(_DWORD *)(a2 + 4 * v8) = v15;
      unsigned int v16 = ((v15 ^ (v15 >> 11)) << 7) & 0x9D2C5680 ^ v15 ^ (v15 >> 11);
      unint64_t v17 = (v11 + 1) % 0x270;
      uint64_t v18 = 4 * v17;
      double v19 = (double)((v16 << 15) & 0xEFC60000 ^ v16 ^ (((v16 << 15) & 0xEFC60000 ^ v16) >> 18));
      unsigned int v20 = *(_DWORD *)(a2 + 4 * ((v11 + 397) % 0x270)) ^ ((*(_DWORD *)(a2 + 4 * v17) & 0x7FFFFFFE | *(_DWORD *)(a2 + 4 * v11) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(a2 + 4 * v17) << 31) >> 31) & 0x9908B0DF;
      *(_DWORD *)(a2 + 4 * v11) = v20;
      unsigned int v21 = ((v20 ^ (v20 >> 11)) << 7) & 0x9D2C5680 ^ v20 ^ (v20 >> 11);
      if (v17 == 623) {
        unint64_t v6 = 0;
      }
      else {
        unint64_t v6 = v17 + 1;
      }
      unsigned int v22 = (v21 << 15) & 0xEFC60000 ^ v21 ^ (((v21 << 15) & 0xEFC60000 ^ v21) >> 18);
      if (v17 >= 0xE3) {
        uint64_t v23 = -227;
      }
      else {
        uint64_t v23 = 397;
      }
      double v24 = v14 + v19 * 4294967300.0;
      unsigned int v25 = *(_DWORD *)(a2 + 4 * (v23 + v17)) ^ ((*(_DWORD *)(a2 + 4 * v6) & 0x7FFFFFFE | *(_DWORD *)(a2 + 4 * v17) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(a2 + 4 * v6) << 31) >> 31) & 0x9908B0DF;
      double v26 = (double)v22;
      unsigned int v27 = ((v25 ^ (v25 >> 11)) << 7) & 0x9D2C5680 ^ v25 ^ (v25 >> 11);
      double v28 = v24 * 5.42101086e-20 * 2.0 + -1.0;
      double v29 = (v26 + (double)((v27 << 15) & 0xEFC60000 ^ v27 ^ (((v27 << 15) & 0xEFC60000 ^ v27) >> 18)) * 4294967300.0)
          * 5.42101086e-20
          * 2.0
          + -1.0;
      double v30 = v29 * v29 + v28 * v28;
      *(_DWORD *)(a2 + v18) = v25;
    }
    while (v30 > 1.0 || v30 == 0.0);
    *(void *)(a2 + 2496) = v6;
    double v31 = sqrt(log(v29 * v29 + v28 * v28) * -2.0 / v30);
    *(double *)(a1 + 16) = v29 * v31;
    *(unsigned char *)(a1 + 24) = 1;
    double v5 = v28 * v31;
  }
  return *a3 + v5 * a3[1];
}

uint64_t sub_100164C58(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t result = a3[1];
  uint64_t v4 = result - *a3;
  if (result != *a3)
  {
    unint64_t v5 = v4 + 1;
    if (v4 == -1)
    {
      uint64_t v18 = a2;
      long long v19 = xmmword_1003EE790;
      int64x2_t v20 = vdupq_n_s64(2uLL);
      long long v21 = xmmword_1003EE7A0;
      uint64_t v22 = -1;
      return sub_100164E00(&v18);
    }
    unint64_t v7 = __clz(v5);
    uint64_t v8 = 63;
    if (((v5 << v7) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      uint64_t v8 = 64;
    }
    unint64_t v9 = v8 - v7;
    uint64_t v18 = a2;
    *(void *)&long long v19 = v9;
    unint64_t v10 = (v8 - v7) >> 5;
    if ((v9 & 0x1F) != 0) {
      unint64_t v11 = v10 + 1;
    }
    else {
      unint64_t v11 = v10;
    }
    unint64_t v12 = v9 / v11;
    *((void *)&v19 + 1) = v12;
    v20.i64[0] = v11;
    unint64_t v13 = (-1 << (v9 / v11)) & (unint64_t)&_mh_execute_header;
    if (v12 >= 0x40) {
      unint64_t v13 = 0;
    }
    *(void *)&long long v21 = v13;
    if ((v13 ^ (unint64_t)&_mh_execute_header) > v13 / v11)
    {
      unint64_t v12 = v9 / ++v11;
      *((void *)&v19 + 1) = v12;
      v20.i64[0] = v11;
      if (v12 > 0x3F)
      {
        v20.i64[1] = v11 - (v9 % v11);
        *(void *)&long long v21 = 0;
        LODWORD(v12) = 64;
        goto LABEL_22;
      }
      *(void *)&long long v21 = (-1 << (v9 / v11)) & (unint64_t)&_mh_execute_header;
    }
    v20.i64[1] = v11 - v9 % v11;
    if (v12 < 0x3F)
    {
      *((void *)&v21 + 1) = 0x80000000uLL >> v12 << (v12 + 1);
      unsigned int v14 = 0xFFFFFFFF >> -(char)v12;
      if (!v12) {
        unsigned int v14 = 0;
      }
      LODWORD(v22) = v14;
      if (v12 >= 0x1F) {
        unsigned int v15 = -1;
      }
      else {
        unsigned int v15 = 0xFFFFFFFF >> ~(_BYTE)v12;
      }
      goto LABEL_23;
    }
LABEL_22:
    *((void *)&v21 + 1) = 0;
    int v16 = -(int)v12;
    unsigned int v15 = -1;
    LODWORD(v22) = 0xFFFFFFFF >> v16;
LABEL_23:
    HIDWORD(v22) = v15;
    do
      unint64_t v17 = sub_100164E00(&v18);
    while (v17 >= v5);
    return *a3 + v17;
  }
  return result;
}

uint64_t sub_100164E00(uint64_t *a1)
{
  unint64_t v1 = a1[4];
  if (v1)
  {
    uint64_t v2 = *a1;
    unint64_t v3 = a1[5];
    unint64_t v4 = a1[2];
    unint64_t v5 = *(void *)(*a1 + 2496);
    if (v4 >= 0x40)
    {
      for (uint64_t i = 0; i != v1; ++i)
      {
        do
        {
          uint64_t v16 = 4 * v5;
          unint64_t v17 = v5 + 397;
          unint64_t v5 = (v5 + 1) % 0x270;
          unsigned int v18 = *(_DWORD *)(v2 + 4 * (v17 % 0x270)) ^ ((*(_DWORD *)(v2 + 4 * v5) & 0x7FFFFFFE | *(_DWORD *)(v2 + v16) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(v2 + 4 * v5) << 31) >> 31) & 0x9908B0DF;
          *(_DWORD *)(v2 + v16) = v18;
          unsigned int v19 = ((v18 ^ (v18 >> 11)) << 7) & 0x9D2C5680 ^ v18 ^ (v18 >> 11);
          unint64_t v20 = (v19 << 15) & 0xEFC60000 ^ v19 ^ (((v19 << 15) & 0xEFC60000 ^ v19) >> 18);
        }
        while (v3 <= v20);
      }
      uint64_t v6 = a1[7] & v20;
    }
    else
    {
      uint64_t v6 = 0;
      for (uint64_t j = 0; j != v1; ++j)
      {
        do
        {
          uint64_t v8 = 4 * v5;
          unint64_t v9 = v5 + 397;
          unint64_t v5 = (v5 + 1) % 0x270;
          unsigned int v10 = *(_DWORD *)(v2 + 4 * (v9 % 0x270)) ^ ((*(_DWORD *)(v2 + 4 * v5) & 0x7FFFFFFE | *(_DWORD *)(v2 + v8) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(v2 + 4 * v5) << 31) >> 31) & 0x9908B0DF;
          *(_DWORD *)(v2 + v8) = v10;
          unsigned int v11 = ((v10 ^ (v10 >> 11)) << 7) & 0x9D2C5680 ^ v10 ^ (v10 >> 11);
          unint64_t v12 = (v11 << 15) & 0xEFC60000 ^ v11 ^ (((v11 << 15) & 0xEFC60000 ^ v11) >> 18);
        }
        while (v3 <= v12);
        uint64_t v6 = (v6 << v4) + (a1[7] & v12);
      }
    }
    *(void *)(v2 + 2496) = v5;
    unint64_t v13 = a1[3];
    if (v1 < v13) {
      goto LABEL_14;
    }
    return v6;
  }
  uint64_t v6 = 0;
  unint64_t v13 = a1[3];
  if (!v13) {
    return v6;
  }
LABEL_14:
  uint64_t v21 = *a1;
  unint64_t v22 = a1[6];
  unint64_t v23 = a1[2];
  unint64_t v24 = *(void *)(*a1 + 2496);
  if (v23 >= 0x3F)
  {
    do
    {
      do
      {
        uint64_t v31 = 4 * v24;
        unint64_t v32 = v24 + 397;
        unint64_t v24 = (v24 + 1) % 0x270;
        unsigned int v33 = *(_DWORD *)(v21 + 4 * (v32 % 0x270)) ^ ((*(_DWORD *)(v21 + 4 * v24) & 0x7FFFFFFE | *(_DWORD *)(v21 + v31) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(v21 + 4 * v24) << 31) >> 31) & 0x9908B0DF;
        *(_DWORD *)(v21 + v31) = v33;
        unsigned int v34 = ((v33 ^ (v33 >> 11)) << 7) & 0x9D2C5680 ^ v33 ^ (v33 >> 11);
        unint64_t v35 = (v34 << 15) & 0xEFC60000 ^ v34 ^ (((v34 << 15) & 0xEFC60000 ^ v34) >> 18);
      }
      while (v22 <= v35);
      ++v1;
    }
    while (v1 != v13);
    uint64_t v36 = *((_DWORD *)a1 + 15) & v35;
    *(void *)(v21 + 2496) = v24;
    return v36;
  }
  else
  {
    char v25 = v23 + 1;
    do
    {
      do
      {
        uint64_t v26 = 4 * v24;
        unint64_t v27 = v24 + 397;
        unint64_t v24 = (v24 + 1) % 0x270;
        unsigned int v28 = *(_DWORD *)(v21 + 4 * (v27 % 0x270)) ^ ((*(_DWORD *)(v21 + 4 * v24) & 0x7FFFFFFE | *(_DWORD *)(v21 + v26) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(v21 + 4 * v24) << 31) >> 31) & 0x9908B0DF;
        *(_DWORD *)(v21 + v26) = v28;
        unsigned int v29 = ((v28 ^ (v28 >> 11)) << 7) & 0x9D2C5680 ^ v28 ^ (v28 >> 11);
        unint64_t v30 = (v29 << 15) & 0xEFC60000 ^ v29 ^ (((v29 << 15) & 0xEFC60000 ^ v29) >> 18);
      }
      while (v22 <= v30);
      uint64_t v6 = (v6 << v25) + (*((_DWORD *)a1 + 15) & v30);
      ++v1;
    }
    while (v1 != v13);
    *(void *)(v21 + 2496) = v24;
    return v6;
  }
}

uint64_t sub_100165130(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  uint64_t result = a3[1];
  if (result != *a3)
  {
    unsigned int v4 = result - *a3 + 1;
    if (result - *a3 == -1)
    {
      uint64_t v16 = *(void *)(a2 + 2496);
      unint64_t v17 = (v16 + 1) % 0x270uLL;
      unsigned int v18 = *(_DWORD *)(a2 + 4 * ((v16 + 397) % 0x270uLL)) ^ ((*(_DWORD *)(a2 + 4 * v17) & 0x7FFFFFFE | *(_DWORD *)(a2 + 4 * v16) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(a2 + 4 * v17) << 31) >> 31) & 0x9908B0DF;
      *(_DWORD *)(a2 + 4 * v16) = v18;
      *(void *)(a2 + 2496) = v17;
      unsigned int v19 = ((v18 ^ (v18 >> 11)) << 7) & 0x9D2C5680 ^ v18 ^ (v18 >> 11);
      return (v19 << 15) & 0xEFC60000 ^ v19 ^ (((v19 << 15) & 0xEFC60000 ^ v19) >> 18);
    }
    else
    {
      uint64_t v5 = __clz(v4);
      uint64_t v6 = 31;
      if (((v4 << v5) & 0x7FFFFFFF) != 0) {
        uint64_t v6 = 32;
      }
      unint64_t v7 = v6 - v5;
      unint64_t v8 = v7 >> 5;
      if ((v7 & 0x1F) != 0) {
        ++v8;
      }
      if (v8 <= v7) {
        unsigned int v9 = 0xFFFFFFFF >> -(v7 / v8);
      }
      else {
        unsigned int v9 = 0;
      }
      unint64_t v10 = *(void *)(a2 + 2496);
      do
      {
        uint64_t v11 = 4 * v10;
        unint64_t v12 = v10 + 397;
        unint64_t v10 = (v10 + 1) % 0x270;
        unsigned int v13 = *(_DWORD *)(a2 + 4 * (v12 % 0x270)) ^ ((*(_DWORD *)(a2 + 4 * v10) & 0x7FFFFFFE | *(_DWORD *)(a2 + v11) & 0x80000000) >> 1) ^ ((int)(*(_DWORD *)(a2 + 4 * v10) << 31) >> 31) & 0x9908B0DF;
        *(_DWORD *)(a2 + v11) = v13;
        unsigned int v14 = ((v13 ^ (v13 >> 11)) << 7) & 0x9D2C5680 ^ v13 ^ (v13 >> 11);
        unsigned int v15 = ((v14 << 15) & 0xEFC60000 ^ v14 ^ (((v14 << 15) & 0xEFC60000 ^ v14) >> 18)) & v9;
      }
      while (v15 >= v4);
      *(void *)(a2 + 2496) = v10;
      return *a3 + v15;
    }
  }
  return result;
}

void sub_1001652D0()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100165348()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_1001653C0(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

void sub_1001653F0()
{
}

void sub_100165414(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  unint64_t v20 = sub_10002986C(&std::cerr, (uint64_t)"Unhandled exception ", 20);
  if (v23 < 0) {
    unsigned int v19 = v22;
  }
  size_t v21 = strlen(v19);
  sub_10002986C(v20, (uint64_t)v19, v21);
  if (v23 < 0) {
    operator delete(v22);
  }
}

void sub_100165488(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001654A4()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10047DBF8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10047DBF8))
  {
    operator new();
  }
  return qword_10047DBF0;
}

void sub_100165594(_Unwind_Exception *a1)
{
}

void sub_1001655AC(uint64_t a1)
{
  if (!a1)
  {
    sub_1000AE4B0(v10, "");
    sub_1001661BC("Cannot set null runtime configuration", &__p);
    sub_10016A2C4((uint64_t)v10, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v11 < 0) {
      operator delete(v10[0]);
    }
    sub_100149690((uint64_t)v9);
  }
  uint64_t v1 = qword_10047DBE8;
  qword_10047DBE8 = a1;
  if (!v1) {
    return;
  }
  uint64_t v2 = sub_1001654A4();
  sub_1000CD728((const char *)((unint64_t)"20RuntimeConfiguration" & 0x7FFFFFFFFFFFFFFFLL), &v8);
  std::string::size_type v3 = 0;
  while (1)
  {
    std::string::size_type v4 = std::string::find(&v8, "boost::units::", v3, 0xEuLL);
    if (v4 == -1) {
      break;
    }
    std::string::size_type v3 = v4;
    std::string::erase(&v8, v4, 0xEuLL);
  }
  sub_1000CD728((const char *)((unint64_t)"20RuntimeConfiguration" & 0x7FFFFFFFFFFFFFFFLL), &v7);
  std::string::size_type v5 = 0;
  while (1)
  {
    std::string::size_type v6 = std::string::find(&v7, "boost::units::", v5, 0xEuLL);
    if (v6 == -1) {
      break;
    }
    std::string::size_type v5 = v6;
    std::string::erase(&v7, v6, 0xEuLL);
  }
  if (v2 != v1)
  {
    sub_1000AE4B0(v10, "");
    sub_10015E5F4("Runtime configuration ", &__p);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&v13, v8.__r_.__value_.__l.__data_, v8.__r_.__value_.__l.__size_);
    }
    else {
      std::string v13 = v8;
    }
    sub_10016620C(" already set.  Error trying to set runtime configuration ", &v14);
    if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&v15, v7.__r_.__value_.__l.__data_, v7.__r_.__value_.__l.__size_);
    }
    else {
      std::string v15 = v7;
    }
    sub_10016A2C4((uint64_t)v10, (uint64_t)&__p, 4);
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v15.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_28:
        if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_29;
        }
        goto LABEL_34;
      }
    }
    else if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_28;
    }
    operator delete(v14.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_29:
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_30;
      }
      goto LABEL_35;
    }
LABEL_34:
    operator delete(v13.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_30:
      if ((v11 & 0x80000000) == 0) {
        goto LABEL_31;
      }
LABEL_36:
      operator delete(v10[0]);
LABEL_31:
      sub_1000D11E0((uint64_t)v9);
    }
LABEL_35:
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((v11 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_36;
  }
  if ((SHIBYTE(v7.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v8.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_14:
    operator delete(v8.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(v7.__r_.__value_.__l.__data_);
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_14;
  }
}

void sub_1001658BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,char a34)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_100165990(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void *sub_1001659E4(void *a1)
{
  *a1 = off_10045A438;
  uint64_t v2 = (void **)a1[3];
  if (v2)
  {
    do
    {
      std::string::size_type v5 = (void **)*v2;
      sub_100077BC8((uint64_t)(v2 + 5));
      if (*((char *)v2 + 39) < 0) {
        operator delete(v2[2]);
      }
      operator delete(v2);
      uint64_t v2 = v5;
    }
    while (v5);
  }
  std::string::size_type v3 = (void *)a1[1];
  a1[1] = 0;
  if (v3) {
    operator delete(v3);
  }
  return a1;
}

void sub_100165A74(void *a1)
{
  *a1 = off_10045A438;
  uint64_t v2 = (void **)a1[3];
  if (v2)
  {
    do
    {
      std::string::size_type v4 = (void **)*v2;
      sub_100077BC8((uint64_t)(v2 + 5));
      if (*((char *)v2 + 39) < 0) {
        operator delete(v2[2]);
      }
      operator delete(v2);
      uint64_t v2 = v4;
    }
    while (v4);
  }
  std::string::size_type v3 = (void *)a1[1];
  a1[1] = 0;
  if (v3) {
    operator delete(v3);
  }

  operator delete();
}

void sub_100165B24(char *__s@<X1>, uint64_t a2@<X0>, _DWORD *a3@<X8>)
{
  size_t v6 = strlen(__s);
  if (v6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  size_t v7 = v6;
  if (v6 >= 0x17)
  {
    uint64_t v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17) {
      uint64_t v9 = v6 | 7;
    }
    uint64_t v10 = v9 + 1;
    p_dst = (void **)operator new(v9 + 1);
    size_t v16 = v7;
    int64_t v17 = v10 | 0x8000000000000000;
    long long __dst = (char *)p_dst;
    goto LABEL_8;
  }
  HIBYTE(v17) = v6;
  p_dst = (void **)&__dst;
  if (v6) {
LABEL_8:
  }
    memcpy(p_dst, __s, v7);
  *((unsigned char *)p_dst + v7) = 0;
  std::locale::locale(&v14);
  if (v17 >= 0) {
    char v11 = (char *)&__dst;
  }
  else {
    char v11 = __dst;
  }
  size_t v12 = HIBYTE(v17);
  if (v17 < 0) {
    size_t v12 = v16;
  }
  sub_100077AF4(&__p, v11, &v14, &v11[v12]);
  std::locale::~locale(&v14);
  if (SHIBYTE(v17) < 0) {
    operator delete(__dst);
  }
  std::string v13 = sub_100077D38((void *)(a2 + 8), (uint64_t)&__p);
  if (v13)
  {
    sub_1000A8E40((uint64_t)a3, (uint64_t)(v13 + 5));
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_20:
    operator delete(__p.__r_.__value_.__l.__data_);
    return;
  }
  *a3 = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_20;
  }
}

void sub_100165C80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100165CB8(uint64_t a1, char *__s, uint64_t a3)
{
  size_t v6 = strlen(__s);
  if (v6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  size_t v7 = v6;
  if (v6 >= 0x17)
  {
    uint64_t v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17) {
      uint64_t v9 = v6 | 7;
    }
    uint64_t v10 = v9 + 1;
    p_dst = (void **)operator new(v9 + 1);
    size_t v15 = v7;
    int64_t v16 = v10 | 0x8000000000000000;
    long long __dst = (char *)p_dst;
    goto LABEL_8;
  }
  HIBYTE(v16) = v6;
  p_dst = (void **)&__dst;
  if (v6) {
LABEL_8:
  }
    memcpy(p_dst, __s, v7);
  *((unsigned char *)p_dst + v7) = 0;
  std::locale::locale(&v13);
  if (v16 >= 0) {
    char v11 = (char *)&__dst;
  }
  else {
    char v11 = __dst;
  }
  size_t v12 = HIBYTE(v16);
  if (v16 < 0) {
    size_t v12 = v15;
  }
  sub_100077AF4(&__p, v11, &v13, &v11[v12]);
  sub_1000A9790(a1 + 8, (uint64_t)&__p, (uint64_t)&__p, a3);
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    std::locale::~locale(&v13);
    if ((SHIBYTE(v16) & 0x80000000) == 0) {
      return;
    }
LABEL_18:
    operator delete(__dst);
    return;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  std::locale::~locale(&v13);
  if (SHIBYTE(v16) < 0) {
    goto LABEL_18;
  }
}

void sub_100165E10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::locale a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0)
  {
    operator delete(__p);
    std::locale::~locale(&a10);
    if ((a16 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(a1);
  }
  else
  {
    std::locale::~locale(&a10);
    if ((a16 & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  operator delete(a11);
  _Unwind_Resume(a1);
}

void sub_100165E74(void *a1)
{
  if (a1[4])
  {
    uint64_t v2 = (void **)a1[3];
    if (v2)
    {
      do
      {
        std::string::size_type v5 = (void **)*v2;
        sub_100077BC8((uint64_t)(v2 + 5));
        if (*((char *)v2 + 39) < 0) {
          operator delete(v2[2]);
        }
        operator delete(v2);
        uint64_t v2 = v5;
      }
      while (v5);
    }
    a1[3] = 0;
    uint64_t v3 = a1[2];
    if (v3)
    {
      for (uint64_t i = 0; i != v3; ++i)
        *(void *)(a1[1] + 8 * i) = 0;
    }
    a1[4] = 0;
  }
}

void sub_100165F04(uint64_t a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    p_dst = (void **)operator new(v7 + 1);
    size_t v16 = v5;
    int64_t v17 = v8 | 0x8000000000000000;
    long long __dst = (char *)p_dst;
    goto LABEL_8;
  }
  HIBYTE(v17) = v4;
  p_dst = (void **)&__dst;
  if (v4) {
LABEL_8:
  }
    memcpy(p_dst, __s, v5);
  *((unsigned char *)p_dst + v5) = 0;
  std::locale::locale(&v14);
  if (v17 >= 0) {
    uint64_t v9 = (char *)&__dst;
  }
  else {
    uint64_t v9 = __dst;
  }
  size_t v10 = HIBYTE(v17);
  if (v17 < 0) {
    size_t v10 = v16;
  }
  sub_100077AF4(&v18, v9, &v14, &v9[v10]);
  char v11 = (void *)(a1 + 8);
  size_t v12 = sub_1000A9C14(v11, (uint64_t)&v18);
  if (v12)
  {
    sub_1000A9E44(v11, v12, (uint64_t)&__p);
    std::locale v13 = (void **)__p;
    std::string __p = 0;
    if (v13)
    {
      if (v20)
      {
        sub_100077BC8((uint64_t)(v13 + 5));
        if (*((char *)v13 + 39) < 0) {
          operator delete(v13[2]);
        }
      }
      operator delete(v13);
    }
  }
  if ((SHIBYTE(v18.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    std::locale::~locale(&v14);
    if ((SHIBYTE(v17) & 0x80000000) == 0) {
      return;
    }
LABEL_24:
    operator delete(__dst);
    return;
  }
  operator delete(v18.__r_.__value_.__l.__data_);
  std::locale::~locale(&v14);
  if (SHIBYTE(v17) < 0) {
    goto LABEL_24;
  }
}

void sub_10016609C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
  {
    operator delete(__p);
    std::locale::~locale((std::locale *)&a9);
    if ((a15 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(a1);
  }
  else
  {
    std::locale::~locale((std::locale *)&a9);
    if ((a15 & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  operator delete(a10);
  _Unwind_Resume(a1);
}

void **sub_100166108(void **result)
{
  uint64_t v1 = *result;
  *uint64_t result = 0;
  if (v1)
  {
    *uint64_t v1 = off_10045A438;
    uint64_t v2 = (void **)v1[3];
    if (v2)
    {
      do
      {
        size_t v4 = (void **)*v2;
        sub_100077BC8((uint64_t)(v2 + 5));
        if (*((char *)v2 + 39) < 0) {
          operator delete(v2[2]);
        }
        operator delete(v2);
        uint64_t v2 = v4;
      }
      while (v4);
    }
    uint64_t v3 = (void *)v1[1];
    v1[1] = 0;
    if (v3) {
      operator delete(v3);
    }
    operator delete();
  }
  return result;
}

std::string *sub_1001661BC@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1001661F0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_10016620C@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_100166240(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10016625C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1001662D4()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10016634C(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

void sub_10016637C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1001663F4()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_10016646C(int a1)
{
  if (a1 >= 5000) {
    return (a1 - 5000) / 5u;
  }
  else {
    return ((a1 - 2407) / 5);
  }
}

uint64_t sub_1001664B0(uint64_t a1, float a2)
{
  return (uint64_t)(float)((float)((float)((float)a1 - (float)((float)a1 * a2)) / a2) * 1000000.0);
}

uint64_t sub_1001664D8(uint64_t a1)
{
  memset(v3, 0, sizeof(v3));
  int v1 = sub_100166594(v3, 64, a1);
  return sub_100166674((void *const *)v3, 64, v1);
}

uint64_t sub_100166594(void *a1, int a2, uint64_t a3)
{
  unint64_t v5 = a3 + a2;
  if (v5)
  {
    if (v5 >> 61) {
      sub_1000A9108();
    }
    size_t v6 = 8 * v5;
    uint64_t v7 = (char *)operator new(8 * v5);
    bzero(v7, v6);
    unint64_t v5 = (unint64_t)&v7[v6];
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v8 = backtrace((void **)v7, ((v5 - (unint64_t)v7) >> 3) - a3);
  memcpy(a1, &v7[8 * a3], 8 * (int)v8);
  if (v7) {
    operator delete(v7);
  }
  return v8;
}

void sub_100166648(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (v11) {
    operator delete(v11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100166674(void *const *a1, int a2, int a3)
{
  unint64_t v5 = backtrace_symbols(a1, a3);
  sub_1000CD96C((uint64_t)v34);
  int v25 = a3;
  if (a3 >= 1)
  {
    uint64_t v6 = 0;
    while (1)
    {
      snprintf(__str, 0x40uLL, "%-3d\t%*p\t", v6, 18, a1[v6]);
      size_t v7 = strlen(__str);
      sub_10002986C(v34, (uint64_t)__str, v7);
      int v8 = dladdr(a1[v6], &v33);
      dli_sname = v33.dli_sname;
      if (v8 && v33.dli_sname != 0) {
        break;
      }
      size_t v11 = strlen(v5[v6]);
      size_t v12 = sub_10002986C(v34, (uint64_t)v5[v6], v11);
      sub_10002986C(v12, (uint64_t)"\n", 1);
LABEL_3:
      if (v25 == ++v6) {
        goto LABEL_30;
      }
    }
    __p[0] = 0;
    __p[1] = 0;
    uint64_t v32 = 0;
    size_t v13 = strlen(v33.dli_sname);
    if (v13 >= 0x7FFFFFFFFFFFFFF8) {
      sub_1000A6968();
    }
    std::locale v14 = (void *)v13;
    if (v13 >= 0x17)
    {
      uint64_t v16 = (v13 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v13 | 7) != 0x17) {
        uint64_t v16 = v13 | 7;
      }
      uint64_t v17 = v16 + 1;
      size_t v15 = (void **)operator new(v16 + 1);
      __dst[1] = v14;
      unint64_t v27 = v17 | 0x8000000000000000;
      __dst[0] = v15;
    }
    else
    {
      HIBYTE(v27) = v13;
      size_t v15 = __dst;
      if (!v13)
      {
LABEL_18:
        *((unsigned char *)v14 + (void)v15) = 0;
        sub_10000DB3C(__dst, (uint64_t)&v28);
        if (SHIBYTE(v32) < 0) {
          operator delete(__p[0]);
        }
        *(_OWORD *)std::string __p = v28;
        uint64_t v32 = v29;
        HIBYTE(v29) = 0;
        LOBYTE(v28) = 0;
        int v18 = v30;
        if (SHIBYTE(v27) < 0)
        {
          operator delete(__dst[0]);
          if (v18)
          {
LABEL_22:
            if (v32 >= 0) {
              unsigned int v19 = (const char *)__p;
            }
            else {
              unsigned int v19 = (const char *)__p[0];
            }
LABEL_28:
            size_t v20 = strlen(v19);
            size_t v21 = sub_10002986C(v34, (uint64_t)v19, v20);
            sub_10002986C(v21, (uint64_t)" + ", 3);
            unint64_t v22 = (void *)std::ostream::operator<<();
            sub_10002986C(v22, (uint64_t)"\n", 1);
            if (SHIBYTE(v32) < 0) {
              operator delete(__p[0]);
            }
            goto LABEL_3;
          }
        }
        else if (v30)
        {
          goto LABEL_22;
        }
        unsigned int v19 = v33.dli_sname;
        if (!v33.dli_sname) {
          unsigned int v19 = v5[v6];
        }
        goto LABEL_28;
      }
    }
    memmove(v15, dli_sname, (size_t)v14);
    goto LABEL_18;
  }
LABEL_30:
  free(v5);
  if (a2 == v25) {
    sub_10002986C(v34, (uint64_t)"[truncated?]\n", 13);
  }
  std::stringbuf::str();
  if (v35 < 0) {
    operator delete((void *)v34[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_100166A30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
}

void sub_100166A44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  if (a29 < 0)
  {
    operator delete(__p);
    sub_1000CDB10((uint64_t)&a34);
    _Unwind_Resume(a1);
  }
  sub_1000CDB10((uint64_t)&a34);
  _Unwind_Resume(a1);
}

void sub_100166AA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
}

uint64_t sub_100166ABC(uint64_t a1)
{
  return sub_100166674(*(void *const **)a1, (*(void *)(a1 + 16) - *(void *)a1) >> 3, (*(void *)(a1 + 8) - *(void *)a1) >> 3);
}

void sub_100166ADC(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  sub_100166C08((void **)a1, 0x40uLL);
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = (void **)operator new(0x200uLL);
  *((_OWORD *)v3 + 30) = 0u;
  *((_OWORD *)v3 + 31) = 0u;
  *((_OWORD *)v3 + 28) = 0u;
  *((_OWORD *)v3 + 29) = 0u;
  *((_OWORD *)v3 + 26) = 0u;
  *((_OWORD *)v3 + 27) = 0u;
  *((_OWORD *)v3 + 24) = 0u;
  *((_OWORD *)v3 + 25) = 0u;
  *((_OWORD *)v3 + 22) = 0u;
  *((_OWORD *)v3 + 23) = 0u;
  *((_OWORD *)v3 + 20) = 0u;
  *((_OWORD *)v3 + 21) = 0u;
  *((_OWORD *)v3 + 18) = 0u;
  *((_OWORD *)v3 + 19) = 0u;
  *((_OWORD *)v3 + 16) = 0u;
  *((_OWORD *)v3 + 17) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 15) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *((_OWORD *)v3 + 3) = 0u;
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  unint64_t v4 = backtrace(v3, 64);
  memcpy(v2, v3, 8 * v4);
  operator delete(v3);
  unint64_t v5 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3;
  if (v4 <= v5)
  {
    if (v4 < v5) {
      *(void *)(a1 + 8) = *(void *)a1 + 8 * v4;
    }
  }
  else
  {
    sub_100166C08((void **)a1, v4 - v5);
  }
}

void sub_100166BCC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_100166C08(void **a1, unint64_t a2)
{
  unint64_t v5 = (char *)a1[1];
  unint64_t v4 = a1[2];
  uint64_t v6 = v5;
  if (a2 <= (v4 - v5) >> 3)
  {
    if (a2)
    {
      bzero(v5, 8 * a2);
      uint64_t v6 = &v5[8 * a2];
    }
    a1[1] = v6;
  }
  else
  {
    size_t v7 = (char *)*a1;
    uint64_t v8 = v5 - (unsigned char *)*a1;
    uint64_t v9 = v8 >> 3;
    unint64_t v10 = (v8 >> 3) + a2;
    if (v10 >> 61) {
      sub_1000A9108();
    }
    uint64_t v11 = v4 - v7;
    if (v11 >> 2 > v10) {
      unint64_t v10 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12)
    {
      if (v12 >> 61) {
        sub_1000A6A10();
      }
      size_t v13 = operator new(8 * v12);
    }
    else
    {
      size_t v13 = 0;
    }
    std::locale v14 = &v13[8 * v9];
    size_t v15 = 8 * a2;
    uint64_t v16 = &v13[8 * v12];
    bzero(v14, v15);
    uint64_t v17 = &v14[v15];
    if (v5 != v7)
    {
      unint64_t v18 = v5 - v7 - 8;
      if (v18 < 0x58) {
        goto LABEL_32;
      }
      if ((unint64_t)(v5 - v13 - v8) < 0x20) {
        goto LABEL_32;
      }
      uint64_t v19 = (v18 >> 3) + 1;
      uint64_t v20 = 8 * (v19 & 0x3FFFFFFFFFFFFFFCLL);
      uint64_t v6 = &v5[-v20];
      v14 -= v20;
      size_t v21 = &v13[8 * v9 - 16];
      unint64_t v22 = v5 - 16;
      uint64_t v23 = v19 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        long long v24 = *(_OWORD *)v22;
        *(v21 - 1) = *((_OWORD *)v22 - 1);
        _OWORD *v21 = v24;
        v21 -= 2;
        v22 -= 32;
        v23 -= 4;
      }
      while (v23);
      if (v19 != (v19 & 0x3FFFFFFFFFFFFFFCLL))
      {
LABEL_32:
        do
        {
          uint64_t v25 = *((void *)v6 - 1);
          v6 -= 8;
          *((void *)v14 - 1) = v25;
          v14 -= 8;
        }
        while (v6 != v7);
      }
      uint64_t v6 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v17;
    a1[2] = v16;
    if (v6)
    {
      operator delete(v6);
    }
  }
}

uint64_t sub_100166DBC(uint64_t a1)
{
  return a1;
}

void sub_100166DE8()
{
}

uint64_t sub_100166DFC(uint64_t a1, uint64_t *a2)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v15 = 0;
  int v13 = 0;
  __int16 v12 = 0;
  for (int i = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, __p);
        ;
        int i = v6 + v5 + (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2))
  {
    int v5 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v13, &v12) + i;
    if (!v13) {
      break;
    }
    switch(v12)
    {
      case 1:
        if (v13 != 8) {
          goto LABEL_6;
        }
        int v11 = 0;
        int v6 = (*(uint64_t (**)(uint64_t *, int *))(*a2 + 312))(a2, &v11);
        *(_DWORD *)(a1 + 8) = v11;
        char v7 = *(unsigned char *)(a1 + 32) | 1;
        goto LABEL_13;
      case 2:
        uint64_t v8 = *a2;
        if (v13 != 8) {
          goto LABEL_14;
        }
        int v6 = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 312))(a2, a1 + 12);
        char v7 = *(unsigned char *)(a1 + 32) | 2;
        goto LABEL_13;
      case 3:
        uint64_t v8 = *a2;
        if (v13 != 8) {
          goto LABEL_14;
        }
        int v6 = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 312))(a2, a1 + 16);
        char v7 = *(unsigned char *)(a1 + 32) | 4;
        goto LABEL_13;
      case 4:
        uint64_t v8 = *a2;
        if (v13 != 4) {
          goto LABEL_14;
        }
        int v6 = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 328))(a2, a1 + 24);
        char v7 = *(unsigned char *)(a1 + 32) | 8;
LABEL_13:
        *(unsigned char *)(a1 + 32) = v7;
        break;
      default:
LABEL_6:
        uint64_t v8 = *a2;
LABEL_14:
        int v6 = (*(uint64_t (**)(uint64_t *))(v8 + 352))(a2);
        break;
    }
  }
  int v9 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v15) < 0) {
    operator delete(__p[0]);
  }
  return (v9 + v5);
}

void sub_100167118(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10016714C(int *a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  long long v24 = v22;
  uint64_t v25 = &v23;
  int v3 = *a1;
  if (*a1 >= 0) {
    int v4 = *a1;
  }
  else {
    int v4 = -v3;
  }
  int v17 = v4;
  unint64_t v18 = &v23;
  char v19 = 48;
  int v20 = 48;
  uint64_t v5 = sub_10000D008((uint64_t)&v17);
  int v6 = (char *)v5;
  if ((v3 & 0x80000000) == 0)
  {
    long long v24 = (unsigned char *)v5;
    uint64_t v25 = &v23;
    unint64_t v7 = (unint64_t)(&v23 - v5);
    uint64_t v8 = a2;
    if ((unint64_t)(&v23 - v5) < 0x17) {
      goto LABEL_6;
    }
LABEL_14:
    std::string::__grow_by(a2, 0x16uLL, v7 - 22, 0, 0, 0, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v8 = a2;
    }
    else {
      uint64_t v8 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    if (v6 != &v23) {
      goto LABEL_7;
    }
LABEL_18:
    unint64_t v10 = v8;
    goto LABEL_21;
  }
  *(unsigned char *)(v5 - 1) = 45;
  int v6 = (char *)(v5 - 1);
  long long v24 = (unsigned char *)(v5 - 1);
  uint64_t v25 = &v23;
  unint64_t v7 = (unint64_t)(&v23 - v5 + 1);
  uint64_t v8 = a2;
  if (v7 >= 0x17) {
    goto LABEL_14;
  }
LABEL_6:
  if (v6 == &v23) {
    goto LABEL_18;
  }
LABEL_7:
  unint64_t v9 = &v21 - v6 + 23;
  if (v9 < 0x20 || (unint64_t)((char *)v8 - v6) < 0x20)
  {
    unint64_t v10 = v8;
    int v11 = v6;
  }
  else
  {
    unint64_t v10 = (std::string *)((char *)v8 + (v9 & 0xFFFFFFFFFFFFFFE0));
    int v11 = &v6[v9 & 0xFFFFFFFFFFFFFFE0];
    __int16 v12 = (long long *)(v6 + 16);
    int v13 = &v8->__r_.__value_.__r.__words[2];
    unint64_t v14 = v9 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      long long v15 = *v12;
      *((_OWORD *)v13 - 1) = *(v12 - 1);
      *(_OWORD *)int v13 = v15;
      v12 += 2;
      v13 += 4;
      v14 -= 32;
    }
    while (v14);
    if (v9 == (v9 & 0xFFFFFFFFFFFFFFE0)) {
      goto LABEL_21;
    }
  }
  do
  {
    std::string::value_type v16 = *v11++;
    v10->__r_.__value_.__s.__data_[0] = v16;
    unint64_t v10 = (std::string *)((char *)v10 + 1);
  }
  while (v11 != &v23);
LABEL_21:
  v10->__r_.__value_.__s.__data_[0] = 0;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
    a2->__r_.__value_.__l.__size_ = v7;
  }
  else {
    *((unsigned char *)&a2->__r_.__value_.__s + 23) = v7 & 0x7F;
  }
}

void sub_100167310(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10016732C(uint64_t a1)
{
  *(void *)a1 = off_10045A4E8;
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  sub_100075BE0(a1 + 8, *(void *)(a1 + 16));

  operator delete();
}

uint64_t sub_1001673A8(uint64_t a1, uint64_t *a2)
{
  v60[0] = 0;
  v60[1] = 0;
  uint64_t v61 = 0;
  int v59 = 0;
  __int16 v58 = 0;
  int v4 = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, v60);
  uint64_t v49 = a1 + 32;
  uint64_t v50 = a1 + 56;
  int v52 = (void **)(a1 + 8);
  int v53 = (uint64_t **)(a1 + 16);
  uint64_t v51 = a1;
  while (1)
  {
    int v5 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, v60, &v59, &v58) + v4;
    if (!v59) {
      break;
    }
    if (v58 == 3)
    {
      uint64_t v44 = *a2;
      if (v59 == 8)
      {
        int v45 = (*(uint64_t (**)(uint64_t *, uint64_t))(v44 + 312))(a2, v50) + v5;
        *(unsigned char *)(a1 + 60) |= 4u;
        goto LABEL_80;
      }
LABEL_78:
      int v46 = (*(uint64_t (**)(uint64_t *))(v44 + 352))(a2);
      goto LABEL_79;
    }
    if (v58 == 2)
    {
      uint64_t v44 = *a2;
      if (v59 == 11)
      {
        int v45 = (*(uint64_t (**)(uint64_t *, uint64_t))(v44 + 336))(a2, v49) + v5;
        *(unsigned char *)(a1 + 60) |= 2u;
        goto LABEL_80;
      }
      goto LABEL_78;
    }
    if (v58 != 1 || v59 != 13)
    {
      int v46 = (*(uint64_t (**)(uint64_t *))(*a2 + 352))(a2);
LABEL_79:
      int v45 = v46 + v5;
      goto LABEL_80;
    }
    sub_100075BE0((uint64_t)v52, *(void *)(a1 + 16));
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 8) = v53;
    uint64_t v57 = 0;
    int v56 = 0;
    int v6 = (*(uint64_t (**)(uint64_t *, uint64_t *, int *, char *))(*a2 + 232))(a2, &v57, &v56, (char *)&v57 + 4)
       + v5;
    if (HIDWORD(v57))
    {
      unsigned int v7 = 0;
      do
      {
        __p[0] = 0;
        __p[1] = 0;
        uint64_t v55 = 0;
        int v8 = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 336))(a2, __p);
        unint64_t v9 = v53;
        unint64_t v10 = *v53;
        int v11 = v53;
        if (*v53)
        {
          if (v55 >= 0) {
            __int16 v12 = (void *)HIBYTE(v55);
          }
          else {
            __int16 v12 = __p[1];
          }
          if (v55 >= 0) {
            int v13 = __p;
          }
          else {
            int v13 = (void **)__p[0];
          }
          while (1)
          {
            while (1)
            {
              unint64_t v9 = (uint64_t **)v10;
              std::string::value_type v16 = (const void *)v10[4];
              unint64_t v14 = v10 + 4;
              long long v15 = v16;
              int v17 = *((char *)v14 + 23);
              if (v17 >= 0) {
                size_t v18 = *((unsigned __int8 *)v14 + 23);
              }
              else {
                size_t v18 = v14[1];
              }
              if (v17 >= 0) {
                char v19 = v14;
              }
              else {
                char v19 = v15;
              }
              if (v18 >= (unint64_t)v12) {
                size_t v20 = (size_t)v12;
              }
              else {
                size_t v20 = v18;
              }
              int v21 = memcmp(v13, v19, v20);
              BOOL v22 = (unint64_t)v12 < v18;
              if (v21) {
                BOOL v22 = v21 < 0;
              }
              if (!v22) {
                break;
              }
              unint64_t v10 = *v9;
              int v11 = v9;
              if (!*v9) {
                goto LABEL_35;
              }
            }
            int v23 = memcmp(v19, v13, v20);
            BOOL v24 = v18 < (unint64_t)v12;
            if (v23) {
              BOOL v24 = v23 < 0;
            }
            if (!v24) {
              break;
            }
            unint64_t v10 = v9[1];
            if (!v10)
            {
              int v11 = v9 + 1;
              goto LABEL_35;
            }
          }
          uint64_t v25 = v9;
        }
        else
        {
LABEL_35:
          uint64_t v25 = operator new(0x50uLL);
          uint64_t v26 = v25 + 4;
          if (SHIBYTE(v55) < 0)
          {
            sub_1000559FC(v26, __p[0], (unint64_t)__p[1]);
          }
          else
          {
            *(_OWORD *)uint64_t v26 = *(_OWORD *)__p;
            v25[6] = v55;
          }
          v25[7] = 0;
          v25[8] = 0;
          v25[9] = 0;
          *uint64_t v25 = 0;
          v25[1] = 0;
          v25[2] = v9;
          *int v11 = v25;
          unint64_t v27 = (void *)**v52;
          long long v28 = v25;
          if (v27)
          {
            *int v52 = v27;
            long long v28 = *v11;
          }
          uint64_t v29 = *v53;
          BOOL v30 = v28 == *v53;
          *((unsigned char *)v28 + 24) = v30;
          if (!v30)
          {
            do
            {
              uint64_t v31 = v28[2];
              if (*(unsigned char *)(v31 + 24)) {
                break;
              }
              uint64_t v32 = *(uint64_t **)(v31 + 16);
              uint64_t v33 = *v32;
              if (*v32 == v31)
              {
                uint64_t v36 = v32[1];
                if (!v36 || (v37 = *(unsigned __int8 *)(v36 + 24), unsigned int v34 = (unsigned char *)(v36 + 24), v37))
                {
                  if (*(uint64_t **)v31 == v28)
                  {
                    *(unsigned char *)(v31 + 24) = 1;
                    *((unsigned char *)v32 + 24) = 0;
                    uint64_t v40 = *(void *)(v31 + 8);
                    *uint64_t v32 = v40;
                    if (v40) {
                      goto LABEL_55;
                    }
                  }
                  else
                  {
                    uint64_t v38 = *(uint64_t **)(v31 + 8);
                    uint64_t v39 = *v38;
                    *(void *)(v31 + 8) = *v38;
                    if (v39)
                    {
                      *(void *)(v39 + 16) = v31;
                      uint64_t v32 = *(uint64_t **)(v31 + 16);
                    }
                    v38[2] = (uint64_t)v32;
                    *(void *)(*(void *)(v31 + 16) + 8 * (**(void **)(v31 + 16) != v31)) = v38;
                    *uint64_t v38 = v31;
                    *(void *)(v31 + 16) = v38;
                    uint64_t v32 = (uint64_t *)v38[2];
                    uint64_t v31 = *v32;
                    *((unsigned char *)v38 + 24) = 1;
                    *((unsigned char *)v32 + 24) = 0;
                    uint64_t v40 = *(void *)(v31 + 8);
                    *uint64_t v32 = v40;
                    if (v40) {
LABEL_55:
                    }
                      *(void *)(v40 + 16) = v32;
                  }
                  *(void *)(v31 + 16) = v32[2];
                  *(void *)(v32[2] + 8 * (*(void *)v32[2] != (void)v32)) = v31;
                  *(void *)(v31 + 8) = v32;
LABEL_62:
                  v32[2] = v31;
                  break;
                }
              }
              else if (!v33 || (v35 = *(unsigned __int8 *)(v33 + 24), unsigned int v34 = (unsigned char *)(v33 + 24), v35))
              {
                if (*(uint64_t **)v31 == v28)
                {
                  uint64_t v43 = v28[1];
                  *(void *)uint64_t v31 = v43;
                  if (v43)
                  {
                    *(void *)(v43 + 16) = v31;
                    uint64_t v32 = *(uint64_t **)(v31 + 16);
                  }
                  v28[2] = (uint64_t)v32;
                  *(void *)(*(void *)(v31 + 16) + 8 * (**(void **)(v31 + 16) != v31)) = v28;
                  v28[1] = v31;
                  *(void *)(v31 + 16) = v28;
                  uint64_t v32 = (uint64_t *)v28[2];
                  *((unsigned char *)v28 + 24) = 1;
                  *((unsigned char *)v32 + 24) = 0;
                  uint64_t v31 = v32[1];
                  unsigned __int8 v41 = *(uint64_t **)v31;
                  v32[1] = *(void *)v31;
                  if (v41) {
LABEL_60:
                  }
                    v41[2] = (uint64_t)v32;
                }
                else
                {
                  *(unsigned char *)(v31 + 24) = 1;
                  *((unsigned char *)v32 + 24) = 0;
                  uint64_t v31 = v32[1];
                  unsigned __int8 v41 = *(uint64_t **)v31;
                  v32[1] = *(void *)v31;
                  if (v41) {
                    goto LABEL_60;
                  }
                }
                *(void *)(v31 + 16) = v32[2];
                *(void *)(v32[2] + 8 * (*(void *)v32[2] != (void)v32)) = v31;
                *(void *)uint64_t v31 = v32;
                goto LABEL_62;
              }
              *(unsigned char *)(v31 + 24) = 1;
              long long v28 = v32;
              *((unsigned char *)v32 + 24) = v32 == v29;
              *unsigned int v34 = 1;
            }
            while (v32 != v29);
          }
          ++*(void *)(v51 + 24);
        }
        int v42 = (*(uint64_t (**)(uint64_t *, void *))(*a2 + 336))(a2, v25 + 7);
        if (SHIBYTE(v55) < 0) {
          operator delete(__p[0]);
        }
        v6 += v8 + v42;
        ++v7;
      }
      while (v7 < HIDWORD(v57));
    }
    int v45 = (*(uint64_t (**)(uint64_t *))(*a2 + 240))(a2) + v6;
    a1 = v51;
    *(unsigned char *)(v51 + 60) |= 1u;
LABEL_80:
    int v4 = (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2) + v45;
  }
  int v47 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v61) < 0) {
    operator delete(v60[0]);
  }
  return (v47 + v5);
}

void sub_100167ACC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if ((a28 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_100167B38(uint64_t *a1)
{
  sub_1000CD96C((uint64_t)v12);
  uint64_t v2 = sub_10002986C(v12, (uint64_t)"{", 1);
  uint64_t v3 = *a1;
  int v8 = a1 + 1;
  uint64_t v9 = v3;
  sub_100169404(&v9, &v8);
  if ((v11 & 0x80u) == 0) {
    int v4 = __p;
  }
  else {
    int v4 = (void **)__p[0];
  }
  if ((v11 & 0x80u) == 0) {
    uint64_t v5 = v11;
  }
  else {
    uint64_t v5 = (uint64_t)__p[1];
  }
  int v6 = sub_10002986C(v2, (uint64_t)v4, v5);
  sub_10002986C(v6, (uint64_t)"}", 1);
  if ((char)v11 < 0) {
    operator delete(__p[0]);
  }
  std::stringbuf::str();
  if (v13 < 0) {
    operator delete((void *)v12[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_100167CD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100167CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100167CFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1000CDB10((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void sub_100167D20(uint64_t a1)
{
  sub_10000DEF8(a1);

  operator delete();
}

uint64_t sub_100167D58(uint64_t a1, uint64_t *a2)
{
  v33[0] = 0;
  v33[1] = 0;
  uint64_t v34 = 0;
  int v32 = 0;
  __int16 v31 = 0;
  int v4 = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, v33);
  uint64_t v5 = (_WORD *)(a1 + 400);
  uint64_t v6 = a1 + 360;
  uint64_t v7 = a1 + 352;
  uint64_t v8 = a1 + 288;
  uint64_t v9 = a1 + 248;
  while (1)
  {
    int v10 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, v33, &v32, &v31) + v4;
    if (!v32) {
      break;
    }
    switch(v31)
    {
      case 1:
        uint64_t v11 = *a2;
        if (v32 != 11) {
          goto LABEL_47;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 336))(a2, a1 + 32) + v10;
        *v5 |= 2u;
        break;
      case 2:
        uint64_t v11 = *a2;
        if (v32 != 11) {
          goto LABEL_47;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 336))(a2, a1 + 56) + v10;
        *v5 |= 4u;
        break;
      case 3:
        if (v32 != 8) {
          goto LABEL_62;
        }
        HIDWORD(v30) = 0;
        int v12 = (*(uint64_t (**)(uint64_t *, char *))(*a2 + 312))(a2, (char *)&v30 + 4) + v10;
        *(_DWORD *)(a1 + 80) = HIDWORD(v30);
        *v5 |= 8u;
        break;
      case 4:
        uint64_t v11 = *a2;
        if (v32 != 11) {
          goto LABEL_47;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 336))(a2, a1 + 88) + v10;
        *v5 |= 0x10u;
        break;
      case 5:
        uint64_t v11 = *a2;
        if (v32 != 11) {
          goto LABEL_47;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 336))(a2, a1 + 136) + v10;
        *v5 |= 0x40u;
        break;
      case 6:
        uint64_t v11 = *a2;
        if (v32 != 10) {
          goto LABEL_47;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 320))(a2, a1 + 160) + v10;
        *v5 |= 0x80u;
        break;
      case 7:
        uint64_t v11 = *a2;
        if (v32 != 11) {
          goto LABEL_47;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 336))(a2, a1 + 168) + v10;
        *v5 |= 0x100u;
        break;
      case 8:
        uint64_t v11 = *a2;
        if (v32 != 11) {
          goto LABEL_47;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 336))(a2, a1 + 192) + v10;
        *v5 |= 0x200u;
        break;
      case 9:
        if (v32 != 15) {
          goto LABEL_62;
        }
        uint64_t v29 = v9;
        uint64_t v13 = v8;
        uint64_t v14 = v7;
        uint64_t v15 = *(void *)(a1 + 216);
        for (uint64_t i = *(void *)(a1 + 224); i != v15; i -= 24)
        {
          if (*(char *)(i - 1) < 0) {
            operator delete(*(void **)(i - 24));
          }
        }
        *(void *)(a1 + 224) = v15;
        uint64_t v30 = 0;
        int v18 = (*(uint64_t (**)(uint64_t *, uint64_t *, char *))(*a2 + 248))(a2, &v30, (char *)&v30 + 4);
        uint64_t v19 = *(void *)(a1 + 216);
        uint64_t v20 = *(void *)(a1 + 224);
        unint64_t v21 = 0xAAAAAAAAAAAAAAABLL * ((v20 - v19) >> 3);
        if (HIDWORD(v30) <= v21)
        {
          if (HIDWORD(v30) < v21)
          {
            uint64_t v28 = v6;
            uint64_t v22 = v19 + 24 * HIDWORD(v30);
            while (v20 != v22)
            {
              if (*(char *)(v20 - 1) < 0) {
                operator delete(*(void **)(v20 - 24));
              }
              v20 -= 24;
            }
            *(void *)(a1 + 224) = v22;
            uint64_t v6 = v28;
          }
        }
        else
        {
          sub_1001698A0((char **)(a1 + 216), HIDWORD(v30) - v21);
        }
        int v23 = v18 + v10;
        if (HIDWORD(v30))
        {
          uint64_t v24 = 0;
          unint64_t v25 = 0;
          do
          {
            v23 += (*(uint64_t (**)(uint64_t *, uint64_t))(*a2 + 336))(a2, *(void *)(a1 + 216) + v24);
            ++v25;
            v24 += 24;
          }
          while (v25 < HIDWORD(v30));
        }
        int v12 = (*(uint64_t (**)(uint64_t *))(*a2 + 256))(a2) + v23;
        *v5 |= 0x400u;
        uint64_t v7 = v14;
        uint64_t v8 = v13;
        uint64_t v9 = v29;
        break;
      case 10:
        uint64_t v11 = *a2;
        if (v32 != 2) {
          goto LABEL_47;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 280))(a2, a1 + 240) + v10;
        *v5 |= 0x800u;
        break;
      case 11:
        if (v32 != 12) {
          goto LABEL_62;
        }
        int v12 = sub_100166DFC(v9, a2) + v10;
        *v5 |= 0x1000u;
        break;
      case 12:
        if (v32 != 12) {
          goto LABEL_62;
        }
        int v12 = sub_1001673A8(v8, a2) + v10;
        *v5 |= 0x2000u;
        break;
      case 13:
        uint64_t v11 = *a2;
        if (v32 != 11) {
          goto LABEL_47;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 336))(a2, a1 + 8) + v10;
        *v5 |= 1u;
        break;
      case 14:
        uint64_t v11 = *a2;
        if (v32 != 11) {
          goto LABEL_47;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 336))(a2, a1 + 112) + v10;
        *v5 |= 0x20u;
        break;
      case 15:
        uint64_t v11 = *a2;
        if (v32 != 10) {
          goto LABEL_47;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 320))(a2, v7) + v10;
        *v5 |= 0x4000u;
        break;
      case 16:
        uint64_t v11 = *a2;
        if (v32 != 10) {
          goto LABEL_47;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 320))(a2, v6) + v10;
        *v5 |= 0x8000u;
        break;
      case 17:
        uint64_t v11 = *a2;
        if (v32 != 8) {
          goto LABEL_47;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 312))(a2, a1 + 368) + v10;
        *(unsigned char *)(a1 + 402) |= 1u;
        break;
      case 18:
        uint64_t v11 = *a2;
        if (v32 != 11)
        {
LABEL_47:
          int v17 = (*(uint64_t (**)(uint64_t *))(v11 + 352))(a2);
          goto LABEL_63;
        }
        int v12 = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 336))(a2, a1 + 376) + v10;
        *(unsigned char *)(a1 + 402) |= 2u;
        break;
      default:
LABEL_62:
        int v17 = (*(uint64_t (**)(uint64_t *))(*a2 + 352))(a2);
LABEL_63:
        int v12 = v17 + v10;
        break;
    }
    int v4 = (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2) + v12;
  }
  int v26 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v34) < 0) {
    operator delete(v33[0]);
  }
  return (v26 + v10);
}

void sub_1001688FC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 - 89) < 0) {
    operator delete(*(void **)(v1 - 112));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100168974(uint64_t a1, uint64_t a2)
{
  std::string::operator=((std::string *)(a1 + 8), (const std::string *)(a2 + 8));
  std::string::operator=((std::string *)(a1 + 32), (const std::string *)(a2 + 32));
  std::string::operator=((std::string *)(a1 + 56), (const std::string *)(a2 + 56));
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  std::string::operator=((std::string *)(a1 + 88), (const std::string *)(a2 + 88));
  std::string::operator=((std::string *)(a1 + 112), (const std::string *)(a2 + 112));
  std::string::operator=((std::string *)(a1 + 136), (const std::string *)(a2 + 136));
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  std::string::operator=((std::string *)(a1 + 168), (const std::string *)(a2 + 168));
  std::string::operator=((std::string *)(a1 + 192), (const std::string *)(a2 + 192));
  if (a1 != a2) {
    sub_10007B8E4(a1 + 216, *(std::string **)(a2 + 216), *(std::string **)(a2 + 224), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 224) - *(void *)(a2 + 216)) >> 3));
  }
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  if (a1 != a2) {
    sub_10007A09C((uint64_t *)(a1 + 296), *(void **)(a2 + 296), (void *)(a2 + 304));
  }
  std::string::operator=((std::string *)(a1 + 320), (const std::string *)(a2 + 320));
  *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
  *(unsigned char *)(a1 + 348) = *(unsigned char *)(a2 + 348);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_DWORD *)(a1 + 368) = *(_DWORD *)(a2 + 368);
  std::string::operator=((std::string *)(a1 + 376), (const std::string *)(a2 + 376));
  char v4 = *(unsigned char *)(a2 + 402);
  *(_WORD *)(a1 + 400) = *(_WORD *)(a2 + 400);
  *(unsigned char *)(a1 + 402) = v4;
  return a1;
}

void sub_100168ABC(uint64_t *a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  int v23 = v21;
  uint64_t v24 = v22;
  uint64_t v3 = *a1;
  if (*a1 >= 0) {
    uint64_t v4 = *a1;
  }
  else {
    uint64_t v4 = -v3;
  }
  v17[0] = v4;
  v17[1] = v22;
  char v18 = 48;
  int v19 = 48;
  uint64_t v5 = sub_100169AA8((uint64_t)v17);
  uint64_t v6 = (unsigned char *)v5;
  if ((v3 & 0x8000000000000000) == 0)
  {
    int v23 = (unsigned char *)v5;
    uint64_t v24 = v22;
    unint64_t v7 = (unint64_t)&v22[-v5];
    uint64_t v8 = a2;
    if ((unint64_t)&v22[-v5] < 0x17) {
      goto LABEL_6;
    }
LABEL_14:
    std::string::__grow_by(a2, 0x16uLL, v7 - 22, 0, 0, 0, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v8 = a2;
    }
    else {
      uint64_t v8 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    if (v6 != v22) {
      goto LABEL_7;
    }
LABEL_18:
    int v10 = v8;
    goto LABEL_21;
  }
  *(unsigned char *)(v5 - 1) = 45;
  uint64_t v6 = (unsigned char *)(v5 - 1);
  int v23 = (unsigned char *)(v5 - 1);
  uint64_t v24 = v22;
  unint64_t v7 = (unint64_t)&v22[-v5 + 1];
  uint64_t v8 = a2;
  if (v7 >= 0x17) {
    goto LABEL_14;
  }
LABEL_6:
  if (v6 == v22) {
    goto LABEL_18;
  }
LABEL_7:
  unint64_t v9 = &v20 - v6 + 41;
  if (v9 < 0x20 || (unint64_t)((char *)v8 - v6) < 0x20)
  {
    int v10 = v8;
    uint64_t v11 = v6;
  }
  else
  {
    int v10 = (std::string *)((char *)v8 + (v9 & 0xFFFFFFFFFFFFFFE0));
    uint64_t v11 = &v6[v9 & 0xFFFFFFFFFFFFFFE0];
    int v12 = (long long *)(v6 + 16);
    uint64_t v13 = &v8->__r_.__value_.__r.__words[2];
    unint64_t v14 = v9 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      long long v15 = *v12;
      *((_OWORD *)v13 - 1) = *(v12 - 1);
      *(_OWORD *)uint64_t v13 = v15;
      v12 += 2;
      v13 += 4;
      v14 -= 32;
    }
    while (v14);
    if (v9 == (v9 & 0xFFFFFFFFFFFFFFE0)) {
      goto LABEL_21;
    }
  }
  do
  {
    std::string::value_type v16 = *v11++;
    v10->__r_.__value_.__s.__data_[0] = v16;
    int v10 = (std::string *)((char *)v10 + 1);
  }
  while (v11 != v22);
LABEL_21:
  v10->__r_.__value_.__s.__data_[0] = 0;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
    a2->__r_.__value_.__l.__size_ = v7;
  }
  else {
    *((unsigned char *)&a2->__r_.__value_.__s + 23) = v7 & 0x7F;
  }
}

void sub_100168C7C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100168C98(uint64_t a1)
{
  sub_1000CD96C((uint64_t)v12);
  uint64_t v2 = sub_10002986C(v12, (uint64_t)"[", 1);
  uint64_t v3 = *(const std::string **)a1;
  uint64_t v8 = *(const std::string **)(a1 + 8);
  unint64_t v9 = v3;
  sub_100169D58(&v9, &v8);
  if ((v11 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v11 & 0x80u) == 0) {
    uint64_t v5 = v11;
  }
  else {
    uint64_t v5 = (uint64_t)__p[1];
  }
  uint64_t v6 = sub_10002986C(v2, (uint64_t)v4, v5);
  sub_10002986C(v6, (uint64_t)"]", 1);
  if ((char)v11 < 0) {
    operator delete(__p[0]);
  }
  std::stringbuf::str();
  if (v13 < 0) {
    operator delete((void *)v12[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_100168E34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100168E48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100168E5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1000CDB10((uint64_t)&a17);
  _Unwind_Resume(a1);
}

uint64_t *sub_100168E80(uint64_t *result, uint64_t a2)
{
  int v2 = *(_DWORD *)a2;
  if (*(_DWORD *)a2 != *(_DWORD *)(a2 + 4))
  {
    uint64_t v4 = result;
    uint64_t v5 = result + 1;
    do
    {
      uint64_t v8 = *(unsigned int *)(*(void *)(a2 + 8) + 4 * v2);
      uint64_t v9 = *(void *)(*(void *)(a2 + 16) + 8 * v2);
      uint64_t v14 = v8;
      uint64_t v15 = v9;
      uint64_t result = sub_100168F68(v4, v5, &v17, &v16, (int *)&v14);
      if (!*result)
      {
        int v10 = result;
        unsigned __int8 v11 = operator new(0x30uLL);
        v11[8] = v14;
        *((void *)v11 + 5) = v15;
        int v12 = v17;
        *(void *)unsigned __int8 v11 = 0;
        *((void *)v11 + 1) = 0;
        *((void *)v11 + 2) = v12;
        *int v10 = (uint64_t)v11;
        char v13 = *(void **)*v4;
        if (v13)
        {
          uint64_t *v4 = (uint64_t)v13;
          uint64_t v6 = (uint64_t *)*v10;
        }
        else
        {
          uint64_t v6 = (uint64_t *)v11;
        }
        uint64_t result = sub_1000619B8((uint64_t *)v4[1], v6);
        ++v4[2];
      }
      int v7 = *(_DWORD *)(a2 + 4);
      int v2 = *(_DWORD *)a2 + 1;
      *(_DWORD *)a2 = v2;
    }
    while (v2 != v7);
  }
  return result;
}

uint64_t *sub_100168F68(void *a1, uint64_t *a2, uint64_t **a3, uint64_t **a4, int *a5)
{
  uint64_t v5 = a1 + 1;
  if (a1 + 1 == a2 || (int v6 = *a5, v7 = *((_DWORD *)a2 + 8), *a5 < v7))
  {
    uint64_t v8 = (uint64_t *)*a2;
    if ((uint64_t *)*a1 == a2)
    {
      int v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v8)
    {
      uint64_t v9 = (uint64_t *)*a2;
      do
      {
        int v10 = v9;
        uint64_t v9 = (uint64_t *)v9[1];
      }
      while (v9);
    }
    else
    {
      uint64_t v14 = a2;
      do
      {
        int v10 = (uint64_t *)v14[2];
        BOOL v15 = *v10 == (void)v14;
        uint64_t v14 = v10;
      }
      while (v15);
    }
    int v16 = *a5;
    if (*((_DWORD *)v10 + 8) < *a5) {
      goto LABEL_17;
    }
    uint64_t v18 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          int v19 = (uint64_t *)v18;
          int v20 = *(_DWORD *)(v18 + 32);
          if (v16 >= v20) {
            break;
          }
          uint64_t v18 = *v19;
          uint64_t v5 = v19;
          if (!*v19) {
            goto LABEL_25;
          }
        }
        if (v20 >= v16) {
          break;
        }
        uint64_t v5 = v19 + 1;
        uint64_t v18 = v19[1];
      }
      while (v18);
LABEL_25:
      *a3 = v19;
      return v5;
    }
    else
    {
      *a3 = v5;
      return a1 + 1;
    }
  }
  else if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = a2;
    return (uint64_t *)a4;
  }
  else
  {
    uint64_t v11 = a2[1];
    if (v11)
    {
      int v12 = (uint64_t *)a2[1];
      do
      {
        char v13 = v12;
        int v12 = (uint64_t *)*v12;
      }
      while (v12);
    }
    else
    {
      unint64_t v21 = a2;
      do
      {
        char v13 = (uint64_t *)v21[2];
        BOOL v15 = *v13 == (void)v21;
        unint64_t v21 = v13;
      }
      while (!v15);
    }
    if (v13 == v5 || v6 < *((_DWORD *)v13 + 8))
    {
      if (v11)
      {
        *a3 = v13;
        return v13;
      }
      else
      {
        *a3 = a2;
        return a2 + 1;
      }
    }
    else
    {
      uint64_t v22 = *v5;
      if (*v5)
      {
        do
        {
          while (1)
          {
            int v23 = (uint64_t *)v22;
            int v24 = *(_DWORD *)(v22 + 32);
            if (v6 >= v24) {
              break;
            }
            uint64_t v22 = *v23;
            uint64_t v5 = v23;
            if (!*v23) {
              goto LABEL_41;
            }
          }
          if (v24 >= v6) {
            break;
          }
          uint64_t v5 = v23 + 1;
          uint64_t v22 = v23[1];
        }
        while (v22);
LABEL_41:
        *a3 = v23;
        return v5;
      }
      else
      {
        *a3 = v5;
        return a1 + 1;
      }
    }
  }
}

uint64_t *sub_100169118(uint64_t *a1)
{
  sub_100075BE0(*a1, a1[2]);
  uint64_t v2 = a1[1];
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      do
      {
        uint64_t v2 = v3;
        uint64_t v3 = *(void *)(v3 + 16);
      }
      while (v3);
      a1[1] = v2;
    }
    sub_100075BE0(*a1, v2);
  }
  return a1;
}

uint64_t sub_100169170(uint64_t a1, uint64_t a2)
{
  sub_1001692A8(a1, a2, (uint64_t)v21);
  uint64_t v3 = (uint64_t *)v21[0];
  uint64_t v5 = (uint64_t **)(a1 + 8);
  uint64_t v4 = *(uint64_t **)(a1 + 8);
  if (!v4)
  {
    uint64_t v18 = (uint64_t **)(a1 + 8);
LABEL_24:
    *uint64_t v3 = 0;
    v3[1] = 0;
    void v3[2] = (uint64_t)v5;
    *uint64_t v18 = v3;
    uint64_t v19 = **(void **)a1;
    if (!v19) {
      goto LABEL_26;
    }
LABEL_25:
    *(void *)a1 = v19;
    uint64_t v3 = *v18;
    goto LABEL_26;
  }
  int v6 = *(char *)(v21[0] + 55);
  if (v6 >= 0) {
    unint64_t v7 = *(unsigned __int8 *)(v21[0] + 55);
  }
  else {
    unint64_t v7 = *(void *)(v21[0] + 40);
  }
  if (v6 >= 0) {
    uint64_t v8 = (const void *)(v21[0] + 32);
  }
  else {
    uint64_t v8 = *(const void **)(v21[0] + 32);
  }
  do
  {
    while (1)
    {
      uint64_t v5 = (uint64_t **)v4;
      uint64_t v11 = v4[4];
      uint64_t v9 = v4 + 4;
      int v10 = (void *)v11;
      int v12 = *((char *)v9 + 23);
      unint64_t v13 = v12 >= 0 ? *((unsigned __int8 *)v9 + 23) : v9[1];
      uint64_t v14 = v12 >= 0 ? v9 : v10;
      size_t v15 = v13 >= v7 ? v7 : v13;
      int v16 = memcmp(v8, v14, v15);
      BOOL v17 = v7 < v13;
      if (v16) {
        BOOL v17 = v16 < 0;
      }
      if (!v17) {
        break;
      }
      uint64_t v4 = *v5;
      uint64_t v18 = v5;
      if (!*v5) {
        goto LABEL_24;
      }
    }
    uint64_t v4 = v5[1];
  }
  while (v4);
  uint64_t v18 = v5 + 1;
  *uint64_t v3 = 0;
  v3[1] = 0;
  void v3[2] = (uint64_t)v5;
  v5[1] = v3;
  uint64_t v19 = **(void **)a1;
  if (v19) {
    goto LABEL_25;
  }
LABEL_26:
  sub_1000619B8(*(uint64_t **)(a1 + 8), v3);
  ++*(void *)(a1 + 16);
  return v21[0];
}

unsigned char *sub_1001692A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int v6 = operator new(0x50uLL);
  unint64_t v7 = v6;
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1000559FC(v6 + 32, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *((_OWORD *)v6 + 2) = *(_OWORD *)a2;
    *((void *)v6 + 6) = *(void *)(a2 + 16);
  }
  uint64_t result = v7 + 56;
  if (*(char *)(a2 + 47) < 0)
  {
    uint64_t result = sub_1000559FC(result, *(void **)(a2 + 24), *(void *)(a2 + 32));
  }
  else
  {
    *(_OWORD *)uint64_t result = *(_OWORD *)(a2 + 24);
    *((void *)v7 + 9) = *(void *)(a2 + 40);
  }
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_100169360(_Unwind_Exception *a1)
{
  if (*(char *)(v2 + 55) < 0)
  {
    operator delete(*v3);
    sub_100169398(v1);
    _Unwind_Resume(a1);
  }
  sub_100169398(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_100169398(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((unsigned char *)a1 + 16))
    {
      if (*(char *)(v2 + 79) < 0)
      {
        operator delete(*(void **)(v2 + 56));
        if ((*(char *)(v2 + 55) & 0x80000000) == 0) {
          goto LABEL_5;
        }
      }
      else if ((*(char *)(v2 + 55) & 0x80000000) == 0)
      {
        goto LABEL_5;
      }
      operator delete(*(void **)(v2 + 32));
    }
LABEL_5:
    operator delete((void *)v2);
  }
  return a1;
}

uint64_t sub_100169404(void *a1, void *a2)
{
  sub_1000CD96C((uint64_t)v13);
  uint64_t v4 = (void *)*a1;
  if (*a2 != *a1)
  {
    do
    {
      if (v4 != (void *)*a1) {
        sub_10002986C(v13, (uint64_t)", ", 2);
      }
      sub_100169644((const std::string *)(v4 + 4));
      if ((v12 & 0x80u) == 0) {
        uint64_t v5 = __p;
      }
      else {
        uint64_t v5 = (void **)__p[0];
      }
      if ((v12 & 0x80u) == 0) {
        uint64_t v6 = v12;
      }
      else {
        uint64_t v6 = (uint64_t)__p[1];
      }
      sub_10002986C(v13, (uint64_t)v5, v6);
      if ((char)v12 < 0)
      {
        operator delete(__p[0]);
        unint64_t v7 = (void *)v4[1];
        if (v7)
        {
          do
          {
LABEL_16:
            uint64_t v8 = v7;
            unint64_t v7 = (void *)*v7;
          }
          while (v7);
          goto LABEL_3;
        }
      }
      else
      {
        unint64_t v7 = (void *)v4[1];
        if (v7) {
          goto LABEL_16;
        }
      }
      do
      {
        uint64_t v8 = (void *)v4[2];
        BOOL v9 = *v8 == (void)v4;
        uint64_t v4 = v8;
      }
      while (!v9);
LABEL_3:
      uint64_t v4 = v8;
    }
    while (v8 != (void *)*a2);
  }
  std::stringbuf::str();
  if (v14 < 0) {
    operator delete((void *)v13[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_100169604(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
}

uint64_t sub_100169644(const std::string *a1)
{
  sub_1000CD96C((uint64_t)v11);
  memset(&v10, 0, sizeof(v10));
  std::string::operator=(&v10, a1);
  if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v2 = &v10;
  }
  else {
    uint64_t v2 = (std::string *)v10.__r_.__value_.__r.__words[0];
  }
  if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v10.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v10.__r_.__value_.__l.__size_;
  }
  uint64_t v4 = sub_10002986C(v11, (uint64_t)v2, size);
  uint64_t v5 = sub_10002986C(v4, (uint64_t)": ", 2);
  memset(&v9, 0, sizeof(v9));
  std::string::operator=(&v9, a1 + 1);
  if ((v9.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v6 = &v9;
  }
  else {
    uint64_t v6 = (std::string *)v9.__r_.__value_.__r.__words[0];
  }
  if ((v9.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v7 = HIBYTE(v9.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v7 = v9.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v5, (uint64_t)v6, v7);
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v9.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v10.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_15;
    }
  }
  else if ((SHIBYTE(v10.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_15;
  }
  operator delete(v10.__r_.__value_.__l.__data_);
LABEL_15:
  std::stringbuf::str();
  if (v12 < 0) {
    operator delete((void *)v11[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_10016981C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100169830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
    {
LABEL_3:
      sub_1000CDB10((uint64_t)&a22);
      _Unwind_Resume(a1);
    }
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  sub_1000CDB10((uint64_t)&a22);
  _Unwind_Resume(a1);
}

void sub_1001698A0(char **a1, unint64_t a2)
{
  uint64_t v5 = a1[1];
  uint64_t v4 = a1[2];
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - v5) >> 3) >= a2)
  {
    if (a2)
    {
      size_t v12 = 24 * ((24 * a2 - 24) / 0x18) + 24;
      bzero(a1[1], v12);
      v5 += v12;
    }
    a1[1] = v5;
  }
  else
  {
    uint64_t v6 = *a1;
    unint64_t v7 = 0xAAAAAAAAAAAAAAABLL * ((v5 - *a1) >> 3);
    unint64_t v8 = v7 + a2;
    if (v7 + a2 > 0xAAAAAAAAAAAAAAALL) {
      sub_1000A9108();
    }
    unint64_t v9 = 0xAAAAAAAAAAAAAAABLL * ((v4 - v6) >> 3);
    if (2 * v9 > v8) {
      unint64_t v8 = 2 * v9;
    }
    if (v9 >= 0x555555555555555) {
      unint64_t v10 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v10 = v8;
    }
    if (v10)
    {
      if (v10 > 0xAAAAAAAAAAAAAAALL) {
        sub_1000A6A10();
      }
      uint64_t v11 = (char *)operator new(24 * v10);
    }
    else
    {
      uint64_t v11 = 0;
    }
    unint64_t v13 = &v11[24 * v7];
    char v14 = &v11[24 * v10];
    size_t v15 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v13, v15);
    int v16 = &v13[v15];
    if (v5 == v6)
    {
      *a1 = v13;
      a1[1] = v16;
      a1[2] = v14;
      if (!v5) {
        return;
      }
      goto LABEL_24;
    }
    do
    {
      long long v17 = *(_OWORD *)(v5 - 24);
      *((void *)v13 - 1) = *((void *)v5 - 1);
      *(_OWORD *)(v13 - 24) = v17;
      v13 -= 24;
      *((void *)v5 - 2) = 0;
      *((void *)v5 - 1) = 0;
      *((void *)v5 - 3) = 0;
      v5 -= 24;
    }
    while (v5 != v6);
    uint64_t v18 = *a1;
    uint64_t v5 = a1[1];
    *a1 = v13;
    a1[1] = v16;
    a1[2] = v14;
    if (v5 != v18)
    {
      do
      {
        if (*(v5 - 1) < 0) {
          operator delete(*((void **)v5 - 3));
        }
        v5 -= 24;
      }
      while (v5 != v18);
      uint64_t v5 = v18;
    }
    if (v5)
    {
LABEL_24:
      operator delete(v5);
    }
  }
}

uint64_t sub_100169AA8(uint64_t a1)
{
  std::locale::locale(&v27);
  uint64_t v2 = std::locale::classic();
  if (std::locale::operator==(&v27, v2))
  {
    unint64_t v3 = *(void *)a1;
    do
    {
      uint64_t v4 = *(void *)(a1 + 8);
      *(void *)(a1 + 8) = v4 - 1;
      *(unsigned char *)(v4 - 1) = *(_DWORD *)(a1 + 20)
                         + v3
                         - 10 * (((v3 * (unsigned __int128)0xCCCCCCCCCCCCCCCDLL) >> 64) >> 3);
      unint64_t v5 = *(void *)a1;
      unint64_t v3 = *(void *)a1 / 0xAuLL;
      *(void *)a1 = v3;
    }
    while (v5 > 9);
    uint64_t v6 = *(void *)(a1 + 8);
    goto LABEL_28;
  }
  unint64_t v7 = std::locale::use_facet(&v27, &std::numpunct<char>::id);
  ((void (*)(void **__return_ptr))v7->__vftable[1].__on_zero_shared)(&__p);
  if ((char)v26 < 0)
  {
    unint64_t v8 = v25;
    if (!v25 || *(char *)__p <= 0) {
      goto LABEL_24;
    }
LABEL_11:
    char v9 = ((uint64_t (*)(const std::locale::facet *))v7->__vftable[1].~facet_0)(v7);
    uint64_t v10 = 0;
    p_p = __p;
    if ((v26 & 0x80u) == 0) {
      p_p = &__p;
    }
    size_t v12 = (uint64_t *)(a1 + 8);
    LOBYTE(v13) = *p_p;
    char v14 = *p_p;
    do
    {
      if (!v14)
      {
        if (++v10 < v8)
        {
          uint64_t v19 = (v26 & 0x80u) == 0 ? &__p : (void **)__p;
          int v13 = *((char *)v19 + v10);
          if (v13 < 1) {
            LOBYTE(v13) = 127;
          }
        }
        size_t v15 = (unsigned char *)(*v12 - 1);
        *size_t v12 = (uint64_t)v15;
        *size_t v15 = v9;
        char v14 = v13;
      }
      --v14;
      unint64_t v17 = *(void *)a1;
      uint64_t v16 = *(void *)(a1 + 8);
      *(void *)(a1 + 8) = v16 - 1;
      *(unsigned char *)(v16 - 1) = *(_DWORD *)(a1 + 20)
                          + v17
                          - 10 * (((v17 * (unsigned __int128)0xCCCCCCCCCCCCCCCDLL) >> 64) >> 3);
      unint64_t v18 = *(void *)a1;
      *(void *)a1 /= 0xAuLL;
    }
    while (v18 > 9);
    goto LABEL_26;
  }
  unint64_t v8 = v26;
  if (v26 && (char)__p > 0) {
    goto LABEL_11;
  }
LABEL_24:
  size_t v12 = (uint64_t *)(a1 + 8);
  unint64_t v20 = *(void *)a1;
  do
  {
    uint64_t v21 = *(void *)(a1 + 8);
    *(void *)(a1 + 8) = v21 - 1;
    *(unsigned char *)(v21 - 1) = *(_DWORD *)(a1 + 20)
                        + v20
                        - 10 * (((v20 * (unsigned __int128)0xCCCCCCCCCCCCCCCDLL) >> 64) >> 3);
    unint64_t v22 = *(void *)a1;
    unint64_t v20 = *(void *)a1 / 0xAuLL;
    *(void *)a1 = v20;
  }
  while (v22 > 9);
LABEL_26:
  uint64_t v6 = *v12;
  if ((char)v26 < 0) {
    operator delete(__p);
  }
LABEL_28:
  std::locale::~locale(&v27);
  return v6;
}

void sub_100169D18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::locale a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    std::locale::~locale(&a15);
    _Unwind_Resume(a1);
  }
  std::locale::~locale(&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_100169D58(const std::string **a1, const std::string **a2)
{
  sub_1000CD96C((uint64_t)v9);
  for (uint64_t i = *a1; i != *a2; ++i)
  {
    if (i != *a1) {
      sub_10002986C(v9, (uint64_t)", ", 2);
    }
    memset(&__p, 0, sizeof(__p));
    std::string::operator=(&__p, i);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(v9, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  std::stringbuf::str();
  if (v10 < 0) {
    operator delete((void *)v9[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_100169F28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100169F40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_1000CDB10((uint64_t)&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_100169F68()
{
  qword_10047ECF0 = 0;
  qword_10047ECE8 = 0;
  qword_10047ECE0 = (uint64_t)&qword_10047ECE8;
  uint64_t v1 = 0x500000000;
  uint64_t v2 = &unk_10047C420;
  unint64_t v3 = off_10047C438;
  sub_100168E80(&qword_10047ECE0, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047ECE0, (void *)&_mh_execute_header);
  qword_10047ED08 = 0;
  qword_10047ED00 = 0;
  qword_10047ECF8 = (uint64_t)&qword_10047ED00;
  uint64_t v1 = 0x300000000;
  uint64_t v2 = &unk_10047C460;
  unint64_t v3 = off_10047C470;
  sub_100168E80(&qword_10047ECF8, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047ECF8, (void *)&_mh_execute_header);
  qword_10047ED20 = 0;
  qword_10047ED18 = 0;
  qword_10047ED10 = (uint64_t)&qword_10047ED18;
  uint64_t v1 = 0xC00000000;
  uint64_t v2 = &unk_10047C488;
  unint64_t v3 = off_10047C4B8;
  sub_100168E80(&qword_10047ED10, (uint64_t)&v1);
  __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047ED10, (void *)&_mh_execute_header);
  qword_10047ED30 = 0;
  qword_10047ED38 = 0;
  qword_10047ED28 = (uint64_t)&qword_10047ED30;
  uint64_t v1 = 0x500000000;
  uint64_t v2 = &unk_10047C518;
  unint64_t v3 = off_10047C530;
  sub_100168E80(&qword_10047ED28, (uint64_t)&v1);
  return __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047ED28, (void *)&_mh_execute_header);
}

void sub_10016A150(_Unwind_Exception *a1)
{
}

void sub_10016A16C(_Unwind_Exception *a1)
{
}

void sub_10016A188(_Unwind_Exception *a1)
{
}

void sub_10016A1A4(_Unwind_Exception *a1)
{
}

uint64_t sub_10016A1C0()
{
  unsigned __int8 v0 = atomic_load(byte_10047C558);
  return v0 & 1;
}

void sub_10016A1D4()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10016A24C()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_10016A2C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10016A4D0((uint64_t)v19, 16);
  if (a3)
  {
    int v6 = *(char *)(a2 + 23);
    uint64_t v7 = v6 >= 0 ? a2 : *(void *)a2;
    uint64_t v8 = v6 >= 0 ? *(unsigned __int8 *)(a2 + 23) : *(void *)(a2 + 8);
    sub_10002986C(v20, v7, v8);
    if (a3 != 1)
    {
      uint64_t v9 = a2 + 24;
      uint64_t v10 = 24 * a3 - 24;
      do
      {
        int v11 = *(char *)(a1 + 23);
        if (v11 >= 0) {
          uint64_t v12 = a1;
        }
        else {
          uint64_t v12 = *(void *)a1;
        }
        if (v11 >= 0) {
          uint64_t v13 = *(unsigned __int8 *)(a1 + 23);
        }
        else {
          uint64_t v13 = *(void *)(a1 + 8);
        }
        sub_10002986C(v20, v12, v13);
        int v14 = *(char *)(v9 + 23);
        if (v14 >= 0) {
          uint64_t v15 = v9;
        }
        else {
          uint64_t v15 = *(void *)v9;
        }
        if (v14 >= 0) {
          uint64_t v16 = *(unsigned __int8 *)(v9 + 23);
        }
        else {
          uint64_t v16 = *(void *)(v9 + 8);
        }
        sub_10002986C(v20, v15, v16);
        v9 += 24;
        v10 -= 24;
      }
      while (v10);
    }
  }
  std::stringbuf::str();
  *(void *)((char *)v19
  v20[0] = v17;
  if (v21 < 0) {
    operator delete((void *)v20[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return std::ios::~ios();
}

uint64_t sub_10016A4D0(uint64_t a1, int a2)
{
  uint64_t v4 = a1 + 16;
  *(void *)a1 = v6;
  *(void *)(a1 + *(void *)(v6 - 24)) = v5;
  *(void *)(a1 + 8) = 0;
  uint64_t v7 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v7, (void *)(a1 + 24));
  v7[1].__vftable = 0;
  v7[1].__fmtflags_ = -1;
  *(void *)(a1 + 16) = v9;
  *(void *)(v4 + *(void *)(v9 - 24)) = v8;
  *(void *)a1 = v10;
  std::streambuf::basic_streambuf();
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 120) = a2;
  return a1;
}

void sub_10016A780(_Unwind_Exception *a1)
{
}

void sub_10016A7A0(_Unwind_Exception *a1)
{
}

void sub_10016A7B4(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t v3 = a1[1] - *a1;
  if (v3)
  {
    uint64_t v6 = 0;
    unint64_t v7 = v3 / 48;
    if (v7 <= 1) {
      uint64_t v8 = 1;
    }
    else {
      uint64_t v8 = v7;
    }
    do
    {
      uint64_t v9 = *(void *)(a2 + 24);
      if (!v9) {
        sub_10008F39C();
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)v9 + 48))(v9, *a1 + v6);
      v6 += 48;
      --v8;
    }
    while (v8);
  }
}

void sub_10016AFE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, _Unwind_Exception *exception_object, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::runtime_error a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,char a36,uint64_t a37,std::runtime_error a38)
{
  if (v40 < 0) {
    operator delete(v39);
  }
  __cxa_end_catch();
  if (a34 < 0) {
    operator delete(__p);
  }
  sub_1000A6488((uint64_t)&a36);
  sub_100161124(v38);
  _Unwind_Resume(a1);
}

void sub_10016B0E4(_Unwind_Exception *a1)
{
}

void sub_10016B0EC(void *a1, int a2)
{
  if (!a2) {
    JUMPOUT(0x10016B0F8);
  }
  sub_1000A6954(a1);
}

void sub_10016B108(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_10016B194(std::runtime_error *a1)
{
  unint64_t v7 = (uint64_t (**)())&off_100451ED0;
  std::runtime_error::runtime_error(&v3, a1);
  imp = a1[1].__imp_.__imp_;
  v4[0] = &off_100451DC0;
  v4[1] = imp;
  if (imp) {
    (*(void (**)(const char *))(*(void *)imp + 24))(imp);
  }
  std::runtime_error v5 = a1[2];
  int v6 = (int)a1[3].__vftable;
  v3.__vftable = (std::runtime_error_vtbl *)off_10045A908;
  v4[0] = off_10045A940;
  unint64_t v7 = &off_10045A978;
  sub_1000A6FDC((uint64_t)v4, (uint64_t)&a1[1]);
  sub_10016F1A0();
}

void sub_10016B448(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::runtime_error a11)
{
}

void sub_10016B45C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::runtime_error a11)
{
}

void sub_10016B470(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::runtime_error a11)
{
}

uint64_t sub_10016B484(uint64_t a1, long long *a2)
{
  long long v3 = *a2;
  *(void *)a2 = 0;
  *((void *)a2 + 1) = 0;
  uint64_t v4 = *(atomic_uint **)(a1 + 8);
  *(_OWORD *)a1 = v3;
  if (v4)
  {
    if (atomic_fetch_add(v4 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v4 + 16))(v4);
      if (atomic_fetch_add(v4 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v4 + 24))(v4);
      }
    }
  }
  return a1;
}

void sub_10016B538(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_10016B5C4()
{
}

uint64_t sub_10016BA4C(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >= a1[2])
  {
    uint64_t result = sub_100161808(a1, a2);
    a1[1] = result;
  }
  else
  {
    uint64_t v5 = *(void *)(a2 + 8);
    *(void *)unint64_t v4 = *(void *)a2;
    if (v5) {
      uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 24))(v5);
    }
    *(void *)(v4 + 8) = v5;
    *(_OWORD *)(v4 + 16) = *(_OWORD *)(a2 + 16);
    uint64_t v6 = *(void *)(a2 + 40);
    *(void *)(v4 + 32) = *(void *)(a2 + 32);
    *(void *)(v4 + 40) = v6;
    if (v6) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
    }
    uint64_t result = v4 + 48;
    a1[1] = v4 + 48;
    a1[1] = v4 + 48;
  }
  return result;
}

void sub_10016BB04(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_10016BB0C(void *a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1[2])
  {
    unint64_t v6 = ~(a2 + (a2 >> 3)) + ((a2 + (a2 >> 3)) << 21);
    unint64_t v7 = 21 * ((265 * (v6 ^ (v6 >> 24))) ^ ((265 * (v6 ^ (v6 >> 24))) >> 14));
    uint64_t v8 = (a1[1] - 1) & (2147483649u * (v7 ^ (v7 >> 28)));
    uint64_t v9 = *(void **)(a1[5] + 8 * v8);
    if (v9)
    {
      uint64_t v10 = (void *)*v9;
      if (*v9)
      {
        if (v10[2] == a2)
        {
LABEL_10:
          uint64_t v13 = v10[3];
          uint64_t v12 = v10[4];
          if (v13 != v12)
          {
            uint64_t v14 = 0;
            while (*(void *)(v13 + v14 + 16) != a3)
            {
              v14 += 48;
              if (v13 + v14 == v12) {
                goto LABEL_14;
              }
            }
            sub_10016FE6C(v13 + v14 + 48, v10[4], v13 + v14);
            uint64_t v31 = v30;
            uint64_t v32 = v10[4];
            if (v32 != v30)
            {
              do
              {
                uint64_t v33 = *(std::__shared_weak_count **)(v32 - 8);
                if (v33 && !atomic_fetch_add(&v33->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                {
                  ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
                  std::__shared_weak_count::__release_weak(v33);
                }
                uint64_t v34 = *(void *)(v32 - 40);
                if (v34) {
                  (*(void (**)(uint64_t))(*(void *)v34 + 8))(v34);
                }
                v32 -= 48;
              }
              while (v32 != v31);
            }
            v10[4] = v31;
            return;
          }
        }
        else
        {
          uint64_t v11 = v10[1];
LABEL_6:
          if ((v11 & 0x7FFFFFFFFFFFFFFFLL) == v8)
          {
            while (1)
            {
              uint64_t v10 = (void *)*v10;
              if (!v10) {
                break;
              }
              uint64_t v11 = v10[1];
              if ((v11 & 0x8000000000000000) == 0)
              {
                if (v10[2] != a2) {
                  goto LABEL_6;
                }
                goto LABEL_10;
              }
            }
          }
        }
      }
    }
  }
LABEL_14:
  uint64_t v15 = (const char *)(*(void *)(a2 + 8) & 0x7FFFFFFFFFFFFFFFLL);
  size_t v16 = strlen(v15);
  if (v16 > 0x7FFFFFFFFFFFFFF7) {
    sub_1000A6968();
  }
  size_t v17 = v16;
  if (v16 >= 0x17)
  {
    uint64_t v19 = (v16 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v16 | 7) != 0x17) {
      uint64_t v19 = v16 | 7;
    }
    uint64_t v20 = v19 + 1;
    p_dst = (long long *)operator new(v19 + 1);
    *((void *)&__dst + 1) = v17;
    int64_t v38 = v20 | 0x8000000000000000;
    *(void *)&long long __dst = p_dst;
    goto LABEL_21;
  }
  HIBYTE(v38) = v16;
  p_dst = &__dst;
  if (v16) {
LABEL_21:
  }
    memmove(p_dst, v15, v17);
  *((unsigned char *)p_dst + v17) = 0;
  sub_10000DB3C((void **)&__dst, (uint64_t)buf);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)buf;
  uint64_t v40 = *(void *)&buf[16];
  if (SHIBYTE(v38) < 0) {
    operator delete((void *)__dst);
  }
  char v21 = (const char *)(*(void *)(a4 + 8) & 0x7FFFFFFFFFFFFFFFLL);
  size_t v22 = strlen(v21);
  if (v22 > 0x7FFFFFFFFFFFFFF7) {
    sub_1000A6968();
  }
  int v23 = (void *)v22;
  if (v22 >= 0x17)
  {
    uint64_t v25 = (v22 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v22 | 7) != 0x17) {
      uint64_t v25 = v22 | 7;
    }
    uint64_t v26 = v25 + 1;
    int v24 = operator new(v25 + 1);
    __p[1] = v23;
    unint64_t v36 = v26 | 0x8000000000000000;
    __p[0] = v24;
    goto LABEL_31;
  }
  HIBYTE(v36) = v22;
  int v24 = __p;
  if (v22) {
LABEL_31:
  }
    memmove(v24, v21, (size_t)v23);
  *((unsigned char *)v23 + (void)v24) = 0;
  sub_10000DB3C(__p, (uint64_t)buf);
  long long __dst = *(_OWORD *)buf;
  int64_t v38 = *(void *)&buf[16];
  if (SHIBYTE(v36) < 0) {
    operator delete(__p[0]);
  }
  if (qword_10047BED8 == -1)
  {
    std::locale v27 = qword_10047BEE0;
    if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO))
    {
LABEL_36:
      uint64_t v28 = &__dst;
      if (v38 < 0) {
        uint64_t v28 = (long long *)__dst;
      }
      uint64_t v29 = v39;
      if (v40 < 0) {
        uint64_t v29 = (void **)v39[0];
      }
      *(_DWORD *)buf = 136315650;
      *(void *)&uint8_t buf[4] = v28;
      *(_WORD *)&unsigned char buf[12] = 2048;
      *(void *)&buf[14] = a3;
      *(_WORD *)&buf[22] = 2080;
      int v42 = v29;
      _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_INFO, "WARNING: Attempt to unregister listener %s (%p) not registered (anymore?) for event %s", buf, 0x20u);
    }
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_10045A580);
    std::locale v27 = qword_10047BEE0;
    if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
      goto LABEL_36;
    }
  }
  if ((SHIBYTE(v38) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v40) & 0x80000000) == 0) {
      return;
    }
LABEL_45:
    operator delete(v39[0]);
    return;
  }
  operator delete((void *)__dst);
  if (SHIBYTE(v40) < 0) {
    goto LABEL_45;
  }
}

void sub_10016BF70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  _Unwind_Resume(exception_object);
}

void sub_10016BFC4(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

double sub_10016BFF4(uint64_t a1, uint64_t a2)
{
  long long v3 = (const void *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
  size_t v4 = strlen((const char *)(a2 & 0x7FFFFFFFFFFFFFFFLL));
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  uint64_t v5 = (void *)v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    unint64_t v6 = (void **)operator new(v7 + 1);
    __dst[1] = v5;
    unint64_t v13 = v8 | 0x8000000000000000;
    __dst[0] = v6;
    goto LABEL_8;
  }
  HIBYTE(v13) = v4;
  unint64_t v6 = __dst;
  if (v4) {
LABEL_8:
  }
    memmove(v6, v3, (size_t)v5);
  *((unsigned char *)v5 + (void)v6) = 0;
  sub_10000DB3C(__dst, (uint64_t)&v10);
  if (SHIBYTE(v13) < 0) {
    operator delete(__dst[0]);
  }
  double result = *(double *)&v10;
  *(_OWORD *)a1 = v10;
  *(void *)(a1 + 16) = v11;
  return result;
}

void sub_10016C0D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10016C0F4(uint64_t a1)
{
  return *(void *)a1;
}

void sub_10016C0FC()
{
}

void sub_10016C218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10016C22C(void *a1)
{
}

void sub_10016C238(_Unwind_Exception *a1)
{
}

uint64_t sub_10016C24C(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_10016C2F4(void *a1)
{
}

void *sub_10016C308(void *a1)
{
  *a1 = off_10045A6E8;
  uint64_t v2 = (atomic_uint *)a1[2];
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_10016C3CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v1 + 8), 1u, memory_order_relaxed);
  }
  sub_10016DAB0();
}

void sub_10016C5B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000A6488((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10016C5C8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)(a1 + 8) = &off_100451DC0;
  *(void *)(a1 + 16) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
    uint64_t v4 = *(void *)(a1 + 16);
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v5;
  *(void *)a1 = &off_10045A610;
  *(void *)(a1 + 8) = off_10045A640;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
  }
  *(void *)(a1 + 16) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v7;
  return a1;
}

void sub_10016C724(_Unwind_Exception *exception_object)
{
  *(void *)(v1 + 8) = v2;
  uint64_t v4 = *(void *)(v1 + 16);
  if (v4)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)v4 + 32))(v4)) {
      *(void *)(v1 + 16) = 0;
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10016C76C(uint64_t a1)
{
  *(void *)a1 = off_10045A5B0;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10016C7E4(uint64_t a1)
{
  *(void *)a1 = off_10045A5B0;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }

  operator delete();
}

uint64_t sub_10016C87C(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v1 = result + 32;
    double result = (*(uint64_t (**)(uint64_t))(*(void *)(result + 32) + 16))(result + 32);
    *(unsigned char *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_10016C8D0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_9exceptionEEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_9exceptionEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_9exceptionEEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_9exceptionEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_10016C940()
{
  return 0;
}

uint64_t sub_10016C948(uint64_t a1)
{
  return a1 + 24;
}

void sub_10016C950()
{
}

void sub_10016CA54()
{
}

void sub_10016CA78(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10016CAAC(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x30uLL);
  sub_10016CD2C((uint64_t)exception, a1);
}

void sub_10016CAF4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10016CB08(uint64_t a1)
{
  *(void *)(a1 + 8) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 16) = 0;
  }
  return a1;
}

void sub_10016CB84(uint64_t a1)
{
  *(void *)(a1 + 8) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 16) = 0;
  }

  operator delete();
}

uint64_t sub_10016CC20(void *a1)
{
  *a1 = &off_100451DC0;
  uint64_t result = a1[1];
  if (result)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
    if (result) {
      a1[1] = 0;
    }
  }
  return result;
}

void sub_10016CC94(void *a1)
{
  *a1 = &off_100451DC0;
  uint64_t v2 = a1[1];
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    a1[1] = 0;
  }

  operator delete();
}

uint64_t sub_10016CD2C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = &off_100451DC0;
  *(void *)(a1 + 16) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  *(void *)a1 = &off_10045A610;
  *(void *)(a1 + 8) = off_10045A640;
  return a1;
}

uint64_t sub_10016CE0C(void *a1)
{
  return (*(uint64_t (**)(void))(*(void *)*a1 + 8))(*a1);
}

void sub_10016CEA0()
{
}

void sub_10016D130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_10016D1F0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10016D144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_10016D1F0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10016D160(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10016D1F0(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_10016D29C()
{
}

void sub_10016D308(void *a1)
{
  *a1 = off_10045A6E8;
  uint64_t v1 = (atomic_uint *)a1[2];
  if (v1)
  {
    if (atomic_fetch_add(v1 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v1 + 16))(v1);
      if (atomic_fetch_add(v1 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v1 + 24))(v1);
      }
    }
  }

  operator delete();
}

void sub_10016D3EC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  sub_1000CD728((const char *)((unint64_t)"PN5boost25errinfo_nested_exception_E" & 0x7FFFFFFFFFFFFFFFLL), &v12);
  if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)&v12;
  }
  else {
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)v12.__r_.__value_.__r.__words[0];
  }
  std::string::insert(&v12, v4, 91);
  std::string v13 = v12;
  memset(&v12, 0, sizeof(v12));
  long long v5 = std::string::append(&v13, "] = ");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v14.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v14.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  sub_10016D630((void *)(a1 + 8), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  uint64_t v9 = std::string::append(&v14, (const std::string::value_type *)p_p, size);
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v15.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v15.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  std::string::push_back(&v15, 10);
  *a2 = v15;
  memset(&v15, 0, sizeof(v15));
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_17;
    }
  }
  else if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v14.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_13:
    if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_18:
    operator delete(v12.__r_.__value_.__l.__data_);
    return;
  }
LABEL_17:
  operator delete(v13.__r_.__value_.__l.__data_);
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_18;
  }
}

void sub_10016D56C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0)
  {
    operator delete(*(void **)(v33 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a33 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_6:
  }
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

void sub_10016D630(void *a1@<X0>, std::string *a2@<X8>)
{
  sub_10016D7DC(a1, (char *)&v10);
  if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    v3.__i_ = (std::__wrap_iter<const char *>::iterator_type)&v10;
  }
  else {
    v3.__i_ = (std::__wrap_iter<const char *>::iterator_type)v10.__r_.__value_.__r.__words[0];
  }
  std::string::insert(&v10, v3, 10);
  std::string __p = v10;
  *((unsigned char *)&v10.__r_.__value_.__s + 23) = 2;
  strcpy((char *)&v10, "  ");
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  a2->__r_.__value_.__r.__words[0] = 0;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  if (!size) {
    goto LABEL_22;
  }
  BOOL v6 = 0;
  do
  {
    if (v6)
    {
      if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        long long v7 = &v10;
      }
      else {
        long long v7 = (std::string *)v10.__r_.__value_.__r.__words[0];
      }
      if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v8 = HIBYTE(v10.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v8 = v10.__r_.__value_.__l.__size_;
      }
      std::string::append(a2, (const std::string::value_type *)v7, v8);
    }
    std::string::value_type v9 = p_p->__r_.__value_.__s.__data_[0];
    std::string::push_back(a2, p_p->__r_.__value_.__s.__data_[0]);
    BOOL v6 = v9 == 10;
    p_p = (std::string *)((char *)p_p + 1);
    --size;
  }
  while (size);
  if ((SHIBYTE(v10.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_22:
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_25:
    operator delete(__p.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(v10.__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_25;
  }
}

void sub_10016D774(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10016D7DC@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result) {
    std::string::const_iterator v3 = sub_10016C0F4;
  }
  else {
    std::string::const_iterator v3 = 0;
  }
  if (v3) {
    sub_10016C2F4(result);
  }
  a2[23] = 7;
  strcpy(a2, "<empty>");
  return result;
}

void sub_10016D858()
{
}

void sub_10016D88C(void *a1, int a2)
{
  BOOL v6 = __cxa_begin_catch(a1);
  __cxa_end_catch();
  if (a2 == 3) {
    unint64_t v7 = (unint64_t)v6;
  }
  else {
    unint64_t v7 = 0;
  }
  if (v4 | v7)
  {
    sub_10016010C(v4, v7, 1, v3, (char *)v2);
  }
  else
  {
    std::string::size_type v8 = (char *)operator new(0x28uLL);
    *(void *)uint64_t v2 = v8;
    *(_OWORD *)(v2 + 8) = xmmword_1003EE110;
    strcpy(v8, "No diagnostic information available.");
  }
  __cxa_end_catch();
}

void sub_10016D924(_Unwind_Exception *a1)
{
}

void sub_10016D938()
{
}

void sub_10016DA24(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    sub_1003A3598(v1);
  }
  __cxa_rethrow();
}

void sub_10016DA3C(_Unwind_Exception *a1)
{
}

void sub_10016DA54()
{
}

uint64_t sub_10016DA68(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 24))();
  }
  return result;
}

uint64_t sub_10016DA98()
{
  return 0;
}

uint64_t sub_10016DAA0()
{
  return 0;
}

uint64_t sub_10016DAA8()
{
  return 0;
}

void sub_10016DAB0()
{
}

void sub_10016DC30(void *a1)
{
}

void sub_10016DC3C(_Unwind_Exception *a1)
{
}

uint64_t sub_10016DC50(uint64_t a1)
{
  *(void *)a1 = off_10045A788;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10016DCC8(uint64_t a1)
{
  *(void *)a1 = off_10045A788;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }

  operator delete();
}

uint64_t sub_10016DD60(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v1 = result + 32;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(result + 32) + 16))(result + 32);
    *(unsigned char *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_10016DDB4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_13exception_ptrEEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_13exception_ptrEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_13exception_ptrEEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_13exception_ptrEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_10016DE24()
{
  return 0;
}

uint64_t sub_10016DE2C(uint64_t a1)
{
  return a1 + 24;
}

void sub_10016DE34()
{
}

void sub_10016DF50()
{
  uint64_t v1 = *(atomic_uint **)(v0 + 16);
  if (v1 && atomic_fetch_add(v1 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)v1 + 16))(v1);
    if (atomic_fetch_add(v1 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)v1 + 24))(v1);
    }
  }
  operator delete();
}

void sub_10016DFF8(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10016E02C(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_10016E4BC((uint64_t)exception, a1);
}

void sub_10016E074(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void *sub_10016E088(void *a1)
{
  a1[3] = &off_100451DC0;
  uint64_t v2 = a1[4];
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    a1[4] = 0;
  }
  unint64_t v3 = (atomic_uint *)a1[2];
  if (v3)
  {
    if (atomic_fetch_add(v3 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v3 + 16))(v3);
      if (atomic_fetch_add(v3 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v3 + 24))(v3);
      }
    }
  }
  return a1;
}

void sub_10016E188(void *a1)
{
  a1[3] = &off_100451DC0;
  uint64_t v2 = a1[4];
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    a1[4] = 0;
  }
  unint64_t v3 = (atomic_uint *)a1[2];
  if (v3)
  {
    if (atomic_fetch_add(v3 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v3 + 16))(v3);
      if (atomic_fetch_add(v3 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v3 + 24))(v3);
      }
    }
  }

  operator delete();
}

uint64_t sub_10016E2A8(void *a1)
{
  *a1 = &off_100451DC0;
  uint64_t result = a1[1];
  if (result)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
    if (result) {
      a1[1] = 0;
    }
  }
  unint64_t v3 = (atomic_uint *)*(a1 - 1);
  if (v3 && atomic_fetch_add(v3 + 2, 0xFFFFFFFF) == 1)
  {
    uint64_t result = (*(uint64_t (**)(atomic_uint *))(*(void *)v3 + 16))(v3);
    if (atomic_fetch_add(v3 + 3, 0xFFFFFFFF) == 1) {
      return (*(uint64_t (**)(atomic_uint *))(*(void *)v3 + 24))(v3);
    }
  }
  return result;
}

void sub_10016E3A0(void *a1)
{
  *a1 = &off_100451DC0;
  uint64_t v2 = a1[1];
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    a1[1] = 0;
  }
  unint64_t v3 = (atomic_uint *)*(a1 - 1);
  if (v3)
  {
    if (atomic_fetch_add(v3 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v3 + 16))(v3);
      if (atomic_fetch_add(v3 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v3 + 24))(v3);
      }
    }
  }

  operator delete();
}

uint64_t sub_10016E4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)a1 = &off_100451ED0;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v4 + 8), 1u, memory_order_relaxed);
  }
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v7;
  *(void *)a1 = &off_10045A7E8;
  *(void *)(a1 + 24) = off_10045A818;
  return a1;
}

void sub_10016E5B4(_Unwind_Exception *exception_object)
{
  unint64_t v3 = *(atomic_uint **)(v1 + 16);
  if (v3 && atomic_fetch_add(v3 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)v3 + 16))(v3);
    if (atomic_fetch_add(v3 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)v3 + 24))(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10016E644(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_10016E6E4(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_10016E76C(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

void sub_10016E808(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

uint64_t sub_10016E894(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2) + 1;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v5;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 24))(v5);
  }
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)a1 = off_10045A908;
  *(void *)(a1 + 16) = off_10045A940;
  *(void *)(a1 + 56) = &off_10045A978;
  sub_1000A6FDC((uint64_t)v4, a2 + 16);
  return a1;
}

void sub_10016E9A4(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10016E9B8(_Unwind_Exception *a1)
{
  sub_10016E808(v1);
  _Unwind_Resume(a1);
}

void sub_10016E9CC(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_10016EA6C()
{
}

void sub_10016EAC8()
{
}

void sub_10016EAEC(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_10016EFFC((uint64_t)exception, a1);
}

void sub_10016EB34(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10016EB48(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_10016EBD0(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

void sub_10016EC6C()
{
}

void sub_10016ECDC()
{
}

void sub_10016ED00(void *a1)
{
  uint64_t v1 = (uint64_t)a1 + *(void *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x40uLL);
  sub_10016EFFC((uint64_t)exception, v1);
}

void sub_10016ED5C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10016ED70(void *a1)
{
  uint64_t v1 = (std::runtime_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(v1);
}

void sub_10016EE10(void *a1)
{
  uint64_t v1 = (std::runtime_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(v1);

  operator delete();
}

uint64_t sub_10016EEC4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2) + 1;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v5;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 24))(v5);
  }
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)a1 = off_10045A908;
  *(void *)(a1 + 16) = off_10045A940;
  *(void *)(a1 + 56) = &off_10045A978;
  sub_1000A6FDC((uint64_t)v4, a2 + 16);
  return a1;
}

void sub_10016EFD4(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10016EFE8(_Unwind_Exception *a1)
{
  sub_10016E808(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10016EFFC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = off_10045A908;
  *(void *)(a1 + 16) = off_10045A940;
  *(void *)(a1 + 56) = &off_10045A978;
  return a1;
}

void sub_10016F100(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10016F114(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_10016F1A0()
{
}

void sub_10016F2BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10016F2D0(void *a1)
{
}

void sub_10016F2DC(_Unwind_Exception *a1)
{
}

uint64_t sub_10016F2F0(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

uint64_t sub_10016F398(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
    uint64_t v4 = *(void *)(a1 + 24);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = off_10045AA48;
  *(void *)(a1 + 16) = off_10045AA80;
  *(void *)(a1 + 56) = &off_10045AAB8;
  uint64_t v6 = *(void *)(a2 + 24);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
  }
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  return a1;
}

void sub_10016F514(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10016F528(_Unwind_Exception *a1)
{
  sub_10016F114(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10016F548(uint64_t a1)
{
  *(void *)a1 = off_10045A9E0;
  if (*(unsigned char *)(a1 + 24))
  {
    (**(void (***)(uint64_t))(a1 + 32))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10016F5C0(uint64_t a1)
{
  *(void *)a1 = off_10045A9E0;
  if (*(unsigned char *)(a1 + 24))
  {
    (**(void (***)(uint64_t))(a1 + 32))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }

  operator delete();
}

uint64_t sub_10016F658(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v1 = result + 32;
    uint64_t result = (**(uint64_t (***)(uint64_t))(result + 32))(result + 32);
    *(unsigned char *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_10016F6AC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail10clone_implINS3_19error_info_in"
                     "jectorISt13runtime_errorEEEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail10clone_implINS3_19er"
                                "ror_info_injectorISt13runtime_errorEEEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail10clone_implINS3_19error_info_injectorISt13runtime_errorEEEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail10clone_implINS3_19error_info_injectorISt13runtime_errorEEEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_10016F71C()
{
  return 0;
}

uint64_t sub_10016F724(uint64_t a1)
{
  return a1 + 24;
}

void sub_10016F72C(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_10016F7B8(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_10016F858()
{
}

void sub_10016F998()
{
  std::runtime_error::~runtime_error(v0);
  operator delete();
}

void sub_10016F9C0(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

void sub_10016F9F4(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_10016FD54((uint64_t)exception, a1);
}

void sub_10016FA3C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10016FA50(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_10016FAD8(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

void sub_10016FB74()
{
}

void sub_10016FB90(void *a1)
{
  uint64_t v1 = (uint64_t)a1 + *(void *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x40uLL);
  sub_10016FD54((uint64_t)exception, v1);
}

void sub_10016FBEC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10016FC00(void *a1)
{
  uint64_t v1 = (std::runtime_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(v1);
}

void sub_10016FCA0(void *a1)
{
  uint64_t v1 = (std::runtime_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(v1);

  operator delete();
}

uint64_t sub_10016FD54(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = off_10045AA48;
  *(void *)(a1 + 16) = off_10045AA80;
  *(void *)(a1 + 56) = &off_10045AAB8;
  return a1;
}

void sub_10016FE58(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10016FE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a1 != a2)
  {
    uint64_t v5 = a2;
    while (1)
    {
      uint64_t v6 = *(void *)(v4 + 8);
      *(void *)a3 = *(void *)v4;
      if (!v6) {
        break;
      }
      uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24))(v6);
      uint64_t v8 = *(void *)(a3 + 8);
      *(void *)(a3 + 8) = v7;
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      *(_OWORD *)(a3 + 16) = *(_OWORD *)(v4 + 16);
      uint64_t v10 = *(void *)(v4 + 32);
      uint64_t v9 = *(void *)(v4 + 40);
      if (v9) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t v11 = *(std::__shared_weak_count **)(a3 + 40);
      *(void *)(a3 + 32) = v10;
      *(void *)(a3 + 40) = v9;
      if (v11 && !atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
      a3 += 48;
      v4 += 48;
      if (v4 == v5) {
        return v5;
      }
    }
    uint64_t v8 = *(void *)(a3 + 8);
    *(void *)(a3 + 8) = 0;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    goto LABEL_7;
  }
  return a1;
}

void sub_10016FFB0()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100170028()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void (__cdecl ***sub_1001700A0(void (__cdecl ***a1)(std::ofstream *__hidden this)))(std::ofstream *__hidden this)
{
  return a1;
}

void (__cdecl ***sub_100170124(void (__cdecl ***a1)(std::ifstream *__hidden this)))(std::ifstream *__hidden this)
{
  return a1;
}

std::system_error *sub_1001701A8(std::system_error *a1)
{
  uint64_t v2 = std::system_category();
  std::system_error::system_error(a1, 1, v2);
  a1->__vftable = (std::system_error_vtbl *)&off_10045ABF8;
  return a1;
}

_DWORD *sub_100170200@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_100052C64(a2, a1, 0, 0, 0);
}

_DWORD *sub_100170218(_DWORD *result)
{
  *uint64_t result = -1;
  return result;
}

void sub_100170224(std::runtime_error *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  std::runtime_error::runtime_error(&v13, a1);
  std::runtime_error v14 = a1[1];
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  int v19 = -1;
  v13.__vftable = (std::runtime_error_vtbl *)off_10045AE70;
  std::string v15 = off_10045AE98;
  uint64_t v16 = 0;
  sub_100171A44((uint64_t)&v20, (uint64_t)&v13);
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  int v23 = a4;
  uint64_t v10 = *(const void **)a5;
  size_t v11 = *(void *)(a5 + 8) - *(void *)a5;
  if (v11)
  {
    if ((v11 & 0x8000000000000000) != 0) {
      sub_1000A9108();
    }
    std::string __p = operator new(v11);
    memcpy(__p, v10, v11);
  }
  sub_1001716E8();
}

void sub_100170540(void *a1)
{
  std::system_error::~system_error(v1);
  sub_1000A6954(a1);
}

void sub_100170554(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    operator delete(__p);
    sub_1000A6954(a1);
  }
  sub_1000A6954(a1);
}

uint64_t sub_10017057C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 72) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4[1] = *(std::runtime_error *)(a2 + 16);
  v4->__vftable = (std::runtime_error_vtbl *)&off_10045ABF8;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = &off_100451DC0;
  *(void *)(a1 + 40) = v5;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 24))(v5);
  }
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)a1 = off_10045ADD0;
  *(void *)(a1 + 32) = off_10045AE08;
  *(void *)(a1 + 72) = &off_10045AE40;
  return a1;
}

void sub_1001706C0(_Unwind_Exception *a1)
{
  std::system_error::~system_error(v1);
  _Unwind_Resume(a1);
}

void sub_1001706D4(std::system_error *this)
{
  this[1].__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::system_error::~system_error(this);
}

void sub_100170764(std::runtime_error *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  std::runtime_error::runtime_error(&v13, a1);
  std::runtime_error v14 = a1[1];
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  int v19 = -1;
  v13.__vftable = (std::runtime_error_vtbl *)off_10045AF60;
  std::string v15 = off_10045AF88;
  uint64_t v16 = 0;
  sub_100172864((uint64_t)&v20, (uint64_t)&v13);
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  int v23 = a4;
  uint64_t v10 = *(const void **)a5;
  size_t v11 = *(void *)(a5 + 8) - *(void *)a5;
  if (v11)
  {
    if ((v11 & 0x8000000000000000) != 0) {
      sub_1000A9108();
    }
    std::string __p = operator new(v11);
    memcpy(__p, v10, v11);
  }
  sub_100172508();
}

void sub_100170A80(void *a1)
{
  std::system_error::~system_error(v1);
  sub_1000A6954(a1);
}

void sub_100170A94(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    operator delete(__p);
    sub_1000A6954(a1);
  }
  sub_1000A6954(a1);
}

uint64_t sub_100170ABC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 72) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4[1] = *(std::runtime_error *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = &off_100451DC0;
  *(void *)(a1 + 40) = v5;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 24))(v5);
  }
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)a1 = off_10045AEC0;
  *(void *)(a1 + 32) = off_10045AEF8;
  *(void *)(a1 + 72) = &off_10045AF30;
  return a1;
}

void sub_100170BE4(_Unwind_Exception *a1)
{
  std::system_error::~system_error(v1);
  _Unwind_Resume(a1);
}

void sub_100170BF8(std::system_error *this)
{
  this[1].__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::system_error::~system_error(this);
}

int *sub_100170C84(int *a1, int *a2)
{
  int v3 = *a2;
  *a2 = -1;
  int v4 = *a1;
  *a1 = v3;
  int v6 = v4;
  if (v4 != -1) {
    sub_100053058(&v6);
  }
  return a1;
}

void sub_100170CDC(int a1@<W2>, void *a2@<X8>)
{
  int v4 = (char *)operator new(0x258uLL);
  *((void *)v4 + 1) = 0;
  *((void *)v4 + 2) = 0;
  *(void *)int v4 = off_10045B098;
  sub_1001748C0((uint64_t *)v4 + 3, (uint64_t *)&off_10045B130);
  *((void *)v4 + 3) = off_10045B0F0;
  *((void *)v4 + 56) = off_10045B118;
  *((_DWORD *)v4 + 121) = a1;
  std::ios_base::clear((std::ios_base *)(v4 + 448), *((_DWORD *)v4 + 120));
  *a2 = v4 + 24;
  a2[1] = v4;
}

void sub_100170DEC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  __cxa_begin_catch(a1);
  sub_100174F04((uint64_t *)va);
}

void sub_100170DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  sub_10016C2F4((uint64_t *)va);
}

void sub_100170E04(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
}

void sub_100170F50(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
}

void sub_100171064(_Unwind_Exception *a1)
{
  std::ios::~ios();
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_100171084(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  boost::filesystem::filesystem_error::filesystem_error(v12, a1);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  int v17 = -1;
  v12[0].__vftable = (std::runtime_error_vtbl *)off_10045B050;
  std::runtime_error v13 = off_10045B078;
  sub_100173764((uint64_t)v18, (uint64_t)v12);
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  int v21 = a4;
  uint64_t v9 = *(const void **)a5;
  size_t v10 = *(void *)(a5 + 8) - *(void *)a5;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0) {
      sub_1000A9108();
    }
    std::string __p = operator new(v10);
    memcpy(__p, v9, v10);
  }
  sub_100173408();
}

void sub_100171374(void *a1)
{
  boost::filesystem::filesystem_error::~filesystem_error(v1);
  sub_1000A6954(a1);
}

void sub_100171388(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    operator delete(__p);
    sub_1000A6954(a1);
  }
  sub_1000A6954(a1);
}

void sub_1001713B0(boost::filesystem::filesystem_error *this)
{
  *((void *)this + 6) = &off_100451DC0;
  uint64_t v2 = *((void *)this + 7);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *((void *)this + 7) = 0;
  }

  boost::filesystem::filesystem_error::~filesystem_error(this);
}

void sub_10017143C(std::system_error *a1)
{
  std::system_error::~system_error(a1);

  operator delete();
}

void sub_100171474(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

uint64_t sub_1001714A4(void *a1)
{
  uint64_t v1 = (void (__cdecl ***)(std::ofstream *__hidden))((char *)a1 + *(void *)(*a1 - 24));
  std::filebuf::~filebuf();
  std::ostream::~ostream();

  return std::ios::~ios();
}

uint64_t sub_100171544(void *a1)
{
  uint64_t v1 = (void (__cdecl ***)(std::ifstream *__hidden))((char *)a1 + *(void *)(*a1 - 24));
  std::filebuf::~filebuf();
  std::istream::~istream();

  return std::ios::~ios();
}

void *sub_1001715E4(void *a1)
{
  *a1 = &off_100451DC0;
  uint64_t v2 = a1[1];
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    a1[1] = 0;
  }
  return a1;
}

void sub_10017165C(std::system_error *this)
{
  this[1].__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::system_error::~system_error(this);
}

void sub_1001716E8()
{
}

void sub_100171984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CD2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100171998(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_1000CD2E0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_1001719B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100171A44(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 72) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4[1] = *(std::runtime_error *)(a2 + 16);
  v4->__vftable = (std::runtime_error_vtbl *)&off_10045ABF8;
  uint64_t v5 = (uint64_t)&v4[2];
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = &off_100451DC0;
  *(void *)(a1 + 40) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)a1 = off_10045ADD0;
  *(void *)(a1 + 32) = off_10045AE08;
  *(void *)(a1 + 72) = &off_10045AE40;
  sub_1000A6FDC(v5, a2 + 32);
  return a1;
}

void sub_100171B94(_Unwind_Exception *a1)
{
  std::system_error::~system_error(v1);
  _Unwind_Resume(a1);
}

void sub_100171BA8(_Unwind_Exception *a1)
{
  sub_100171BBC(v1);
  _Unwind_Resume(a1);
}

void sub_100171BBC(std::system_error *this)
{
  this[1].__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::system_error::~system_error(this);
}

void sub_100171C48(std::system_error *this)
{
  this[1].__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::system_error::~system_error(this);

  operator delete();
}

void sub_100171CE8()
{
}

void sub_100171D44()
{
}

void sub_100171D68(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x50uLL);
  sub_10017057C((uint64_t)exception, a1);
}

void sub_100171DB0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100171DC4(std::system_error *a1)
{
  a1->__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::system_error::~system_error(a1 - 1);
}

void sub_100171E4C(std::system_error *a1)
{
  a1->__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::system_error::~system_error(a1 - 1);

  operator delete();
}

void sub_100171EE8()
{
}

void sub_100171F58()
{
}

void sub_100171F7C(void *a1)
{
  uint64_t v1 = (uint64_t)a1 + *(void *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x50uLL);
  sub_10017057C((uint64_t)exception, v1);
}

void sub_100171FD8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100171FEC(void *a1)
{
  uint64_t v1 = (std::system_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }

  std::system_error::~system_error(v1);
}

void sub_10017208C(void *a1)
{
  uint64_t v1 = (std::system_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }
  std::system_error::~system_error(v1);

  operator delete();
}

void sub_100172140(std::system_error *this)
{
  this[1].__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::system_error::~system_error(this);

  operator delete();
}

void sub_1001721E0(std::system_error *a1)
{
  a1->__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::system_error::~system_error(a1 - 1);
}

void sub_100172268(std::system_error *a1)
{
  a1->__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::system_error::~system_error(a1 - 1);

  operator delete();
}

uint64_t sub_100172304(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 72) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4[1] = *(std::runtime_error *)(a2 + 16);
  v4->__vftable = (std::runtime_error_vtbl *)&off_10045ABF8;
  uint64_t v5 = (uint64_t)&v4[2];
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = &off_100451DC0;
  *(void *)(a1 + 40) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)a1 = off_10045ADD0;
  *(void *)(a1 + 32) = off_10045AE08;
  *(void *)(a1 + 72) = &off_10045AE40;
  sub_1000A6FDC(v5, a2 + 32);
  return a1;
}

void sub_100172454(_Unwind_Exception *a1)
{
  std::system_error::~system_error(v1);
  _Unwind_Resume(a1);
}

void sub_100172468(_Unwind_Exception *a1)
{
  sub_100171BBC(v1);
  _Unwind_Resume(a1);
}

void sub_10017247C(std::system_error *this)
{
  this[1].__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::system_error::~system_error(this);
}

void sub_100172508()
{
}

void sub_1001727A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CD2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001727B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_1000CD2E0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_1001727D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100172864(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 72) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4[1] = *(std::runtime_error *)(a2 + 16);
  uint64_t v5 = (uint64_t)&v4[2];
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = &off_100451DC0;
  *(void *)(a1 + 40) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)a1 = off_10045AEC0;
  *(void *)(a1 + 32) = off_10045AEF8;
  *(void *)(a1 + 72) = &off_10045AF30;
  sub_1000A6FDC(v5, a2 + 32);
  return a1;
}

void sub_100172998(_Unwind_Exception *a1)
{
  std::system_error::~system_error(v1);
  _Unwind_Resume(a1);
}

void sub_1001729AC(_Unwind_Exception *a1)
{
  sub_1001729C0(v1);
  _Unwind_Resume(a1);
}

void sub_1001729C0(std::system_error *this)
{
  this[1].__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::system_error::~system_error(this);
}

void sub_100172A4C(std::system_error *this)
{
  this[1].__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::system_error::~system_error(this);

  operator delete();
}

void sub_100172AEC()
{
}

void sub_100172B48()
{
}

void sub_100172B6C(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x50uLL);
  sub_100170ABC((uint64_t)exception, a1);
}

void sub_100172BB4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100172BC8(std::system_error *a1)
{
  a1->__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::system_error::~system_error(a1 - 1);
}

void sub_100172C50(std::system_error *a1)
{
  a1->__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::system_error::~system_error(a1 - 1);

  operator delete();
}

void sub_100172CEC()
{
}

void sub_100172D5C()
{
}

void sub_100172D80(void *a1)
{
  uint64_t v1 = (uint64_t)a1 + *(void *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x50uLL);
  sub_100170ABC((uint64_t)exception, v1);
}

void sub_100172DDC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100172DF0(void *a1)
{
  uint64_t v1 = (std::system_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }

  std::system_error::~system_error(v1);
}

void sub_100172E90(void *a1)
{
  uint64_t v1 = (std::system_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }
  std::system_error::~system_error(v1);

  operator delete();
}

void sub_100172F44(std::system_error *this)
{
  this[1].__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::system_error::~system_error(this);

  operator delete();
}

void sub_100172FE4(std::system_error *a1)
{
  a1->__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::system_error::~system_error(a1 - 1);
}

void sub_10017306C(std::system_error *a1)
{
  a1->__vftable = (std::system_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::system_error::~system_error(a1 - 1);

  operator delete();
}

uint64_t sub_100173108(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 72) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4[1] = *(std::runtime_error *)(a2 + 16);
  uint64_t v5 = (uint64_t)&v4[2];
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = &off_100451DC0;
  *(void *)(a1 + 40) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v7;
  *(void *)a1 = off_10045AEC0;
  *(void *)(a1 + 32) = off_10045AEF8;
  *(void *)(a1 + 72) = &off_10045AF30;
  sub_1000A6FDC(v5, a2 + 32);
  return a1;
}

void sub_10017323C(_Unwind_Exception *a1)
{
  std::system_error::~system_error(v1);
  _Unwind_Resume(a1);
}

void sub_100173250(_Unwind_Exception *a1)
{
  sub_1001729C0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100173264(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 88) = &off_100451ED0;
  boost::filesystem::filesystem_error::filesystem_error((std::runtime_error *)a1, a2);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = &off_100451DC0;
  *(void *)(a1 + 56) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v5;
  *(void *)a1 = off_10045AFB0;
  *(void *)(a1 + 48) = off_10045AFE8;
  *(void *)(a1 + 88) = &off_10045B020;
  return a1;
}

void sub_100173368(_Unwind_Exception *a1)
{
  boost::filesystem::filesystem_error::~filesystem_error(v1);
  _Unwind_Resume(a1);
}

void sub_10017337C(boost::filesystem::filesystem_error *this)
{
  *((void *)this + 6) = &off_100451DC0;
  uint64_t v2 = *((void *)this + 7);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *((void *)this + 7) = 0;
  }

  boost::filesystem::filesystem_error::~filesystem_error(this);
}

void sub_100173408()
{
}

void sub_1001736A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CD2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001736B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_1000CD2E0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_1001736D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100173764(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 88) = &off_100451ED0;
  uint64_t v4 = boost::filesystem::filesystem_error::filesystem_error((std::runtime_error *)a1, a2) + 3;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = &off_100451DC0;
  *(void *)(a1 + 56) = v5;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 24))(v5);
  }
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v6;
  *(void *)a1 = off_10045AFB0;
  *(void *)(a1 + 48) = off_10045AFE8;
  *(void *)(a1 + 88) = &off_10045B020;
  sub_1000A6FDC((uint64_t)v4, a2 + 48);
  return a1;
}

void sub_100173874(_Unwind_Exception *a1)
{
  boost::filesystem::filesystem_error::~filesystem_error(v1);
  _Unwind_Resume(a1);
}

void sub_100173888(_Unwind_Exception *a1)
{
  sub_10017389C(v1);
  _Unwind_Resume(a1);
}

void sub_10017389C(boost::filesystem::filesystem_error *this)
{
  *((void *)this + 6) = &off_100451DC0;
  uint64_t v2 = *((void *)this + 7);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *((void *)this + 7) = 0;
  }

  boost::filesystem::filesystem_error::~filesystem_error(this);
}

void sub_100173928(boost::filesystem::filesystem_error *this)
{
  *((void *)this + 6) = &off_100451DC0;
  uint64_t v2 = *((void *)this + 7);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *((void *)this + 7) = 0;
  }
  boost::filesystem::filesystem_error::~filesystem_error(this);

  operator delete();
}

void sub_1001739C8()
{
}

void sub_100173A24()
{
}

void sub_100173A48(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x60uLL);
  sub_100173264((uint64_t)exception, a1);
}

void sub_100173A90(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100173AA4(void *a1)
{
  *a1 = &off_100451DC0;
  uint64_t v2 = a1[1];
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    a1[1] = 0;
  }

  boost::filesystem::filesystem_error::~filesystem_error((boost::filesystem::filesystem_error *)(a1 - 6));
}

void sub_100173B2C(void *a1)
{
  *a1 = &off_100451DC0;
  uint64_t v2 = a1[1];
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    a1[1] = 0;
  }
  boost::filesystem::filesystem_error::~filesystem_error((boost::filesystem::filesystem_error *)(a1 - 6));

  operator delete();
}

void sub_100173BC8()
{
}

void sub_100173C38()
{
}

void sub_100173C5C(void *a1)
{
  uint64_t v1 = (uint64_t)a1 + *(void *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x60uLL);
  sub_100173264((uint64_t)exception, v1);
}

void sub_100173CB8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100173CCC(void *a1)
{
  uint64_t v1 = (boost::filesystem::filesystem_error *)((char *)a1 + *(void *)(*a1 - 40));
  *((void *)v1 + 6) = &off_100451DC0;
  uint64_t v2 = *((void *)v1 + 7);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *((void *)v1 + 7) = 0;
  }

  boost::filesystem::filesystem_error::~filesystem_error(v1);
}

void sub_100173D6C(void *a1)
{
  uint64_t v1 = (boost::filesystem::filesystem_error *)((char *)a1 + *(void *)(*a1 - 40));
  *((void *)v1 + 6) = &off_100451DC0;
  uint64_t v2 = *((void *)v1 + 7);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *((void *)v1 + 7) = 0;
  }
  boost::filesystem::filesystem_error::~filesystem_error(v1);

  operator delete();
}

void sub_100173E20(boost::filesystem::filesystem_error *this)
{
  *((void *)this + 6) = &off_100451DC0;
  uint64_t v2 = *((void *)this + 7);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *((void *)this + 7) = 0;
  }
  boost::filesystem::filesystem_error::~filesystem_error(this);

  operator delete();
}

void sub_100173EC0(void *a1)
{
  *a1 = &off_100451DC0;
  uint64_t v2 = a1[1];
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    a1[1] = 0;
  }

  boost::filesystem::filesystem_error::~filesystem_error((boost::filesystem::filesystem_error *)(a1 - 6));
}

void sub_100173F48(void *a1)
{
  *a1 = &off_100451DC0;
  uint64_t v2 = a1[1];
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    a1[1] = 0;
  }
  boost::filesystem::filesystem_error::~filesystem_error((boost::filesystem::filesystem_error *)(a1 - 6));

  operator delete();
}

uint64_t sub_100173FE4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 88) = &off_100451ED0;
  uint64_t v4 = boost::filesystem::filesystem_error::filesystem_error((std::runtime_error *)a1, a2) + 3;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = &off_100451DC0;
  *(void *)(a1 + 56) = v5;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 24))(v5);
  }
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = v6;
  *(void *)a1 = off_10045AFB0;
  *(void *)(a1 + 48) = off_10045AFE8;
  *(void *)(a1 + 88) = &off_10045B020;
  sub_1000A6FDC((uint64_t)v4, a2 + 48);
  return a1;
}

void sub_1001740F4(_Unwind_Exception *a1)
{
  boost::filesystem::filesystem_error::~filesystem_error(v1);
  _Unwind_Resume(a1);
}

void sub_100174108(_Unwind_Exception *a1)
{
  sub_10017389C(v1);
  _Unwind_Resume(a1);
}

void sub_10017411C()
{
}

void sub_1001743B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100156F18((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001743CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100156F18((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_1001743E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_100174478()
{
}

void sub_100174714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100156F18((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100174728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100156F18((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_100174744(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_1001747D4@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_100174808(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100174824(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10045B098;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100174844(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10045B098;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_100174898(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t *sub_1001748C0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(void *)(v4 - 24)) = a2[3];
  uint64_t v5 = a2[1];
  *a1 = v5;
  *(uint64_t *)((char *)a1 + *(void *)(v5 - 24)) = a2[2];
  a1[1] = 0;
  uint64_t v6 = (std::ios_base *)((char *)a1 + *(void *)(*a1 - 24));
  std::ios_base::init(v6, a1 + 2);
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  uint64_t v7 = *a2;
  *a1 = *a2;
  *(uint64_t *)((char *)a1 + *(void *)(v7 - 24)) = a2[3];
  std::filebuf::basic_filebuf();
  if (!std::filebuf::open()) {
    std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 4);
  }
  return a1;
}

void sub_100174B00(_Unwind_Exception *a1)
{
}

void sub_100174B18(_Unwind_Exception *a1)
{
}

void sub_100174B38(void (__cdecl ***a1)(std::ifstream *__hidden this))
{
  std::filebuf::~filebuf();
  std::istream::~istream();
  std::ios::~ios();

  operator delete();
}

void sub_100174BDC(void *a1)
{
  uint64_t v1 = (void (__cdecl ***)(std::ifstream *__hidden))((char *)a1 + *(void *)(*a1 - 24));
  std::filebuf::~filebuf();
  std::istream::~istream();
  std::ios::~ios();

  operator delete();
}

void *sub_100174C94(void *a1)
{
  *a1 = off_10045B170;
  a1[53] = off_10045B198;
  std::filebuf::~filebuf();
  std::istream::~istream();
  std::ios::~ios();
  return a1;
}

void sub_100174D14(void *a1)
{
  *a1 = off_10045B170;
  a1[53] = off_10045B198;
  std::filebuf::~filebuf();
  std::istream::~istream();
  std::ios::~ios();

  operator delete();
}

uint64_t sub_100174DB4(void *a1)
{
  uint64_t v1 = (void *)((char *)a1 + *(void *)(*a1 - 24));
  *uint64_t v1 = off_10045B170;
  v1[53] = off_10045B198;
  std::filebuf::~filebuf();
  std::istream::~istream();

  return std::ios::~ios();
}

void sub_100174E50(void *a1)
{
  uint64_t v1 = (void *)((char *)a1 + *(void *)(*a1 - 24));
  *uint64_t v1 = off_10045B170;
  v1[53] = off_10045B198;
  std::filebuf::~filebuf();
  std::istream::~istream();
  std::ios::~ios();

  operator delete();
}

void sub_100174F04(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  sub_100174FA8();
}

void sub_100174F28()
{
  *uint64_t v0 = v1;
}

void sub_100174F40(void *a1, int a2)
{
  __cxa_begin_catch(a1);
  if (a2 == 2) {
    sub_1001752F4(v2, qword_10047BF30);
  }
  else {
    sub_1001752F4(v2, qword_10047BF48);
  }
  __cxa_end_catch();
  JUMPOUT(0x100174F30);
}

void sub_100174F80(_Unwind_Exception *a1)
{
  sub_1000A6488(v1);
  _Unwind_Resume(a1);
}

void sub_100174F94(_Unwind_Exception *a1)
{
  sub_1000A6488(v1);
  _Unwind_Resume(a1);
}

void sub_100174FA8()
{
}

void sub_1001751F0(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  std::exception_ptr::~exception_ptr(&v15);
  __cxa_begin_catch(a1);
  sub_10017547C();
}

void sub_100175214(_Unwind_Exception *a1)
{
}

void *sub_1001752F4(void *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v3 = a2[1];
  if (v3) {
    atomic_fetch_add_explicit((atomic_uint *volatile)(v3 + 8), 1u, memory_order_relaxed);
  }
  uint64_t v5 = (atomic_uint *)a1[1];
  *a1 = v4;
  a1[1] = v3;
  if (v5)
  {
    if (atomic_fetch_add(v5 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v5 + 16))(v5);
      if (atomic_fetch_add(v5 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v5 + 24))(v5);
      }
    }
  }
  return a1;
}

void sub_1001753B4(void *a1, uint64_t a2)
{
  *a1 = a2;
  a1[1] = 0;
  sub_100176F4C();
}

void sub_1001753EC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *v1;
  if (v3 && atomic_fetch_add(v3 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)v3 + 16))(v3);
    if (atomic_fetch_add(v3 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)v3 + 24))(v3);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10017547C()
{
  memset(&v0[1], 0, 24);
  int v1 = -1;
  v0[0] = off_10045B368;
  uint64_t v2 = off_10045B388;
  sub_100177828((uint64_t)v0);
}

void sub_10017554C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::exception a9)
{
}

void sub_100175560(uint64_t a1)
{
  sub_1001788B8((uint64_t)&v1, a1);
}

void sub_1001755F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::exception a9)
{
}

void sub_10017560C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v3) {
    sub_1001792A8((uint64_t)v5, (uint64_t)a1, (uint64_t)v3);
  }
  memset(&v5[2], 0, 24);
  int v6 = -1;
  v5[0] = off_10045B5C0;
  v5[1] = off_10045B5E8;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v7 = off_10045B530;
  uint64_t v8 = v4;
  sub_10017A370();
}

void sub_1001757E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::bad_exception a9)
{
}

void sub_1001757F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _UNKNOWN **a10, uint64_t a11)
{
  a10 = &off_100451DC0;
  if (a11)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)a11 + 32))(a11)) {
      a11 = 0;
    }
  }
  std::bad_exception::~bad_exception((std::bad_exception *)&a9);
  _Unwind_Resume(a1);
}

void sub_100175860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::bad_exception a9)
{
}

void sub_100175874(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v3) {
    sub_10017A95C((uint64_t)v5, (uint64_t)a1, (uint64_t)v3);
  }
  memset(&v5[2], 0, 24);
  int v6 = -1;
  v5[0] = off_10045B770;
  v5[1] = off_10045B798;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v7 = off_10045B530;
  uint64_t v8 = v4;
  sub_10017BA24();
}

void sub_100175A48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::bad_typeid a9)
{
}

void sub_100175A5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _UNKNOWN **a10, uint64_t a11)
{
  a10 = &off_100451DC0;
  if (a11)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)a11 + 32))(a11)) {
      a11 = 0;
    }
  }
  std::bad_typeid::~bad_typeid((std::bad_typeid *)&a9);
  _Unwind_Resume(a1);
}

void sub_100175AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::bad_typeid a9)
{
}

void sub_100175ADC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v3) {
    sub_10017C010((uint64_t)v5, (uint64_t)a1, (uint64_t)v3);
  }
  memset(&v5[2], 0, 24);
  int v6 = -1;
  v5[0] = off_10045B920;
  v5[1] = off_10045B948;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v7 = off_10045B530;
  uint64_t v8 = v4;
  sub_10017D0D8();
}

void sub_100175CB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::bad_cast a9)
{
}

void sub_100175CC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _UNKNOWN **a10, uint64_t a11)
{
  a10 = &off_100451DC0;
  if (a11)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)a11 + 32))(a11)) {
      a11 = 0;
    }
  }
  std::bad_cast::~bad_cast((std::bad_cast *)&a9);
  _Unwind_Resume(a1);
}

void sub_100175D30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::bad_cast a9)
{
}

void sub_100175D44(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (v3) {
    sub_10017D6C4((uint64_t)v5, (uint64_t)a1, (uint64_t)v3);
  }
  memset(&v5[2], 0, 24);
  int v6 = -1;
  v5[0] = off_10045BAD0;
  v5[1] = off_10045BAF8;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v7 = off_10045B530;
  uint64_t v8 = v4;
  sub_10017E78C();
}

void sub_100175F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::bad_alloc a9)
{
}

void sub_100175F2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _UNKNOWN **a10, uint64_t a11)
{
  a10 = &off_100451DC0;
  if (a11)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)a11 + 32))(a11)) {
      a11 = 0;
    }
  }
  std::bad_alloc::~bad_alloc((std::bad_alloc *)&a9);
  _Unwind_Resume(a1);
}

void sub_100175F98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::bad_alloc a9)
{
}

void sub_100175FAC(const std::runtime_error *a1)
{
  if (v2) {
    sub_10017FD8C((uint64_t)&v3, a1, (uint64_t)v2);
  }
  sub_10017EDF4(&v3, a1);
}

void sub_100176110(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10)
{
}

void sub_100176128(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10)
{
}

void sub_10017613C(const std::runtime_error *a1)
{
  if (v2) {
    sub_1001815C0((uint64_t)&v3, a1, (uint64_t)v2);
  }
  sub_100180560(&v3, a1);
}

void sub_1001762A0(_Unwind_Exception *a1, std::ios_base::failure *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

void sub_1001762B8(_Unwind_Exception *a1, std::ios_base::failure *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

void sub_1001762CC(const std::runtime_error *a1)
{
  if (v2) {
    sub_100182DB8((uint64_t)&v3, a1, (uint64_t)v2);
  }
  sub_100181DCC(&v3, a1);
}

void sub_100176430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::underflow_error a10)
{
}

void sub_100176448(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::underflow_error a10)
{
}

void sub_10017645C(const std::runtime_error *a1)
{
  if (v2) {
    sub_10018458C((uint64_t)&v3, a1, (uint64_t)v2);
  }
  sub_1001835A0(&v3, a1);
}

void sub_1001765C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::overflow_error a10)
{
}

void sub_1001765D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::overflow_error a10)
{
}

void sub_1001765EC(const std::runtime_error *a1)
{
  if (v2) {
    sub_100185D60((uint64_t)&v3, a1, (uint64_t)v2);
  }
  sub_100184D74(&v3, a1);
}

void sub_100176750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::range_error a10)
{
}

void sub_100176768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::range_error a10)
{
}

void sub_10017677C(const std::logic_error *a1)
{
  if (v2) {
    sub_1001874C4((uint64_t)&v3, a1, (uint64_t)v2);
  }
  sub_10018652C(&v3, a1);
}

void sub_1001768E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::logic_error a10)
{
}

void sub_1001768F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::logic_error a10)
{
}

void sub_10017690C(const std::logic_error *a1)
{
  if (v2) {
    sub_100188C7C((uint64_t)&v3, a1, (uint64_t)v2);
  }
  sub_100187C90(&v3, a1);
}

void sub_100176A70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::out_of_range a10)
{
}

void sub_100176A88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::out_of_range a10)
{
}

void sub_100176A9C(const std::logic_error *a1)
{
  if (v2) {
    sub_10018A450((uint64_t)&v3, a1, (uint64_t)v2);
  }
  sub_100189464(&v3, a1);
}

void sub_100176C00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::length_error a10)
{
}

void sub_100176C18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::length_error a10)
{
}

void sub_100176C2C(const std::logic_error *a1)
{
  if (v2) {
    sub_10018BC24((uint64_t)&v3, a1, (uint64_t)v2);
  }
  sub_10018AC38(&v3, a1);
}

void sub_100176D90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::invalid_argument a10)
{
}

void sub_100176DA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::invalid_argument a10)
{
}

void sub_100176DBC(const std::logic_error *a1)
{
  if (v2) {
    sub_10018D3F8((uint64_t)&v3, a1, (uint64_t)v2);
  }
  sub_10018C40C(&v3, a1);
}

void sub_100176F20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::domain_error a10)
{
}

void sub_100176F38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::domain_error a10)
{
}

void sub_100176F4C()
{
}

void sub_100177038(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    sub_1003A3D6C(v1);
  }
  __cxa_rethrow();
}

void sub_100177050(_Unwind_Exception *a1)
{
}

void sub_100177068()
{
}

uint64_t sub_10017707C(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 24))();
  }
  return result;
}

uint64_t sub_1001770AC()
{
  return 0;
}

uint64_t sub_1001770B4()
{
  return 0;
}

uint64_t sub_1001770BC()
{
  return 0;
}

void sub_1001770C4(void *a1@<X8>)
{
  std::current_exception();
  v3.__vftable = (std::exception_vtbl *)off_10045B340;
  std::exception_ptr::exception_ptr(&v4, &v2);
  uint64_t v7 = (uint64_t (**)())&off_100451ED0;
  v5.__vftable = (std::exception_vtbl *)off_10045B340;
  std::exception_ptr::exception_ptr(&v6, &v4);
  v5.__vftable = (std::exception_vtbl *)off_10045B288;
  uint64_t v7 = &off_10045B2D8;
  v3.__vftable = (std::exception_vtbl *)off_10045B340;
  std::exception_ptr::~exception_ptr(&v4);
  std::exception::~exception(&v3);
  std::exception_ptr::~exception_ptr(&v2);
  *a1 = ((uint64_t (*)(uint64_t (***)()))*v7)(&v7);
  a1[1] = 0;
  sub_100176F4C();
}

void sub_100177254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::exception_ptr v6 = *v4;
  if (*v4 && atomic_fetch_add(v6 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)v6 + 16))(v6);
    if (atomic_fetch_add(v6 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)v6 + 24))(v6);
    }
  }
  sub_100177348((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001772F4(uint64_t a1)
{
  *(void *)a1 = off_10045B340;
  std::exception_ptr::~exception_ptr((std::exception_ptr *)(a1 + 8));

  std::exception::~exception((std::exception *)a1);
}

void sub_100177348(uint64_t a1)
{
  *(void *)a1 = off_10045B340;
  std::exception_ptr::~exception_ptr((std::exception_ptr *)(a1 + 8));

  std::exception::~exception((std::exception *)a1);
}

void sub_10017739C(uint64_t a1)
{
  *(void *)a1 = off_10045B340;
  std::exception_ptr::~exception_ptr((std::exception_ptr *)(a1 + 8));
  std::exception::~exception((std::exception *)a1);

  operator delete();
}

void sub_100177404()
{
}

void sub_1001774C8(const std::exception_ptr *a1)
{
  exception = (std::exception_ptr *)__cxa_allocate_exception(0x18uLL);
  std::exception v3 = sub_100177788(exception, a1);
}

void sub_100177508()
{
}

void sub_1001775E0(void *a1)
{
  uint64_t v1 = (const std::exception_ptr *)((char *)a1 + *(void *)(*a1 - 32));
  exception = (std::exception_ptr *)__cxa_allocate_exception(0x18uLL);
  std::exception v3 = sub_100177788(exception, v1);
}

void sub_100177634(void *a1)
{
  uint64_t v1 = (std::exception_ptr *)((char *)a1 + *(void *)(*a1 - 40));
  v1->__ptr_ = off_10045B340;
  std::exception_ptr::~exception_ptr(v1 + 1);

  std::exception::~exception((std::exception *)v1);
}

void sub_1001776A0(void *a1)
{
  uint64_t v1 = (std::exception_ptr *)((char *)a1 + *(void *)(*a1 - 40));
  v1->__ptr_ = off_10045B340;
  std::exception_ptr::~exception_ptr(v1 + 1);
  std::exception::~exception((std::exception *)v1);

  operator delete();
}

void sub_100177720(uint64_t a1)
{
  *(void *)a1 = off_10045B340;
  std::exception_ptr::~exception_ptr((std::exception_ptr *)(a1 + 8));
  std::exception::~exception((std::exception *)a1);

  operator delete();
}

std::exception_ptr *sub_100177788(std::exception_ptr *a1, const std::exception_ptr *a2)
{
  a1[2].__ptr_ = &off_100451ED0;
  a1->__ptr_ = off_10045B340;
  std::exception_ptr::exception_ptr(a1 + 1, a2 + 1);
  a1->__ptr_ = off_10045B288;
  a1[2].__ptr_ = &off_10045B2D8;
  return a1;
}

void sub_100177828(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  v3[0] = &off_100451DC0;
  v3[1] = v2;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  long long v4 = *(_OWORD *)(a1 + 16);
  int v5 = *(_DWORD *)(a1 + 32);
  v3[0] = off_10045B368;
  std::exception_ptr v6 = off_10045B388;
  sub_1000A6FDC((uint64_t)v3, a1);
  sub_100177B14();
}

void sub_100177A6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_100177A94((std::exception *)va);
  _Unwind_Resume(a1);
}

void sub_100177A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_100177A94((std::exception *)va);
  _Unwind_Resume(a1);
}

std::exception *sub_100177A94(std::exception *a1)
{
  std::exception::~exception(a1 + 5);
  a1->__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  return a1;
}

void sub_100177B14()
{
}

void sub_100177C30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100177C44(void *a1)
{
}

void sub_100177C50(_Unwind_Exception *a1)
{
}

uint64_t sub_100177C64(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_100177D0C(std::exception *a1)
{
  std::exception::~exception(a1 + 5);
  a1->__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  operator delete();
}

uint64_t sub_100177DAC(std::exception *a1)
{
  std::exception::~exception(a1);
  *(void *)(v2 - 40) = &off_100451DC0;
  uint64_t result = *(void *)(v2 - 32);
  if (result)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
    if (result) {
      a1[-4].__vftable = 0;
    }
  }
  return result;
}

void sub_100177E28(std::exception *a1)
{
  std::exception::~exception(a1);
  *(void *)(v2 - 40) = &off_100451DC0;
  uint64_t v3 = *(void *)(v2 - 32);
  if (v3 && (*(unsigned int (**)(uint64_t))(*(void *)v3 + 32))(v3)) {
    a1[-4].__vftable = 0;
  }

  operator delete();
}

uint64_t sub_100177EC8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)(a1 + 8) = &off_100451DC0;
  *(void *)(a1 + 16) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
    uint64_t v4 = *(void *)(a1 + 16);
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v5;
  *(void *)a1 = &off_10045B448;
  *(void *)(a1 + 8) = off_10045B478;
  *(void *)(a1 + 48) = off_10045B498;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
  }
  *(void *)(a1 + 16) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 24) = v7;
  return a1;
}

void sub_10017804C(_Unwind_Exception *a1)
{
  std::exception::~exception(v3);
  *(void *)(v1 + 8) = v2;
  uint64_t v5 = *(void *)(v1 + 16);
  if (v5)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5)) {
      *(void *)(v1 + 16) = 0;
    }
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10017809C(uint64_t a1)
{
  *(void *)a1 = off_10045B3E8;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_100178114(uint64_t a1)
{
  *(void *)a1 = off_10045B3E8;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }

  operator delete();
}

uint64_t sub_1001781AC(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v1 = result + 32;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(result + 32) + 16))(result + 32);
    *(unsigned char *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_100178200(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_17unknown_exceptionEEEEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_17unknown_exceptionEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_17unknown_exceptionEEEEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_17unknown_exceptionEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_100178270()
{
  return 0;
}

uint64_t sub_100178278(uint64_t a1)
{
  return a1 + 24;
}

void sub_100178280()
{
}

void sub_1001783A4()
{
}

void sub_1001783C8(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_1001783FC(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x38uLL);
  sub_1001787B8((uint64_t)exception, a1);
}

void sub_100178444(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::exception *sub_100178458(std::exception *a1)
{
  std::exception::~exception(a1 + 6);
  a1[1].__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[2].__vftable = 0;
  }
  return a1;
}

void sub_1001784DC(std::exception *a1)
{
  std::exception::~exception(a1 + 6);
  a1[1].__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[2].__vftable = 0;
  }

  operator delete();
}

uint64_t sub_100178580(std::exception *a1)
{
  std::exception::~exception(a1 + 5);
  a1->__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t result = (uint64_t)a1[1].__vftable;
  if (result)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
    if (result) {
      a1[1].__vftable = 0;
    }
  }
  return result;
}

void sub_1001785FC(std::exception *a1)
{
  std::exception::~exception(a1 + 5);
  a1->__vftable = (std::exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  operator delete();
}

uint64_t sub_10017869C(std::exception *a1)
{
  std::exception::~exception(a1);
  *(void *)(v2 - 40) = &off_100451DC0;
  uint64_t result = *(void *)(v2 - 32);
  if (result)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
    if (result) {
      a1[-4].__vftable = 0;
    }
  }
  return result;
}

void sub_100178718(std::exception *a1)
{
  std::exception::~exception(a1);
  *(void *)(v2 - 40) = &off_100451DC0;
  uint64_t v3 = *(void *)(v2 - 32);
  if (v3 && (*(unsigned int (**)(uint64_t))(*(void *)v3 + 32))(v3)) {
    a1[-4].__vftable = 0;
  }

  operator delete();
}

uint64_t sub_1001787B8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = &off_100451DC0;
  *(void *)(a1 + 16) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  *(void *)a1 = &off_10045B448;
  *(void *)(a1 + 8) = off_10045B478;
  *(void *)(a1 + 48) = off_10045B498;
  return a1;
}

void sub_1001788B8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451DC0;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)(a1 + 8) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)a1 = off_10045B368;
  *(void *)(a1 + 40) = off_10045B388;
  sub_100178A20();
}

void sub_1001789CC(_Unwind_Exception *a1)
{
  std::exception::~exception(v3);
  *uint64_t v1 = v2;
  uint64_t v5 = v1[1];
  if (v5)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)v5 + 32))(v5)) {
      v1[1] = 0;
    }
  }
  _Unwind_Resume(a1);
}

void sub_100178A20()
{
}

void sub_100178CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100178D68((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100178CBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100178D68((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_100178CD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100178D68(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_100178E10(uint64_t a1@<X0>, void *a2@<X8>)
{
}

void sub_100178E20()
{
}

void sub_100178E78()
{
}

void sub_100178E8C()
{
}

void sub_100178F78(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    sub_1003A3598(v1);
  }
  __cxa_rethrow();
}

void sub_100178F90(_Unwind_Exception *a1)
{
}

void sub_100178FA8()
{
}

uint64_t sub_100178FBC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 24))();
  }
  return result;
}

uint64_t sub_100178FEC()
{
  return 0;
}

uint64_t sub_100178FF4()
{
  return 0;
}

uint64_t sub_100178FFC()
{
  return 0;
}

void sub_100179004(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  v3[0] = &off_100451DC0;
  v3[1] = v2;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  long long v4 = *(_OWORD *)(a1 + 24);
  int v5 = *(_DWORD *)(a1 + 40);
  v3[0] = off_10045B5E8;
  sub_1000A6FDC((uint64_t)v3, a1 + 8);
  sub_1001794D4();
}

void sub_10017926C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_exception a11)
{
}

void sub_100179280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_exception a11)
{
}

void sub_100179294(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_exception a11)
{
}

void sub_1001792A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 8) = &off_100451DC0;
  uint64_t v5 = *(void *)(a3 + 8);
  *(void *)(a1 + 16) = v5;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 24))(v5);
  }
  long long v6 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(void *)a1 = off_10045B5C0;
  *(void *)(a1 + 8) = off_10045B5E8;
  sub_10017A370();
}

void sub_1001793E4(_Unwind_Exception *a1)
{
  std::bad_exception::~bad_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1001793F8(_Unwind_Exception *a1)
{
  v1[1].__vftable = v2;
  long long v4 = v1[2].__vftable;
  if (v4)
  {
    if ((*((unsigned int (**)(std::bad_exception_vtbl *))v4->~bad_exception + 4))(v4)) {
      v1[2].__vftable = 0;
    }
  }
  std::bad_exception::~bad_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100179448(std::bad_exception *this)
{
  this[1].__vftable = (std::bad_exception_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2)) {
    this[2].__vftable = 0;
  }

  std::bad_exception::~bad_exception(this);
}

void sub_1001794D4()
{
}

void sub_1001795F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100179604(void *a1)
{
}

void sub_100179610(_Unwind_Exception *a1)
{
}

uint64_t sub_100179624(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_1001796CC(std::bad_exception *this)
{
  this[1].__vftable = (std::bad_exception_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2)) {
    this[2].__vftable = 0;
  }
  std::bad_exception::~bad_exception(this);

  operator delete();
}

void sub_10017976C(std::bad_exception *a1)
{
  a1->__vftable = (std::bad_exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  std::bad_exception::~bad_exception(a1 - 1);
}

void sub_1001797F4(std::bad_exception *a1)
{
  a1->__vftable = (std::bad_exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  std::bad_exception::~bad_exception(a1 - 1);

  operator delete();
}

uint64_t sub_100179890(uint64_t a1)
{
  *(void *)a1 = off_10045B640;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_100179908(uint64_t a1)
{
  *(void *)a1 = off_10045B640;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }

  operator delete();
}

uint64_t sub_1001799A0(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v1 = result + 32;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(result + 32) + 16))(result + 32);
    *(unsigned char *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_1001799F4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt13bad_exceptionEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt13bad_exceptionEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt13bad_exceptionEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt13bad_exceptionEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_100179A64()
{
  return 0;
}

uint64_t sub_100179A6C(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_100179A74(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
    uint64_t v4 = *(void *)(a1 + 24);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = &off_10045B6A0;
  *(void *)(a1 + 8) = off_10045B6D0;
  *(void *)(a1 + 16) = off_10045B6F8;
  uint64_t v6 = *(void *)(a2 + 16);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
  }
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 32) = v7;
  return a1;
}

void sub_100179C08(_Unwind_Exception *a1)
{
  std::bad_exception::~bad_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100179C1C(_Unwind_Exception *a1)
{
  sub_100179C30(v1);
  _Unwind_Resume(a1);
}

void sub_100179C30(std::bad_exception *this)
{
  this[1].__vftable = (std::bad_exception_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2)) {
    this[2].__vftable = 0;
  }

  std::bad_exception::~bad_exception(this);
}

void sub_100179CBC()
{
}

void sub_100179DFC()
{
  std::bad_exception::~bad_exception(v0);
  operator delete();
}

void sub_100179E28(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100179E5C(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x38uLL);
  sub_10017A240((uint64_t)exception, a1);
}

void sub_100179EA4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::bad_exception *sub_100179EB8(std::bad_exception *a1)
{
  a1[2].__vftable = (std::bad_exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2)) {
    a1[3].__vftable = 0;
  }
  std::bad_exception::~bad_exception(a1 + 1);
  return a1;
}

void sub_100179F3C(std::bad_exception *a1)
{
  a1[2].__vftable = (std::bad_exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2)) {
    a1[3].__vftable = 0;
  }
  std::bad_exception::~bad_exception(a1 + 1);

  operator delete();
}

void sub_100179FE0(std::bad_exception *this)
{
  this[1].__vftable = (std::bad_exception_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2)) {
    this[2].__vftable = 0;
  }

  std::bad_exception::~bad_exception(this);
}

void sub_10017A06C(std::bad_exception *this)
{
  this[1].__vftable = (std::bad_exception_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2)) {
    this[2].__vftable = 0;
  }
  std::bad_exception::~bad_exception(this);

  operator delete();
}

void sub_10017A114(std::bad_exception *a1)
{
  a1->__vftable = (std::bad_exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  std::bad_exception::~bad_exception(a1 - 1);
}

void sub_10017A19C(std::bad_exception *a1)
{
  a1->__vftable = (std::bad_exception_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_exception_vtbl *))v2->~bad_exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  std::bad_exception::~bad_exception(a1 - 1);

  operator delete();
}

uint64_t sub_10017A240(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = &off_10045B6A0;
  *(void *)(a1 + 8) = off_10045B6D0;
  *(void *)(a1 + 16) = off_10045B6F8;
  return a1;
}

void sub_10017A35C(_Unwind_Exception *a1)
{
  std::bad_exception::~bad_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10017A370()
{
}

void sub_10017A5F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100178D68((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10017A60C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100178D68((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10017A628(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10017A6B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  v3[0] = &off_100451DC0;
  v3[1] = v2;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  long long v4 = *(_OWORD *)(a1 + 24);
  int v5 = *(_DWORD *)(a1 + 40);
  v3[0] = off_10045B798;
  sub_1000A6FDC((uint64_t)v3, a1 + 8);
  sub_10017AB88();
}

void sub_10017A920(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_typeid a11)
{
}

void sub_10017A934(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_typeid a11)
{
}

void sub_10017A948(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_typeid a11)
{
}

void sub_10017A95C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 8) = &off_100451DC0;
  uint64_t v5 = *(void *)(a3 + 8);
  *(void *)(a1 + 16) = v5;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 24))(v5);
  }
  long long v6 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(void *)a1 = off_10045B770;
  *(void *)(a1 + 8) = off_10045B798;
  sub_10017BA24();
}

void sub_10017AA98(_Unwind_Exception *a1)
{
  std::bad_typeid::~bad_typeid(v1);
  _Unwind_Resume(a1);
}

void sub_10017AAAC(_Unwind_Exception *a1)
{
  v1[1].__vftable = v2;
  long long v4 = v1[2].__vftable;
  if (v4)
  {
    if ((*((unsigned int (**)(std::bad_typeid_vtbl *))v4->~bad_typeid + 4))(v4)) {
      v1[2].__vftable = 0;
    }
  }
  std::bad_typeid::~bad_typeid(v1);
  _Unwind_Resume(a1);
}

void sub_10017AAFC(std::bad_typeid *this)
{
  this[1].__vftable = (std::bad_typeid_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2)) {
    this[2].__vftable = 0;
  }

  std::bad_typeid::~bad_typeid(this);
}

void sub_10017AB88()
{
}

void sub_10017ACA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10017ACB8(void *a1)
{
}

void sub_10017ACC4(_Unwind_Exception *a1)
{
}

uint64_t sub_10017ACD8(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_10017AD80(std::bad_typeid *this)
{
  this[1].__vftable = (std::bad_typeid_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2)) {
    this[2].__vftable = 0;
  }
  std::bad_typeid::~bad_typeid(this);

  operator delete();
}

void sub_10017AE20(std::bad_typeid *a1)
{
  a1->__vftable = (std::bad_typeid_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  std::bad_typeid::~bad_typeid(a1 - 1);
}

void sub_10017AEA8(std::bad_typeid *a1)
{
  a1->__vftable = (std::bad_typeid_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  std::bad_typeid::~bad_typeid(a1 - 1);

  operator delete();
}

uint64_t sub_10017AF44(uint64_t a1)
{
  *(void *)a1 = off_10045B7F0;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10017AFBC(uint64_t a1)
{
  *(void *)a1 = off_10045B7F0;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }

  operator delete();
}

uint64_t sub_10017B054(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v1 = result + 32;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(result + 32) + 16))(result + 32);
    *(unsigned char *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_10017B0A8(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt10bad_typeidEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt10bad_typeidEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt10bad_typeidEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt10bad_typeidEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_10017B118()
{
  return 0;
}

uint64_t sub_10017B120(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_10017B128(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
    uint64_t v4 = *(void *)(a1 + 24);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = &off_10045B850;
  *(void *)(a1 + 8) = off_10045B880;
  *(void *)(a1 + 16) = off_10045B8A8;
  uint64_t v6 = *(void *)(a2 + 16);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
  }
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 32) = v7;
  return a1;
}

void sub_10017B2BC(_Unwind_Exception *a1)
{
  std::bad_typeid::~bad_typeid(v1);
  _Unwind_Resume(a1);
}

void sub_10017B2D0(_Unwind_Exception *a1)
{
  sub_10017B2E4(v1);
  _Unwind_Resume(a1);
}

void sub_10017B2E4(std::bad_typeid *this)
{
  this[1].__vftable = (std::bad_typeid_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2)) {
    this[2].__vftable = 0;
  }

  std::bad_typeid::~bad_typeid(this);
}

void sub_10017B370()
{
}

void sub_10017B4B0()
{
  std::bad_typeid::~bad_typeid(v0);
  operator delete();
}

void sub_10017B4DC(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10017B510(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x38uLL);
  sub_10017B8F4((uint64_t)exception, a1);
}

void sub_10017B558(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::bad_typeid *sub_10017B56C(std::bad_typeid *a1)
{
  a1[2].__vftable = (std::bad_typeid_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2)) {
    a1[3].__vftable = 0;
  }
  std::bad_typeid::~bad_typeid(a1 + 1);
  return a1;
}

void sub_10017B5F0(std::bad_typeid *a1)
{
  a1[2].__vftable = (std::bad_typeid_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2)) {
    a1[3].__vftable = 0;
  }
  std::bad_typeid::~bad_typeid(a1 + 1);

  operator delete();
}

void sub_10017B694(std::bad_typeid *this)
{
  this[1].__vftable = (std::bad_typeid_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2)) {
    this[2].__vftable = 0;
  }

  std::bad_typeid::~bad_typeid(this);
}

void sub_10017B720(std::bad_typeid *this)
{
  this[1].__vftable = (std::bad_typeid_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2)) {
    this[2].__vftable = 0;
  }
  std::bad_typeid::~bad_typeid(this);

  operator delete();
}

void sub_10017B7C8(std::bad_typeid *a1)
{
  a1->__vftable = (std::bad_typeid_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  std::bad_typeid::~bad_typeid(a1 - 1);
}

void sub_10017B850(std::bad_typeid *a1)
{
  a1->__vftable = (std::bad_typeid_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_typeid_vtbl *))v2->~bad_typeid + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  std::bad_typeid::~bad_typeid(a1 - 1);

  operator delete();
}

uint64_t sub_10017B8F4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = &off_10045B850;
  *(void *)(a1 + 8) = off_10045B880;
  *(void *)(a1 + 16) = off_10045B8A8;
  return a1;
}

void sub_10017BA10(_Unwind_Exception *a1)
{
  std::bad_typeid::~bad_typeid(v1);
  _Unwind_Resume(a1);
}

void sub_10017BA24()
{
}

void sub_10017BCAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100178D68((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10017BCC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100178D68((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10017BCDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10017BD6C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  v3[0] = &off_100451DC0;
  v3[1] = v2;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  long long v4 = *(_OWORD *)(a1 + 24);
  int v5 = *(_DWORD *)(a1 + 40);
  v3[0] = off_10045B948;
  sub_1000A6FDC((uint64_t)v3, a1 + 8);
  sub_10017C23C();
}

void sub_10017BFD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_cast a11)
{
}

void sub_10017BFE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_cast a11)
{
}

void sub_10017BFFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_cast a11)
{
}

void sub_10017C010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 8) = &off_100451DC0;
  uint64_t v5 = *(void *)(a3 + 8);
  *(void *)(a1 + 16) = v5;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 24))(v5);
  }
  long long v6 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(void *)a1 = off_10045B920;
  *(void *)(a1 + 8) = off_10045B948;
  sub_10017D0D8();
}

void sub_10017C14C(_Unwind_Exception *a1)
{
  std::bad_cast::~bad_cast(v1);
  _Unwind_Resume(a1);
}

void sub_10017C160(_Unwind_Exception *a1)
{
  v1[1].__vftable = v2;
  long long v4 = v1[2].__vftable;
  if (v4)
  {
    if ((*((unsigned int (**)(std::bad_cast_vtbl *))v4->~bad_cast + 4))(v4)) {
      v1[2].__vftable = 0;
    }
  }
  std::bad_cast::~bad_cast(v1);
  _Unwind_Resume(a1);
}

void sub_10017C1B0(std::bad_cast *this)
{
  this[1].__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    this[2].__vftable = 0;
  }

  std::bad_cast::~bad_cast(this);
}

void sub_10017C23C()
{
}

void sub_10017C358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10017C36C(void *a1)
{
}

void sub_10017C378(_Unwind_Exception *a1)
{
}

uint64_t sub_10017C38C(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_10017C434(std::bad_cast *this)
{
  this[1].__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    this[2].__vftable = 0;
  }
  std::bad_cast::~bad_cast(this);

  operator delete();
}

void sub_10017C4D4(std::bad_cast *a1)
{
  a1->__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  std::bad_cast::~bad_cast(a1 - 1);
}

void sub_10017C55C(std::bad_cast *a1)
{
  a1->__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  std::bad_cast::~bad_cast(a1 - 1);

  operator delete();
}

uint64_t sub_10017C5F8(uint64_t a1)
{
  *(void *)a1 = off_10045B9A0;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10017C670(uint64_t a1)
{
  *(void *)a1 = off_10045B9A0;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }

  operator delete();
}

uint64_t sub_10017C708(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v1 = result + 32;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(result + 32) + 16))(result + 32);
    *(unsigned char *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_10017C75C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt8bad_castEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt8bad_castEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt8bad_castEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt8bad_castEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_10017C7CC()
{
  return 0;
}

uint64_t sub_10017C7D4(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_10017C7DC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
    uint64_t v4 = *(void *)(a1 + 24);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = &off_10045BA00;
  *(void *)(a1 + 8) = off_10045BA30;
  *(void *)(a1 + 16) = off_10045BA58;
  uint64_t v6 = *(void *)(a2 + 16);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
  }
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 32) = v7;
  return a1;
}

void sub_10017C970(_Unwind_Exception *a1)
{
  std::bad_cast::~bad_cast(v1);
  _Unwind_Resume(a1);
}

void sub_10017C984(_Unwind_Exception *a1)
{
  sub_10017C998(v1);
  _Unwind_Resume(a1);
}

void sub_10017C998(std::bad_cast *this)
{
  this[1].__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    this[2].__vftable = 0;
  }

  std::bad_cast::~bad_cast(this);
}

void sub_10017CA24()
{
}

void sub_10017CB64()
{
  std::bad_cast::~bad_cast(v0);
  operator delete();
}

void sub_10017CB90(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10017CBC4(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x38uLL);
  sub_10017CFA8((uint64_t)exception, a1);
}

void sub_10017CC0C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::bad_cast *sub_10017CC20(std::bad_cast *a1)
{
  a1[2].__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    a1[3].__vftable = 0;
  }
  std::bad_cast::~bad_cast(a1 + 1);
  return a1;
}

void sub_10017CCA4(std::bad_cast *a1)
{
  a1[2].__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    a1[3].__vftable = 0;
  }
  std::bad_cast::~bad_cast(a1 + 1);

  operator delete();
}

void sub_10017CD48(std::bad_cast *this)
{
  this[1].__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    this[2].__vftable = 0;
  }

  std::bad_cast::~bad_cast(this);
}

void sub_10017CDD4(std::bad_cast *this)
{
  this[1].__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    this[2].__vftable = 0;
  }
  std::bad_cast::~bad_cast(this);

  operator delete();
}

void sub_10017CE7C(std::bad_cast *a1)
{
  a1->__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  std::bad_cast::~bad_cast(a1 - 1);
}

void sub_10017CF04(std::bad_cast *a1)
{
  a1->__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  std::bad_cast::~bad_cast(a1 - 1);

  operator delete();
}

uint64_t sub_10017CFA8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = &off_10045BA00;
  *(void *)(a1 + 8) = off_10045BA30;
  *(void *)(a1 + 16) = off_10045BA58;
  return a1;
}

void sub_10017D0C4(_Unwind_Exception *a1)
{
  std::bad_cast::~bad_cast(v1);
  _Unwind_Resume(a1);
}

void sub_10017D0D8()
{
}

void sub_10017D360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100178D68((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10017D374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100178D68((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10017D390(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10017D420(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  v3[0] = &off_100451DC0;
  v3[1] = v2;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 24))(v2);
  }
  long long v4 = *(_OWORD *)(a1 + 24);
  int v5 = *(_DWORD *)(a1 + 40);
  v3[0] = off_10045BAF8;
  sub_1000A6FDC((uint64_t)v3, a1 + 8);
  sub_10017D8F0();
}

void sub_10017D688(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_alloc a11)
{
}

void sub_10017D69C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_alloc a11)
{
}

void sub_10017D6B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::bad_alloc a11)
{
}

void sub_10017D6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 8) = &off_100451DC0;
  uint64_t v5 = *(void *)(a3 + 8);
  *(void *)(a1 + 16) = v5;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 24))(v5);
  }
  long long v6 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 24) = v6;
  *(void *)a1 = off_10045BAD0;
  *(void *)(a1 + 8) = off_10045BAF8;
  sub_10017E78C();
}

void sub_10017D800(_Unwind_Exception *a1)
{
  std::bad_alloc::~bad_alloc(v1);
  _Unwind_Resume(a1);
}

void sub_10017D814(_Unwind_Exception *a1)
{
  v1[1].__vftable = v2;
  long long v4 = v1[2].__vftable;
  if (v4)
  {
    if ((*((unsigned int (**)(std::bad_alloc_vtbl *))v4->~bad_alloc + 4))(v4)) {
      v1[2].__vftable = 0;
    }
  }
  std::bad_alloc::~bad_alloc(v1);
  _Unwind_Resume(a1);
}

void sub_10017D864(std::bad_alloc *this)
{
  this[1].__vftable = (std::bad_alloc_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2)) {
    this[2].__vftable = 0;
  }

  std::bad_alloc::~bad_alloc(this);
}

void sub_10017D8F0()
{
}

void sub_10017DA0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10017DA20(void *a1)
{
}

void sub_10017DA2C(_Unwind_Exception *a1)
{
}

uint64_t sub_10017DA40(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_10017DAE8(std::bad_alloc *this)
{
  this[1].__vftable = (std::bad_alloc_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2)) {
    this[2].__vftable = 0;
  }
  std::bad_alloc::~bad_alloc(this);

  operator delete();
}

void sub_10017DB88(std::bad_alloc *a1)
{
  a1->__vftable = (std::bad_alloc_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  std::bad_alloc::~bad_alloc(a1 - 1);
}

void sub_10017DC10(std::bad_alloc *a1)
{
  a1->__vftable = (std::bad_alloc_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  std::bad_alloc::~bad_alloc(a1 - 1);

  operator delete();
}

uint64_t sub_10017DCAC(uint64_t a1)
{
  *(void *)a1 = off_10045BB50;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10017DD24(uint64_t a1)
{
  *(void *)a1 = off_10045BB50;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }

  operator delete();
}

uint64_t sub_10017DDBC(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v1 = result + 32;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(result + 32) + 16))(result + 32);
    *(unsigned char *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_10017DE10(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt9bad_allocEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt9bad_allocEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt9bad_allocEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt9bad_allocEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_10017DE80()
{
  return 0;
}

uint64_t sub_10017DE88(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_10017DE90(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
    uint64_t v4 = *(void *)(a1 + 24);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = &off_10045BBB0;
  *(void *)(a1 + 8) = off_10045BBE0;
  *(void *)(a1 + 16) = off_10045BC08;
  uint64_t v6 = *(void *)(a2 + 16);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
  }
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 32) = v7;
  return a1;
}

void sub_10017E024(_Unwind_Exception *a1)
{
  std::bad_alloc::~bad_alloc(v1);
  _Unwind_Resume(a1);
}

void sub_10017E038(_Unwind_Exception *a1)
{
  sub_10017E04C(v1);
  _Unwind_Resume(a1);
}

void sub_10017E04C(std::bad_alloc *this)
{
  this[1].__vftable = (std::bad_alloc_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2)) {
    this[2].__vftable = 0;
  }

  std::bad_alloc::~bad_alloc(this);
}

void sub_10017E0D8()
{
}

void sub_10017E218()
{
  std::bad_alloc::~bad_alloc(v0);
  operator delete();
}

void sub_10017E244(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10017E278(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x38uLL);
  sub_10017E65C((uint64_t)exception, a1);
}

void sub_10017E2C0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::bad_alloc *sub_10017E2D4(std::bad_alloc *a1)
{
  a1[2].__vftable = (std::bad_alloc_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2)) {
    a1[3].__vftable = 0;
  }
  std::bad_alloc::~bad_alloc(a1 + 1);
  return a1;
}

void sub_10017E358(std::bad_alloc *a1)
{
  a1[2].__vftable = (std::bad_alloc_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2)) {
    a1[3].__vftable = 0;
  }
  std::bad_alloc::~bad_alloc(a1 + 1);

  operator delete();
}

void sub_10017E3FC(std::bad_alloc *this)
{
  this[1].__vftable = (std::bad_alloc_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2)) {
    this[2].__vftable = 0;
  }

  std::bad_alloc::~bad_alloc(this);
}

void sub_10017E488(std::bad_alloc *this)
{
  this[1].__vftable = (std::bad_alloc_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2)) {
    this[2].__vftable = 0;
  }
  std::bad_alloc::~bad_alloc(this);

  operator delete();
}

void sub_10017E530(std::bad_alloc *a1)
{
  a1->__vftable = (std::bad_alloc_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  std::bad_alloc::~bad_alloc(a1 - 1);
}

void sub_10017E5B8(std::bad_alloc *a1)
{
  a1->__vftable = (std::bad_alloc_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_alloc_vtbl *))v2->~bad_alloc + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  std::bad_alloc::~bad_alloc(a1 - 1);

  operator delete();
}

uint64_t sub_10017E65C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = &off_10045BBB0;
  *(void *)(a1 + 8) = off_10045BBE0;
  *(void *)(a1 + 16) = off_10045BC08;
  return a1;
}

void sub_10017E778(_Unwind_Exception *a1)
{
  std::bad_alloc::~bad_alloc(v1);
  _Unwind_Resume(a1);
}

void sub_10017E78C()
{
}

void sub_10017EA14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100178D68((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10017EA28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100178D68((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10017EA44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10017EAD4(std::runtime_error *a1)
{
  std::runtime_error::runtime_error(&v3, a1);
  imp = a1[1].__imp_.__imp_;
  v4[0] = &off_100451DC0;
  v4[1] = imp;
  if (imp) {
    (*(void (**)(const char *))(*(void *)imp + 24))(imp);
  }
  std::runtime_error v5 = a1[2];
  int v6 = (int)a1[3].__vftable;
  v3.__vftable = (std::runtime_error_vtbl *)off_10045BC80;
  v4[0] = off_10045BCA8;
  sub_1000A6FDC((uint64_t)v4, (uint64_t)&a1[1]);
  sub_10017EF24();
}

void sub_10017ED2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::runtime_error a12)
{
}

void sub_10017ED40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::runtime_error a12)
{
}

void sub_10017ED54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::runtime_error a12)
{
}

void sub_10017ED68(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_10017EDF4(std::runtime_error *a1, const std::runtime_error *a2)
{
  uint64_t v2 = std::runtime_error::runtime_error(a1, a2);
  v2[1].__imp_.__imp_ = 0;
  v2[2].__vftable = 0;
  v2[2].__imp_.__imp_ = 0;
  LODWORD(v2[3].__vftable) = -1;
  v2->__vftable = (std::runtime_error_vtbl *)off_10045BC80;
  v2[1].__vftable = (std::runtime_error_vtbl *)off_10045BCA8;
  sub_10017FED4();
}

void sub_10017EEBC(_Unwind_Exception *a1)
{
  *std::runtime_error v3 = &off_100451DC0;
  if (*v2)
  {
    if ((*(unsigned int (**)(void))(*(void *)*v2 + 32))(*v2)) {
      *uint64_t v2 = 0;
    }
  }
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10017EF24()
{
}

void sub_10017F040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10017F054(void *a1)
{
}

void sub_10017F060(_Unwind_Exception *a1)
{
}

uint64_t sub_10017F074(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_10017F11C(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_10017F1BC(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_10017F244(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

uint64_t sub_10017F2E0(uint64_t a1)
{
  *(void *)a1 = off_10045BD00;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10017F358(uint64_t a1)
{
  *(void *)a1 = off_10045BD00;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }

  operator delete();
}

uint64_t sub_10017F3F0(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v1 = result + 32;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(result + 32) + 16))(result + 32);
    *(unsigned char *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_10017F444(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt13runtime_errorEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt13runtime_errorEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt13runtime_errorEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt13runtime_errorEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_10017F4B4()
{
  return 0;
}

uint64_t sub_10017F4BC(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_10017F4C4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)a2);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
    uint64_t v4 = *(void *)(a1 + 32);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045BD60;
  *(void *)(a1 + 8) = off_10045BD90;
  *(void *)(a1 + 24) = off_10045BDB8;
  uint64_t v6 = *(void *)(a2 + 24);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
  }
  *(void *)(a1 + 32) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v7;
  return a1;
}

void sub_10017F644(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10017F658(_Unwind_Exception *a1)
{
  sub_10017F66C(v1);
  _Unwind_Resume(a1);
}

void sub_10017F66C(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_10017F6F8()
{
}

void sub_10017F828()
{
  std::runtime_error::~runtime_error(v0);
  operator delete();
}

void sub_10017F854(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10017F888(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_10017FC6C((uint64_t)exception, a1);
}

void sub_10017F8D0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10017F8E4(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::runtime_error::~runtime_error((std::runtime_error *)(a1 + 8));
  return a1;
}

void sub_10017F968(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::runtime_error::~runtime_error((std::runtime_error *)(a1 + 8));

  operator delete();
}

void sub_10017FA0C(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_10017FA98(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_10017FB40(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_10017FBC8(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

uint64_t sub_10017FC6C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)(a2 + 8));
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045BD60;
  *(void *)(a1 + 8) = off_10045BD90;
  *(void *)(a1 + 24) = off_10045BDB8;
  return a1;
}

void sub_10017FD78(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10017FD8C(uint64_t a1, const std::runtime_error *a2, uint64_t a3)
{
  std::runtime_error::runtime_error((std::runtime_error *)a1, a2)[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  uint64_t v5 = *(void *)(a3 + 8);
  *(void *)(a1 + 24) = v5;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 24))(v5);
  }
  long long v6 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)a1 = off_10045BC80;
  *(void *)(a1 + 16) = off_10045BCA8;
  sub_10017FED4();
}

void sub_10017FEA4(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10017FEB8(_Unwind_Exception *a1)
{
  sub_1001715E4(v2);
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10017FED4()
{
}

void sub_10018015C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100178D68((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100180170(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100178D68((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10018018C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10018021C(std::runtime_error *a1)
{
  std::runtime_error::runtime_error(&v3, a1);
  std::runtime_error v4 = a1[1];
  imp = a1[2].__imp_.__imp_;
  v5[0] = &off_100451DC0;
  v5[1] = imp;
  if (imp) {
    (*(void (**)(const char *))(*(void *)imp + 24))(imp);
  }
  std::runtime_error v6 = a1[3];
  int v7 = (int)a1[4].__vftable;
  v3.__vftable = (std::runtime_error_vtbl *)off_10045BE30;
  v5[0] = off_10045BE58;
  sub_1000A6FDC((uint64_t)v5, (uint64_t)&a1[2]);
  sub_1001806B4();
}

void sub_100180498(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, std::ios_base::failure *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
}

void sub_1001804AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, std::ios_base::failure *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
}

void sub_1001804C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, std::ios_base::failure *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
}

void sub_1001804D4(std::ios_base::failure *this)
{
  this[1].__vftable = (std::ios_base::failure_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::ios_base::failure::~failure(this);
}

void sub_100180560(std::runtime_error *a1, const std::runtime_error *a2)
{
  std::runtime_error v3 = std::runtime_error::runtime_error(a1, a2);
  v3[1] = a2[1];
  v3[2].__imp_.__imp_ = 0;
  v3[3].__vftable = 0;
  v3[3].__imp_.__imp_ = 0;
  LODWORD(v3[4].__vftable) = -1;
  v3->__vftable = (std::runtime_error_vtbl *)off_10045BE30;
  v3[2].__vftable = (std::runtime_error_vtbl *)off_10045BE58;
  sub_100181748();
}

void sub_10018064C(_Unwind_Exception *a1)
{
  *std::runtime_error v3 = &off_100451DC0;
  if (*v2)
  {
    if ((*(unsigned int (**)(void))(*(void *)*v2 + 32))(*v2)) {
      *uint64_t v2 = 0;
    }
  }
  std::ios_base::failure::~failure(v1);
  _Unwind_Resume(a1);
}

void sub_1001806B4()
{
}

void sub_1001807D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001807E4(void *a1)
{
}

void sub_1001807F0(_Unwind_Exception *a1)
{
}

uint64_t sub_100180804(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_1001808AC(std::ios_base::failure *this)
{
  this[1].__vftable = (std::ios_base::failure_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::ios_base::failure::~failure(this);

  operator delete();
}

void sub_10018094C(std::ios_base::failure *a1)
{
  a1->__vftable = (std::ios_base::failure_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::ios_base::failure::~failure(a1 - 1);
}

void sub_1001809D4(std::ios_base::failure *a1)
{
  a1->__vftable = (std::ios_base::failure_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::ios_base::failure::~failure(a1 - 1);

  operator delete();
}

uint64_t sub_100180A70(uint64_t a1)
{
  *(void *)a1 = off_10045BEB0;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_100180AE8(uint64_t a1)
{
  *(void *)a1 = off_10045BEB0;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }

  operator delete();
}

uint64_t sub_100180B80(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v1 = result + 32;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(result + 32) + 16))(result + 32);
    *(unsigned char *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_100180BD4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperINSt3__18ios_base7failureEEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperINSt3__18ios_base7failureEEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperINSt3__18ios_base7failureEEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperINSt3__18ios_base7failureEEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_100180C44()
{
  return 0;
}

uint64_t sub_100180C4C(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_100180C54(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)a2);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 40) = &off_100451DC0;
  *(void *)(a1 + 48) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
    uint64_t v4 = *(void *)(a1 + 48);
  }
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 56) = v5;
  *(void *)a1 = &off_10045BF10;
  *(void *)(a1 + 8) = off_10045BF40;
  *(void *)(a1 + 40) = off_10045BF68;
  uint64_t v6 = *(void *)(a2 + 40);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
  }
  *(void *)(a1 + 48) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 56) = v7;
  return a1;
}

void sub_100180E14(_Unwind_Exception *a1)
{
  std::ios_base::failure::~failure(v1);
  _Unwind_Resume(a1);
}

void sub_100180E28(_Unwind_Exception *a1)
{
  sub_100180E3C(v1);
  _Unwind_Resume(a1);
}

void sub_100180E3C(std::ios_base::failure *this)
{
  this[1].__vftable = (std::ios_base::failure_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::ios_base::failure::~failure(this);
}

void sub_100180EC8()
{
}

void sub_10018101C()
{
  std::ios_base::failure::~failure(v0);
  operator delete();
}

void sub_100181048(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10018107C(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x50uLL);
  sub_100181460((uint64_t)exception, a1);
}

void sub_1001810C4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001810D8(uint64_t a1)
{
  *(void *)(a1 + 40) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 48) = 0;
  }
  std::ios_base::failure::~failure((std::ios_base::failure *)(a1 + 8));
  return a1;
}

void sub_10018115C(uint64_t a1)
{
  *(void *)(a1 + 40) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 48) = 0;
  }
  std::ios_base::failure::~failure((std::ios_base::failure *)(a1 + 8));

  operator delete();
}

void sub_100181200(std::ios_base::failure *this)
{
  this[1].__vftable = (std::ios_base::failure_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::ios_base::failure::~failure(this);
}

void sub_10018128C(std::ios_base::failure *this)
{
  this[1].__vftable = (std::ios_base::failure_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::ios_base::failure::~failure(this);

  operator delete();
}

void sub_100181334(std::ios_base::failure *a1)
{
  a1->__vftable = (std::ios_base::failure_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::ios_base::failure::~failure(a1 - 1);
}

void sub_1001813BC(std::ios_base::failure *a1)
{
  a1->__vftable = (std::ios_base::failure_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::ios_base::failure::~failure(a1 - 1);

  operator delete();
}

uint64_t sub_100181460(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)(a2 + 8));
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = &off_100451DC0;
  *(void *)(a1 + 48) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v5;
  *(void *)a1 = &off_10045BF10;
  *(void *)(a1 + 8) = off_10045BF40;
  *(void *)(a1 + 40) = off_10045BF68;
  return a1;
}

void sub_1001815AC(_Unwind_Exception *a1)
{
  std::ios_base::failure::~failure(v1);
  _Unwind_Resume(a1);
}

void sub_1001815C0(uint64_t a1, const std::runtime_error *a2, uint64_t a3)
{
  uint64_t v6 = std::runtime_error::runtime_error((std::runtime_error *)a1, a2);
  v6[1] = a2[1];
  v6[2].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  uint64_t v7 = *(void *)(a3 + 8);
  *(void *)(a1 + 40) = v7;
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 24))(v7);
  }
  long long v8 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(void *)a1 = off_10045BE30;
  *(void *)(a1 + 32) = off_10045BE58;
  sub_100181748();
}

void sub_100181718(_Unwind_Exception *a1)
{
  std::ios_base::failure::~failure(v1);
  _Unwind_Resume(a1);
}

void sub_10018172C(_Unwind_Exception *a1)
{
  sub_1001715E4(v2);
  std::ios_base::failure::~failure(v1);
  _Unwind_Resume(a1);
}

void sub_100181748()
{
}

void sub_1001819D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100178D68((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001819E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100178D68((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_100181A00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_100181A90(std::runtime_error *a1)
{
  std::runtime_error::runtime_error(&v3, a1);
  imp = a1[1].__imp_.__imp_;
  v4[0] = &off_100451DC0;
  v4[1] = imp;
  if (imp) {
    (*(void (**)(const char *))(*(void *)imp + 24))(imp);
  }
  std::runtime_error v5 = a1[2];
  int v6 = (int)a1[3].__vftable;
  v3.__vftable = (std::runtime_error_vtbl *)off_10045BFE0;
  v4[0] = off_10045C008;
  sub_1000A6FDC((uint64_t)v4, (uint64_t)&a1[1]);
  sub_100181EFC();
}

void sub_100181D04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::underflow_error a12)
{
}

void sub_100181D18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::underflow_error a12)
{
}

void sub_100181D2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::underflow_error a12)
{
}

void sub_100181D40(std::underflow_error *this)
{
  this[1].__vftable = (std::underflow_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::underflow_error::~underflow_error(this);
}

void sub_100181DCC(std::runtime_error *a1, const std::runtime_error *a2)
{
  uint64_t v2 = std::runtime_error::runtime_error(a1, a2);
  v2[1].__imp_.__imp_ = 0;
  v2[2].__vftable = 0;
  v2[2].__imp_.__imp_ = 0;
  LODWORD(v2[3].__vftable) = -1;
  v2->__vftable = (std::runtime_error_vtbl *)off_10045BFE0;
  v2[1].__vftable = (std::runtime_error_vtbl *)off_10045C008;
  sub_100182F1C();
}

void sub_100181E94(_Unwind_Exception *a1)
{
  *std::runtime_error v3 = &off_100451DC0;
  if (*v2)
  {
    if ((*(unsigned int (**)(void))(*(void *)*v2 + 32))(*v2)) {
      *uint64_t v2 = 0;
    }
  }
  std::underflow_error::~underflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_100181EFC()
{
}

void sub_100182018(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10018202C(void *a1)
{
}

void sub_100182038(_Unwind_Exception *a1)
{
}

uint64_t sub_10018204C(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_1001820F4(std::underflow_error *this)
{
  this[1].__vftable = (std::underflow_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::underflow_error::~underflow_error(this);

  operator delete();
}

void sub_100182194(std::underflow_error *a1)
{
  a1->__vftable = (std::underflow_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::underflow_error::~underflow_error(a1 - 1);
}

void sub_10018221C(std::underflow_error *a1)
{
  a1->__vftable = (std::underflow_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::underflow_error::~underflow_error(a1 - 1);

  operator delete();
}

uint64_t sub_1001822B8(uint64_t a1)
{
  *(void *)a1 = off_10045C060;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_100182330(uint64_t a1)
{
  *(void *)a1 = off_10045C060;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }

  operator delete();
}

uint64_t sub_1001823C8(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v1 = result + 32;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(result + 32) + 16))(result + 32);
    *(unsigned char *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_10018241C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt15underflow_errorEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt15underflow_errorEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt15underflow_errorEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt15underflow_errorEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_10018248C()
{
  return 0;
}

uint64_t sub_100182494(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_10018249C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)a2);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
    uint64_t v4 = *(void *)(a1 + 32);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045C0C0;
  *(void *)(a1 + 8) = off_10045C0F0;
  *(void *)(a1 + 24) = off_10045C118;
  uint64_t v6 = *(void *)(a2 + 24);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
  }
  *(void *)(a1 + 32) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v7;
  return a1;
}

void sub_100182638(_Unwind_Exception *a1)
{
  std::underflow_error::~underflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018264C(_Unwind_Exception *a1)
{
  sub_100182660(v1);
  _Unwind_Resume(a1);
}

void sub_100182660(std::underflow_error *this)
{
  this[1].__vftable = (std::underflow_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::underflow_error::~underflow_error(this);
}

void sub_1001826EC()
{
}

void sub_100182838()
{
  std::underflow_error::~underflow_error(v0);
  operator delete();
}

void sub_100182864(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100182898(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100182C7C((uint64_t)exception, a1);
}

void sub_1001828E0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001828F4(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::underflow_error::~underflow_error((std::underflow_error *)(a1 + 8));
  return a1;
}

void sub_100182978(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::underflow_error::~underflow_error((std::underflow_error *)(a1 + 8));

  operator delete();
}

void sub_100182A1C(std::underflow_error *this)
{
  this[1].__vftable = (std::underflow_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::underflow_error::~underflow_error(this);
}

void sub_100182AA8(std::underflow_error *this)
{
  this[1].__vftable = (std::underflow_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::underflow_error::~underflow_error(this);

  operator delete();
}

void sub_100182B50(std::underflow_error *a1)
{
  a1->__vftable = (std::underflow_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::underflow_error::~underflow_error(a1 - 1);
}

void sub_100182BD8(std::underflow_error *a1)
{
  a1->__vftable = (std::underflow_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::underflow_error::~underflow_error(a1 - 1);

  operator delete();
}

uint64_t sub_100182C7C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)(a2 + 8));
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045C0C0;
  *(void *)(a1 + 8) = off_10045C0F0;
  *(void *)(a1 + 24) = off_10045C118;
  return a1;
}

void sub_100182DA4(_Unwind_Exception *a1)
{
  std::underflow_error::~underflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_100182DB8(uint64_t a1, const std::runtime_error *a2, uint64_t a3)
{
  long long v5 = std::runtime_error::runtime_error((std::runtime_error *)a1, a2);
  v5[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  uint64_t v6 = *(void *)(a3 + 8);
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_10045BFE0;
  *(void *)(a1 + 16) = off_10045C008;
  sub_100182F1C();
}

void sub_100182EEC(_Unwind_Exception *a1)
{
  std::underflow_error::~underflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_100182F00(_Unwind_Exception *a1)
{
  sub_1001715E4(v2);
  std::underflow_error::~underflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_100182F1C()
{
}

void sub_1001831A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100178D68((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001831B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100178D68((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_1001831D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_100183264(std::runtime_error *a1)
{
  std::runtime_error::runtime_error(&v3, a1);
  imp = a1[1].__imp_.__imp_;
  v4[0] = &off_100451DC0;
  v4[1] = imp;
  if (imp) {
    (*(void (**)(const char *))(*(void *)imp + 24))(imp);
  }
  std::runtime_error v5 = a1[2];
  int v6 = (int)a1[3].__vftable;
  v3.__vftable = (std::runtime_error_vtbl *)off_10045C190;
  v4[0] = off_10045C1B8;
  sub_1000A6FDC((uint64_t)v4, (uint64_t)&a1[1]);
  sub_1001836D0();
}

void sub_1001834D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::overflow_error a12)
{
}

void sub_1001834EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::overflow_error a12)
{
}

void sub_100183500(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::overflow_error a12)
{
}

void sub_100183514(std::overflow_error *this)
{
  this[1].__vftable = (std::overflow_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::overflow_error::~overflow_error(this);
}

void sub_1001835A0(std::runtime_error *a1, const std::runtime_error *a2)
{
  uint64_t v2 = std::runtime_error::runtime_error(a1, a2);
  v2[1].__imp_.__imp_ = 0;
  v2[2].__vftable = 0;
  v2[2].__imp_.__imp_ = 0;
  LODWORD(v2[3].__vftable) = -1;
  v2->__vftable = (std::runtime_error_vtbl *)off_10045C190;
  v2[1].__vftable = (std::runtime_error_vtbl *)off_10045C1B8;
  sub_1001846F0();
}

void sub_100183668(_Unwind_Exception *a1)
{
  *std::runtime_error v3 = &off_100451DC0;
  if (*v2)
  {
    if ((*(unsigned int (**)(void))(*(void *)*v2 + 32))(*v2)) {
      *uint64_t v2 = 0;
    }
  }
  std::overflow_error::~overflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_1001836D0()
{
}

void sub_1001837EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100183800(void *a1)
{
}

void sub_10018380C(_Unwind_Exception *a1)
{
}

uint64_t sub_100183820(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_1001838C8(std::overflow_error *this)
{
  this[1].__vftable = (std::overflow_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::overflow_error::~overflow_error(this);

  operator delete();
}

void sub_100183968(std::overflow_error *a1)
{
  a1->__vftable = (std::overflow_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::overflow_error::~overflow_error(a1 - 1);
}

void sub_1001839F0(std::overflow_error *a1)
{
  a1->__vftable = (std::overflow_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::overflow_error::~overflow_error(a1 - 1);

  operator delete();
}

uint64_t sub_100183A8C(uint64_t a1)
{
  *(void *)a1 = off_10045C210;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_100183B04(uint64_t a1)
{
  *(void *)a1 = off_10045C210;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }

  operator delete();
}

uint64_t sub_100183B9C(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v1 = result + 32;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(result + 32) + 16))(result + 32);
    *(unsigned char *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_100183BF0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt14overflow_errorEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt14overflow_errorEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt14overflow_errorEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt14overflow_errorEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_100183C60()
{
  return 0;
}

uint64_t sub_100183C68(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_100183C70(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)a2);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
    uint64_t v4 = *(void *)(a1 + 32);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045C270;
  *(void *)(a1 + 8) = off_10045C2A0;
  *(void *)(a1 + 24) = off_10045C2C8;
  uint64_t v6 = *(void *)(a2 + 24);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
  }
  *(void *)(a1 + 32) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v7;
  return a1;
}

void sub_100183E0C(_Unwind_Exception *a1)
{
  std::overflow_error::~overflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_100183E20(_Unwind_Exception *a1)
{
  sub_100183E34(v1);
  _Unwind_Resume(a1);
}

void sub_100183E34(std::overflow_error *this)
{
  this[1].__vftable = (std::overflow_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::overflow_error::~overflow_error(this);
}

void sub_100183EC0()
{
}

void sub_10018400C()
{
  std::overflow_error::~overflow_error(v0);
  operator delete();
}

void sub_100184038(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10018406C(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100184450((uint64_t)exception, a1);
}

void sub_1001840B4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001840C8(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::overflow_error::~overflow_error((std::overflow_error *)(a1 + 8));
  return a1;
}

void sub_10018414C(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::overflow_error::~overflow_error((std::overflow_error *)(a1 + 8));

  operator delete();
}

void sub_1001841F0(std::overflow_error *this)
{
  this[1].__vftable = (std::overflow_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::overflow_error::~overflow_error(this);
}

void sub_10018427C(std::overflow_error *this)
{
  this[1].__vftable = (std::overflow_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::overflow_error::~overflow_error(this);

  operator delete();
}

void sub_100184324(std::overflow_error *a1)
{
  a1->__vftable = (std::overflow_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::overflow_error::~overflow_error(a1 - 1);
}

void sub_1001843AC(std::overflow_error *a1)
{
  a1->__vftable = (std::overflow_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::overflow_error::~overflow_error(a1 - 1);

  operator delete();
}

uint64_t sub_100184450(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)(a2 + 8));
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045C270;
  *(void *)(a1 + 8) = off_10045C2A0;
  *(void *)(a1 + 24) = off_10045C2C8;
  return a1;
}

void sub_100184578(_Unwind_Exception *a1)
{
  std::overflow_error::~overflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018458C(uint64_t a1, const std::runtime_error *a2, uint64_t a3)
{
  long long v5 = std::runtime_error::runtime_error((std::runtime_error *)a1, a2);
  v5[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  uint64_t v6 = *(void *)(a3 + 8);
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_10045C190;
  *(void *)(a1 + 16) = off_10045C1B8;
  sub_1001846F0();
}

void sub_1001846C0(_Unwind_Exception *a1)
{
  std::overflow_error::~overflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_1001846D4(_Unwind_Exception *a1)
{
  sub_1001715E4(v2);
  std::overflow_error::~overflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_1001846F0()
{
}

void sub_100184978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100178D68((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10018498C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100178D68((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_1001849A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_100184A38(std::runtime_error *a1)
{
  std::runtime_error::runtime_error(&v3, a1);
  imp = a1[1].__imp_.__imp_;
  v4[0] = &off_100451DC0;
  v4[1] = imp;
  if (imp) {
    (*(void (**)(const char *))(*(void *)imp + 24))(imp);
  }
  std::runtime_error v5 = a1[2];
  int v6 = (int)a1[3].__vftable;
  v3.__vftable = (std::runtime_error_vtbl *)off_10045C340;
  v4[0] = off_10045C368;
  sub_1000A6FDC((uint64_t)v4, (uint64_t)&a1[1]);
  sub_100184EA4();
}

void sub_100184CAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::range_error a12)
{
}

void sub_100184CC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::range_error a12)
{
}

void sub_100184CD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::range_error a12)
{
}

void sub_100184CE8(std::range_error *this)
{
  this[1].__vftable = (std::range_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::range_error::~range_error(this);
}

void sub_100184D74(std::runtime_error *a1, const std::runtime_error *a2)
{
  uint64_t v2 = std::runtime_error::runtime_error(a1, a2);
  v2[1].__imp_.__imp_ = 0;
  v2[2].__vftable = 0;
  v2[2].__imp_.__imp_ = 0;
  LODWORD(v2[3].__vftable) = -1;
  v2->__vftable = (std::runtime_error_vtbl *)off_10045C340;
  v2[1].__vftable = (std::runtime_error_vtbl *)off_10045C368;
  sub_100185EC4();
}

void sub_100184E3C(_Unwind_Exception *a1)
{
  *std::runtime_error v3 = &off_100451DC0;
  if (*v2)
  {
    if ((*(unsigned int (**)(void))(*(void *)*v2 + 32))(*v2)) {
      *uint64_t v2 = 0;
    }
  }
  std::range_error::~range_error(v1);
  _Unwind_Resume(a1);
}

void sub_100184EA4()
{
}

void sub_100184FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100184FD4(void *a1)
{
}

void sub_100184FE0(_Unwind_Exception *a1)
{
}

uint64_t sub_100184FF4(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_10018509C(std::range_error *this)
{
  this[1].__vftable = (std::range_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::range_error::~range_error(this);

  operator delete();
}

void sub_10018513C(std::range_error *a1)
{
  a1->__vftable = (std::range_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::range_error::~range_error(a1 - 1);
}

void sub_1001851C4(std::range_error *a1)
{
  a1->__vftable = (std::range_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::range_error::~range_error(a1 - 1);

  operator delete();
}

uint64_t sub_100185260(uint64_t a1)
{
  *(void *)a1 = off_10045C3C0;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1001852D8(uint64_t a1)
{
  *(void *)a1 = off_10045C3C0;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }

  operator delete();
}

uint64_t sub_100185370(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v1 = result + 32;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(result + 32) + 16))(result + 32);
    *(unsigned char *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_1001853C4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt11range_errorEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt11range_errorEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt11range_errorEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt11range_errorEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_100185434()
{
  return 0;
}

uint64_t sub_10018543C(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_100185444(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)a2);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
    uint64_t v4 = *(void *)(a1 + 32);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045C420;
  *(void *)(a1 + 8) = off_10045C450;
  *(void *)(a1 + 24) = off_10045C478;
  uint64_t v6 = *(void *)(a2 + 24);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
  }
  *(void *)(a1 + 32) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v7;
  return a1;
}

void sub_1001855E0(_Unwind_Exception *a1)
{
  std::range_error::~range_error(v1);
  _Unwind_Resume(a1);
}

void sub_1001855F4(_Unwind_Exception *a1)
{
  sub_100185608(v1);
  _Unwind_Resume(a1);
}

void sub_100185608(std::range_error *this)
{
  this[1].__vftable = (std::range_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::range_error::~range_error(this);
}

void sub_100185694()
{
}

void sub_1001857E0()
{
  std::range_error::~range_error(v0);
  operator delete();
}

void sub_10018580C(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100185840(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100185C24((uint64_t)exception, a1);
}

void sub_100185888(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10018589C(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::range_error::~range_error((std::range_error *)(a1 + 8));
  return a1;
}

void sub_100185920(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::range_error::~range_error((std::range_error *)(a1 + 8));

  operator delete();
}

void sub_1001859C4(std::range_error *this)
{
  this[1].__vftable = (std::range_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::range_error::~range_error(this);
}

void sub_100185A50(std::range_error *this)
{
  this[1].__vftable = (std::range_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::range_error::~range_error(this);

  operator delete();
}

void sub_100185AF8(std::range_error *a1)
{
  a1->__vftable = (std::range_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::range_error::~range_error(a1 - 1);
}

void sub_100185B80(std::range_error *a1)
{
  a1->__vftable = (std::range_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::range_error::~range_error(a1 - 1);

  operator delete();
}

uint64_t sub_100185C24(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)(a1 + 8), (const std::runtime_error *)(a2 + 8));
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045C420;
  *(void *)(a1 + 8) = off_10045C450;
  *(void *)(a1 + 24) = off_10045C478;
  return a1;
}

void sub_100185D4C(_Unwind_Exception *a1)
{
  std::range_error::~range_error(v1);
  _Unwind_Resume(a1);
}

void sub_100185D60(uint64_t a1, const std::runtime_error *a2, uint64_t a3)
{
  long long v5 = std::runtime_error::runtime_error((std::runtime_error *)a1, a2);
  v5[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  uint64_t v6 = *(void *)(a3 + 8);
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_10045C340;
  *(void *)(a1 + 16) = off_10045C368;
  sub_100185EC4();
}

void sub_100185E94(_Unwind_Exception *a1)
{
  std::range_error::~range_error(v1);
  _Unwind_Resume(a1);
}

void sub_100185EA8(_Unwind_Exception *a1)
{
  sub_1001715E4(v2);
  std::range_error::~range_error(v1);
  _Unwind_Resume(a1);
}

void sub_100185EC4()
{
}

void sub_10018614C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100178D68((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100186160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100178D68((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10018617C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10018620C(std::logic_error *a1)
{
  std::logic_error::logic_error(&v3, a1);
  imp = a1[1].__imp_.__imp_;
  v4[0] = &off_100451DC0;
  v4[1] = imp;
  if (imp) {
    (*(void (**)(const char *))(*(void *)imp + 24))(imp);
  }
  std::logic_error v5 = a1[2];
  int v6 = (int)a1[3].__vftable;
  v3.__vftable = (std::logic_error_vtbl *)off_10045C4F0;
  v4[0] = off_10045C518;
  sub_1000A6FDC((uint64_t)v4, (uint64_t)&a1[1]);
  sub_10018665C();
}

void sub_100186464(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::logic_error a12)
{
}

void sub_100186478(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::logic_error a12)
{
}

void sub_10018648C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::logic_error a12)
{
}

void sub_1001864A0(std::logic_error *this)
{
  this[1].__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::logic_error::~logic_error(this);
}

void sub_10018652C(std::logic_error *a1, const std::logic_error *a2)
{
  uint64_t v2 = std::logic_error::logic_error(a1, a2);
  v2[1].__imp_.__imp_ = 0;
  v2[2].__vftable = 0;
  v2[2].__imp_.__imp_ = 0;
  LODWORD(v2[3].__vftable) = -1;
  v2->__vftable = (std::logic_error_vtbl *)off_10045C4F0;
  v2[1].__vftable = (std::logic_error_vtbl *)off_10045C518;
  sub_10018760C();
}

void sub_1001865F4(_Unwind_Exception *a1)
{
  *std::logic_error v3 = &off_100451DC0;
  if (*v2)
  {
    if ((*(unsigned int (**)(void))(*(void *)*v2 + 32))(*v2)) {
      *uint64_t v2 = 0;
    }
  }
  std::logic_error::~logic_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018665C()
{
}

void sub_100186778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10018678C(void *a1)
{
}

void sub_100186798(_Unwind_Exception *a1)
{
}

uint64_t sub_1001867AC(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_100186854(std::logic_error *this)
{
  this[1].__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::logic_error::~logic_error(this);

  operator delete();
}

void sub_1001868F4(std::logic_error *a1)
{
  a1->__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::logic_error::~logic_error(a1 - 1);
}

void sub_10018697C(std::logic_error *a1)
{
  a1->__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::logic_error::~logic_error(a1 - 1);

  operator delete();
}

uint64_t sub_100186A18(uint64_t a1)
{
  *(void *)a1 = off_10045C570;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_100186A90(uint64_t a1)
{
  *(void *)a1 = off_10045C570;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }

  operator delete();
}

uint64_t sub_100186B28(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v1 = result + 32;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(result + 32) + 16))(result + 32);
    *(unsigned char *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_100186B7C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt11logic_errorEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt11logic_errorEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt11logic_errorEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt11logic_errorEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_100186BEC()
{
  return 0;
}

uint64_t sub_100186BF4(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_100186BFC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)a2);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
    uint64_t v4 = *(void *)(a1 + 32);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045C5D0;
  *(void *)(a1 + 8) = off_10045C600;
  *(void *)(a1 + 24) = off_10045C628;
  uint64_t v6 = *(void *)(a2 + 24);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
  }
  *(void *)(a1 + 32) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v7;
  return a1;
}

void sub_100186D7C(_Unwind_Exception *a1)
{
  std::logic_error::~logic_error(v1);
  _Unwind_Resume(a1);
}

void sub_100186D90(_Unwind_Exception *a1)
{
  sub_100186DA4(v1);
  _Unwind_Resume(a1);
}

void sub_100186DA4(std::logic_error *this)
{
  this[1].__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::logic_error::~logic_error(this);
}

void sub_100186E30()
{
}

void sub_100186F60()
{
  std::logic_error::~logic_error(v0);
  operator delete();
}

void sub_100186F8C(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100186FC0(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_1001873A4((uint64_t)exception, a1);
}

void sub_100187008(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10018701C(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::logic_error::~logic_error((std::logic_error *)(a1 + 8));
  return a1;
}

void sub_1001870A0(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::logic_error::~logic_error((std::logic_error *)(a1 + 8));

  operator delete();
}

void sub_100187144(std::logic_error *this)
{
  this[1].__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::logic_error::~logic_error(this);
}

void sub_1001871D0(std::logic_error *this)
{
  this[1].__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::logic_error::~logic_error(this);

  operator delete();
}

void sub_100187278(std::logic_error *a1)
{
  a1->__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::logic_error::~logic_error(a1 - 1);
}

void sub_100187300(std::logic_error *a1)
{
  a1->__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::logic_error::~logic_error(a1 - 1);

  operator delete();
}

uint64_t sub_1001873A4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045C5D0;
  *(void *)(a1 + 8) = off_10045C600;
  *(void *)(a1 + 24) = off_10045C628;
  return a1;
}

void sub_1001874B0(_Unwind_Exception *a1)
{
  std::logic_error::~logic_error(v1);
  _Unwind_Resume(a1);
}

void sub_1001874C4(uint64_t a1, const std::logic_error *a2, uint64_t a3)
{
  std::logic_error::logic_error((std::logic_error *)a1, a2)[1].__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  uint64_t v5 = *(void *)(a3 + 8);
  *(void *)(a1 + 24) = v5;
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 24))(v5);
  }
  long long v6 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)a1 = off_10045C4F0;
  *(void *)(a1 + 16) = off_10045C518;
  sub_10018760C();
}

void sub_1001875DC(_Unwind_Exception *a1)
{
  std::logic_error::~logic_error(v1);
  _Unwind_Resume(a1);
}

void sub_1001875F0(_Unwind_Exception *a1)
{
  sub_1001715E4(v2);
  std::logic_error::~logic_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018760C()
{
}

void sub_100187894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100178D68((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1001878A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100178D68((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_1001878C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_100187954(std::logic_error *a1)
{
  std::logic_error::logic_error(&v3, a1);
  imp = a1[1].__imp_.__imp_;
  v4[0] = &off_100451DC0;
  v4[1] = imp;
  if (imp) {
    (*(void (**)(const char *))(*(void *)imp + 24))(imp);
  }
  std::logic_error v5 = a1[2];
  int v6 = (int)a1[3].__vftable;
  v3.__vftable = (std::logic_error_vtbl *)off_10045C6A0;
  v4[0] = off_10045C6C8;
  sub_1000A6FDC((uint64_t)v4, (uint64_t)&a1[1]);
  sub_100187DC0();
}

void sub_100187BC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::out_of_range a12)
{
}

void sub_100187BDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::out_of_range a12)
{
}

void sub_100187BF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::out_of_range a12)
{
}

void sub_100187C04(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(this);
}

void sub_100187C90(std::logic_error *a1, const std::logic_error *a2)
{
  uint64_t v2 = std::logic_error::logic_error(a1, a2);
  v2[1].__imp_.__imp_ = 0;
  v2[2].__vftable = 0;
  v2[2].__imp_.__imp_ = 0;
  LODWORD(v2[3].__vftable) = -1;
  v2->__vftable = (std::logic_error_vtbl *)off_10045C6A0;
  v2[1].__vftable = (std::logic_error_vtbl *)off_10045C6C8;
  sub_100188DE0();
}

void sub_100187D58(_Unwind_Exception *a1)
{
  *std::logic_error v3 = &off_100451DC0;
  if (*v2)
  {
    if ((*(unsigned int (**)(void))(*(void *)*v2 + 32))(*v2)) {
      *uint64_t v2 = 0;
    }
  }
  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_100187DC0()
{
}

void sub_100187EDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100187EF0(void *a1)
{
}

void sub_100187EFC(_Unwind_Exception *a1)
{
}

uint64_t sub_100187F10(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_100187FB8(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(this);

  operator delete();
}

void sub_100188058(std::out_of_range *a1)
{
  a1->__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(a1 - 1);
}

void sub_1001880E0(std::out_of_range *a1)
{
  a1->__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(a1 - 1);

  operator delete();
}

uint64_t sub_10018817C(uint64_t a1)
{
  *(void *)a1 = off_10045C720;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1001881F4(uint64_t a1)
{
  *(void *)a1 = off_10045C720;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }

  operator delete();
}

uint64_t sub_10018828C(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v1 = result + 32;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(result + 32) + 16))(result + 32);
    *(unsigned char *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_1001882E0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt12out_of_rangeEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt12out_of_rangeEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt12out_of_rangeEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt12out_of_rangeEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_100188350()
{
  return 0;
}

uint64_t sub_100188358(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_100188360(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)a2);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
    uint64_t v4 = *(void *)(a1 + 32);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045C780;
  *(void *)(a1 + 8) = off_10045C7B0;
  *(void *)(a1 + 24) = off_10045C7D8;
  uint64_t v6 = *(void *)(a2 + 24);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
  }
  *(void *)(a1 + 32) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v7;
  return a1;
}

void sub_1001884FC(_Unwind_Exception *a1)
{
  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_100188510(_Unwind_Exception *a1)
{
  sub_100188524(v1);
  _Unwind_Resume(a1);
}

void sub_100188524(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(this);
}

void sub_1001885B0()
{
}

void sub_1001886FC()
{
  std::out_of_range::~out_of_range(v0);
  operator delete();
}

void sub_100188728(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10018875C(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100188B40((uint64_t)exception, a1);
}

void sub_1001887A4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001887B8(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  return a1;
}

void sub_10018883C(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));

  operator delete();
}

void sub_1001888E0(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(this);
}

void sub_10018896C(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(this);

  operator delete();
}

void sub_100188A14(std::out_of_range *a1)
{
  a1->__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(a1 - 1);
}

void sub_100188A9C(std::out_of_range *a1)
{
  a1->__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(a1 - 1);

  operator delete();
}

uint64_t sub_100188B40(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045C780;
  *(void *)(a1 + 8) = off_10045C7B0;
  *(void *)(a1 + 24) = off_10045C7D8;
  return a1;
}

void sub_100188C68(_Unwind_Exception *a1)
{
  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_100188C7C(uint64_t a1, const std::logic_error *a2, uint64_t a3)
{
  long long v5 = std::logic_error::logic_error((std::logic_error *)a1, a2);
  v5[1].__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  uint64_t v6 = *(void *)(a3 + 8);
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_10045C6A0;
  *(void *)(a1 + 16) = off_10045C6C8;
  sub_100188DE0();
}

void sub_100188DB0(_Unwind_Exception *a1)
{
  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_100188DC4(_Unwind_Exception *a1)
{
  sub_1001715E4(v2);
  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_100188DE0()
{
}

void sub_100189068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100178D68((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10018907C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100178D68((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_100189098(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_100189128(std::logic_error *a1)
{
  std::logic_error::logic_error(&v3, a1);
  imp = a1[1].__imp_.__imp_;
  v4[0] = &off_100451DC0;
  v4[1] = imp;
  if (imp) {
    (*(void (**)(const char *))(*(void *)imp + 24))(imp);
  }
  std::logic_error v5 = a1[2];
  int v6 = (int)a1[3].__vftable;
  v3.__vftable = (std::logic_error_vtbl *)off_10045C850;
  v4[0] = off_10045C878;
  sub_1000A6FDC((uint64_t)v4, (uint64_t)&a1[1]);
  sub_100189594();
}

void sub_10018939C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::length_error a12)
{
}

void sub_1001893B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::length_error a12)
{
}

void sub_1001893C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::length_error a12)
{
}

void sub_1001893D8(std::length_error *this)
{
  this[1].__vftable = (std::length_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::length_error::~length_error(this);
}

void sub_100189464(std::logic_error *a1, const std::logic_error *a2)
{
  uint64_t v2 = std::logic_error::logic_error(a1, a2);
  v2[1].__imp_.__imp_ = 0;
  v2[2].__vftable = 0;
  v2[2].__imp_.__imp_ = 0;
  LODWORD(v2[3].__vftable) = -1;
  v2->__vftable = (std::logic_error_vtbl *)off_10045C850;
  v2[1].__vftable = (std::logic_error_vtbl *)off_10045C878;
  sub_10018A5B4();
}

void sub_10018952C(_Unwind_Exception *a1)
{
  *std::logic_error v3 = &off_100451DC0;
  if (*v2)
  {
    if ((*(unsigned int (**)(void))(*(void *)*v2 + 32))(*v2)) {
      *uint64_t v2 = 0;
    }
  }
  std::length_error::~length_error(v1);
  _Unwind_Resume(a1);
}

void sub_100189594()
{
}

void sub_1001896B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001896C4(void *a1)
{
}

void sub_1001896D0(_Unwind_Exception *a1)
{
}

uint64_t sub_1001896E4(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_10018978C(std::length_error *this)
{
  this[1].__vftable = (std::length_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::length_error::~length_error(this);

  operator delete();
}

void sub_10018982C(std::length_error *a1)
{
  a1->__vftable = (std::length_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::length_error::~length_error(a1 - 1);
}

void sub_1001898B4(std::length_error *a1)
{
  a1->__vftable = (std::length_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::length_error::~length_error(a1 - 1);

  operator delete();
}

uint64_t sub_100189950(uint64_t a1)
{
  *(void *)a1 = off_10045C8D0;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_1001899C8(uint64_t a1)
{
  *(void *)a1 = off_10045C8D0;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }

  operator delete();
}

uint64_t sub_100189A60(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v1 = result + 32;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(result + 32) + 16))(result + 32);
    *(unsigned char *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_100189AB4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt12length_errorEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt12length_errorEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt12length_errorEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt12length_errorEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_100189B24()
{
  return 0;
}

uint64_t sub_100189B2C(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_100189B34(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)a2);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
    uint64_t v4 = *(void *)(a1 + 32);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045C930;
  *(void *)(a1 + 8) = off_10045C960;
  *(void *)(a1 + 24) = off_10045C988;
  uint64_t v6 = *(void *)(a2 + 24);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
  }
  *(void *)(a1 + 32) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v7;
  return a1;
}

void sub_100189CD0(_Unwind_Exception *a1)
{
  std::length_error::~length_error(v1);
  _Unwind_Resume(a1);
}

void sub_100189CE4(_Unwind_Exception *a1)
{
  sub_100189CF8(v1);
  _Unwind_Resume(a1);
}

void sub_100189CF8(std::length_error *this)
{
  this[1].__vftable = (std::length_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::length_error::~length_error(this);
}

void sub_100189D84()
{
}

void sub_100189ED0()
{
  std::length_error::~length_error(v0);
  operator delete();
}

void sub_100189EFC(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100189F30(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_10018A314((uint64_t)exception, a1);
}

void sub_100189F78(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100189F8C(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::length_error::~length_error((std::length_error *)(a1 + 8));
  return a1;
}

void sub_10018A010(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::length_error::~length_error((std::length_error *)(a1 + 8));

  operator delete();
}

void sub_10018A0B4(std::length_error *this)
{
  this[1].__vftable = (std::length_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::length_error::~length_error(this);
}

void sub_10018A140(std::length_error *this)
{
  this[1].__vftable = (std::length_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::length_error::~length_error(this);

  operator delete();
}

void sub_10018A1E8(std::length_error *a1)
{
  a1->__vftable = (std::length_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::length_error::~length_error(a1 - 1);
}

void sub_10018A270(std::length_error *a1)
{
  a1->__vftable = (std::length_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::length_error::~length_error(a1 - 1);

  operator delete();
}

uint64_t sub_10018A314(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045C930;
  *(void *)(a1 + 8) = off_10045C960;
  *(void *)(a1 + 24) = off_10045C988;
  return a1;
}

void sub_10018A43C(_Unwind_Exception *a1)
{
  std::length_error::~length_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018A450(uint64_t a1, const std::logic_error *a2, uint64_t a3)
{
  long long v5 = std::logic_error::logic_error((std::logic_error *)a1, a2);
  v5[1].__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  uint64_t v6 = *(void *)(a3 + 8);
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_10045C850;
  *(void *)(a1 + 16) = off_10045C878;
  sub_10018A5B4();
}

void sub_10018A584(_Unwind_Exception *a1)
{
  std::length_error::~length_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018A598(_Unwind_Exception *a1)
{
  sub_1001715E4(v2);
  std::length_error::~length_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018A5B4()
{
}

void sub_10018A83C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100178D68((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10018A850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100178D68((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10018A86C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10018A8FC(std::logic_error *a1)
{
  std::logic_error::logic_error(&v3, a1);
  imp = a1[1].__imp_.__imp_;
  v4[0] = &off_100451DC0;
  v4[1] = imp;
  if (imp) {
    (*(void (**)(const char *))(*(void *)imp + 24))(imp);
  }
  std::logic_error v5 = a1[2];
  int v6 = (int)a1[3].__vftable;
  v3.__vftable = (std::logic_error_vtbl *)off_10045CA00;
  v4[0] = off_10045CA28;
  sub_1000A6FDC((uint64_t)v4, (uint64_t)&a1[1]);
  sub_10018AD68();
}

void sub_10018AB70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::invalid_argument a12)
{
}

void sub_10018AB84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::invalid_argument a12)
{
}

void sub_10018AB98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::invalid_argument a12)
{
}

void sub_10018ABAC(std::invalid_argument *this)
{
  this[1].__vftable = (std::invalid_argument_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::invalid_argument::~invalid_argument(this);
}

void sub_10018AC38(std::logic_error *a1, const std::logic_error *a2)
{
  uint64_t v2 = std::logic_error::logic_error(a1, a2);
  v2[1].__imp_.__imp_ = 0;
  v2[2].__vftable = 0;
  v2[2].__imp_.__imp_ = 0;
  LODWORD(v2[3].__vftable) = -1;
  v2->__vftable = (std::logic_error_vtbl *)off_10045CA00;
  v2[1].__vftable = (std::logic_error_vtbl *)off_10045CA28;
  sub_10018BD88();
}

void sub_10018AD00(_Unwind_Exception *a1)
{
  *std::logic_error v3 = &off_100451DC0;
  if (*v2)
  {
    if ((*(unsigned int (**)(void))(*(void *)*v2 + 32))(*v2)) {
      *uint64_t v2 = 0;
    }
  }
  std::invalid_argument::~invalid_argument(v1);
  _Unwind_Resume(a1);
}

void sub_10018AD68()
{
}

void sub_10018AE84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10018AE98(void *a1)
{
}

void sub_10018AEA4(_Unwind_Exception *a1)
{
}

uint64_t sub_10018AEB8(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_10018AF60(std::invalid_argument *this)
{
  this[1].__vftable = (std::invalid_argument_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::invalid_argument::~invalid_argument(this);

  operator delete();
}

void sub_10018B000(std::invalid_argument *a1)
{
  a1->__vftable = (std::invalid_argument_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::invalid_argument::~invalid_argument(a1 - 1);
}

void sub_10018B088(std::invalid_argument *a1)
{
  a1->__vftable = (std::invalid_argument_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::invalid_argument::~invalid_argument(a1 - 1);

  operator delete();
}

uint64_t sub_10018B124(uint64_t a1)
{
  *(void *)a1 = off_10045CA80;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10018B19C(uint64_t a1)
{
  *(void *)a1 = off_10045CA80;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }

  operator delete();
}

uint64_t sub_10018B234(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v1 = result + 32;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(result + 32) + 16))(result + 32);
    *(unsigned char *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_10018B288(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt16invalid_argumentEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt16invalid_argumentEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt16invalid_argumentEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt16invalid_argumentEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_10018B2F8()
{
  return 0;
}

uint64_t sub_10018B300(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_10018B308(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)a2);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
    uint64_t v4 = *(void *)(a1 + 32);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045CAE0;
  *(void *)(a1 + 8) = off_10045CB10;
  *(void *)(a1 + 24) = off_10045CB38;
  uint64_t v6 = *(void *)(a2 + 24);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
  }
  *(void *)(a1 + 32) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v7;
  return a1;
}

void sub_10018B4A4(_Unwind_Exception *a1)
{
  std::invalid_argument::~invalid_argument(v1);
  _Unwind_Resume(a1);
}

void sub_10018B4B8(_Unwind_Exception *a1)
{
  sub_10018B4CC(v1);
  _Unwind_Resume(a1);
}

void sub_10018B4CC(std::invalid_argument *this)
{
  this[1].__vftable = (std::invalid_argument_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::invalid_argument::~invalid_argument(this);
}

void sub_10018B558()
{
}

void sub_10018B6A4()
{
  std::invalid_argument::~invalid_argument(v0);
  operator delete();
}

void sub_10018B6D0(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10018B704(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_10018BAE8((uint64_t)exception, a1);
}

void sub_10018B74C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10018B760(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::invalid_argument::~invalid_argument((std::invalid_argument *)(a1 + 8));
  return a1;
}

void sub_10018B7E4(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::invalid_argument::~invalid_argument((std::invalid_argument *)(a1 + 8));

  operator delete();
}

void sub_10018B888(std::invalid_argument *this)
{
  this[1].__vftable = (std::invalid_argument_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::invalid_argument::~invalid_argument(this);
}

void sub_10018B914(std::invalid_argument *this)
{
  this[1].__vftable = (std::invalid_argument_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::invalid_argument::~invalid_argument(this);

  operator delete();
}

void sub_10018B9BC(std::invalid_argument *a1)
{
  a1->__vftable = (std::invalid_argument_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::invalid_argument::~invalid_argument(a1 - 1);
}

void sub_10018BA44(std::invalid_argument *a1)
{
  a1->__vftable = (std::invalid_argument_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::invalid_argument::~invalid_argument(a1 - 1);

  operator delete();
}

uint64_t sub_10018BAE8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045CAE0;
  *(void *)(a1 + 8) = off_10045CB10;
  *(void *)(a1 + 24) = off_10045CB38;
  return a1;
}

void sub_10018BC10(_Unwind_Exception *a1)
{
  std::invalid_argument::~invalid_argument(v1);
  _Unwind_Resume(a1);
}

void sub_10018BC24(uint64_t a1, const std::logic_error *a2, uint64_t a3)
{
  long long v5 = std::logic_error::logic_error((std::logic_error *)a1, a2);
  v5[1].__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  uint64_t v6 = *(void *)(a3 + 8);
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_10045CA00;
  *(void *)(a1 + 16) = off_10045CA28;
  sub_10018BD88();
}

void sub_10018BD58(_Unwind_Exception *a1)
{
  std::invalid_argument::~invalid_argument(v1);
  _Unwind_Resume(a1);
}

void sub_10018BD6C(_Unwind_Exception *a1)
{
  sub_1001715E4(v2);
  std::invalid_argument::~invalid_argument(v1);
  _Unwind_Resume(a1);
}

void sub_10018BD88()
{
}

void sub_10018C010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100178D68((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10018C024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100178D68((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10018C040(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10018C0D0(std::logic_error *a1)
{
  std::logic_error::logic_error(&v3, a1);
  imp = a1[1].__imp_.__imp_;
  v4[0] = &off_100451DC0;
  v4[1] = imp;
  if (imp) {
    (*(void (**)(const char *))(*(void *)imp + 24))(imp);
  }
  std::logic_error v5 = a1[2];
  int v6 = (int)a1[3].__vftable;
  v3.__vftable = (std::logic_error_vtbl *)off_10045CBB0;
  v4[0] = off_10045CBD8;
  sub_1000A6FDC((uint64_t)v4, (uint64_t)&a1[1]);
  sub_10018C53C();
}

void sub_10018C344(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::domain_error a12)
{
}

void sub_10018C358(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::domain_error a12)
{
}

void sub_10018C36C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::domain_error a12)
{
}

void sub_10018C380(std::domain_error *this)
{
  this[1].__vftable = (std::domain_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::domain_error::~domain_error(this);
}

void sub_10018C40C(std::logic_error *a1, const std::logic_error *a2)
{
  uint64_t v2 = std::logic_error::logic_error(a1, a2);
  v2[1].__imp_.__imp_ = 0;
  v2[2].__vftable = 0;
  v2[2].__imp_.__imp_ = 0;
  LODWORD(v2[3].__vftable) = -1;
  v2->__vftable = (std::logic_error_vtbl *)off_10045CBB0;
  v2[1].__vftable = (std::logic_error_vtbl *)off_10045CBD8;
  sub_10018D55C();
}

void sub_10018C4D4(_Unwind_Exception *a1)
{
  *std::logic_error v3 = &off_100451DC0;
  if (*v2)
  {
    if ((*(unsigned int (**)(void))(*(void *)*v2 + 32))(*v2)) {
      *uint64_t v2 = 0;
    }
  }
  std::domain_error::~domain_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018C53C()
{
}

void sub_10018C658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10018C66C(void *a1)
{
}

void sub_10018C678(_Unwind_Exception *a1)
{
}

uint64_t sub_10018C68C(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_10018C734(std::domain_error *this)
{
  this[1].__vftable = (std::domain_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::domain_error::~domain_error(this);

  operator delete();
}

void sub_10018C7D4(std::domain_error *a1)
{
  a1->__vftable = (std::domain_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::domain_error::~domain_error(a1 - 1);
}

void sub_10018C85C(std::domain_error *a1)
{
  a1->__vftable = (std::domain_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::domain_error::~domain_error(a1 - 1);

  operator delete();
}

uint64_t sub_10018C8F8(uint64_t a1)
{
  *(void *)a1 = off_10045CC30;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }
  return a1;
}

void sub_10018C970(uint64_t a1)
{
  *(void *)a1 = off_10045CC30;
  if (*(unsigned char *)(a1 + 24))
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 32) + 16))(a1 + 32);
    *(unsigned char *)(a1 + 24) = 0;
  }

  operator delete();
}

uint64_t sub_10018CA08(uint64_t result)
{
  if (*(unsigned char *)(result + 24))
  {
    uint64_t v1 = result + 32;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(result + 32) + 16))(result + 32);
    *(unsigned char *)(v1 - 8) = 0;
  }
  return result;
}

uint64_t sub_10018CA5C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exceptio"
                     "n_wrapperISt12domain_errorEEEEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_s"
                                "td_exception_wrapperISt12domain_errorEEEEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt12domain_errorEEEEEE"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"N5boost6detail13sp_ms_deleterINS_10wrapexceptINS_16exception_detail39current_exception_std_exception_wrapperISt12domain_errorEEEEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

uint64_t sub_10018CACC()
{
  return 0;
}

uint64_t sub_10018CAD4(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_10018CADC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)a2);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4)
  {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
    uint64_t v4 = *(void *)(a1 + 32);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045CC90;
  *(void *)(a1 + 8) = off_10045CCC0;
  *(void *)(a1 + 24) = off_10045CCE8;
  uint64_t v6 = *(void *)(a2 + 24);
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 32))(v4);
  }
  *(void *)(a1 + 32) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 40) = v7;
  return a1;
}

void sub_10018CC78(_Unwind_Exception *a1)
{
  std::domain_error::~domain_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018CC8C(_Unwind_Exception *a1)
{
  sub_10018CCA0(v1);
  _Unwind_Resume(a1);
}

void sub_10018CCA0(std::domain_error *this)
{
  this[1].__vftable = (std::domain_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::domain_error::~domain_error(this);
}

void sub_10018CD2C()
{
}

void sub_10018CE78()
{
  std::domain_error::~domain_error(v0);
  operator delete();
}

void sub_10018CEA4(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10018CED8(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_10018D2BC((uint64_t)exception, a1);
}

void sub_10018CF20(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10018CF34(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::domain_error::~domain_error((std::domain_error *)(a1 + 8));
  return a1;
}

void sub_10018CFB8(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::domain_error::~domain_error((std::domain_error *)(a1 + 8));

  operator delete();
}

void sub_10018D05C(std::domain_error *this)
{
  this[1].__vftable = (std::domain_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::domain_error::~domain_error(this);
}

void sub_10018D0E8(std::domain_error *this)
{
  this[1].__vftable = (std::domain_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::domain_error::~domain_error(this);

  operator delete();
}

void sub_10018D190(std::domain_error *a1)
{
  a1->__vftable = (std::domain_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::domain_error::~domain_error(a1 - 1);
}

void sub_10018D218(std::domain_error *a1)
{
  a1->__vftable = (std::domain_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::domain_error::~domain_error(a1 - 1);

  operator delete();
}

uint64_t sub_10018D2BC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045CC90;
  *(void *)(a1 + 8) = off_10045CCC0;
  *(void *)(a1 + 24) = off_10045CCE8;
  return a1;
}

void sub_10018D3E4(_Unwind_Exception *a1)
{
  std::domain_error::~domain_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018D3F8(uint64_t a1, const std::logic_error *a2, uint64_t a3)
{
  long long v5 = std::logic_error::logic_error((std::logic_error *)a1, a2);
  v5[1].__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  uint64_t v6 = *(void *)(a3 + 8);
  *(void *)(a1 + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a3 + 16);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a3 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_10045CBB0;
  *(void *)(a1 + 16) = off_10045CBD8;
  sub_10018D55C();
}

void sub_10018D52C(_Unwind_Exception *a1)
{
  std::domain_error::~domain_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018D540(_Unwind_Exception *a1)
{
  sub_1001715E4(v2);
  std::domain_error::~domain_error(v1);
  _Unwind_Resume(a1);
}

void sub_10018D55C()
{
}

void sub_10018D7E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100178D68((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10018D7F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100178D68((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10018D814(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10018D8A4()
{
}

void sub_10018DB40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CD2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10018DB54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_1000CD2E0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10018DB70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10018DC00()
{
}

void sub_10018DE9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100156F18((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10018DEB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100156F18((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10018DECC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10018DF5C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10045CD60;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10018DF7C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10045CD60;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_10018DFD0(void (__cdecl ***a1)(std::ofstream *__hidden this))
{
  std::filebuf::~filebuf();
  std::ostream::~ostream();
  std::ios::~ios();

  operator delete();
}

void sub_10018E074(void *a1)
{
  uint64_t v1 = (void (__cdecl ***)(std::ofstream *__hidden))((char *)a1 + *(void *)(*a1 - 24));
  std::filebuf::~filebuf();
  std::ostream::~ostream();
  std::ios::~ios();

  operator delete();
}

void sub_10018E12C(void *a1)
{
  *a1 = off_10045CE38;
  a1[52] = off_10045CE60;
  std::filebuf::~filebuf();
  std::ostream::~ostream();
  std::ios::~ios();

  operator delete();
}

uint64_t sub_10018E1CC(void *a1)
{
  uint64_t v1 = (void *)((char *)a1 + *(void *)(*a1 - 24));
  *uint64_t v1 = off_10045CE38;
  v1[52] = off_10045CE60;
  std::filebuf::~filebuf();
  std::ostream::~ostream();

  return std::ios::~ios();
}

void sub_10018E268(void *a1)
{
  uint64_t v1 = (void *)((char *)a1 + *(void *)(*a1 - 24));
  *uint64_t v1 = off_10045CE38;
  v1[52] = off_10045CE60;
  std::filebuf::~filebuf();
  std::ostream::~ostream();
  std::ios::~ios();

  operator delete();
}

void sub_10018E31C()
{
}

void sub_10018E334(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_10018E390(exception, a1);
}

void sub_10018E37C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_10018E390(std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  return result;
}

void sub_10018E3C4()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10018E43C()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10018E4B4(int a1@<W8>)
{
}

void sub_10018E4C0(int a1, size_t __len)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  if (__len >= 0x17)
  {
    size_t v4 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v4 = __len | 7;
    }
    size_t v5 = v4 + 1;
    unint64_t v3 = operator new(v4 + 1);
    __b[1] = __len;
    unint64_t v7 = v5 | 0x8000000000000000;
    __b[0] = v3;
  }
  else
  {
    HIBYTE(v7) = __len;
    unint64_t v3 = __b;
    if (!__len)
    {
LABEL_10:
      *((unsigned char *)v3 + __len) = 0;
      sub_10015F2D0();
    }
  }
  memset(v3, 32, __len);
  goto LABEL_10;
}

void sub_10018E574(void *__p, uint64_t a2, int a3, __int16 a4, char a5, char a6, uint64_t a7, char a8, std::string *__pa, std::string::size_type a10, int a11, __int16 a12, char a13, unsigned __int8 a14, uint64_t a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if ((a14 & 0x80u) == 0) {
    int v24 = v23;
  }
  else {
    int v24 = __pa;
  }
  if ((a14 & 0x80u) == 0) {
    a10 = a14;
  }
  uint64_t v26 = std::string::append((std::string *)&a17, (const std::string::value_type *)v24, a10);
  long long v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
  *(void *)(v22 + 16) = *((void *)&v26->__r_.__value_.__l + 2);
  *(_OWORD *)uint64_t v22 = v27;
  v26->__r_.__value_.__l.__size_ = 0;
  v26->__r_.__value_.__r.__words[2] = 0;
  v26->__r_.__value_.__r.__words[0] = 0;
  if ((char)a14 < 0) {
    operator delete(__pa);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  std::current_exception();
  v28.__ptr_ = &a16;
  std::rethrow_exception(v28);
  __break(1u);
}

void sub_10018E5E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, std::exception_ptr a13, char a14, void *a15, long long a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  std::exception_ptr::~exception_ptr(&v35);
  uint64_t v26 = __cxa_begin_catch(exception_object);
  if (a2 == 2)
  {
    if (v27)
    {
      std::nested_exception::rethrow_nested(v27);
      JUMPOUT(0x10018E758);
    }
    __cxa_end_catch();
  }
  else
  {
    std::exception_ptr v28 = (char *)operator new(0x28uLL);
    strcpy(v28, "unrecognized nested exception type");
    v37.__r_.__value_.__r.__words[0] = (std::string::size_type)v28;
    *(_OWORD *)&v37.__r_.__value_.__r.__words[1] = xmmword_1003E7200;
    char v36 = 1;
    __cxa_end_catch();
    uint64_t v29 = std::string::insert(&v37, 0, "\n");
    long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
    int64_t v34 = v29->__r_.__value_.__r.__words[2];
    long long v33 = v30;
    v29->__r_.__value_.__l.__size_ = 0;
    v29->__r_.__value_.__r.__words[2] = 0;
    v29->__r_.__value_.__r.__words[0] = 0;
    if (v34 >= 0) {
      uint64_t v31 = (const std::string::value_type *)&v33;
    }
    else {
      uint64_t v31 = (const std::string::value_type *)v33;
    }
    if (v34 >= 0) {
      std::string::size_type v32 = HIBYTE(v34);
    }
    else {
      std::string::size_type v32 = *((void *)&v33 + 1);
    }
    std::string::append(v23, v31, v32);
    if (SHIBYTE(v34) < 0) {
      operator delete((void *)v33);
    }
    if (v36 && SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v37.__r_.__value_.__l.__data_);
    }
  }
}

void sub_10018E75C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a2)
  {
    __cxa_begin_catch(a1);
    sub_10018E4C0((int)&a9, v9 + 1);
  }
  _Unwind_Resume(a1);
}

void sub_10018E778()
{
}

void sub_10018E79C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  __cxa_end_catch();
  if (*(char *)(v23 + 23) < 0)
  {
    operator delete(*(void **)v23);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_10018E824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if ((a22 & 0x80000000) == 0) {
    JUMPOUT(0x10018E840);
  }
  operator delete(a17);
  _Unwind_Resume(a1);
}

void sub_10018E848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    JUMPOUT(0x10018E854);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10018E868(uint64_t a1)
{
  return a1;
}

void *sub_10018E894(void *a1, uint64_t a2)
{
  sub_100166ABC(a2);
  if ((v8 & 0x80u) == 0) {
    unint64_t v3 = __p;
  }
  else {
    unint64_t v3 = (void **)__p[0];
  }
  if ((v8 & 0x80u) == 0) {
    uint64_t v4 = v8;
  }
  else {
    uint64_t v4 = (uint64_t)__p[1];
  }
  uint64_t result = sub_10002986C(a1, (uint64_t)v3, v4);
  uint64_t v6 = result;
  if ((char)v8 < 0)
  {
    operator delete(__p[0]);
    return v6;
  }
  return result;
}

void sub_10018E918(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10018E934()
{
  std::terminate_handler v0 = std::set_terminate((std::terminate_handler)sub_10018E96C);
  uint64_t v1 = 0;
  atomic_compare_exchange_strong(qword_10047DC00, (unint64_t *)&v1, (unint64_t)v0);
}

void sub_10018E96C()
{
  unsigned __int8 v8 = 0;
  unint64_t v0 = atomic_load((unint64_t *)&unk_10047DC00);
  if (v0) {
    uint64_t v1 = (void (*)())v0;
  }
  else {
    uint64_t v1 = sub_1001902FC;
  }
  unsigned __int8 v8 = v1;
  std::current_exception();
  if (!v7.__ptr_)
  {
    if (qword_10047BED8 == -1)
    {
      uint64_t v2 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_8;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_10045CF10);
      uint64_t v2 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
      {
LABEL_8:
        v1();
        if (qword_10047BED8 == -1)
        {
          unint64_t v3 = qword_10047BEE0;
          if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
            goto LABEL_11;
          }
        }
        else
        {
          dispatch_once(&qword_10047BED8, &stru_10045CF10);
          unint64_t v3 = qword_10047BEE0;
          if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
LABEL_11:
          }
            abort();
        }
        *(_WORD *)size_t v5 = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Unexpected return from no-return handler", v5, 2u);
        goto LABEL_11;
      }
    }
    *(_WORD *)size_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "std::terminate() called but there's no exception", v5, 2u);
    goto LABEL_8;
  }
  std::exception_ptr::exception_ptr(&v6, &v7);
  v4.__ptr_ = &v6;
  std::rethrow_exception(v4);
  __break(1u);
}

void sub_10018ED2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
}

void sub_10018ED68()
{
}

void sub_10018ED74(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  JUMPOUT(0x10018ED58);
}

void sub_10018ED9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::exception_ptr a15)
{
}

void sub_10018EDB0()
{
  sub_1000CD96C((uint64_t)v4);
  sub_10002986C(v4, (uint64_t)"Generic exception that's not std::exception", 43);
  std::stringbuf::str();
  if (qword_10047BED8 != -1) {
    dispatch_once(&qword_10047BED8, &stru_10045CF10);
  }
  unint64_t v0 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
  {
    uint64_t v1 = &v3;
    if ((v3.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v1 = (std::string *)v3.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)buf = 136315138;
    std::exception_ptr v6 = v1;
    _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "%s", buf, 0xCu);
  }
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, &v3);
}

void sub_10018EED8(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  std::exception_ptr v7 = __cxa_begin_catch(a1);
  (*v2)(v7);
  __cxa_end_catch();
  if (*(void *)(v4 + 3800) == -1)
  {
    unsigned __int8 v8 = *(NSObject **)(v5 + 3808);
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      goto LABEL_10;
    }
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_10045CF10);
    unsigned __int8 v8 = *(NSObject **)(v5 + 3808);
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      goto LABEL_10;
    }
  }
  std::stringbuf::str();
  if (*(char *)(v6 - 105) >= 0) {
    uint64_t v9 = v6 - 128;
  }
  else {
    uint64_t v9 = *(void *)(v6 - 128);
  }
  *(_DWORD *)(v6 - 96) = 136315394;
  *(void *)(v3 + 36) = (unint64_t)"St27unsupported_operation_error" & 0x7FFFFFFFFFFFFFFFLL;
  *(_WORD *)(v6 - 84) = 2080;
  *(void *)(v3 + 46) = v9;
  _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "Unexpected return from terminator handling %s: %s", (uint8_t *)(v6 - 96), 0x16u);
  if (*(char *)(v6 - 105) < 0) {
    operator delete(*(void **)(v6 - 128));
  }
LABEL_10:
  abort();
}

void sub_10018EFE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void (__cdecl **a16)(std::stringbuf *__hidden this), uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  std::ios::~ios();
  _Unwind_Resume(a1);
}

void sub_10018F108(uint64_t a1, uint64_t a2, const char **a3)
{
  sub_1000CD96C((uint64_t)v10);
  sub_10002986C(v10, (uint64_t)"Generic exception ", 18);
  uint64_t v4 = *a3;
  size_t v5 = strlen(v4);
  sub_10002986C(v10, (uint64_t)v4, v5);
  std::stringbuf::str();
  if (qword_10047BED8 != -1) {
    dispatch_once(&qword_10047BED8, &stru_10045CF10);
  }
  uint64_t v6 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
  {
    std::exception_ptr v7 = &v9;
    if ((v9.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::exception_ptr v7 = (std::string *)v9.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)buf = 136315138;
    std::string v12 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s", buf, 0xCu);
  }
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, &v9);
}

void sub_10018F258(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  unsigned __int8 v8 = __cxa_begin_catch(exception_object);
  (*v3)(v8);
  __cxa_end_catch();
  if (*(void *)(v5 + 3800) == -1)
  {
    std::string v9 = *(NSObject **)(v6 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_10045CF10);
    std::string v9 = *(NSObject **)(v6 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
  }
  uint64_t v10 = *(void *)(v2 + 8);
  std::stringbuf::str();
  if (*(char *)(v7 - 121) >= 0) {
    uint64_t v11 = v7 - 144;
  }
  else {
    uint64_t v11 = *(void *)(v7 - 144);
  }
  *(_DWORD *)(v7 - 112) = 136315394;
  *(void *)(v4 + 36) = v10 & 0x7FFFFFFFFFFFFFFFLL;
  *(_WORD *)(v7 - 100) = 2080;
  *(void *)(v4 + 46) = v11;
  _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Unexpected return from terminator handling %s: %s", (uint8_t *)(v7 - 112), 0x16u);
  if (*(char *)(v7 - 121) < 0) {
    operator delete(*(void **)(v7 - 144));
  }
LABEL_9:
  abort();
}

void sub_10018F354(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void (__cdecl **a16)(std::stringbuf *__hidden this), uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  std::ios::~ios();
  _Unwind_Resume(a1);
}

void sub_10018F484(uint64_t a1, uint64_t a2, const char **a3)
{
  sub_1000CD96C((uint64_t)v10);
  sub_10002986C(v10, (uint64_t)"Unhandled thrift exception ", 27);
  uint64_t v4 = *a3;
  size_t v5 = strlen(v4);
  sub_10002986C(v10, (uint64_t)v4, v5);
  std::stringbuf::str();
  if (qword_10047BED8 != -1) {
    dispatch_once(&qword_10047BED8, &stru_10045CF10);
  }
  uint64_t v6 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
  {
    uint64_t v7 = &v9;
    if ((v9.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v7 = (std::string *)v9.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)buf = 136315138;
    std::string v12 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s", buf, 0xCu);
  }
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, &v9);
}

void sub_10018F5D4(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  unsigned __int8 v8 = __cxa_begin_catch(exception_object);
  (*v3)(v8);
  __cxa_end_catch();
  if (*(void *)(v5 + 3800) == -1)
  {
    std::string v9 = *(NSObject **)(v6 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_10045CF10);
    std::string v9 = *(NSObject **)(v6 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
  }
  uint64_t v10 = *(void *)(v2 + 8);
  std::stringbuf::str();
  if (*(char *)(v7 - 121) >= 0) {
    uint64_t v11 = v7 - 144;
  }
  else {
    uint64_t v11 = *(void *)(v7 - 144);
  }
  *(_DWORD *)(v7 - 112) = 136315394;
  *(void *)(v4 + 36) = v10 & 0x7FFFFFFFFFFFFFFFLL;
  *(_WORD *)(v7 - 100) = 2080;
  *(void *)(v4 + 46) = v11;
  _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Unexpected return from terminator handling %s: %s", (uint8_t *)(v7 - 112), 0x16u);
  if (*(char *)(v7 - 121) < 0) {
    operator delete(*(void **)(v7 - 144));
  }
LABEL_9:
  abort();
}

void sub_10018F6D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void (__cdecl **a16)(std::stringbuf *__hidden this), uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  std::ios::~ios();
  _Unwind_Resume(a1);
}

void sub_10018F800(uint64_t a1, uint64_t a2, const char **a3)
{
  sub_1000CD96C((uint64_t)v10);
  sub_10002986C(v10, (uint64_t)"Unhandled thrift transport exception ", 37);
  uint64_t v4 = *a3;
  size_t v5 = strlen(v4);
  sub_10002986C(v10, (uint64_t)v4, v5);
  sub_10002986C(v10, (uint64_t)" (type ", 7);
  std::ostream::operator<<();
  sub_10002986C(v10, (uint64_t)")", 1);
  std::stringbuf::str();
  if (qword_10047BED8 != -1) {
    dispatch_once(&qword_10047BED8, &stru_10045CF10);
  }
  uint64_t v6 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
  {
    uint64_t v7 = &v9;
    if ((v9.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v7 = (std::string *)v9.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)buf = 136315138;
    std::string v12 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s", buf, 0xCu);
  }
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, &v9);
}

void sub_10018F988(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  unsigned __int8 v8 = __cxa_begin_catch(exception_object);
  (*v3)(v8);
  __cxa_end_catch();
  if (*(void *)(v5 + 3800) == -1)
  {
    std::string v9 = *(NSObject **)(v6 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_10045CF10);
    std::string v9 = *(NSObject **)(v6 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
  }
  uint64_t v10 = *(void *)(v2 + 8);
  std::stringbuf::str();
  if (*(char *)(v7 - 121) >= 0) {
    uint64_t v11 = v7 - 144;
  }
  else {
    uint64_t v11 = *(void *)(v7 - 144);
  }
  *(_DWORD *)(v7 - 112) = 136315394;
  *(void *)(v4 + 36) = v10 & 0x7FFFFFFFFFFFFFFFLL;
  *(_WORD *)(v7 - 100) = 2080;
  *(void *)(v4 + 46) = v11;
  _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Unexpected return from terminator handling %s: %s", (uint8_t *)(v7 - 112), 0x16u);
  if (*(char *)(v7 - 121) < 0) {
    operator delete(*(void **)(v7 - 144));
  }
LABEL_9:
  abort();
}

void sub_10018FA84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void (__cdecl **a16)(std::stringbuf *__hidden this), uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  std::ios::~ios();
  _Unwind_Resume(a1);
}

void sub_10018FBB4(uint64_t a1, uint64_t a2, const char **a3)
{
  sub_1000CD96C((uint64_t)v10);
  sub_10002986C(v10, (uint64_t)"Unhandled thrift application exception ", 39);
  uint64_t v4 = *a3;
  size_t v5 = strlen(v4);
  sub_10002986C(v10, (uint64_t)v4, v5);
  sub_10002986C(v10, (uint64_t)" (type ", 7);
  std::ostream::operator<<();
  sub_10002986C(v10, (uint64_t)")", 1);
  std::stringbuf::str();
  if (qword_10047BED8 != -1) {
    dispatch_once(&qword_10047BED8, &stru_10045CF10);
  }
  uint64_t v6 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
  {
    uint64_t v7 = &v9;
    if ((v9.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v7 = (std::string *)v9.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)buf = 136315138;
    std::string v12 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "%s", buf, 0xCu);
  }
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, &v9);
}

void sub_10018FD3C(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  unsigned __int8 v8 = __cxa_begin_catch(exception_object);
  (*v3)(v8);
  __cxa_end_catch();
  if (*(void *)(v5 + 3800) == -1)
  {
    std::string v9 = *(NSObject **)(v6 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_10045CF10);
    std::string v9 = *(NSObject **)(v6 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
  }
  uint64_t v10 = *(void *)(v2 + 8);
  std::stringbuf::str();
  if (*(char *)(v7 - 121) >= 0) {
    uint64_t v11 = v7 - 144;
  }
  else {
    uint64_t v11 = *(void *)(v7 - 144);
  }
  *(_DWORD *)(v7 - 112) = 136315394;
  *(void *)(v4 + 36) = v10 & 0x7FFFFFFFFFFFFFFFLL;
  *(_WORD *)(v7 - 100) = 2080;
  *(void *)(v4 + 46) = v11;
  _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Unexpected return from terminator handling %s: %s", (uint8_t *)(v7 - 112), 0x16u);
  if (*(char *)(v7 - 121) < 0) {
    operator delete(*(void **)(v7 - 144));
  }
LABEL_9:
  abort();
}

void sub_10018FE38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void (__cdecl **a16)(std::stringbuf *__hidden this), uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  std::ios::~ios();
  _Unwind_Resume(a1);
}

void sub_10018FF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000CD96C((uint64_t)v11);
  sub_10002986C(v11, (uint64_t)"<=====diagnostic======\n", 23);
  int v4 = *(char *)(a3 + 23);
  if (v4 >= 0) {
    uint64_t v5 = a3;
  }
  else {
    uint64_t v5 = *(void *)a3;
  }
  if (v4 >= 0) {
    uint64_t v6 = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    uint64_t v6 = *(void *)(a3 + 8);
  }
  sub_10002986C(v11, v5, v6);
  sub_10002986C(v11, (uint64_t)"\n=====diagnostic=====>", 22);
  std::stringbuf::str();
  if (qword_10047BED8 != -1) {
    dispatch_once(&qword_10047BED8, &stru_10045CF10);
  }
  uint64_t v7 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
  {
    unsigned __int8 v8 = &v10;
    if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      unsigned __int8 v8 = (std::string *)v10.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)buf = 136315138;
    std::runtime_error v13 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_ERROR, "%s", buf, 0xCu);
  }
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, &v10);
}

void sub_1001900D0(_Unwind_Exception *exception_object, int a2)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  unsigned __int8 v8 = __cxa_begin_catch(exception_object);
  (*v3)(v8);
  __cxa_end_catch();
  if (*(void *)(v5 + 3800) == -1)
  {
    std::string v9 = *(NSObject **)(v6 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_10045CF10);
    std::string v9 = *(NSObject **)(v6 + 3808);
    if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      goto LABEL_9;
    }
  }
  uint64_t v10 = *(void *)(v2 + 8);
  std::stringbuf::str();
  if (*(char *)(v7 - 121) >= 0) {
    uint64_t v11 = v7 - 144;
  }
  else {
    uint64_t v11 = *(void *)(v7 - 144);
  }
  *(_DWORD *)(v7 - 112) = 136315394;
  *(void *)(v4 + 36) = v10 & 0x7FFFFFFFFFFFFFFFLL;
  *(_WORD *)(v7 - 100) = 2080;
  *(void *)(v4 + 46) = v11;
  _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Unexpected return from terminator handling %s: %s", (uint8_t *)(v7 - 112), 0x16u);
  if (*(char *)(v7 - 121) < 0) {
    operator delete(*(void **)(v7 - 144));
  }
LABEL_9:
  abort();
}

void sub_1001901CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void (__cdecl **a16)(std::stringbuf *__hidden this), uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  std::ios::~ios();
  _Unwind_Resume(a1);
}

void sub_1001902FC()
{
  if (qword_10047BED8 == -1)
  {
    unint64_t v0 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
      goto LABEL_4;
    }
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_10045CF10);
    unint64_t v0 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
      goto LABEL_4;
    }
  }
  LOWORD(__p) = 0;
  _os_log_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "Lost track of default stdlib terminate handler", (uint8_t *)&__p, 2u);
  if (qword_10047BED8 != -1)
  {
    dispatch_once(&qword_10047BED8, &stru_10045CF10);
    if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
LABEL_5:
    }
      sub_10015F2D0();
LABEL_6:
    abort();
  }
LABEL_4:
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
    goto LABEL_5;
  }
  goto LABEL_6;
}

void sub_100190460(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

void sub_100190490()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100190508()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

double sub_100190580(void *a1)
{
  return (double)(*a1 - qword_10047DC10) / 1000000000.0;
}

uint64_t sub_1001905A8(uint64_t a1)
{
  if (*(char *)(a1 + 103) < 0)
  {
    operator delete(*(void **)(a1 + 80));
    if ((*(char *)(a1 + 79) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(a1 + 55) & 0x80000000) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      operator delete(*(void **)(a1 + 32));
      if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
        return a1;
      }
      goto LABEL_9;
    }
  }
  else if ((*(char *)(a1 + 79) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 56));
  if (*(char *)(a1 + 55) < 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
    return a1;
  }
LABEL_9:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_100190634()
{
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x28uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003F1850;
  strcpy(v1.__r_.__value_.__l.__data_, "Year is out of valid range: 1400..9999");
  std::logic_error::logic_error(&v0, &v1);
  if (SHIBYTE(v1.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v1.__r_.__value_.__l.__data_);
  }
  v0.__vftable = (std::logic_error_vtbl *)&off_10045D018;
  sub_100190714(&v0);
}

void sub_1001906E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::out_of_range a10)
{
}

void sub_1001906F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100190714(const std::logic_error *a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100190774((uint64_t)exception, a1);
}

void sub_10019075C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100190774(uint64_t a1, const std::logic_error *a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), a2);
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = -1;
  *(void *)a1 = &off_10045CFA0;
  *(void *)(a1 + 8) = off_10045CFD0;
  *(void *)(a1 + 24) = off_10045CFF8;
  return a1;
}

uint64_t sub_100190820(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  return a1;
}

void sub_1001908A4()
{
}

void sub_1001909F0()
{
  std::out_of_range::~out_of_range(v0);
  operator delete();
}

void sub_100190A1C(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100190A50(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100190DE8((uint64_t)exception, a1);
}

void sub_100190A98(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100190AAC(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));

  operator delete();
}

void sub_100190B50(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(this);
}

void sub_100190BDC(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(this);

  operator delete();
}

void sub_100190C84(std::out_of_range *a1)
{
  a1->__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(a1 - 1);
}

void sub_100190D0C(std::out_of_range *a1)
{
  a1->__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(a1 - 1);

  operator delete();
}

void sub_100190DB0(std::out_of_range *a1)
{
  std::out_of_range::~out_of_range(a1);

  operator delete();
}

uint64_t sub_100190DE8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  *(void *)(a1 + 8) = &off_10045D018;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045CFA0;
  *(void *)(a1 + 8) = off_10045CFD0;
  *(void *)(a1 + 24) = off_10045CFF8;
  return a1;
}

void sub_100190F10(_Unwind_Exception *a1)
{
  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_100190F24()
{
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x28uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003E7200;
  strcpy(v1.__r_.__value_.__l.__data_, "Month number is out of range 1..12");
  std::logic_error::logic_error(&v0, &v1);
  if (SHIBYTE(v1.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v1.__r_.__value_.__l.__data_);
  }
  v0.__vftable = (std::logic_error_vtbl *)&off_10045D118;
  sub_100191004(&v0);
}

void sub_100190FD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::out_of_range a10)
{
}

void sub_100190FE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100191004(const std::logic_error *a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100191064((uint64_t)exception, a1);
}

void sub_10019104C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100191064(uint64_t a1, const std::logic_error *a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), a2);
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = -1;
  *(void *)a1 = &off_10045D0A0;
  *(void *)(a1 + 8) = off_10045D0D0;
  *(void *)(a1 + 24) = off_10045D0F8;
  return a1;
}

uint64_t sub_100191110(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  return a1;
}

void sub_100191194()
{
}

void sub_1001912E0()
{
  std::out_of_range::~out_of_range(v0);
  operator delete();
}

void sub_10019130C(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100191340(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_1001916D8((uint64_t)exception, a1);
}

void sub_100191388(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10019139C(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));

  operator delete();
}

void sub_100191440(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(this);
}

void sub_1001914CC(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(this);

  operator delete();
}

void sub_100191574(std::out_of_range *a1)
{
  a1->__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(a1 - 1);
}

void sub_1001915FC(std::out_of_range *a1)
{
  a1->__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(a1 - 1);

  operator delete();
}

void sub_1001916A0(std::out_of_range *a1)
{
  std::out_of_range::~out_of_range(a1);

  operator delete();
}

uint64_t sub_1001916D8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  *(void *)(a1 + 8) = &off_10045D118;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045D0A0;
  *(void *)(a1 + 8) = off_10045D0D0;
  *(void *)(a1 + 24) = off_10045D0F8;
  return a1;
}

void sub_100191800(_Unwind_Exception *a1)
{
  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_100191814()
{
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003EE0F0;
  strcpy(v1.__r_.__value_.__l.__data_, "Day of month value is out of range 1..31");
  std::logic_error::logic_error(&v0, &v1);
  if (SHIBYTE(v1.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v1.__r_.__value_.__l.__data_);
  }
  v0.__vftable = (std::logic_error_vtbl *)&off_10045D218;
  sub_1001918F4(&v0);
}

void sub_1001918C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::out_of_range a10)
{
}

void sub_1001918D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001918F4(const std::logic_error *a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100191954((uint64_t)exception, a1);
}

void sub_10019193C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100191954(uint64_t a1, const std::logic_error *a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), a2);
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = -1;
  *(void *)a1 = &off_10045D1A0;
  *(void *)(a1 + 8) = off_10045D1D0;
  *(void *)(a1 + 24) = off_10045D1F8;
  return a1;
}

uint64_t sub_100191A00(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  return a1;
}

void sub_100191A84()
{
}

void sub_100191BD0()
{
  std::out_of_range::~out_of_range(v0);
  operator delete();
}

void sub_100191BFC(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100191C30(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100191FC8((uint64_t)exception, a1);
}

void sub_100191C78(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100191C8C(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));

  operator delete();
}

void sub_100191D30(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(this);
}

void sub_100191DBC(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(this);

  operator delete();
}

void sub_100191E64(std::out_of_range *a1)
{
  a1->__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(a1 - 1);
}

void sub_100191EEC(std::out_of_range *a1)
{
  a1->__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(a1 - 1);

  operator delete();
}

void sub_100191F90(std::out_of_range *a1)
{
  std::out_of_range::~out_of_range(a1);

  operator delete();
}

uint64_t sub_100191FC8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  *(void *)(a1 + 8) = &off_10045D218;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045D1A0;
  *(void *)(a1 + 8) = off_10045D1D0;
  *(void *)(a1 + 24) = off_10045D1F8;
  return a1;
}

void sub_1001920F0(_Unwind_Exception *a1)
{
  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_100192104(std::locale::facet *this)
{
  uint64_t v1 = this;
  this->__vftable = (std::locale::facet_vtbl *)off_10045D240;
  if (SHIBYTE(this[22].__vftable) < 0)
  {
    operator delete(this[21].__vftable);
    this = v1;
  }
  else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
  {
    __break(0xC471u);
  }
  sub_100003CA4(this);
}

std::string *sub_100192184(uint64_t a1)
{
  return std::string::assign((std::string *)(a1 + 16), boost::date_time::time_facet<boost::posix_time::ptime,char,std::ostreambuf_iterator<char>>::iso_time_format_specifier);
}

std::string *sub_100192198(uint64_t a1)
{
  return std::string::assign((std::string *)(a1 + 16), boost::date_time::time_facet<boost::posix_time::ptime,char,std::ostreambuf_iterator<char>>::iso_time_format_extended_specifier);
}

void *sub_1001921AC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v6 = *(void *)(a1 + 216);
  if (0xAAAAAAAAAAAAAAABLL * ((*(void *)(a1 + 224) - v6) >> 3) > a5)
  {
    uint64_t v7 = (unsigned __int8 *)(v6 + 24 * a5);
    if ((char)v7[23] < 0)
    {
      uint64_t v7 = *(unsigned __int8 **)v7;
      uint64_t v8 = *(void *)(v6 + 24 * a5 + 8);
      if (!v8) {
        return a2;
      }
    }
    else
    {
      uint64_t v8 = v7[23];
      if (!v7[23]) {
        return a2;
      }
    }
    std::string v9 = a2;
    do
    {
      if (v9)
      {
        uint64_t v10 = *v7;
        uint64_t v11 = (unsigned char *)v9[6];
        if (v11 == (unsigned char *)v9[7])
        {
          if ((*(unsigned int (**)(void *, uint64_t))(*v9 + 104))(v9, v10) == -1) {
            std::string v9 = 0;
          }
        }
        else
        {
          v9[6] = v11 + 1;
          *uint64_t v11 = v10;
        }
      }
      ++v7;
      --v8;
    }
    while (v8);
  }
  return a2;
}

void sub_10019228C(std::locale::facet *a1)
{
  sub_100003CA4(a1);

  operator delete();
}

std::string *sub_1001922C4(uint64_t a1)
{
  return std::string::assign((std::string *)(a1 + 16), "%Y%m%d");
}

std::string *sub_1001922D4(uint64_t a1)
{
  return std::string::assign((std::string *)(a1 + 16), "%Y-%m-%d");
}

void sub_1001922E4(std::string *a1, uint64_t *a2, char *a3, char *a4, std::string *a5, std::string *a6, char *a7, char *a8)
{
  uint64_t v8 = a6;
  long long v44 = 0u;
  long long v45 = 0u;
  *(_OWORD *)std::string __p = 0u;
  std::string::size_type size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) == 0) {
    uint64_t v11 = a1;
  }
  else {
    uint64_t v11 = (std::string *)a1->__r_.__value_.__r.__words[0];
  }
  if (a5 == (unsigned char *)a6)
  {
    if ((size & 0x80u) != 0) {
      std::string::size_type size = a1->__r_.__value_.__l.__size_;
    }
    uint64_t v19 = v11;
    uint64_t v18 = v11;
  }
  else
  {
    uint64_t v14 = (std::string *)a5;
    uint64_t v18 = v11;
    uint64_t v19 = v11;
    while (1)
    {
      uint64_t v18 = (std::string *)sub_100192658((int)&v46, (int64x2_t *)__p, (int)a1, v18, v19, v14);
      uint64_t v20 = (char *)__p[1] + 8 * (((void)v45 + *((void *)&v45 + 1)) >> 12);
      if ((void *)v44 == __p[1]) {
        uint64_t v21 = 0;
      }
      else {
        uint64_t v21 = *(void *)v20 + (((_WORD)v45 + WORD4(v45)) & 0xFFF);
      }
      sub_10019312C((int64x2_t *)__p, v20, v21, a7, a8, a8 - a7);
      std::string::size_type size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
      if ((size & 0x80u) == 0) {
        uint64_t v11 = a1;
      }
      else {
        uint64_t v11 = (std::string *)a1->__r_.__value_.__r.__words[0];
      }
      if ((size & 0x80u) != 0) {
        std::string::size_type size = a1->__r_.__value_.__l.__size_;
      }
      uint64_t v22 = (char *)v11 + size;
      if (v8 == (std::string *)((char *)v11 + size)) {
        break;
      }
      uint64_t v23 = *a2;
      uint64_t v24 = a2[1];
      if (*a2 == v24) {
        break;
      }
      uint64_t v14 = v8;
      while (1)
      {
        uint64_t v25 = 0;
        do
        {
          if (v14->__r_.__value_.__s.__data_[v25] != *(unsigned __int8 *)(v23 + v25)) {
            break;
          }
          if ((char *)v14 + ++v25 == v22) {
            break;
          }
        }
        while (v25 + v23 != v24);
        uint64_t v26 = v23 + v25;
        long long v27 = (std::string *)((char *)v14 + v25);
        if (v26 == v24) {
          break;
        }
        uint64_t v14 = (std::string *)((char *)v14 + 1);
        if (v14 == (std::string *)v22) {
          goto LABEL_27;
        }
      }
      uint64_t v19 = v8;
      uint64_t v8 = v27;
      if (v14 == v27) {
        goto LABEL_31;
      }
      a8 = a4;
      a7 = a3;
    }
LABEL_27:
    uint64_t v19 = v8;
  }
LABEL_31:
  std::exception_ptr v28 = sub_100192658((int)&v46, (int64x2_t *)__p, (int)a1, v18, v19, (unsigned char *)v11 + size);
  std::string::size_type v29 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v30 = (std::string::size_type)a1;
  }
  else {
    std::string::size_type v30 = a1->__r_.__value_.__r.__words[0];
  }
  if ((v29 & 0x80u) != 0) {
    std::string::size_type v29 = a1->__r_.__value_.__l.__size_;
  }
  uint64_t v31 = v30 + v29;
  if (!*((void *)&v45 + 1))
  {
    std::string::erase(a1, (std::string::size_type)&v28[-v30], v31 - (void)v28);
    goto LABEL_44;
  }
  std::string::size_type v32 = (char *)__p[1] + 8 * ((unint64_t)v45 >> 12);
  if ((void *)v44 == __p[1])
  {
    long long v33 = 0;
    std::exception_ptr v35 = 0;
    int64_t v34 = (char *)__p[1] + 8 * (((void)v45 + *((void *)&v45 + 1)) >> 12);
    goto LABEL_42;
  }
  long long v33 = (std::string::value_type *)(*(void *)v32 + (v45 & 0xFFF));
  int64_t v34 = (char *)__p[1] + 8 * (((void)v45 + *((void *)&v45 + 1)) >> 12);
  std::exception_ptr v35 = (std::string::value_type *)(*(void *)v34 + ((v45 + *((void *)&v45 + 1)) & 0xFFF));
  if (v35 == v33)
  {
LABEL_42:
    std::string::size_type v36 = 0;
    goto LABEL_43;
  }
  std::string::size_type v36 = &v35[512 * (v34 - v32)] - &v33[*(void *)v34] + *(void *)v32;
LABEL_43:
  sub_100194C80(a1, v31, v32, v33, (uint64_t)v34, v35, v36);
LABEL_44:
  std::string v37 = (void **)__p[1];
  int64_t v38 = (void **)v44;
  *((void *)&v45 + 1) = 0;
  unint64_t v39 = v44 - (unint64_t)__p[1];
  if ((unint64_t)v44 - (unint64_t)__p[1] >= 0x11)
  {
    do
    {
      operator delete(*v37);
      int64_t v38 = (void **)v44;
      std::string v37 = (void **)((char *)__p[1] + 8);
      __p[1] = v37;
      unint64_t v39 = v44 - (void)v37;
    }
    while ((void)v44 - (void)v37 > 0x10uLL);
  }
  unint64_t v40 = v39 >> 3;
  if (v40 == 1)
  {
    uint64_t v41 = 2048;
    goto LABEL_50;
  }
  if (v40 == 2)
  {
    uint64_t v41 = 4096;
LABEL_50:
    *(void *)&long long v45 = v41;
  }
  if (v37 != v38)
  {
    do
    {
      int v42 = *v37++;
      operator delete(v42);
    }
    while (v37 != v38);
    if ((void *)v44 != __p[1]) {
      *(void *)&long long v44 = v44 + (((unint64_t)__p[1] - v44 + 7) & 0xFFFFFFFFFFFFFFF8);
    }
  }
  if (__p[0]) {
    operator delete(__p[0]);
  }
}

void sub_100192608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10019261C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100192630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100192644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

unsigned char *sub_100192658(int a1, int64x2_t *a2, int a3, unsigned char *__dst, unsigned char *__src, unsigned char *a6)
{
  uint64_t v8 = __dst;
  uint64_t v10 = a2[2].i64[1];
  if (v10) {
    BOOL v11 = __dst == __src;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    uint64_t v19 = (void **)a2->i64[1];
    unint64_t v20 = a2[2].u64[0];
    do
    {
      unsigned char *v8 = (*(unsigned char **)((char *)v19 + ((v20 >> 9) & 0x7FFFFFFFFFFFF8)))[v20 & 0xFFF];
      uint64_t v19 = (void **)a2->i64[1];
      uint64_t v10 = a2[2].i64[1] - 1;
      unint64_t v20 = a2[2].i64[0] + 1;
      a2[2].i64[0] = v20;
      a2[2].i64[1] = v10;
      if (v20 >= 0x2000)
      {
        operator delete(*v19);
        uint64_t v19 = (void **)(a2->i64[1] + 8);
        a2->i64[1] = (uint64_t)v19;
        uint64_t v10 = a2[2].i64[1];
        unint64_t v20 = a2[2].i64[0] - 4096;
        a2[2].i64[0] = v20;
      }
      ++v8;
      if (v10) {
        BOOL v21 = v8 == __src;
      }
      else {
        BOOL v21 = 1;
      }
    }
    while (!v21);
  }
  if (v10)
  {
    if (v8 != a6)
    {
      std::string v12 = (void **)a2->i64[1];
      uint64_t v13 = a2[2].i64[0];
      do
      {
        uint64_t v14 = (void **)a2[1].i64[0];
        if (v14 == v12) {
          uint64_t v15 = 0;
        }
        else {
          uint64_t v15 = (((char *)v14 - (char *)v12) << 9) - 1;
        }
        unint64_t v16 = a2[2].i64[1] + v13;
        if (v15 == v16)
        {
          sub_100192830((uint64_t)a2);
          std::string v12 = (void **)a2->i64[1];
          unint64_t v16 = a2[2].i64[1] + a2[2].i64[0];
        }
        (*(unsigned char **)((char *)v12 + ((v16 >> 9) & 0x7FFFFFFFFFFFF8)))[v16 & 0xFFF] = *v8;
        unint64_t v17 = a2[2].u64[0];
        ++a2[2].i64[1];
        unsigned char *v8 = *(unsigned char *)(*(void *)(a2->i64[1] + ((v17 >> 9) & 0x7FFFFFFFFFFFF8)) + (v17 & 0xFFF));
        std::string v12 = (void **)a2->i64[1];
        int64x2_t v18 = vaddq_s64(a2[2], (int64x2_t)xmmword_1003F1860);
        a2[2] = v18;
        uint64_t v13 = v18.i64[0];
        if (v18.i64[0] >= 0x2000uLL)
        {
          operator delete(*v12);
          std::string v12 = (void **)(a2->i64[1] + 8);
          a2->i64[1] = (uint64_t)v12;
          uint64_t v13 = a2[2].i64[0] - 4096;
          a2[2].i64[0] = v13;
        }
        ++v8;
      }
      while (v8 != a6);
    }
  }
  else if (v8 != __src)
  {
    size_t v22 = a6 - __src;
    if (v22) {
      memmove(v8, __src, v22);
    }
    return &v8[v22];
  }
  return a6;
}

void sub_100192830(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 32);
  BOOL v3 = v2 >= 0x1000;
  unint64_t v4 = v2 - 4096;
  if (v3)
  {
    *(void *)(a1 + 32) = v4;
    uint64_t v6 = *(void **)(a1 + 8);
    long long v5 = *(char **)(a1 + 16);
    uint64_t v7 = (char *)(v6 + 1);
    uint64_t v8 = *v6;
    *(void *)(a1 + 8) = v6 + 1;
    if (v5 != *(char **)(a1 + 24))
    {
LABEL_80:
      *(void *)long long v5 = v8;
      *(void *)(a1 + 16) += 8;
      return;
    }
    std::string v9 = *(char **)a1;
    uint64_t v10 = (uint64_t)&v7[-*(void *)a1];
    if ((unint64_t)v7 <= *(void *)a1)
    {
      unint64_t v31 = (v5 - v9) >> 2;
      if (v5 == v9) {
        unint64_t v31 = 1;
      }
      if (!(v31 >> 61))
      {
        unint64_t v32 = v31 >> 2;
        uint64_t v33 = 8 * v31;
        int64_t v34 = (char *)operator new(8 * v31);
        std::exception_ptr v35 = &v34[8 * v32];
        std::string::size_type v36 = &v34[v33];
        int64_t v38 = v5 - v7;
        BOOL v37 = v5 == v7;
        long long v5 = v35;
        if (!v37)
        {
          long long v5 = &v35[v38 & 0xFFFFFFFFFFFFFFF8];
          unint64_t v39 = v38 - 8;
          if ((unint64_t)(v38 - 8) >= 0x38)
          {
            int v74 = &v34[8 * v32];
            unint64_t v40 = v74;
            if ((unint64_t)(v74 - v7) >= 0x20)
            {
              uint64_t v75 = (v39 >> 3) + 1;
              uint64_t v76 = 8 * (v75 & 0x3FFFFFFFFFFFFFFCLL);
              unint64_t v40 = &v35[v76];
              v7 += v76;
              int v77 = (long long *)(v6 + 3);
              uint64_t v78 = v74 + 16;
              uint64_t v79 = v75 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                long long v80 = *v77;
                *(v78 - 1) = *(v77 - 1);
                *uint64_t v78 = v80;
                v77 += 2;
                v78 += 2;
                v79 -= 4;
              }
              while (v79);
              if (v75 == (v75 & 0x3FFFFFFFFFFFFFFCLL)) {
                goto LABEL_78;
              }
            }
          }
          else
          {
            unint64_t v40 = &v34[8 * v32];
          }
          do
          {
            uint64_t v81 = *(void *)v7;
            v7 += 8;
            *(void *)unint64_t v40 = v81;
            v40 += 8;
          }
          while (v40 != v5);
        }
        goto LABEL_78;
      }
LABEL_89:
      sub_1000A6A10();
    }
LABEL_5:
    uint64_t v11 = v10 >> 3;
    if (v11 >= -1) {
      uint64_t v12 = v11 + 1;
    }
    else {
      uint64_t v12 = v11 + 2;
    }
    uint64_t v13 = v12 >> 1;
    uint64_t v14 = -v13;
    uint64_t v15 = &v7[-8 * v13];
    int64_t v16 = v5 - v7;
    if (v5 != v7)
    {
      memmove(&v7[-8 * v13], v7, v5 - v7);
      uint64_t v7 = *(char **)(a1 + 8);
    }
    long long v5 = &v15[v16];
    *(void *)(a1 + 8) = &v7[8 * v14];
    *(void *)(a1 + 16) = &v15[v16];
    goto LABEL_80;
  }
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v19 = *(void *)(a1 + 8);
  uint64_t v20 = v18 - v19;
  uint64_t v21 = (v18 - v19) >> 3;
  uint64_t v22 = v17 - *(void *)a1;
  if (v21 < (unint64_t)(v22 >> 3))
  {
    if (v17 != v18)
    {
      int v91 = operator new(0x1000uLL);
      sub_100192E00((char **)a1, &v91);
      return;
    }
    int v91 = operator new(0x1000uLL);
    sub_100192F90((void **)a1, &v91);
    uint64_t v41 = *(void **)(a1 + 8);
    long long v5 = *(char **)(a1 + 16);
    uint64_t v7 = (char *)(v41 + 1);
    uint64_t v8 = *v41;
    *(void *)(a1 + 8) = v41 + 1;
    if (v5 != *(char **)(a1 + 24)) {
      goto LABEL_80;
    }
    std::string v9 = *(char **)a1;
    uint64_t v10 = (uint64_t)&v7[-*(void *)a1];
    if ((unint64_t)v7 <= *(void *)a1)
    {
      unint64_t v42 = (v5 - v9) >> 2;
      if (v5 == v9) {
        unint64_t v42 = 1;
      }
      if (!(v42 >> 61))
      {
        unint64_t v43 = v42 >> 2;
        uint64_t v44 = 8 * v42;
        int64_t v34 = (char *)operator new(8 * v42);
        std::exception_ptr v35 = &v34[8 * v43];
        std::string::size_type v36 = &v34[v44];
        int64_t v45 = v5 - v7;
        BOOL v37 = v5 == v7;
        long long v5 = v35;
        if (!v37)
        {
          long long v5 = &v35[v45 & 0xFFFFFFFFFFFFFFF8];
          unint64_t v46 = v45 - 8;
          if ((unint64_t)(v45 - 8) >= 0x38)
          {
            uint64_t v82 = &v34[8 * v43];
            int v47 = v82;
            if ((unint64_t)(v82 - v7) >= 0x20)
            {
              uint64_t v83 = (v46 >> 3) + 1;
              uint64_t v84 = 8 * (v83 & 0x3FFFFFFFFFFFFFFCLL);
              int v47 = &v35[v84];
              v7 += v84;
              int v85 = (long long *)(v41 + 3);
              uint64_t v86 = v82 + 16;
              uint64_t v87 = v83 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                long long v88 = *v85;
                *(v86 - 1) = *(v85 - 1);
                *uint64_t v86 = v88;
                v85 += 2;
                v86 += 2;
                v87 -= 4;
              }
              while (v87);
              if (v83 == (v83 & 0x3FFFFFFFFFFFFFFCLL)) {
                goto LABEL_78;
              }
            }
          }
          else
          {
            int v47 = &v34[8 * v43];
          }
          do
          {
            uint64_t v89 = *(void *)v7;
            v7 += 8;
            *(void *)int v47 = v89;
            v47 += 8;
          }
          while (v47 != v5);
        }
LABEL_78:
        *(void *)a1 = v34;
        *(void *)(a1 + 8) = v35;
        *(void *)(a1 + 16) = v5;
        *(void *)(a1 + 24) = v36;
        if (v9)
        {
          operator delete(v9);
          long long v5 = *(char **)(a1 + 16);
        }
        goto LABEL_80;
      }
      goto LABEL_89;
    }
    goto LABEL_5;
  }
  uint64_t v23 = v22 >> 2;
  if (v17 == *(void *)a1) {
    unint64_t v24 = 1;
  }
  else {
    unint64_t v24 = v23;
  }
  if (v24 >> 61) {
    goto LABEL_89;
  }
  uint64_t v25 = (char *)operator new(8 * v24);
  uint64_t v26 = operator new(0x1000uLL);
  long long v27 = &v25[8 * v21];
  std::exception_ptr v28 = &v25[8 * v24];
  if (v21 == v24)
  {
    BOOL v90 = v26;
    if (v20 < 1)
    {
      if (v18 == v19) {
        unint64_t v48 = 1;
      }
      else {
        unint64_t v48 = v20 >> 2;
      }
      if (v48 >> 61) {
        sub_1000A6A10();
      }
      uint64_t v49 = (char *)operator new(8 * v48);
      long long v27 = &v49[8 * (v48 >> 2)];
      std::exception_ptr v28 = &v49[8 * v48];
      operator delete(v25);
      uint64_t v50 = *(void *)(a1 + 8);
      uint64_t v18 = *(void *)(a1 + 16);
      uint64_t v25 = v49;
      *(void *)long long v27 = v90;
      std::string::size_type v29 = v27 + 8;
      if (v18 == v50) {
        goto LABEL_45;
      }
    }
    else
    {
      unint64_t v30 = v21 + 2;
      if (v21 >= -1) {
        unint64_t v30 = v21 + 1;
      }
      v27 -= 8 * (v30 >> 1);
      *(void *)long long v27 = v26;
      std::string::size_type v29 = v27 + 8;
      if (v18 == v19) {
        goto LABEL_45;
      }
    }
    do
    {
LABEL_52:
      if (v27 == v25)
      {
        if (v29 >= v28)
        {
          if (v28 == v27) {
            unint64_t v59 = 1;
          }
          else {
            unint64_t v59 = (v28 - v27) >> 2;
          }
          if (v59 >> 61) {
            sub_1000A6A10();
          }
          uint64_t v60 = (char *)operator new(8 * v59);
          uint64_t v25 = v60;
          unint64_t v61 = (v59 + 3) >> 2;
          int v53 = &v60[8 * v61];
          int64_t v62 = v29 - v27;
          BOOL v37 = v29 == v27;
          std::string::size_type v29 = v53;
          if (!v37)
          {
            std::string::size_type v29 = &v53[v62 & 0xFFFFFFFFFFFFFFF8];
            unint64_t v63 = v62 - 8;
            int v64 = &v60[8 * v61];
            int v65 = v27;
            if (v63 < 0x38) {
              goto LABEL_93;
            }
            uint64_t v66 = 8 * v61;
            int v64 = &v60[8 * v61];
            int v65 = v27;
            if ((unint64_t)(v64 - v27) < 0x20) {
              goto LABEL_93;
            }
            uint64_t v67 = (v63 >> 3) + 1;
            uint64_t v68 = 8 * (v67 & 0x3FFFFFFFFFFFFFFCLL);
            int v64 = &v53[v68];
            int v65 = &v27[v68];
            unsigned int v69 = (long long *)(v27 + 16);
            uint64_t v70 = &v60[v66 + 16];
            uint64_t v71 = v67 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v72 = *v69;
              *((_OWORD *)v70 - 1) = *(v69 - 1);
              *(_OWORD *)uint64_t v70 = v72;
              v69 += 2;
              v70 += 32;
              v71 -= 4;
            }
            while (v71);
            if (v67 != (v67 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_93:
              do
              {
                uint64_t v73 = *(void *)v65;
                v65 += 8;
                *(void *)int v64 = v73;
                v64 += 8;
              }
              while (v64 != v29);
            }
          }
          std::exception_ptr v28 = &v60[8 * v59];
          operator delete(v27);
        }
        else
        {
          uint64_t v55 = (v28 - v29) >> 3;
          if (v55 >= -1) {
            unint64_t v56 = v55 + 1;
          }
          else {
            unint64_t v56 = v55 + 2;
          }
          uint64_t v57 = &v29[8 * (v56 >> 1)];
          int v53 = &v57[-(v29 - v27)];
          size_t v58 = v29 - v27;
          BOOL v37 = v29 == v27;
          std::string::size_type v29 = v57;
          if (!v37) {
            memmove(v53, v27, v58);
          }
          uint64_t v25 = v27;
        }
      }
      else
      {
        int v53 = v27;
      }
      uint64_t v54 = *(void *)(v18 - 8);
      v18 -= 8;
      *((void *)v53 - 1) = v54;
      uint64_t v51 = v53 - 8;
      long long v27 = v51;
    }
    while (v18 != *(void *)(a1 + 8));
    goto LABEL_46;
  }
  *(void *)long long v27 = v26;
  std::string::size_type v29 = v27 + 8;
  if (v18 != v19) {
    goto LABEL_52;
  }
LABEL_45:
  uint64_t v51 = v27;
LABEL_46:
  int v52 = *(char **)a1;
  *(void *)a1 = v25;
  *(void *)(a1 + 8) = v51;
  *(void *)(a1 + 16) = v29;
  *(void *)(a1 + 24) = v28;
  if (v52)
  {
    operator delete(v52);
  }
}

void sub_100192DA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
  operator delete(__p);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void sub_100192DBC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_100192DD0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_100192DE8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_100192E00(char **a1, void *a2)
{
  unint64_t v4 = a1[2];
  if (v4 != a1[3]) {
    goto LABEL_22;
  }
  long long v5 = *a1;
  uint64_t v6 = a1[1];
  if (v6 > *a1)
  {
    uint64_t v7 = (v6 - *a1) >> 3;
    if (v7 >= -1) {
      uint64_t v8 = v7 + 1;
    }
    else {
      uint64_t v8 = v7 + 2;
    }
    uint64_t v9 = v8 >> 1;
    uint64_t v10 = -v9;
    uint64_t v11 = &v6[-8 * v9];
    int64_t v12 = v4 - v6;
    if (v4 != v6)
    {
      memmove(&v6[-8 * v9], a1[1], v4 - v6);
      unint64_t v4 = a1[1];
    }
    uint64_t v13 = &v4[8 * v10];
    unint64_t v4 = &v11[v12];
    a1[1] = v13;
    a1[2] = &v11[v12];
    goto LABEL_22;
  }
  unint64_t v14 = (v4 - v5) >> 2;
  if (v4 == v5) {
    unint64_t v14 = 1;
  }
  if (v14 >> 61) {
    sub_1000A6A10();
  }
  unint64_t v15 = v14 >> 2;
  uint64_t v16 = 8 * v14;
  uint64_t v17 = (char *)operator new(8 * v14);
  uint64_t v18 = &v17[8 * v15];
  int64_t v20 = v4 - v6;
  BOOL v19 = v4 == v6;
  unint64_t v4 = v18;
  if (!v19)
  {
    unint64_t v4 = &v18[v20 & 0xFFFFFFFFFFFFFFF8];
    unint64_t v21 = v20 - 8;
    if ((unint64_t)(v20 - 8) < 0x38)
    {
      uint64_t v22 = &v17[8 * v15];
      do
      {
LABEL_19:
        uint64_t v31 = *(void *)v6;
        v6 += 8;
        *(void *)uint64_t v22 = v31;
        v22 += 8;
      }
      while (v22 != v4);
      goto LABEL_20;
    }
    uint64_t v23 = &v17[8 * v15];
    uint64_t v22 = v23;
    if ((unint64_t)(v23 - v6) < 0x20) {
      goto LABEL_19;
    }
    uint64_t v24 = (v21 >> 3) + 1;
    uint64_t v25 = 8 * (v24 & 0x3FFFFFFFFFFFFFFCLL);
    uint64_t v22 = &v18[v25];
    uint64_t v26 = &v6[v25];
    long long v27 = (long long *)(v6 + 16);
    std::exception_ptr v28 = v23 + 16;
    uint64_t v29 = v24 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      long long v30 = *v27;
      *(v28 - 1) = *(v27 - 1);
      *std::exception_ptr v28 = v30;
      v27 += 2;
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    uint64_t v6 = v26;
    if (v24 != (v24 & 0x3FFFFFFFFFFFFFFCLL)) {
      goto LABEL_19;
    }
  }
LABEL_20:
  *a1 = v17;
  a1[1] = v18;
  a1[2] = v4;
  a1[3] = &v17[v16];
  if (v5)
  {
    operator delete(v5);
    unint64_t v4 = a1[2];
  }
LABEL_22:
  *(void *)unint64_t v4 = *a2;
  a1[2] += 8;
}

void sub_100192F90(void **a1, void *a2)
{
  unint64_t v4 = (char *)a1[1];
  if (v4 == *a1)
  {
    uint64_t v7 = a1[2];
    uint64_t v6 = a1[3];
    if (v7 >= v6)
    {
      uint64_t v13 = v6 - v4;
      BOOL v12 = v13 == 0;
      unint64_t v14 = v13 >> 2;
      if (v12) {
        unint64_t v14 = 1;
      }
      if (v14 >> 61) {
        sub_1000A6A10();
      }
      unint64_t v15 = (v14 + 3) >> 2;
      uint64_t v16 = 8 * v14;
      uint64_t v17 = (char *)operator new(8 * v14);
      long long v5 = &v17[8 * v15];
      uint64_t v18 = v5;
      uint64_t v19 = v7 - v4;
      if (v7 != v4)
      {
        uint64_t v18 = &v5[v19 & 0xFFFFFFFFFFFFFFF8];
        unint64_t v20 = v19 - 8;
        unint64_t v21 = &v17[8 * v15];
        uint64_t v22 = v4;
        if (v20 < 0x38) {
          goto LABEL_27;
        }
        uint64_t v23 = &v17[8 * v15];
        unint64_t v21 = v23;
        uint64_t v22 = v4;
        if ((unint64_t)(v23 - v4) < 0x20) {
          goto LABEL_27;
        }
        uint64_t v24 = (v20 >> 3) + 1;
        uint64_t v25 = 8 * (v24 & 0x3FFFFFFFFFFFFFFCLL);
        unint64_t v21 = &v5[v25];
        uint64_t v22 = &v4[v25];
        uint64_t v26 = (long long *)(v4 + 16);
        long long v27 = v23 + 16;
        uint64_t v28 = v24 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          long long v29 = *v26;
          *(v27 - 1) = *(v26 - 1);
          *long long v27 = v29;
          v26 += 2;
          v27 += 2;
          v28 -= 4;
        }
        while (v28);
        if (v24 != (v24 & 0x3FFFFFFFFFFFFFFCLL))
        {
LABEL_27:
          do
          {
            uint64_t v30 = *(void *)v22;
            v22 += 8;
            *(void *)unint64_t v21 = v30;
            v21 += 8;
          }
          while (v21 != v18);
        }
      }
      *a1 = v17;
      a1[1] = v5;
      a1[2] = v18;
      a1[3] = &v17[v16];
      if (v4)
      {
        operator delete(v4);
        long long v5 = (char *)a1[1];
      }
    }
    else
    {
      uint64_t v8 = (v6 - v7) >> 3;
      if (v8 >= -1) {
        uint64_t v9 = v8 + 1;
      }
      else {
        uint64_t v9 = v8 + 2;
      }
      uint64_t v10 = v9 >> 1;
      uint64_t v11 = &v7[8 * (v9 >> 1)];
      long long v5 = &v11[-(v7 - v4)];
      if (v7 != v4)
      {
        memmove(&v11[-(v7 - v4)], v4, v7 - v4);
        unint64_t v4 = (char *)a1[2];
      }
      a1[1] = v5;
      a1[2] = &v4[8 * v10];
    }
  }
  else
  {
    long long v5 = (char *)a1[1];
  }
  *((void *)v5 - 1) = *a2;
  a1[1] = (char *)a1[1] - 8;
}

void *sub_10019312C(int64x2_t *a1, char *a2, uint64_t a3, char *__src, char *a5, unint64_t a6)
{
  unint64_t v6 = a6;
  unint64_t v10 = a1[2].u64[0];
  unint64_t v11 = v10 >> 12;
  uint64_t v12 = a1->i64[1];
  uint64_t v13 = a1[1].i64[0];
  unint64_t v14 = (char *)(v12 + 8 * (v10 >> 12));
  if (v13 == v12)
  {
    uint64_t v15 = 0;
    if (a3)
    {
LABEL_3:
      unint64_t v16 = a3 + ((a2 - v14) << 9) - (v15 + *(void *)a2) + *(void *)v14;
      uint64_t v17 = a1[2].i64[1];
      if (v16 < v17 - v16) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v15 = *(void *)v14 + (a1[2].i64[0] & 0xFFF);
    if (a3 != v15) {
      goto LABEL_3;
    }
  }
  unint64_t v16 = 0;
  uint64_t v17 = a1[2].i64[1];
  if (v17)
  {
LABEL_4:
    if (a6 > v10)
    {
      sub_10019375C((uint64_t)a1, a6 - v10);
      unint64_t v10 = a1[2].u64[0];
      uint64_t v12 = a1->i64[1];
      uint64_t v13 = a1[1].i64[0];
      unint64_t v11 = v10 >> 12;
    }
    uint64_t v18 = (const void **)(v12 + 8 * v11);
    if (v13 == v12)
    {
      uint64_t v19 = 0;
      unint64_t v20 = v6 - v16;
      if (v6 > v16)
      {
LABEL_8:
        unint64_t v21 = &__src[v20];
        if (v16 >= v6 >> 1) {
          uint64_t v22 = v21;
        }
        else {
          uint64_t v22 = &a5[-v16];
        }
        if (v22 == __src)
        {
          uint64_t v25 = v19;
          uint64_t v24 = v18;
          uint64_t v22 = __src;
        }
        else
        {
          uint64_t v23 = v22;
          uint64_t v24 = v18;
          uint64_t v25 = v19;
          do
          {
            if (v25 == *v24)
            {
              uint64_t v27 = (uint64_t)*--v24;
              uint64_t v25 = (unsigned char *)(v27 + 4096);
            }
            char v26 = *--v23;
            *--uint64_t v25 = v26;
            a1[2] = vaddq_s64(a1[2], (int64x2_t)xmmword_1003F1870);
          }
          while (v23 != __src);
        }
        unint64_t v6 = v16;
        if (!v16) {
          goto LABEL_98;
        }
        goto LABEL_40;
      }
    }
    else
    {
      uint64_t v19 = (char *)*v18 + (v10 & 0xFFF);
      unint64_t v20 = v6 - v16;
      if (v6 > v16) {
        goto LABEL_8;
      }
    }
    uint64_t v25 = v19;
    uint64_t v24 = v18;
    uint64_t v22 = __src;
    if (!v6) {
      goto LABEL_98;
    }
LABEL_40:
    uint64_t v41 = v19 - (unsigned char *)*v18 + v6;
    if (v41 < 1)
    {
      unint64_t v42 = &v18[-((unint64_t)(4095 - v41) >> 12)];
      unint64_t v43 = (char *)*v42 + (~(4095 - (_WORD)v41) & 0xFFF);
      if (v43 == v19) {
        goto LABEL_51;
      }
    }
    else
    {
      unint64_t v42 = &v18[(unint64_t)v41 >> 12];
      unint64_t v43 = (char *)*v42 + (v41 & 0xFFF);
      if (v43 == v19)
      {
LABEL_51:
        if (v6 < v16)
        {
          uint64_t v49 = v19 - (unsigned char *)*v18 + v16;
          if (v49 < 1)
          {
            unint64_t v63 = 4095 - v49;
            uint64_t v50 = &v18[-(v63 >> 12)];
            uint64_t v51 = (char *)*v50 + (~(_WORD)v63 & 0xFFF);
          }
          else
          {
            uint64_t v50 = &v18[(unint64_t)v49 >> 12];
            uint64_t v51 = (char *)*v50 + (v49 & 0xFFF);
          }
          long long v80 = v18;
          uint64_t v81 = v19;
          sub_1001947B8(v42, v43, v50, v51, (uint64_t)&v80);
          uint64_t v18 = v80;
          uint64_t v19 = v81;
        }
        if (v22 != a5)
        {
          int v65 = *v18;
          int v64 = (void **)(v18 + 1);
          uint64_t v66 = v65 - v19 + 4096;
          if (a5 - v22 >= v66) {
            size_t v67 = v66;
          }
          else {
            size_t v67 = a5 - v22;
          }
          if (v67) {
LABEL_77:
          }
            memmove(v19, v22, v67);
          while (1)
          {
            v22 += v67;
            if (v22 == a5) {
              break;
            }
            uint64_t v68 = *v64++;
            uint64_t v19 = v68;
            if (a5 - v22 >= 4096) {
              size_t v67 = 4096;
            }
            else {
              size_t v67 = a5 - v22;
            }
            if (v67) {
              goto LABEL_77;
            }
          }
        }
        goto LABEL_98;
      }
    }
    uint64_t v44 = v42;
    int64_t v45 = v43;
    while (1)
    {
      if (v25 == *v24)
      {
        uint64_t v47 = (uint64_t)*--v24;
        uint64_t v25 = (unsigned char *)(v47 + 4096);
        if (v45 == *v44)
        {
LABEL_50:
          uint64_t v48 = (uint64_t)*--v44;
          int64_t v45 = (unsigned char *)(v48 + 4096);
        }
      }
      else if (v45 == *v44)
      {
        goto LABEL_50;
      }
      char v46 = *--v45;
      *--uint64_t v25 = v46;
      a1[2] = vaddq_s64(a1[2], (int64x2_t)xmmword_1003F1870);
      if (v45 == v19) {
        goto LABEL_51;
      }
    }
  }
LABEL_18:
  uint64_t v28 = ((v13 - v12) << 9) - 1;
  if (v13 == v12) {
    uint64_t v28 = 0;
  }
  unint64_t v29 = v10 + v17;
  unint64_t v30 = v28 - v29;
  if (a6 > v30)
  {
    sub_100193E4C((uint64_t)a1, a6 - v30);
    uint64_t v17 = a1[2].i64[1];
    uint64_t v12 = a1->i64[1];
    uint64_t v13 = a1[1].i64[0];
    unint64_t v29 = a1[2].i64[0] + v17;
  }
  uint64_t v31 = (const void **)(v12 + 8 * (v29 >> 12));
  if (v13 != v12)
  {
    unint64_t v32 = (char *)*v31 + (v29 & 0xFFF);
    unint64_t v33 = v17 - v16;
    unint64_t v34 = v17 - v16 - v6;
    if (v17 - v16 < v6) {
      goto LABEL_24;
    }
LABEL_36:
    unint64_t v39 = v32;
    int64_t v38 = v31;
    std::string::size_type v36 = a5;
    if (!v6) {
      goto LABEL_98;
    }
    goto LABEL_56;
  }
  unint64_t v32 = 0;
  unint64_t v33 = v17 - v16;
  unint64_t v34 = v17 - v16 - v6;
  if (v17 - v16 >= v6) {
    goto LABEL_36;
  }
LABEL_24:
  std::exception_ptr v35 = &a5[v34];
  if (v33 >= v6 >> 1) {
    std::string::size_type v36 = v35;
  }
  else {
    std::string::size_type v36 = &__src[v33];
  }
  if (v36 == a5)
  {
    unint64_t v39 = v32;
    int64_t v38 = v31;
    std::string::size_type v36 = a5;
  }
  else
  {
    BOOL v37 = v36;
    int64_t v38 = v31;
    unint64_t v39 = v32;
    do
    {
      *v39++ = *v37;
      if (&v39[-*v38] == (char *)4096)
      {
        unint64_t v40 = (char *)v38[1];
        ++v38;
        unint64_t v39 = v40;
      }
      ++v37;
      ++a1[2].i64[1];
    }
    while (v37 != a5);
  }
  unint64_t v6 = v33;
  if (!v33) {
    goto LABEL_98;
  }
LABEL_56:
  uint64_t v52 = &v32[-v6] - (unsigned char *)*v31;
  if (v52 < 1)
  {
    unint64_t v55 = 4095 - v52;
    int v53 = &v31[-(v55 >> 12)];
    uint64_t v54 = (char *)*v53 + (~(_WORD)v55 & 0xFFF);
    if (v54 == v32) {
      goto LABEL_67;
    }
    goto LABEL_60;
  }
  int v53 = &v31[(unint64_t)v52 >> 12];
  uint64_t v54 = (char *)*v53 + (v52 & 0xFFF);
  if (v54 != v32)
  {
LABEL_60:
    unint64_t v56 = v53;
    uint64_t v57 = v54;
    do
    {
      *v39++ = *v57;
      if (&v39[-*v38] == (char *)4096)
      {
        size_t v58 = (char *)v38[1];
        ++v38;
        unint64_t v39 = v58;
        if (&(++v57)[-*v56] == (char *)4096)
        {
LABEL_66:
          unint64_t v59 = (char *)v56[1];
          ++v56;
          uint64_t v57 = v59;
        }
      }
      else if (&(++v57)[-*v56] == (char *)4096)
      {
        goto LABEL_66;
      }
      ++a1[2].i64[1];
    }
    while (v57 != v32);
  }
LABEL_67:
  if (v6 < v33)
  {
    uint64_t v60 = v32 - ((unsigned char *)*v31 + v33);
    if (v60 < 1)
    {
      unint64_t v69 = 4095 - v60;
      unint64_t v61 = &v31[-(v69 >> 12)];
      int64_t v62 = (char *)*v61 + (~(_WORD)v69 & 0xFFF);
    }
    else
    {
      unint64_t v61 = &v31[(unint64_t)v60 >> 12];
      int64_t v62 = (char *)*v61 + (v60 & 0xFFF);
    }
    sub_100194A7C(v61, v62, v53, v54, v31, v32, &v80);
    uint64_t v31 = v82;
    unint64_t v32 = v83;
  }
  if (v36 != __src)
  {
    uint64_t v71 = *v31;
    uint64_t v70 = v31 - 1;
    size_t v72 = v32 - v71;
    if (v36 - __src >= v32 - v71) {
      size_t v73 = v72;
    }
    else {
      size_t v73 = v36 - __src;
    }
    int v74 = &v36[-v73];
    if (v73) {
LABEL_91:
    }
      memmove(&v32[-v73], v74, v73);
    while (v74 != __src)
    {
      uint64_t v75 = (uint64_t)*v70--;
      unint64_t v32 = (char *)(v75 + 4096);
      if (v74 - __src >= 4096) {
        size_t v73 = 4096;
      }
      else {
        size_t v73 = v74 - __src;
      }
      v74 -= v73;
      if (v73) {
        goto LABEL_91;
      }
    }
  }
LABEL_98:
  uint64_t v76 = a1->i64[1];
  uint64_t result = (void *)(v76 + 8 * ((unint64_t)a1[2].i64[0] >> 12));
  if (a1[1].i64[0] == v76)
  {
    uint64_t v78 = 0;
    if (!v16) {
      return result;
    }
  }
  else
  {
    uint64_t v78 = *result + (a1[2].i64[0] & 0xFFF);
    if (!v16) {
      return result;
    }
  }
  uint64_t v79 = v78 - *result + v16;
  if (v79 < 1) {
    result -= (unint64_t)(4095 - v79) >> 12;
  }
  else {
    result += (unint64_t)v79 >> 12;
  }
  return result;
}

void sub_10019375C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4 == v3) {
    unint64_t v5 = a2 + 1;
  }
  else {
    unint64_t v5 = a2;
  }
  if (v4 == v3) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = ((v4 - v3) << 9) - 1;
  }
  if ((v5 & 0xFFF) != 0) {
    unint64_t v7 = (v5 >> 12) + 1;
  }
  else {
    unint64_t v7 = v5 >> 12;
  }
  uint64_t v8 = *(void *)(a1 + 32);
  unint64_t v9 = (unint64_t)(v6 - (*(void *)(a1 + 40) + v8)) >> 12;
  if (v7 >= v9) {
    unint64_t v10 = (unint64_t)(v6 - (*(void *)(a1 + 40) + v8)) >> 12;
  }
  else {
    unint64_t v10 = v7;
  }
  if (v7 <= v9)
  {
    for (*(void *)(a1 + 32) = v8 + (v10 << 12); v10; --v10)
    {
      uint64_t v17 = *(void *)(a1 + 16);
      int v101 = *(void **)(v17 - 8);
      *(void *)(a1 + 16) = v17 - 8;
      sub_100192F90((void **)a1, &v101);
    }
    return;
  }
  unint64_t v11 = v7 - v10;
  uint64_t v12 = *(void *)(a1 + 24) - *(void *)a1;
  uint64_t v13 = (v4 - v3) >> 3;
  if (v7 - v10 <= (v12 >> 3) - v13)
  {
    if (v11)
    {
      if (v3 == *(void *)a1)
      {
LABEL_31:
        unint64_t v20 = v11;
        do
        {
          int v101 = operator new(0x1000uLL);
          sub_100192E00((char **)a1, &v101);
          --v20;
        }
        while (v20);
        v10 += v11;
        uint64_t v8 = *(void *)(a1 + 32);
      }
      else
      {
        while (1)
        {
          int v101 = operator new(0x1000uLL);
          sub_100192F90((void **)a1, &v101);
          uint64_t v18 = *(void *)(a1 + 8);
          uint64_t v19 = *(void *)(a1 + 16) - v18 == 8 ? 4095 : 4096;
          uint64_t v8 = v19 + *(void *)(a1 + 32);
          *(void *)(a1 + 32) = v8;
          if (!--v11) {
            break;
          }
          if (v18 == *(void *)a1) {
            goto LABEL_31;
          }
        }
      }
    }
    for (*(void *)(a1 + 32) = v8 + (v10 << 12); v10; --v10)
    {
      uint64_t v21 = *(void *)(a1 + 16);
      int v101 = *(void **)(v21 - 8);
      *(void *)(a1 + 16) = v21 - 8;
      sub_100192F90((void **)a1, &v101);
    }
    return;
  }
  BOOL v14 = v4 == v3;
  if (v12 >> 2 <= v11 + v13) {
    unint64_t v15 = v11 + v13;
  }
  else {
    unint64_t v15 = v12 >> 2;
  }
  if (v15)
  {
    if (v15 >> 61) {
      sub_1000A6A10();
    }
    unint64_t v16 = (char *)operator new(8 * v15);
  }
  else
  {
    unint64_t v16 = 0;
  }
  unint64_t v100 = (v7 << 12) - v14;
  uint64_t v22 = &v16[8 * v15];
  uint64_t v23 = v16;
  uint64_t v24 = v16;
  uint64_t v25 = v16;
  do
  {
    char v26 = operator new(0x1000uLL);
    if (v24 != v22) {
      goto LABEL_40;
    }
    if (v23 > v25)
    {
      uint64_t v27 = v25;
      uint64_t v28 = (v23 - v25) >> 3;
      if (v28 >= -1) {
        uint64_t v29 = v28 + 1;
      }
      else {
        uint64_t v29 = v28 + 2;
      }
      uint64_t v30 = v29 >> 1;
      uint64_t v31 = &v23[-8 * (v29 >> 1)];
      unint64_t v32 = v22;
      if (v22 != v23)
      {
        memmove(v31, v23, v22 - v23);
        unint64_t v32 = v23;
      }
      uint64_t v24 = &v31[v22 - v23];
      uint64_t v23 = &v32[-8 * v30];
      uint64_t v25 = v27;
      goto LABEL_40;
    }
    if (v22 == v25) {
      unint64_t v33 = 1;
    }
    else {
      unint64_t v33 = (v22 - v25) >> 2;
    }
    if (v33 >> 61) {
      sub_1000A6A10();
    }
    unint64_t v34 = operator new(8 * v33);
    std::exception_ptr v35 = v25;
    unint64_t v36 = v33 >> 2;
    BOOL v37 = &v34[8 * (v33 >> 2)];
    uint64_t v24 = v37;
    int64_t v38 = v22 - v23;
    if (v22 != v23)
    {
      uint64_t v24 = &v37[v38 & 0xFFFFFFFFFFFFFFF8];
      unint64_t v39 = v38 - 8;
      if (v39 >= 0x38 && (uint64_t v40 = 8 * v36, (unint64_t)(&v34[8 * v36] - v23) >= 0x20))
      {
        uint64_t v44 = (v39 >> 3) + 1;
        uint64_t v45 = 8 * (v44 & 0x3FFFFFFFFFFFFFFCLL);
        uint64_t v41 = &v37[v45];
        unint64_t v42 = &v23[v45];
        char v46 = (long long *)(v23 + 16);
        uint64_t v47 = &v34[v40 + 16];
        uint64_t v48 = v44 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          long long v49 = *v46;
          *(v47 - 1) = *(v46 - 1);
          *uint64_t v47 = v49;
          v46 += 2;
          v47 += 2;
          v48 -= 4;
        }
        while (v48);
        if (v44 == (v44 & 0x3FFFFFFFFFFFFFFCLL)) {
          goto LABEL_57;
        }
      }
      else
      {
        uint64_t v41 = &v34[8 * (v33 >> 2)];
        unint64_t v42 = v23;
      }
      do
      {
        uint64_t v43 = *(void *)v42;
        v42 += 8;
        *(void *)uint64_t v41 = v43;
        v41 += 8;
      }
      while (v41 != v24);
    }
LABEL_57:
    uint64_t v22 = &v34[8 * v33];
    if (v35) {
      operator delete(v35);
    }
    uint64_t v23 = &v34[8 * (v33 >> 2)];
    uint64_t v25 = v34;
LABEL_40:
    *(void *)uint64_t v24 = v26;
    v24 += 8;
    --v11;
  }
  while (v11);
  uint64_t v50 = *(void *)(a1 + 16);
  if (v10)
  {
    while (1)
    {
      if (v24 == v22)
      {
        if (v23 <= v25)
        {
          if (v22 == v25) {
            unint64_t v61 = 1;
          }
          else {
            unint64_t v61 = (v22 - v25) >> 2;
          }
          if (v61 >> 61) {
            sub_1000A6A10();
          }
          int64_t v62 = operator new(8 * v61);
          unint64_t v63 = v62;
          unint64_t v64 = v61 >> 2;
          uint64_t v51 = &v62[8 * (v61 >> 2)];
          uint64_t v24 = v51;
          int64_t v65 = v22 - v23;
          if (v22 != v23)
          {
            uint64_t v24 = &v51[v65 & 0xFFFFFFFFFFFFFFF8];
            unint64_t v66 = v65 - 8;
            if (v66 < 0x38 || (uint64_t v67 = 8 * v64, (unint64_t)(&v62[8 * v64] - v23) < 0x20))
            {
              uint64_t v68 = &v62[8 * (v61 >> 2)];
              unint64_t v69 = v23;
              goto LABEL_90;
            }
            uint64_t v71 = (v66 >> 3) + 1;
            uint64_t v72 = 8 * (v71 & 0x3FFFFFFFFFFFFFFCLL);
            uint64_t v68 = &v51[v72];
            unint64_t v69 = &v23[v72];
            size_t v73 = (long long *)(v23 + 16);
            int v74 = &v62[v67 + 16];
            uint64_t v75 = v71 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v76 = *v73;
              *(v74 - 1) = *(v73 - 1);
              _OWORD *v74 = v76;
              v73 += 2;
              v74 += 2;
              v75 -= 4;
            }
            while (v75);
            if (v71 != (v71 & 0x3FFFFFFFFFFFFFFCLL))
            {
              do
              {
LABEL_90:
                uint64_t v70 = *(void *)v69;
                v69 += 8;
                *(void *)uint64_t v68 = v70;
                v68 += 8;
              }
              while (v68 != v24);
            }
          }
          uint64_t v22 = &v62[8 * v61];
          if (v25) {
            operator delete(v25);
          }
          uint64_t v25 = v63;
          goto LABEL_73;
        }
        unint64_t v55 = v25;
        uint64_t v56 = (v23 - v25) >> 3;
        if (v56 >= -1) {
          uint64_t v57 = v56 + 1;
        }
        else {
          uint64_t v57 = v56 + 2;
        }
        uint64_t v58 = v57 >> 1;
        unint64_t v59 = &v23[-8 * (v57 >> 1)];
        uint64_t v60 = v22;
        if (v22 != v23)
        {
          memmove(v59, v23, v22 - v23);
          uint64_t v60 = v23;
        }
        uint64_t v24 = &v59[v22 - v23];
        uint64_t v51 = &v60[-8 * v58];
        uint64_t v25 = v55;
      }
      else
      {
        uint64_t v51 = v23;
      }
LABEL_73:
      *(void *)uint64_t v24 = *(void *)(v50 - 8);
      v24 += 8;
      uint64_t v50 = *(void *)(a1 + 16) - 8;
      *(void *)(a1 + 16) = v50;
      uint64_t v23 = v51;
      if (!--v10) {
        goto LABEL_66;
      }
    }
  }
  uint64_t v51 = v23;
LABEL_66:
  uint64_t v52 = *(uint64_t **)(a1 + 8);
  if (v52 != (uint64_t *)v50)
  {
    while (1)
    {
      if (v24 == v22)
      {
        if (v51 <= v25)
        {
          if (v22 == v25) {
            unint64_t v84 = 1;
          }
          else {
            unint64_t v84 = (v22 - v25) >> 2;
          }
          if (v84 >> 61) {
            sub_1000A6A10();
          }
          int v85 = operator new(8 * v84);
          uint64_t v86 = v85;
          unint64_t v87 = v84 >> 2;
          int v53 = &v85[8 * (v84 >> 2)];
          uint64_t v24 = v53;
          int64_t v88 = v22 - v51;
          if (v22 != v51)
          {
            uint64_t v24 = &v53[v88 & 0xFFFFFFFFFFFFFFF8];
            unint64_t v89 = v88 - 8;
            if (v89 < 0x38 || (uint64_t v90 = 8 * v87, (unint64_t)(&v85[8 * v87] - v51) < 0x20))
            {
              int v91 = &v85[8 * (v84 >> 2)];
              int v92 = v51;
              goto LABEL_116;
            }
            uint64_t v94 = (v89 >> 3) + 1;
            uint64_t v95 = 8 * (v94 & 0x3FFFFFFFFFFFFFFCLL);
            int v91 = &v53[v95];
            int v92 = &v51[v95];
            int v96 = (long long *)(v51 + 16);
            int v97 = &v85[v90 + 16];
            uint64_t v98 = v94 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v99 = *v96;
              *(v97 - 1) = *(v96 - 1);
              *int v97 = v99;
              v96 += 2;
              v97 += 2;
              v98 -= 4;
            }
            while (v98);
            if (v94 != (v94 & 0x3FFFFFFFFFFFFFFCLL))
            {
              do
              {
LABEL_116:
                uint64_t v93 = *(void *)v92;
                v92 += 8;
                *(void *)int v91 = v93;
                v91 += 8;
              }
              while (v91 != v24);
            }
          }
          uint64_t v22 = &v85[8 * v84];
          if (v25) {
            operator delete(v25);
          }
          uint64_t v25 = v86;
          goto LABEL_99;
        }
        uint64_t v78 = v25;
        uint64_t v79 = (v51 - v25) >> 3;
        if (v79 >= -1) {
          uint64_t v80 = v79 + 1;
        }
        else {
          uint64_t v80 = v79 + 2;
        }
        uint64_t v81 = v80 >> 1;
        uint64_t v82 = &v51[-8 * (v80 >> 1)];
        uint64_t v83 = v22;
        if (v22 != v51)
        {
          memmove(v82, v51, v22 - v51);
          uint64_t v83 = v51;
        }
        uint64_t v24 = &v82[v22 - v51];
        int v53 = &v83[-8 * v81];
        uint64_t v25 = v78;
      }
      else
      {
        int v53 = v51;
      }
LABEL_99:
      uint64_t v77 = *v52++;
      *(void *)uint64_t v24 = v77;
      v24 += 8;
      uint64_t v51 = v53;
      if (v52 == *(uint64_t **)(a1 + 16)) {
        goto LABEL_68;
      }
    }
  }
  int v53 = v51;
LABEL_68:
  uint64_t v54 = *(void **)a1;
  *(void *)a1 = v25;
  *(void *)(a1 + 8) = v53;
  *(void *)(a1 + 16) = v24;
  *(void *)(a1 + 24) = v22;
  *(void *)(a1 + 32) += v100;
  if (v54)
  {
    operator delete(v54);
  }
}

void sub_100193DE0(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100193E2C()
{
}

void sub_100193E4C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = *(char **)(a1 + 16);
  uint64_t v4 = (uint64_t)&v3[-*(void *)(a1 + 8)];
  if (v4) {
    unint64_t v5 = a2;
  }
  else {
    unint64_t v5 = a2 + 1;
  }
  if ((v5 & 0xFFF) != 0) {
    unint64_t v6 = (v5 >> 12) + 1;
  }
  else {
    unint64_t v6 = v5 >> 12;
  }
  unint64_t v7 = *(void *)(a1 + 32);
  if (v6 >= v7 >> 12) {
    unint64_t v8 = v7 >> 12;
  }
  else {
    unint64_t v8 = v6;
  }
  if (v6 <= v7 >> 12)
  {
    *(void *)(a1 + 32) = v7 - (v8 << 12);
    if (!v8) {
      return;
    }
    while (1)
    {
      unint64_t v15 = *(void **)(a1 + 8);
      unint64_t v16 = (char *)(v15 + 1);
      uint64_t v17 = *v15;
      *(void *)(a1 + 8) = v15 + 1;
      if (v3 == *(char **)(a1 + 24))
      {
        uint64_t v18 = *(char **)a1;
        if ((unint64_t)v16 <= *(void *)a1)
        {
          unint64_t v24 = (v3 - v18) >> 2;
          if (v3 == v18) {
            unint64_t v24 = 1;
          }
          if (v24 >> 61) {
            goto LABEL_161;
          }
          unint64_t v25 = v24 >> 2;
          uint64_t v26 = 8 * v24;
          uint64_t v27 = (char *)operator new(8 * v24);
          uint64_t v28 = &v27[8 * v25];
          int64_t v30 = v3 - v16;
          BOOL v29 = v3 == v16;
          uint64_t v3 = v28;
          if (!v29)
          {
            uint64_t v3 = &v28[v30 & 0xFFFFFFFFFFFFFFF8];
            unint64_t v31 = v30 - 8;
            if ((unint64_t)(v30 - 8) < 0x38)
            {
              unint64_t v32 = &v27[8 * v25];
              goto LABEL_39;
            }
            unint64_t v32 = &v27[8 * v25];
            if ((unint64_t)(v32 - v16) < 0x20) {
              goto LABEL_167;
            }
            uint64_t v33 = (v31 >> 3) + 1;
            uint64_t v34 = 8 * (v33 & 0x3FFFFFFFFFFFFFFCLL);
            unint64_t v32 = &v28[v34];
            v16 += v34;
            std::exception_ptr v35 = (long long *)(v15 + 3);
            unint64_t v36 = &v27[8 * v25 + 16];
            uint64_t v37 = v33 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v38 = *v35;
              *((_OWORD *)v36 - 1) = *(v35 - 1);
              *(_OWORD *)unint64_t v36 = v38;
              v35 += 2;
              v36 += 32;
              v37 -= 4;
            }
            while (v37);
            if (v33 != (v33 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_167:
              do
              {
LABEL_39:
                uint64_t v39 = *(void *)v16;
                v16 += 8;
                *(void *)unint64_t v32 = v39;
                v32 += 8;
              }
              while (v32 != v3);
            }
          }
          *(void *)a1 = v27;
          *(void *)(a1 + 8) = v28;
          *(void *)(a1 + 16) = v3;
          *(void *)(a1 + 24) = &v27[v26];
          if (v18)
          {
            operator delete(v18);
            uint64_t v3 = *(char **)(a1 + 16);
          }
          goto LABEL_21;
        }
        uint64_t v19 = (uint64_t)&v16[-*(void *)a1] >> 3;
        if (v19 >= -1) {
          uint64_t v20 = v19 + 1;
        }
        else {
          uint64_t v20 = v19 + 2;
        }
        uint64_t v21 = v20 >> 1;
        uint64_t v22 = &v16[-8 * (v20 >> 1)];
        int64_t v23 = v3 - v16;
        if (v3 != v16)
        {
          memmove(&v16[-8 * (v20 >> 1)], v16, v3 - v16);
          uint64_t v3 = *(char **)(a1 + 8);
        }
        BOOL v14 = &v3[-8 * v21];
        uint64_t v3 = &v22[v23];
        *(void *)(a1 + 8) = v14;
        *(void *)(a1 + 16) = &v22[v23];
      }
LABEL_21:
      *(void *)uint64_t v3 = v17;
      uint64_t v3 = (char *)(*(void *)(a1 + 16) + 8);
      *(void *)(a1 + 16) = v3;
      if (!--v8) {
        return;
      }
    }
  }
  unint64_t v9 = v6 - v8;
  uint64_t v10 = *(void *)(a1 + 24) - *(void *)a1;
  uint64_t v11 = v4 >> 3;
  if (v6 - v8 <= (v10 >> 3) - (v4 >> 3))
  {
    if (v9)
    {
      while (*(void *)(a1 + 24) != *(void *)(a1 + 16))
      {
        int v145 = operator new(0x1000uLL);
        sub_100192E00((char **)a1, &v145);
        --v6;
        if (!--v9) {
          goto LABEL_136;
        }
      }
      for (uint64_t i = 0; i != v9; ++i)
      {
        int v145 = operator new(0x1000uLL);
        sub_100192F90((void **)a1, &v145);
        if (*(void *)(a1 + 16) - *(void *)(a1 + 8) == 8) {
          uint64_t v116 = 4095;
        }
        else {
          uint64_t v116 = 4096;
        }
        uint64_t v117 = v116 + *(void *)(a1 + 32);
        *(void *)(a1 + 32) = v117;
      }
      unint64_t v8 = v6;
      *(void *)(a1 + 32) = v117 - (v6 << 12);
      if (!v6) {
        return;
      }
    }
    else
    {
LABEL_136:
      *(void *)(a1 + 32) -= v8 << 12;
      if (!v8) {
        return;
      }
    }
    int v118 = *(char **)(a1 + 16);
    while (1)
    {
      uint64_t v120 = *(void **)(a1 + 8);
      int v121 = (char *)(v120 + 1);
      uint64_t v122 = *v120;
      *(void *)(a1 + 8) = v120 + 1;
      if (v118 == *(char **)(a1 + 24))
      {
        int v123 = *(char **)a1;
        if ((unint64_t)v121 <= *(void *)a1)
        {
          unint64_t v129 = (v118 - v123) >> 2;
          if (v118 == v123) {
            unint64_t v129 = 1;
          }
          if (v129 >> 61) {
            goto LABEL_161;
          }
          unint64_t v130 = v129 >> 2;
          uint64_t v131 = 8 * v129;
          v132 = (char *)operator new(8 * v129);
          int v133 = &v132[8 * v130];
          int64_t v134 = v118 - v121;
          BOOL v29 = v118 == v121;
          int v118 = v133;
          if (!v29)
          {
            int v118 = &v133[v134 & 0xFFFFFFFFFFFFFFF8];
            unint64_t v135 = v134 - 8;
            if ((unint64_t)(v134 - 8) < 0x38)
            {
              unsigned int v136 = &v132[8 * v130];
              goto LABEL_157;
            }
            unsigned int v136 = &v132[8 * v130];
            if ((unint64_t)(v136 - v121) < 0x20) {
              goto LABEL_168;
            }
            uint64_t v137 = (v135 >> 3) + 1;
            uint64_t v138 = 8 * (v137 & 0x3FFFFFFFFFFFFFFCLL);
            unsigned int v136 = &v133[v138];
            v121 += v138;
            unsigned int v139 = (long long *)(v120 + 3);
            uint64_t v140 = &v132[8 * v130 + 16];
            uint64_t v141 = v137 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v142 = *v139;
              *((_OWORD *)v140 - 1) = *(v139 - 1);
              *(_OWORD *)uint64_t v140 = v142;
              v139 += 2;
              v140 += 32;
              v141 -= 4;
            }
            while (v141);
            if (v137 != (v137 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_168:
              do
              {
LABEL_157:
                uint64_t v143 = *(void *)v121;
                v121 += 8;
                *(void *)unsigned int v136 = v143;
                v136 += 8;
              }
              while (v136 != v118);
            }
          }
          *(void *)a1 = v132;
          *(void *)(a1 + 8) = v133;
          *(void *)(a1 + 16) = v118;
          *(void *)(a1 + 24) = &v132[v131];
          if (v123)
          {
            operator delete(v123);
            int v118 = *(char **)(a1 + 16);
          }
          goto LABEL_139;
        }
        uint64_t v124 = (uint64_t)&v121[-*(void *)a1] >> 3;
        if (v124 >= -1) {
          uint64_t v125 = v124 + 1;
        }
        else {
          uint64_t v125 = v124 + 2;
        }
        uint64_t v126 = v125 >> 1;
        v127 = &v121[-8 * (v125 >> 1)];
        int64_t v128 = v118 - v121;
        if (v118 != v121)
        {
          memmove(&v121[-8 * (v125 >> 1)], v121, v118 - v121);
          int v118 = *(char **)(a1 + 8);
        }
        int v119 = &v118[-8 * v126];
        int v118 = &v127[v128];
        *(void *)(a1 + 8) = v119;
        *(void *)(a1 + 16) = &v127[v128];
      }
LABEL_139:
      *(void *)int v118 = v122;
      int v118 = (char *)(*(void *)(a1 + 16) + 8);
      *(void *)(a1 + 16) = v118;
      if (!--v8) {
        return;
      }
    }
  }
  if (v10 >> 2 <= v9 + v11) {
    unint64_t v12 = v9 + v11;
  }
  else {
    unint64_t v12 = v10 >> 2;
  }
  if (v12)
  {
    if (v12 >> 61) {
LABEL_161:
    }
      sub_1000A6A10();
    uint64_t v13 = (char *)operator new(8 * v12);
  }
  else
  {
    uint64_t v13 = 0;
  }
  uint64_t v144 = v8 << 12;
  uint64_t v40 = &v13[8 * (v11 - v8)];
  uint64_t v41 = &v13[8 * v12];
  unint64_t v42 = v40;
  uint64_t v43 = v13;
  do
  {
    uint64_t v44 = operator new(0x1000uLL);
    if (v42 != v41) {
      goto LABEL_49;
    }
    if (v40 > v43)
    {
      uint64_t v45 = v43;
      uint64_t v46 = (v40 - v43) >> 3;
      if (v46 >= -1) {
        uint64_t v47 = v46 + 1;
      }
      else {
        uint64_t v47 = v46 + 2;
      }
      uint64_t v48 = v47 >> 1;
      long long v49 = &v40[-8 * (v47 >> 1)];
      uint64_t v50 = v41;
      if (v41 != v40)
      {
        memmove(v49, v40, v41 - v40);
        uint64_t v50 = v40;
      }
      unint64_t v42 = &v49[v41 - v40];
      uint64_t v40 = &v50[-8 * v48];
      uint64_t v43 = v45;
      goto LABEL_49;
    }
    if (v41 == v43) {
      unint64_t v51 = 1;
    }
    else {
      unint64_t v51 = (v41 - v43) >> 2;
    }
    if (v51 >> 61) {
      sub_1000A6A10();
    }
    uint64_t v52 = (char *)operator new(8 * v51);
    int v53 = v43;
    unint64_t v54 = v51 >> 2;
    unint64_t v55 = &v52[8 * (v51 >> 2)];
    unint64_t v42 = v55;
    int64_t v56 = v41 - v40;
    if (v41 != v40)
    {
      unint64_t v42 = &v55[v56 & 0xFFFFFFFFFFFFFFF8];
      unint64_t v57 = v56 - 8;
      if (v57 >= 0x38 && (uint64_t v58 = 8 * v54, (unint64_t)(&v52[8 * v54] - v40) >= 0x20))
      {
        uint64_t v62 = (v57 >> 3) + 1;
        uint64_t v63 = 8 * (v62 & 0x3FFFFFFFFFFFFFFCLL);
        unint64_t v59 = &v55[v63];
        uint64_t v60 = &v40[v63];
        unint64_t v64 = (long long *)(v40 + 16);
        int64_t v65 = &v52[v58 + 16];
        uint64_t v66 = v62 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          long long v67 = *v64;
          *((_OWORD *)v65 - 1) = *(v64 - 1);
          *(_OWORD *)int64_t v65 = v67;
          v64 += 2;
          v65 += 32;
          v66 -= 4;
        }
        while (v66);
        if (v62 == (v62 & 0x3FFFFFFFFFFFFFFCLL)) {
          goto LABEL_66;
        }
      }
      else
      {
        unint64_t v59 = &v52[8 * (v51 >> 2)];
        uint64_t v60 = v40;
      }
      do
      {
        uint64_t v61 = *(void *)v60;
        v60 += 8;
        *(void *)unint64_t v59 = v61;
        v59 += 8;
      }
      while (v59 != v42);
    }
LABEL_66:
    uint64_t v41 = &v52[8 * v51];
    if (v53) {
      operator delete(v53);
    }
    uint64_t v40 = &v52[8 * (v51 >> 2)];
    uint64_t v43 = v52;
LABEL_49:
    *(void *)unint64_t v42 = v44;
    v42 += 8;
    --v9;
  }
  while (v9);
  uint64_t v68 = *(void **)(a1 + 8);
  if (v8)
  {
    while (1)
    {
      if (v42 == v41)
      {
        if (v40 <= v43)
        {
          if (v41 == v43) {
            unint64_t v78 = 1;
          }
          else {
            unint64_t v78 = (v41 - v43) >> 2;
          }
          if (v78 >> 61) {
            sub_1000A6A10();
          }
          uint64_t v79 = (char *)operator new(8 * v78);
          uint64_t v80 = v79;
          unint64_t v81 = v78 >> 2;
          unint64_t v69 = &v79[8 * (v78 >> 2)];
          unint64_t v42 = v69;
          int64_t v82 = v41 - v40;
          if (v41 != v40)
          {
            unint64_t v42 = &v69[v82 & 0xFFFFFFFFFFFFFFF8];
            unint64_t v83 = v82 - 8;
            if (v83 < 0x38 || (uint64_t v84 = 8 * v81, (unint64_t)(&v79[8 * v81] - v40) < 0x20))
            {
              int v85 = &v79[8 * (v78 >> 2)];
              uint64_t v86 = v40;
              goto LABEL_98;
            }
            uint64_t v88 = (v83 >> 3) + 1;
            uint64_t v89 = 8 * (v88 & 0x3FFFFFFFFFFFFFFCLL);
            int v85 = &v69[v89];
            uint64_t v86 = &v40[v89];
            uint64_t v90 = (long long *)(v40 + 16);
            int v91 = &v79[v84 + 16];
            uint64_t v92 = v88 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v93 = *v90;
              *((_OWORD *)v91 - 1) = *(v90 - 1);
              *(_OWORD *)int v91 = v93;
              v90 += 2;
              v91 += 32;
              v92 -= 4;
            }
            while (v92);
            if (v88 != (v88 & 0x3FFFFFFFFFFFFFFCLL))
            {
              do
              {
LABEL_98:
                uint64_t v87 = *(void *)v86;
                v86 += 8;
                *(void *)int v85 = v87;
                v85 += 8;
              }
              while (v85 != v42);
            }
          }
          uint64_t v41 = &v79[8 * v78];
          if (v43) {
            operator delete(v43);
          }
          uint64_t v43 = v80;
          goto LABEL_81;
        }
        uint64_t v72 = v43;
        uint64_t v73 = (v40 - v43) >> 3;
        if (v73 >= -1) {
          uint64_t v74 = v73 + 1;
        }
        else {
          uint64_t v74 = v73 + 2;
        }
        uint64_t v75 = v74 >> 1;
        long long v76 = &v40[-8 * (v74 >> 1)];
        uint64_t v77 = v41;
        if (v41 != v40)
        {
          memmove(v76, v40, v41 - v40);
          uint64_t v77 = v40;
        }
        unint64_t v42 = &v76[v41 - v40];
        unint64_t v69 = &v77[-8 * v75];
        uint64_t v43 = v72;
      }
      else
      {
        unint64_t v69 = v40;
      }
LABEL_81:
      *(void *)unint64_t v42 = *v68;
      v42 += 8;
      uint64_t v68 = (void *)(*(void *)(a1 + 8) + 8);
      *(void *)(a1 + 8) = v68;
      uint64_t v40 = v69;
      if (!--v8) {
        goto LABEL_75;
      }
    }
  }
  unint64_t v69 = v40;
LABEL_75:
  uint64_t v70 = *(void **)(a1 + 16);
  if (v70 != v68)
  {
    do
    {
      if (v69 == v43)
      {
        if (v42 >= v41)
        {
          if (v41 == v43) {
            unint64_t v100 = 1;
          }
          else {
            unint64_t v100 = (v41 - v43) >> 2;
          }
          if (v100 >> 61) {
            sub_1000A6A10();
          }
          int v101 = (char *)operator new(8 * v100);
          int v97 = v101;
          unint64_t v102 = (v100 + 3) >> 2;
          unint64_t v69 = &v101[8 * v102];
          int64_t v103 = v42 - v43;
          BOOL v29 = v42 == v43;
          unint64_t v42 = v69;
          if (!v29)
          {
            unint64_t v42 = &v69[v103 & 0xFFFFFFFFFFFFFFF8];
            unint64_t v104 = v103 - 8;
            int v105 = &v101[8 * v102];
            uint64_t v106 = v43;
            if (v104 < 0x38) {
              goto LABEL_169;
            }
            uint64_t v107 = 8 * v102;
            int v105 = &v101[8 * v102];
            uint64_t v106 = v43;
            if ((unint64_t)(v105 - v43) < 0x20) {
              goto LABEL_169;
            }
            uint64_t v108 = (v104 >> 3) + 1;
            uint64_t v109 = 8 * (v108 & 0x3FFFFFFFFFFFFFFCLL);
            int v105 = &v69[v109];
            uint64_t v106 = &v43[v109];
            uint64_t v110 = (long long *)(v43 + 16);
            int v111 = &v101[v107 + 16];
            uint64_t v112 = v108 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v113 = *v110;
              *((_OWORD *)v111 - 1) = *(v110 - 1);
              *(_OWORD *)int v111 = v113;
              v110 += 2;
              v111 += 32;
              v112 -= 4;
            }
            while (v112);
            if (v108 != (v108 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_169:
              do
              {
                uint64_t v114 = *(void *)v106;
                v106 += 8;
                *(void *)int v105 = v114;
                v105 += 8;
              }
              while (v105 != v42);
            }
          }
          uint64_t v41 = &v101[8 * v100];
          if (v43) {
            operator delete(v43);
          }
        }
        else
        {
          uint64_t v95 = (v41 - v42) >> 3;
          if (v95 >= -1) {
            uint64_t v96 = v95 + 1;
          }
          else {
            uint64_t v96 = v95 + 2;
          }
          int v97 = v43;
          uint64_t v98 = v96 >> 1;
          unint64_t v69 = &v97[8 * (v96 >> 1)];
          long long v99 = v97;
          if (v42 != v97)
          {
            memmove(v69, v97, v42 - v97);
            long long v99 = v42;
          }
          unint64_t v42 = &v99[8 * v98];
        }
        uint64_t v43 = v97;
      }
      uint64_t v94 = *--v70;
      *((void *)v69 - 1) = v94;
      v69 -= 8;
    }
    while (v70 != *(void **)(a1 + 8));
  }
  uint64_t v71 = *(char **)a1;
  *(void *)a1 = v43;
  *(void *)(a1 + 8) = v69;
  *(void *)(a1 + 16) = v42;
  *(void *)(a1 + 24) = v41;
  *(void *)(a1 + 32) -= v144;
  if (v71)
  {
    operator delete(v71);
  }
}

void sub_10019474C(_Unwind_Exception *exception_object)
{
  if (v1) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100194798()
{
}

const void **sub_1001947B8(const void **result, unsigned char *__src, const void **a3, unsigned char *a4, uint64_t a5)
{
  unint64_t v7 = __src;
  unint64_t v9 = *(void ***)a5;
  unint64_t v8 = *(char **)(a5 + 8);
  if (result != a3)
  {
    uint64_t v11 = result;
    unint64_t v12 = (char *)*result + 4096;
    if (v12 == __src) {
      goto LABEL_16;
    }
    uint64_t v13 = (uint64_t)*v9++;
    uint64_t v14 = v13 - (void)v8 + 4096;
    if (v12 - __src >= v14) {
      size_t v15 = v14;
    }
    else {
      size_t v15 = v12 - __src;
    }
    if (v15) {
      goto LABEL_12;
    }
    while (1)
    {
      v7 += v15;
      if (v7 == v12) {
        break;
      }
      unint64_t v16 = (char *)*v9++;
      unint64_t v8 = v16;
      if (v12 - v7 >= 4096) {
        size_t v15 = 4096;
      }
      else {
        size_t v15 = v12 - v7;
      }
      if (v15) {
LABEL_12:
      }
        uint64_t result = (const void **)memmove(v8, v7, v15);
    }
    v8 += v15;
    if ((char *)*(v9 - 1) + 4096 != v8)
    {
      --v9;
LABEL_16:
      *(void *)a5 = v9;
      *(void *)(a5 + 8) = v8;
      uint64_t v17 = v11 + 1;
      if (v17 != a3) {
        goto LABEL_19;
      }
      goto LABEL_48;
    }
    unint64_t v8 = (char *)*v9;
    *(void *)a5 = v9;
    *(void *)(a5 + 8) = v8;
    uint64_t v17 = v11 + 1;
    if (v17 == a3)
    {
LABEL_48:
      int64_t v30 = *a3;
      if (v30 == a4) {
        goto LABEL_62;
      }
      uint64_t v31 = (uint64_t)*v9++;
      uint64_t v32 = v31 - (void)v8 + 4096;
      if (a4 - v30 >= v32) {
        size_t v33 = v32;
      }
      else {
        size_t v33 = a4 - v30;
      }
      if (v33) {
        goto LABEL_58;
      }
      while (1)
      {
        v30 += v33;
        if (v30 == a4) {
          break;
        }
        uint64_t v34 = (char *)*v9++;
        unint64_t v8 = v34;
        if (a4 - v30 >= 4096) {
          size_t v33 = 4096;
        }
        else {
          size_t v33 = a4 - v30;
        }
        if (v33) {
LABEL_58:
        }
          uint64_t result = (const void **)memmove(v8, v30, v33);
      }
      v8 += v33;
      BOOL v29 = v9 - 1;
      if ((char *)*(v9 - 1) + 4096 != v8)
      {
LABEL_61:
        unint64_t v9 = v29;
        goto LABEL_62;
      }
      goto LABEL_46;
    }
    while (1)
    {
LABEL_19:
      uint64_t v18 = 0;
      uint64_t v19 = (char *)*v17;
      uint64_t v20 = (uint64_t)*v9++;
      uint64_t v21 = v20 - (void)v8 + 4096;
      if (v21 <= 4096) {
        size_t v22 = v21;
      }
      else {
        size_t v22 = 4096;
      }
      if (v22) {
LABEL_28:
      }
        uint64_t result = (const void **)memmove(v8, &v19[v18], v22);
      while (1)
      {
        v18 += v22;
        if (v18 == 4096) {
          break;
        }
        int64_t v23 = (char *)*v9++;
        unint64_t v8 = v23;
        if (4096 - v18 >= 4096) {
          size_t v22 = 4096;
        }
        else {
          size_t v22 = 4096 - v18;
        }
        if (v22) {
          goto LABEL_28;
        }
      }
      v8 += v22;
      unint64_t v24 = v9 - 1;
      if ((char *)*(v9 - 1) + 4096 == v8)
      {
        unint64_t v8 = (char *)*v9;
        *(void *)a5 = v9;
        *(void *)(a5 + 8) = v8;
        if (++v17 == a3) {
          goto LABEL_48;
        }
      }
      else
      {
        --v9;
        *(void *)a5 = v24;
        *(void *)(a5 + 8) = v8;
        if (++v17 == a3) {
          goto LABEL_48;
        }
      }
    }
  }
  if (__src != a4)
  {
    uint64_t v25 = (uint64_t)*v9++;
    uint64_t v26 = v25 - (void)v8 + 4096;
    if (a4 - __src >= v26) {
      size_t v27 = v26;
    }
    else {
      size_t v27 = a4 - __src;
    }
    if (v27) {
      goto LABEL_43;
    }
    while (1)
    {
      v7 += v27;
      if (v7 == a4) {
        break;
      }
      uint64_t v28 = (char *)*v9++;
      unint64_t v8 = v28;
      if (a4 - v7 >= 4096) {
        size_t v27 = 4096;
      }
      else {
        size_t v27 = a4 - v7;
      }
      if (v27) {
LABEL_43:
      }
        uint64_t result = (const void **)memmove(v8, v7, v27);
    }
    v8 += v27;
    BOOL v29 = v9 - 1;
    if ((char *)*(v9 - 1) + 4096 != v8) {
      goto LABEL_61;
    }
LABEL_46:
    unint64_t v8 = (char *)*v9;
  }
LABEL_62:
  *(void *)a5 = v9;
  *(void *)(a5 + 8) = v8;
  return result;
}

void *sub_100194A7C@<X0>(const void **a1@<X1>, char *a2@<X2>, const void **a3@<X3>, char *a4@<X4>, const void **a5@<X5>, char *a6@<X6>, const void ***a7@<X8>)
{
  unint64_t v8 = a5;
  if (a1 == a3)
  {
    if (a2 == a4) {
      goto LABEL_46;
    }
    uint64_t v35 = (uint64_t)*a5;
    unint64_t v36 = a4;
    while (1)
    {
      uint64_t v37 = &a6[-v35];
      if (v36 - a2 >= (uint64_t)v37) {
        size_t v38 = (size_t)v37;
      }
      else {
        size_t v38 = v36 - a2;
      }
      v36 -= v38;
      a6 -= v38;
      if (v38) {
        uint64_t result = memmove(a6, v36, v38);
      }
      if (v36 == a2) {
        break;
      }
      uint64_t v39 = (uint64_t)*--v8;
      uint64_t v35 = v39;
      a6 = (char *)(v39 + 4096);
    }
    goto LABEL_44;
  }
  uint64_t v14 = *a3;
  if (*a3 != a4)
  {
    uint64_t v15 = (uint64_t)*a5;
    unint64_t v16 = a4;
    while (1)
    {
      uint64_t v17 = &a6[-v15];
      if (v16 - v14 >= (uint64_t)v17) {
        size_t v18 = (size_t)v17;
      }
      else {
        size_t v18 = v16 - v14;
      }
      v16 -= v18;
      a6 -= v18;
      if (v18) {
        uint64_t result = memmove(a6, v16, v18);
      }
      if (v16 == v14) {
        break;
      }
      uint64_t v20 = (uint64_t)*--v8;
      uint64_t v15 = v20;
      a6 = (char *)(v20 + 4096);
    }
    if ((char *)*v8 + 4096 == a6)
    {
      uint64_t v21 = (char *)v8[1];
      ++v8;
      a6 = v21;
    }
  }
  size_t v22 = a3 - 1;
  if (a3 - 1 != a1)
  {
    int64_t v23 = (char *)*v8;
    do
    {
      while (1)
      {
        unint64_t v24 = *v22;
        uint64_t v25 = (char *)*v22 + 4096;
        while (1)
        {
          uint64_t v26 = (char *)(a6 - v23);
          if (v25 - v24 >= (uint64_t)v26) {
            size_t v27 = (size_t)v26;
          }
          else {
            size_t v27 = v25 - v24;
          }
          v25 -= v27;
          a6 -= v27;
          if (v27) {
            uint64_t result = memmove(a6, v25, v27);
          }
          if (v25 == v24) {
            break;
          }
          uint64_t v28 = (char *)*--v8;
          int64_t v23 = v28;
          a6 = v28 + 4096;
        }
        int64_t v23 = (char *)*v8;
        if ((char *)*v8 + 4096 == a6) {
          break;
        }
        if (--v22 == a1) {
          goto LABEL_26;
        }
      }
      BOOL v29 = (char *)v8[1];
      ++v8;
      int64_t v23 = v29;
      a6 = v29;
      --v22;
    }
    while (v22 != a1);
  }
LABEL_26:
  int64_t v30 = (char *)*a1 + 4096;
  if (v30 != a2)
  {
    uint64_t v31 = (uint64_t)*v8;
    while (1)
    {
      uint64_t v32 = &a6[-v31];
      if (v30 - a2 >= (uint64_t)v32) {
        size_t v33 = (size_t)v32;
      }
      else {
        size_t v33 = v30 - a2;
      }
      v30 -= v33;
      a6 -= v33;
      if (v33) {
        uint64_t result = memmove(a6, v30, v33);
      }
      if (v30 == a2) {
        break;
      }
      uint64_t v34 = (uint64_t)*--v8;
      uint64_t v31 = v34;
      a6 = (char *)(v34 + 4096);
    }
LABEL_44:
    if ((char *)*v8 + 4096 == a6)
    {
      uint64_t v40 = (char *)v8[1];
      ++v8;
      a6 = v40;
    }
  }
LABEL_46:
  *a7 = a3;
  a7[1] = (const void **)a4;
  a7[2] = v8;
  a7[3] = (const void **)a6;
  return result;
}

std::string::size_type sub_100194C80(std::string *a1, uint64_t a2, void *a3, std::string::value_type *a4, uint64_t a5, std::string::value_type *a6, std::string::size_type a7)
{
  unint64_t v8 = a1;
  if ((SHIBYTE(a1->__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    std::string::size_type v9 = a2 - (void)a1;
    if (!a7) {
      return (std::string::size_type)v8 + v9;
    }
LABEL_5:
    sub_100194F08(&__p, a3, a4, a5, a6);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    if (SHIBYTE(v8->__r_.__value_.__r.__words[2]) < 0)
    {
      std::string::size_type v12 = v8->__r_.__value_.__l.__size_;
      std::string::size_type v13 = (v8->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v13 - v12 >= a7)
      {
        uint64_t v14 = (std::string *)v8->__r_.__value_.__r.__words[0];
        size_t v15 = v12 - v9;
        if (v12 == v9)
        {
LABEL_14:
          std::string::size_type v16 = v9 + a7;
          if (SHIBYTE(v8->__r_.__value_.__r.__words[2]) < 0)
          {
LABEL_24:
            v8->__r_.__value_.__l.__size_ = v16;
            v14->__r_.__value_.__s.__data_[v16] = 0;
            if (!size) {
              goto LABEL_40;
            }
            goto LABEL_25;
          }
LABEL_18:
          *((unsigned char *)&v8->__r_.__value_.__s + 23) = v16 & 0x7F;
          v14->__r_.__value_.__s.__data_[v16] = 0;
          if (!size) {
            goto LABEL_40;
          }
LABEL_25:
          size_t v18 = (char *)v14 + v9;
          if (size < 8)
          {
            uint64_t v19 = p_p;
            goto LABEL_39;
          }
          uint64_t v19 = p_p;
          if ((unint64_t)((char *)v14 + v9 - (char *)p_p) >= 0x20)
          {
            if (size < 0x20)
            {
              unint64_t v20 = 0;
              goto LABEL_34;
            }
            unint64_t v20 = size & 0xFFFFFFFFFFFFFFE0;
            uint64_t v21 = &p_p->__r_.__value_.__r.__words[2];
            size_t v22 = (_OWORD *)((char *)&v14->__r_.__value_.__r.__words[2] + v9);
            unint64_t v23 = size & 0xFFFFFFFFFFFFFFE0;
            do
            {
              long long v24 = *(_OWORD *)v21;
              *(v22 - 1) = *((_OWORD *)v21 - 1);
              *size_t v22 = v24;
              v21 += 4;
              v22 += 2;
              v23 -= 32;
            }
            while (v23);
            if (size == v20) {
              goto LABEL_40;
            }
            if ((size & 0x18) != 0)
            {
LABEL_34:
              v18 += size & 0xFFFFFFFFFFFFFFF8;
              uint64_t v19 = (std::string *)((char *)p_p + (size & 0xFFFFFFFFFFFFFFF8));
              uint64_t v25 = (uint64_t *)((char *)p_p + v20);
              uint64_t v26 = (std::string::size_type *)((char *)v14->__r_.__value_.__r.__words + v20 + v9);
              unint64_t v27 = v20 - (size & 0xFFFFFFFFFFFFFFF8);
              do
              {
                uint64_t v28 = *v25++;
                *v26++ = v28;
                v27 += 8;
              }
              while (v27);
              if (size != (size & 0xFFFFFFFFFFFFFFF8)) {
                goto LABEL_39;
              }
LABEL_40:
              if (SHIBYTE(v8->__r_.__value_.__r.__words[2]) < 0)
              {
                std::string::size_type v17 = v8->__r_.__value_.__r.__words[0] + v9;
                if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                  return v17;
                }
              }
              else
              {
                std::string::size_type v17 = (std::string::size_type)v8 + v9;
                if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                  return v17;
                }
              }
              operator delete(__p.__r_.__value_.__l.__data_);
              return v17;
            }
            uint64_t v19 = (std::string *)((char *)p_p + v20);
            v18 += v20;
          }
          do
          {
LABEL_39:
            std::string::value_type v29 = v19->__r_.__value_.__s.__data_[0];
            uint64_t v19 = (std::string *)((char *)v19 + 1);
            *v18++ = v29;
          }
          while (v19 != (std::string *)((char *)p_p + size));
          goto LABEL_40;
        }
LABEL_23:
        memmove((char *)v14 + v9 + a7, (char *)v14 + v9, v15);
        std::string::size_type v16 = v12 + a7;
        if (SHIBYTE(v8->__r_.__value_.__r.__words[2]) < 0) {
          goto LABEL_24;
        }
        goto LABEL_18;
      }
    }
    else
    {
      std::string::size_type v12 = HIBYTE(v8->__r_.__value_.__r.__words[2]);
      std::string::size_type v13 = 22;
      uint64_t v14 = v8;
      if (22 - v12 >= a7)
      {
        size_t v15 = v12 - v9;
        if (v12 == v9) {
          goto LABEL_14;
        }
        goto LABEL_23;
      }
    }
    std::string::__grow_by(v8, v13, v12 + a7 - v13, v12, v9, 0, a7);
    v8->__r_.__value_.__l.__size_ = v12 + a7;
    uint64_t v14 = (std::string *)v8->__r_.__value_.__r.__words[0];
    std::string::size_type v16 = v12 + a7;
    if (SHIBYTE(v8->__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_24;
    }
    goto LABEL_18;
  }
  std::string::size_type v9 = a2 - a1->__r_.__value_.__r.__words[0];
  if (a7) {
    goto LABEL_5;
  }
  unint64_t v8 = (std::string *)a1->__r_.__value_.__r.__words[0];
  return (std::string::size_type)v8 + v9;
}

void sub_100194EEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100194F08(std::string *this, void *a2, std::string::value_type *a3, uint64_t a4, std::string::value_type *a5)
{
  *(_OWORD *)&this->__r_.__value_.__l.__data_ = 0uLL;
  this->__r_.__value_.__r.__words[2] = 0;
  if (a3 != a5)
  {
    unint64_t v6 = a3;
    do
    {
      std::string::push_back(this, *v6++);
      if (&v6[-*a2] == (std::string::value_type *)4096)
      {
        std::string::size_type v9 = (std::string::value_type *)a2[1];
        ++a2;
        unint64_t v6 = v9;
      }
    }
    while (v6 != a5);
  }
}

void sub_100194F80(void *a1)
{
  __cxa_begin_catch(a1);
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  __cxa_rethrow();
}

void sub_100194F9C(_Unwind_Exception *a1)
{
}

uint64_t sub_100194FB0(uint64_t a1)
{
  unint64_t v2 = *(void ***)(a1 + 8);
  uint64_t v3 = *(void ***)(a1 + 16);
  *(void *)(a1 + 40) = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = *(void ***)(a1 + 16);
      unint64_t v2 = (void **)(*(void *)(a1 + 8) + 8);
      *(void *)(a1 + 8) = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 2048;
    goto LABEL_7;
  }
  if (v5 == 2)
  {
    uint64_t v6 = 4096;
LABEL_7:
    *(void *)(a1 + 32) = v6;
  }
  if (v2 != v3)
  {
    do
    {
      unint64_t v7 = *v2++;
      operator delete(v7);
    }
    while (v2 != v3);
    uint64_t v9 = *(void *)(a1 + 8);
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8 != v9) {
      *(void *)(a1 + 16) = v8 + ((v9 - v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    }
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_100195078(std::string *a1, uint64_t *a2, char *a3, char *a4, std::string *a5, std::string *a6, char *a7, char *a8)
{
  uint64_t v8 = a6;
  long long v44 = 0u;
  long long v45 = 0u;
  *(_OWORD *)std::string __p = 0u;
  std::string::size_type size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) == 0) {
    uint64_t v11 = a1;
  }
  else {
    uint64_t v11 = (std::string *)a1->__r_.__value_.__r.__words[0];
  }
  if (a5 == (unsigned char *)a6)
  {
    if ((size & 0x80u) != 0) {
      std::string::size_type size = a1->__r_.__value_.__l.__size_;
    }
    uint64_t v19 = v11;
    size_t v18 = v11;
  }
  else
  {
    uint64_t v14 = (std::string *)a5;
    size_t v18 = v11;
    uint64_t v19 = v11;
    while (1)
    {
      size_t v18 = (std::string *)sub_100192658((int)&v46, (int64x2_t *)__p, (int)a1, v18, v19, v14);
      unint64_t v20 = (char *)__p[1] + 8 * (((void)v45 + *((void *)&v45 + 1)) >> 12);
      if ((void *)v44 == __p[1]) {
        uint64_t v21 = 0;
      }
      else {
        uint64_t v21 = *(void *)v20 + (((_WORD)v45 + WORD4(v45)) & 0xFFF);
      }
      sub_1001953EC((int64x2_t *)__p, v20, v21, a7, a8, a8 - a7);
      std::string::size_type size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
      if ((size & 0x80u) == 0) {
        uint64_t v11 = a1;
      }
      else {
        uint64_t v11 = (std::string *)a1->__r_.__value_.__r.__words[0];
      }
      if ((size & 0x80u) != 0) {
        std::string::size_type size = a1->__r_.__value_.__l.__size_;
      }
      size_t v22 = (char *)v11 + size;
      if (v8 == (std::string *)((char *)v11 + size)) {
        break;
      }
      uint64_t v23 = *a2;
      uint64_t v24 = a2[1];
      if (*a2 == v24) {
        break;
      }
      uint64_t v14 = v8;
      while (1)
      {
        uint64_t v25 = 0;
        do
        {
          if (v14->__r_.__value_.__s.__data_[v25] != *(unsigned __int8 *)(v23 + v25)) {
            break;
          }
          if ((char *)v14 + ++v25 == v22) {
            break;
          }
        }
        while (v25 + v23 != v24);
        uint64_t v26 = v23 + v25;
        unint64_t v27 = (std::string *)((char *)v14 + v25);
        if (v26 == v24) {
          break;
        }
        uint64_t v14 = (std::string *)((char *)v14 + 1);
        if (v14 == (std::string *)v22) {
          goto LABEL_27;
        }
      }
      uint64_t v19 = v8;
      uint64_t v8 = v27;
      if (v14 == v27) {
        goto LABEL_31;
      }
      a8 = a4;
      a7 = a3;
    }
LABEL_27:
    uint64_t v19 = v8;
  }
LABEL_31:
  uint64_t v28 = sub_100192658((int)&v46, (int64x2_t *)__p, (int)a1, v18, v19, (unsigned char *)v11 + size);
  std::string::size_type v29 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  if ((v29 & 0x80u) == 0) {
    std::string::size_type v30 = (std::string::size_type)a1;
  }
  else {
    std::string::size_type v30 = a1->__r_.__value_.__r.__words[0];
  }
  if ((v29 & 0x80u) != 0) {
    std::string::size_type v29 = a1->__r_.__value_.__l.__size_;
  }
  uint64_t v31 = v30 + v29;
  if (!*((void *)&v45 + 1))
  {
    std::string::erase(a1, (std::string::size_type)&v28[-v30], v31 - (void)v28);
    goto LABEL_44;
  }
  uint64_t v32 = (char *)__p[1] + 8 * ((unint64_t)v45 >> 12);
  if ((void *)v44 == __p[1])
  {
    size_t v33 = 0;
    uint64_t v35 = 0;
    uint64_t v34 = (char *)__p[1] + 8 * (((void)v45 + *((void *)&v45 + 1)) >> 12);
    goto LABEL_42;
  }
  size_t v33 = (std::string::value_type *)(*(void *)v32 + (v45 & 0xFFF));
  uint64_t v34 = (char *)__p[1] + 8 * (((void)v45 + *((void *)&v45 + 1)) >> 12);
  uint64_t v35 = (std::string::value_type *)(*(void *)v34 + ((v45 + *((void *)&v45 + 1)) & 0xFFF));
  if (v35 == v33)
  {
LABEL_42:
    std::string::size_type v36 = 0;
    goto LABEL_43;
  }
  std::string::size_type v36 = &v35[512 * (v34 - v32)] - &v33[*(void *)v34] + *(void *)v32;
LABEL_43:
  sub_100194C80(a1, v31, v32, v33, (uint64_t)v34, v35, v36);
LABEL_44:
  uint64_t v37 = (void **)__p[1];
  size_t v38 = (void **)v44;
  *((void *)&v45 + 1) = 0;
  unint64_t v39 = v44 - (unint64_t)__p[1];
  if ((unint64_t)v44 - (unint64_t)__p[1] >= 0x11)
  {
    do
    {
      operator delete(*v37);
      size_t v38 = (void **)v44;
      uint64_t v37 = (void **)((char *)__p[1] + 8);
      __p[1] = v37;
      unint64_t v39 = v44 - (void)v37;
    }
    while ((void)v44 - (void)v37 > 0x10uLL);
  }
  unint64_t v40 = v39 >> 3;
  if (v40 == 1)
  {
    uint64_t v41 = 2048;
    goto LABEL_50;
  }
  if (v40 == 2)
  {
    uint64_t v41 = 4096;
LABEL_50:
    *(void *)&long long v45 = v41;
  }
  if (v37 != v38)
  {
    do
    {
      unint64_t v42 = *v37++;
      operator delete(v42);
    }
    while (v37 != v38);
    if ((void *)v44 != __p[1]) {
      *(void *)&long long v44 = v44 + (((unint64_t)__p[1] - v44 + 7) & 0xFFFFFFFFFFFFFFF8);
    }
  }
  if (__p[0]) {
    operator delete(__p[0]);
  }
}

void sub_10019539C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001953B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001953C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001953D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *sub_1001953EC(int64x2_t *a1, char *a2, uint64_t a3, char *__src, char *a5, unint64_t a6)
{
  unint64_t v6 = a6;
  unint64_t v10 = a1[2].u64[0];
  unint64_t v11 = v10 >> 12;
  uint64_t v12 = a1->i64[1];
  uint64_t v13 = a1[1].i64[0];
  uint64_t v14 = (char *)(v12 + 8 * (v10 >> 12));
  if (v13 == v12)
  {
    uint64_t v15 = 0;
    if (a3)
    {
LABEL_3:
      unint64_t v16 = a3 + ((a2 - v14) << 9) - (v15 + *(void *)a2) + *(void *)v14;
      uint64_t v17 = a1[2].i64[1];
      if (v16 < v17 - v16) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v15 = *(void *)v14 + (a1[2].i64[0] & 0xFFF);
    if (a3 != v15) {
      goto LABEL_3;
    }
  }
  unint64_t v16 = 0;
  uint64_t v17 = a1[2].i64[1];
  if (v17)
  {
LABEL_4:
    if (a6 > v10)
    {
      sub_10019375C((uint64_t)a1, a6 - v10);
      unint64_t v10 = a1[2].u64[0];
      uint64_t v12 = a1->i64[1];
      uint64_t v13 = a1[1].i64[0];
      unint64_t v11 = v10 >> 12;
    }
    size_t v18 = (const void **)(v12 + 8 * v11);
    if (v13 == v12)
    {
      uint64_t v19 = 0;
      unint64_t v20 = v6 - v16;
      if (v6 > v16)
      {
LABEL_8:
        uint64_t v21 = &__src[v20];
        if (v16 < v6 >> 1) {
          uint64_t v21 = &a5[-v16];
        }
        if (v21 == __src)
        {
          uint64_t v24 = v19;
          uint64_t v23 = v18;
          unint64_t v6 = v16;
          if (!v16) {
            goto LABEL_99;
          }
        }
        else
        {
          size_t v22 = v21;
          uint64_t v23 = v18;
          uint64_t v24 = v19;
          do
          {
            if (v24 == *v23)
            {
              uint64_t v26 = (uint64_t)*--v23;
              uint64_t v24 = (unsigned char *)(v26 + 4096);
            }
            char v25 = *--v22;
            *--uint64_t v24 = v25;
            a1[2] = vaddq_s64(a1[2], (int64x2_t)xmmword_1003F1870);
          }
          while (v22 != __src);
          __src = v21;
          unint64_t v6 = v16;
          if (!v16) {
            goto LABEL_99;
          }
        }
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v19 = (char *)*v18 + (v10 & 0xFFF);
      unint64_t v20 = v6 - v16;
      if (v6 > v16) {
        goto LABEL_8;
      }
    }
    uint64_t v24 = v19;
    uint64_t v23 = v18;
    if (!v6) {
      goto LABEL_99;
    }
LABEL_42:
    uint64_t v40 = v19 - (unsigned char *)*v18 + v6;
    if (v40 < 1)
    {
      uint64_t v41 = &v18[-((unint64_t)(4095 - v40) >> 12)];
      unint64_t v42 = (char *)*v41 + (~(4095 - (_WORD)v40) & 0xFFF);
      if (v42 == v19) {
        goto LABEL_53;
      }
    }
    else
    {
      uint64_t v41 = &v18[(unint64_t)v40 >> 12];
      unint64_t v42 = (char *)*v41 + (v40 & 0xFFF);
      if (v42 == v19)
      {
LABEL_53:
        if (v6 < v16)
        {
          uint64_t v48 = v19 - (unsigned char *)*v18 + v16;
          if (v48 < 1)
          {
            unint64_t v62 = 4095 - v48;
            long long v49 = &v18[-(v62 >> 12)];
            uint64_t v50 = (char *)*v49 + (~(_WORD)v62 & 0xFFF);
          }
          else
          {
            long long v49 = &v18[(unint64_t)v48 >> 12];
            uint64_t v50 = (char *)*v49 + (v48 & 0xFFF);
          }
          uint64_t v79 = v18;
          uint64_t v80 = v19;
          sub_1001947B8(v41, v42, v49, v50, (uint64_t)&v79);
          size_t v18 = v79;
          uint64_t v19 = v80;
        }
        if (__src != a5)
        {
          unint64_t v64 = *v18;
          uint64_t v63 = (void **)(v18 + 1);
          uint64_t v65 = v64 - v19 + 4096;
          if (a5 - __src >= v65) {
            size_t v66 = v65;
          }
          else {
            size_t v66 = a5 - __src;
          }
          if (v66) {
LABEL_78:
          }
            memmove(v19, __src, v66);
          while (1)
          {
            __src += v66;
            if (__src == a5) {
              break;
            }
            long long v67 = *v63++;
            uint64_t v19 = v67;
            if (a5 - __src >= 4096) {
              size_t v66 = 4096;
            }
            else {
              size_t v66 = a5 - __src;
            }
            if (v66) {
              goto LABEL_78;
            }
          }
        }
        goto LABEL_99;
      }
    }
    uint64_t v43 = v41;
    long long v44 = v42;
    while (1)
    {
      if (v24 == *v23)
      {
        uint64_t v46 = (uint64_t)*--v23;
        uint64_t v24 = (unsigned char *)(v46 + 4096);
        if (v44 == *v43)
        {
LABEL_52:
          uint64_t v47 = (uint64_t)*--v43;
          long long v44 = (unsigned char *)(v47 + 4096);
        }
      }
      else if (v44 == *v43)
      {
        goto LABEL_52;
      }
      char v45 = *--v44;
      *--uint64_t v24 = v45;
      a1[2] = vaddq_s64(a1[2], (int64x2_t)xmmword_1003F1870);
      if (v44 == v19) {
        goto LABEL_53;
      }
    }
  }
LABEL_17:
  uint64_t v27 = ((v13 - v12) << 9) - 1;
  if (v13 == v12) {
    uint64_t v27 = 0;
  }
  unint64_t v28 = v10 + v17;
  unint64_t v29 = v27 - v28;
  if (a6 > v29)
  {
    sub_100193E4C((uint64_t)a1, a6 - v29);
    uint64_t v17 = a1[2].i64[1];
    uint64_t v12 = a1->i64[1];
    uint64_t v13 = a1[1].i64[0];
    unint64_t v28 = a1[2].i64[0] + v17;
  }
  std::string::size_type v30 = (const void **)(v12 + 8 * (v28 >> 12));
  if (v13 != v12)
  {
    uint64_t v31 = (char *)*v30 + (v28 & 0xFFF);
    unint64_t v32 = v17 - v16;
    unint64_t v33 = v17 - v16 - v6;
    if (v17 - v16 < v6) {
      goto LABEL_23;
    }
LABEL_35:
    size_t v38 = v31;
    uint64_t v37 = v30;
    if (!v6) {
      goto LABEL_99;
    }
    goto LABEL_57;
  }
  uint64_t v31 = 0;
  unint64_t v32 = v17 - v16;
  unint64_t v33 = v17 - v16 - v6;
  if (v17 - v16 >= v6) {
    goto LABEL_35;
  }
LABEL_23:
  uint64_t v34 = &a5[v33];
  if (v32 >= v6 >> 1) {
    uint64_t v35 = v34;
  }
  else {
    uint64_t v35 = &__src[v32];
  }
  if (v35 == a5)
  {
    size_t v38 = v31;
    uint64_t v37 = v30;
    unint64_t v6 = v32;
    if (!v32) {
      goto LABEL_99;
    }
  }
  else
  {
    std::string::size_type v36 = v35;
    uint64_t v37 = v30;
    size_t v38 = v31;
    do
    {
      *v38++ = *v36;
      if (&v38[-*v37] == (char *)4096)
      {
        unint64_t v39 = (char *)v37[1];
        ++v37;
        size_t v38 = v39;
      }
      ++v36;
      ++a1[2].i64[1];
    }
    while (v36 != a5);
    a5 = v35;
    unint64_t v6 = v32;
    if (!v32) {
      goto LABEL_99;
    }
  }
LABEL_57:
  uint64_t v51 = &v31[-v6] - (unsigned char *)*v30;
  if (v51 < 1)
  {
    unint64_t v54 = 4095 - v51;
    uint64_t v52 = &v30[-(v54 >> 12)];
    int v53 = (char *)*v52 + (~(_WORD)v54 & 0xFFF);
    if (v53 == v31) {
      goto LABEL_68;
    }
    goto LABEL_61;
  }
  uint64_t v52 = &v30[(unint64_t)v51 >> 12];
  int v53 = (char *)*v52 + (v51 & 0xFFF);
  if (v53 != v31)
  {
LABEL_61:
    unint64_t v55 = v52;
    int64_t v56 = v53;
    do
    {
      *v38++ = *v56;
      if (&v38[-*v37] == (char *)4096)
      {
        unint64_t v57 = (char *)v37[1];
        ++v37;
        size_t v38 = v57;
        if (&(++v56)[-*v55] == (char *)4096)
        {
LABEL_67:
          uint64_t v58 = (char *)v55[1];
          ++v55;
          int64_t v56 = v58;
        }
      }
      else if (&(++v56)[-*v55] == (char *)4096)
      {
        goto LABEL_67;
      }
      ++a1[2].i64[1];
    }
    while (v56 != v31);
  }
LABEL_68:
  if (v6 < v32)
  {
    uint64_t v59 = v31 - ((unsigned char *)*v30 + v32);
    if (v59 < 1)
    {
      unint64_t v68 = 4095 - v59;
      uint64_t v60 = &v30[-(v68 >> 12)];
      uint64_t v61 = (char *)*v60 + (~(_WORD)v68 & 0xFFF);
    }
    else
    {
      uint64_t v60 = &v30[(unint64_t)v59 >> 12];
      uint64_t v61 = (char *)*v60 + (v59 & 0xFFF);
    }
    sub_100194A7C(v60, v61, v52, v53, v30, v31, &v79);
    std::string::size_type v30 = v81;
    uint64_t v31 = v82;
  }
  if (a5 != __src)
  {
    uint64_t v70 = *v30;
    unint64_t v69 = v30 - 1;
    size_t v71 = v31 - v70;
    if (a5 - __src >= v31 - v70) {
      size_t v72 = v71;
    }
    else {
      size_t v72 = a5 - __src;
    }
    uint64_t v73 = &a5[-v72];
    if (v72) {
LABEL_92:
    }
      memmove(&v31[-v72], v73, v72);
    while (v73 != __src)
    {
      uint64_t v74 = (uint64_t)*v69--;
      uint64_t v31 = (char *)(v74 + 4096);
      if (v73 - __src >= 4096) {
        size_t v72 = 4096;
      }
      else {
        size_t v72 = v73 - __src;
      }
      v73 -= v72;
      if (v72) {
        goto LABEL_92;
      }
    }
  }
LABEL_99:
  uint64_t v75 = a1->i64[1];
  uint64_t result = (void *)(v75 + 8 * ((unint64_t)a1[2].i64[0] >> 12));
  if (a1[1].i64[0] == v75)
  {
    uint64_t v77 = 0;
    if (!v16) {
      return result;
    }
  }
  else
  {
    uint64_t v77 = *result + (a1[2].i64[0] & 0xFFF);
    if (!v16) {
      return result;
    }
  }
  uint64_t v78 = v77 - *result + v16;
  if (v78 < 1) {
    result -= (unint64_t)(4095 - v78) >> 12;
  }
  else {
    result += (unint64_t)v78 >> 12;
  }
  return result;
}

uint64_t sub_100195A4C(uint64_t a1, int a2)
{
  sub_1000CD96C((uint64_t)v12);
  uint64_t v3 = *(void *)(v12[0] - 24);
  unint64_t v4 = std::locale::classic();
  std::ios_base::getloc((const std::ios_base *)((char *)v12 + v3));
  std::ios_base::imbue((std::ios_base *)((char *)v12 + v3), v4);
  std::locale::~locale(&v15);
  unint64_t v5 = *(std::locale **)((char *)&v12[5] + v3);
  if (v5)
  {
    (*((void (**)(std::locale *, const std::locale *))v5->__locale_ + 2))(v5, v4);
    unint64_t v6 = v5 + 1;
    std::locale::locale(&v14, v6);
    std::locale::operator=(v6, v4);
    std::locale::~locale(&v14);
  }
  std::locale::~locale(&v11);
  uint64_t v7 = v12[0];
  *(void *)((char *)&v12[3] + *(void *)(v12[0] - 24)) = a2;
  uint64_t v8 = (char *)v12 + *(void *)(v7 - 24);
  if (*((_DWORD *)v8 + 36) == -1)
  {
    std::ios_base::getloc((const std::ios_base *)((char *)v12 + *(void *)(v7 - 24)));
    uint64_t v9 = std::locale::use_facet(&v15, &std::ctype<char>::id);
    ((void (*)(const std::locale::facet *, uint64_t))v9->__vftable[2].~facet_0)(v9, 32);
    std::locale::~locale(&v15);
  }
  *((_DWORD *)v8 + 36) = 48;
  std::ostream::operator<<();
  std::stringbuf::str();
  if (v13 < 0) {
    operator delete((void *)v12[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_100195CF4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100195D08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::locale::~locale((std::locale *)(v2 - 72));
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100195D24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
}

void sub_100195D40(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100195D54(std::string *a1, uint64_t *a2, std::string *a3, std::string *a4)
{
  long long v36 = 0u;
  long long v37 = 0u;
  *(_OWORD *)std::string __p = 0u;
  std::string::size_type size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) == 0) {
    unint64_t v6 = a1;
  }
  else {
    unint64_t v6 = (std::string *)a1->__r_.__value_.__r.__words[0];
  }
  if (a3 == (unsigned char *)a4)
  {
    if ((size & 0x80u) != 0) {
      std::string::size_type size = a1->__r_.__value_.__l.__size_;
    }
    std::locale v11 = v6;
    unint64_t v10 = v6;
  }
  else
  {
    uint64_t v7 = a4;
    uint64_t v8 = (std::string *)a3;
    unint64_t v10 = v6;
    std::locale v11 = v6;
    while (1)
    {
      unint64_t v10 = (std::string *)sub_100192658((int)&v38, (int64x2_t *)__p, (int)a1, v10, v11, v8);
      uint64_t v12 = (char *)__p[1] + 8 * (((void)v37 + *((void *)&v37 + 1)) >> 12);
      if ((void *)v36 == __p[1]) {
        uint64_t v13 = 0;
      }
      else {
        uint64_t v13 = *(void *)v12 + (((_WORD)v37 + WORD4(v37)) & 0xFFF);
      }
      sub_1001953EC((int64x2_t *)__p, v12, v13, 0, 0, 0);
      std::string::size_type size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
      if ((size & 0x80u) == 0) {
        unint64_t v6 = a1;
      }
      else {
        unint64_t v6 = (std::string *)a1->__r_.__value_.__r.__words[0];
      }
      if ((size & 0x80u) != 0) {
        std::string::size_type size = a1->__r_.__value_.__l.__size_;
      }
      std::locale v14 = (char *)v6 + size;
      if (v7 == (std::string *)((char *)v6 + size)) {
        break;
      }
      uint64_t v15 = *a2;
      uint64_t v16 = a2[1];
      if (*a2 == v16) {
        break;
      }
      uint64_t v8 = v7;
      while (1)
      {
        uint64_t v17 = 0;
        do
        {
          if (v8->__r_.__value_.__s.__data_[v17] != *(unsigned __int8 *)(v15 + v17)) {
            break;
          }
          if ((char *)v8 + ++v17 == v14) {
            break;
          }
        }
        while (v17 + v15 != v16);
        uint64_t v18 = v15 + v17;
        uint64_t v19 = (std::string *)((char *)v8 + v17);
        if (v18 == v16) {
          break;
        }
        uint64_t v8 = (std::string *)((char *)v8 + 1);
        if (v8 == (std::string *)v14) {
          goto LABEL_26;
        }
      }
      std::locale v11 = v7;
      uint64_t v7 = v19;
      if (v8 == v19) {
        goto LABEL_30;
      }
    }
LABEL_26:
    std::locale v11 = v7;
  }
LABEL_30:
  unint64_t v20 = sub_100192658((int)&v38, (int64x2_t *)__p, (int)a1, v10, v11, (unsigned char *)v6 + size);
  std::string::size_type v21 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  if ((v21 & 0x80u) == 0) {
    std::string::size_type v22 = (std::string::size_type)a1;
  }
  else {
    std::string::size_type v22 = a1->__r_.__value_.__r.__words[0];
  }
  if ((v21 & 0x80u) != 0) {
    std::string::size_type v21 = a1->__r_.__value_.__l.__size_;
  }
  uint64_t v23 = v22 + v21;
  if (!*((void *)&v37 + 1))
  {
    std::string::erase(a1, (std::string::size_type)&v20[-v22], v23 - (void)v20);
    goto LABEL_43;
  }
  uint64_t v24 = (char *)__p[1] + 8 * ((unint64_t)v37 >> 12);
  if ((void *)v36 == __p[1])
  {
    char v25 = 0;
    uint64_t v27 = 0;
    uint64_t v26 = (char *)__p[1] + 8 * (((void)v37 + *((void *)&v37 + 1)) >> 12);
    goto LABEL_41;
  }
  char v25 = (std::string::value_type *)(*(void *)v24 + (v37 & 0xFFF));
  uint64_t v26 = (char *)__p[1] + 8 * (((void)v37 + *((void *)&v37 + 1)) >> 12);
  uint64_t v27 = (std::string::value_type *)(*(void *)v26 + ((v37 + *((void *)&v37 + 1)) & 0xFFF));
  if (v27 == v25)
  {
LABEL_41:
    std::string::size_type v28 = 0;
    goto LABEL_42;
  }
  std::string::size_type v28 = &v27[512 * (v26 - v24)] - &v25[*(void *)v26] + *(void *)v24;
LABEL_42:
  sub_100194C80(a1, v23, v24, v25, (uint64_t)v26, v27, v28);
LABEL_43:
  unint64_t v29 = (void **)__p[1];
  std::string::size_type v30 = (void **)v36;
  *((void *)&v37 + 1) = 0;
  unint64_t v31 = v36 - (unint64_t)__p[1];
  if ((unint64_t)v36 - (unint64_t)__p[1] >= 0x11)
  {
    do
    {
      operator delete(*v29);
      std::string::size_type v30 = (void **)v36;
      unint64_t v29 = (void **)((char *)__p[1] + 8);
      __p[1] = v29;
      unint64_t v31 = v36 - (void)v29;
    }
    while ((void)v36 - (void)v29 > 0x10uLL);
  }
  unint64_t v32 = v31 >> 3;
  if (v32 == 1)
  {
    uint64_t v33 = 2048;
    goto LABEL_49;
  }
  if (v32 == 2)
  {
    uint64_t v33 = 4096;
LABEL_49:
    *(void *)&long long v37 = v33;
  }
  if (v29 != v30)
  {
    do
    {
      uint64_t v34 = *v29++;
      operator delete(v34);
    }
    while (v29 != v30);
    if ((void *)v36 != __p[1]) {
      *(void *)&long long v36 = v36 + (((unint64_t)__p[1] - v36 + 7) & 0xFFFFFFFFFFFFFFF8);
    }
  }
  if (__p[0]) {
    operator delete(__p[0]);
  }
}

void sub_100196050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100196064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100196078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10019608C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001960A0(std::string *a1, uint64_t *a2, std::string *a3, std::string *a4)
{
  long long v36 = 0u;
  long long v37 = 0u;
  *(_OWORD *)std::string __p = 0u;
  std::string::size_type size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) == 0) {
    unint64_t v6 = a1;
  }
  else {
    unint64_t v6 = (std::string *)a1->__r_.__value_.__r.__words[0];
  }
  if (a3 == (unsigned char *)a4)
  {
    if ((size & 0x80u) != 0) {
      std::string::size_type size = a1->__r_.__value_.__l.__size_;
    }
    std::locale v11 = v6;
    unint64_t v10 = v6;
  }
  else
  {
    uint64_t v7 = a4;
    uint64_t v8 = (std::string *)a3;
    unint64_t v10 = v6;
    std::locale v11 = v6;
    while (1)
    {
      unint64_t v10 = (std::string *)sub_100192658((int)&v38, (int64x2_t *)__p, (int)a1, v10, v11, v8);
      uint64_t v12 = (char *)__p[1] + 8 * (((void)v37 + *((void *)&v37 + 1)) >> 12);
      if ((void *)v36 == __p[1]) {
        uint64_t v13 = 0;
      }
      else {
        uint64_t v13 = *(void *)v12 + (((_WORD)v37 + WORD4(v37)) & 0xFFF);
      }
      sub_1001953EC((int64x2_t *)__p, v12, v13, 0, 0, 0);
      std::string::size_type size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
      if ((size & 0x80u) == 0) {
        unint64_t v6 = a1;
      }
      else {
        unint64_t v6 = (std::string *)a1->__r_.__value_.__r.__words[0];
      }
      if ((size & 0x80u) != 0) {
        std::string::size_type size = a1->__r_.__value_.__l.__size_;
      }
      std::locale v14 = (char *)v6 + size;
      if (v7 == (std::string *)((char *)v6 + size)) {
        break;
      }
      uint64_t v15 = *a2;
      uint64_t v16 = a2[1];
      if (*a2 == v16) {
        break;
      }
      uint64_t v8 = v7;
      while (1)
      {
        uint64_t v17 = 0;
        do
        {
          if (v8->__r_.__value_.__s.__data_[v17] != *(unsigned __int8 *)(v15 + v17)) {
            break;
          }
          if ((char *)v8 + ++v17 == v14) {
            break;
          }
        }
        while (v17 + v15 != v16);
        uint64_t v18 = v15 + v17;
        uint64_t v19 = (std::string *)((char *)v8 + v17);
        if (v18 == v16) {
          break;
        }
        uint64_t v8 = (std::string *)((char *)v8 + 1);
        if (v8 == (std::string *)v14) {
          goto LABEL_26;
        }
      }
      std::locale v11 = v7;
      uint64_t v7 = v19;
      if (v8 == v19) {
        goto LABEL_30;
      }
    }
LABEL_26:
    std::locale v11 = v7;
  }
LABEL_30:
  unint64_t v20 = sub_100192658((int)&v38, (int64x2_t *)__p, (int)a1, v10, v11, (unsigned char *)v6 + size);
  std::string::size_type v21 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  if ((v21 & 0x80u) == 0) {
    std::string::size_type v22 = (std::string::size_type)a1;
  }
  else {
    std::string::size_type v22 = a1->__r_.__value_.__r.__words[0];
  }
  if ((v21 & 0x80u) != 0) {
    std::string::size_type v21 = a1->__r_.__value_.__l.__size_;
  }
  uint64_t v23 = v22 + v21;
  if (!*((void *)&v37 + 1))
  {
    std::string::erase(a1, (std::string::size_type)&v20[-v22], v23 - (void)v20);
    goto LABEL_43;
  }
  uint64_t v24 = (char *)__p[1] + 8 * ((unint64_t)v37 >> 12);
  if ((void *)v36 == __p[1])
  {
    char v25 = 0;
    uint64_t v27 = 0;
    uint64_t v26 = (char *)__p[1] + 8 * (((void)v37 + *((void *)&v37 + 1)) >> 12);
    goto LABEL_41;
  }
  char v25 = (std::string::value_type *)(*(void *)v24 + (v37 & 0xFFF));
  uint64_t v26 = (char *)__p[1] + 8 * (((void)v37 + *((void *)&v37 + 1)) >> 12);
  uint64_t v27 = (std::string::value_type *)(*(void *)v26 + ((v37 + *((void *)&v37 + 1)) & 0xFFF));
  if (v27 == v25)
  {
LABEL_41:
    std::string::size_type v28 = 0;
    goto LABEL_42;
  }
  std::string::size_type v28 = &v27[512 * (v26 - v24)] - &v25[*(void *)v26] + *(void *)v24;
LABEL_42:
  sub_100194C80(a1, v23, v24, v25, (uint64_t)v26, v27, v28);
LABEL_43:
  unint64_t v29 = (void **)__p[1];
  std::string::size_type v30 = (void **)v36;
  *((void *)&v37 + 1) = 0;
  unint64_t v31 = v36 - (unint64_t)__p[1];
  if ((unint64_t)v36 - (unint64_t)__p[1] >= 0x11)
  {
    do
    {
      operator delete(*v29);
      std::string::size_type v30 = (void **)v36;
      unint64_t v29 = (void **)((char *)__p[1] + 8);
      __p[1] = v29;
      unint64_t v31 = v36 - (void)v29;
    }
    while ((void)v36 - (void)v29 > 0x10uLL);
  }
  unint64_t v32 = v31 >> 3;
  if (v32 == 1)
  {
    uint64_t v33 = 2048;
    goto LABEL_49;
  }
  if (v32 == 2)
  {
    uint64_t v33 = 4096;
LABEL_49:
    *(void *)&long long v37 = v33;
  }
  if (v29 != v30)
  {
    do
    {
      uint64_t v34 = *v29++;
      operator delete(v34);
    }
    while (v29 != v30);
    if ((void *)v36 != __p[1]) {
      *(void *)&long long v36 = v36 + (((unint64_t)__p[1] - v36 + 7) & 0xFFFFFFFFFFFFFFF8);
    }
  }
  if (__p[0]) {
    operator delete(__p[0]);
  }
}

void sub_10019639C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001963B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001963C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001963D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001963EC(const std::logic_error *a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100196448((uint64_t)exception, a1);
}

void sub_100196434(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100196448(uint64_t a1, const std::logic_error *a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), a2);
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = -1;
  *(void *)a1 = &off_10045D348;
  *(void *)(a1 + 8) = off_10045D378;
  *(void *)(a1 + 24) = off_10045D3A0;
  return a1;
}

uint64_t sub_1001964F4(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  return a1;
}

void sub_100196578()
{
}

void sub_1001966C4()
{
  std::out_of_range::~out_of_range(v0);
  operator delete();
}

void sub_1001966F0(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100196724(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100196A84((uint64_t)exception, a1);
}

void sub_10019676C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100196780(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));

  operator delete();
}

void sub_100196824(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(this);
}

void sub_1001968B0(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(this);

  operator delete();
}

void sub_100196958(std::out_of_range *a1)
{
  a1->__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(a1 - 1);
}

void sub_1001969E0(std::out_of_range *a1)
{
  a1->__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(a1 - 1);

  operator delete();
}

uint64_t sub_100196A84(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045D348;
  *(void *)(a1 + 8) = off_10045D378;
  *(void *)(a1 + 24) = off_10045D3A0;
  return a1;
}

void sub_100196BAC(_Unwind_Exception *a1)
{
  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_100196BC0()
{
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x20uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003E6DA0;
  strcpy(v1.__r_.__value_.__l.__data_, "Weekday is out of range 0..6");
  std::logic_error::logic_error(&v0, &v1);
  if (SHIBYTE(v1.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v1.__r_.__value_.__l.__data_);
  }
  v0.__vftable = (std::logic_error_vtbl *)&off_10045D498;
  sub_100196CA0(&v0);
}

void sub_100196C70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::out_of_range a10)
{
}

void sub_100196C84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100196CA0(const std::logic_error *a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100196D00((uint64_t)exception, a1);
}

void sub_100196CE8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100196D00(uint64_t a1, const std::logic_error *a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), a2);
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = -1;
  *(void *)a1 = &off_10045D420;
  *(void *)(a1 + 8) = off_10045D450;
  *(void *)(a1 + 24) = off_10045D478;
  return a1;
}

uint64_t sub_100196DAC(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  return a1;
}

void sub_100196E30()
{
}

void sub_100196F7C()
{
  std::out_of_range::~out_of_range(v0);
  operator delete();
}

void sub_100196FA8(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100196FDC(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100197374((uint64_t)exception, a1);
}

void sub_100197024(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100197038(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));

  operator delete();
}

void sub_1001970DC(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(this);
}

void sub_100197168(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(this);

  operator delete();
}

void sub_100197210(std::out_of_range *a1)
{
  a1->__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(a1 - 1);
}

void sub_100197298(std::out_of_range *a1)
{
  a1->__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(a1 - 1);

  operator delete();
}

void sub_10019733C(std::out_of_range *a1)
{
  std::out_of_range::~out_of_range(a1);

  operator delete();
}

uint64_t sub_100197374(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  *(void *)(a1 + 8) = &off_10045D498;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045D420;
  *(void *)(a1 + 8) = off_10045D450;
  *(void *)(a1 + 24) = off_10045D478;
  return a1;
}

void sub_10019749C(_Unwind_Exception *a1)
{
  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_1001974B0()
{
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003EE0F0;
  strcpy(v1.__r_.__value_.__l.__data_, "Day of year value is out of range 1..366");
  std::logic_error::logic_error(&v0, &v1);
  if (SHIBYTE(v1.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v1.__r_.__value_.__l.__data_);
  }
  v0.__vftable = (std::logic_error_vtbl *)&off_10045D598;
  sub_100197590(&v0);
}

void sub_100197560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::out_of_range a10)
{
}

void sub_100197574(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100197590(const std::logic_error *a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_1001975F0((uint64_t)exception, a1);
}

void sub_1001975D8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001975F0(uint64_t a1, const std::logic_error *a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), a2);
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = -1;
  *(void *)a1 = &off_10045D520;
  *(void *)(a1 + 8) = off_10045D550;
  *(void *)(a1 + 24) = off_10045D578;
  return a1;
}

uint64_t sub_10019769C(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));
  return a1;
}

void sub_100197720()
{
}

void sub_10019786C()
{
  std::out_of_range::~out_of_range(v0);
  operator delete();
}

void sub_100197898(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_1001978CC(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100197C64((uint64_t)exception, a1);
}

void sub_100197914(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100197928(uint64_t a1)
{
  *(void *)(a1 + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::out_of_range::~out_of_range((std::out_of_range *)(a1 + 8));

  operator delete();
}

void sub_1001979CC(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(this);
}

void sub_100197A58(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(this);

  operator delete();
}

void sub_100197B00(std::out_of_range *a1)
{
  a1->__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(a1 - 1);
}

void sub_100197B88(std::out_of_range *a1)
{
  a1->__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(a1 - 1);

  operator delete();
}

void sub_100197C2C(std::out_of_range *a1)
{
  std::out_of_range::~out_of_range(a1);

  operator delete();
}

uint64_t sub_100197C64(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  *(void *)(a1 + 8) = &off_10045D598;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_10045D520;
  *(void *)(a1 + 8) = off_10045D550;
  *(void *)(a1 + 24) = off_10045D578;
  return a1;
}

void sub_100197D8C(_Unwind_Exception *a1)
{
  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100197DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = boost::date_time::time_facet<boost::posix_time::ptime,char,std::ostreambuf_iterator<char>>::default_time_format;
  sub_1000144CC(v26, 1, (char *)asc_1003F1880, (const char *)&asc_1003F1880[1], (const char *)&asc_1003F1880[2], (const char *)&asc_1003F1880[3]);
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  sub_100014B6C((int)&v20, "not-a-date-time", "N5boost9date_time10time_facetINS_10posix_time5ptimeEcNSt3__119ostreambuf_iteratorIcNS4_11char_traitsIcEEEEEE", (uint64_t)&v23);
  sub_10009E96C((uint64_t)&__p);
  sub_100015124(a1, v4, (uint64_t)v26, (uint64_t *)&v23, (uint64_t *)&__p, a2);
  long long v5 = (void **)__p;
  if (__p)
  {
    unint64_t v6 = v22;
    uint64_t v7 = __p;
    if (v22 != __p)
    {
      do
      {
        if (*((char *)v6 - 1) < 0) {
          operator delete(*(v6 - 3));
        }
        v6 -= 3;
      }
      while (v6 != v5);
      uint64_t v7 = __p;
    }
    std::string::size_type v22 = v5;
    operator delete(v7);
  }
  uint64_t v8 = (void **)v23;
  if (v23)
  {
    uint64_t v9 = v24;
    unint64_t v10 = v23;
    if (v24 != v23)
    {
      do
      {
        if (*((char *)v9 - 1) < 0) {
          operator delete(*(v9 - 3));
        }
        v9 -= 3;
      }
      while (v9 != v8);
      unint64_t v10 = v23;
    }
    uint64_t v24 = v8;
    operator delete(v10);
  }
  if (v33 < 0)
  {
    operator delete(v32);
    if ((v31 & 0x80000000) == 0)
    {
LABEL_19:
      if ((v29 & 0x80000000) == 0) {
        goto LABEL_20;
      }
LABEL_34:
      operator delete(v28);
      if ((v27 & 0x80000000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_35;
    }
  }
  else if ((v31 & 0x80000000) == 0)
  {
    goto LABEL_19;
  }
  operator delete(v30);
  if (v29 < 0) {
    goto LABEL_34;
  }
LABEL_20:
  if ((v27 & 0x80000000) == 0) {
    goto LABEL_21;
  }
LABEL_35:
  operator delete(v26[1]);
LABEL_21:
  *(void *)a1 = off_10045D240;
  std::locale v11 = boost::date_time::time_facet<boost::posix_time::ptime,char,std::ostreambuf_iterator<char>>::duration_sign_negative_only[0];
  size_t v12 = strlen(boost::date_time::time_facet<boost::posix_time::ptime,char,std::ostreambuf_iterator<char>>::duration_sign_negative_only[0]);
  if (v12 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  std::string::size_type v13 = v12;
  if (v12 >= 0x17)
  {
    uint64_t v15 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v12 | 7) != 0x17) {
      uint64_t v15 = v12 | 7;
    }
    uint64_t v16 = v15 + 1;
    std::locale v14 = (std::string *)operator new(v15 + 1);
    v20.__r_.__value_.__l.__size_ = v13;
    v20.__r_.__value_.__r.__words[2] = v16 | 0x8000000000000000;
    v20.__r_.__value_.__r.__words[0] = (std::string::size_type)v14;
    goto LABEL_28;
  }
  *((unsigned char *)&v20.__r_.__value_.__s + 23) = v12;
  std::locale v14 = &v20;
  if (v12) {
LABEL_28:
  }
    memmove(v14, v11, v13);
  v14->__r_.__value_.__s.__data_[v13] = 0;
  uint64_t v17 = std::string::append(&v20, boost::date_time::time_facet<boost::posix_time::ptime,char,std::ostreambuf_iterator<char>>::default_time_duration_format[0]);
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  *(void *)(a1 + 352) = *((void *)&v17->__r_.__value_.__l + 2);
  *(_OWORD *)(a1 + 336) = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_10019802C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  if (a14 < 0)
  {
    operator delete(__p);
    sub_100003CA4(v21);
    _Unwind_Resume(a1);
  }
  sub_100003CA4(v21);
  _Unwind_Resume(a1);
}

uint64_t sub_1001980B4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001980CC()
{
  v0.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10047DC30, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10047DC30))
  {
    mach_timebase_info(&info);
    qword_10047DC28 = (uint64_t)info;
    __cxa_guard_release(&qword_10047DC30);
  }
  qword_10047DC10 = 1000 * v0.__d_.__rep_
                  - mach_absolute_time() * qword_10047DC28 / HIDWORD(qword_10047DC28);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10047DC30, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10047DC30))
  {
    mach_timebase_info(&info);
    qword_10047DC28 = (uint64_t)info;
    __cxa_guard_release(&qword_10047DC30);
  }
  qword_10047DC18 = mach_absolute_time() * qword_10047DC28 / HIDWORD(qword_10047DC28);
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10047DC40, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10047DC40))
  {
    mach_timebase_info(&info);
    qword_10047DC38 = (uint64_t)info;
    __cxa_guard_release(&qword_10047DC40);
  }
  uint64_t result = mach_continuous_time();
  qword_10047DC20 = result * qword_10047DC38 / HIDWORD(qword_10047DC38);
  return result;
}

void sub_100198208(_Unwind_Exception *a1)
{
}

void sub_100198220(_Unwind_Exception *a1)
{
}

void sub_100198238(_Unwind_Exception *a1)
{
}

uint64_t sub_100198250(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 8);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

uint64_t sub_1001982CC(const void ***a1, unsigned __int8 ***a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t v4 = *((unsigned __int8 *)*a1 + 23);
  if ((v4 & 0x80u) == 0) {
    long long v5 = (unsigned __int8 *)*((unsigned __int8 *)*a1 + 23);
  }
  else {
    long long v5 = (unsigned __int8 *)(*a1)[1];
  }
  unint64_t v6 = (unsigned __int8 *)*((unsigned __int8 *)v3 + 23);
  int v7 = (char)v6;
  if ((char)v6 < 0) {
    unint64_t v6 = v3[1];
  }
  if (v5 != v6) {
    return 1;
  }
  if (v7 >= 0) {
    uint64_t v8 = *a2;
  }
  else {
    uint64_t v8 = (unsigned __int8 **)*v3;
  }
  if ((v4 & 0x80) != 0) {
    return memcmp(*v2, v8, (size_t)(*a1)[1]) != 0;
  }
  if (!*((unsigned char *)*a1 + 23)) {
    return 0;
  }
  uint64_t v9 = v4 - 1;
  do
  {
    int v11 = *(unsigned __int8 *)v2;
    uint64_t v2 = (const void **)((char *)v2 + 1);
    int v10 = v11;
    int v12 = *(unsigned __int8 *)v8;
    uint64_t v8 = (unsigned __int8 **)((char *)v8 + 1);
    uint64_t result = v10 != v12;
  }
  while (v10 == v12 && v9-- != 0);
  return result;
}

void sub_10019837C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10045D5D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10019839C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10045D5D8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1001983F0()
{
  uint64_t v1 = "OffMap";
  sub_100085B74(&v1, &qword_10047ED40);
  return __cxa_atexit((void (*)(void *))sub_100198250, &qword_10047ED40, (void *)&_mh_execute_header);
}

void *sub_100198458(void *a1)
{
  *a1 = off_10045D628;
  sub_100075BE0((uint64_t)(a1 + 4), a1[5]);
  sub_100075BE0((uint64_t)(a1 + 1), a1[2]);
  return a1;
}

void sub_1001984AC(void *a1)
{
  *a1 = off_10045D628;
  sub_100075BE0((uint64_t)(a1 + 4), a1[5]);
  sub_100075BE0((uint64_t)(a1 + 1), a1[2]);

  operator delete();
}

void *sub_100198520(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"ParamOverrides(", 15);
  sub_10002986C(a1, (uint64_t)"paramOverridesClient=", 21);
  if (*(unsigned char *)(a2 + 56))
  {
    sub_100167B38((uint64_t *)(a2 + 8));
    if ((v12 & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    if ((v12 & 0x80u) == 0) {
      uint64_t v5 = v12;
    }
    else {
      uint64_t v5 = v11;
    }
    sub_10002986C(a1, (uint64_t)p_p, v5);
    if ((char)v12 < 0) {
      operator delete(__p);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  unint64_t v6 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v6, (uint64_t)"paramOverridesServer=", 21);
  if ((*(unsigned char *)(a2 + 56) & 2) != 0)
  {
    sub_100167B38((uint64_t *)(a2 + 32));
    if ((v12 & 0x80u) == 0) {
      int v7 = &__p;
    }
    else {
      int v7 = __p;
    }
    if ((v12 & 0x80u) == 0) {
      uint64_t v8 = v12;
    }
    else {
      uint64_t v8 = v11;
    }
    sub_10002986C(a1, (uint64_t)v7, v8);
    if ((char)v12 < 0) {
      operator delete(__p);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_100198674(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100198698(uint64_t a1)
{
  sub_100075DC4(a1);

  operator delete();
}

uint64_t sub_1001986D0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045D648;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  uint64_t v4 = (std::string *)(a1 + 56);
  uint64_t v16 = (std::string *)(a1 + 32);
  uint64_t v17 = a1 + 80;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = off_10045DCE8;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = off_10045DA38;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(unsigned char *)(a1 + 200) &= 0xFCu;
  *(_DWORD *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = off_10045DAF8;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = off_10045DAD8;
  *(void *)(a1 + 240) = off_10045DA98;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = 0;
  *(unsigned char *)(a1 + 264) &= 0xFCu;
  *(void *)(a1 + 272) = 0;
  *(unsigned char *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = 0;
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a1 + 296) & 0xF8 | 4;
  *(unsigned char *)(a1 + 304) &= 0xF8u;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 320) = 0;
  *(void *)(a1 + 328) = off_10045DA58;
  *(_OWORD *)(a1 + 336) = xmmword_1003F1C60;
  *(_OWORD *)(a1 + 352) = xmmword_1003F1C70;
  *(unsigned char *)(a1 + 368) |= 0xFu;
  *(void *)(a1 + 376) = off_10045DA58;
  *(_OWORD *)(a1 + 384) = xmmword_1003F1C60;
  *(_OWORD *)(a1 + 400) = xmmword_1003F1C70;
  *(unsigned char *)(a1 + 416) |= 0xFu;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  *(void *)(a1 + 456) = 0;
  *(void *)(a1 + 464) = off_10045DA98;
  *(void *)(a1 + 472) = 0;
  *(void *)(a1 + 480) = 0;
  *(unsigned char *)(a1 + 488) &= 0xFCu;
  *(void *)(a1 + 504) = 0;
  *(void *)(a1 + 512) = 0;
  *(void *)(a1 + 496) = off_10045DA98;
  *(unsigned char *)(a1 + 520) &= 0xFCu;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 560) = 0u;
  *(_OWORD *)(a1 + 528) = 0u;
  char v5 = *(unsigned char *)(a1 + 578);
  *(_WORD *)(a1 + 576) = 0;
  *(unsigned char *)(a1 + 578) = v5 & 0xFE;
  uint64_t v6 = a1 + 584;
  *(void *)(a1 + 584) = off_10045D7A8;
  *(void *)(a1 + 600) = 0;
  *(void *)(a1 + 592) = 0;
  *(void *)(a1 + 608) = 0;
  *(unsigned char *)(a1 + 616) &= ~1u;
  std::locale v14 = (std::string *)(a1 + 648);
  uint64_t v15 = (std::string *)(a1 + 624);
  std::string::size_type v13 = (std::string *)(a1 + 672);
  int v7 = (std::string *)(a1 + 696);
  uint64_t v8 = (std::string *)(a1 + 720);
  uint64_t v9 = (std::string *)(a1 + 744);
  int v10 = (std::string *)(a1 + 768);
  uint64_t v11 = (std::string *)(a1 + 792);
  *(_OWORD *)(a1 + 784) = 0u;
  *(_OWORD *)(a1 + 800) = 0u;
  *(_OWORD *)(a1 + 752) = 0u;
  *(_OWORD *)(a1 + 768) = 0u;
  *(_OWORD *)(a1 + 720) = 0u;
  *(_OWORD *)(a1 + 736) = 0u;
  *(_OWORD *)(a1 + 688) = 0u;
  *(_OWORD *)(a1 + 704) = 0u;
  *(_OWORD *)(a1 + 656) = 0u;
  *(_OWORD *)(a1 + 672) = 0u;
  *(_OWORD *)(a1 + 624) = 0u;
  *(_OWORD *)(a1 + 640) = 0u;
  *(_WORD *)(a1 + 816) &= 0xE000u;
  std::string::operator=((std::string *)(a1 + 8), (const std::string *)(a2 + 8));
  std::string::operator=(v16, (const std::string *)(a2 + 32));
  std::string::operator=(v4, (const std::string *)(a2 + 56));
  sub_10007B5A8(v17, a2 + 80);
  sub_10007B0D0(v6, a2 + 584);
  std::string::operator=(v15, (const std::string *)(a2 + 624));
  std::string::operator=(v14, (const std::string *)(a2 + 648));
  std::string::operator=(v13, (const std::string *)(a2 + 672));
  std::string::operator=(v7, (const std::string *)(a2 + 696));
  std::string::operator=(v8, (const std::string *)(a2 + 720));
  std::string::operator=(v9, (const std::string *)(a2 + 744));
  std::string::operator=(v10, (const std::string *)(a2 + 768));
  std::string::operator=(v11, (const std::string *)(a2 + 792));
  *(_WORD *)(a1 + 816) = *(_WORD *)(a2 + 816);
  return a1;
}

void sub_100198A7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10, void **a11, void **a12, void **a13, uint64_t a14)
{
  if (v14[815] < 0)
  {
    operator delete(*v22);
    if ((v14[791] & 0x80000000) == 0)
    {
LABEL_3:
      if ((v14[767] & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v14[791] & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v21);
  if ((v14[767] & 0x80000000) == 0)
  {
LABEL_4:
    if ((v14[743] & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(*v20);
  if ((v14[743] & 0x80000000) == 0)
  {
LABEL_5:
    if ((v14[719] & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(*v18);
  if ((v14[719] & 0x80000000) == 0)
  {
LABEL_6:
    if ((v14[695] & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(*v16);
  if ((v14[695] & 0x80000000) == 0)
  {
LABEL_7:
    if ((v14[671] & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(*a10);
  if ((v14[671] & 0x80000000) == 0)
  {
LABEL_8:
    if ((v14[647] & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(*a11);
  if ((v14[647] & 0x80000000) == 0)
  {
LABEL_9:
    sub_100076100(v19);
    sub_1000760FC(a14);
    if ((v14[79] & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(*a12);
  sub_100076100(v19);
  sub_1000760FC(a14);
  if ((v14[79] & 0x80000000) == 0)
  {
LABEL_10:
    if ((v14[55] & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  operator delete(*v17);
  if ((v14[55] & 0x80000000) == 0)
  {
LABEL_11:
    if ((v14[31] & 0x80000000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_22:
  operator delete(*a13);
  if ((v14[31] & 0x80000000) == 0) {
LABEL_12:
  }
    _Unwind_Resume(a1);
LABEL_23:
  operator delete(*v15);
  _Unwind_Resume(a1);
}

void *sub_100198BC0(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"FloorConfiguration(", 19);
  uint64_t v4 = sub_10002986C(a1, (uint64_t)"regionSet=", 10);
  memset(&v49, 0, sizeof(v49));
  std::string::operator=(&v49, (const std::string *)(a2 + 8));
  if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    char v5 = &v49;
  }
  else {
    char v5 = (std::string *)v49.__r_.__value_.__r.__words[0];
  }
  if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v49.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v49.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v4, (uint64_t)v5, size);
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v49.__r_.__value_.__l.__data_);
  }
  int v7 = sub_10002986C(a1, (uint64_t)", ", 2);
  uint64_t v8 = sub_10002986C(v7, (uint64_t)"splitRssiMap=", 13);
  memset(&v49, 0, sizeof(v49));
  std::string::operator=(&v49, (const std::string *)(a2 + 32));
  if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v9 = &v49;
  }
  else {
    uint64_t v9 = (std::string *)v49.__r_.__value_.__r.__words[0];
  }
  if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v10 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v10 = v49.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v8, (uint64_t)v9, v10);
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v49.__r_.__value_.__l.__data_);
  }
  uint64_t v11 = sub_10002986C(a1, (uint64_t)", ", 2);
  unsigned __int8 v12 = sub_10002986C(v11, (uint64_t)"magnetometerReference=", 22);
  memset(&v49, 0, sizeof(v49));
  std::string::operator=(&v49, (const std::string *)(a2 + 56));
  if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v13 = &v49;
  }
  else {
    std::string::size_type v13 = (std::string *)v49.__r_.__value_.__r.__words[0];
  }
  if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v14 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v14 = v49.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v12, (uint64_t)v13, v14);
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v49.__r_.__value_.__l.__data_);
  }
  uint64_t v15 = sub_10002986C(a1, (uint64_t)", ", 2);
  uint64_t v16 = sub_10002986C(v15, (uint64_t)"splitRssiMapMetadata=", 21);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10019BD9C(a2 + 80, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v49);
    v49.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
    sub_1000DB0D4((uint64_t)&v49);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v18 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v18 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v16, (uint64_t)p_p, v18);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  uint64_t v19 = sub_10002986C(a1, (uint64_t)", ", 2);
  std::string v20 = sub_10002986C(v19, (uint64_t)"rttModel=", 9);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10019C0C0(a2 + 584, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v49);
    v49.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
    sub_1000DB0D4((uint64_t)&v49);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v21 = &__p;
  }
  else {
    std::string::size_type v21 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v22 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v22 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v20, (uint64_t)v21, v22);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  uint64_t v23 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v23, (uint64_t)"DEPRECATED_configurationId=", 27);
  if ((*(_WORD *)(a2 + 816) & 0x20) != 0)
  {
    memset(&v49, 0, sizeof(v49));
    std::string::operator=(&v49, (const std::string *)(a2 + 624));
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v24 = &v49;
    }
    else {
      uint64_t v24 = (std::string *)v49.__r_.__value_.__r.__words[0];
    }
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v25 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v25 = v49.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v24, v25);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v49.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  uint64_t v26 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v26, (uint64_t)"DEPRECATED_id=", 14);
  if ((*(_WORD *)(a2 + 816) & 0x40) != 0)
  {
    memset(&v49, 0, sizeof(v49));
    std::string::operator=(&v49, (const std::string *)(a2 + 648));
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      char v27 = &v49;
    }
    else {
      char v27 = (std::string *)v49.__r_.__value_.__r.__words[0];
    }
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v28 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v28 = v49.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v27, v28);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v49.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  char v29 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v29, (uint64_t)"DEPRECATED_description=", 23);
  if ((*(_WORD *)(a2 + 816) & 0x80) != 0)
  {
    memset(&v49, 0, sizeof(v49));
    std::string::operator=(&v49, (const std::string *)(a2 + 672));
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v30 = &v49;
    }
    else {
      std::string::size_type v30 = (std::string *)v49.__r_.__value_.__r.__words[0];
    }
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v31 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v31 = v49.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v30, v31);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v49.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  unint64_t v32 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v32, (uint64_t)"DEPRECATED_shortDescription=", 28);
  if ((*(_WORD *)(a2 + 816) & 0x100) != 0)
  {
    memset(&v49, 0, sizeof(v49));
    std::string::operator=(&v49, (const std::string *)(a2 + 696));
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      char v33 = &v49;
    }
    else {
      char v33 = (std::string *)v49.__r_.__value_.__r.__words[0];
    }
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v34 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v34 = v49.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v33, v34);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v49.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  uint64_t v35 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v35, (uint64_t)"DEPRECATED_planogram=", 21);
  if ((*(_WORD *)(a2 + 816) & 0x200) != 0)
  {
    memset(&v49, 0, sizeof(v49));
    std::string::operator=(&v49, (const std::string *)(a2 + 720));
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v36 = &v49;
    }
    else {
      long long v36 = (std::string *)v49.__r_.__value_.__r.__words[0];
    }
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v37 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v37 = v49.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v36, v37);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v49.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  char v38 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v38, (uint64_t)"DEPRECATED_occupancyGrid=", 25);
  if ((*(_WORD *)(a2 + 816) & 0x400) != 0)
  {
    memset(&v49, 0, sizeof(v49));
    std::string::operator=(&v49, (const std::string *)(a2 + 744));
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v39 = &v49;
    }
    else {
      unint64_t v39 = (std::string *)v49.__r_.__value_.__r.__words[0];
    }
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v40 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v40 = v49.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v39, v40);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v49.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  uint64_t v41 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v41, (uint64_t)"DEPRECATED_floorTransitionSet=", 30);
  if ((*(_WORD *)(a2 + 816) & 0x800) != 0)
  {
    memset(&v49, 0, sizeof(v49));
    std::string::operator=(&v49, (const std::string *)(a2 + 768));
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v42 = &v49;
    }
    else {
      unint64_t v42 = (std::string *)v49.__r_.__value_.__r.__words[0];
    }
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v43 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v43 = v49.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v42, v43);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v49.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  long long v44 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v44, (uint64_t)"DEPRECATED_wifiLog=", 19);
  if ((*(_WORD *)(a2 + 816) & 0x1000) != 0)
  {
    memset(&v49, 0, sizeof(v49));
    std::string::operator=(&v49, (const std::string *)(a2 + 792));
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      char v45 = &v49;
    }
    else {
      char v45 = (std::string *)v49.__r_.__value_.__r.__words[0];
    }
    if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v46 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v46 = v49.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v45, v46);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v49.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_100199334(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001993E4()
{
}

void *sub_1001993F8(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"IndoorOutdoorLikelihoodParams(", 30);
  uint64_t v4 = sub_10002986C(a1, (uint64_t)"indoorSurveyOnTileMean=", 23);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001645DC((double *)(a2 + 8), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v29);
    v29.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v29);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v7 = sub_10002986C(a1, (uint64_t)", ", 2);
  uint64_t v8 = sub_10002986C(v7, (uint64_t)"indoorSurveyOnTileMin=", 22);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001645DC((double *)(a2 + 16), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v29);
    v29.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v29);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v9 = &__p;
  }
  else {
    uint64_t v9 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v10 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v10 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v8, (uint64_t)v9, v10);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  uint64_t v11 = sub_10002986C(a1, (uint64_t)", ", 2);
  unsigned __int8 v12 = sub_10002986C(v11, (uint64_t)"indoorSurveyOnTileStdDev=", 25);
  memset(&__p, 0, sizeof(__p));
  if ((sub_1001645DC((double *)(a2 + 24), &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v29);
    v29.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v29);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v13 = &__p;
  }
  else {
    std::string::size_type v13 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v14 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v12, (uint64_t)v13, v14);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  uint64_t v15 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v15, (uint64_t)"indoorOffTileMean=", 18);
  if ((*(unsigned char *)(a2 + 64) & 8) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001645DC((double *)(a2 + 32), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v29);
      v29.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)&v29);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v16 = &__p;
    }
    else {
      uint64_t v16 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v17 = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v16, v17);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  std::string::size_type v18 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v18, (uint64_t)"indoorOffTileStdDev=", 20);
  if ((*(unsigned char *)(a2 + 64) & 0x10) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001645DC((double *)(a2 + 40), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v29);
      v29.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)&v29);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v19 = &__p;
    }
    else {
      uint64_t v19 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v20 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v20 = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v19, v20);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  std::string::size_type v21 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v21, (uint64_t)"outdoorOffTileMean=", 19);
  if ((*(unsigned char *)(a2 + 64) & 0x20) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001645DC((double *)(a2 + 48), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v29);
      v29.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)&v29);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v22 = &__p;
    }
    else {
      std::string::size_type v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v23 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v23 = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v22, v23);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  uint64_t v24 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v24, (uint64_t)"outdoorOffTileStdDev=", 21);
  if ((*(unsigned char *)(a2 + 64) & 0x40) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001645DC((double *)(a2 + 56), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast(&v29);
      v29.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)&v29);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v25 = &__p;
    }
    else {
      std::string::size_type v25 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v26 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v26 = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v25, v26);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_1001999D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::bad_cast a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100199A50(void *a1)
{
  *a1 = off_10045D688;
  uint64_t v2 = (void *)a1[4];
  if (v2)
  {
    a1[5] = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)a1[1];
  if (v3)
  {
    a1[2] = v3;
    operator delete(v3);
  }

  operator delete();
}

void *sub_100199AD0(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"PolygonBounds(", 14);
  uint64_t v4 = sub_10002986C(a1, (uint64_t)"xs=", 3);
  sub_100199CF0(a2 + 8);
  if (SHIBYTE(v19) >= 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if (SHIBYTE(v19) >= 0) {
    uint64_t v6 = HIBYTE(v19);
  }
  else {
    uint64_t v6 = (uint64_t)v18;
  }
  sub_10002986C(v4, (uint64_t)p_p, v6);
  if (SHIBYTE(v19) < 0) {
    operator delete(__p);
  }
  int v7 = sub_10002986C(a1, (uint64_t)", ", 2);
  uint64_t v8 = sub_10002986C(v7, (uint64_t)"ys=", 3);
  sub_100199CF0(a2 + 32);
  if (SHIBYTE(v19) >= 0) {
    uint64_t v9 = &__p;
  }
  else {
    uint64_t v9 = __p;
  }
  if (SHIBYTE(v19) >= 0) {
    uint64_t v10 = HIBYTE(v19);
  }
  else {
    uint64_t v10 = (uint64_t)v18;
  }
  sub_10002986C(v8, (uint64_t)v9, v10);
  if (SHIBYTE(v19) < 0) {
    operator delete(__p);
  }
  uint64_t v11 = sub_10002986C(a1, (uint64_t)", ", 2);
  unsigned __int8 v12 = sub_10002986C(v11, (uint64_t)"tolerance=", 10);
  memset(&v16, 0, sizeof(v16));
  if ((sub_1001645DC((double *)(a2 + 56), &v16) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&__p);
    std::string __p = &off_100454020;
    sub_1000DB0D4((uint64_t)&__p);
  }
  if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v13 = &v16;
  }
  else {
    std::string::size_type v13 = (std::string *)v16.__r_.__value_.__r.__words[0];
  }
  if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v16.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v16.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v12, (uint64_t)v13, size);
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_100199CA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, std::bad_cast a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100199CF0(uint64_t a1)
{
  sub_1000CD96C((uint64_t)v12);
  uint64_t v2 = sub_10002986C(v12, (uint64_t)"[", 1);
  uint64_t v3 = *(double **)a1;
  uint64_t v8 = *(double **)(a1 + 8);
  uint64_t v9 = v3;
  sub_10019C594(&v9, &v8);
  if ((v11 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v11 & 0x80u) == 0) {
    uint64_t v5 = v11;
  }
  else {
    uint64_t v5 = (uint64_t)__p[1];
  }
  uint64_t v6 = sub_10002986C(v2, (uint64_t)v4, v5);
  sub_10002986C(v6, (uint64_t)"]", 1);
  if ((char)v11 < 0) {
    operator delete(__p[0]);
  }
  std::stringbuf::str();
  if (v13 < 0) {
    operator delete((void *)v12[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_100199E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100199EA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100199EB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1000CDB10((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void **sub_100199ED8(void **a1)
{
  uint64_t v2 = (char *)*a1;
  if (*a1)
  {
    uint64_t v3 = (char *)a1[1];
    uint64_t v4 = *a1;
    if (v3 != v2)
    {
      uint64_t v5 = v3 - 72;
      uint64_t v6 = v3 - 72;
      int v7 = v3 - 72;
      do
      {
        uint64_t v8 = *(void (***)(char *))v7;
        v7 -= 72;
        (*v8)(v6);
        v5 -= 72;
        BOOL v9 = v6 == v2;
        uint64_t v6 = v7;
      }
      while (!v9);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_100199F74(void *a1)
{
  *a1 = off_10045D6A8;
  uint64_t v2 = (void (***)(void))a1[10];
  if (v2)
  {
    uint64_t v3 = (void (***)(void))a1[11];
    uint64_t v4 = (void *)a1[10];
    if (v3 != v2)
    {
      uint64_t v5 = v3 - 9;
      uint64_t v6 = v3 - 9;
      int v7 = v3 - 9;
      do
      {
        uint64_t v8 = *v7;
        v7 -= 9;
        (*v8)(v6);
        v5 -= 9;
        BOOL v9 = v6 == v2;
        uint64_t v6 = v7;
      }
      while (!v9);
      uint64_t v4 = (void *)a1[10];
    }
    a1[11] = v2;
    operator delete(v4);
  }
  a1[1] = off_10045D688;
  uint64_t v10 = (void *)a1[5];
  if (v10)
  {
    a1[6] = v10;
    operator delete(v10);
  }
  unsigned __int8 v11 = (void *)a1[2];
  if (v11)
  {
    a1[3] = v11;
    operator delete(v11);
  }

  operator delete();
}

void *sub_10019A08C(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"GeoJsonPolygon(", 15);
  uint64_t v4 = sub_10002986C(a1, (uint64_t)"exteriorRing=", 13);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10019C86C(a2 + 8, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast(&v13);
    v13.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v13);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  int v7 = sub_10002986C(a1, (uint64_t)", ", 2);
  uint64_t v8 = sub_10002986C(v7, (uint64_t)"interiorRings=", 14);
  sub_10019A240((uint64_t *)(a2 + 80));
  if (SHIBYTE(v15) >= 0) {
    BOOL v9 = &v13;
  }
  else {
    BOOL v9 = v13.__vftable;
  }
  if (SHIBYTE(v15) >= 0) {
    uint64_t v10 = HIBYTE(v15);
  }
  else {
    uint64_t v10 = (uint64_t)v14;
  }
  sub_10002986C(v8, (uint64_t)v9, v10);
  if (SHIBYTE(v15) < 0) {
    operator delete(v13.__vftable);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_10019A1FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10019A240(uint64_t *a1)
{
  sub_1000CD96C((uint64_t)v12);
  uint64_t v2 = sub_10002986C(v12, (uint64_t)"[", 1);
  uint64_t v3 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = v3;
  sub_10019CB78(&v9, &v8);
  if ((v11 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v11 & 0x80u) == 0) {
    uint64_t v5 = v11;
  }
  else {
    uint64_t v5 = (uint64_t)__p[1];
  }
  uint64_t v6 = sub_10002986C(v2, (uint64_t)v4, v5);
  sub_10002986C(v6, (uint64_t)"]", 1);
  if ((char)v11 < 0) {
    operator delete(__p[0]);
  }
  std::stringbuf::str();
  if (v13 < 0) {
    operator delete((void *)v12[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_10019A3DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019A3F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019A404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1000CDB10((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void *sub_10019A428(void *a1)
{
  uint64_t v2 = (void (***)(void))*a1;
  if (*a1)
  {
    uint64_t v3 = (void (***)(void))a1[1];
    uint64_t v4 = (void (***)(void))*a1;
    if (v3 != v2)
    {
      uint64_t v5 = v3 - 103;
      uint64_t v6 = v3 - 103;
      do
      {
        (**v6)(v6);
        v5 -= 103;
        BOOL v7 = v6 == v2;
        v6 -= 103;
      }
      while (!v7);
      uint64_t v4 = (void (***)(void))*a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void **sub_10019A4BC(void **a1)
{
  uint64_t v2 = (char *)*a1;
  if (*a1)
  {
    uint64_t v3 = (char *)a1[1];
    uint64_t v4 = *a1;
    if (v3 != v2)
    {
      uint64_t v5 = v3 - 112;
      uint64_t v6 = v3 - 112;
      BOOL v7 = v3 - 112;
      do
      {
        uint64_t v8 = *(void (***)(char *))v7;
        v7 -= 112;
        (*v8)(v6);
        v5 -= 112;
        BOOL v9 = v6 == v2;
        uint64_t v6 = v7;
      }
      while (!v9);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_10019A558(uint64_t a1)
{
  sub_100075934(a1);

  operator delete();
}

uint64_t sub_10019A590(uint64_t result, double a2)
{
  *(double *)(result + 1824) = a2;
  *(_DWORD *)(result + 1912) |= 0x80000u;
  return result;
}

uint64_t sub_10019A5A4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 1860) = a2;
  *(_DWORD *)(result + 1912) |= 0x400000u;
  return result;
}

void *sub_10019A5B8(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"LocationConfiguration(", 22);
  uint64_t v4 = sub_10002986C(a1, (uint64_t)"id=", 3);
  memset(&v88, 0, sizeof(v88));
  std::string::operator=(&v88, (const std::string *)(a2 + 8));
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v5 = &v88;
  }
  else {
    uint64_t v5 = (std::string *)v88.__r_.__value_.__r.__words[0];
  }
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v88.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v88.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v4, (uint64_t)v5, size);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v88.__r_.__value_.__l.__data_);
  }
  BOOL v7 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v7, (uint64_t)"uid=", 4);
  if ((*(unsigned char *)(a2 + 1912) & 2) != 0)
  {
    memset(&v88, 0, sizeof(v88));
    std::string::operator=(&v88, (const std::string *)(a2 + 32));
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v8 = &v88;
    }
    else {
      uint64_t v8 = (std::string *)v88.__r_.__value_.__r.__words[0];
    }
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v9 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v9 = v88.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v8, v9);
    if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v88.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  uint64_t v10 = sub_10002986C(a1, (uint64_t)", ", 2);
  unsigned __int8 v11 = sub_10002986C(v10, (uint64_t)"description=", 12);
  memset(&v88, 0, sizeof(v88));
  std::string::operator=(&v88, (const std::string *)(a2 + 56));
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unsigned __int8 v12 = &v88;
  }
  else {
    unsigned __int8 v12 = (std::string *)v88.__r_.__value_.__r.__words[0];
  }
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v13 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v13 = v88.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v11, (uint64_t)v12, v13);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v88.__r_.__value_.__l.__data_);
  }
  std::string::size_type v14 = sub_10002986C(a1, (uint64_t)", ", 2);
  uint64_t v15 = sub_10002986C(v14, (uint64_t)"floorConfiguration=", 19);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10019CE50(a2 + 80, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v88);
    v88.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
    sub_1000DB0D4((uint64_t)&v88);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v17 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v15, (uint64_t)p_p, v17);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::string::size_type v18 = sub_10002986C(a1, (uint64_t)", ", 2);
  uint64_t v19 = sub_10002986C(v18, (uint64_t)"iconSet=", 8);
  memset(&v88, 0, sizeof(v88));
  std::string::operator=(&v88, (const std::string *)(a2 + 904));
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v20 = &v88;
  }
  else {
    std::string::size_type v20 = (std::string *)v88.__r_.__value_.__r.__words[0];
  }
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v21 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v21 = v88.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v19, (uint64_t)v20, v21);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v88.__r_.__value_.__l.__data_);
  }
  std::string::size_type v22 = sub_10002986C(a1, (uint64_t)", ", 2);
  std::string::size_type v23 = sub_10002986C(v22, (uint64_t)"autoUpdate=", 11);
  memset(&v88, 0, sizeof(v88));
  if (*(unsigned char *)(a2 + 928)) {
    std::string::value_type v24 = 49;
  }
  else {
    std::string::value_type v24 = 48;
  }
  v88.__r_.__value_.__s.__data_[0] = v24;
  *((unsigned char *)&v88.__r_.__value_.__s + 23) = 1;
  sub_10002986C(v23, (uint64_t)&v88, 1);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v88.__r_.__value_.__l.__data_);
  }
  std::string::size_type v25 = sub_10002986C(a1, (uint64_t)", ", 2);
  std::string::size_type v26 = sub_10002986C(v25, (uint64_t)"floorTransitionSet=", 19);
  memset(&v88, 0, sizeof(v88));
  std::string::operator=(&v88, (const std::string *)(a2 + 936));
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    char v27 = &v88;
  }
  else {
    char v27 = (std::string *)v88.__r_.__value_.__r.__words[0];
  }
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v28 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v28 = v88.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v26, (uint64_t)v27, v28);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v88.__r_.__value_.__l.__data_);
  }
  std::bad_cast v29 = sub_10002986C(a1, (uint64_t)", ", 2);
  std::string::size_type v30 = sub_10002986C(v29, (uint64_t)"locationGroupId=", 16);
  memset(&v88, 0, sizeof(v88));
  std::string::operator=(&v88, (const std::string *)(a2 + 960));
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v31 = &v88;
  }
  else {
    std::string::size_type v31 = (std::string *)v88.__r_.__value_.__r.__words[0];
  }
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v32 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v32 = v88.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v30, (uint64_t)v31, v32);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v88.__r_.__value_.__l.__data_);
  }
  char v33 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v33, (uint64_t)"deleted=", 8);
  if (*(unsigned char *)(a2 + 1913))
  {
    memset(&v88, 0, sizeof(v88));
    if (*(unsigned char *)(a2 + 984)) {
      std::string::value_type v34 = 49;
    }
    else {
      std::string::value_type v34 = 48;
    }
    v88.__r_.__value_.__s.__data_[0] = v34;
    *((unsigned char *)&v88.__r_.__value_.__s + 23) = 1;
    sub_10002986C(a1, (uint64_t)&v88, 1);
    if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v88.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  uint64_t v35 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v35, (uint64_t)"paramOverrides=", 15);
  if ((*(unsigned char *)(a2 + 1913) & 2) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10019D15C(a2 + 992, &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&v88);
      v88.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
      sub_1000DB0D4((uint64_t)&v88);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v36 = &__p;
    }
    else {
      long long v36 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v37 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v37 = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v36, v37);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  char v38 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v38, (uint64_t)"floorplan=", 10);
  if ((*(unsigned char *)(a2 + 1913) & 4) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10019D468(a2 + 1056, &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&v88);
      v88.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
      sub_1000DB0D4((uint64_t)&v88);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v39 = &__p;
    }
    else {
      unint64_t v39 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v40 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v40 = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v39, v40);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  uint64_t v41 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v41, (uint64_t)"occupancy=", 10);
  if ((*(unsigned char *)(a2 + 1913) & 8) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10019D78C(a2 + 1440, &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&v88);
      v88.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
      sub_1000DB0D4((uint64_t)&v88);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v42 = &__p;
    }
    else {
      unint64_t v42 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v43 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v43 = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v42, v43);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  long long v44 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v44, (uint64_t)"universalOrientationOfMagneticNorth=", 36);
  if ((*(unsigned char *)(a2 + 1913) & 0x10) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001645DC((double *)(a2 + 1600), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&v88);
      v88.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
      sub_1000DB0D4((uint64_t)&v88);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      char v45 = &__p;
    }
    else {
      char v45 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v46 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v46 = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v45, v46);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  uint64_t v47 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v47, (uint64_t)"timestampCreatedMillis=", 23);
  if ((*(unsigned char *)(a2 + 1913) & 0x20) != 0)
  {
    sub_100168ABC((uint64_t *)(a2 + 1608), &v88);
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v48 = &v88;
    }
    else {
      uint64_t v48 = (std::string *)v88.__r_.__value_.__r.__words[0];
    }
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v49 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v49 = v88.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v48, v49);
    if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v88.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  uint64_t v50 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v50, (uint64_t)"floorNumber=", 12);
  if ((*(unsigned char *)(a2 + 1913) & 0x40) != 0)
  {
    sub_10016714C((int *)(a2 + 1616), &v88);
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v51 = &v88;
    }
    else {
      uint64_t v51 = (std::string *)v88.__r_.__value_.__r.__words[0];
    }
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v52 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v52 = v88.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v51, v52);
    if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v88.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  int v53 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v53, (uint64_t)"tangentPoint=", 13);
  if ((*(unsigned char *)(a2 + 1913) & 0x80) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10019DAB0(a2 + 1624, &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&v88);
      v88.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
      sub_1000DB0D4((uint64_t)&v88);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v54 = &__p;
    }
    else {
      unint64_t v54 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v55 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v55 = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v54, v55);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  int64_t v56 = sub_10002986C(a1, (uint64_t)", ", 2);
  unint64_t v57 = sub_10002986C(v56, (uint64_t)"wifiIndoorOutdoorLikelihoodParams=", 34);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10019DDD4(a2 + 1656, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v88);
    v88.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
    sub_1000DB0D4((uint64_t)&v88);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v58 = &__p;
  }
  else {
    uint64_t v58 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v59 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v59 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v57, (uint64_t)v58, v59);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  uint64_t v60 = sub_10002986C(a1, (uint64_t)", ", 2);
  uint64_t v61 = sub_10002986C(v60, (uint64_t)"beaconIndoorOutdoorLikelihoodParams=", 36);
  memset(&__p, 0, sizeof(__p));
  if ((sub_10019DDD4(a2 + 1728, &__p) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&v88);
    v88.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
    sub_1000DB0D4((uint64_t)&v88);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unint64_t v62 = &__p;
  }
  else {
    unint64_t v62 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v63 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v63 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v61, (uint64_t)v62, v63);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  unint64_t v64 = sub_10002986C(a1, (uint64_t)", ", 2);
  uint64_t v65 = sub_10002986C(v64, (uint64_t)"surveyBounds=", 13);
  sub_10019A240((uint64_t *)(a2 + 1800));
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v66 = &v88;
  }
  else {
    size_t v66 = (std::string *)v88.__r_.__value_.__r.__words[0];
  }
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v67 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v67 = v88.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v65, (uint64_t)v66, v67);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v88.__r_.__value_.__l.__data_);
  }
  unint64_t v68 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v68, (uint64_t)"area=", 5);
  if ((*(unsigned char *)(a2 + 1914) & 8) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001645DC((double *)(a2 + 1824), &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&v88);
      v88.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
      sub_1000DB0D4((uint64_t)&v88);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v69 = &__p;
    }
    else {
      unint64_t v69 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v70 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v70 = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v69, v70);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  size_t v71 = sub_10002986C(a1, (uint64_t)", ", 2);
  size_t v72 = sub_10002986C(v71, (uint64_t)"floorplanBounds=", 16);
  sub_10019B648((uint64_t *)(a2 + 1832));
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v73 = &v88;
  }
  else {
    uint64_t v73 = (std::string *)v88.__r_.__value_.__r.__words[0];
  }
  if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v74 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v74 = v88.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v72, (uint64_t)v73, v74);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v88.__r_.__value_.__l.__data_);
  }
  uint64_t v75 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v75, (uint64_t)"context=", 8);
  if ((*(unsigned char *)(a2 + 1914) & 0x20) != 0)
  {
    memset(&__p, 0, sizeof(__p));
    if ((sub_10019E654(a2 + 1856, &__p) & 1) == 0)
    {
      std::bad_cast::bad_cast((std::bad_cast *)&v88);
      v88.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
      sub_1000DB0D4((uint64_t)&v88);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      long long v76 = &__p;
    }
    else {
      long long v76 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v77 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v77 = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v76, v77);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  uint64_t v78 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v78, (uint64_t)"coarseRegionalWithWifiLocations=", 32);
  if ((*(unsigned char *)(a2 + 1914) & 0x40) != 0)
  {
    memset(&v88, 0, sizeof(v88));
    if (*(unsigned char *)(a2 + 1860)) {
      std::string::value_type v79 = 49;
    }
    else {
      std::string::value_type v79 = 48;
    }
    v88.__r_.__value_.__s.__data_[0] = v79;
    *((unsigned char *)&v88.__r_.__value_.__s + 23) = 1;
    sub_10002986C(a1, (uint64_t)&v88, 1);
    if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v88.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  uint64_t v80 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v80, (uint64_t)"DEPRECATED_webviewLocationId=", 29);
  if ((*(unsigned char *)(a2 + 1914) & 0x80) != 0)
  {
    memset(&v88, 0, sizeof(v88));
    std::string::operator=(&v88, (const std::string *)(a2 + 1864));
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v81 = &v88;
    }
    else {
      unint64_t v81 = (std::string *)v88.__r_.__value_.__r.__words[0];
    }
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v82 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v82 = v88.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v81, v82);
    if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v88.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  unint64_t v83 = sub_10002986C(a1, (uint64_t)", ", 2);
  sub_10002986C(v83, (uint64_t)"DEPRECATED_floorConfigurations=", 31);
  if (*(unsigned char *)(a2 + 1915))
  {
    sub_10019B830((uint64_t *)(a2 + 1888));
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v84 = &v88;
    }
    else {
      uint64_t v84 = (std::string *)v88.__r_.__value_.__r.__words[0];
    }
    if ((v88.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v85 = HIBYTE(v88.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v85 = v88.__r_.__value_.__l.__size_;
    }
    sub_10002986C(a1, (uint64_t)v84, v85);
    if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v88.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    sub_10002986C(a1, (uint64_t)"<null>", 6);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_10019B538(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10019B648(uint64_t *a1)
{
  sub_1000CD96C((uint64_t)v12);
  uint64_t v2 = sub_10002986C(v12, (uint64_t)"[", 1);
  uint64_t v3 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = v3;
  sub_10019E0E0(&v9, &v8);
  if ((v11 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v11 & 0x80u) == 0) {
    uint64_t v5 = v11;
  }
  else {
    uint64_t v5 = (uint64_t)__p[1];
  }
  uint64_t v6 = sub_10002986C(v2, (uint64_t)v4, v5);
  sub_10002986C(v6, (uint64_t)"]", 1);
  if ((char)v11 < 0) {
    operator delete(__p[0]);
  }
  std::stringbuf::str();
  if (v13 < 0) {
    operator delete((void *)v12[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_10019B7E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019B7F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019B80C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1000CDB10((uint64_t)&a17);
  _Unwind_Resume(a1);
}

uint64_t sub_10019B830(uint64_t *a1)
{
  sub_1000CD96C((uint64_t)v12);
  uint64_t v2 = sub_10002986C(v12, (uint64_t)"[", 1);
  uint64_t v3 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = v3;
  sub_10019E978(&v9, &v8);
  if ((v11 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v11 & 0x80u) == 0) {
    uint64_t v5 = v11;
  }
  else {
    uint64_t v5 = (uint64_t)__p[1];
  }
  uint64_t v6 = sub_10002986C(v2, (uint64_t)v4, v5);
  sub_10002986C(v6, (uint64_t)"]", 1);
  if ((char)v11 < 0) {
    operator delete(__p[0]);
  }
  std::stringbuf::str();
  if (v13 < 0) {
    operator delete((void *)v12[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_10019B9CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019B9E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019B9F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1000CDB10((uint64_t)&a17);
  _Unwind_Resume(a1);
}

void *sub_10019BA18(void *a1)
{
  uint64_t v2 = (void (***)(void))*a1;
  if (*a1)
  {
    uint64_t v3 = (void (***)(void))a1[1];
    uint64_t v4 = (void (***)(void))*a1;
    if (v3 != v2)
    {
      uint64_t v5 = v3 - 240;
      uint64_t v6 = v3 - 240;
      do
      {
        (**v6)(v6);
        v5 -= 240;
        BOOL v7 = v6 == v2;
        v6 -= 240;
      }
      while (!v7);
      uint64_t v4 = (void (***)(void))*a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_10019BAAC(uint64_t a1)
{
  *(void *)a1 = off_10045D6E8;
  *(void *)(a1 + 104) = off_10045D628;
  sub_100075BE0(a1 + 136, *(void *)(a1 + 144));
  sub_100075BE0(a1 + 112, *(void *)(a1 + 120));
  uint64_t v2 = *(void *)(a1 + 80);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 88);
    uint64_t v4 = *(void **)(a1 + 80);
    if (v3 != v2)
    {
      do
      {
        if (*(char *)(v3 - 1) < 0) {
          operator delete(*(void **)(v3 - 24));
        }
        v3 -= 24;
      }
      while (v3 != v2);
      uint64_t v4 = *(void **)(a1 + 80);
    }
    *(void *)(a1 + 88) = v2;
    operator delete(v4);
  }
  if ((*(char *)(a1 + 79) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 55) & 0x80000000) == 0) {
      goto LABEL_11;
    }
LABEL_14:
    operator delete(*(void **)(a1 + 32));
    if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
      return a1;
    }
    goto LABEL_15;
  }
  operator delete(*(void **)(a1 + 56));
  if (*(char *)(a1 + 55) < 0) {
    goto LABEL_14;
  }
LABEL_11:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
    return a1;
  }
LABEL_15:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_10019BBCC(uint64_t a1)
{
  sub_10019BAAC(a1);

  operator delete();
}

uint64_t sub_10019BC04(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045D6E8;
  *(_OWORD *)(a1 + 56) = 0u;
  uint64_t v4 = (std::string *)(a1 + 56);
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(void *)(a1 + 104) = off_10045D628;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 112) = a1 + 120;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = a1 + 144;
  *(void *)(a1 + 152) = 0;
  *(unsigned char *)(a1 + 160) &= 0xFCu;
  *(unsigned char *)(a1 + 168) &= 0xE0u;
  std::string::operator=((std::string *)(a1 + 8), (const std::string *)(a2 + 8));
  std::string::operator=((std::string *)(a1 + 32), (const std::string *)(a2 + 32));
  std::string::operator=(v4, (const std::string *)(a2 + 56));
  if (a1 != a2)
  {
    sub_10007B8E4(a1 + 80, *(std::string **)(a2 + 80), *(std::string **)(a2 + 88), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 88) - *(void *)(a2 + 80)) >> 3));
    sub_10007A09C((uint64_t *)(a1 + 112), *(void **)(a2 + 112), (void *)(a2 + 120));
    sub_10007A09C((uint64_t *)(a1 + 136), *(void **)(a2 + 136), (void *)(a2 + 144));
  }
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  return a1;
}

void sub_10019BD5C(_Unwind_Exception *a1)
{
  sub_100198458(v3);
  sub_1000E0AA4(v4);
  if (*(char *)(v1 + 79) < 0) {
    operator delete(*v2);
  }
  sub_1003A3DE4(v1, (void **)(v1 + 32), (void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_10019BD9C(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  long long v36 = &v35;
  std::string::size_type v37 = (char *)&v35 + 2;
  uint64_t v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  uint64_t v5 = sub_1001B0DF8(&v31, a1);
  int v6 = *(_DWORD *)((char *)v5 + *(void *)(*v5 - 24) + 32);
  uint64_t v7 = *(void *)((char *)&v32.__rdstate_ + (void)*(v31 - 3));
  uint64_t v8 = *(void *)(v7 + 40);
  long long v36 = (uint64_t *)v8;
  uint64_t v9 = *(char **)(v7 + 48);
  std::string::size_type v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          unsigned __int8 v12 = a2;
        }
        else {
          unsigned __int8 v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          std::string::size_type v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          std::string::size_type v17 = v12;
          std::string::size_type v18 = (char *)v8;
        }
        else
        {
          std::string::size_type v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          std::string::size_type v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          uint64_t v19 = (long long *)(v8 + 16);
          std::string::size_type v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)std::string::size_type v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          std::string::size_type v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      unsigned __int8 v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_10019C074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10019C0A8(void *a1)
{
}

uint64_t sub_10019C0C0(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  long long v36 = &v35;
  std::string::size_type v37 = (char *)&v35 + 2;
  uint64_t v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  uint64_t v5 = sub_10019F1C0(&v31, a1);
  int v6 = *(_DWORD *)((char *)v5 + *(void *)(*v5 - 24) + 32);
  uint64_t v7 = *(void *)((char *)&v32.__rdstate_ + (void)*(v31 - 3));
  uint64_t v8 = *(void *)(v7 + 40);
  long long v36 = (uint64_t *)v8;
  uint64_t v9 = *(char **)(v7 + 48);
  std::string::size_type v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          unsigned __int8 v12 = a2;
        }
        else {
          unsigned __int8 v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          std::string::size_type v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          std::string::size_type v17 = v12;
          std::string::size_type v18 = (char *)v8;
        }
        else
        {
          std::string::size_type v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          std::string::size_type v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          uint64_t v19 = (long long *)(v8 + 16);
          std::string::size_type v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)std::string::size_type v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          std::string::size_type v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      unsigned __int8 v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_10019C398(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10019C3CC(void *a1)
{
}

void sub_10019C3E4(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = *(char **)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  int v6 = v5;
  if (a2 <= (v4 - (uint64_t)v5) >> 3)
  {
    if (a2)
    {
      bzero(v5, 8 * a2);
      int v6 = &v5[8 * a2];
    }
    *(void *)(a1 + 8) = v6;
  }
  else
  {
    uint64_t v7 = *(char **)a1;
    uint64_t v8 = (uint64_t)&v5[-*(void *)a1];
    uint64_t v9 = v8 >> 3;
    unint64_t v10 = (v8 >> 3) + a2;
    if (v10 >> 61) {
      sub_1000A9108();
    }
    uint64_t v11 = v4 - (void)v7;
    if (v11 >> 2 > v10) {
      unint64_t v10 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12)
    {
      if (v12 >> 61) {
        sub_1000A6A10();
      }
      char v13 = operator new(8 * v12);
    }
    else
    {
      char v13 = 0;
    }
    std::string::size_type v14 = &v13[8 * v9];
    size_t v15 = 8 * a2;
    unint64_t v16 = &v13[8 * v12];
    bzero(v14, v15);
    std::string::size_type v17 = &v14[v15];
    if (v5 != v7)
    {
      unint64_t v18 = v5 - v7 - 8;
      if (v18 < 0x58) {
        goto LABEL_31;
      }
      if ((unint64_t)(v5 - v13 - v8) < 0x20) {
        goto LABEL_31;
      }
      uint64_t v19 = (v18 >> 3) + 1;
      uint64_t v20 = 8 * (v19 & 0x3FFFFFFFFFFFFFFCLL);
      int v6 = &v5[-v20];
      v14 -= v20;
      unint64_t v21 = &v13[8 * v9 - 16];
      long long v22 = v5 - 16;
      uint64_t v23 = v19 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        long long v24 = *(_OWORD *)v22;
        *(v21 - 1) = *((_OWORD *)v22 - 1);
        _OWORD *v21 = v24;
        v21 -= 2;
        v22 -= 32;
        v23 -= 4;
      }
      while (v23);
      if (v19 != (v19 & 0x3FFFFFFFFFFFFFFCLL))
      {
LABEL_31:
        do
        {
          uint64_t v25 = *((void *)v6 - 1);
          v6 -= 8;
          *((void *)v14 - 1) = v25;
          v14 -= 8;
        }
        while (v6 != v7);
      }
    }
    *(void *)a1 = v14;
    *(void *)(a1 + 8) = v17;
    *(void *)(a1 + 16) = v16;
    if (v7)
    {
      operator delete(v7);
    }
  }
}

uint64_t sub_10019C594(double **a1, double **a2)
{
  sub_1000CD96C((uint64_t)v10);
  for (uint64_t i = *a1; i != *a2; ++i)
  {
    if (i != *a1) {
      sub_10002986C(v10, (uint64_t)", ", 2);
    }
    memset(&__p, 0, sizeof(__p));
    if ((sub_1001645DC(i, &__p) & 1) == 0)
    {
      uint64_t v8 = std::bad_cast::bad_cast(&v12);
      v12.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)v8);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(v10, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  std::stringbuf::str();
  if (v11 < 0) {
    operator delete((void *)v10[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_10019C7AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019C7C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1000CDB10((uint64_t)&a16);
  _Unwind_Resume(a1);
}

uint64_t sub_10019C7FC(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    uint64_t v4 = *(void (***)(void))(i - 72);
    *(void *)(a1 + 16) = i - 72;
    (*v4)();
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_10019C86C(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  long long v36 = &v35;
  std::string::size_type v37 = (char *)&v35 + 2;
  uint64_t v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  sub_100199AD0(&v31, a1);
  uint64_t v5 = (char *)&v31 + (void)*(v31 - 3);
  int v6 = *((_DWORD *)v5 + 8);
  uint64_t v7 = *((void *)v5 + 5);
  uint64_t v8 = *(void *)(v7 + 40);
  long long v36 = (uint64_t *)v8;
  uint64_t v9 = *(char **)(v7 + 48);
  std::string::size_type v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          std::bad_cast v12 = a2;
        }
        else {
          std::bad_cast v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          std::string::size_type v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          std::string::size_type v17 = v12;
          unint64_t v18 = (char *)v8;
        }
        else
        {
          std::string::size_type v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          unint64_t v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          uint64_t v19 = (long long *)(v8 + 16);
          uint64_t v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)uint64_t v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          std::string::size_type v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      std::bad_cast v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_10019CB2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10019CB60(void *a1)
{
}

uint64_t sub_10019CB78(uint64_t *a1, void *a2)
{
  sub_1000CD96C((uint64_t)v10);
  for (uint64_t i = *a1; i != *a2; i += 72)
  {
    if (i != *a1) {
      sub_10002986C(v10, (uint64_t)", ", 2);
    }
    memset(&__p, 0, sizeof(__p));
    if ((sub_10019C86C(i, &__p) & 1) == 0)
    {
      uint64_t v8 = std::bad_cast::bad_cast(&v12);
      v12.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)v8);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(v10, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  std::stringbuf::str();
  if (v11 < 0) {
    operator delete((void *)v10[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_10019CD90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019CDA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1000CDB10((uint64_t)&a16);
  _Unwind_Resume(a1);
}

uint64_t sub_10019CDE0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    uint64_t v4 = *(void (***)(void))(i - 112);
    *(void *)(a1 + 16) = i - 112;
    (*v4)();
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_10019CE50(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  long long v36 = &v35;
  std::string::size_type v37 = (char *)&v35 + 2;
  uint64_t v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  sub_100198BC0(&v31, a1);
  uint64_t v5 = (char *)&v31 + (void)*(v31 - 3);
  int v6 = *((_DWORD *)v5 + 8);
  uint64_t v7 = *((void *)v5 + 5);
  uint64_t v8 = *(void *)(v7 + 40);
  long long v36 = (uint64_t *)v8;
  uint64_t v9 = *(char **)(v7 + 48);
  std::string::size_type v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          std::bad_cast v12 = a2;
        }
        else {
          std::bad_cast v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          std::string::size_type v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          std::string::size_type v17 = v12;
          unint64_t v18 = (char *)v8;
        }
        else
        {
          std::string::size_type v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          unint64_t v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          uint64_t v19 = (long long *)(v8 + 16);
          uint64_t v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)uint64_t v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          std::string::size_type v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      std::bad_cast v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_10019D110(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10019D144(void *a1)
{
}

uint64_t sub_10019D15C(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  long long v36 = &v35;
  std::string::size_type v37 = (char *)&v35 + 2;
  uint64_t v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  sub_100198520(&v31, a1);
  uint64_t v5 = (char *)&v31 + (void)*(v31 - 3);
  int v6 = *((_DWORD *)v5 + 8);
  uint64_t v7 = *((void *)v5 + 5);
  uint64_t v8 = *(void *)(v7 + 40);
  long long v36 = (uint64_t *)v8;
  uint64_t v9 = *(char **)(v7 + 48);
  std::string::size_type v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          std::bad_cast v12 = a2;
        }
        else {
          std::bad_cast v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          std::string::size_type v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          std::string::size_type v17 = v12;
          unint64_t v18 = (char *)v8;
        }
        else
        {
          std::string::size_type v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          unint64_t v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          uint64_t v19 = (long long *)(v8 + 16);
          uint64_t v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)uint64_t v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          std::string::size_type v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      std::bad_cast v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_10019D41C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10019D450(void *a1)
{
}

uint64_t sub_10019D468(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  long long v36 = &v35;
  std::string::size_type v37 = (char *)&v35 + 2;
  uint64_t v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  uint64_t v5 = sub_1001B5120(&v31, a1);
  int v6 = *(_DWORD *)((char *)v5 + *(void *)(*v5 - 24) + 32);
  uint64_t v7 = *(void *)((char *)&v32.__rdstate_ + (void)*(v31 - 3));
  uint64_t v8 = *(void *)(v7 + 40);
  long long v36 = (uint64_t *)v8;
  uint64_t v9 = *(char **)(v7 + 48);
  std::string::size_type v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          std::bad_cast v12 = a2;
        }
        else {
          std::bad_cast v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          std::string::size_type v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          std::string::size_type v17 = v12;
          unint64_t v18 = (char *)v8;
        }
        else
        {
          std::string::size_type v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          unint64_t v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          uint64_t v19 = (long long *)(v8 + 16);
          uint64_t v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)uint64_t v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          std::string::size_type v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      std::bad_cast v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_10019D740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10019D774(void *a1)
{
}

uint64_t sub_10019D78C(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  long long v36 = &v35;
  std::string::size_type v37 = (char *)&v35 + 2;
  uint64_t v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  uint64_t v5 = sub_1001B5A4C(&v31, a1);
  int v6 = *(_DWORD *)((char *)v5 + *(void *)(*v5 - 24) + 32);
  uint64_t v7 = *(void *)((char *)&v32.__rdstate_ + (void)*(v31 - 3));
  uint64_t v8 = *(void *)(v7 + 40);
  long long v36 = (uint64_t *)v8;
  uint64_t v9 = *(char **)(v7 + 48);
  std::string::size_type v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          std::bad_cast v12 = a2;
        }
        else {
          std::bad_cast v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          std::string::size_type v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          std::string::size_type v17 = v12;
          unint64_t v18 = (char *)v8;
        }
        else
        {
          std::string::size_type v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          unint64_t v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          uint64_t v19 = (long long *)(v8 + 16);
          uint64_t v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)uint64_t v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          std::string::size_type v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      std::bad_cast v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_10019DA64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10019DA98(void *a1)
{
}

uint64_t sub_10019DAB0(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  long long v36 = &v35;
  std::string::size_type v37 = (char *)&v35 + 2;
  uint64_t v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  uint64_t v5 = sub_1001AA168(&v31, a1);
  int v6 = *(_DWORD *)((char *)v5 + *(void *)(*v5 - 24) + 32);
  uint64_t v7 = *(void *)((char *)&v32.__rdstate_ + (void)*(v31 - 3));
  uint64_t v8 = *(void *)(v7 + 40);
  long long v36 = (uint64_t *)v8;
  uint64_t v9 = *(char **)(v7 + 48);
  std::string::size_type v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          std::bad_cast v12 = a2;
        }
        else {
          std::bad_cast v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          std::string::size_type v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          std::string::size_type v17 = v12;
          unint64_t v18 = (char *)v8;
        }
        else
        {
          std::string::size_type v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          unint64_t v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          uint64_t v19 = (long long *)(v8 + 16);
          uint64_t v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)uint64_t v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          std::string::size_type v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      std::bad_cast v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_10019DD88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10019DDBC(void *a1)
{
}

uint64_t sub_10019DDD4(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  long long v36 = &v35;
  std::string::size_type v37 = (char *)&v35 + 2;
  uint64_t v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  sub_1001993F8(&v31, a1);
  uint64_t v5 = (char *)&v31 + (void)*(v31 - 3);
  int v6 = *((_DWORD *)v5 + 8);
  uint64_t v7 = *((void *)v5 + 5);
  uint64_t v8 = *(void *)(v7 + 40);
  long long v36 = (uint64_t *)v8;
  uint64_t v9 = *(char **)(v7 + 48);
  std::string::size_type v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          std::bad_cast v12 = a2;
        }
        else {
          std::bad_cast v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          std::string::size_type v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          std::string::size_type v17 = v12;
          unint64_t v18 = (char *)v8;
        }
        else
        {
          std::string::size_type v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          unint64_t v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          uint64_t v19 = (long long *)(v8 + 16);
          uint64_t v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)uint64_t v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          std::string::size_type v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      std::bad_cast v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_10019E094(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10019E0C8(void *a1)
{
}

uint64_t sub_10019E0E0(uint64_t *a1, void *a2)
{
  sub_1000CD96C((uint64_t)v10);
  for (uint64_t i = *a1; i != *a2; i += 112)
  {
    if (i != *a1) {
      sub_10002986C(v10, (uint64_t)", ", 2);
    }
    memset(&__p, 0, sizeof(__p));
    if ((sub_10019E348(i, &__p) & 1) == 0)
    {
      uint64_t v8 = std::bad_cast::bad_cast(&v12);
      v12.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)v8);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(v10, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  std::stringbuf::str();
  if (v11 < 0) {
    operator delete((void *)v10[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_10019E2F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019E310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1000CDB10((uint64_t)&a16);
  _Unwind_Resume(a1);
}

uint64_t sub_10019E348(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  long long v36 = &v35;
  std::string::size_type v37 = (char *)&v35 + 2;
  uint64_t v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  sub_10019A08C(&v31, a1);
  uint64_t v5 = (char *)&v31 + (void)*(v31 - 3);
  int v6 = *((_DWORD *)v5 + 8);
  uint64_t v7 = *((void *)v5 + 5);
  uint64_t v8 = *(void *)(v7 + 40);
  long long v36 = (uint64_t *)v8;
  uint64_t v9 = *(char **)(v7 + 48);
  std::string::size_type v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          std::bad_cast v12 = a2;
        }
        else {
          std::bad_cast v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          std::string::size_type v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          std::string::size_type v17 = v12;
          unint64_t v18 = (char *)v8;
        }
        else
        {
          std::string::size_type v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          unint64_t v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          uint64_t v19 = (long long *)(v8 + 16);
          uint64_t v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)uint64_t v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          std::string::size_type v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      std::bad_cast v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_10019E608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10019E63C(void *a1)
{
}

uint64_t sub_10019E654(uint64_t a1, std::string *a2)
{
  long long v25 = 0u;
  long long v26 = 0u;
  memset(v24, 0, sizeof(v24));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v28 = 0u;
  uint64_t v29 = 24;
  *(void *)&long long v25 = 0;
  *(void *)&v24[0] = off_100453E60;
  std::ios_base::init(&v31, v24);
  uint64_t v32 = 0;
  int v33 = -1;
  uint64_t v35 = &v34;
  long long v36 = (char *)&v34 + 2;
  uint64_t v3 = (std::ios_base *)((char *)&v30 + (void)*(v30 - 3));
  v3->__exceptions_ = 1;
  std::ios_base::clear(v3, v3->__rdstate_);
  uint64_t v4 = (void *)std::ostream::operator<<();
  int v5 = *(_DWORD *)((char *)v4 + *(void *)(*v4 - 24) + 32);
  uint64_t v6 = *(void *)((char *)&v31.__rdstate_ + (void)*(v30 - 3));
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v35 = (uint64_t *)v7;
  uint64_t v8 = *(char **)(v6 + 48);
  long long v36 = v8;
  if ((v5 & 5) == 0)
  {
    unint64_t v10 = (unint64_t)&v8[-v7];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v14 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v13 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v13 >= v10)
      {
        unint64_t v15 = HIBYTE(v14);
LABEL_10:
        if ((v15 & 0x80u) == 0) {
          unint64_t v11 = a2;
        }
        else {
          unint64_t v11 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v7 == v8)
        {
          unint64_t v16 = v11;
          goto LABEL_23;
        }
        if (v10 < 0x20 || (unint64_t)v11 - v7 < 0x20)
        {
          unint64_t v16 = v11;
          std::string::size_type v17 = (char *)v7;
        }
        else
        {
          unint64_t v16 = (std::string *)((char *)v11 + (v10 & 0xFFFFFFFFFFFFFFE0));
          std::string::size_type v17 = (char *)(v7 + (v10 & 0xFFFFFFFFFFFFFFE0));
          unint64_t v18 = (long long *)(v7 + 16);
          uint64_t v19 = &v11->__r_.__value_.__r.__words[2];
          unint64_t v20 = v10 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v21 = *v18;
            *((_OWORD *)v19 - 1) = *(v18 - 1);
            *(_OWORD *)uint64_t v19 = v21;
            v18 += 2;
            v19 += 4;
            v20 -= 32;
          }
          while (v20);
          if (v10 == (v10 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v16->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v10;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v10 & 0x7F;
            }
            uint64_t v9 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v22 = *v17++;
          v16->__r_.__value_.__s.__data_[0] = v22;
          unint64_t v16 = (std::string *)((char *)v16 + 1);
        }
        while (v17 != v8);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      unint64_t v11 = a2;
      if (v10 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v13 = 22;
    }
    std::string::__grow_by(a2, v13, v10 - v13, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v15) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v9 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v28) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v9;
}

void sub_10019E92C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10019E960(void *a1)
{
}

uint64_t sub_10019E978(uint64_t *a1, void *a2)
{
  sub_1000CD96C((uint64_t)v10);
  for (uint64_t i = *a1; i != *a2; i += 824)
  {
    if (i != *a1) {
      sub_10002986C(v10, (uint64_t)", ", 2);
    }
    memset(&__p, 0, sizeof(__p));
    if ((sub_10019CE50(i, &__p) & 1) == 0)
    {
      uint64_t v8 = std::bad_cast::bad_cast(&v12);
      v12.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)v8);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(v10, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  std::stringbuf::str();
  if (v11 < 0) {
    operator delete((void *)v10[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_10019EB90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019EBA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1000CDB10((uint64_t)&a16);
  _Unwind_Resume(a1);
}

uint64_t sub_10019EBE0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 1920;
    (**(void (***)(void))(i - 1920))();
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_10019EC6C()
{
  qword_10047ED60 = 0;
  qword_10047ED58 = 0;
  qword_10047ED50 = (uint64_t)&qword_10047ED58;
  v1[0] = 0x200000000;
  v1[1] = &unk_10047C5E0;
  v1[2] = off_10047C5E8;
  sub_100168E80(&qword_10047ED50, (uint64_t)v1);
  return __cxa_atexit((void (*)(void *))sub_100166DBC, &qword_10047ED50, (void *)&_mh_execute_header);
}

void sub_10019ED08(_Unwind_Exception *a1)
{
  sub_10006A9DC(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

void sub_10019ED24()
{
}

void *sub_10019ED38(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"RttApModel(", 11);
  uint64_t v4 = sub_10002986C(a1, (uint64_t)"mac=", 4);
  sub_100168ABC((uint64_t *)(a2 + 8), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v4, (uint64_t)p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  uint64_t v7 = sub_10002986C(a1, (uint64_t)", ", 2);
  uint64_t v8 = sub_10002986C(v7, (uint64_t)"floorplanX=", 11);
  memset(&v24, 0, sizeof(v24));
  if ((sub_1001645DC((double *)(a2 + 16), &v24) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&__p);
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
    sub_1000DB0D4((uint64_t)&__p);
  }
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v9 = &v24;
  }
  else {
    uint64_t v9 = (std::string *)v24.__r_.__value_.__r.__words[0];
  }
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v10 = HIBYTE(v24.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v10 = v24.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v8, (uint64_t)v9, v10);
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__r_.__value_.__l.__data_);
  }
  char v11 = sub_10002986C(a1, (uint64_t)", ", 2);
  std::bad_cast v12 = sub_10002986C(v11, (uint64_t)"floorplanY=", 11);
  memset(&v24, 0, sizeof(v24));
  if ((sub_1001645DC((double *)(a2 + 24), &v24) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&__p);
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
    sub_1000DB0D4((uint64_t)&__p);
  }
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v13 = &v24;
  }
  else {
    std::string::size_type v13 = (std::string *)v24.__r_.__value_.__r.__words[0];
  }
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v14 = HIBYTE(v24.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v14 = v24.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v12, (uint64_t)v13, v14);
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__r_.__value_.__l.__data_);
  }
  unint64_t v15 = sub_10002986C(a1, (uint64_t)", ", 2);
  unint64_t v16 = sub_10002986C(v15, (uint64_t)"height=", 7);
  memset(&v24, 0, sizeof(v24));
  if ((sub_1001645DC((double *)(a2 + 32), &v24) & 1) == 0)
  {
    std::bad_cast::bad_cast((std::bad_cast *)&__p);
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_100454020;
    sub_1000DB0D4((uint64_t)&__p);
  }
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v17 = &v24;
  }
  else {
    std::string::size_type v17 = (std::string *)v24.__r_.__value_.__r.__words[0];
  }
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v18 = HIBYTE(v24.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v18 = v24.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v16, (uint64_t)v17, v18);
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__r_.__value_.__l.__data_);
  }
  uint64_t v19 = sub_10002986C(a1, (uint64_t)", ", 2);
  unint64_t v20 = sub_10002986C(v19, (uint64_t)"resolutionNanos=", 16);
  sub_100168ABC((uint64_t *)(a2 + 40), &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    long long v21 = &__p;
  }
  else {
    long long v21 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v22 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v22 = __p.__r_.__value_.__l.__size_;
  }
  sub_10002986C(v20, (uint64_t)v21, v22);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_10019F088(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_10019F0E8(void *a1)
{
  *a1 = off_10045D7A8;
  uint64_t v2 = (void (***)(void))a1[1];
  if (v2)
  {
    uint64_t v3 = (void (***)(void))a1[2];
    uint64_t v4 = (void *)a1[1];
    if (v3 != v2)
    {
      int v5 = v3 - 7;
      uint64_t v6 = v3 - 7;
      uint64_t v7 = v3 - 7;
      do
      {
        uint64_t v8 = *v7;
        v7 -= 7;
        (*v8)(v6);
        v5 -= 7;
        BOOL v9 = v6 == v2;
        uint64_t v6 = v7;
      }
      while (!v9);
      uint64_t v4 = (void *)a1[1];
    }
    a1[2] = v2;
    operator delete(v4);
  }

  operator delete();
}

void *sub_10019F1C0(void *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"RttModel(", 9);
  uint64_t v4 = sub_10002986C(a1, (uint64_t)"accessPoints=", 13);
  sub_10019F290((uint64_t *)(a2 + 8));
  if ((v9 & 0x80u) == 0) {
    int v5 = __p;
  }
  else {
    int v5 = (void **)__p[0];
  }
  if ((v9 & 0x80u) == 0) {
    uint64_t v6 = v9;
  }
  else {
    uint64_t v6 = (uint64_t)__p[1];
  }
  sub_10002986C(v4, (uint64_t)v5, v6);
  if ((char)v9 < 0) {
    operator delete(__p[0]);
  }
  sub_10002986C(a1, (uint64_t)")", 1);
  return a1;
}

void sub_10019F274(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10019F290(uint64_t *a1)
{
  sub_1000CD96C((uint64_t)v12);
  uint64_t v2 = sub_10002986C(v12, (uint64_t)"[", 1);
  uint64_t v3 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = v3;
  sub_10019F478(&v9, &v8);
  if ((v11 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v11 & 0x80u) == 0) {
    uint64_t v5 = v11;
  }
  else {
    uint64_t v5 = (uint64_t)__p[1];
  }
  uint64_t v6 = sub_10002986C(v2, (uint64_t)v4, v5);
  sub_10002986C(v6, (uint64_t)"]", 1);
  if ((char)v11 < 0) {
    operator delete(__p[0]);
  }
  std::stringbuf::str();
  if (v13 < 0) {
    operator delete((void *)v12[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_10019F42C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019F440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019F454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, char a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_1000CDB10((uint64_t)&a17);
  _Unwind_Resume(a1);
}

uint64_t sub_10019F478(uint64_t *a1, void *a2)
{
  sub_1000CD96C((uint64_t)v10);
  for (uint64_t i = *a1; i != *a2; i += 56)
  {
    if (i != *a1) {
      sub_10002986C(v10, (uint64_t)", ", 2);
    }
    memset(&__p, 0, sizeof(__p));
    if ((sub_10019F6E0(i, &__p) & 1) == 0)
    {
      uint64_t v8 = std::bad_cast::bad_cast(&v12);
      v12.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)v8);
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    sub_10002986C(v10, (uint64_t)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  std::stringbuf::str();
  if (v11 < 0) {
    operator delete((void *)v10[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_10019F690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10019F6A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  sub_1000CDB10((uint64_t)&a16);
  _Unwind_Resume(a1);
}

uint64_t sub_10019F6E0(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  long long v36 = &v35;
  std::string::size_type v37 = (char *)&v35 + 2;
  uint64_t v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  sub_10019ED38(&v31, a1);
  uint64_t v5 = (char *)&v31 + (void)*(v31 - 3);
  int v6 = *((_DWORD *)v5 + 8);
  uint64_t v7 = *((void *)v5 + 5);
  uint64_t v8 = *(void *)(v7 + 40);
  long long v36 = (uint64_t *)v8;
  uint64_t v9 = *(char **)(v7 + 48);
  std::string::size_type v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          std::bad_cast v12 = a2;
        }
        else {
          std::bad_cast v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          std::string::size_type v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          std::string::size_type v17 = v12;
          std::string::size_type v18 = (char *)v8;
        }
        else
        {
          std::string::size_type v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          std::string::size_type v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          uint64_t v19 = (long long *)(v8 + 16);
          unint64_t v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)unint64_t v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          std::string::size_type v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      std::bad_cast v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_10019F9A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10019F9D4(void *a1)
{
}

void *sub_10019F9EC(void *a1)
{
  *a1 = off_10045D7E8;
  uint64_t v2 = (void *)a1[7];
  if (v2)
  {
    a1[8] = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_10019FA3C(void *a1)
{
  *a1 = off_10045D7E8;
  uint64_t v2 = (void *)a1[7];
  if (v2)
  {
    a1[8] = v2;
    operator delete(v2);
  }

  operator delete();
}

uint64_t sub_10019FAAC(uint64_t result, double a2)
{
  *(double *)(result + 96) = a2;
  return result;
}

uint64_t sub_10019FAB4(uint64_t result, double a2)
{
  *(double *)(result + 104) = a2;
  return result;
}

uint64_t sub_10019FABC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 112) = a2;
  *(unsigned char *)(result + 152) |= 1u;
  return result;
}

uint64_t sub_10019FAD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 116) = a2;
  *(unsigned char *)(result + 152) |= 2u;
  return result;
}

uint64_t sub_10019FAE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 120) = a2;
  *(unsigned char *)(result + 152) |= 4u;
  return result;
}

uint64_t sub_10019FAF8(uint64_t result, double a2)
{
  *(double *)(result + 128) = a2;
  *(unsigned char *)(result + 152) |= 8u;
  return result;
}

uint64_t sub_10019FB0C(uint64_t result, double a2)
{
  *(double *)(result + 136) = a2;
  *(unsigned char *)(result + 152) |= 0x10u;
  return result;
}

uint64_t sub_10019FB20(uint64_t result, double a2)
{
  *(double *)(result + 144) = a2;
  *(unsigned char *)(result + 152) |= 0x20u;
  return result;
}

uint64_t sub_10019FB34(uint64_t a1, _DWORD *a2)
{
  unsigned int v2 = a2[7];
  unsigned int v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  int v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(void *)a2 + 32))(a2, "HealthIndicators");
  int v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "prbPipelinedSaysYield", 4, 1)+ v6;
  int v8 = (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 8));
  int v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "prbCoarseIndoorSaysIndoor", 4, 2);
  int v11 = v10 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 16));
  int v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v13 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "prbWifiSaysIndoor", 4, 3);
  int v14 = v13 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 24));
  int v15 = v14 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v16 = v12
      + v15
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "prbGpsSaysIndoor", 4, 4);
  int v17 = (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 32));
  int v18 = v17 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v19 = v18
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "prbParticleFilterSaysYield", 4, 5);
  int v20 = v19 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 40));
  int v21 = v16 + v20 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v22 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "prbOnFloors", 4, 6);
  int v23 = v22 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 48));
  int v24 = v23 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v25 = v24
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "prbOnFloor", 15, 7);
  int v26 = v21
      + v25
      + (*(uint64_t (**)(_DWORD *, uint64_t, void))(*(void *)a2 + 88))(a2, 4, (*(void *)(a1 + 64) - *(void *)(a1 + 56)) >> 3);
  for (uint64_t i = *(double **)(a1 + 56);
        i != *(double **)(a1 + 64);
        v26 += (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, v28))
  {
    double v28 = *i++;
  }
  int v29 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 96))(a2);
  int v30 = v26 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v31 = v29
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "prbInlier", 4, 8);
  int v32 = v31 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 80)) + v30;
  int v33 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v34 = v33
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "prbLocalizerIoWrapperSaysWifiOk", 4, 9);
  int v35 = v34 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 88));
  int v36 = v32 + v35 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v37 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "prbInjectionOccupancyRetryLimitOk", 4, 10);
  int v38 = v37 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 96));
  int v39 = v38 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v40 = v39
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "prbInjectionGainRetryLimitOk", 4, 11);
  int v41 = v36 + v40 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 104));
  int v42 = v41 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  char v43 = *(unsigned char *)(a1 + 152);
  if (v43)
  {
    int v48 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "pfYieldStatusBeforeCalculatePose", 8, 12);
    int v49 = v48 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 112));
    v42 += v49 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
    char v43 = *(unsigned char *)(a1 + 152);
    if ((v43 & 2) == 0)
    {
LABEL_6:
      if ((v43 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a1 + 152) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v50 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "yieldStatusBeforeCalculatePose", 8, 13);
  int v51 = v42 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 116));
  int v42 = v50 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v51;
  char v43 = *(unsigned char *)(a1 + 152);
  if ((v43 & 4) == 0)
  {
LABEL_7:
    if ((v43 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_14:
  int v52 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "motionUpdateSource", 8, 14);
  int v53 = v42 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 120));
  int v42 = v52 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v53;
  char v43 = *(unsigned char *)(a1 + 152);
  if ((v43 & 8) == 0)
  {
LABEL_8:
    if ((v43 & 0x10) == 0) {
      goto LABEL_9;
    }
LABEL_16:
    int v56 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "prbRawCLOutdoorServiceSaysIndoor", 4, 16);
    int v57 = v42 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 136));
    int v42 = v56 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v57;
    if ((*(unsigned char *)(a1 + 152) & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_15:
  int v54 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "prbZAxisSaysIndoor", 4, 15);
  int v55 = v42 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 128));
  int v42 = v54 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v55;
  char v43 = *(unsigned char *)(a1 + 152);
  if ((v43 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_9:
  if ((v43 & 0x20) != 0)
  {
LABEL_10:
    int v44 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "prbCoarseIndoorSaysIndoorWifiAndGps", 4, 17);
    int v45 = v42 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 144));
    int v42 = v44 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v45;
  }
LABEL_11:
  int v46 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 64))(a2);
  uint64_t result = v46 + v42 + (*(unsigned int (**)(_DWORD *))(*(void *)a2 + 40))(a2);
  --a2[6];
  return result;
}

void sub_1001A0778()
{
}

uint64_t sub_1001A078C(uint64_t a1, _DWORD *a2)
{
  unsigned int v2 = a2[7];
  unsigned int v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  int v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(void *)a2 + 32))(a2, "FloorTransitionState");
  int v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "startFloorNumber", 8, 1)+ v6;
  int v8 = (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 8));
  int v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "transitionDirection", 8, 2);
  int v11 = v10 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 12));
  int v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v13 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "timestampNanos", 10, 3);
  LODWORD(a1) = v13 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 16));
  LODWORD(a1) = a1 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  LODWORD(a1) = v12 + a1 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 64))(a2);
  uint64_t result = a1 + (*(unsigned int (**)(_DWORD *))(*(void *)a2 + 40))(a2);
  --a2[6];
  return result;
}

double sub_1001A0A84(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045D808;
  *(unsigned char *)(a1 + 24) &= 0xF8u;
  double result = *(double *)(a2 + 8);
  *(double *)(a1 + 8) = result;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return result;
}

uint64_t sub_1001A0AC8(uint64_t a1)
{
  *(void *)a1 = off_10045D828;
  if (*(char *)(a1 + 743) < 0) {
    operator delete(*(void **)(a1 + 720));
  }
  nullsub_15(a1 + 528);
  *(void *)(a1 + 304) = off_10045D7E8;
  unsigned int v2 = *(void **)(a1 + 360);
  if (v2)
  {
    *(void *)(a1 + 368) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 127) < 0) {
    operator delete(*(void **)(a1 + 104));
  }
  nullsub_15(a1 + 40);
  nullsub_17(a1 + 8);
  return a1;
}

void sub_1001A0B74(uint64_t a1)
{
  sub_1001A0AC8(a1);

  operator delete();
}

double sub_1001A0BAC(uint64_t a1, uint64_t a2)
{
  *(void *)&double result = sub_10007B704(a1 + 8, a2).n128_u64[0];
  return result;
}

double sub_1001A0BB4(uint64_t a1, uint64_t a2)
{
  *(void *)&double result = sub_10007B704(a1 + 40, a2).n128_u64[0];
  return result;
}

uint64_t sub_1001A0BBC(uint64_t result, double a2)
{
  *(double *)(result + 72) = a2;
  return result;
}

uint64_t sub_1001A0BC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 88) = a2;
  *(void *)(result + 752) |= 0x10uLL;
  return result;
}

std::string *sub_1001A0BD8(uint64_t a1, const std::string *a2)
{
  return std::string::operator=((std::string *)(a1 + 104), a2);
}

uint64_t sub_1001A0BE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 128) = a2;
  *(void *)(result + 752) |= 0x80uLL;
  return result;
}

uint64_t sub_1001A0BF4(uint64_t result, double a2)
{
  *(double *)(result + 152) = a2;
  return result;
}

uint64_t sub_1001A0BFC(uint64_t result, double a2)
{
  *(double *)(result + 192) = a2;
  *(void *)(result + 752) |= 0x8000uLL;
  return result;
}

uint64_t sub_1001A0C10(uint64_t result, uint64_t a2)
{
  *(void *)(result + 240) = a2;
  *(void *)(result + 752) |= 0x200000uLL;
  return result;
}

uint64_t sub_1001A0C24(uint64_t result, double a2)
{
  *(double *)(result + 248) = a2;
  *(void *)(result + 752) |= 0x400000uLL;
  return result;
}

uint64_t sub_1001A0C38(uint64_t result, double a2)
{
  *(double *)(result + 256) = a2;
  *(void *)(result + 752) |= 0x800000uLL;
  return result;
}

uint64_t sub_1001A0C4C(uint64_t result, double a2)
{
  *(double *)(result + 264) = a2;
  *(void *)(result + 752) |= 0x1000000uLL;
  return result;
}

uint64_t sub_1001A0C60(uint64_t result, double a2)
{
  *(double *)(result + 280) = a2;
  *(void *)(result + 752) |= 0x4000000uLL;
  return result;
}

uint64_t sub_1001A0C74(uint64_t result, double a2)
{
  *(double *)(result + 288) = a2;
  *(void *)(result + 752) |= 0x8000000uLL;
  return result;
}

uint64_t sub_1001A0C88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 300) = a2;
  *(void *)(result + 752) |= 0x20000000uLL;
  return result;
}

uint64_t sub_1001A0C9C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 464) = a2;
  return result;
}

uint64_t sub_1001A0CA4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 465) = a2;
  return result;
}

uint64_t sub_1001A0CAC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 472) = a2;
  return result;
}

uint64_t sub_1001A0CB4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 480) = a2;
  return result;
}

uint64_t sub_1001A0CBC(uint64_t result, double a2)
{
  *(double *)(result + 488) = a2;
  *(void *)(result + 752) |= 0x400000000uLL;
  return result;
}

uint64_t sub_1001A0CD0(uint64_t result, double a2)
{
  *(double *)(result + 496) = a2;
  *(void *)(result + 752) |= 0x800000000uLL;
  return result;
}

uint64_t sub_1001A0CE4(uint64_t result, double a2)
{
  *(double *)(result + 504) = a2;
  *(void *)(result + 752) |= 0x1000000000uLL;
  return result;
}

uint64_t sub_1001A0CF8(uint64_t result, double a2)
{
  *(double *)(result + 512) = a2;
  return result;
}

uint64_t sub_1001A0D00(uint64_t result, int a2)
{
  *(_DWORD *)(result + 520) = a2;
  *(void *)(result + 752) |= 0x4000000000uLL;
  return result;
}

uint64_t sub_1001A0D14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 524) = a2;
  *(void *)(result + 752) |= 0x8000000000uLL;
  return result;
}

void sub_1001A0D28(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 752) |= 0x10000000000uLL;
}

uint64_t sub_1001A0D5C(uint64_t result, double a2)
{
  *(double *)(result + 560) = a2;
  *(void *)(result + 752) |= 0x20000000000uLL;
  return result;
}

double sub_1001A0D70(uint64_t a1, uint64_t a2)
{
  double result = *(double *)(a2 + 8);
  *(double *)(a1 + 576) = result;
  *(void *)(a1 + 584) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 752) |= 0x40000000000uLL;
  return result;
}

uint64_t sub_1001A0D98(uint64_t result, double a2)
{
  *(double *)(result + 600) = a2;
  *(void *)(result + 752) |= 0x80000000000uLL;
  return result;
}

uint64_t sub_1001A0DAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 608) = a2;
  *(void *)(result + 752) |= 0x100000000000uLL;
  return result;
}

uint64_t sub_1001A0DC0(uint64_t result, double a2)
{
  *(double *)(result + 648) = a2;
  *(void *)(result + 752) |= 0x2000000000000uLL;
  return result;
}

uint64_t sub_1001A0DD4(uint64_t result, double a2)
{
  *(double *)(result + 656) = a2;
  *(void *)(result + 752) |= 0x4000000000000uLL;
  return result;
}

uint64_t sub_1001A0DE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 664) = a2;
  *(void *)(result + 752) |= 0x8000000000000uLL;
  return result;
}

uint64_t sub_1001A0DFC(uint64_t result, double a2)
{
  *(double *)(result + 672) = a2;
  *(void *)(result + 752) |= 0x10000000000000uLL;
  return result;
}

uint64_t sub_1001A0E10(uint64_t result, double a2)
{
  *(double *)(result + 680) = a2;
  *(void *)(result + 752) |= 0x20000000000000uLL;
  return result;
}

uint64_t sub_1001A0E24(uint64_t result, double a2)
{
  *(double *)(result + 688) = a2;
  *(void *)(result + 752) |= 0x40000000000000uLL;
  return result;
}

uint64_t sub_1001A0E38(uint64_t result, double a2)
{
  *(double *)(result + 696) = a2;
  *(void *)(result + 752) |= 0x80000000000000uLL;
  return result;
}

uint64_t sub_1001A0E4C(uint64_t a1, _DWORD *a2)
{
  unsigned int v2 = a2[7];
  unsigned int v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  int v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(void *)a2 + 32))(a2, "PoseEstimate");
  int v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "userPosition", 12, 1)+ v6;
  int v8 = sub_1001A9A1C(a1 + 8, a2);
  int v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "userHeading", 4, 2);
  int v11 = v10 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 72));
  int v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v13 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "screenHeading", 4, 3);
  int v14 = v13 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 80));
  int v15 = v12 + v14 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  if ((*(unsigned char *)(a1 + 752) & 0x10) != 0)
  {
    int v16 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "walking", 8, 4);
    int v17 = v16 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 88));
    v15 += v17 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  }
  int v18 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "measuredHeading", 4, 5);
  int v19 = v15 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 96));
  int v20 = v18 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v21 = v20
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "floorId", 11, 6);
  int v22 = v21 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(void *)a2 + 168))(a2, a1 + 104);
  int v23 = v22 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v19;
  uint64_t v24 = *(void *)(a1 + 752);
  if ((v24 & 0x200000000000000) != 0)
  {
    int v100 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "DEPRECATED_floorIndex", 8, 7);
    int v101 = v100 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 712));
    v23 += v101 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
    uint64_t v24 = *(void *)(a1 + 752);
    if ((v24 & 0x400000000000000) == 0)
    {
LABEL_6:
      if ((v24 & 0x100) == 0) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
  }
  else if ((v24 & 0x400000000000000) == 0)
  {
    goto LABEL_6;
  }
  int v102 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "DEPRECATED_floorplanId", 11, 8);
  int v103 = v23 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(void *)a2 + 168))(a2, a1 + 720);
  int v23 = v102 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v103;
  if ((*(void *)(a1 + 752) & 0x100) != 0)
  {
LABEL_7:
    int v25 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "DEPRECATED_accuracyRadius", 4, 9);
    int v26 = v23 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 136));
    int v23 = v25 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v26;
  }
LABEL_8:
  int v27 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "latLonPosition", 12, 10);
  int v28 = v23 + sub_1000499E8(a1 + 40, a2);
  int v29 = v27 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v30 = v29
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "gainDbm", 4, 11);
  int v31 = v30 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 144));
  int v32 = v31 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v28;
  if (*(unsigned char *)(a1 + 759))
  {
    int v33 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "DEPRECATED_onFloorProbability", 4, 12);
    int v34 = v33 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 704));
    v32 += v34 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  }
  int v35 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "sigmaDist", 4, 13);
  int v36 = v32 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 152));
  int v37 = v35 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v38 = v37
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "compoundConfidence", 4, 14);
  int v39 = v38 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 160));
  int v40 = v39 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v41 = v40
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "probabilityOnMappedLocation", 4, 15);
  int v42 = v41 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 168));
  int v43 = v42 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v44 = v43
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "probabilityOnFloorId", 4, 16);
  int v45 = v44 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 176)) + v36;
  int v46 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v47 = v46
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "probabilityInlier", 4, 17);
  int v48 = v47 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 184));
  int v49 = v45 + v48 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  if ((*(unsigned char *)(a1 + 759) & 8) != 0)
  {
    int v50 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "DEPRECATED_probabilityRadiusInterval", 4, 18);
    int v51 = v50 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 744));
    v49 += v51 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  }
  int v52 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "scaledFloorplanX", 4, 19);
  int v53 = v49 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 200));
  int v54 = v52 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v55 = v54
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "scaledFloorplanY", 4, 20);
  int v56 = v55 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 208));
  int v57 = v56 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v58 = v57
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "origFloorplanX", 4, 21);
  int v59 = v58 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 216));
  int v60 = v59 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v61 = v60
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "origFloorplanY", 4, 22);
  int v62 = v61 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 224));
  int v63 = v62 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v53;
  uint64_t v64 = *(void *)(a1 + 752);
  if ((v64 & 0x100000) != 0)
  {
    int v104 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "origFloorplanSigmaDist", 4, 23);
    int v105 = v104 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 232));
    v63 += v105 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
    uint64_t v64 = *(void *)(a1 + 752);
    if ((v64 & 0x200000) == 0)
    {
LABEL_14:
      if ((v64 & 0x400000) == 0) {
        goto LABEL_15;
      }
      goto LABEL_55;
    }
  }
  else if ((v64 & 0x200000) == 0)
  {
    goto LABEL_14;
  }
  int v106 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "timestampNanos", 10, 24);
  int v107 = v63 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 240));
  int v63 = v106 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v107;
  uint64_t v64 = *(void *)(a1 + 752);
  if ((v64 & 0x400000) == 0)
  {
LABEL_15:
    if ((v64 & 0x800000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_56;
  }
LABEL_55:
  int v108 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "userHeadingVariance", 4, 25);
  int v109 = v63 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 248));
  int v63 = v108 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v109;
  uint64_t v64 = *(void *)(a1 + 752);
  if ((v64 & 0x800000) == 0)
  {
LABEL_16:
    if ((v64 & 0x1000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_57;
  }
LABEL_56:
  int v110 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "gyroBias", 4, 26);
  int v111 = v63 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 256));
  int v63 = v110 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v111;
  uint64_t v64 = *(void *)(a1 + 752);
  if ((v64 & 0x1000000) == 0)
  {
LABEL_17:
    if ((v64 & 0x2000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_58;
  }
LABEL_57:
  int v112 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "measuredHeadingIndependence", 4, 27);
  int v113 = v63 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 264));
  int v63 = v112 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v113;
  uint64_t v64 = *(void *)(a1 + 752);
  if ((v64 & 0x2000000) == 0)
  {
LABEL_18:
    if ((v64 & 0x4000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_59;
  }
LABEL_58:
  int v114 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "attitudeHeading", 4, 28);
  int v115 = v63 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 272));
  int v63 = v114 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v115;
  uint64_t v64 = *(void *)(a1 + 752);
  if ((v64 & 0x4000000) == 0)
  {
LABEL_19:
    if ((v64 & 0x8000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_59:
  int v116 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "horizontalAccuracy", 4, 29);
  int v117 = v63 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 280));
  int v63 = v116 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v117;
  if ((*(void *)(a1 + 752) & 0x8000000) != 0)
  {
LABEL_20:
    int v65 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "verticalAccuracy", 4, 30);
    int v66 = v63 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 288));
    int v63 = v65 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v66;
  }
LABEL_21:
  int v67 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "yieldStatus", 8, 31);
  int v68 = v63 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 296));
  int v69 = v67 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v68;
  if ((*(unsigned char *)(a1 + 755) & 0x20) != 0)
  {
    int v70 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "yieldFailureType", 8, 32);
    int v71 = v70 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 300));
    v69 += v71 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  }
  int v72 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "indoorNeedsGps", 2, 33);
  int v73 = v69 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 120))(a2, *(unsigned __int8 *)(a1 + 464));
  int v74 = v72 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v73;
  if ((*(unsigned char *)(a1 + 752) & 0x80) != 0)
  {
    int v75 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "floorNumber", 8, 34);
    int v76 = v75 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 128));
    v74 += v76 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  }
  int v77 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "gpsStrobingActive", 2, 36);
  int v78 = v74 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 120))(a2, *(unsigned __int8 *)(a1 + 465));
  int v79 = v77 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v80 = v79
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "lastWifiDataTimestampNanos", 10, 37);
  int v81 = v80 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 472));
  int v82 = v81 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v83 = v82
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "healthIndicators", 12, 38);
  int v84 = v83 + sub_10019FB34(a1 + 304, a2);
  int v85 = v84 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v78;
  uint64_t v86 = *(void *)(a1 + 752);
  if ((v86 & 0x400000000) != 0)
  {
    int v118 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "Pxx", 4, 39);
    int v119 = v118 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 488));
    v85 += v119 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
    uint64_t v86 = *(void *)(a1 + 752);
    if ((v86 & 0x800000000) == 0)
    {
LABEL_27:
      if ((v86 & 0x1000000000) == 0) {
        goto LABEL_29;
      }
      goto LABEL_28;
    }
  }
  else if ((v86 & 0x800000000) == 0)
  {
    goto LABEL_27;
  }
  int v120 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "Pxy", 4, 40);
  int v121 = v85 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 496));
  int v85 = v120 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v121;
  if ((*(void *)(a1 + 752) & 0x1000000000) != 0)
  {
LABEL_28:
    int v87 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "Pyy", 4, 41);
    int v88 = v85 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 504));
    int v85 = v87 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v88;
  }
LABEL_29:
  int v89 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "lifespan", 4, 42);
  int v90 = v85 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 512));
  int v91 = v89 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v92 = v91
      + (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "lastBeaconDataTimestampNanos", 10, 43);
  int v93 = v92 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 480));
  int v94 = v93 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v90;
  uint64_t v95 = *(void *)(a1 + 752);
  if ((v95 & 0x4000000000) != 0)
  {
    int v122 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "numOfLoadedLocations", 8, 44);
    int v123 = v122 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 520));
    v94 += v123 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
    uint64_t v95 = *(void *)(a1 + 752);
    if ((v95 & 0x8000000000) == 0)
    {
LABEL_31:
      if ((v95 & 0x10000000000) == 0) {
        goto LABEL_32;
      }
      goto LABEL_66;
    }
  }
  else if ((v95 & 0x8000000000) == 0)
  {
    goto LABEL_31;
  }
  int v124 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "yieldSource", 8, 45);
  int v125 = v94 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 524));
  int v94 = v124 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v125;
  uint64_t v95 = *(void *)(a1 + 752);
  if ((v95 & 0x10000000000) == 0)
  {
LABEL_32:
    if ((v95 & 0x20000000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_67;
  }
LABEL_66:
  int v126 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "nonwalkableLatLonPosition", 12, 46);
  int v127 = v94 + sub_1000499E8(a1 + 528, a2);
  int v94 = v126 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v127;
  uint64_t v95 = *(void *)(a1 + 752);
  if ((v95 & 0x20000000000) == 0)
  {
LABEL_33:
    if ((v95 & 0x40000000000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_68;
  }
LABEL_67:
  int v128 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "signedDistanceToSurveyWithToleranceMaximized", 4, 47);
  int v129 = v94 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 560));
  int v94 = v128 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v129;
  uint64_t v95 = *(void *)(a1 + 752);
  if ((v95 & 0x40000000000) == 0)
  {
LABEL_34:
    if ((v95 & 0x80000000000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_69;
  }
LABEL_68:
  int v130 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "floorTransitionState", 12, 48);
  int v131 = v94 + sub_1001A078C(a1 + 568, a2);
  int v94 = v130 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v131;
  uint64_t v95 = *(void *)(a1 + 752);
  if ((v95 & 0x80000000000) == 0)
  {
LABEL_35:
    if ((v95 & 0x100000000000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_70;
  }
LABEL_69:
  int v132 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "signedDistanceToFloorplanWithToleranceMaximized", 4, 49);
  int v133 = v94 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 600));
  int v94 = v132 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v133;
  uint64_t v95 = *(void *)(a1 + 752);
  if ((v95 & 0x100000000000) == 0)
  {
LABEL_36:
    if ((v95 & 0x200000000000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_71;
  }
LABEL_70:
  int v134 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "yieldType", 8, 50);
  int v135 = v94 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 608));
  int v94 = v134 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v135;
  uint64_t v95 = *(void *)(a1 + 752);
  if ((v95 & 0x200000000000) == 0)
  {
LABEL_37:
    if ((v95 & 0x400000000000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_72;
  }
LABEL_71:
  int v136 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "speed", 4, 51);
  int v137 = v94 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 616));
  int v94 = v136 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v137;
  uint64_t v95 = *(void *)(a1 + 752);
  if ((v95 & 0x400000000000) == 0)
  {
LABEL_38:
    if ((v95 & 0x800000000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_73;
  }
LABEL_72:
  int v138 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "speedAccuracy", 4, 52);
  int v139 = v94 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 624));
  int v94 = v138 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v139;
  uint64_t v95 = *(void *)(a1 + 752);
  if ((v95 & 0x800000000000) == 0)
  {
LABEL_39:
    if ((v95 & 0x1000000000000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_74;
  }
LABEL_73:
  int v140 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "bearing", 4, 53);
  int v141 = v94 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 632));
  int v94 = v140 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v141;
  uint64_t v95 = *(void *)(a1 + 752);
  if ((v95 & 0x1000000000000) == 0)
  {
LABEL_40:
    if ((v95 & 0x2000000000000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_75;
  }
LABEL_74:
  int v142 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "bearingAccuracy", 4, 54);
  int v143 = v94 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 640));
  int v94 = v142 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v143;
  uint64_t v95 = *(void *)(a1 + 752);
  if ((v95 & 0x2000000000000) == 0)
  {
LABEL_41:
    if ((v95 & 0x4000000000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_76;
  }
LABEL_75:
  int v144 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "gpsSignedDistanceToFloorplanWithToleranceMaximized", 4, 55);
  int v145 = v94 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 648));
  int v94 = v144 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v145;
  uint64_t v95 = *(void *)(a1 + 752);
  if ((v95 & 0x4000000000000) == 0)
  {
LABEL_42:
    if ((v95 & 0x8000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_77;
  }
LABEL_76:
  int v146 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "gpsSignedDistanceToSurveyWithToleranceMaximized", 4, 56);
  int v147 = v94 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 656));
  int v94 = v146 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v147;
  uint64_t v95 = *(void *)(a1 + 752);
  if ((v95 & 0x8000) == 0)
  {
LABEL_43:
    if ((v95 & 0x8000000000000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_78;
  }
LABEL_77:
  int v148 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "selectedWeightFractionOfModeParticles", 4, 57);
  int v149 = v94 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 192));
  int v94 = v148 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v149;
  uint64_t v95 = *(void *)(a1 + 752);
  if ((v95 & 0x8000000000000) == 0)
  {
LABEL_44:
    if ((v95 & 0x10000000000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_79;
  }
LABEL_78:
  int v150 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "bodyFixedState", 8, 58);
  int v151 = v94 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 144))(a2, *(unsigned int *)(a1 + 664));
  int v94 = v150 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v151;
  uint64_t v95 = *(void *)(a1 + 752);
  if ((v95 & 0x10000000000000) == 0)
  {
LABEL_45:
    if ((v95 & 0x20000000000000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_80;
  }
LABEL_79:
  int v152 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "machAbsoluteTimestampSecs", 4, 59);
  int v153 = v94 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 672));
  int v94 = v152 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v153;
  uint64_t v95 = *(void *)(a1 + 752);
  if ((v95 & 0x20000000000000) == 0)
  {
LABEL_46:
    if ((v95 & 0x40000000000000) == 0) {
      goto LABEL_47;
    }
LABEL_81:
    int v156 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "cfTimestampSecs", 4, 61);
    int v157 = v94 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 688));
    int v94 = v156 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v157;
    if ((*(void *)(a1 + 752) & 0x80000000000000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_48;
  }
LABEL_80:
  int v154 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "machContinuousTimestampSecs", 4, 60);
  int v155 = v94 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 680));
  int v94 = v154 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v155;
  uint64_t v95 = *(void *)(a1 + 752);
  if ((v95 & 0x40000000000000) != 0) {
    goto LABEL_81;
  }
LABEL_47:
  if ((v95 & 0x80000000000000) != 0)
  {
LABEL_48:
    int v96 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "altitude", 4, 62);
    int v97 = v94 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 696));
    int v94 = v96 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v97;
  }
LABEL_49:
  int v98 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 64))(a2);
  uint64_t result = v98 + v94 + (*(unsigned int (**)(_DWORD *))(*(void *)a2 + 40))(a2);
  --a2[6];
  return result;
}

uint64_t sub_1001A3588(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045D828;
  *(void *)(a1 + 8) = off_10045DA98;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 32) &= 0xFCu;
  uint64_t v4 = a1 + 40;
  *(void *)(a1 + 40) = off_10045DAB8;
  *(_OWORD *)(a1 + 48) = 0u;
  *(unsigned char *)(a1 + 64) &= 0xFCu;
  *(void *)(a1 + 104) = 0;
  uint64_t v5 = (std::string *)(a1 + 104);
  *(_OWORD *)(a1 + 112) = 0u;
  *(void *)(a1 + 304) = off_10045D7E8;
  *(_DWORD *)(a1 + 424) = 0;
  *(_OWORD *)(a1 + 312) = 0u;
  *(_OWORD *)(a1 + 328) = 0u;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(void *)(a1 + 448) = 0;
  *(_OWORD *)(a1 + 432) = 0u;
  *(unsigned char *)(a1 + 456) &= 0xC0u;
  uint64_t v6 = a1 + 528;
  *(void *)(a1 + 528) = off_10045DAB8;
  *(_OWORD *)(a1 + 536) = 0u;
  *(unsigned char *)(a1 + 552) &= 0xFCu;
  *(void *)(a1 + 568) = off_10045D808;
  *(_OWORD *)(a1 + 576) = 0u;
  *(unsigned char *)(a1 + 592) &= 0xF8u;
  int v7 = (std::string *)(a1 + 720);
  *(void *)(a1 + 736) = 0;
  *(_OWORD *)(a1 + 720) = 0u;
  *(void *)(a1 + 752) = *(void *)(a1 + 752) & 0xF000000000000000 | 0x10000000;
  sub_10007B704(a1 + 8, a2 + 8);
  sub_10007B704(v4, a2 + 40);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  std::string::operator=(v5, (const std::string *)(a2 + 104));
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  if (a1 != a2) {
    sub_10007C388((void *)(a1 + 360), *(char **)(a2 + 360), *(char **)(a2 + 368), (uint64_t)(*(void *)(a2 + 368) - *(void *)(a2 + 360)) >> 3);
  }
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(_DWORD *)(a1 + 424) = *(_DWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(unsigned char *)(a1 + 456) = *(unsigned char *)(a2 + 456);
  *(_WORD *)(a1 + 464) = *(_WORD *)(a2 + 464);
  uint64_t v8 = *(void *)(a2 + 480);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = v8;
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  sub_10007B704(v6, a2 + 528);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(_DWORD *)(a1 + 608) = *(_DWORD *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(_DWORD *)(a1 + 664) = *(_DWORD *)(a2 + 664);
  *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(_DWORD *)(a1 + 712) = *(_DWORD *)(a2 + 712);
  std::string::operator=(v7, (const std::string *)(a2 + 720));
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  return a1;
}

void sub_1001A3918(_Unwind_Exception *a1)
{
  if (*(char *)(v2 + 743) < 0)
  {
    operator delete(*v7);
    nullsub_15(v6);
    *(void *)(v2 + 304) = v5;
    int v9 = *(void **)(v2 + 360);
    if (!v9)
    {
LABEL_3:
      if ((*(char *)(v2 + 127) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else
  {
    nullsub_15(v6);
    *(void *)(v2 + 304) = v5;
    int v9 = *(void **)(v2 + 360);
    if (!v9) {
      goto LABEL_3;
    }
  }
  *(void *)(v2 + 368) = v9;
  operator delete(v9);
  if ((*(char *)(v2 + 127) & 0x80000000) == 0)
  {
LABEL_4:
    nullsub_15(v3);
    nullsub_17(v1);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(*v4);
  nullsub_15(v3);
  nullsub_17(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001A39A8(uint64_t a1, uint64_t a2)
{
  sub_10007B704(a1 + 8, a2 + 8);
  sub_10007B704(a1 + 40, a2 + 40);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  std::string::operator=((std::string *)(a1 + 104), (const std::string *)(a2 + 104));
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  if (a1 != a2) {
    sub_10007C388((void *)(a1 + 360), *(char **)(a2 + 360), *(char **)(a2 + 368), (uint64_t)(*(void *)(a2 + 368) - *(void *)(a2 + 360)) >> 3);
  }
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(_DWORD *)(a1 + 424) = *(_DWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(unsigned char *)(a1 + 456) = *(unsigned char *)(a2 + 456);
  *(_WORD *)(a1 + 464) = *(_WORD *)(a2 + 464);
  uint64_t v4 = *(void *)(a2 + 480);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = v4;
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  sub_10007B704(a1 + 528, a2 + 528);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(_DWORD *)(a1 + 608) = *(_DWORD *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(_DWORD *)(a1 + 664) = *(_DWORD *)(a2 + 664);
  *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(_DWORD *)(a1 + 712) = *(_DWORD *)(a2 + 712);
  std::string::operator=((std::string *)(a1 + 720), (const std::string *)(a2 + 720));
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  return a1;
}

uint64_t sub_1001A3BC0(uint64_t a1)
{
  *(void *)a1 = off_10045D848;
  if (*(char *)(a1 + 127) < 0)
  {
    operator delete(*(void **)(a1 + 104));
    uint64_t v2 = *(void ***)(a1 + 72);
    if (!v2)
    {
LABEL_3:
      uint64_t v3 = *(void ***)(a1 + 48);
      if (!v3) {
        goto LABEL_20;
      }
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v2 = *(void ***)(a1 + 72);
    if (!v2) {
      goto LABEL_3;
    }
  }
  uint64_t v4 = *(void ***)(a1 + 80);
  uint64_t v5 = v2;
  if (v4 != v2)
  {
    do
    {
      if (*((char *)v4 - 1) < 0) {
        operator delete(*(v4 - 3));
      }
      v4 -= 3;
    }
    while (v4 != v2);
    uint64_t v5 = *(void ***)(a1 + 72);
  }
  *(void *)(a1 + 80) = v2;
  operator delete(v5);
  uint64_t v3 = *(void ***)(a1 + 48);
  if (v3)
  {
LABEL_13:
    uint64_t v6 = *(void ***)(a1 + 56);
    int v7 = v3;
    if (v6 != v3)
    {
      do
      {
        if (*((char *)v6 - 1) < 0) {
          operator delete(*(v6 - 3));
        }
        v6 -= 3;
      }
      while (v6 != v3);
      int v7 = *(void ***)(a1 + 48);
    }
    *(void *)(a1 + 56) = v3;
    operator delete(v7);
  }
LABEL_20:
  nullsub_15(a1 + 16);
  return a1;
}

void sub_1001A3CC8(uint64_t a1)
{
  sub_1001A3BC0(a1);

  operator delete();
}

double sub_1001A3D00(uint64_t a1, uint64_t a2)
{
  *(void *)&double result = sub_10007B704(a1 + 16, a2).n128_u64[0];
  return result;
}

uint64_t sub_1001A3D08(uint64_t a1, uint64_t *a2)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v44 = 0;
  int v42 = 0;
  __int16 v41 = 0;
  int v4 = (*(uint64_t (**)(uint64_t *, void **))(*a2 + 200))(a2, __p);
  uint64_t v5 = a1 + 144;
  uint64_t v6 = a1 + 136;
  uint64_t v7 = a1 + 128;
  while (1)
  {
    int v8 = (*(uint64_t (**)(uint64_t *, void **, int *, __int16 *))(*a2 + 216))(a2, __p, &v42, &v41) + v4;
    if (!v42) {
      break;
    }
    switch(v41)
    {
      case 1:
        uint64_t v9 = *a2;
        if (v42 != 10) {
          goto LABEL_37;
        }
        int v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 320))(a2, a1 + 8) + v8;
        *(_WORD *)(a1 + 152) |= 1u;
        break;
      case 2:
        if (v42 != 12) {
          goto LABEL_31;
        }
        int v10 = sub_1001A9ECC(a1 + 16, a2) + v8;
        *(_WORD *)(a1 + 152) |= 2u;
        break;
      case 3:
        if (v42 != 15) {
          goto LABEL_31;
        }
        uint64_t v11 = *(void *)(a1 + 48);
        for (uint64_t i = *(void *)(a1 + 56); i != v11; i -= 24)
        {
          if (*(char *)(i - 1) < 0) {
            operator delete(*(void **)(i - 24));
          }
        }
        *(void *)(a1 + 56) = v11;
        uint64_t v40 = 0;
        int v16 = (*(uint64_t (**)(uint64_t *, uint64_t *, char *))(*a2 + 248))(a2, &v40, (char *)&v40 + 4);
        uint64_t v17 = *(void *)(a1 + 48);
        uint64_t v18 = *(void *)(a1 + 56);
        unint64_t v19 = 0xAAAAAAAAAAAAAAABLL * ((v18 - v17) >> 3);
        if (HIDWORD(v40) <= v19)
        {
          if (HIDWORD(v40) < v19)
          {
            uint64_t v38 = v7;
            uint64_t v24 = v6;
            uint64_t v25 = v5;
            uint64_t v26 = v17 + 24 * HIDWORD(v40);
            while (v18 != v26)
            {
              if (*(char *)(v18 - 1) < 0) {
                operator delete(*(void **)(v18 - 24));
              }
              v18 -= 24;
            }
            *(void *)(a1 + 56) = v26;
            uint64_t v5 = v25;
            uint64_t v6 = v24;
            uint64_t v7 = v38;
          }
        }
        else
        {
          sub_1001698A0((char **)(a1 + 48), HIDWORD(v40) - v19);
        }
        int v30 = v16 + v8;
        if (HIDWORD(v40))
        {
          uint64_t v31 = 0;
          unint64_t v32 = 0;
          do
          {
            v30 += (*(uint64_t (**)(uint64_t *, uint64_t))(*a2 + 336))(a2, *(void *)(a1 + 48) + v31);
            ++v32;
            v31 += 24;
          }
          while (v32 < HIDWORD(v40));
        }
        int v10 = (*(uint64_t (**)(uint64_t *))(*a2 + 256))(a2) + v30;
        *(_WORD *)(a1 + 152) |= 4u;
        break;
      case 4:
        if (v42 != 15) {
          goto LABEL_31;
        }
        uint64_t v13 = *(void *)(a1 + 72);
        for (uint64_t j = *(void *)(a1 + 80); j != v13; j -= 24)
        {
          if (*(char *)(j - 1) < 0) {
            operator delete(*(void **)(j - 24));
          }
        }
        *(void *)(a1 + 80) = v13;
        uint64_t v40 = 0;
        int v20 = (*(uint64_t (**)(uint64_t *, uint64_t *, char *))(*a2 + 248))(a2, &v40, (char *)&v40 + 4);
        uint64_t v21 = *(void *)(a1 + 72);
        uint64_t v22 = *(void *)(a1 + 80);
        unint64_t v23 = 0xAAAAAAAAAAAAAAABLL * ((v22 - v21) >> 3);
        if (HIDWORD(v40) <= v23)
        {
          if (HIDWORD(v40) < v23)
          {
            uint64_t v39 = v7;
            uint64_t v27 = v6;
            uint64_t v28 = v5;
            uint64_t v29 = v21 + 24 * HIDWORD(v40);
            while (v22 != v29)
            {
              if (*(char *)(v22 - 1) < 0) {
                operator delete(*(void **)(v22 - 24));
              }
              v22 -= 24;
            }
            *(void *)(a1 + 80) = v29;
            uint64_t v5 = v28;
            uint64_t v6 = v27;
            uint64_t v7 = v39;
          }
        }
        else
        {
          sub_1001698A0((char **)(a1 + 72), HIDWORD(v40) - v23);
        }
        int v33 = v20 + v8;
        if (HIDWORD(v40))
        {
          uint64_t v34 = 0;
          unint64_t v35 = 0;
          do
          {
            v33 += (*(uint64_t (**)(uint64_t *, uint64_t))(*a2 + 336))(a2, *(void *)(a1 + 72) + v34);
            ++v35;
            v34 += 24;
          }
          while (v35 < HIDWORD(v40));
        }
        int v10 = (*(uint64_t (**)(uint64_t *))(*a2 + 256))(a2) + v33;
        *(_WORD *)(a1 + 152) |= 8u;
        break;
      case 5:
        uint64_t v9 = *a2;
        if (v42 != 2) {
          goto LABEL_37;
        }
        int v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 280))(a2, a1 + 96) + v8;
        *(_WORD *)(a1 + 152) |= 0x10u;
        break;
      case 6:
        uint64_t v9 = *a2;
        if (v42 != 11) {
          goto LABEL_37;
        }
        int v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 336))(a2, a1 + 104) + v8;
        *(_WORD *)(a1 + 152) |= 0x20u;
        break;
      case 7:
        uint64_t v9 = *a2;
        if (v42 != 4) {
          goto LABEL_37;
        }
        int v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 328))(a2, v7) + v8;
        *(_WORD *)(a1 + 152) |= 0x40u;
        break;
      case 8:
        uint64_t v9 = *a2;
        if (v42 != 4) {
          goto LABEL_37;
        }
        int v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 328))(a2, v6) + v8;
        *(_WORD *)(a1 + 152) |= 0x80u;
        break;
      case 9:
        uint64_t v9 = *a2;
        if (v42 != 4)
        {
LABEL_37:
          int v15 = (*(uint64_t (**)(uint64_t *))(v9 + 352))(a2);
          goto LABEL_38;
        }
        int v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 328))(a2, v5) + v8;
        *(_WORD *)(a1 + 152) |= 0x100u;
        break;
      default:
LABEL_31:
        int v15 = (*(uint64_t (**)(uint64_t *))(*a2 + 352))(a2);
LABEL_38:
        int v10 = v15 + v8;
        break;
    }
    int v4 = (*(uint64_t (**)(uint64_t *))(*a2 + 224))(a2) + v10;
  }
  int v36 = (*(uint64_t (**)(uint64_t *))(*a2 + 208))(a2);
  if (SHIBYTE(v44) < 0) {
    operator delete(__p[0]);
  }
  return (v36 + v8);
}

void sub_1001A4588(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001A45E4(uint64_t a1, _DWORD *a2)
{
  unsigned int v2 = a2[7];
  unsigned int v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + 8) = 6;
  }
  int v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(void *)a2 + 32))(a2, "LocalizerUniverseState");
  int v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "timestampNanos", 10, 1)+ v6;
  int v8 = (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 8));
  int v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "latLonPosition", 12, 2);
  int v11 = v10 + sub_1000499E8(a1 + 16, a2);
  int v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v13 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "locationGroupIds", 15, 3);
  int v14 = v12
      + v13
      + (*(uint64_t (**)(_DWORD *, uint64_t, void))(*(void *)a2 + 88))(a2, 11, -1431655765 * ((*(void *)(a1 + 56) - *(void *)(a1 + 48)) >> 3));
  for (uint64_t i = *(void *)(a1 + 48); i != *(void *)(a1 + 56); i += 24)
    v14 += (*(uint64_t (**)(_DWORD *, uint64_t))(*(void *)a2 + 168))(a2, i);
  int v16 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 96))(a2);
  int v17 = v16 + v14 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  __int16 v18 = *(_WORD *)(a1 + 152);
  if ((v18 & 8) != 0)
  {
    int v23 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "groundTruthGroupIds", 15, 4);
    int v24 = v23
        + (*(uint64_t (**)(_DWORD *, uint64_t, void))(*(void *)a2 + 88))(a2, 11, -1431655765 * ((*(void *)(a1 + 80) - *(void *)(a1 + 72)) >> 3))+ v17;
    for (uint64_t j = *(void *)(a1 + 72); j != *(void *)(a1 + 80); j += 24)
      v24 += (*(uint64_t (**)(_DWORD *, uint64_t))(*(void *)a2 + 168))(a2, j);
    int v26 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 96))(a2);
    int v17 = v26 + v24 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
    __int16 v18 = *(_WORD *)(a1 + 152);
    if ((v18 & 0x10) == 0)
    {
LABEL_6:
      if ((v18 & 0x20) == 0) {
        goto LABEL_7;
      }
      goto LABEL_16;
    }
  }
  else if ((v18 & 0x10) == 0)
  {
    goto LABEL_6;
  }
  int v27 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "triggerUpdateCallback", 2, 5);
  int v28 = v17 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 120))(a2, *(unsigned __int8 *)(a1 + 96));
  int v17 = v27 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v28;
  __int16 v18 = *(_WORD *)(a1 + 152);
  if ((v18 & 0x20) == 0)
  {
LABEL_7:
    if ((v18 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_16:
  int v29 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "provider", 11, 6);
  int v30 = v17 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(void *)a2 + 168))(a2, a1 + 104);
  int v17 = v29 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v30;
  __int16 v18 = *(_WORD *)(a1 + 152);
  if ((v18 & 0x40) == 0)
  {
LABEL_8:
    if ((v18 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_18:
    int v33 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "localX", 4, 8);
    int v34 = v17 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 136));
    int v17 = v33 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v34;
    if ((*(_WORD *)(a1 + 152) & 0x100) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_17:
  int v31 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "horizontalAccuracy", 4, 7);
  int v32 = v17 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 128));
  int v17 = v31 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v32;
  __int16 v18 = *(_WORD *)(a1 + 152);
  if ((v18 & 0x80) != 0) {
    goto LABEL_18;
  }
LABEL_9:
  if ((v18 & 0x100) != 0)
  {
LABEL_10:
    int v19 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "localY", 4, 9);
    int v20 = v17 + (*(uint64_t (**)(_DWORD *, double))(*(void *)a2 + 160))(a2, *(double *)(a1 + 144));
    int v17 = v19 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2) + v20;
  }
LABEL_11:
  int v21 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 64))(a2);
  uint64_t result = v21 + v17 + (*(unsigned int (**)(_DWORD *))(*(void *)a2 + 40))(a2);
  --a2[6];
  return result;
}

uint64_t sub_1001A4DD8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045D848;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) &= 0xFCu;
  *(_OWORD *)(a1 + 48) = 0u;
  uint64_t v4 = a1 + 48;
  uint64_t v5 = a1 + 72;
  *(void *)(a1 + 104) = 0;
  int v6 = (std::string *)(a1 + 104);
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_WORD *)(a1 + 152) &= 0xFE00u;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = off_10045DAB8;
  sub_10007B704(a1 + 16, a2 + 16);
  if (a1 != a2)
  {
    sub_10007B8E4(v4, *(std::string **)(a2 + 48), *(std::string **)(a2 + 56), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 56) - *(void *)(a2 + 48)) >> 3));
    sub_10007B8E4(v5, *(std::string **)(a2 + 72), *(std::string **)(a2 + 80), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 80) - *(void *)(a2 + 72)) >> 3));
  }
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  std::string::operator=(v6, (const std::string *)(a2 + 104));
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  return a1;
}

void sub_1001A4F0C(_Unwind_Exception *a1)
{
  if (*(char *)(v2 + 127) < 0) {
    operator delete(*v5);
  }
  sub_1000E0AA4(v4);
  sub_1000E0AA4(v3);
  nullsub_15(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1001A4F44(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  sub_10007B704(a1 + 16, a2 + 16);
  if (a1 != a2)
  {
    sub_10007B8E4(a1 + 48, *(std::string **)(a2 + 48), *(std::string **)(a2 + 56), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 56) - *(void *)(a2 + 48)) >> 3));
    sub_10007B8E4(a1 + 72, *(std::string **)(a2 + 72), *(std::string **)(a2 + 80), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 80) - *(void *)(a2 + 72)) >> 3));
  }
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  std::string::operator=((std::string *)(a1 + 104), (const std::string *)(a2 + 104));
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  return a1;
}

uint64_t sub_1001A4FF4(uint64_t a1)
{
  *(void *)a1 = off_10045D868;
  uint64_t v2 = *(void **)(a1 + 56);
  if (v2)
  {
    *(void *)(a1 + 64) = v2;
    operator delete(v2);
  }
  unsigned int v3 = *(void **)(a1 + 32);
  if (v3)
  {
    *(void *)(a1 + 40) = v3;
    operator delete(v3);
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void sub_1001A5074(uint64_t a1)
{
  *(void *)a1 = off_10045D868;
  uint64_t v2 = *(void **)(a1 + 56);
  if (v2)
  {
    *(void *)(a1 + 64) = v2;
    operator delete(v2);
  }
  unsigned int v3 = *(void **)(a1 + 32);
  if (v3)
  {
    *(void *)(a1 + 40) = v3;
    operator delete(v3);
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }

  operator delete();
}

uint64_t sub_1001A5104(uint64_t result, double a2)
{
  *(double *)(result + 80) = a2;
  return result;
}

uint64_t sub_1001A510C(uint64_t result, double a2)
{
  *(double *)(result + 88) = a2;
  return result;
}

uint64_t sub_1001A5114(uint64_t result, double a2)
{
  *(double *)(result + 112) = a2;
  *(_WORD *)(result + 144) |= 0x80u;
  return result;
}

uint64_t sub_1001A5128(uint64_t result, double a2)
{
  *(double *)(result + 120) = a2;
  return result;
}

uint64_t sub_1001A5130(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10045D868;
  *(_OWORD *)(a1 + 56) = 0u;
  uint64_t v4 = (void *)(a1 + 56);
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_WORD *)(a1 + 144) &= 0xF800u;
  std::string::operator=((std::string *)(a1 + 8), (const std::string *)(a2 + 8));
  if (a1 != a2)
  {
    sub_1001A5EB0((void *)(a1 + 32), *(char **)(a2 + 32), *(char **)(a2 + 40), (uint64_t)(*(void *)(a2 + 40) - *(void *)(a2 + 32)) >> 1);
    sub_1001A5EB0(v4, *(char **)(a2 + 56), *(char **)(a2 + 64), (uint64_t)(*(void *)(a2 + 64) - *(void *)(a2 + 56)) >> 1);
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  return a1;
}

void sub_1001A5204(_Unwind_Exception *a1)
{
  uint64_t v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 64) = v4;
    operator delete(v4);
  }
  sub_1003A3F78((void **)(v1 + 32), v1, (void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t sub_1001A5234(uint64_t a1)
{
  *(void *)a1 = off_10045D888;
  if ((*(char *)(a1 + 159) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 135) & 0x80000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    operator delete(*(void **)(a1 + 112));
    uint64_t v2 = *(void ***)(a1 + 88);
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  operator delete(*(void **)(a1 + 136));
  if (*(char *)(a1 + 135) < 0) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v2 = *(void ***)(a1 + 88);
  if (!v2) {
    goto LABEL_14;
  }
LABEL_7:
  unsigned int v3 = *(void ***)(a1 + 96);
  uint64_t v4 = v2;
  if (v3 != v2)
  {
    do
    {
      if (*((char *)v3 - 1) < 0) {
        operator delete(*(v3 - 3));
      }
      v3 -= 3;
    }
    while (v3 != v2);
    uint64_t v4 = *(void ***)(a1 + 88);
  }
  *(void *)(a1 + 96) = v2;
  operator delete(v4);
LABEL_14:
  nullsub_15(a1 + 32);
  sub_1001A53F4(a1 + 8, *(void *)(a1 + 16));
  return a1;
}

void sub_1001A5310(uint64_t a1)
{
  sub_1001A5234(a1);

  operator delete();
}

uint64_t sub_1001A5348(uint64_t result, uint64_t a2)
{
  *(void *)(result + 80) = a2;
  return result;
}

uint64_t sub_1001A5350(uint64_t a1, uint64_t a2)
{
  if (a1 != a2) {
    sub_1001A5FEC((uint64_t **)(a1 + 8), *(void **)(a2 + 8), (void *)(a2 + 16));
  }
  sub_10007B704(a1 + 32, a2 + 32);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  if (a1 != a2) {
    sub_10007B8E4(a1 + 88, *(std::string **)(a2 + 88), *(std::string **)(a2 + 96), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 96) - *(void *)(a2 + 88)) >> 3));
  }
  std::string::operator=((std::string *)(a1 + 112), (const std::string *)(a2 + 112));
  std::string::operator=((std::string *)(a1 + 136), (const std::string *)(a2 + 136));
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  return a1;
}

void sub_1001A53F4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1001A53F4(a1, *(void *)a2);
    sub_1001A53F4(a1, *(void *)(a2 + 8));
    *(void *)(a2 + 56) = off_10045D868;
    uint64_t v4 = *(void **)(a2 + 112);
    if (v4)
    {
      *(void *)(a2 + 120) = v4;
      operator delete(v4);
    }
    uint64_t v5 = *(void **)(a2 + 88);
    if (v5)
    {
      *(void *)(a2 + 96) = v5;
      operator delete(v5);
    }
    if (*(char *)(a2 + 87) < 0)
    {
      operator delete(*(void **)(a2 + 64));
      if ((*(char *)(a2 + 55) & 0x80000000) == 0)
      {
LABEL_8:
        int v6 = (void *)a2;
LABEL_10:
        operator delete(v6);
        return;
      }
    }
    else if ((*(char *)(a2 + 55) & 0x80000000) == 0)
    {
      goto LABEL_8;
    }
    operator delete(*(void **)(a2 + 32));
    int v6 = (void *)a2;
    goto LABEL_10;
  }
}

uint64_t sub_1001A54D0(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  int v36 = &v35;
  int v37 = (char *)&v35 + 2;
  uint64_t v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  uint64_t v5 = sub_1001A9CB8(&v31, a1);
  int v6 = *(_DWORD *)((char *)v5 + *(void *)(*v5 - 24) + 32);
  uint64_t v7 = *(void *)((char *)&v32.__rdstate_ + (void)*(v31 - 3));
  uint64_t v8 = *(void *)(v7 + 40);
  int v36 = (uint64_t *)v8;
  int v9 = *(char **)(v7 + 48);
  int v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          int v12 = a2;
        }
        else {
          int v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          int v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          int v17 = v12;
          __int16 v18 = (char *)v8;
        }
        else
        {
          int v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          __int16 v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          int v19 = (long long *)(v8 + 16);
          int v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)int v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          int v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      int v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_1001A57A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1001A57DC(void *a1)
{
}

uint64_t sub_1001A57F4(uint64_t a1, std::string *a2)
{
  long long v25 = 0u;
  long long v26 = 0u;
  memset(v24, 0, sizeof(v24));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v28 = 0u;
  uint64_t v29 = 24;
  *(void *)&long long v25 = 0;
  *(void *)&v24[0] = off_100453E60;
  std::ios_base::init(&v31, v24);
  uint64_t v32 = 0;
  int v33 = -1;
  uint64_t v35 = &v34;
  int v36 = (char *)&v34 + 2;
  unsigned int v3 = (std::ios_base *)((char *)&v30 + (void)*(v30 - 3));
  v3->__exceptions_ = 1;
  std::ios_base::clear(v3, v3->__rdstate_);
  uint64_t v4 = (void *)std::ostream::operator<<();
  int v5 = *(_DWORD *)((char *)v4 + *(void *)(*v4 - 24) + 32);
  uint64_t v6 = *(void *)((char *)&v31.__rdstate_ + (void)*(v30 - 3));
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v35 = (uint64_t *)v7;
  uint64_t v8 = *(char **)(v6 + 48);
  int v36 = v8;
  if ((v5 & 5) == 0)
  {
    unint64_t v10 = (unint64_t)&v8[-v7];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v14 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v13 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v13 >= v10)
      {
        unint64_t v15 = HIBYTE(v14);
LABEL_10:
        if ((v15 & 0x80u) == 0) {
          unint64_t v11 = a2;
        }
        else {
          unint64_t v11 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v7 == v8)
        {
          unint64_t v16 = v11;
          goto LABEL_23;
        }
        if (v10 < 0x20 || (unint64_t)v11 - v7 < 0x20)
        {
          unint64_t v16 = v11;
          int v17 = (char *)v7;
        }
        else
        {
          unint64_t v16 = (std::string *)((char *)v11 + (v10 & 0xFFFFFFFFFFFFFFE0));
          int v17 = (char *)(v7 + (v10 & 0xFFFFFFFFFFFFFFE0));
          __int16 v18 = (long long *)(v7 + 16);
          int v19 = &v11->__r_.__value_.__r.__words[2];
          unint64_t v20 = v10 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v21 = *v18;
            *((_OWORD *)v19 - 1) = *(v18 - 1);
            *(_OWORD *)int v19 = v21;
            v18 += 2;
            v19 += 4;
            v20 -= 32;
          }
          while (v20);
          if (v10 == (v10 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v16->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v10;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v10 & 0x7F;
            }
            uint64_t v9 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v22 = *v17++;
          v16->__r_.__value_.__s.__data_[0] = v22;
          unint64_t v16 = (std::string *)((char *)v16 + 1);
        }
        while (v17 != v8);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      unint64_t v11 = a2;
      if (v10 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v13 = 22;
    }
    std::string::__grow_by(a2, v13, v10 - v13, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v15) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v9 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v28) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v9;
}