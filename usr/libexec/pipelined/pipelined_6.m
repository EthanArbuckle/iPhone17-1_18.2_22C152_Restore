uint64_t sub_1002FAA3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;

  v2 = *(void *)(a1 + 8);
  for (i = *(void *)(a1 + 16); i != v2; i = *(void *)(a1 + 16))
  {
    v4 = (void **)(i - 48);
    *(void *)(a1 + 16) = i - 48;
    v5 = *(void *)(i - 24);
    if (v5)
    {
      v6 = *(void *)(i - 16);
      v7 = *(void **)(i - 24);
      if (v6 != v5)
      {
        v8 = *(void *)(i - 16);
        do
        {
          v10 = *(void **)(v8 - 24);
          v8 -= 24;
          v9 = v10;
          if (v10)
          {
            *(void *)(v6 - 16) = v9;
            operator delete(v9);
          }
          v6 = v8;
        }
        while (v8 != v5);
        v7 = *(void **)(i - 24);
      }
      *(void *)(i - 16) = v5;
      operator delete(v7);
    }
    v11 = *v4;
    if (*v4)
    {
      *(void *)(i - 40) = v11;
      operator delete(v11);
    }
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

int8x16_t sub_1002FAAF8(uint64_t a1, uint64_t a2, int8x16_t *a3)
{
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)a1 = &off_100465710;
  *(void *)(a1 + 8) = off_100465740;
  *(void *)(a1 + 16) = off_100465768;
  *(_DWORD *)(a1 + 48) = a3[1].i32[0];
  int8x16_t result = vextq_s8(*a3, *a3, 8uLL);
  *(int8x16_t *)(a1 + 32) = result;
  return result;
}

std::exception *sub_1002FAB74(std::exception *a1)
{
  a1[2].__vftable = (std::exception_vtbl *)&off_100451DC0;
  v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[3].__vftable = 0;
  }
  std::exception::~exception(a1 + 1);
  return a1;
}

void sub_1002FABF8()
{
}

void sub_1002FAD38()
{
  std::exception::~exception(v0);
  operator delete();
}

void sub_1002FAD64(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_1002FAD98(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x38uLL);
  sub_1002FB13C((uint64_t)exception, a1);
}

void sub_1002FADE0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002FADF4(std::exception *a1)
{
  a1[2].__vftable = (std::exception_vtbl *)&off_100451DC0;
  v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[3].__vftable = 0;
  }
  std::exception::~exception(a1 + 1);

  operator delete();
}

void sub_1002FAE98(std::exception *this)
{
  this[1].__vftable = (std::exception_vtbl *)&off_100451DC0;
  v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    this[2].__vftable = 0;
  }

  std::exception::~exception(this);
}

void sub_1002FAF24(std::exception *this)
{
  this[1].__vftable = (std::exception_vtbl *)&off_100451DC0;
  v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    this[2].__vftable = 0;
  }
  std::exception::~exception(this);

  operator delete();
}

const char *sub_1002FAFCC()
{
  return "Boost.Geometry Invalid-Output exception";
}

void sub_1002FAFD8(std::exception *a1)
{
  a1->__vftable = (std::exception_vtbl *)&off_100451DC0;
  v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  std::exception::~exception(a1 - 1);
}

void sub_1002FB060(std::exception *a1)
{
  a1->__vftable = (std::exception_vtbl *)&off_100451DC0;
  v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::exception_vtbl *))v2->~exception + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  std::exception::~exception(a1 - 1);

  operator delete();
}

void sub_1002FB104(std::exception *a1)
{
  std::exception::~exception(a1);

  operator delete();
}

uint64_t sub_1002FB13C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  *(void *)(a1 + 8) = &off_100465788;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = &off_100465710;
  *(void *)(a1 + 8) = off_100465740;
  *(void *)(a1 + 16) = off_100465768;
  return a1;
}

void sub_1002FB258(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002FB26C(uint64_t a1)
{
  v2 = *(void ***)(a1 + 8);
  v3 = *(void ***)(a1 + 16);
  if (v3 == v2)
  {
    v3 = *(void ***)(a1 + 8);
    *(void *)(a1 + 40) = 0;
    unint64_t v11 = 0;
  }
  else
  {
    unint64_t v4 = *(void *)(a1 + 32);
    long long v5 = &v2[v4 / 0xAA];
    unint64_t v6 = (unint64_t)*v5;
    unint64_t v7 = (unint64_t)*v5 + 24 * (v4 % 0xAA);
    unint64_t v8 = (unint64_t)v2[(*(void *)(a1 + 40) + v4) / 0xAA] + 24 * ((*(void *)(a1 + 40) + v4) % 0xAA);
    if (v7 != v8)
    {
      do
      {
        v9 = *(void **)v7;
        if (*(void *)v7)
        {
          *(void *)(v7 + 8) = v9;
          operator delete(v9);
          unint64_t v6 = (unint64_t)*v5;
        }
        v7 += 24;
        if (v7 - v6 == 4080)
        {
          unint64_t v10 = (unint64_t)v5[1];
          ++v5;
          unint64_t v6 = v10;
          unint64_t v7 = v10;
        }
      }
      while (v7 != v8);
      v2 = *(void ***)(a1 + 8);
      v3 = *(void ***)(a1 + 16);
    }
    *(void *)(a1 + 40) = 0;
    unint64_t v11 = (char *)v3 - (char *)v2;
    if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
    {
      do
      {
        operator delete(*v2);
        v3 = *(void ***)(a1 + 16);
        v2 = (void **)(*(void *)(a1 + 8) + 8);
        *(void *)(a1 + 8) = v2;
        unint64_t v11 = (char *)v3 - (char *)v2;
      }
      while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
    }
  }
  unint64_t v12 = v11 >> 3;
  if (v12 == 1)
  {
    uint64_t v13 = 85;
    goto LABEL_17;
  }
  if (v12 == 2)
  {
    uint64_t v13 = 170;
LABEL_17:
    *(void *)(a1 + 32) = v13;
  }
  if (v2 != v3)
  {
    do
    {
      v14 = *v2++;
      operator delete(v14);
    }
    while (v2 != v3);
    uint64_t v16 = *(void *)(a1 + 8);
    uint64_t v15 = *(void *)(a1 + 16);
    if (v15 != v16) {
      *(void *)(a1 + 16) = v15 + ((v16 - v15 + 7) & 0xFFFFFFFFFFFFFFF8);
    }
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1002FB3FC(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1002FB3FC(a1, *a2);
    sub_1002FB3FC(a1, a2[1]);
    sub_10006A9DC((uint64_t)(a2 + 5), (void *)a2[6]);
    operator delete(a2);
  }
}

uint64_t sub_1002FB45C(uint64_t a1)
{
  v2 = *(void ***)(a1 + 8);
  v3 = *(void ***)(a1 + 16);
  *(void *)(a1 + 40) = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      v3 = *(void ***)(a1 + 16);
      v2 = (void **)(*(void *)(a1 + 8) + 8);
      *(void *)(a1 + 8) = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 8;
    goto LABEL_7;
  }
  if (v5 == 2)
  {
    uint64_t v6 = 16;
LABEL_7:
    *(void *)(a1 + 32) = v6;
  }
  if (v2 != v3)
  {
    do
    {
      unint64_t v7 = *v2++;
      operator delete(v7);
    }
    while (v2 != v3);
    uint64_t v9 = *(void *)(a1 + 8);
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8 != v9) {
      *(void *)(a1 + 16) = v8 + ((v9 - v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    }
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1002FB524()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1002FB59C()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_1002FB618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = a1 + 56;
  sub_1002AC76C(a1 + 72, *(void *)(a1 + 56));
  *(void *)(a2 + 40) = v8;
  double v9 = *(double *)(a2 + 16);
  double v10 = *(double *)(a2 + 24);
  double v11 = v9 + (*(double (**)(void))(**(void **)v7 + 56))() * *(double *)(v7 + 80);
  double v12 = v10 + (*(double (**)(void))(**(void **)v7 + 56))() * *(double *)(v7 + 80);
  uint64_t v13 = *(void *)(a3 + 16);

  return sub_10024A1E0(a2, v11, v12, v13, a4, v7, v7 - 48, (uint64_t ***)(v7 + 64));
}

void *sub_1002FB6F8(void *a1)
{
  *a1 = off_1004657B0;
  v2 = (std::__shared_weak_count *)a1[16];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *a1 = off_100458C30;
    v3 = (std::__shared_weak_count *)a1[8];
    if (!v3) {
      goto LABEL_5;
    }
  }
  else
  {
    *a1 = off_100458C30;
    v3 = (std::__shared_weak_count *)a1[8];
    if (!v3)
    {
LABEL_5:
      sub_10002FCB0((uint64_t)(a1 + 1));
      return a1;
    }
  }
  if (atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_5;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  sub_10002FCB0((uint64_t)(a1 + 1));
  return a1;
}

void sub_1002FB82C(void *a1)
{
  *a1 = off_1004657B0;
  v2 = (std::__shared_weak_count *)a1[16];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *a1 = off_100458C30;
    v3 = (std::__shared_weak_count *)a1[8];
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    *a1 = off_100458C30;
    v3 = (std::__shared_weak_count *)a1[8];
    if (!v3) {
      goto LABEL_7;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
LABEL_7:
  sub_10002FCB0((uint64_t)(a1 + 1));

  operator delete();
}

void sub_1002FB968()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1002FB9E0()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_1002FBA58(uint64_t a1)
{
  if (*(void *)(a1 + 40)) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(void *)(a1 + 16)) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t *sub_1002FBA9C(void *a1, uint64_t ***a2)
{
  int8x16_t result = (uint64_t *)sub_100070270(a1, a2);
  if (result)
  {
    return (uint64_t *)sub_1002FBF58(a1, result);
  }
  return result;
}

void sub_1002FBAE8(uint64_t a1, sqlite3_blob **a2, void *a3)
{
  sub_10007E298((uint64_t)v7, *a2);
  uint64_t v4 = v8;
  wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor::CopyingInputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor *)v6, (wireless_diagnostics::google::protobuf::io::CopyingInputStream *)v7, -1);
  uint64_t v5 = a3[3];
  if (!v5) {
    goto LABEL_4;
  }
  if ((void *)v5 != a3)
  {
    uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 16))(v5);
LABEL_4:
    double v10 = (void *)v5;
    goto LABEL_6;
  }
  double v10 = v9;
  (*(void (**)(void *, void *))(*a3 + 24))(a3, v9);
LABEL_6:
  sub_1002779E4((uint64_t)v6, v4, (uint64_t)v9);
  if (v10 == v9)
  {
    (*(void (**)(void *))(v9[0] + 32))(v9);
  }
  else if (v10)
  {
    (*(void (**)(void *))(*v10 + 40))(v10);
  }
  wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor::~CopyingInputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor *)v6);
  wireless_diagnostics::google::protobuf::io::CopyingInputStream::~CopyingInputStream((wireless_diagnostics::google::protobuf::io::CopyingInputStream *)v7);
}

void sub_1002FBC54(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor::~CopyingInputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor *)va);
  wireless_diagnostics::google::protobuf::io::CopyingInputStream::~CopyingInputStream((wireless_diagnostics::google::protobuf::io::CopyingInputStream *)va1);
  _Unwind_Resume(a1);
}

void sub_1002FBC80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  wireless_diagnostics::google::protobuf::io::CopyingInputStream::~CopyingInputStream((wireless_diagnostics::google::protobuf::io::CopyingInputStream *)va);
  _Unwind_Resume(a1);
}

void sub_1002FBC98(void *a1@<X0>, uint64_t ***a2@<X1>, void *a3@<X2>, sqlite3_blob **a4@<X3>, uint64_t *a5@<X8>)
{
  if (sub_10006F50C(a1, a2))
  {
    sub_10007E298((uint64_t)v15, *a4);
    wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor::CopyingInputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor *)&v13, (wireless_diagnostics::google::protobuf::io::CopyingInputStream *)v15, -1);
    uint64_t v10 = sub_10006F50C(a1, a2);
    if (!v10) {
      sub_10018E334("unordered_map::at: key not found");
    }
    sub_100276E4C(a3, (uint64_t)(v10 + 4), (uint64_t)&v13, a5);
    wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor::~CopyingInputStreamAdaptor((wireless_diagnostics::google::protobuf::io::CopyingInputStreamAdaptor *)&v13);
    wireless_diagnostics::google::protobuf::io::CopyingInputStream::~CopyingInputStream((wireless_diagnostics::google::protobuf::io::CopyingInputStream *)v15);
  }
  else
  {
    unint64_t v11 = (uint64_t)(a3[1] - *a3) >> 5;
    unint64_t v13 = 0;
    v14 = 0;
    sub_1002778C4(a5, v11, &v13);
    double v12 = v14;
    if (v14 && !atomic_fetch_add(&v14->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_1002FBDC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1002FBDD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  wireless_diagnostics::google::protobuf::io::CopyingInputStream::~CopyingInputStream((wireless_diagnostics::google::protobuf::io::CopyingInputStream *)va);
  _Unwind_Resume(a1);
}

void sub_1002FBDEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
}

const void ***sub_1002FBE08(void *a1, uint64_t ***a2, uint64_t *a3)
{
  int8x16_t result = sub_10006F50C(a1, a2);
  if (result)
  {
    uint64_t v5 = *a3;
    uint64_t v6 = a3[1];
    if (*a3 == v6)
    {
      return 0;
    }
    else
    {
      uint64_t v7 = (unsigned int **)(result + 4);
      do
      {
        int8x16_t result = (const void ***)sub_100276A6C(v7, v5);
        if (result) {
          break;
        }
        v5 += 32;
      }
      while (v5 != v6);
    }
  }
  return result;
}

void sub_1002FBE78(id a1)
{
  qword_10047BF10 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Database");
}

uint64_t *sub_1002FBEA8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((unsigned char *)a1 + 16))
    {
      if (*(void *)(v2 + 72)) {
        operator delete(*(void **)(v2 + 56));
      }
      if (*(void *)(v2 + 48)) {
        operator delete(*(void **)(v2 + 32));
      }
      uint64_t v3 = *(std::__shared_weak_count **)(v2 + 24);
      if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
        std::__shared_weak_count::__release_weak(v3);
      }
    }
    operator delete((void *)v2);
  }
  return a1;
}

uint64_t sub_1002FBF58(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  sub_1000A9E44(a1, a2, (uint64_t)&__p);
  uint64_t v3 = __p;
  __p = 0;
  if (v3)
  {
    if (v7)
    {
      if (*((void *)v3 + 9)) {
        operator delete(*((void **)v3 + 7));
      }
      if (*((void *)v3 + 6)) {
        operator delete(*((void **)v3 + 4));
      }
      uint64_t v4 = (std::__shared_weak_count *)*((void *)v3 + 3);
      if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    operator delete(v3);
  }
  return v2;
}

void sub_1002FC018()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1002FC090()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_1002FC108(void *a1, uint64_t a2)
{
  *a1 = off_100465838;
  a1[1] = 0x7FF8000000000000;
  sub_100267358((uint64_t)(a1 + 2), a2);
  sub_100301D68((uint64_t)(a1 + 5));
}

void sub_1002FC16C(_Unwind_Exception *exception_object)
{
  uint64_t v4 = (void *)v1[7];
  if (v4)
  {
    v1[8] = v4;
    operator delete(v4);
    uint64_t v5 = *v2;
    if (!*v2) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    uint64_t v5 = *v2;
    if (!*v2) {
      goto LABEL_3;
    }
  }
  v1[3] = v5;
  operator delete(v5);
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002FC1A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 80) + 16))();
}

double sub_1002FC1D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = (uint64_t *)(a1 + 16);
  uint64_t v5 = sub_1002AA5A0((void *)(a1 + 16));
  uint64_t v6 = (*(uint64_t (**)(void))(**(void **)(a1 + 80) + 24))(*(void *)(a1 + 80));
  sub_1002FC3C0(v5, v6, "mean", v4, "LL");
  uint64_t v7 = sub_1002AA5A0(a2);
  sub_1002FC820(v5, v7, "mean", v4, "y", a2);
  sub_1002FCC88((unint64_t *)a2, (unint64_t *)v4);
  return (*(double (**)(void, uint64_t *))(**(void **)(a1 + 80) + 48))(*(void *)(a1 + 80), a2) * -0.5;
}

double sub_1002FC2C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = (uint64_t *)(a1 + 16);
  uint64_t v5 = sub_1002AA5A0((void *)(a1 + 16));
  uint64_t v6 = (*(uint64_t (**)(void))(**(void **)(a1 + 80) + 24))(*(void *)(a1 + 80));
  sub_1002FC3C0(v5, v6, "mean", v4, "LL");
  uint64_t v7 = sub_1002AA5A0(a2);
  sub_1002FC820(v5, v7, "mean", v4, "y", a2);
  sub_1002FCC88((unint64_t *)a2, (unint64_t *)v4);
  return (*(double (**)(void, uint64_t *))(**(void **)(a1 + 80) + 48))(*(void *)(a1 + 80), a2) * -0.5;
}

uint64_t sub_1002FC3C0(uint64_t result, uint64_t a2, char *a3, uint64_t *a4, char *a5)
{
  if (result != a2)
  {
    uint64_t v9 = result;
    sub_1000CD96C((uint64_t)v25);
    sub_1002AAA6C(v25, a4);
    sub_1000AE4B0(v22, a3);
    std::stringbuf::str();
    sub_1000AE4B0(v20, a5);
    sub_1000AE4B0(__p, "unavailable");
    sub_100371BA4(&v24, v22, v9, v16, v20, a2, __p);
    if ((char)v19 < 0)
    {
      operator delete(__p[0]);
      if ((v21 & 0x80000000) == 0) {
        goto LABEL_4;
      }
    }
    else if ((v21 & 0x80000000) == 0)
    {
LABEL_4:
      if (SHIBYTE(v17) < 0) {
        goto LABEL_5;
      }
      goto LABEL_9;
    }
    operator delete(v20[0]);
    if (SHIBYTE(v17) < 0)
    {
LABEL_5:
      operator delete(v16[0]);
      if ((v23 & 0x80000000) == 0)
      {
LABEL_11:
        if (!sub_10016A1C0()) {
          goto LABEL_28;
        }
        sub_10000C898((uint64_t)v16);
        sub_1001664D8(0);
        if ((v19 & 0x80u) == 0) {
          uint64_t v10 = __p;
        }
        else {
          uint64_t v10 = (void **)__p[0];
        }
        if ((v19 & 0x80u) == 0) {
          uint64_t v11 = v19;
        }
        else {
          uint64_t v11 = (uint64_t)__p[1];
        }
        sub_10002986C(&v17, (uint64_t)v10, v11);
        if ((char)v19 < 0) {
          operator delete(__p[0]);
        }
        if (qword_10047BED8 == -1)
        {
          double v12 = qword_10047BEE0;
          if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
          {
LABEL_22:
            unint64_t v13 = std::logic_error::what(&v24);
            std::stringbuf::str();
            if ((v19 & 0x80u) == 0) {
              v14 = __p;
            }
            else {
              v14 = (void **)__p[0];
            }
            *(_DWORD *)buf = 136315394;
            v27 = v13;
            __int16 v28 = 2080;
            v29 = v14;
            _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "Precondition failure: %s\n%s\n", buf, 0x16u);
            if ((char)v19 < 0) {
              operator delete(__p[0]);
            }
          }
        }
        else
        {
          dispatch_once(&qword_10047BED8, &stru_1004658D0);
          double v12 = qword_10047BEE0;
          if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
            goto LABEL_22;
          }
        }
        sub_1000DEA14((uint64_t)v16);
LABEL_28:
        __cxa_allocate_exception(0x80uLL);
        sub_10018E868((uint64_t)v15);
        sub_1002FD52C((uint64_t)&v24, (uint64_t)"void Preconditions::checkDimension(size_t, size_t, const char *, M1 &&, const char *) [M1 = const Vector64F &]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/math/dimensionality_mismatch_error.h", 71, (uint64_t)v15);
      }
LABEL_10:
      operator delete(v22[0]);
      goto LABEL_11;
    }
LABEL_9:
    if ((v23 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  return result;
}

void sub_1002FC698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,void *__p,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,std::logic_error a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  sub_1000DEA14((uint64_t)&a12);
  sub_100371C40(&a56);
  sub_1000CDB10((uint64_t)&a65);
  _Unwind_Resume(a1);
}

void sub_1002FC6D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,std::logic_error a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  sub_100371C40(&a56);
  sub_1000CDB10((uint64_t)&a65);
  _Unwind_Resume(a1);
}

void sub_1002FC748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,void *__p,uint64_t a51,int a52,__int16 a53,char a54,char a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,void *a62,uint64_t a63)
{
  if (a55 < 0)
  {
    operator delete(__p);
    if (a61 < 0)
    {
LABEL_5:
      operator delete(a56);
      if (a17 < 0)
      {
LABEL_8:
        operator delete(a12);
        if (a67 < 0)
        {
LABEL_11:
          operator delete(a62);
          sub_1000CDB10((uint64_t)&a72);
          _Unwind_Resume(a1);
        }
LABEL_12:
        sub_1000CDB10((uint64_t)&a72);
        _Unwind_Resume(a1);
      }
LABEL_10:
      if (a67 < 0) {
        goto LABEL_11;
      }
      goto LABEL_12;
    }
  }
  else if (a61 < 0)
  {
    goto LABEL_5;
  }
  if (a17 < 0) {
    goto LABEL_8;
  }
  goto LABEL_10;
}

void sub_1002FC7F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  sub_1000CDB10((uint64_t)&a66);
  _Unwind_Resume(a1);
}

void sub_1002FC808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  sub_1000CDB10((uint64_t)&a66);
  _Unwind_Resume(a1);
}

uint64_t sub_1002FC820(uint64_t result, uint64_t a2, char *a3, uint64_t *a4, char *a5, uint64_t *a6)
{
  if (result != a2)
  {
    uint64_t v11 = result;
    sub_1000CD96C((uint64_t)v28);
    sub_1002AAA6C(v28, a4);
    sub_1000CD96C((uint64_t)v27);
    sub_1002AAA6C(v27, a6);
    sub_1000AE4B0(v24, a3);
    std::stringbuf::str();
    sub_1000AE4B0(v22, a5);
    std::stringbuf::str();
    sub_100371BA4(&v26, v24, v11, v18, v22, a2, __p);
    if ((char)v21 < 0)
    {
      operator delete(__p[0]);
      if ((v23 & 0x80000000) == 0) {
        goto LABEL_4;
      }
    }
    else if ((v23 & 0x80000000) == 0)
    {
LABEL_4:
      if (SHIBYTE(v19) < 0) {
        goto LABEL_5;
      }
      goto LABEL_9;
    }
    operator delete(v22[0]);
    if (SHIBYTE(v19) < 0)
    {
LABEL_5:
      operator delete(v18[0]);
      if ((v25 & 0x80000000) == 0)
      {
LABEL_11:
        if (!sub_10016A1C0()) {
          goto LABEL_28;
        }
        sub_10000C898((uint64_t)v18);
        sub_1001664D8(0);
        if ((v21 & 0x80u) == 0) {
          double v12 = __p;
        }
        else {
          double v12 = (void **)__p[0];
        }
        if ((v21 & 0x80u) == 0) {
          uint64_t v13 = v21;
        }
        else {
          uint64_t v13 = (uint64_t)__p[1];
        }
        sub_10002986C(&v19, (uint64_t)v12, v13);
        if ((char)v21 < 0) {
          operator delete(__p[0]);
        }
        if (qword_10047BED8 == -1)
        {
          v14 = qword_10047BEE0;
          if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
          {
LABEL_22:
            uint64_t v15 = std::logic_error::what(&v26);
            std::stringbuf::str();
            if ((v21 & 0x80u) == 0) {
              uint64_t v16 = __p;
            }
            else {
              uint64_t v16 = (void **)__p[0];
            }
            *(_DWORD *)buf = 136315394;
            v30 = v15;
            __int16 v31 = 2080;
            v32 = v16;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "Precondition failure: %s\n%s\n", buf, 0x16u);
            if ((char)v21 < 0) {
              operator delete(__p[0]);
            }
          }
        }
        else
        {
          dispatch_once(&qword_10047BED8, &stru_1004658D0);
          v14 = qword_10047BEE0;
          if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
            goto LABEL_22;
          }
        }
        sub_1000DEA14((uint64_t)v18);
LABEL_28:
        __cxa_allocate_exception(0x80uLL);
        sub_10018E868((uint64_t)v17);
        sub_1002FD52C((uint64_t)&v26, (uint64_t)"void Preconditions::checkDimension(size_t, size_t, const char *, M1 &&, const char *, M2 &&) [M1 = const Vector64F &, M2 = Vector64F &]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/math/dimensionality_mismatch_error.h", 100, (uint64_t)v17);
      }
LABEL_10:
      operator delete(v24[0]);
      goto LABEL_11;
    }
LABEL_9:
    if ((v25 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  return result;
}

void sub_1002FCB18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void *__p,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,std::logic_error a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  sub_1000DEA14((uint64_t)&a13);
  sub_100371C40(&a57);
  sub_1000CDB10((uint64_t)&a66);
  sub_1000CDB10((uint64_t)&STACK[0x2D8]);
  _Unwind_Resume(a1);
}

void sub_1002FCB94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56,void *a57,uint64_t a58,int a59,__int16 a60,char a61,char a62,void *a63)
{
  if (a56 < 0)
  {
    operator delete(__p);
    if (a62 < 0)
    {
LABEL_5:
      operator delete(a57);
      if (a18 < 0)
      {
LABEL_8:
        operator delete(a13);
        if ((a68 & 0x80000000) == 0)
        {
LABEL_12:
          sub_1000CDB10((uint64_t)&a72);
          sub_1000CDB10((uint64_t)&STACK[0x2D8]);
          _Unwind_Resume(a1);
        }
LABEL_11:
        operator delete(a63);
        sub_1000CDB10((uint64_t)&a72);
        sub_1000CDB10((uint64_t)&STACK[0x2D8]);
        _Unwind_Resume(a1);
      }
LABEL_10:
      if ((a68 & 0x80000000) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else if (a62 < 0)
  {
    goto LABEL_5;
  }
  if (a18 < 0) {
    goto LABEL_8;
  }
  goto LABEL_10;
}

void sub_1002FCC5C(_Unwind_Exception *a1)
{
}

void sub_1002FCC70(_Unwind_Exception *a1)
{
}

unint64_t *sub_1002FCC88(unint64_t *a1, unint64_t *a2)
{
  uint64_t v4 = sub_1002AA5A0(a2);
  if (v4 != sub_1002AA5A0(a1))
  {
    sub_1000AE4B0(__p, "");
    sub_10016A2C4((uint64_t)__p, 0, 0);
    if (v24 < 0) {
      operator delete(__p[0]);
    }
    sub_10014B3FC((uint64_t)v22);
  }
  unint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  uint64_t v7 = v6 - *a1;
  if (a2[1] - *a2 != v7)
  {
    sub_1000AE4B0(__p, "");
    sub_10016A2C4((uint64_t)__p, 0, 0);
    if (v24 < 0) {
      operator delete(__p[0]);
    }
    sub_1000D11E0((uint64_t)v22);
  }
  if (v6 != v5)
  {
    unint64_t v8 = v7 >> 3;
    unint64_t v9 = *a2;
    if (v8 <= 1) {
      unint64_t v8 = 1;
    }
    if (v8 < 6 || (v5 < v9 + 8 * v8 ? (BOOL v10 = v9 >= v5 + 8 * v8) : (BOOL v10 = 1), !v10))
    {
      unint64_t v11 = 0;
LABEL_17:
      unint64_t v16 = v8 - v11;
      uint64_t v17 = 8 * v11;
      v18 = (double *)(v9 + v17);
      uint64_t v19 = (double *)(v5 + v17);
      do
      {
        double v20 = *v18++;
        *uint64_t v19 = *v19 - v20;
        ++v19;
        --v16;
      }
      while (v16);
      return a1;
    }
    unint64_t v11 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    double v12 = (float64x2_t *)(v9 + 16);
    uint64_t v13 = (float64x2_t *)(v5 + 16);
    unint64_t v14 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      float64x2_t v15 = vsubq_f64(*v13, *v12);
      v13[-1] = vsubq_f64(v13[-1], v12[-1]);
      *uint64_t v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v8 != v11) {
      goto LABEL_17;
    }
  }
  return a1;
}

void sub_1002FCE48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002FCE68(uint64_t a1)
{
}

void sub_1002FCF2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a10) {
    sub_1003A637C(a10);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1002FCF48(void *a1)
{
  *a1 = off_100465838;
  uint64_t v2 = a1[10];
  a1[10] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = (void *)a1[7];
  if (v3)
  {
    a1[8] = v3;
    operator delete(v3);
  }
  uint64_t v4 = (void *)a1[2];
  if (v4)
  {
    a1[3] = v4;
    operator delete(v4);
  }
  return a1;
}

void sub_1002FCFD8(void *a1)
{
  *a1 = off_100465838;
  uint64_t v2 = a1[10];
  a1[10] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = (void *)a1[7];
  if (v3)
  {
    a1[8] = v3;
    operator delete(v3);
  }
  uint64_t v4 = (void *)a1[2];
  if (v4)
  {
    a1[3] = v4;
    operator delete(v4);
  }

  operator delete();
}

double sub_1002FD088(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

void sub_1002FD11C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002FD138(double *a1)
{
  a1[1] = (*(double (**)(double *))(*(void *)a1 + 48))(a1);
}

void sub_1002FD1EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1002FD208(uint64_t a1, uint64_t a2)
{
  __p = 0;
  unint64_t v11 = 0;
  double v12 = 0;
  uint64_t v4 = *(const void **)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  int64_t v5 = v3 - *(void *)a2;
  if (v3 != *(void *)a2)
  {
    if (v5 < 0) {
      sub_1000A9108();
    }
    unint64_t v6 = (char *)operator new(v3 - *(void *)a2);
    uint64_t v7 = &v6[8 * (v5 >> 3)];
    __p = v6;
    double v12 = v7;
    memcpy(v6, v4, v5);
    unint64_t v11 = v7;
  }
  double v8 = (*(double (**)(uint64_t, void **))(*(void *)a1 + 16))(a1, &__p);
  if (__p)
  {
    unint64_t v11 = __p;
    operator delete(__p);
  }
  return v8;
}

void sub_1002FD2D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002FD2F0(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

void sub_1002FD320(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100465900;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1002FD340(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100465900;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_1002FD394(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_1002FD3C0()
{
}

double sub_1002FD3D4()
{
  return 0.0;
}

void sub_1002FD3DC()
{
  __cxa_allocate_exception(0x40uLL);
  *((unsigned char *)&v1.__r_.__value_.__s + 23) = 15;
  strcpy((char *)&v1, "not implemented");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_100464360;
  sub_10018E868((uint64_t)v0);
  sub_1002A5E28(&v2, (uint64_t)"virtual double UniformMultivariatePdf::partitionFunction()", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/math/multivariate_pdf.cpp", 28, (uint64_t)v0);
}

void sub_1002FD4A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void sub_1002FD508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x1002FD4F8);
}

void sub_1002FD52C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  sub_1002FE814((uint64_t)&v12, a1);
  uint64_t v17 = (uint64_t (**)())&off_100451ED0;
  sub_1002FDDA8((uint64_t)&v14, (uint64_t)&v12);
  v14.__vftable = (std::logic_error_vtbl *)off_100465A28;
  v15[0] = off_100465A60;
  uint64_t v17 = &off_100465A98;
  sub_1000A6FDC((uint64_t)v15, (uint64_t)&v13);
  v15[2] = a2;
  v15[3] = a3;
  int v16 = a4;
  unint64_t v9 = *(const void **)a5;
  size_t v10 = *(void *)(a5 + 8) - *(void *)a5;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0) {
      sub_1000A9108();
    }
    __p = operator new(v10);
    memcpy(__p, v9, v10);
  }
  sub_1002FDA4C();
}

void sub_1002FD7FC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,std::logic_error a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,_UNKNOWN **a38,uint64_t a39)
{
  a38 = &off_100451DC0;
  if (a39)
  {
    if ((*(unsigned int (**)(uint64_t))(*(void *)a39 + 32))(a39))
    {
      a39 = 0;
      sub_100371BA8(&a29);
      sub_1000A6954(a1);
    }
  }
  sub_100371BA8(&a29);
  sub_1000A6954(a1);
}

void sub_1002FD874(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    operator delete(__p);
    sub_1000A6954(a1);
  }
  sub_1000A6954(a1);
}

void sub_1002FD89C(std::logic_error *this)
{
  this[5].__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = this[5].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[5].__imp_.__imp_ = 0;
  }

  sub_100371BA8(this);
}

void *sub_1002FD928(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 120) = &off_100451ED0;
  int8x16_t result = (void *)sub_1002FDDA8(a1, a2);
  *int8x16_t result = off_100465A28;
  result[10] = off_100465A60;
  result[15] = &off_100465A98;
  return result;
}

void sub_1002FD9C0(std::logic_error *this)
{
  this[5].__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = this[5].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[5].__imp_.__imp_ = 0;
  }

  sub_100371BA8(this);
}

void sub_1002FDA4C()
{
}

void sub_1002FDCE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CD2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002FDCFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_1000CD2E0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_1002FDD18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1002FDDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = std::logic_error::logic_error((std::logic_error *)a1, (const std::logic_error *)a2);
  v4->__vftable = (std::logic_error_vtbl *)off_10046A658;
  if (*(char *)(a2 + 39) < 0)
  {
    sub_1000559FC(&v4[1], *(void **)(a2 + 16), *(void *)(a2 + 24));
  }
  else
  {
    std::logic_error v5 = *(std::logic_error *)(a2 + 16);
    v4[2].__vftable = *(std::logic_error_vtbl **)(a2 + 32);
    v4[1] = v5;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = (unsigned char *)(a1 + 48);
  if (*(char *)(a2 + 71) < 0)
  {
    sub_1000559FC(v6, *(void **)(a2 + 48), *(void *)(a2 + 56));
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_OWORD *)uint64_t v6 = v7;
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = &off_100451DC0;
  *(void *)(a1 + 88) = v8;
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 24))(v8);
  }
  long long v9 = *(_OWORD *)(a2 + 96);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = v9;
  *(void *)a1 = off_100465AC8;
  *(void *)(a1 + 80) = off_100465AF0;
  return a1;
}

void sub_1002FDEF8(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 39) < 0)
  {
    operator delete(*v2);
    std::logic_error::~logic_error((std::logic_error *)v1);
    _Unwind_Resume(a1);
  }
  std::logic_error::~logic_error((std::logic_error *)v1);
  _Unwind_Resume(a1);
}

void sub_1002FDF30(_Unwind_Exception *a1)
{
  sub_100371BA8(v1);
  _Unwind_Resume(a1);
}

void sub_1002FDF44(std::logic_error *this)
{
  this[5].__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = this[5].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[5].__imp_.__imp_ = 0;
  }

  sub_100371BA8(this);
}

void sub_1002FDFD0(std::logic_error *this)
{
  this[5].__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = this[5].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[5].__imp_.__imp_ = 0;
  }
  sub_100371BA8(this);

  operator delete();
}

void sub_1002FE070()
{
}

void sub_1002FE154()
{
  sub_1002FDF44(v0);
  operator delete();
}

void sub_1002FE188(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x80uLL);
  sub_1002FD928((uint64_t)exception, a1);
}

void sub_1002FE1D0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002FE1E4(std::logic_error *a1)
{
  a1->__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  sub_100371BA8(a1 - 5);
}

void sub_1002FE26C(std::logic_error *a1)
{
  a1->__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  sub_100371BA8(a1 - 5);

  operator delete();
}

void sub_1002FE308()
{
}

void sub_1002FE404()
{
  v0[5].__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = v0[5].__imp_.__imp_;
  if (imp)
  {
    if ((*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
      v0[5].__imp_.__imp_ = 0;
    }
  }
  sub_100371BA8(v0);
  operator delete();
}

void sub_1002FE48C(void *a1)
{
  uint64_t v1 = (uint64_t)a1 + *(void *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x80uLL);
  sub_1002FD928((uint64_t)exception, v1);
}

void sub_1002FE4E8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1002FE4FC(void *a1)
{
  uint64_t v1 = (std::logic_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[5].__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = v1[5].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[5].__imp_.__imp_ = 0;
  }

  sub_100371BA8(v1);
}

void sub_1002FE59C(void *a1)
{
  uint64_t v1 = (std::logic_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[5].__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = v1[5].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[5].__imp_.__imp_ = 0;
  }
  sub_100371BA8(v1);

  operator delete();
}

void sub_1002FE650(std::logic_error *this)
{
  this[5].__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = this[5].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[5].__imp_.__imp_ = 0;
  }
  sub_100371BA8(this);

  operator delete();
}

void sub_1002FE6F0(std::logic_error *a1)
{
  a1->__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  sub_100371BA8(a1 - 5);
}

void sub_1002FE778(std::logic_error *a1)
{
  a1->__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  sub_100371BA8(a1 - 5);

  operator delete();
}

uint64_t sub_1002FE814(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = std::logic_error::logic_error((std::logic_error *)a1, (const std::logic_error *)a2);
  v4->__vftable = (std::logic_error_vtbl *)off_10046A658;
  if (*(char *)(a2 + 39) < 0)
  {
    sub_1000559FC(&v4[1], *(void **)(a2 + 16), *(void *)(a2 + 24));
  }
  else
  {
    std::logic_error v5 = *(std::logic_error *)(a2 + 16);
    v4[2].__vftable = *(std::logic_error_vtbl **)(a2 + 32);
    v4[1] = v5;
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v6 = (unsigned char *)(a1 + 48);
  if (*(char *)(a2 + 71) < 0)
  {
    sub_1000559FC(v6, *(void **)(a2 + 48), *(void *)(a2 + 56));
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_OWORD *)uint64_t v6 = v7;
  }
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 88) = 0;
  *(_DWORD *)(a1 + 112) = -1;
  *(void *)a1 = off_100465AC8;
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = off_100465AF0;
  return a1;
}

void sub_1002FE918(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 39) < 0)
  {
    operator delete(*v2);
    std::logic_error::~logic_error((std::logic_error *)v1);
    _Unwind_Resume(a1);
  }
  std::logic_error::~logic_error((std::logic_error *)v1);
  _Unwind_Resume(a1);
}

void sub_1002FE950()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1002FE9C8()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_1002FEA40()
{
  v0 = operator new(0x28uLL);
  v0[1] = 0;
  v0[2] = 0;
  void *v0 = off_100465900;
  v0[3] = off_100465950;
  v0[4] = 0x7FF8000000000000;
  qword_1004929B0 = (uint64_t)(v0 + 3);
  *(void *)algn_1004929B8 = v0;

  return __cxa_atexit((void (*)(void *))sub_1002463A8, &qword_1004929B0, (void *)&_mh_execute_header);
}

double sub_1002FEAD4(uint64_t **a1)
{
  uint64_t v1 = *a1;
  std::runtime_error v2 = a1[1];
  if (*a1 == v2) {
    return 0.0;
  }
  double v3 = 0.0;
  double v4 = 0.0;
  do
  {
    uint64_t v10 = *v1;
    sub_1001A763C((uint64_t)v11, (uint64_t)(v1 + 1));
    std::logic_error v5 = sub_100275EEC(&v10);
    sub_1001A763C((uint64_t)v7, (uint64_t)v5);
    double v3 = v3 + v8;
    double v4 = v4 + v9;
    nullsub_94(v7);
    nullsub_94(v11);
    v1 += 5;
  }
  while (v1 != v2);
  return v3;
}

void sub_1002FEB88(_Unwind_Exception *a1)
{
  nullsub_94(v1);
  _Unwind_Resume(a1);
}

double sub_1002FEB9C@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  double result = NAN;
  *(_OWORD *)(a1 + 24) = xmmword_1003FADB0;
  return result;
}

void sub_1002FEBB4(uint64_t **a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0x7FF8000000000000;
  *(double *)(a2 + 32) = a3;
  if ((uint64_t **)a2 != a1) {
    sub_1002C0800(a2, *a1, a1[1], 0xCCCCCCCCCCCCCCCDLL * (a1[1] - *a1));
  }
}

void sub_1002FEC0C(_Unwind_Exception *a1)
{
  sub_1002BF620(v1);
  _Unwind_Resume(a1);
}

double sub_1002FEC20(uint64_t a1, uint64_t a2)
{
  double v2 = 0.0;
  if (*(double *)(a2 + 32) == 0.0) {
    return v2;
  }
  (*(void (**)(void **__return_ptr))(**(void **)(a1 + 56) + 48))(&__p);
  if (__p)
  {
    sub_100357D60(*(double *)(a1 + 32) - *((double *)__p + 10));
    sub_100357D60(1.57079633 - (v6 + -1.57079633));
    double v8 = v7;
    double v9 = sub_1002FEAD4((uint64_t **)a2);
    long double v11 = atan2(v10, v9);
    sub_100357D60(v8 - v11);
    double v2 = *(double *)(a2 + 32)
       * ((*(double *)&qword_1004929C8 + (v12 * v12 / 0.822467033 + 1.64243019) * -0.5)
        * (double)(0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3)));
    uint64_t v13 = v15;
    if (!v15) {
      return v2;
    }
  }
  else
  {
    double v2 = *(double *)(a2 + 24);
    uint64_t v13 = v15;
    if (!v15) {
      return v2;
    }
  }
  if (atomic_fetch_add(&v13->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return v2;
  }
  ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
  std::__shared_weak_count::__release_weak(v13);
  return v2;
}

void sub_1002FEE0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1002FEE28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1000BA884((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002FEE3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1000BA884((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1002FEE50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1000BA884((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_1002FEE64(uint64_t a1, int a2, uint64_t a3)
{
  if (a2 != 1 || !sub_1003A057C(a1) || sub_1003A0660(a1) > *(double *)(a3 + 96)) {
    return 0.0;
  }

  return sub_10029A0E0(a3);
}

void sub_1002FEED0()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1002FEF48()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

long double sub_1002FEFC0()
{
  *(double *)&qword_1004929C0 = 0.99978988 - sub_10029A194(-3.46410162);
  long double result = -log(*(long double *)&qword_1004929C0);
  qword_1004929C8 = *(void *)&result;
  return result;
}

double sub_1002FF004(unint64_t *a1)
{
  return COERCE_DOUBLE(atomic_load(a1));
}

void sub_1002FF010(uint64_t a1)
{
  uint64_t v1 = (unsigned __int8 *)(a1 + 8);
  unsigned __int8 v2 = atomic_load((unsigned __int8 *)(a1 + 8));
  if (v2)
  {
    v6.__m_ = (std::unique_lock<std::mutex>::mutex_type *)(a1 + 16);
    v6.__owns_ = 1;
    std::mutex::lock((std::mutex *)(a1 + 16));
    unsigned __int8 v4 = atomic_load(v1);
    if (v4)
    {
      do
      {
        std::condition_variable::wait((std::condition_variable *)(a1 + 80), &v6);
        unsigned __int8 v5 = atomic_load((unsigned __int8 *)(a1 + 8));
      }
      while ((v5 & 1) != 0);
    }
    if (v6.__owns_) {
      std::mutex::unlock(v6.__m_);
    }
  }
}

void sub_1002FF08C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1002FF104()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_1002FF17C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = off_10045DEA8;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = off_10045DAB8;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) &= 0xFCu;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_OWORD *)(a2 + 112) = 0u;
  *(void *)(a2 + 128) = 0;
  *(_WORD *)(a2 + 136) &= 0xF800u;
  sub_100041B18(a2, *(void *)(a1 + 8));
  sub_100041B20(a2, *(void *)(a1 + 16));
  sub_100041EB0(a2, *(void *)(a1 + 24));
  sub_100041EB8(a2, a1 + 32);
  __int16 v4 = *(_WORD *)(a1 + 192);
  if ((v4 & 0x10) != 0)
  {
    sub_100041D90(a2, (const std::string *)(a1 + 64));
    __int16 v4 = *(_WORD *)(a1 + 192);
  }
  if ((v4 & 0x100) != 0)
  {
    sub_100041DD8(a2, *(double *)(a1 + 112));
    __int16 v4 = *(_WORD *)(a1 + 192);
  }
  if ((v4 & 0x20) != 0)
  {
    sub_100041DC4(a2, *(double *)(a1 + 88));
    __int16 v4 = *(_WORD *)(a1 + 192);
  }
  if ((v4 & 0x40) != 0)
  {
    sub_100041D40(a2, *(double *)(a1 + 96));
    __int16 v4 = *(_WORD *)(a1 + 192);
  }
  if ((v4 & 0x800) != 0)
  {
    sub_100041D7C(a2, *(double *)(a1 + 128));
    __int16 v4 = *(_WORD *)(a1 + 192);
  }
  if ((v4 & 0x1000) != 0)
  {
    sub_100041D68(a2, *(double *)(a1 + 136));
    __int16 v4 = *(_WORD *)(a1 + 192);
  }
  if ((v4 & 0x2000) != 0) {
    sub_100041D54(a2, *(double *)(a1 + 144));
  }
}

void sub_1002FF2FC(_Unwind_Exception *a1)
{
  sub_100041664(v1);
  _Unwind_Resume(a1);
}

void sub_1002FF310(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10009E67C(a2);
  *(_DWORD *)(a2 + 156) |= 1u;
  uint64_t v4 = *(void *)(a2 + 16);
  if (!v4) {
    operator new();
  }
  uint64_t v5 = *(void *)(a1 + 8);
  *(_DWORD *)(v4 + 52) |= 8u;
  *(void *)(v4 + 40) = v5;
  double v6 = (double)*(uint64_t *)(a1 + 16) / 1000000000.0 + -978307200.0;
  *(_DWORD *)(a2 + 156) |= 1u;
  *(_DWORD *)(v4 + 52) |= 1u;
  *(double *)(v4 + 16) = v6;
  LODWORD(v5) = *(_DWORD *)(a2 + 156);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 40);
  *(void *)(a2 + 72) = *(void *)(a1 + 96);
  int v7 = *(_DWORD *)(a1 + 124);
  *(_DWORD *)(a2 + 156) = v5 | 0x4106;
  *(_DWORD *)(a2 + 116) = v7;
  double v8 = (const void **)(a1 + 64);
  int v9 = std::stoi((const std::string *)(a1 + 64), 0, 10);
  int v10 = *(_DWORD *)(a2 + 156);
  *(_DWORD *)(a2 + 48) = v9;
  *(_OWORD *)(a2 + 120) = *(_OWORD *)(a1 + 128);
  uint64_t v11 = *(void *)(a1 + 152);
  *(void *)(a2 + 136) = *(void *)(a1 + 144);
  uint64_t v12 = *(void *)(a1 + 104);
  *(void *)(a2 + 96) = *(void *)(a1 + 112);
  *(void *)(a2 + 104) = v11;
  uint64_t v13 = *(void *)(a1 + 160);
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = v13;
  uint64_t v14 = *(void *)(a1 + 88);
  *(_DWORD *)(a2 + 156) = v10 | 0x39E28;
  *(void *)(a2 + 56) = v14;
  std::to_string(&v25, 4u);
  uint64_t v15 = *(unsigned __int8 *)(a1 + 87);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = *(unsigned __int8 *)(a1 + 87);
  }
  else {
    uint64_t v16 = *(void *)(a1 + 72);
  }
  std::string::size_type size = HIBYTE(v25.__r_.__value_.__r.__words[2]);
  int v18 = SHIBYTE(v25.__r_.__value_.__r.__words[2]);
  if ((v25.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v25.__r_.__value_.__l.__size_;
  }
  if (v16 != size) {
    goto LABEL_18;
  }
  if ((v25.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v19 = &v25;
  }
  else {
    uint64_t v19 = (std::string *)v25.__r_.__value_.__r.__words[0];
  }
  if ((v15 & 0x80) == 0)
  {
    if (*(unsigned char *)(a1 + 87))
    {
      while (*(unsigned __int8 *)v8 == v19->__r_.__value_.__s.__data_[0])
      {
        double v8 = (const void **)((char *)v8 + 1);
        uint64_t v19 = (std::string *)((char *)v19 + 1);
        if (!--v15) {
          goto LABEL_16;
        }
      }
LABEL_18:
      BOOL v20 = 0;
      if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
LABEL_16:
    BOOL v20 = 1;
    if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_20;
    }
LABEL_19:
    operator delete(v25.__r_.__value_.__l.__data_);
    goto LABEL_20;
  }
  BOOL v20 = memcmp(*v8, v19, *(void *)(a1 + 72)) == 0;
  if (v18 < 0) {
    goto LABEL_19;
  }
LABEL_20:
  int v21 = *(_DWORD *)(a2 + 156);
  *(_DWORD *)(a2 + 52) = v20;
  uint64_t v22 = *(void *)(a1 + 168);
  *(_DWORD *)(a2 + 156) = v21 | 0xC0;
  *(void *)(a2 + 64) = v22;
  if (((*(unsigned __int16 *)(a1 + 192) | (*(unsigned __int8 *)(a1 + 194) << 16)) & 0x20000) != 0)
  {
    *(_DWORD *)(a2 + 156) = v21 | 0x400C0;
    uint64_t v23 = *(void *)(a2 + 144);
    if (!v23) {
      operator new();
    }
    int v24 = *(_DWORD *)(a1 + 184);
    *(_DWORD *)(v23 + 24) |= 1u;
    *(_DWORD *)(v23 + 16) = v24;
  }
}

void sub_1002FF574()
{
}

void sub_1002FF5B4(_Unwind_Exception *a1)
{
  sub_100042F7C(v1);
  _Unwind_Resume(a1);
}

void sub_1002FF5C8(_Unwind_Exception *a1)
{
  sub_100042F7C(v1);
  _Unwind_Resume(a1);
}

void sub_1002FF5DC(_Unwind_Exception *a1)
{
  sub_100042F7C(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1002FF5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10028CF34(a1, a2);
  *(_DWORD *)(a1 + 16) = sub_10028CF94(v3, 2) + 1;
  return a1;
}

uint64_t sub_1002FF628(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1002FF630(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  sub_100076644(a1, 0);
  sub_1002FFA48(a1, (int **)&__p);
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v5 = (int *)__p;
  uint64_t v4 = v50;
  if ((unint64_t)(v50 - (unsigned char *)__p) < 8) {
    goto LABEL_53;
  }
  double v6 = 0;
  unint64_t v7 = 0;
  do
  {
    uint64_t v8 = v5[2 * v7 + 1];
    if (v8)
    {
      uint64_t v9 = 0;
      int v10 = v5[2 * v7];
      while (1)
      {
        while (1)
        {
          unint64_t v11 = a2[2];
          if ((unint64_t)v6 >= v11) {
            break;
          }
          *v6++ = v10;
          a2[1] = (unint64_t)v6;
          if (++v9 == v8) {
            goto LABEL_3;
          }
        }
        unint64_t v12 = *a2;
        unint64_t v13 = (unint64_t)&v6[-*a2];
        unint64_t v14 = v13 + 1;
        if ((uint64_t)(v13 + 1) < 0) {
          sub_1000A9108();
        }
        unint64_t v15 = v11 - v12;
        if (2 * v15 > v14) {
          unint64_t v14 = 2 * v15;
        }
        if (v15 >= 0x3FFFFFFFFFFFFFFFLL) {
          size_t v16 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          size_t v16 = v14;
        }
        if (v16)
        {
          int64_t v17 = (int64_t)operator new(v16);
          int v18 = (char *)(v17 + v13);
          *(unsigned char *)(v17 + v13) = v10;
          uint64_t v19 = v17 + v13 + 1;
          if (v6 != (unsigned char *)v12) {
            goto LABEL_17;
          }
        }
        else
        {
          int64_t v17 = 0;
          int v18 = &v6[-*a2];
          *(unsigned char *)unint64_t v13 = v10;
          uint64_t v19 = v13 + 1;
          if (v6 != (unsigned char *)v12)
          {
LABEL_17:
            if (v13 < 8
              || v17 + v13 + v12 - (void)v6 > v17 + v13 - 1
              || v12 > (unint64_t)(v6 - 1)
              || v12 - v17 < 0x20)
            {
              BOOL v20 = v6;
            }
            else if (v13 >= 0x20)
            {
              unint64_t v23 = v13 & 0xFFFFFFFFFFFFFFE0;
              int v24 = (_OWORD *)(v17 + v13 - 16);
              std::string v25 = (long long *)(v6 - 16);
              unint64_t v26 = v13 & 0xFFFFFFFFFFFFFFE0;
              do
              {
                long long v27 = *v25;
                *(v24 - 1) = *(v25 - 1);
                *int v24 = v27;
                v24 -= 2;
                v25 -= 2;
                v26 -= 32;
              }
              while (v26);
              if (v13 == v23) {
                goto LABEL_21;
              }
              if ((v13 & 0x18) != 0) {
                goto LABEL_37;
              }
              v18 -= v23;
              BOOL v20 = &v6[-v23];
            }
            else
            {
              unint64_t v23 = 0;
LABEL_37:
              BOOL v20 = &v6[-(v13 & 0xFFFFFFFFFFFFFFF8)];
              v18 -= v13 & 0xFFFFFFFFFFFFFFF8;
              __int16 v28 = &v6[-v23 - v12 - 8 + v17];
              v29 = (uint64_t *)&v6[-v23 - 8];
              unint64_t v30 = v23 - (v13 & 0xFFFFFFFFFFFFFFF8);
              do
              {
                uint64_t v31 = *v29--;
                *v28-- = v31;
                v30 += 8;
              }
              while (v30);
              if (v13 == (v13 & 0xFFFFFFFFFFFFFFF8))
              {
LABEL_21:
                double v6 = (unsigned char *)*a2;
                *a2 = v17;
                a2[1] = v19;
                a2[2] = v17 + v16;
                if (!v6) {
                  goto LABEL_26;
                }
LABEL_25:
                operator delete(v6);
                goto LABEL_26;
              }
            }
            int v21 = v18 - 1;
            do
            {
              char v22 = *--v20;
              *v21-- = v22;
            }
            while (v20 != (unsigned char *)v12);
            goto LABEL_21;
          }
        }
        *a2 = (unint64_t)v18;
        a2[1] = v19;
        a2[2] = v17 + v16;
        if (v6) {
          goto LABEL_25;
        }
LABEL_26:
        double v6 = (unsigned char *)v19;
        a2[1] = v19;
        if (++v9 == v8)
        {
LABEL_3:
          uint64_t v5 = (int *)__p;
          uint64_t v4 = v50;
          break;
        }
      }
    }
    ++v7;
  }
  while (v7 < (unint64_t)((v4 - (unsigned char *)v5) >> 2) >> 1);
  unint64_t v32 = *a2;
  unint64_t v33 = (unint64_t)&v6[-*a2];
  if (a2[2] - *a2 > v33)
  {
    if (v6 == (unsigned char *)v32)
    {
      v35 = &v6[-*a2];
      unint64_t v34 = (unint64_t)v35;
    }
    else
    {
      unint64_t v34 = (unint64_t)operator new((size_t)&v6[-*a2]);
      v35 = (char *)(v34 + v33);
      if (v33 < 8 || (unint64_t)&v6[~(unint64_t)&v6[~v32 + v34]] < 0x20)
      {
        v36 = v6;
        v37 = (char *)(v34 + v33);
        goto LABEL_47;
      }
      if (v33 >= 0x20)
      {
        unint64_t v40 = v33 & 0xFFFFFFFFFFFFFFE0;
        v41 = (long long *)(v6 - 16);
        v42 = &v6[v34 - v32 - 16];
        unint64_t v43 = v33 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          long long v44 = *v41;
          *(v42 - 1) = *(v41 - 1);
          _OWORD *v42 = v44;
          v42 -= 2;
          v41 -= 2;
          v43 -= 32;
        }
        while (v43);
        if (v33 != v40)
        {
          if ((v33 & 0x18) == 0)
          {
            v37 = &v35[-v40];
            v36 = &v6[-v40];
            goto LABEL_47;
          }
          goto LABEL_62;
        }
      }
      else
      {
        unint64_t v40 = 0;
LABEL_62:
        v36 = &v6[-(v33 & 0xFFFFFFFFFFFFFFF8)];
        v37 = &v35[-(v33 & 0xFFFFFFFFFFFFFFF8)];
        v45 = &v6[-8 - v40 - v32];
        v46 = (uint64_t *)&v6[-8 - v40];
        unint64_t v47 = v40 - (v33 & 0xFFFFFFFFFFFFFFF8);
        do
        {
          uint64_t v48 = *v46--;
          *(void *)&v45[v34] = v48;
          v45 -= 8;
          v47 += 8;
        }
        while (v47);
        if (v33 != (v33 & 0xFFFFFFFFFFFFFFF8))
        {
LABEL_47:
          v38 = v37 - 1;
          do
          {
            char v39 = *--v36;
            *v38-- = v39;
          }
          while (v36 != (unsigned char *)v32);
        }
      }
    }
    *a2 = v34;
    a2[1] = (unint64_t)v35;
    a2[2] = (unint64_t)v35;
    if (v32) {
      operator delete((void *)v32);
    }
  }
LABEL_53:
  if (__p)
  {
    v50 = __p;
    operator delete(__p);
  }
}

void sub_1002FF9F0(void *a1)
{
}

void sub_1002FFA00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (v12)
  {
    *(void *)(v11 + 8) = v12;
    operator delete(v12);
    unint64_t v14 = __p;
    if (!__p) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    unint64_t v14 = __p;
    if (!__p) {
      goto LABEL_3;
    }
  }
  operator delete(v14);
  _Unwind_Resume(exception_object);
}

void sub_1002FFA48(uint64_t a1@<X0>, int **a2@<X8>)
{
  sub_100076644(a1, 0);
  sub_10028CFE0(a1, 2);
  if (sub_10028CF40(a1, 1))
  {
    sub_1001F097C((uint64_t)v4, *(void *)a1, *(void *)(a1 + 8), *(_DWORD *)(a1 + 16));
    sub_1002763C4(v4, a2);
  }
  else
  {
    sub_1001F097C((uint64_t)v4, *(void *)a1, *(void *)(a1 + 8), *(_DWORD *)(a1 + 16));
    sub_1001F0988(v4, a2);
  }
}

__n128 *sub_1002FFAE0(__n128 *a1, uint64_t a2, uint64_t a3, __n128 *a4)
{
  sub_100033728(a1, a4);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a2;
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  sub_10025BC34(v8 + 32, a3);
  sub_100273560((uint64_t)a4);
  return a1;
}

void sub_1002FFBFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    sub_1002583D8(v21);
    sub_1000BA884(v20);
    _Unwind_Resume(a1);
  }
  sub_1002583D8(v21);
  sub_1000BA884(v20);
  _Unwind_Resume(a1);
}

uint64_t sub_1002FFC70(uint64_t a1)
{
  sub_1002583D8(a1 + 32);
  unsigned __int8 v2 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_1002FFCF4(uint64_t a1, double *a2, unint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v12 = a7 - a6;
  if (a7 - a6 > a3)
  {
    sub_1000AE4B0(&v84, "");
    sub_100300974("For now this is not allowed. You can't have more output particles than siblings.", (std::string *)&v77);
    sub_10016A2C4((uint64_t)&v84, (uint64_t)&v77, 1);
    if (SBYTE7(v78) < 0) {
      operator delete((void *)v77.n128_u64[0]);
    }
    if (SHIBYTE(v86) < 0) {
      operator delete(v84);
    }
    sub_10014B3FC((uint64_t)&__p);
  }
  unint64_t v13 = *(double ***)(a1 + 48);
  if (!v13
    || (float v14 = (*(float (**)(void))(***(void ***)(a1 + 16) + 32))(**(void **)(a1 + 16)),
        sub_100273568(v13, 0, a3, (uint64_t)&v77, v14),
        !v77.n128_u8[0]))
  {
    LOBYTE(v84) = 0;
    uint64_t v20 = 0;
    unint64_t v23 = *(uint64_t **)(a1 + 16);
    char v22 = v23 + 2;
    uint64_t v24 = *v23;
    uint64_t v21 = v23 + 3;
    uint64_t v61 = v24;
    goto LABEL_12;
  }
  LOBYTE(v84) = 0;
  v86 = 0;
  v87 = 0;
  v85 = 0;
  unint64_t v15 = (void *)v77.n128_u64[1];
  int64_t v16 = v78 - v77.n128_u64[1];
  if ((void)v78 == v77.n128_u64[1])
  {
    int64_t v17 = 0;
    int v18 = 0;
    LOBYTE(v84) = 1;
    if (!v77.n128_u64[1]) {
      goto LABEL_8;
    }
  }
  else
  {
    if (v16 < 0) {
      sub_1000A9108();
    }
    int64_t v17 = operator new(v78 - v77.n128_u64[1]);
    int v18 = (char *)&v17[v16 >> 3];
    v85 = v17;
    v87 = v18;
    memcpy(v17, v15, v16);
    v86 = v18;
    LOBYTE(v84) = 1;
    if (!v15) {
      goto LABEL_8;
    }
  }
  *(void *)&long long v78 = v15;
  operator delete(v15);
LABEL_8:
  uint64_t v19 = *(uint64_t **)(a1 + 16);
  if (!v19[4])
  {
    sub_1000AE4B0(&__p, "");
    sub_10014AEE4("Asking for auxiliary injection but you never defined an auxiliary ParticleGenerator in particle_generator.cpp:newParticleGeneratorImpl!!", (std::string *)&v77);
    sub_10016A2C4((uint64_t)&__p, (uint64_t)&v77, 1);
    if (SBYTE7(v78) < 0) {
      operator delete((void *)v77.n128_u64[0]);
    }
    if (SHIBYTE(v76) < 0) {
      operator delete(__p);
    }
    sub_1000D11E0((uint64_t)&v71);
  }
  uint64_t v20 = *(void **)(a1 + 48);
  if (v12 > (v18 - (char *)v17) >> 3)
  {
    sub_1000AE4B0(&v77, "");
    sub_10016A2C4((uint64_t)&v77, 0, 0);
    if (SBYTE7(v78) < 0) {
      operator delete((void *)v77.n128_u64[0]);
    }
    sub_1000D11E0((uint64_t)&__p);
  }
  uint64_t v61 = *v19;
  uint64_t v21 = (uint64_t *)(*(void *)(a1 + 16) + 32);
  char v22 = v21;
LABEL_12:
  uint64_t v59 = *v21;
  uint64_t v60 = *v22;
  v68 = 0;
  v69 = 0;
  v70 = 0;
  if (a7 != a6)
  {
    if (v12 >> 61) {
      sub_1000A9108();
    }
    v68 = operator new(8 * v12);
    v70 = (char *)v68 + 8 * v12;
    bzero(v68, 8 * v12);
    uint64_t v41 = 0;
    v69 = v70;
    uint64_t v42 = 80 * a6 + 72;
    do
    {
      unint64_t v43 = v12;
      unint64_t v44 = a6 + v41;
      unint64_t v45 = *(void *)a4;
      if ((unint64_t)(a6 + v41) < *(void *)a4)
      {
        unint64_t v46 = *(void *)(a4 + 16);
        if (v44 >= 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v46 - *(void *)(a4 + 8)) >> 4))
        {
          if (v46 >= *(void *)(a4 + 24))
          {
            unint64_t v47 = sub_1003009C4((void **)(a4 + 8), a2);
          }
          else
          {
            sub_100249788(*(double **)(a4 + 16), a2);
            unint64_t v47 = (double *)(v46 + 80);
            *(void *)(a4 + 16) = v46 + 80;
          }
          *(void *)(a4 + 16) = v47;
          unint64_t v45 = *(void *)a4;
        }
      }
      BOOL v48 = v44 >= v45;
      if (v44 < v45) {
        unint64_t v45 = 0;
      }
      v49 = a5;
      if (!v48) {
        v49 = (void *)(a4 + 8);
      }
      uint64_t v50 = *v49 - 80 * v45;
      *((void *)v68 + v41) = v50 + v42 - 72;
      if ((_BYTE)v84)
      {
        unint64_t v51 = v85[v41];
        if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v20[1] - *v20) >> 4) <= v51) {
          sub_1001F352C();
        }
        sub_1002497BC(v77.n128_f64, *v20 + 80 * v51, a2);
        sub_100033728((__n128 *)(v50 + v42 - 72), &v77);
      }
      else
      {
        sub_100249788(v77.n128_f64, a2);
        sub_100033728((__n128 *)(v50 + v42 - 72), &v77);
      }
      uint64_t v52 = v50 + v42;
      long long v53 = v78;
      long long v54 = v79;
      *(_WORD *)(v52 - 24) = v80;
      *(_OWORD *)(v52 - 40) = v54;
      *(_OWORD *)(v52 - 56) = v53;
      long long v55 = v81;
      long long v81 = 0uLL;
      v56 = *(std::__shared_weak_count **)(v50 + v42 - 8);
      *(_OWORD *)(v52 - 16) = v55;
      if (v56 && !atomic_fetch_add(&v56->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
        std::__shared_weak_count::__release_weak(v56);
        *(void *)(v50 + v42) = v82;
        v57 = (std::__shared_weak_count *)*((void *)&v81 + 1);
        if (*((void *)&v81 + 1))
        {
LABEL_57:
          if (!atomic_fetch_add(&v57->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v57->__on_zero_shared)(v57);
            std::__shared_weak_count::__release_weak(v57);
          }
        }
      }
      else
      {
        *(void *)(v50 + v42) = v82;
        v57 = (std::__shared_weak_count *)*((void *)&v81 + 1);
        if (*((void *)&v81 + 1)) {
          goto LABEL_57;
        }
      }
      ++v41;
      v42 += 80;
      unint64_t v12 = v43;
    }
    while (v43 != v41);
  }
  uint64_t v25 = a1 + 32;
  if (!*(unsigned char *)(a1 + 112))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, void **, uint64_t))(*(void *)v60 + 16))(v60, v61, a1 + 32, &v68, a8);
    uint64_t v40 = a7;
    goto LABEL_62;
  }
  sub_1001AB5F8(&v77, a1 + 120);
  sub_10014E4B0(v25, (uint64_t)&v77, &v66);
  double v26 = 1.0;
  if (sub_1001E2094((uint64_t)&v77))
  {
    uint64_t v27 = (*(uint64_t (**)(uint64_t))(*(void *)v66 + 40))(v66);
    v29 = *(void **)v27;
    __int16 v28 = *(std::__shared_weak_count **)(v27 + 8);
    __p = *(void **)v27;
    unint64_t v75 = (unint64_t)v28;
    if (v28) {
      atomic_fetch_add_explicit(&v28->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    double v26 = (*(double (**)(void *))(*(void *)v29 + 88))(v29);
    double v30 = v83;
    if (v30 >= (*(double (**)(void *))(*(void *)v29 + 80))(v29)) {
      double v26 = 0.0;
    }
    if (v28 && !atomic_fetch_add(&v28->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
    }
    if (v26 < 0.0)
    {
      sub_1000AE4B0(&__p, "");
      sub_10016A2C4((uint64_t)&__p, 0, 0);
      if (SHIBYTE(v76) < 0) {
        operator delete(__p);
      }
      sub_1000D11E0((uint64_t)&v71);
    }
  }
  unint64_t v31 = vcvtmd_s64_f64(v26 * (double)v12);
  unint64_t v32 = (char *)v68;
  size_t v33 = 8 * v31;
  unint64_t v75 = 0;
  unint64_t v76 = 0;
  __p = 0;
  if (!v31)
  {
    unint64_t v34 = 0;
    v35 = (char *)v68 + v33;
    v72 = 0;
    v73 = 0;
    v71 = 0;
    int64_t v36 = v69 - ((unsigned char *)v68 + v33);
    if (v69 != (char *)v68 + v33) {
      goto LABEL_26;
    }
LABEL_77:
    v38 = 0;
    v37 = 0;
    if (v34 != (void *)v31) {
      goto LABEL_28;
    }
    goto LABEL_78;
  }
  if ((v31 & 0x8000000000000000) != 0) {
    sub_1000A9108();
  }
  unint64_t v34 = operator new(8 * v31);
  __p = v34;
  unint64_t v75 = (unint64_t)v34;
  unint64_t v31 = (unint64_t)v34 + 8 * v31;
  unint64_t v76 = v31;
  memmove(v34, v32, v33);
  unint64_t v75 = v31;
  v35 = &v32[v33];
  v72 = 0;
  v73 = 0;
  v71 = 0;
  int64_t v36 = v69 - &v32[v33];
  if (v69 == &v32[v33]) {
    goto LABEL_77;
  }
LABEL_26:
  if (v36 < 0) {
    sub_1000A9108();
  }
  v37 = (char *)operator new(v36);
  v71 = v37;
  v72 = v37;
  v38 = &v37[8 * (v36 >> 3)];
  v73 = v38;
  memmove(v37, v35, v36);
  v72 = v38;
  if (v34 != (void *)v31)
  {
LABEL_28:
    (*(void (**)(uint64_t, uint64_t, uint64_t, void **, uint64_t))(*(void *)v59 + 16))(v59, v61, v25, &__p, a8);
    v38 = v72;
    if (v71 == v72) {
      goto LABEL_29;
    }
LABEL_79:
    (*(void (**)(uint64_t, uint64_t, uint64_t, void **, uint64_t))(*(void *)v60 + 16))(v60, v61, v25, &v71, a8);
    v38 = (char *)v71;
    if (!v71) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
LABEL_78:
  if (v37 != v38) {
    goto LABEL_79;
  }
LABEL_29:
  if (v38)
  {
LABEL_30:
    v72 = v38;
    operator delete(v38);
  }
LABEL_31:
  if (__p)
  {
    unint64_t v75 = (unint64_t)__p;
    operator delete(__p);
  }
  char v39 = v67;
  uint64_t v40 = a7;
  if (v67 && !atomic_fetch_add(&v67->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
    std::__shared_weak_count::__release_weak(v39);
  }
  sub_1000A45A0((uint64_t)&v77);
LABEL_62:
  if (v40 != a6)
  {
    uint64_t v58 = 0;
    do
    {
      if (!*(void *)(*((void *)v68 + v58) + 56))
      {
        sub_1000AE4B0(&v77, "");
        sub_10016A2C4((uint64_t)&v77, 0, 0);
        if (SBYTE7(v78) < 0) {
          operator delete((void *)v77.n128_u64[0]);
        }
        sub_1000D11E0((uint64_t)&__p);
      }
      ++v58;
    }
    while (v12 != v58);
  }
  if (v68)
  {
    v69 = v68;
    operator delete(v68);
  }
  if ((_BYTE)v84)
  {
    if (v85) {
      operator delete(v85);
    }
  }
}

void sub_100300784(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,_Unwind_Exception *exception_objecta,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36,void *a37,uint64_t a38)
{
  if (a35 < 0) {
    operator delete(__p);
  }
  uint64_t v40 = *(void **)(v38 - 136);
  if (!v40) {
    _Unwind_Resume(exception_object);
  }
  operator delete(v40);
  _Unwind_Resume(exception_object);
}

std::string *sub_100300974@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1003009A8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

double *sub_1003009C4(void **a1, double *a2)
{
  unint64_t v3 = 0xCCCCCCCCCCCCCCCDLL * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 4);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x333333333333333) {
    sub_1000A9108();
  }
  if (0x999999999999999ALL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 4) > v4) {
    unint64_t v4 = 0x999999999999999ALL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 4);
  }
  if (0xCCCCCCCCCCCCCCCDLL * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 4) >= 0x199999999999999) {
    unint64_t v6 = 0x333333333333333;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0x333333333333333) {
      sub_1000A6A10();
    }
    unint64_t v7 = (char *)operator new(80 * v6);
  }
  else
  {
    unint64_t v7 = 0;
  }
  uint64_t v20 = (double *)&v7[80 * v3];
  char v22 = &v7[80 * v6];
  sub_100249788(v20, a2);
  uint64_t v8 = v20;
  uint64_t v9 = v20 + 10;
  uint64_t v11 = (char *)*a1;
  int v10 = (char *)a1[1];
  if (v10 == *a1)
  {
    int64_t v17 = (char *)a1[1];
  }
  else
  {
    unint64_t v12 = 0;
    do
    {
      unint64_t v13 = &v20[v12 / 8];
      sub_100033728((__n128 *)&v20[v12 / 8 - 10], (__n128 *)&v10[v12 - 80]);
      long long v14 = *(_OWORD *)&v10[v12 - 64];
      long long v15 = *(_OWORD *)&v10[v12 - 48];
      *((_WORD *)v13 - 16) = *(_WORD *)&v10[v12 - 32];
      *((_OWORD *)v13 - 4) = v14;
      *((_OWORD *)v13 - 3) = v15;
      *(v13 - 3) = *(double *)&v10[v12 - 24];
      uint64_t v16 = *(void *)&v10[v12 - 16];
      *((void *)v13 - 2) = v16;
      if (v16) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v16 + 8), 1uLL, memory_order_relaxed);
      }
      v20[v12 / 8 - 1] = *(double *)&v10[v12 - 8];
      v12 -= 80;
    }
    while (&v10[v12] != v11);
    int64_t v17 = (char *)*a1;
    int v10 = (char *)a1[1];
    uint64_t v8 = &v20[v12 / 8];
    uint64_t v9 = v20 + 10;
  }
  *a1 = v8;
  a1[1] = v9;
  a1[2] = v22;
  if (v10 != v17)
  {
    do
    {
      uint64_t v21 = v10 - 80;
      int v18 = (std::__shared_weak_count *)*((void *)v10 - 2);
      if (v18 && !atomic_fetch_add(&v18->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
      v10 -= 80;
    }
    while (v21 != v17);
    int v10 = v17;
  }
  if (v10) {
    operator delete(v10);
  }
  return v9;
}

void sub_100300BE8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10024A760((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100300BFC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  if (v3) {
    sub_1003A6030(v2 + v3, v2);
  }
  sub_10024A760((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100300C20()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100300C98()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_100300D10(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = 0;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = 0;
  unint64_t v3 = a2 + a2 * a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  if (v3 >= 2)
  {
    if (v3 >> 62) {
      sub_1000A9108();
    }
    unint64_t v4 = v3 >> 1;
    size_t v5 = 8 * (v3 >> 1);
    unint64_t v6 = (char *)operator new(v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 32) = &v6[8 * v4];
    bzero(v6, v5);
    *(void *)(a1 + 24) = &v6[v5];
  }
  return a1;
}

void sub_100300DA8(_Unwind_Exception *exception_object)
{
  unint64_t v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 24) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_100300DC4(uint64_t a1, unint64_t a2, unint64_t a3)
{
  return *(void *)(a1 + 16) + 8 * sub_1003012AC(a1, a2, a3);
}

uint64_t sub_100300DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  unint64_t v7 = *(unsigned char **)(a3 + 16);
  unint64_t v6 = *(unsigned char **)(a3 + 24);
  int64_t v8 = v6 - v7;
  if (v6 != v7)
  {
    if (v8 < 0) {
      sub_1000A9108();
    }
    uint64_t v9 = (char *)operator new(v6 - v7);
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v9;
    int v10 = &v9[8 * (v8 >> 3)];
    *(void *)(a1 + 32) = v10;
    memcpy(v9, v7, v8);
    *(void *)(a1 + 24) = v10;
  }
  if (*(void *)(a3 + 8) != a2)
  {
    sub_1000AE4B0(v13, "");
    sub_1003026A8("Size of matrix doesn't match expected size!", &__p);
    sub_10016A2C4((uint64_t)v13, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v14 < 0) {
      operator delete(v13[0]);
    }
    sub_10014B3FC((uint64_t)&v12);
  }
  return a1;
}

void sub_100300F40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  unint64_t v23 = *v21;
  if (*v21)
  {
    *(void *)(v20 + 24) = v23;
    operator delete(v23);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100300F94(uint64_t result, uint64_t a2, _DWORD *a3)
{
  *(_DWORD *)long double result = *a3;
  *(void *)(result + 8) = a2;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  return result;
}

uint64_t sub_100300FA8(uint64_t result, double a2)
{
  uint64_t v2 = *(int64x2_t **)(result + 16);
  unint64_t v3 = *(void *)(result + 24) - (void)v2;
  if ((uint64_t)v3 >= 1)
  {
    unint64_t v4 = v3 >> 3;
    unint64_t v5 = (v3 >> 3) - (v3 > 7) + 1;
    if (v5 < 4)
    {
      unint64_t v6 = *(double **)(result + 16);
LABEL_7:
      unint64_t v10 = v4 + 1;
      do
      {
        *v6++ = a2;
        --v10;
      }
      while (v10 > 1);
      return result;
    }
    v4 -= v5 & 0xFFFFFFFFFFFFFFFCLL;
    unint64_t v6 = (double *)&v2->i64[v5 & 0xFFFFFFFFFFFFFFFCLL];
    int64x2_t v7 = vdupq_lane_s64(*(uint64_t *)&a2, 0);
    int64_t v8 = v2 + 1;
    unint64_t v9 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v8[-1] = v7;
      *int64_t v8 = v7;
      v8 += 2;
      v9 -= 4;
    }
    while (v9);
    if (v5 != (v5 & 0xFFFFFFFFFFFFFFFCLL)) {
      goto LABEL_7;
    }
  }
  return result;
}

double sub_100301024(uint64_t a1, unint64_t *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v4 = (v2 - v3) >> 3;
  if (v4 != (uint64_t)(a2[1] - *a2) >> 4)
  {
    sub_1000AE4B0(__p, "");
    sub_10016A2C4((uint64_t)__p, 0, 0);
    if (v24 < 0) {
      operator delete(__p[0]);
    }
    sub_10014B3FC((uint64_t)v22);
  }
  if (*(_DWORD *)a1)
  {
    sub_1000AE4B0(__p, "");
    sub_10016A2C4((uint64_t)__p, 0, 0);
    if (v24 < 0) {
      operator delete(__p[0]);
    }
    sub_1000D11E0((uint64_t)v22);
  }
  if (v2 != v3)
  {
    unint64_t v5 = *a2;
    unint64_t v6 = *(void *)(a1 + 16);
    if (v4 <= 1) {
      unint64_t v7 = 1;
    }
    else {
      unint64_t v7 = (v2 - v3) >> 3;
    }
    if (v7 < 0xA || (v6 < v5 + 16 * v7 - 8 ? (BOOL v8 = v5 >= v6 + 8 * v7) : (BOOL v8 = 1), !v8))
    {
      unint64_t v9 = 0;
LABEL_18:
      unint64_t v17 = v7 - v9;
      int v18 = (uint64_t *)(v5 + 16 * v9);
      uint64_t v19 = (void *)(v6 + 8 * v9);
      do
      {
        uint64_t v20 = *v18;
        v18 += 2;
        *(void *)&long long v14 = v20;
        *v19++ = v20;
        --v17;
      }
      while (v17);
      return *(double *)&v14;
    }
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    unint64_t v10 = (_OWORD *)(v6 + 16);
    uint64_t v11 = (uint64_t *)(v5 + 32);
    unint64_t v12 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      unint64_t v13 = v11 + 2;
      *(void *)&long long v14 = *(v11 - 4);
      *((void *)&v14 + 1) = *(v11 - 2);
      uint64_t v15 = *v11;
      v11 += 8;
      *(void *)&long long v16 = v15;
      *((void *)&v16 + 1) = *v13;
      *(v10 - 1) = v14;
      *unint64_t v10 = v16;
      v10 += 2;
      v12 -= 4;
    }
    while (v12);
    if (v7 != v9) {
      goto LABEL_18;
    }
  }
  return *(double *)&v14;
}

void sub_1003011C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1003011E0(void *result, uint64_t a2)
{
  if (*(void *)(a2 + 8) != result[1])
  {
    sub_1000AE4B0(__p, "");
    sub_10016A2C4((uint64_t)__p, 0, 0);
    if (v4 < 0) {
      operator delete(__p[0]);
    }
    sub_10014B3FC((uint64_t)&v2);
  }
  *(_DWORD *)long double result = *(_DWORD *)a2;
  if (result != (void *)a2) {
    return sub_10007C388(result + 2, *(char **)(a2 + 16), *(char **)(a2 + 24), (uint64_t)(*(void *)(a2 + 24) - *(void *)(a2 + 16)) >> 3);
  }
  return result;
}

void sub_100301290(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unint64_t sub_1003012AC(uint64_t a1, unint64_t a2, unint64_t a3)
{
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 <= a2)
  {
    sub_1000AE4B0(__p, "");
    sub_10016A2C4((uint64_t)__p, 0, 0);
    if (v10 < 0) {
      operator delete(__p[0]);
    }
    sub_10014B3FC((uint64_t)v8);
  }
  if (v3 <= a3)
  {
    sub_1000AE4B0(__p, "");
    sub_10016A2C4((uint64_t)__p, 0, 0);
    if (v10 < 0) {
      operator delete(__p[0]);
    }
    sub_10014B3FC((uint64_t)v8);
  }
  if (a3 >= a2) {
    unint64_t v4 = a2;
  }
  else {
    unint64_t v4 = a3;
  }
  uint64_t v5 = 2 * v3;
  if (a3 <= a2) {
    unint64_t v6 = a2;
  }
  else {
    unint64_t v6 = a3;
  }
  return v6 - v4 + ((v4 + v4 * (v5 - v4)) >> 1);
}

void sub_1003013C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003013E4(unsigned int *a1)
{
  return *a1;
}

uint64_t sub_1003013EC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 8);
  return result;
}

BOOL sub_1003013F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v1 = *(void *)(a1 + 24);
  if (v2 == v1) {
    return *(_DWORD *)a1 != 1;
  }
  uint64_t v3 = v2 + 8;
  do
  {
    BOOL v4 = (*(void *)(v3 - 8) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
    BOOL v5 = (*(void *)(v3 - 8) & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v3 == v1;
    v3 += 8;
  }
  while (!v5);
  return v4 && *(_DWORD *)a1 != 1;
}

double sub_10030144C(uint64_t a1, unint64_t a2)
{
  unint64_t v7 = a2;
  uint64_t v3 = (unint64_t *)(a1 + 8);
  if (*(void *)(a1 + 8) < a2)
  {
    sub_1000AE4B0(v9, "");
    sub_1003026F8("Trace dimension of ", &v11);
    sub_1001F3080(&v7, &v12);
    sub_1002700A4(" exceeds range of matrix ", &v13);
    sub_1001F3080(v3, &v14);
    sub_10016A2C4((uint64_t)v9, (uint64_t)&v11, 4);
    if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v14.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_13;
        }
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete(v13.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_14;
      }
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v12.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v10 & 0x80000000) == 0) {
        goto LABEL_15;
      }
LABEL_20:
      operator delete(v9[0]);
LABEL_15:
      sub_10014B3FC((uint64_t)&__p);
    }
LABEL_19:
    operator delete(v11.__r_.__value_.__l.__data_);
    if ((v10 & 0x80000000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_20;
  }
  if (*(_DWORD *)a1 == 1) {
    return INFINITY;
  }
  if (!v7)
  {
    unint64_t v7 = *v3;
    if (!v7) {
      return 0.0;
    }
  }
  unint64_t v5 = 0;
  double v4 = 0.0;
  do
  {
    double v4 = v4 + *(double *)(*(void *)(a1 + 16) + 8 * sub_1003012AC(a1, v5, v5));
    ++v5;
  }
  while (v5 < v7);
  return v4;
}

void sub_10030165C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003016CC(uint64_t a1)
{
  sub_10000C898((uint64_t)v8);
  if (*(void *)(a1 + 8))
  {
    unint64_t v2 = 0;
    uint64_t v3 = 1;
    do
    {
      sub_10002986C(&v9, (uint64_t)"[", 1);
      unint64_t v4 = 0;
      do
      {
        sub_10002986C(&v9, (uint64_t)" ", 1);
        uint64_t v5 = v9;
        *(void *)((char *)&v10[1] + *(void *)(v9 - 24)) = 16;
        *(_DWORD *)((char *)v10 + *(void *)(v5 - 24)) = *(_DWORD *)((unsigned char *)v10 + *(void *)(v5 - 24)) & 0xFFFFFEFB | 0x100;
        sub_1003012AC(a1, v2, v4);
        std::ostream::operator<<();
        sub_10002986C(&v9, (uint64_t)" ", 1);
        ++v4;
      }
      while (v3 != v4);
      sub_10002986C(&v9, (uint64_t)"]\n", 2);
      ++v2;
      ++v3;
    }
    while (v2 < *(void *)(a1 + 8));
  }
  std::stringbuf::str();
  *(void *)((char *)v8
  uint64_t v9 = v6;
  if (v11 < 0) {
    operator delete((void *)v10[8]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return std::ios::~ios();
}

void sub_100301954(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000DEA14((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100301968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000DEA14((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10030197C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000DEA14((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100301990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000DEA14((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_1003019A4(uint64_t *a1, uint64_t a2)
{
  sub_10002986C(a1, (uint64_t)"SymmetricMatrix64F(fDim:", 24);
  unint64_t v4 = (void *)std::ostream::operator<<();
  uint64_t v5 = sub_10002986C(v4, (uint64_t)", fSentinel:", 12);
  if (*(_DWORD *)a2 == 1)
  {
    uint64_t v6 = 16;
    char v17 = 16;
    strcpy(__p, "InfiniteVariance");
  }
  else
  {
    if (*(_DWORD *)a2)
    {
      __cxa_allocate_exception(0x40uLL);
      sub_1000AE4B0(&v19, "Unrecognized SentinelMatrix value to do toString on");
      std::runtime_error::runtime_error(&v20, &v19);
      v20.__vftable = (std::runtime_error_vtbl *)&off_100453860;
      sub_10018E868((uint64_t)v18);
      sub_1000D1698(&v20, (uint64_t)"std::string toString(SentinelMatrix)", (uint64_t)"../../../common/util/to_string.h", 54, (uint64_t)v18);
    }
    uint64_t v6 = 7;
    char v17 = 7;
    strcpy(__p, "Default");
  }
  unint64_t v7 = sub_10002986C(v5, (uint64_t)__p, v6);
  sub_10002986C(v7, (uint64_t)", fAp:[", 7);
  if (v17 < 0) {
    operator delete(*(void **)__p);
  }
  if (*(void *)(a2 + 8))
  {
    unint64_t v8 = 0;
    uint64_t v9 = a1 + 2;
    char v10 = a1 + 1;
    uint64_t v11 = 1;
    do
    {
      if (v8) {
        sub_10002986C(a1, (uint64_t)" ", 1);
      }
      sub_10002986C(a1, (uint64_t)"[", 1);
      uint64_t v12 = *a1;
      *(void *)((char *)v9 + *(void *)(*a1 - 24)) = 16;
      *(_DWORD *)((char *)v10 + *(void *)(v12 - 24)) = *(_DWORD *)((unsigned char *)v10 + *(void *)(v12 - 24)) & 0xFFFFFEFB | 0x100;
      sub_1003012AC(a2, v8, 0);
      std::ostream::operator<<();
      if (v11 != 1)
      {
        unint64_t v13 = 0;
        do
        {
          ++v13;
          sub_10002986C(a1, (uint64_t)",", 1);
          uint64_t v14 = *a1;
          *(void *)((char *)v9 + *(void *)(*a1 - 24)) = 16;
          *(_DWORD *)((char *)v10 + *(void *)(v14 - 24)) = *(_DWORD *)((unsigned char *)v10 + *(void *)(v14 - 24)) & 0xFFFFFEFB | 0x100;
          sub_1003012AC(a2, v8, v13);
          std::ostream::operator<<();
        }
        while (v8 != v13);
      }
      sub_10002986C(a1, (uint64_t)"]", 1);
      ++v8;
      ++v11;
    }
    while (v8 < *(void *)(a2 + 8));
  }
  return sub_10002986C(a1, (uint64_t)"])", 2);
}

void sub_100301CDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,std::runtime_error a25)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a25);
  if (a24 < 0)
  {
    operator delete(a19);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_100301D68(uint64_t a1)
{
  sub_100301EE4(a1, v1);
  if (v1[0]) {
    operator new();
  }
  operator new();
}

void sub_100301E8C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10029A25C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100301EA0()
{
}

void sub_100301ECC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10029A25C((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100301EE4(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  if (*(_DWORD *)a1)
  {
    sub_1000AE4B0(&v15, "");
    sub_10016620C("Only normal SymmetricMatrix64F objects can be decomposed.", &__p);
    sub_10016A2C4((uint64_t)&v15, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
    sub_1000D11E0((uint64_t)v8);
  }
  uint64_t v4 = *(void *)(a1 + 8);
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)off_10045FF70;
  __p.__r_.__value_.__l.__size_ = (std::string::size_type)"L";
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  __p.__r_.__value_.__r.__words[2] = 0;
  int v13 = 0;
  uint64_t v14 = v4;
  __CLPK_integer __n = sub_1001E2360((uint64_t)&__p);
  if (&__p.__r_.__value_.__r.__words[2] != (std::string::size_type *)(a1 + 16)) {
    sub_10007C388(&__p.__r_.__value_.__r.__words[2], *(char **)(a1 + 16), *(char **)(a1 + 24), (uint64_t)(*(void *)(a1 + 24) - *(void *)(a1 + 16)) >> 3);
  }
  dpptrf_("L", &__n, (__CLPK_doublereal *)__p.__r_.__value_.__r.__words[2], &v13);
  if (v13 < 0)
  {
    sub_1000AE4B0(v8, "");
    sub_1002768DC("Cannot LL factorize matrix. info = ", &v15);
    sub_1002A3880(&v13, &v16);
    sub_10016A2C4((uint64_t)v8, (uint64_t)&v15, 2);
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v16.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_16:
        if ((v9 & 0x80000000) == 0) {
          goto LABEL_17;
        }
LABEL_22:
        operator delete(v8[0]);
LABEL_17:
        sub_1000D11E0((uint64_t)&v7);
      }
    }
    else if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_16;
    }
    operator delete(v15.__r_.__value_.__l.__data_);
    if ((v9 & 0x80000000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_22;
  }
  if (v13 > 0)
  {
    *a2 = 0;
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)off_10045FF70;
    uint64_t v5 = (void *)__p.__r_.__value_.__r.__words[2];
    if (!__p.__r_.__value_.__r.__words[2]) {
      return;
    }
    goto LABEL_7;
  }
  *a2 = 0;
  sub_1001E227C((uint64_t)(a2 + 8), (uint64_t)&__p);
  *a2 = 1;
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)off_10045FF70;
  uint64_t v5 = (void *)__p.__r_.__value_.__r.__words[2];
  if (__p.__r_.__value_.__r.__words[2])
  {
LABEL_7:
    uint64_t v11 = v5;
    operator delete(v5);
  }
}

void sub_100302154(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (!a25) {
    _Unwind_Resume(exception_object);
  }
  operator delete(a25);
  _Unwind_Resume(exception_object);
}

void sub_100302204(uint64_t a1, uint64_t a2, double a3)
{
  int v5 = *(_DWORD *)(a1 + 8);
  uint64_t v6 = *(const double **)nullsub_22(a2);
  unint64_t v7 = *(double **)(a1 + 16);

  cblas_dspr(CblasColMajor, CblasLower, v5, a3, v6, 1, v7);
}

void sub_100302268(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  uint64_t v5 = v3 - v4;
  if (v3 != v4)
  {
    if ((unint64_t)v5 >= 0x7FFFFFFFFFFFFFF9) {
      sub_1000A9108();
    }
    uint64_t v6 = (char *)operator new(2 * v5);
    *a2 = v6;
    a2[2] = &v6[16 * (v5 >> 3)];
    bzero(v6, 2 * v5);
    a2[1] = &v6[2 * v5];
  }
}

void sub_1003022F0(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

double sub_10030230C(unint64_t *a1, uint64_t a2, double result)
{
  double v30 = result;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 24);
  unint64_t v5 = (v3 - v4) >> 3;
  if (v5 != (uint64_t)(a1[1] - *a1) >> 4)
  {
    sub_1000AE4B0(__p, "");
    sub_10016A2C4((uint64_t)__p, 0, 0);
    if (v33 < 0) {
      operator delete(__p[0]);
    }
    sub_10014B3FC((uint64_t)&v31);
  }
  if (v3 != v4)
  {
    unint64_t v6 = *a1;
    unint64_t v7 = (uint64_t)(a1[1] - *a1) >> 4;
    unint64_t v8 = *(void *)(a2 + 16);
    if (v5 <= 1) {
      uint64_t v9 = 1;
    }
    else {
      uint64_t v9 = (v3 - v4) >> 3;
    }
    unint64_t v10 = v9 - 1;
    if (v7 < v9 - 1) {
      unint64_t v10 = (uint64_t)(a1[1] - *a1) >> 4;
    }
    if (v10 > 0xD
      && (v6 + 16 * v10 >= v6 ? (BOOL v11 = v6 + 8 + 16 * v10 >= v6 + 8) : (BOOL v11 = 0),
          v11 ? (BOOL v12 = v10 >> 60 == 0) : (BOOL v12 = 0),
          v12 && (v6 < v8 + 8 * v10 + 8 ? (BOOL v13 = v8 >= 16 * v10 + v6 + 16) : (BOOL v13 = 1), v13)))
    {
      unint64_t v14 = v10 + 1;
      uint64_t v15 = v14 & 1;
      if ((v14 & 1) == 0) {
        uint64_t v15 = 2;
      }
      unint64_t v16 = v14 - v15;
      unint64_t v17 = v16;
      int v18 = (double *)*a1;
      std::string v19 = *(float64x2_t **)(a2 + 16);
      do
      {
        float64x2_t v20 = *v19++;
        float64x2x2_t v34 = vld2q_f64(v18);
        float64x2_t v21 = vsubq_f64(vmulq_n_f64(v20, v30), v34.val[1]);
        v35.val[0] = vaddq_f64(v34.val[0], v21);
        v35.val[1] = vsubq_f64(vsubq_f64(v35.val[0], v34.val[0]), v21);
        vst2q_f64(v18, v35);
        v18 += 4;
        v17 -= 2;
      }
      while (v17);
    }
    else
    {
      unint64_t v16 = 0;
    }
    unint64_t v22 = v7 - v16;
    unint64_t v23 = v9 - v16;
    char v24 = (double *)(v8 + 8 * v16);
    uint64_t v25 = (double *)(v6 + 16 * v16 + 8);
    do
    {
      if (!v22) {
        sub_1001F352C();
      }
      double v26 = *v24++;
      double v27 = v26 * v30 - *v25;
      double v28 = *(v25 - 1);
      double v29 = v28 + v27;
      long double result = v28 + v27 - v28 - v27;
      *(v25 - 1) = v29;
      *uint64_t v25 = result;
      --v22;
      v25 += 2;
      --v23;
    }
    while (v23);
  }
  return result;
}

void sub_1003024D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_1003024F4()
{
  return INFINITY;
}

void sub_100302504()
{
}

uint64_t sub_100302518()
{
  return 1;
}

uint64_t sub_100302520(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

double sub_100302528()
{
  return INFINITY;
}

void sub_100302534()
{
  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003FAEA0;
  strcpy(v1.__r_.__value_.__l.__data_, "Cannot multiply a degenerate decomposition");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_100453860;
  sub_10018E868((uint64_t)v0);
  sub_1000D1698(&v2, (uint64_t)"virtual DenseMatrix64F DegenerateDecompositionLl64F::mult(const DenseMatrix64F &) const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/math/matrix/symmetric_matrix.h", 365, (uint64_t)v0);
}

void sub_100302608(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void sub_100302670(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x100302660);
}

void sub_100302694(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::string *sub_1003026A8@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1003026DC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_1003026F8@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10030272C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100302748()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1003027C0()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_100302838@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (*(unsigned char *)(result + 16) || *(void *)(result + 224) && *(void *)(result + 384) != *(void *)(result + 376))
  {
    sub_1003029B0(result + 8, (uint64_t)v16);
    sub_1002FF310((uint64_t)v16, (uint64_t)v14);
    sub_100016B48((uint64_t)v10);
    uint64_t v3 = v15;
    if (!v15) {
      uint64_t v3 = *(void *)(qword_10047EB60 + 16);
    }
    uint64_t v4 = *(void *)(v3 + 40);
    v13 |= 8u;
    uint64_t v12 = v4;
    uint64_t v5 = *(void *)(v3 + 16);
    v13 |= 1u;
    uint64_t v11 = v5;
    sub_1000A064C((uint64_t)v7, 1, (uint64_t)v10, (uint64_t)v14);
    sub_10030B598((uint64_t)v7, a2);
    sub_1000428B0((uint64_t)&v9);
    sub_100042F7C(v8);
    sub_1000428B0((uint64_t)v10);
    sub_100042F7C(v14);
    return sub_1000A45A0((uint64_t)v16);
  }
  else
  {
    uint64_t v6 = qword_100492A88;
    *a2 = qword_100492A80;
    a2[1] = v6;
    if (v6) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
    }
  }
  return result;
}

void sub_100302960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  sub_1000428B0(v46 + 176);
  sub_100042F7C((void *)(v46 + 16));
  sub_1000428B0((uint64_t)&a39);
  sub_100042F7C(&a46);
  sub_1000A45A0(v47 - 232);
  _Unwind_Resume(a1);
}

void sub_10030299C(_Unwind_Exception *a1)
{
  sub_1000A45A0(v1 - 232);
  _Unwind_Resume(a1);
}

uint64_t sub_1003029B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = off_10045DB78;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = off_10045DAB8;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) &= 0xFCu;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_OWORD *)(a2 + 112) = 0u;
  *(_OWORD *)(a2 + 128) = 0u;
  *(_OWORD *)(a2 + 144) = 0u;
  *(_OWORD *)(a2 + 160) = 0u;
  *(void *)(a2 + 176) = off_10045DB58;
  *(_DWORD *)(a2 + 184) = 0;
  *(unsigned char *)(a2 + 188) &= ~1u;
  char v4 = *(unsigned char *)(a2 + 194);
  *(_WORD *)(a2 + 192) = 0;
  *(unsigned char *)(a2 + 194) = v4 & 0xFC;
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t result = sub_1001AB5FC(a2, a1 + 16);
    if (*(unsigned char *)(a1 + 8))
    {
      uint64_t result = sub_1000A45A0(a1 + 16);
      *(unsigned char *)(a1 + 8) = 0;
    }
  }
  else
  {
    uint64_t result = sub_1001AAC6C(a2, *(uint64_t **)(a1 + 232));
    *(void *)(a1 + 376) += result;
  }
  return result;
}

void sub_100302AD0(_Unwind_Exception *a1)
{
  sub_1000A45A0(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100302AE4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (*(unsigned char *)(result + 16) || *(void *)(result + 224) && *(void *)(result + 384) != *(void *)(result + 376))
  {
    sub_1003029B0(result + 8, (uint64_t)v7);
    sub_1002FF17C((uint64_t)v7, (uint64_t)v6);
    sub_100041D24();
    uint64_t v3 = operator new(0x108uLL);
    v3[1] = 0;
    v3[2] = 0;
    void *v3 = off_100454870;
    sub_1000417D0(v3 + 4, v5);
    *((_DWORD *)v3 + 6) = 9;
    *a2 = v3 + 3;
    a2[1] = v3;
    sub_100041664((uint64_t)v5);
    sub_100041664((uint64_t)v6);
    return sub_1000A45A0((uint64_t)v7);
  }
  else
  {
    uint64_t v4 = qword_100492A88;
    *a2 = qword_100492A80;
    a2[1] = v4;
    if (v4) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
    }
  }
  return result;
}

void sub_100302BE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  std::__shared_weak_count::~__shared_weak_count(v28);
  operator delete(v31);
  sub_100041664((uint64_t)&a10);
  sub_100041664((uint64_t)&a28);
  sub_1000A45A0(v29 - 232);
  _Unwind_Resume(a1);
}

void sub_100302C1C(_Unwind_Exception *a1)
{
  sub_1000A45A0(v1 - 232);
  _Unwind_Resume(a1);
}

void sub_100302C30(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(uint64_t **)(a1 + 280);
  if (!v3)
  {
    sub_1000AE4B0(v5, "");
    sub_10030B664("expected SensorLog to be valid, since that's what we created initially", &__p);
    sub_10016A2C4((uint64_t)v5, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v6 < 0) {
      operator delete(v5[0]);
    }
    sub_1000D11E0((uint64_t)&v4);
  }
  sub_1001F1790(v3, *(uint64_t **)(a1 + 128), (void *)(a1 + 272), a2);
}

void sub_100302D14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100302D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  std::istream::read();
  *(void *)(a1 + 272) += 24;
  *(void *)a2 = off_10045D918;
  *(void *)(a2 + 80) = 0;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_DWORD *)(a2 + 40) = 0;
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 48) = 0;
  *(_DWORD *)(a2 + 72) = 0;
  *(_WORD *)(a2 + 88) &= 0xFC00u;
  sub_1001A7008(a2, bswap64(v5));
  sub_100076484(a2, COERCE_FLOAT(bswap32(v6)));
  sub_10007647C(a2, COERCE_FLOAT(bswap32(v7)));
  return sub_100076F14(a2, COERCE_FLOAT(bswap32(v8)));
}

void sub_100302E40(_Unwind_Exception *a1)
{
  nullsub_9(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100302E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = off_100465BA0;
  uint64_t v6 = a1 + 8;
  *(void *)(a1 + 8) = off_100465CF0;
  *(unsigned char *)(a1 + 16) = 0;
  if (*(unsigned char *)(a2 + 8))
  {
    sub_1001AF424(a1 + 24, a2 + 16);
    *(unsigned char *)(a1 + 16) = 1;
  }
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 176);
  *(void *)(a2 + 176) = 0;
  *(void *)(a2 + 184) = 0;
  uint64_t v7 = *(void *)(a2 + 192);
  *(void *)(a2 + 192) = 0;
  *(void *)(a1 + 200) = v7;
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 200);
  long long v8 = *(_OWORD *)(a2 + 216);
  long long v9 = *(_OWORD *)(a2 + 232);
  long long v10 = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 272) = v10;
  *(_OWORD *)(a1 + 224) = v8;
  *(_OWORD *)(a1 + 240) = v9;
  long long v11 = *(_OWORD *)(a2 + 280);
  long long v12 = *(_OWORD *)(a2 + 296);
  long long v13 = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 336) = v13;
  *(_OWORD *)(a1 + 288) = v11;
  *(_OWORD *)(a1 + 304) = v12;
  *(unsigned char *)(a1 + 352) = 0;
  if (*(unsigned char *)(a1 + 16) || *(void *)(a1 + 184) && *(void *)(a1 + 344) != *(void *)(a1 + 336))
  {
    sub_100302FE4(v6, (uint64_t)v19);
    sub_100315F78((uint64_t)v17, a3, v20);
    int v14 = *(unsigned __int8 *)(a1 + 352);
    *(void *)(a1 + 392) = v18;
    long long v15 = v17[1];
    *(_OWORD *)(a1 + 360) = v17[0];
    *(_OWORD *)(a1 + 376) = v15;
    if (!v14) {
      *(unsigned char *)(a1 + 352) = 1;
    }
    sub_1001AE958((uint64_t)v19);
  }
  return a1;
}

void sub_100302FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_1001AE958((uint64_t)va);
  if (*(unsigned char *)(v7 + 352)) {
    *(unsigned char *)(v7 + 352) = 0;
  }
  sub_100303100(v8);
  _Unwind_Resume(a1);
}

uint64_t sub_100302FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = off_10045DC28;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 16) = a2 + 24;
  *(_DWORD *)(a2 + 140) = 0;
  *(void *)(a2 + 40) = off_10045DC08;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 54) = 0;
  *(void *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 64) = 0;
  *(_WORD *)(a2 + 88) = 0;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  *(void *)(a2 + 96) = 0;
  *(unsigned char *)(a2 + 120) = 0;
  *(void *)(a2 + 128) = 0;
  *(_DWORD *)(a2 + 135) = 0;
  *(unsigned char *)(a2 + 144) &= 0x80u;
  *(unsigned char *)(a2 + 152) &= 0xF8u;
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v4 = a1 + 16;
    uint64_t v5 = a2;
    return sub_1001AF428(v5, v4);
  }
  *(void *)(a1 + 336) += sub_1001AEA90(a2, *(uint64_t **)(a1 + 192));
  uint64_t v5 = a1 + 16;
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v4 = a2;
    return sub_1001AF428(v5, v4);
  }
  uint64_t result = sub_1001AF424(v5, a2);
  *(unsigned char *)(a1 + 8) = 1;
  return result;
}

void sub_1003030EC(_Unwind_Exception *a1)
{
  sub_1001AE958(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100303100(uint64_t a1)
{
  *(void *)a1 = off_100465CF0;
  uint64_t v2 = *(void *)(a1 + 192);
  *(void *)(a1 + 192) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 184);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 8)) {
      return a1;
    }
    goto LABEL_6;
  }
  if (*(unsigned char *)(a1 + 8))
  {
LABEL_6:
    sub_1001AE958(a1 + 16);
    *(unsigned char *)(a1 + 8) = 0;
  }
  return a1;
}

void sub_1003031D8(uint64_t a1, void *a2, long long *a3, uint64_t a4, __int16 a5)
{
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  uint64_t v8 = qword_100492A80;
  uint64_t v9 = qword_100492A88;
  *(void *)(a1 + 144) = qword_100492A80;
  *(void *)(a1 + 152) = v9;
  if (v9)
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
    uint64_t v10 = qword_100492A88;
    *(void *)(a1 + 160) = v8;
    *(void *)(a1 + 168) = v10;
    if (v10)
    {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v10 + 8), 1uLL, memory_order_relaxed);
      uint64_t v11 = qword_100492A88;
      *(void *)(a1 + 176) = v8;
      *(void *)(a1 + 184) = v11;
      if (v11)
      {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v11 + 8), 1uLL, memory_order_relaxed);
        uint64_t v12 = qword_100492A88;
        *(void *)(a1 + 192) = v8;
        *(void *)(a1 + 200) = v12;
        if (v12)
        {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v12 + 8), 1uLL, memory_order_relaxed);
          uint64_t v13 = qword_100492A88;
          *(void *)(a1 + 208) = v8;
          *(void *)(a1 + 216) = v13;
          if (v13)
          {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(v13 + 8), 1uLL, memory_order_relaxed);
            uint64_t v14 = qword_100492A88;
            *(void *)(a1 + 224) = v8;
            *(void *)(a1 + 232) = v14;
            if (v14)
            {
              atomic_fetch_add_explicit((atomic_ullong *volatile)(v14 + 8), 1uLL, memory_order_relaxed);
              uint64_t v15 = qword_100492A88;
              *(void *)(a1 + 240) = v8;
              *(void *)(a1 + 248) = v15;
              if (v15)
              {
                atomic_fetch_add_explicit((atomic_ullong *volatile)(v15 + 8), 1uLL, memory_order_relaxed);
                uint64_t v16 = qword_100492A88;
                *(void *)(a1 + 256) = v8;
                *(void *)(a1 + 264) = v16;
                if (v16)
                {
                  atomic_fetch_add_explicit((atomic_ullong *volatile)(v16 + 8), 1uLL, memory_order_relaxed);
                  uint64_t v17 = qword_100492A88;
                  *(void *)(a1 + 272) = v8;
                  *(void *)(a1 + 280) = v17;
                  if (v17)
                  {
                    atomic_fetch_add_explicit((atomic_ullong *volatile)(v17 + 8), 1uLL, memory_order_relaxed);
                    uint64_t v18 = qword_100492A88;
                    *(void *)(a1 + 288) = v8;
                    *(void *)(a1 + 296) = v18;
                    if (v18)
                    {
                      atomic_fetch_add_explicit((atomic_ullong *volatile)(v18 + 8), 1uLL, memory_order_relaxed);
                      uint64_t v19 = qword_100492A88;
                      *(void *)(a1 + 304) = v8;
                      *(void *)(a1 + 312) = v19;
                      if (v19)
                      {
                        atomic_fetch_add_explicit((atomic_ullong *volatile)(v19 + 8), 1uLL, memory_order_relaxed);
                        uint64_t v20 = qword_100492A88;
                        *(void *)(a1 + 320) = v8;
                        *(void *)(a1 + 328) = v20;
                        if (v20)
                        {
                          atomic_fetch_add_explicit((atomic_ullong *volatile)(v20 + 8), 1uLL, memory_order_relaxed);
                          uint64_t v21 = qword_100492A88;
                          *(void *)(a1 + 336) = v8;
                          *(void *)(a1 + 344) = v21;
                          if (v21)
                          {
                            atomic_fetch_add_explicit((atomic_ullong *volatile)(v21 + 8), 1uLL, memory_order_relaxed);
                            uint64_t v22 = qword_100492A88;
                            *(void *)(a1 + 352) = v8;
                            *(void *)(a1 + 360) = v22;
                            if (v22)
                            {
                              atomic_fetch_add_explicit((atomic_ullong *volatile)(v22 + 8), 1uLL, memory_order_relaxed);
                              uint64_t v23 = qword_100492A88;
                              *(void *)(a1 + 368) = v8;
                              *(void *)(a1 + 376) = v23;
                              if (v23)
                              {
                                atomic_fetch_add_explicit((atomic_ullong *volatile)(v23 + 8), 1uLL, memory_order_relaxed);
                                uint64_t v24 = qword_100492A88;
                                *(void *)(a1 + 384) = v8;
                                *(void *)(a1 + 392) = v24;
                                if (v24)
                                {
                                  atomic_fetch_add_explicit((atomic_ullong *volatile)(v24 + 8), 1uLL, memory_order_relaxed);
                                  uint64_t v25 = qword_100492A88;
                                  *(void *)(a1 + 400) = v8;
                                  *(void *)(a1 + 408) = v25;
                                  if (v25)
                                  {
                                    atomic_fetch_add_explicit((atomic_ullong *volatile)(v25 + 8), 1uLL, memory_order_relaxed);
                                    uint64_t v26 = qword_100492A88;
                                    *(void *)(a1 + 416) = v8;
                                    *(void *)(a1 + 424) = v26;
                                    if (v26) {
                                      atomic_fetch_add_explicit((atomic_ullong *volatile)(v26 + 8), 1uLL, memory_order_relaxed);
                                    }
LABEL_37:
                                    double v27 = (_OWORD *)(a1 + 440);
                                    if (*((char *)a3 + 23) < 0)
                                    {
                                      sub_1000559FC((unsigned char *)(a1 + 440), *(void **)a3, *((void *)a3 + 1));
                                    }
                                    else
                                    {
                                      long long v28 = *a3;
                                      *(void *)(a1 + 456) = *((void *)a3 + 2);
                                      _OWORD *v27 = v28;
                                    }
                                    *(void *)(a1 + 464) = 0;
                                    if (*a2 != a2[1])
                                    {
                                      if (qword_10047BF08 == -1)
                                      {
                                        uint64_t v29 = qword_10047BF10;
                                        if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO)) {
                                          goto LABEL_44;
                                        }
                                      }
                                      else
                                      {
                                        dispatch_once(&qword_10047BF08, &stru_100465D38);
                                        uint64_t v29 = qword_10047BF10;
                                        if (!os_log_type_enabled((os_log_t)qword_10047BF10, OS_LOG_TYPE_INFO))
                                        {
LABEL_44:
                                          sub_10030A2C0(buf, a2);
                                          operator new();
                                        }
                                      }
                                      *(_WORD *)buf = 0;
                                      _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_INFO, "You are loading userpoints into your localizer.", buf, 2u);
                                      goto LABEL_44;
                                    }
                                    *(void *)buf = sub_100163808();
                                    *(void *)&long long __p = v30;
                                    if (!sub_100059C20((uint64_t)buf, (unsigned char *)&__p + 1))
                                    {
                                      *(void *)buf = sub_1001637F8();
                                      *(void *)&long long __p = v32;
                                      if (sub_100059C20((uint64_t)buf, (unsigned char *)&__p + 1))
                                      {
                                        HIBYTE(v38[2]) = 16;
                                        strcpy((char *)v38, "beacon.thriftbin");
                                        if (*(char *)(a1 + 463) < 0)
                                        {
                                          sub_1000559FC(&__dst, *(void **)(a1 + 440), *(void *)(a1 + 448));
                                        }
                                        else
                                        {
                                          *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = *v27;
                                          __dst.__r_.__value_.__r.__words[2] = *(void *)(a1 + 456);
                                        }
                                        sub_1000512AC(&__dst, (uint64_t)v38);
                                        sub_10030B03C((uint64_t)&__src, (const char *)&__dst, (a5 & 4) != 0);
                                        char v33 = v53;
                                        int64_t v36 = v53;
                                        long long v65 = v58;
                                        long long v66 = v59;
                                        long long v67 = v60;
                                        long long v68 = v61;
                                        v62[0] = v54;
                                        v62[1] = v55;
                                        long long v63 = v56;
                                        long long v64 = v57;
                                        if (__src)
                                        {
                                          if (v53)
                                          {
                                            atomic_fetch_add_explicit(&v53->__shared_owners_, 1uLL, memory_order_relaxed);
                                            atomic_fetch_add_explicit(&v33->__shared_owners_, 1uLL, memory_order_relaxed);
                                          }
                                          sub_100371450();
                                        }
                                        memset(v51, 0, sizeof(v51));
                                        long long v50 = 0u;
                                        long long v49 = 0u;
                                        long long v48 = 0u;
                                        long long v47 = 0u;
                                        long long v46 = 0u;
                                        long long v45 = 0u;
                                        long long v44 = 0u;
                                        long long v43 = 0u;
                                        long long v42 = 0u;
                                        long long __p = 0u;
                                        *(void *)buf = off_100465DB8;
                                        if (v53 && !atomic_fetch_add(&v53->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                                        {
                                          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
                                          std::__shared_weak_count::__release_weak(v36);
                                        }
                                        operator new();
                                      }
                                      HIBYTE(v38[2]) = 18;
                                      strcpy((char *)v38, "altitude.thriftbin");
                                      if (*(char *)(a1 + 463) < 0)
                                      {
                                        sub_1000559FC(&__dst, *(void **)(a1 + 440), *(void *)(a1 + 448));
                                      }
                                      else
                                      {
                                        *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = *v27;
                                        __dst.__r_.__value_.__r.__words[2] = *(void *)(a1 + 456);
                                      }
                                      sub_1000512AC(&__dst, (uint64_t)v38);
                                      sub_10030B03C((uint64_t)&__src, (const char *)&__dst, (a5 & 0x400) != 0);
                                      float64x2x2_t v34 = v53;
                                      v37 = v53;
                                      long long v65 = v58;
                                      long long v66 = v59;
                                      long long v67 = v60;
                                      long long v68 = v61;
                                      v62[0] = v54;
                                      v62[1] = v55;
                                      long long v63 = v56;
                                      long long v64 = v57;
                                      if (__src)
                                      {
                                        if (v53)
                                        {
                                          atomic_fetch_add_explicit(&v53->__shared_owners_, 1uLL, memory_order_relaxed);
                                          atomic_fetch_add_explicit(&v34->__shared_owners_, 1uLL, memory_order_relaxed);
                                        }
                                        sub_100371450();
                                      }
                                      long long v44 = 0u;
                                      long long v43 = 0u;
                                      long long v42 = 0u;
                                      long long __p = 0u;
                                      long long v45 = 0u;
                                      long long v46 = 0u;
                                      long long v47 = 0u;
                                      long long v48 = 0u;
                                      long long v49 = 0u;
                                      long long v50 = 0u;
                                      memset(v51, 0, 72);
                                      *(void *)buf = off_100465DF0;
                                      if (v53 && !atomic_fetch_add(&v53->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                                      {
                                        ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
                                        std::__shared_weak_count::__release_weak(v37);
                                      }
                                      operator new();
                                    }
                                    HIBYTE(v38[2]) = 14;
                                    strcpy((char *)v38, "wifi.thriftbin");
                                    if (*(char *)(a1 + 463) < 0)
                                    {
                                      sub_1000559FC(&__dst, *(void **)(a1 + 440), *(void *)(a1 + 448));
                                    }
                                    else
                                    {
                                      *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = *v27;
                                      __dst.__r_.__value_.__r.__words[2] = *(void *)(a1 + 456);
                                    }
                                    sub_1000512AC(&__dst, (uint64_t)v38);
                                    sub_10030B03C((uint64_t)&__src, (const char *)&__dst, a5 & 1);
                                    unint64_t v31 = v53;
                                    float64x2x2_t v35 = v53;
                                    long long v65 = v58;
                                    long long v66 = v59;
                                    long long v67 = v60;
                                    long long v68 = v61;
                                    v62[0] = v54;
                                    v62[1] = v55;
                                    long long v63 = v56;
                                    long long v64 = v57;
                                    if (__src)
                                    {
                                      if (v53)
                                      {
                                        atomic_fetch_add_explicit(&v53->__shared_owners_, 1uLL, memory_order_relaxed);
                                        atomic_fetch_add_explicit(&v31->__shared_owners_, 1uLL, memory_order_relaxed);
                                      }
                                      sub_100371450();
                                    }
                                    memset(v51, 0, 176);
                                    long long v50 = 0u;
                                    long long v49 = 0u;
                                    long long v48 = 0u;
                                    long long v47 = 0u;
                                    long long v46 = 0u;
                                    long long v45 = 0u;
                                    long long v44 = 0u;
                                    long long v43 = 0u;
                                    long long v42 = 0u;
                                    long long __p = 0u;
                                    *(void *)buf = off_100465CF0;
                                    if (v53 && !atomic_fetch_add(&v53->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
                                    {
                                      ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
                                      std::__shared_weak_count::__release_weak(v35);
                                      if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                      {
LABEL_57:
                                        if ((SHIBYTE(v38[2]) & 0x80000000) == 0) {
                                          goto LABEL_58;
                                        }
LABEL_69:
                                        operator delete(v38[0]);
LABEL_58:
                                        operator new();
                                      }
                                    }
                                    else if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                                    {
                                      goto LABEL_57;
                                    }
                                    operator delete(__dst.__r_.__value_.__l.__data_);
                                    if ((SHIBYTE(v38[2]) & 0x80000000) == 0) {
                                      goto LABEL_58;
                                    }
                                    goto LABEL_69;
                                  }
LABEL_36:
                                  *(void *)(a1 + 416) = v8;
                                  *(void *)(a1 + 424) = 0;
                                  goto LABEL_37;
                                }
LABEL_35:
                                *(void *)(a1 + 400) = v8;
                                *(void *)(a1 + 408) = 0;
                                goto LABEL_36;
                              }
LABEL_34:
                              *(void *)(a1 + 384) = v8;
                              *(void *)(a1 + 392) = 0;
                              goto LABEL_35;
                            }
LABEL_33:
                            *(void *)(a1 + 368) = v8;
                            *(void *)(a1 + 376) = 0;
                            goto LABEL_34;
                          }
LABEL_32:
                          *(void *)(a1 + 352) = v8;
                          *(void *)(a1 + 360) = 0;
                          goto LABEL_33;
                        }
LABEL_31:
                        *(void *)(a1 + 336) = v8;
                        *(void *)(a1 + 344) = 0;
                        goto LABEL_32;
                      }
LABEL_30:
                      *(void *)(a1 + 320) = v8;
                      *(void *)(a1 + 328) = 0;
                      goto LABEL_31;
                    }
LABEL_29:
                    *(void *)(a1 + 304) = v8;
                    *(void *)(a1 + 312) = 0;
                    goto LABEL_30;
                  }
LABEL_28:
                  *(void *)(a1 + 288) = v8;
                  *(void *)(a1 + 296) = 0;
                  goto LABEL_29;
                }
LABEL_27:
                *(void *)(a1 + 272) = v8;
                *(void *)(a1 + 280) = 0;
                goto LABEL_28;
              }
LABEL_26:
              *(void *)(a1 + 256) = v8;
              *(void *)(a1 + 264) = 0;
              goto LABEL_27;
            }
LABEL_25:
            *(void *)(a1 + 240) = v8;
            *(void *)(a1 + 248) = 0;
            goto LABEL_26;
          }
LABEL_24:
          *(void *)(a1 + 224) = v8;
          *(void *)(a1 + 232) = 0;
          goto LABEL_25;
        }
LABEL_23:
        *(void *)(a1 + 208) = v8;
        *(void *)(a1 + 216) = 0;
        goto LABEL_24;
      }
LABEL_22:
      *(void *)(a1 + 192) = v8;
      *(void *)(a1 + 200) = 0;
      goto LABEL_23;
    }
  }
  else
  {
    *(void *)(a1 + 160) = v8;
    *(void *)(a1 + 168) = 0;
  }
  *(void *)(a1 + 176) = v8;
  *(void *)(a1 + 184) = 0;
  goto LABEL_22;
}

void sub_10030657C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  if (*(char *)(v43 - 217) < 0) {
    operator delete(*(void **)(v43 - 240));
  }
  sub_100315854(&a10);
  if (a13) {
    (*(void (**)(uint64_t))(*(void *)a13 + 8))(a13);
  }
  if (a14) {
    (*(void (**)(uint64_t))(*(void *)a14 + 8))(a14);
  }
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (*(char *)(v41 + 463) < 0) {
    operator delete(*v42);
  }
  sub_1000E0C3C(a9);
  sub_1000E1268((uint64_t *)v41);
  _Unwind_Resume(a1);
}

void *sub_100306D28(void *a1)
{
  *a1 = off_100465D68;
  uint64_t v2 = a1[1];
  if (v2)
  {
    uint64_t v3 = a1[2];
    uint64_t v4 = (void *)a1[1];
    if (v3 != v2)
    {
      do
      {
        uint64_t v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      uint64_t v4 = (void *)a1[1];
    }
    a1[2] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_100306DF8(uint64_t a1)
{
  *(void *)a1 = off_100465DB8;
  uint64_t v2 = *(void *)(a1 + 200);
  *(void *)(a1 + 200) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 192);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 8)) {
      return a1;
    }
    goto LABEL_6;
  }
  if (*(unsigned char *)(a1 + 8))
  {
LABEL_6:
    sub_1001AB75C(a1 + 16);
    *(unsigned char *)(a1 + 8) = 0;
  }
  return a1;
}

uint64_t sub_100306ED0(uint64_t a1)
{
  *(void *)a1 = off_100465DF0;
  uint64_t v2 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 80);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 8)) {
      return a1;
    }
    goto LABEL_6;
  }
  if (*(unsigned char *)(a1 + 8))
  {
LABEL_6:
    nullsub_96(a1 + 16);
    *(unsigned char *)(a1 + 8) = 0;
  }
  return a1;
}

void sub_100306FA8(uint64_t a1, const char *a2, char a3)
{
  sub_10030B03C((uint64_t)&v8, a2, a3);
  uint64_t v4 = v8;
  uint64_t v5 = v9;
  uint64_t v7 = v9;
  long long v22 = v14;
  long long v23 = v15;
  long long v24 = v16;
  long long v25 = v17;
  long long v18 = v10;
  long long v19 = v11;
  long long v20 = v12;
  long long v21 = v13;
  if (v8)
  {
    if (v9)
    {
      atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
      uint64_t v8 = v4;
      uint64_t v9 = v5;
      atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    else
    {
      uint64_t v9 = 0;
    }
    sub_100371450();
  }
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 8) = 0u;
  *(void *)a1 = off_100465E28;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(void *)(a1 + 376) = 0;
  *(_OWORD *)(a1 + 216) = 0u;
  uint64_t v6 = (_OWORD *)(a1 + 216);
  v6[3] = 0u;
  v6[4] = 0u;
  v6[5] = 0u;
  v6[6] = 0u;
  v6[7] = 0u;
  v6[8] = 0u;
  v6[9] = 0u;
  if (v7 && !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
}

void sub_100307230(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v6 = va_arg(va2, void);
  uint64_t v8 = va_arg(va2, void);
  sub_1000BA884((uint64_t)va2);
  sub_1000BA884((uint64_t)va);
  sub_1000BA884((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_100307254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1000BA884((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100307268(uint64_t a1)
{
  *(void *)a1 = off_100465E28;
  uint64_t v2 = *(void *)(a1 + 232);
  *(void *)(a1 + 232) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 224);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 8)) {
      return a1;
    }
    goto LABEL_6;
  }
  if (*(unsigned char *)(a1 + 8))
  {
LABEL_6:
    sub_1000A45A0(a1 + 16);
    *(unsigned char *)(a1 + 8) = 0;
  }
  return a1;
}

uint64_t sub_100307340(uint64_t a1)
{
  *(void *)a1 = off_100465E60;
  uint64_t v2 = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 168);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 8)) {
      return a1;
    }
    goto LABEL_6;
  }
  if (*(unsigned char *)(a1 + 8))
  {
LABEL_6:
    sub_100041664(a1 + 16);
    *(unsigned char *)(a1 + 8) = 0;
  }
  return a1;
}

uint64_t sub_100307418(uint64_t a1)
{
  *(void *)a1 = off_100465E98;
  uint64_t v2 = *(void *)(a1 + 192);
  *(void *)(a1 + 192) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 184);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 8)) {
      return a1;
    }
    goto LABEL_6;
  }
  if (*(unsigned char *)(a1 + 8))
  {
LABEL_6:
    sub_1001A3CC4(a1 + 16);
    *(unsigned char *)(a1 + 8) = 0;
  }
  return a1;
}

void sub_1003074F0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_10030AE54(a1, &v6);
  sub_10030AF54(a1, &__p);
  sub_100056B28((const char *)&__p, 0, (int *)&v4);
  if (LODWORD(v4.__r_.__value_.__l.__data_) < 2)
  {
    sub_100056B28((const char *)&v6, 0, (int *)&v4);
    if (LODWORD(v4.__r_.__value_.__l.__data_) < 2)
    {
      *(unsigned char *)a2 = 0;
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
    if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&v4, v6.__r_.__value_.__l.__data_, v6.__r_.__value_.__l.__size_);
    }
    else {
      std::string v4 = v6;
    }
    *(std::string *)(a2 + 8) = v4;
    *(_DWORD *)(a2 + 32) = 1;
    *(unsigned char *)a2 = 1;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
LABEL_11:
    }
      operator delete(__p.__r_.__value_.__l.__data_);
  }
  else
  {
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000559FC(&v4, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    }
    else {
      std::string v4 = __p;
    }
    *(std::string *)(a2 + 8) = v4;
    *(_DWORD *)(a2 + 32) = 0;
    *(unsigned char *)a2 = 1;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_11;
    }
  }
LABEL_12:
  if (SHIBYTE(v6.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v6.__r_.__value_.__l.__data_);
  }
}

void sub_10030763C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0)
  {
    operator delete(__p);
    if ((*(char *)(v18 - 17) & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((*(char *)(v18 - 17) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v18 - 40));
  _Unwind_Resume(exception_object);
}

void sub_100307690(uint64_t a1, const char *a2, char a3, int a4)
{
  sub_10030B03C((uint64_t)v16, a2, a3);
  long long v5 = *(_OWORD *)v16;
  long long v15 = *(_OWORD *)v16;
  uint64_t v6 = *(void *)&v18[1];
  long long v24 = *(_OWORD *)&v16[80];
  long long v25 = *(_OWORD *)&v16[96];
  long long v26 = v17;
  long long v27 = v18[0];
  long long v20 = *(_OWORD *)&v16[16];
  long long v21 = *(_OWORD *)&v16[32];
  long long v22 = *(_OWORD *)&v16[48];
  long long v23 = *(_OWORD *)&v16[64];
  if (*(void *)v16)
  {
    if (a4 != 2)
    {
      if (a4 != 1)
      {
        if (!a4)
        {
          long long v14 = *(_OWORD *)v16;
          if (*(void *)&v16[8])
          {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(*(void *)&v16[8] + 8), 1uLL, memory_order_relaxed);
            *(_OWORD *)&v10.__r_.__value_.__l.__data_ = v5;
            atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v5 + 1) + 8), 1uLL, memory_order_relaxed);
          }
          else
          {
            *(_OWORD *)&v10.__r_.__value_.__l.__data_ = *(unint64_t *)v16;
          }
          sub_100371450();
        }
        __cxa_allocate_exception(0x40uLL);
        std::to_string(&v10, a4);
        uint64_t v7 = std::string::insert(&v10, 0, "Unexpected RawLogFormat, type=");
        long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
        *(void *)&v16[16] = *((void *)&v7->__r_.__value_.__l + 2);
        *(_OWORD *)long long v16 = v8;
        v7->__r_.__value_.__l.__size_ = 0;
        v7->__r_.__value_.__r.__words[2] = 0;
        v7->__r_.__value_.__r.__words[0] = 0;
        std::runtime_error::runtime_error(&v11, (const std::string *)v16);
        v11.__vftable = (std::runtime_error_vtbl *)&off_100453860;
        sub_10018E868((uint64_t)v9);
        sub_1000D1698(&v11, (uint64_t)"std::unique_ptr<input_event_stream_iterator::ThriftFileInputStream<SensorMeasurement>> openInertialFile(const fs::path &, BOOL, RawLogFormat::LogType)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.cpp", 104, (uint64_t)v9);
      }
      if (*(void *)&v16[8]) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(*(void *)&v16[8] + 8), 1uLL, memory_order_relaxed);
      }
      sub_100371450();
    }
    if (*(void *)&v16[8]) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(*(void *)&v16[8] + 8), 1uLL, memory_order_relaxed);
    }
    *(_OWORD *)((char *)&v18[4] + 8) = v24;
    *(_OWORD *)((char *)&v18[5] + 8) = v25;
    *(_OWORD *)((char *)&v18[6] + 8) = v26;
    *(_OWORD *)((char *)&v18[7] + 8) = v27;
    *(_OWORD *)((char *)v18 + 8) = v20;
    *(_OWORD *)((char *)&v18[1] + 8) = v21;
    *(_OWORD *)((char *)&v18[2] + 8) = v22;
    *(_OWORD *)((char *)&v18[3] + 8) = v23;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    v16[8] = 0;
    long long v17 = v5;
    *(void *)&v18[0] = 0;
    *((void *)&v18[8] + 1) = v6;
    uint64_t v19 = 0;
    *(void *)long long v16 = off_100465ED0;
    operator new();
  }
  memset(&v16[8], 0, 104);
  long long v17 = 0u;
  memset(v18, 0, sizeof(v18));
  *(void *)long long v16 = off_100465CC8;
  uint64_t v19 = 0;
  operator new();
}

void sub_100307FB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, std::runtime_error a19, char a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a19);
  if (a34 < 0) {
    operator delete(a29);
  }
  if (a18 < 0) {
    operator delete(a13);
  }
  sub_1000BA884((uint64_t)&a27);
  _Unwind_Resume(a1);
}

uint64_t sub_100308224(uint64_t a1)
{
  *(void *)a1 = off_100465F10;
  uint64_t v2 = *(void *)(a1 + 120);
  *(void *)(a1 + 120) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 112);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 8)) {
      return a1;
    }
    goto LABEL_6;
  }
  if (*(unsigned char *)(a1 + 8))
  {
LABEL_6:
    nullsub_95(a1 + 16);
    *(unsigned char *)(a1 + 8) = 0;
  }
  return a1;
}

uint64_t sub_1003082FC(void *a1)
{
  uint64_t v3 = a1 + 18;
  uint64_t v2 = (_DWORD *)a1[18];
  if (v2)
  {
    std::string v4 = v3;
  }
  else
  {
    std::string v4 = a1 + 20;
    uint64_t v2 = (_DWORD *)a1[20];
    if (!v2)
    {
      std::string v4 = a1 + 22;
      uint64_t v2 = (_DWORD *)a1[22];
      if (!v2)
      {
        std::string v4 = a1 + 24;
        uint64_t v2 = (_DWORD *)a1[24];
        if (!v2)
        {
          std::string v4 = a1 + 26;
          uint64_t v2 = (_DWORD *)a1[26];
          if (!v2)
          {
            std::string v4 = a1 + 28;
            uint64_t v2 = (_DWORD *)a1[28];
            if (!v2)
            {
              std::string v4 = a1 + 30;
              uint64_t v2 = (_DWORD *)a1[30];
              if (!v2)
              {
                uint64_t v2 = (_DWORD *)a1[32];
                if (v2)
                {
                  std::string v4 = a1 + 32;
                }
                else
                {
                  uint64_t v2 = (_DWORD *)a1[34];
                  if (v2)
                  {
                    std::string v4 = a1 + 34;
                  }
                  else
                  {
                    uint64_t v2 = (_DWORD *)a1[36];
                    if (v2)
                    {
                      std::string v4 = a1 + 36;
                    }
                    else
                    {
                      uint64_t v2 = (_DWORD *)a1[38];
                      if (v2)
                      {
                        std::string v4 = a1 + 38;
                      }
                      else
                      {
                        uint64_t v2 = (_DWORD *)a1[40];
                        if (v2)
                        {
                          std::string v4 = a1 + 40;
                        }
                        else
                        {
                          uint64_t v2 = (_DWORD *)a1[42];
                          if (v2)
                          {
                            std::string v4 = a1 + 42;
                          }
                          else
                          {
                            uint64_t v2 = (_DWORD *)a1[44];
                            if (v2)
                            {
                              std::string v4 = a1 + 44;
                            }
                            else
                            {
                              uint64_t v2 = (_DWORD *)a1[46];
                              if (v2)
                              {
                                std::string v4 = a1 + 46;
                              }
                              else
                              {
                                uint64_t v2 = (_DWORD *)a1[48];
                                if (v2)
                                {
                                  std::string v4 = a1 + 48;
                                }
                                else
                                {
                                  uint64_t v2 = (_DWORD *)a1[50];
                                  if (v2)
                                  {
                                    std::string v4 = a1 + 50;
                                  }
                                  else
                                  {
                                    uint64_t v2 = (_DWORD *)a1[52];
                                    if (!v2) {
                                      return 18;
                                    }
                                    std::string v4 = a1 + 52;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  long long v5 = sub_100017318(v2);
  uint64_t v6 = (_DWORD **)(v4 + 2);
  if (v4 + 2 != v3 + 36)
  {
    uint64_t v7 = v5;
    do
    {
      if (*v6)
      {
        long long v8 = sub_100017318(*v6);
        if ((uint64_t)v8 < (uint64_t)v7)
        {
          uint64_t v7 = v8;
          std::string v4 = v6;
        }
      }
      v6 += 2;
    }
    while (v6 != v3 + 36);
  }
  return ((char *)v4 - (char *)v3) >> 4;
}

uint64_t sub_1003084AC(uint64_t *a1)
{
  a1[58] = -1;
  uint64_t v2 = *a1;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 16))(v2);
  }
  uint64_t v3 = a1[1];
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 16))(v3);
  }
  uint64_t v4 = a1[2];
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 16))(v4);
  }
  uint64_t v5 = a1[3];
  if (v5) {
    (*(void (**)(uint64_t))(*(void *)v5 + 16))(v5);
  }
  uint64_t v6 = a1[4];
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 16))(v6);
  }
  uint64_t v7 = a1[5];
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 16))(v7);
  }
  uint64_t v8 = a1[6];
  if (v8) {
    (*(void (**)(uint64_t))(*(void *)v8 + 16))(v8);
  }
  uint64_t v9 = a1[7];
  if (v9) {
    (*(void (**)(uint64_t))(*(void *)v9 + 16))(v9);
  }
  uint64_t v10 = a1[8];
  if (v10) {
    (*(void (**)(uint64_t))(*(void *)v10 + 16))(v10);
  }
  uint64_t v11 = a1[9];
  if (v11) {
    (*(void (**)(uint64_t))(*(void *)v11 + 16))(v11);
  }
  uint64_t v12 = a1[10];
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 16))(v12);
  }
  uint64_t v13 = a1[11];
  if (v13) {
    (*(void (**)(uint64_t))(*(void *)v13 + 16))(v13);
  }
  uint64_t v14 = a1[12];
  if (v14) {
    (*(void (**)(uint64_t))(*(void *)v14 + 16))(v14);
  }
  uint64_t v15 = a1[13];
  if (v15) {
    (*(void (**)(uint64_t))(*(void *)v15 + 16))(v15);
  }
  uint64_t v16 = a1[14];
  if (v16) {
    (*(void (**)(uint64_t))(*(void *)v16 + 16))(v16);
  }
  uint64_t v17 = a1[15];
  if (v17) {
    (*(void (**)(uint64_t))(*(void *)v17 + 16))(v17);
  }
  uint64_t v18 = a1[16];
  if (v18) {
    (*(void (**)(uint64_t))(*(void *)v18 + 16))(v18);
  }
  uint64_t result = a1[17];
  if (result)
  {
    long long v20 = *(uint64_t (**)(void))(*(void *)result + 16);
    return v20();
  }
  return result;
}

uint64_t sub_100308804(uint64_t a1, long long *a2)
{
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  uint64_t v3 = qword_100492A80;
  uint64_t v4 = qword_100492A88;
  *(void *)(a1 + 144) = qword_100492A80;
  *(void *)(a1 + 152) = v4;
  if (!v4)
  {
    *(void *)(a1 + 160) = v3;
    *(void *)(a1 + 168) = 0;
    goto LABEL_21;
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  uint64_t v5 = qword_100492A88;
  *(void *)(a1 + 160) = v3;
  *(void *)(a1 + 168) = v5;
  if (!v5)
  {
LABEL_21:
    *(void *)(a1 + 176) = v3;
    *(void *)(a1 + 184) = 0;
    goto LABEL_22;
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  uint64_t v6 = qword_100492A88;
  *(void *)(a1 + 176) = v3;
  *(void *)(a1 + 184) = v6;
  if (!v6)
  {
LABEL_22:
    *(void *)(a1 + 192) = v3;
    *(void *)(a1 + 200) = 0;
    goto LABEL_23;
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  uint64_t v7 = qword_100492A88;
  *(void *)(a1 + 192) = v3;
  *(void *)(a1 + 200) = v7;
  if (!v7)
  {
LABEL_23:
    *(void *)(a1 + 208) = v3;
    *(void *)(a1 + 216) = 0;
    goto LABEL_24;
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
  uint64_t v8 = qword_100492A88;
  *(void *)(a1 + 208) = v3;
  *(void *)(a1 + 216) = v8;
  if (!v8)
  {
LABEL_24:
    *(void *)(a1 + 224) = v3;
    *(void *)(a1 + 232) = 0;
    goto LABEL_25;
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
  uint64_t v9 = qword_100492A88;
  *(void *)(a1 + 224) = v3;
  *(void *)(a1 + 232) = v9;
  if (!v9)
  {
LABEL_25:
    *(void *)(a1 + 240) = v3;
    *(void *)(a1 + 248) = 0;
    goto LABEL_26;
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
  uint64_t v10 = qword_100492A88;
  *(void *)(a1 + 240) = v3;
  *(void *)(a1 + 248) = v10;
  if (!v10)
  {
LABEL_26:
    *(void *)(a1 + 256) = v3;
    *(void *)(a1 + 264) = 0;
    goto LABEL_27;
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(v10 + 8), 1uLL, memory_order_relaxed);
  uint64_t v11 = qword_100492A88;
  *(void *)(a1 + 256) = v3;
  *(void *)(a1 + 264) = v11;
  if (!v11)
  {
LABEL_27:
    *(void *)(a1 + 272) = v3;
    *(void *)(a1 + 280) = 0;
    goto LABEL_28;
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(v11 + 8), 1uLL, memory_order_relaxed);
  uint64_t v12 = qword_100492A88;
  *(void *)(a1 + 272) = v3;
  *(void *)(a1 + 280) = v12;
  if (!v12)
  {
LABEL_28:
    *(void *)(a1 + 288) = v3;
    *(void *)(a1 + 296) = 0;
    goto LABEL_29;
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(v12 + 8), 1uLL, memory_order_relaxed);
  uint64_t v13 = qword_100492A88;
  *(void *)(a1 + 288) = v3;
  *(void *)(a1 + 296) = v13;
  if (!v13)
  {
LABEL_29:
    *(void *)(a1 + 304) = v3;
    *(void *)(a1 + 312) = 0;
    goto LABEL_30;
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(v13 + 8), 1uLL, memory_order_relaxed);
  uint64_t v14 = qword_100492A88;
  *(void *)(a1 + 304) = v3;
  *(void *)(a1 + 312) = v14;
  if (!v14)
  {
LABEL_30:
    *(void *)(a1 + 320) = v3;
    *(void *)(a1 + 328) = 0;
    goto LABEL_31;
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(v14 + 8), 1uLL, memory_order_relaxed);
  uint64_t v15 = qword_100492A88;
  *(void *)(a1 + 320) = v3;
  *(void *)(a1 + 328) = v15;
  if (!v15)
  {
LABEL_31:
    *(void *)(a1 + 336) = v3;
    *(void *)(a1 + 344) = 0;
    goto LABEL_32;
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(v15 + 8), 1uLL, memory_order_relaxed);
  uint64_t v16 = qword_100492A88;
  *(void *)(a1 + 336) = v3;
  *(void *)(a1 + 344) = v16;
  if (!v16)
  {
LABEL_32:
    *(void *)(a1 + 352) = v3;
    *(void *)(a1 + 360) = 0;
    goto LABEL_33;
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(v16 + 8), 1uLL, memory_order_relaxed);
  uint64_t v17 = qword_100492A88;
  *(void *)(a1 + 352) = v3;
  *(void *)(a1 + 360) = v17;
  if (!v17)
  {
LABEL_33:
    *(void *)(a1 + 368) = v3;
    *(void *)(a1 + 376) = 0;
    goto LABEL_34;
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(v17 + 8), 1uLL, memory_order_relaxed);
  uint64_t v18 = qword_100492A88;
  *(void *)(a1 + 368) = v3;
  *(void *)(a1 + 376) = v18;
  if (!v18)
  {
LABEL_34:
    *(void *)(a1 + 384) = v3;
    *(void *)(a1 + 392) = 0;
    goto LABEL_35;
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(v18 + 8), 1uLL, memory_order_relaxed);
  uint64_t v19 = qword_100492A88;
  *(void *)(a1 + 384) = v3;
  *(void *)(a1 + 392) = v19;
  if (!v19)
  {
LABEL_35:
    *(void *)(a1 + 400) = v3;
    *(void *)(a1 + 408) = 0;
    goto LABEL_36;
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(v19 + 8), 1uLL, memory_order_relaxed);
  uint64_t v20 = qword_100492A88;
  *(void *)(a1 + 400) = v3;
  *(void *)(a1 + 408) = v20;
  if (!v20)
  {
LABEL_36:
    *(void *)(a1 + 416) = v3;
    *(void *)(a1 + 424) = 0;
    goto LABEL_37;
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)(v20 + 8), 1uLL, memory_order_relaxed);
  uint64_t v21 = qword_100492A88;
  *(void *)(a1 + 416) = v3;
  *(void *)(a1 + 424) = v21;
  if (v21) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v21 + 8), 1uLL, memory_order_relaxed);
  }
LABEL_37:
  *(void *)(a1 + 432) = 18;
  long long v22 = (unsigned char *)(a1 + 440);
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000559FC(v22, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v23 = *a2;
    *(void *)(a1 + 456) = *((void *)a2 + 2);
    *(_OWORD *)long long v22 = v23;
  }
  *(void *)(a1 + 464) = -1;
  return a1;
}

void sub_100308A88(_Unwind_Exception *a1)
{
  sub_1000E0C3C(v2);
  sub_1000E1268(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_100308AA8(uint64_t *a1)
{
  uint64_t v2 = a1[54];
  if (v2 == 18)
  {
    sub_1000AE4B0(v16, "");
    sub_1002700A4("Trying to go past the end", &__p);
    sub_10016A2C4((uint64_t)v16, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v17 < 0) {
      operator delete(v16[0]);
    }
    sub_1000D11E0((uint64_t)&v15);
  }
  if ((*(unsigned int (**)(uint64_t))(*(void *)a1[v2] + 24))(a1[v2]))
  {
    (*(void (**)(std::string *__return_ptr))(*(void *)a1[a1[54]] + 32))(&__p);
    uint64_t v3 = a1 + 18;
    uint64_t v4 = (uint64_t)&a1[2 * a1[54] + 18];
    long long v5 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = 0uLL;
    uint64_t v6 = *(std::__shared_weak_count **)(v4 + 8);
    *(_OWORD *)uint64_t v4 = v5;
    if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
    std::string::size_type size = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
    if (__p.__r_.__value_.__l.__size_
      && !atomic_fetch_add((atomic_ullong *volatile)(__p.__r_.__value_.__l.__size_ + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
      if (v3[2 * a1[54]]) {
        goto LABEL_15;
      }
    }
    else if (v3[2 * a1[54]])
    {
      goto LABEL_15;
    }
  }
  uint64_t v8 = a1[a1[54]];
  (*(void (**)(uint64_t))(*(void *)v8 + 16))(v8);
  uint64_t v9 = &a1[2 * a1[54] + 18];
  uint64_t v11 = qword_100492A80;
  uint64_t v10 = qword_100492A88;
  if (qword_100492A88) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(qword_100492A88 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v12 = (std::__shared_weak_count *)v9[1];
  uint64_t *v9 = v11;
  v9[1] = v10;
  if (v12 && !atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
LABEL_15:
  uint64_t v13 = sub_1003082FC(a1);
  a1[54] = v13;
  if (v13 == 18) {
    sub_1003084AC(a1);
  }
  else {
    ++a1[58];
  }
  return a1;
}

void sub_100308D80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100308F74(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 432);
  if (v1 == 18)
  {
    sub_1000AE4B0(v4, "");
    sub_10025356C("Attempting to dereference the end() iterator", &__p);
    sub_10016A2C4((uint64_t)v4, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v5 < 0) {
      operator delete(v4[0]);
    }
    sub_1000D11E0((uint64_t)&v3);
  }
  return a1 + 16 * v1 + 144;
}

void sub_100309064(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a2)
  {
    if (a14 < 0) {
      operator delete(__p);
    }
    sub_1000A6954(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1003090B0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = a1 + 8;
  sub_10030926C(a1 + 8, (uint64_t)v18);
  if (*(unsigned char *)(a1 + 16))
  {
LABEL_4:
    while (1)
    {
      sub_100302FE4(v4, (uint64_t)&v14);
      if ((sub_100315F90(a1 + 360, (uint64_t)&v14) & 1) == 0) {
        break;
      }
      sub_10030926C(v4, (uint64_t)v13);
      sub_1001AE958((uint64_t)v13);
      sub_1001AE958((uint64_t)&v14);
      if (!*(unsigned char *)(a1 + 16)) {
        goto LABEL_2;
      }
    }
    sub_1001AE958((uint64_t)&v14);
  }
  else
  {
LABEL_2:
    if (*(void *)(a1 + 184) && *(void *)(a1 + 344) != *(void *)(a1 + 336)) {
      goto LABEL_4;
    }
  }
  char v5 = v20;
  if (v20 != v21)
  {
    uint64_t v6 = v19;
    do
    {
      v5[10] = v6;
      uint64_t v7 = (void *)v5[1];
      if (v7)
      {
        do
        {
          uint64_t v8 = v7;
          uint64_t v7 = (void *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (unsigned char *)v5[2];
          BOOL v9 = *(void *)v8 == (void)v5;
          char v5 = v8;
        }
        while (!v9);
      }
      char v5 = v8;
    }
    while (v8 != v21);
  }
  uint64_t v10 = (char *)operator new(0x108uLL);
  *((void *)v10 + 1) = 0;
  *((void *)v10 + 2) = 0;
  *(void *)uint64_t v10 = off_100454870;
  sub_10035EC4C((uint64_t)&v14, (uint64_t)v18);
  uint64_t v11 = v17;
  *((void *)v10 + 4) = v14;
  *(_OWORD *)(v10 + 40) = v15;
  *(_OWORD *)(v10 + 56) = v16;
  *((void *)v10 + 9) = v11;
  *((_DWORD *)v10 + 6) = 14;
  *a2 = v10 + 24;
  a2[1] = v10;
  return sub_1001AE958((uint64_t)v18);
}

void sub_100309238(_Unwind_Exception *a1)
{
  sub_1001AE958(v1 - 208);
  _Unwind_Resume(a1);
}

void sub_100309250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  sub_1001AE958((uint64_t)&a29);
  sub_1001AE958(v29 - 208);
  _Unwind_Resume(a1);
}

uint64_t sub_10030926C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = off_10045DC28;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 16) = a2 + 24;
  *(_DWORD *)(a2 + 140) = 0;
  *(void *)(a2 + 40) = off_10045DC08;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 54) = 0;
  *(void *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = 0;
  *(void *)(a2 + 64) = 0;
  *(_WORD *)(a2 + 88) = 0;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  *(void *)(a2 + 96) = 0;
  *(unsigned char *)(a2 + 120) = 0;
  *(void *)(a2 + 128) = 0;
  *(_DWORD *)(a2 + 135) = 0;
  *(unsigned char *)(a2 + 144) &= 0x80u;
  *(unsigned char *)(a2 + 152) &= 0xF8u;
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t result = sub_1001AF428(a2, a1 + 16);
    if (*(unsigned char *)(a1 + 8))
    {
      uint64_t result = sub_1001AE958(a1 + 16);
      *(unsigned char *)(a1 + 8) = 0;
    }
  }
  else
  {
    uint64_t result = sub_1001AEA90(a2, *(uint64_t **)(a1 + 192));
    *(void *)(a1 + 336) += result;
  }
  return result;
}

void sub_100309374(_Unwind_Exception *a1)
{
  sub_1001AE958(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100309388(uint64_t a1)
{
  *(void *)a1 = off_100465BD8;
  *(void *)(a1 + 8) = off_100465E28;
  uint64_t v2 = *(void *)(a1 + 240);
  *(void *)(a1 + 240) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 232);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 16)) {
      return a1;
    }
    goto LABEL_6;
  }
  if (*(unsigned char *)(a1 + 16))
  {
LABEL_6:
    sub_1000A45A0(a1 + 24);
    *(unsigned char *)(a1 + 16) = 0;
  }
  return a1;
}

void sub_100309480(uint64_t a1)
{
  *(void *)a1 = off_100465BD8;
  *(void *)(a1 + 8) = off_100465E28;
  uint64_t v2 = *(void *)(a1 + 240);
  *(void *)(a1 + 240) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 232);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 16))
    {
LABEL_7:
      operator delete();
    }
  }
  else if (!*(unsigned char *)(a1 + 16))
  {
    goto LABEL_7;
  }
  sub_1000A45A0(a1 + 24);
  *(unsigned char *)(a1 + 16) = 0;
  goto LABEL_7;
}

uint64_t sub_100309598(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[29];
  a1[28] = 0;
  a1[29] = 0;
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t result = a1[30];
    a1[30] = 0;
    if (!result) {
      return result;
    }
  }
  else
  {
    uint64_t result = a1[30];
    a1[30] = 0;
    if (!result) {
      return result;
    }
  }
  uint64_t v4 = *(uint64_t (**)(void))(*(void *)result + 8);

  return v4();
}

BOOL sub_100309658(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return 1;
  }
  if (*(void *)(a1 + 224)) {
    return *(void *)(a1 + 384) != *(void *)(a1 + 376);
  }
  return 0;
}

uint64_t sub_100309688(uint64_t a1)
{
  *(void *)a1 = off_100465C38;
  *(void *)(a1 + 8) = off_100465E28;
  uint64_t v2 = *(void *)(a1 + 240);
  *(void *)(a1 + 240) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 232);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 16)) {
      return a1;
    }
    goto LABEL_6;
  }
  if (*(unsigned char *)(a1 + 16))
  {
LABEL_6:
    sub_1000A45A0(a1 + 24);
    *(unsigned char *)(a1 + 16) = 0;
  }
  return a1;
}

void sub_100309780(uint64_t a1)
{
  *(void *)a1 = off_100465C38;
  *(void *)(a1 + 8) = off_100465E28;
  uint64_t v2 = *(void *)(a1 + 240);
  *(void *)(a1 + 240) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 232);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 16))
    {
LABEL_7:
      operator delete();
    }
  }
  else if (!*(unsigned char *)(a1 + 16))
  {
    goto LABEL_7;
  }
  sub_1000A45A0(a1 + 24);
  *(unsigned char *)(a1 + 16) = 0;
  goto LABEL_7;
}

uint64_t sub_100309898(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[29];
  a1[28] = 0;
  a1[29] = 0;
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t result = a1[30];
    a1[30] = 0;
    if (!result) {
      return result;
    }
  }
  else
  {
    uint64_t result = a1[30];
    a1[30] = 0;
    if (!result) {
      return result;
    }
  }
  uint64_t v4 = *(uint64_t (**)(void))(*(void *)result + 8);

  return v4();
}

BOOL sub_100309958(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return 1;
  }
  if (*(void *)(a1 + 224)) {
    return *(void *)(a1 + 384) != *(void *)(a1 + 376);
  }
  return 0;
}

uint64_t sub_100309988(uint64_t a1)
{
  *(void *)a1 = off_100465B78;
  uint64_t v2 = *(void *)(a1 + 280);
  *(void *)(a1 + 280) = 0;
  if (v2) {
    operator delete();
  }
  *(void *)a1 = off_100465CC8;
  uint64_t v3 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 120);
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    if (!*(unsigned char *)(a1 + 8)) {
      return a1;
    }
    goto LABEL_8;
  }
  if (*(unsigned char *)(a1 + 8))
  {
LABEL_8:
    nullsub_9(a1 + 16);
    *(unsigned char *)(a1 + 8) = 0;
  }
  return a1;
}

void sub_100309A9C(uint64_t a1)
{
  *(void *)a1 = off_100465B78;
  uint64_t v2 = *(void *)(a1 + 280);
  *(void *)(a1 + 280) = 0;
  if (v2) {
    operator delete();
  }
  *(void *)a1 = off_100465CC8;
  uint64_t v3 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = 0;
  if (v3) {
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 120);
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    if (!*(unsigned char *)(a1 + 8))
    {
LABEL_9:
      operator delete();
    }
  }
  else if (!*(unsigned char *)(a1 + 8))
  {
    goto LABEL_9;
  }
  nullsub_9(a1 + 16);
  *(unsigned char *)(a1 + 8) = 0;
  goto LABEL_9;
}

uint64_t sub_100309BD0(uint64_t a1)
{
  *(void *)a1 = off_100465BA0;
  if (*(unsigned char *)(a1 + 352)) {
    *(unsigned char *)(a1 + 352) = 0;
  }
  *(void *)(a1 + 8) = off_100465CF0;
  uint64_t v2 = *(void *)(a1 + 200);
  *(void *)(a1 + 200) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 192);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 16)) {
      return a1;
    }
    goto LABEL_8;
  }
  if (*(unsigned char *)(a1 + 16))
  {
LABEL_8:
    sub_1001AE958(a1 + 24);
    *(unsigned char *)(a1 + 16) = 0;
  }
  return a1;
}

void sub_100309CD4(uint64_t a1)
{
  *(void *)a1 = off_100465BA0;
  if (*(unsigned char *)(a1 + 352)) {
    *(unsigned char *)(a1 + 352) = 0;
  }
  *(void *)(a1 + 8) = off_100465CF0;
  uint64_t v2 = *(void *)(a1 + 200);
  *(void *)(a1 + 200) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 192);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 16))
    {
LABEL_9:
      operator delete();
    }
  }
  else if (!*(unsigned char *)(a1 + 16))
  {
    goto LABEL_9;
  }
  sub_1001AE958(a1 + 24);
  *(unsigned char *)(a1 + 16) = 0;
  goto LABEL_9;
}

uint64_t sub_100309DF8(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[24];
  a1[23] = 0;
  a1[24] = 0;
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t result = a1[25];
    a1[25] = 0;
    if (!result) {
      return result;
    }
  }
  else
  {
    uint64_t result = a1[25];
    a1[25] = 0;
    if (!result) {
      return result;
    }
  }
  uint64_t v4 = *(uint64_t (**)(void))(*(void *)result + 8);

  return v4();
}

BOOL sub_100309EB8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return 1;
  }
  if (*(void *)(a1 + 184)) {
    return *(void *)(a1 + 344) != *(void *)(a1 + 336);
  }
  return 0;
}

uint64_t sub_100309EEC(uint64_t a1)
{
  *(void *)a1 = off_100465CC8;
  uint64_t v2 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 120);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 8)) {
      return a1;
    }
    goto LABEL_6;
  }
  if (*(unsigned char *)(a1 + 8))
  {
LABEL_6:
    nullsub_9(a1 + 16);
    *(unsigned char *)(a1 + 8) = 0;
  }
  return a1;
}

void sub_100309FC4(uint64_t a1)
{
  *(void *)a1 = off_100465CC8;
  uint64_t v2 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 120);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 8))
    {
LABEL_7:
      operator delete();
    }
  }
  else if (!*(unsigned char *)(a1 + 8))
  {
    goto LABEL_7;
  }
  nullsub_9(a1 + 16);
  *(unsigned char *)(a1 + 8) = 0;
  goto LABEL_7;
}

void sub_10030A0BC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = off_10045D918;
  *(void *)(a2 + 80) = 0;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_DWORD *)(a2 + 40) = 0;
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 48) = 0;
  *(_DWORD *)(a2 + 72) = 0;
  *(_WORD *)(a2 + 88) &= 0xFC00u;
  if (*(unsigned char *)(a1 + 8))
  {
    sub_1001A75D8(a2, a1 + 16);
    if (*(unsigned char *)(a1 + 8))
    {
      nullsub_9(a1 + 16);
      *(unsigned char *)(a1 + 8) = 0;
    }
  }
  else
  {
    *(void *)(a1 + 272) += sub_1001A7038(a2, *(uint64_t **)(a1 + 128));
  }
}

void sub_10030A184(_Unwind_Exception *a1)
{
  nullsub_9(v1);
  _Unwind_Resume(a1);
}

void sub_10030A198(uint64_t a1)
{
  *(void *)a1 = off_100465CF0;
  uint64_t v2 = *(void *)(a1 + 192);
  *(void *)(a1 + 192) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 184);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 8))
    {
LABEL_7:
      operator delete();
    }
  }
  else if (!*(unsigned char *)(a1 + 8))
  {
    goto LABEL_7;
  }
  sub_1001AE958(a1 + 16);
  *(unsigned char *)(a1 + 8) = 0;
  goto LABEL_7;
}

void sub_10030A290(id a1)
{
  qword_10047BF10 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Database");
}

void *sub_10030A2C0(void *a1, void *a2)
{
  *a1 = off_100465D68;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0;
  uint64_t v3 = a2[1];
  if (*a2 != v3)
  {
    a1[1] = *a2;
    a1[2] = v3;
    a1[3] = a2[2];
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    char v5 = (uint64_t *)a1[1];
    uint64_t v4 = (uint64_t *)a1[2];
    if (v5 != v4)
    {
      unint64_t v6 = (unint64_t)(v4 - 2);
      if (v4 - 2 > v5)
      {
        do
        {
          uint64_t v8 = *v5;
          uint64_t v7 = v5[1];
          *char v5 = 0;
          v5[1] = 0;
          long long v9 = *(_OWORD *)v6;
          *(void *)unint64_t v6 = 0;
          *(void *)(v6 + 8) = 0;
          uint64_t v10 = (std::__shared_weak_count *)v5[1];
          *(_OWORD *)char v5 = v9;
          if (v10 && !atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
            std::__shared_weak_count::__release_weak(v10);
            uint64_t v11 = *(std::__shared_weak_count **)(v6 + 8);
            *(void *)unint64_t v6 = v8;
            *(void *)(v6 + 8) = v7;
            if (v11)
            {
LABEL_9:
              if (!atomic_fetch_add(&v11->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
              {
                ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
                std::__shared_weak_count::__release_weak(v11);
              }
            }
          }
          else
          {
            uint64_t v11 = *(std::__shared_weak_count **)(v6 + 8);
            *(void *)unint64_t v6 = v8;
            *(void *)(v6 + 8) = v7;
            if (v11) {
              goto LABEL_9;
            }
          }
          v5 += 2;
          v6 -= 16;
        }
        while ((unint64_t)v5 < v6);
      }
    }
  }
  return a1;
}

void sub_10030A420(void *a1)
{
  *a1 = off_100465D68;
  uint64_t v2 = a1[1];
  if (v2)
  {
    uint64_t v3 = a1[2];
    uint64_t v4 = (void *)a1[1];
    if (v3 != v2)
    {
      do
      {
        char v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      uint64_t v4 = (void *)a1[1];
    }
    a1[2] = v2;
    operator delete(v4);
  }

  operator delete();
}

BOOL sub_10030A514(uint64_t a1)
{
  return *(void *)(a1 + 8) != *(void *)(a1 + 16);
}

void sub_10030A524(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  *a2 = *(_OWORD *)(v3 - 16);
  *(void *)(v3 - 16) = 0;
  *(void *)(v3 - 8) = 0;
  uint64_t v4 = *(void *)(a1 + 16);
  char v5 = *(std::__shared_weak_count **)(v4 - 8);
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    *(void *)(a1 + 16) = v4 - 16;
  }
  else
  {
    *(void *)(a1 + 16) = v4 - 16;
  }
}

void sub_10030A5C8(uint64_t a1)
{
  *(void *)a1 = off_100465DB8;
  uint64_t v2 = *(void *)(a1 + 200);
  *(void *)(a1 + 200) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 192);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 8))
    {
LABEL_7:
      operator delete();
    }
  }
  else if (!*(unsigned char *)(a1 + 8))
  {
    goto LABEL_7;
  }
  sub_1001AB75C(a1 + 16);
  *(unsigned char *)(a1 + 8) = 0;
  goto LABEL_7;
}

uint64_t sub_10030A6C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = off_10045DBB8;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_OWORD *)(a2 + 85) = 0u;
  *(_OWORD *)(a2 + 104) = 0u;
  *(_OWORD *)(a2 + 120) = 0u;
  *(_OWORD *)(a2 + 136) = 0u;
  *(void *)(a2 + 152) = 0;
  *(_WORD *)(a2 + 160) &= 0xF000u;
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t result = sub_1001AC87C(a2, a1 + 16);
    if (*(unsigned char *)(a1 + 8))
    {
      uint64_t result = sub_1001AB75C(a1 + 16);
      *(unsigned char *)(a1 + 8) = 0;
    }
  }
  else
  {
    uint64_t result = sub_1001AB838(a2, *(uint64_t **)(a1 + 200));
    *(void *)(a1 + 344) += result;
  }
  return result;
}

void sub_10030A794(_Unwind_Exception *a1)
{
  sub_1001AB75C(v1);
  _Unwind_Resume(a1);
}

void sub_10030A7A8(uint64_t a1)
{
  *(void *)a1 = off_100465DF0;
  uint64_t v2 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 80);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 8))
    {
LABEL_7:
      operator delete();
    }
  }
  else if (!*(unsigned char *)(a1 + 8))
  {
    goto LABEL_7;
  }
  nullsub_96(a1 + 16);
  *(unsigned char *)(a1 + 8) = 0;
  goto LABEL_7;
}

void sub_10030A8A0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = off_10045D9B8;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(void *)(a2 + 40) = 0;
  *(unsigned char *)(a2 + 48) &= ~1u;
  if (*(unsigned char *)(a1 + 8))
  {
    sub_1001A8E48(a2, a1 + 16);
    if (*(unsigned char *)(a1 + 8))
    {
      nullsub_96(a1 + 16);
      *(unsigned char *)(a1 + 8) = 0;
    }
  }
  else
  {
    *(void *)(a1 + 232) += sub_1001A8598(a2, *(uint64_t **)(a1 + 88));
  }
}

void sub_10030A958(_Unwind_Exception *a1)
{
  nullsub_96(v1);
  _Unwind_Resume(a1);
}

void sub_10030A96C(uint64_t a1)
{
  *(void *)a1 = off_100465E28;
  uint64_t v2 = *(void *)(a1 + 232);
  *(void *)(a1 + 232) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 224);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 8))
    {
LABEL_7:
      operator delete();
    }
  }
  else if (!*(unsigned char *)(a1 + 8))
  {
    goto LABEL_7;
  }
  sub_1000A45A0(a1 + 16);
  *(unsigned char *)(a1 + 8) = 0;
  goto LABEL_7;
}

void sub_10030AA64(uint64_t a1)
{
  *(void *)a1 = off_100465E60;
  uint64_t v2 = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 168);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 8))
    {
LABEL_7:
      operator delete();
    }
  }
  else if (!*(unsigned char *)(a1 + 8))
  {
    goto LABEL_7;
  }
  sub_100041664(a1 + 16);
  *(unsigned char *)(a1 + 8) = 0;
  goto LABEL_7;
}

uint64_t sub_10030AB5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = off_10045DEA8;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = off_10045DAB8;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) &= 0xFCu;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  *(_OWORD *)(a2 + 112) = 0u;
  *(void *)(a2 + 128) = 0;
  *(_WORD *)(a2 + 136) &= 0xF800u;
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t result = sub_1001B8394(a2, a1 + 16);
    if (*(unsigned char *)(a1 + 8))
    {
      uint64_t result = sub_100041664(a1 + 16);
      *(unsigned char *)(a1 + 8) = 0;
    }
  }
  else
  {
    uint64_t result = sub_1001B7DE8(a2, *(uint64_t **)(a1 + 176));
    *(void *)(a1 + 320) += result;
  }
  return result;
}

void sub_10030AC44(_Unwind_Exception *a1)
{
  sub_100041664(v1);
  _Unwind_Resume(a1);
}

void sub_10030AC58(uint64_t a1)
{
  *(void *)a1 = off_100465E98;
  uint64_t v2 = *(void *)(a1 + 192);
  *(void *)(a1 + 192) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 184);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 8))
    {
LABEL_7:
      operator delete();
    }
  }
  else if (!*(unsigned char *)(a1 + 8))
  {
    goto LABEL_7;
  }
  sub_1001A3CC4(a1 + 16);
  *(unsigned char *)(a1 + 8) = 0;
  goto LABEL_7;
}

uint64_t sub_10030AD50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = off_10045D848;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 16) = off_10045DAB8;
  *(unsigned char *)(a2 + 40) &= 0xFCu;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(unsigned char *)(a2 + 96) = 0;
  *(_OWORD *)(a2 + 104) = 0u;
  *(_OWORD *)(a2 + 120) = 0u;
  *(_OWORD *)(a2 + 136) = 0u;
  *(_WORD *)(a2 + 152) &= 0xFE00u;
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t result = sub_1001A4F44(a2, a1 + 16);
    if (*(unsigned char *)(a1 + 8))
    {
      uint64_t result = sub_1001A3CC4(a1 + 16);
      *(unsigned char *)(a1 + 8) = 0;
    }
  }
  else
  {
    uint64_t result = sub_1001A3D08(a2, *(uint64_t **)(a1 + 192));
    *(void *)(a1 + 336) += result;
  }
  return result;
}

void sub_10030AE40(_Unwind_Exception *a1)
{
  sub_1001A3CC4(v1);
  _Unwind_Resume(a1);
}

void sub_10030AE54(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::string __p = operator new(0x28uLL);
  long long v5 = xmmword_1003E7230;
  strcpy((char *)__p, "process_output/gravityAccel.thriftbin");
  if (*(char *)(a1 + 23) < 0)
  {
    sub_1000559FC(a2, *(void **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    a2->__r_.__value_.__r.__words[2] = *(void *)(a1 + 16);
  }
  sub_1000512AC(a2, (uint64_t)&__p);
  if (SHIBYTE(v5) < 0) {
    operator delete(__p);
  }
}

void sub_10030AF08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if ((a15 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_10030AF54(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  strcpy(__p, "gravityAccel.thriftbin");
  char v4 = 22;
  if (*(char *)(a1 + 23) < 0)
  {
    sub_1000559FC(a2, *(void **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)&a2->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    a2->__r_.__value_.__r.__words[2] = *(void *)(a1 + 16);
  }
  sub_1000512AC(a2, (uint64_t)__p);
  if (v4 < 0) {
    operator delete(*(void **)__p);
  }
}

void sub_10030AFF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if ((a14 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_10030B03C(uint64_t a1, const char *a2, char a3)
{
  if ((a3 & 1) == 0 || (sub_100056B28(a2, 0, (int *)v21), LODWORD(v21[0]) <= 1))
  {
    *(void *)(a1 + 144) = 0;
    *(_OWORD *)(a1 + 112) = 0u;
    *(_OWORD *)(a1 + 128) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    return;
  }
  sub_100170CDC(7, &v10);
  if (!*(void *)(v10 + 136) || (std::istream::tellg(), !v22))
  {
    *(void *)(a1 + 144) = 0;
    *(_OWORD *)(a1 + 112) = 0u;
    *(_OWORD *)(a1 + 128) = 0u;
    *(_OWORD *)(a1 + 80) = 0u;
    *(_OWORD *)(a1 + 96) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    long long v9 = v11;
    if (!v11) {
      return;
    }
    goto LABEL_12;
  }
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  uint64_t v20 = 0;
  std::istream::seekg();
  char v4 = v11;
  *(void *)a1 = v10;
  *(void *)(a1 + 8) = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  long long v5 = v21[7];
  *(_OWORD *)(a1 + 112) = v21[6];
  *(_OWORD *)(a1 + 128) = v5;
  *(void *)(a1 + 144) = v22;
  long long v6 = v21[3];
  *(_OWORD *)(a1 + 48) = v21[2];
  *(_OWORD *)(a1 + 64) = v6;
  long long v7 = v21[5];
  *(_OWORD *)(a1 + 80) = v21[4];
  *(_OWORD *)(a1 + 96) = v7;
  long long v8 = v21[1];
  *(_OWORD *)(a1 + 16) = v21[0];
  *(_OWORD *)(a1 + 32) = v8;
  long long v9 = v11;
  if (v11)
  {
LABEL_12:
    if (!atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
}

void sub_10030B1E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10030B1F8(uint64_t a1)
{
  *(void *)a1 = off_100465CC8;
  uint64_t v2 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 120);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 8)) {
      return a1;
    }
    goto LABEL_6;
  }
  if (*(unsigned char *)(a1 + 8))
  {
LABEL_6:
    nullsub_9(a1 + 16);
    *(unsigned char *)(a1 + 8) = 0;
  }
  return a1;
}

void sub_10030B2D0(uint64_t a1)
{
  *(void *)a1 = off_100465CC8;
  uint64_t v2 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 120);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 8))
    {
LABEL_7:
      operator delete();
    }
  }
  else if (!*(unsigned char *)(a1 + 8))
  {
    goto LABEL_7;
  }
  nullsub_9(a1 + 16);
  *(unsigned char *)(a1 + 8) = 0;
  goto LABEL_7;
}

void sub_10030B3CC(uint64_t a1)
{
  *(void *)a1 = off_100465F10;
  uint64_t v2 = *(void *)(a1 + 120);
  *(void *)(a1 + 120) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 112);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 8))
    {
LABEL_7:
      operator delete();
    }
  }
  else if (!*(unsigned char *)(a1 + 8))
  {
    goto LABEL_7;
  }
  nullsub_95(a1 + 16);
  *(unsigned char *)(a1 + 8) = 0;
  goto LABEL_7;
}

void sub_10030B4C4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 32) = 0;
  *(_WORD *)(a2 + 40) = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = off_10045D998;
  *(_DWORD *)(a2 + 24) = 0;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(unsigned char *)(a2 + 80) &= 0x80u;
  if (*(unsigned char *)(a1 + 8))
  {
    sub_1001A8530(a2, a1 + 16);
    if (*(unsigned char *)(a1 + 8))
    {
      nullsub_95(a1 + 16);
      *(unsigned char *)(a1 + 8) = 0;
    }
  }
  else
  {
    *(void *)(a1 + 264) += sub_1001A7744(a2, *(uint64_t **)(a1 + 120));
  }
}

void sub_10030B584(_Unwind_Exception *a1)
{
  nullsub_95(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10030B598@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  char v4 = operator new(0x108uLL);
  v4[1] = 0;
  v4[2] = 0;
  *char v4 = off_100454870;
  v4[4] = *(void *)a1;
  *((_DWORD *)v4 + 10) = *(_DWORD *)(a1 + 8);
  sub_10001D800((uint64_t)(v4 + 6), a1 + 16);
  uint64_t result = sub_100018854((uint64_t)(v4 + 26), a1 + 176);
  *((_DWORD *)v4 + 6) = 20;
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_10030B62C(_Unwind_Exception *a1)
{
  sub_100042F7C(v2);
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v4);
  _Unwind_Resume(a1);
}

void sub_10030B64C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

std::string *sub_10030B664@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10030B698(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10030B6B4(uint64_t a1)
{
  *(void *)a1 = off_100465F48;
  *(void *)(a1 + 8) = off_100465DB8;
  uint64_t v2 = *(void *)(a1 + 208);
  *(void *)(a1 + 208) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 200);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 16)) {
      return a1;
    }
    goto LABEL_6;
  }
  if (*(unsigned char *)(a1 + 16))
  {
LABEL_6:
    sub_1001AB75C(a1 + 24);
    *(unsigned char *)(a1 + 16) = 0;
  }
  return a1;
}

void sub_10030B7AC(uint64_t a1)
{
  *(void *)a1 = off_100465F48;
  *(void *)(a1 + 8) = off_100465DB8;
  uint64_t v2 = *(void *)(a1 + 208);
  *(void *)(a1 + 208) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 200);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 16))
    {
LABEL_7:
      operator delete();
    }
  }
  else if (!*(unsigned char *)(a1 + 16))
  {
    goto LABEL_7;
  }
  sub_1001AB75C(a1 + 24);
  *(unsigned char *)(a1 + 16) = 0;
  goto LABEL_7;
}

uint64_t sub_10030B8C4(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[25];
  a1[24] = 0;
  a1[25] = 0;
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t result = a1[26];
    a1[26] = 0;
    if (!result) {
      return result;
    }
  }
  else
  {
    uint64_t result = a1[26];
    a1[26] = 0;
    if (!result) {
      return result;
    }
  }
  char v4 = *(uint64_t (**)(void))(*(void *)result + 8);

  return v4();
}

BOOL sub_10030B984(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return 1;
  }
  if (*(void *)(a1 + 192)) {
    return *(void *)(a1 + 352) != *(void *)(a1 + 344);
  }
  return 0;
}

uint64_t sub_10030B9B4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  long long v7 = off_10045DBB8;
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  memset(v12, 0, 29);
  memset(&v12[32], 0, 58);
  if (*(unsigned char *)(a1 + 16))
  {
    sub_1001AC87C((uint64_t)&v7, a1 + 24);
    if (*(unsigned char *)(a1 + 16))
    {
      sub_1001AB75C(a1 + 24);
      *(unsigned char *)(a1 + 16) = 0;
    }
  }
  else
  {
    *(void *)(a1 + 352) += sub_1001AB838((uint64_t)&v7, *(uint64_t **)(a1 + 208));
  }
  sub_10035EF94((uint64_t)v6, (uint64_t)&v7);
  char v4 = operator new(0x108uLL);
  v4[1] = 0;
  v4[2] = 0;
  *char v4 = off_100454870;
  sub_1001AC878(v4 + 4, v6);
  *((_DWORD *)v4 + 6) = 4;
  *a2 = v4 + 3;
  a2[1] = v4;
  sub_1001AB75C(v6);
  return sub_1001AB75C(&v7);
}

void sub_10030BADC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  std::__shared_weak_count::~__shared_weak_count(v30);
  operator delete(v32);
  sub_1001AB75C(&a9);
  sub_1001AB75C(&a30);
  _Unwind_Resume(a1);
}

void sub_10030BB0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
}

uint64_t sub_10030BB20(uint64_t a1)
{
  *(void *)a1 = off_100465F98;
  *(void *)(a1 + 8) = off_100465DF0;
  uint64_t v2 = *(void *)(a1 + 96);
  *(void *)(a1 + 96) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 88);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 16)) {
      return a1;
    }
    goto LABEL_6;
  }
  if (*(unsigned char *)(a1 + 16))
  {
LABEL_6:
    nullsub_96(a1 + 24);
    *(unsigned char *)(a1 + 16) = 0;
  }
  return a1;
}

void sub_10030BC18(uint64_t a1)
{
  *(void *)a1 = off_100465F98;
  *(void *)(a1 + 8) = off_100465DF0;
  uint64_t v2 = *(void *)(a1 + 96);
  *(void *)(a1 + 96) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 88);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 16))
    {
LABEL_7:
      operator delete();
    }
  }
  else if (!*(unsigned char *)(a1 + 16))
  {
    goto LABEL_7;
  }
  nullsub_96(a1 + 24);
  *(unsigned char *)(a1 + 16) = 0;
  goto LABEL_7;
}

uint64_t sub_10030BD30(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[11];
  a1[10] = 0;
  a1[11] = 0;
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t result = a1[12];
    a1[12] = 0;
    if (!result) {
      return result;
    }
  }
  else
  {
    uint64_t result = a1[12];
    a1[12] = 0;
    if (!result) {
      return result;
    }
  }
  char v4 = *(uint64_t (**)(void))(*(void *)result + 8);

  return v4();
}

BOOL sub_10030BDF0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return 1;
  }
  if (*(void *)(a1 + 80)) {
    return *(void *)(a1 + 240) != *(void *)(a1 + 232);
  }
  return 0;
}

uint64_t sub_10030BE20@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  long long v7 = off_10045D9B8;
  long long v8 = 0u;
  memset(v9, 0, sizeof(v9));
  if (*(unsigned char *)(a1 + 16))
  {
    sub_1001A8E48((uint64_t)&v7, a1 + 24);
    if (*(unsigned char *)(a1 + 16))
    {
      nullsub_96(a1 + 24);
      *(unsigned char *)(a1 + 16) = 0;
    }
  }
  else
  {
    *(void *)(a1 + 240) += sub_1001A8598((uint64_t)&v7, *(uint64_t **)(a1 + 96));
  }
  sub_10035F0F4((uint64_t)v6, (uint64_t)&v7);
  char v4 = operator new(0x108uLL);
  v4[1] = 0;
  v4[2] = 0;
  *char v4 = off_100454870;
  sub_1001A8DF4((uint64_t)(v4 + 4), (uint64_t)v6);
  *((_DWORD *)v4 + 6) = 1;
  *a2 = v4 + 3;
  a2[1] = v4;
  nullsub_96(v6);
  return nullsub_96(&v7);
}

void sub_10030BF28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  std::__shared_weak_count::~__shared_weak_count(v16);
  operator delete(v18);
  nullsub_96(&a9);
  nullsub_96(&a16);
  _Unwind_Resume(a1);
}

void sub_10030BF58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  nullsub_96(va);
  _Unwind_Resume(a1);
}

void *sub_10030BF6C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

void sub_10030C000()
{
}

void *sub_10030C014()
{
  uint64_t result = operator new(0x10uLL);
  *uint64_t result = off_100465FE8;
  return result;
}

void sub_10030C04C(uint64_t a1, void *a2)
{
  *a2 = off_100465FE8;
}

uint64_t sub_10030C074@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_10035F620(a2, 1, a1);
}

uint64_t sub_10030C084(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN27input_event_stream_iteratorC1ENSt3__16vectorI19LocalizerInputEventNS0_9allocatorIS2_EEEERK18Unp"
                     "rocessedDatarunNS0_6chrono8durationIxNS0_5ratioILl1ELl1000000000EEEEEjE3$_0")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN27input_event_stream_iteratorC1ENSt3__16vectorI19LocalizerInputEventNS0_9allocatorIS2_"
                                "EEEERK18UnprocessedDatarunNS0_6chrono8durationIxNS0_5ratioILl1ELl1000000000EEEEEjE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN27input_event_stream_iteratorC1ENSt3__16vectorI19LocalizerInputEventNS0_9allocatorIS2_EEEERK18UnprocessedDatarunNS0_6chrono8durationIxNS0_5ratioILl1ELl1000000000EEEEEjE3$_0"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN27input_event_stream_iteratorC1ENSt3__16vectorI19LocalizerInputEventNS0_9allocatorIS2_EEEERK18UnprocessedDatarunNS0_6chrono8durationIxNS0_5ratioILl1ELl1000000000EEEEEjE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

_UNKNOWN **sub_10030C0F4()
{
}

uint64_t sub_10030C100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = off_100466078;
  sub_100170200(a2, (_DWORD *)(a1 + 8));
  int v5 = *(_DWORD *)(a1 + 8);
  long long v6 = operator new(0x70uLL);
  v6[1] = 0;
  v6[2] = 0;
  *long long v6 = off_1004660C8;
  long long v7 = v6 + 3;
  wireless_diagnostics::google::protobuf::io::FileInputStream::FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)(v6 + 3), v5, -1);
  *(void *)(a1 + 16) = v6 + 3;
  *(void *)(a1 + 24) = v6;
  long long v8 = operator new(0x68uLL);
  v8[1] = 0;
  void v8[2] = 0;
  *long long v8 = off_100466118;
  v8[3] = v7;
  v8[5] = 0;
  v8[6] = 0;
  v8[4] = 0;
  *(void *)((char *)v8 + 54) = 0;
  *((_OWORD *)v8 + 4) = xmmword_1003E7100;
  int v9 = wireless_diagnostics::google::protobuf::io::CodedInputStream::default_recursion_limit_;
  *((_DWORD *)v8 + 20) = 0;
  *((_DWORD *)v8 + 21) = v9;
  v8[11] = 0;
  v8[12] = 0;
  wireless_diagnostics::google::protobuf::io::CodedInputStream::Refresh((wireless_diagnostics::google::protobuf::io::CodedInputStream *)(v8 + 3));
  *(void *)(a1 + 32) = v8 + 3;
  *(void *)(a1 + 40) = v8;
  uint64_t v10 = *(void *)(a3 + 24);
  if (!v10) {
    goto LABEL_4;
  }
  if (v10 != a3)
  {
    uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 16))(v10);
LABEL_4:
    *(void *)(a1 + 72) = v10;
    return a1;
  }
  *(void *)(a1 + 72) = a1 + 48;
  (*(void (**)(void))(**(void **)(a3 + 24) + 24))(*(void *)(a3 + 24));
  return a1;
}

void sub_10030C29C(_Unwind_Exception *a1)
{
  sub_1000BA884(v3);
  sub_1000BA884(v2 + 16);
  sub_100052AEC(v1);
  _Unwind_Resume(a1);
}

void sub_10030C2DC(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  sub_100052AEC(v1);
  _Unwind_Resume(a1);
}

void sub_10030C2FC(_Unwind_Exception *a1)
{
  sub_100052AEC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10030C310(uint64_t a1)
{
  *(void *)a1 = off_100466078;
  uint64_t v2 = a1 + 48;
  uint64_t v3 = *(void *)(a1 + 72);
  if (v3 == v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 32))(v2);
    char v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v4) {
      goto LABEL_8;
    }
  }
  else
  {
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
    char v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v4) {
      goto LABEL_8;
    }
  }
  if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    int v5 = *(std::__shared_weak_count **)(a1 + 24);
    if (!v5) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_8:
  int v5 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v5)
  {
LABEL_10:
    sub_100052AEC((int *)(a1 + 8));
    return a1;
  }
LABEL_9:
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_10;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  sub_100052AEC((int *)(a1 + 8));
  return a1;
}

void sub_10030C478(uint64_t a1)
{
  *(void *)a1 = off_100466078;
  uint64_t v2 = a1 + 48;
  uint64_t v3 = *(void *)(a1 + 72);
  if (v3 == v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 32))(v2);
    char v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v4) {
      goto LABEL_8;
    }
  }
  else
  {
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
    char v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v4) {
      goto LABEL_8;
    }
  }
  if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    int v5 = *(std::__shared_weak_count **)(a1 + 24);
    if (!v5) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
LABEL_8:
  int v5 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v5) {
    goto LABEL_12;
  }
LABEL_9:
  if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_12:
  sub_100052AEC((int *)(a1 + 8));

  operator delete();
}

void sub_10030C5E8(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[5];
  a1[4] = 0;
  a1[5] = 0;
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = (std::__shared_weak_count *)a1[3];
    a1[2] = 0;
    a1[3] = 0;
    if (!v3) {
      return;
    }
  }
  else
  {
    uint64_t v3 = (std::__shared_weak_count *)a1[3];
    a1[2] = 0;
    a1[3] = 0;
    if (!v3) {
      return;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

wireless_diagnostics::google::protobuf::io::CodedInputStream *sub_10030C6C4(uint64_t a1)
{
  uint64_t result = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (result)
  {
    uint64_t v3 = 0;
    int v2 = 0;
    return (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::GetDirectBufferPointer(result, (const void **)&v3, &v2);
  }
  return result;
}

void sub_10030C6FC(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (!v3)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v9, "Protobuf stream not avaialble");
    sub_10018E868((uint64_t)v17);
    sub_100266EAC(&v9, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<CLProviderPositionInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = CLProviderPositionInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 438, (uint64_t)v17);
  }
  unsigned int v16 = 0;
  int v5 = (char *)*((void *)v3 + 1);
  if ((unint64_t)v5 >= *((void *)v3 + 2) || *v5 < 0)
  {
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(v3, &v16) & 1) == 0)
    {
      __cxa_allocate_exception(0x40uLL);
      std::runtime_error::runtime_error(&v9, "Protobuf stream eror: failed to parse the length");
      sub_10018E868((uint64_t)v15);
      sub_100266EAC(&v9, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<CLProviderPositionInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = CLProviderPositionInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 444, (uint64_t)v15);
    }
  }
  else
  {
    unsigned int v16 = *v5;
    *((void *)v3 + 1) = v5 + 1;
  }
  sub_100011394(v14);
  int v6 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(*(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32), v16);
  if ((wireless_diagnostics::google::protobuf::MessageLite::MergeFromCodedStream((wireless_diagnostics::google::protobuf::MessageLite *)v14, *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32)) & 1) == 0)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v9, "Protobuf stream eror: failed to parse the message");
    sub_10018E868((uint64_t)v13);
    sub_100266EAC(&v9, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<CLProviderPositionInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = CLProviderPositionInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 451, (uint64_t)v13);
  }
  long long v7 = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (!*((unsigned char *)v7 + 36))
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v9, "Protobuf stream eror: failed to consume the whole message");
    sub_10018E868((uint64_t)v12);
    sub_100266EAC(&v9, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<CLProviderPositionInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = CLProviderPositionInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 454, (uint64_t)v12);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(v7, v6);
  uint64_t v8 = *(void *)(a1 + 72);
  if (!v8) {
    sub_10008F39C();
  }
  (*(void (**)(std::runtime_error *__return_ptr))(*(void *)v8 + 48))(&v9);
  sub_10030B598((uint64_t)&v9, a2);
  sub_1000428B0((uint64_t)&v11);
  sub_100042F7C(v10);
  sub_1000243FC(v14);
}

void sub_10030C9C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::runtime_error a9)
{
  uint64_t v11 = *(void **)(v9 - 88);
  if (v11)
  {
    *(void *)(v9 - 80) = v11;
    operator delete(v11);
  }
  std::runtime_error::~runtime_error(&a9);
  _Unwind_Resume(a1);
}

void sub_10030CA94(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  sub_1000243FC((void *)(v2 - 152));
  _Unwind_Resume(a1);
}

void sub_10030CAB4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10030CAC8(_Unwind_Exception *a1)
{
  sub_1000428B0(v1 + 176);
  sub_100042F7C((void *)(v1 + 16));
  sub_1000243FC((void *)(v2 - 152));
  _Unwind_Resume(a1);
}

void sub_10030CAEC(_Unwind_Exception *a1)
{
  sub_1000243FC((void *)(v1 - 152));
  _Unwind_Resume(a1);
}

void sub_10030CB00(_Unwind_Exception *a1)
{
  sub_1000243FC((void *)(v1 - 152));
  _Unwind_Resume(a1);
}

void sub_10030CB14(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1004660C8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10030CB34(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1004660C8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10030CB88(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_10030CBB0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100466118;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10030CBD0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100466118;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_10030CC24(uint64_t a1)
{
}

uint64_t sub_10030CC30(uint64_t a1)
{
  *(void *)a1 = off_100466168;
  *(void *)(a1 + 8) = off_100465E60;
  uint64_t v2 = *(void *)(a1 + 184);
  *(void *)(a1 + 184) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 176);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 16)) {
      return a1;
    }
    goto LABEL_6;
  }
  if (*(unsigned char *)(a1 + 16))
  {
LABEL_6:
    sub_100041664(a1 + 24);
    *(unsigned char *)(a1 + 16) = 0;
  }
  return a1;
}

void sub_10030CD28(uint64_t a1)
{
  *(void *)a1 = off_100466168;
  *(void *)(a1 + 8) = off_100465E60;
  uint64_t v2 = *(void *)(a1 + 184);
  *(void *)(a1 + 184) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 176);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 16))
    {
LABEL_7:
      operator delete();
    }
  }
  else if (!*(unsigned char *)(a1 + 16))
  {
    goto LABEL_7;
  }
  sub_100041664(a1 + 24);
  *(unsigned char *)(a1 + 16) = 0;
  goto LABEL_7;
}

uint64_t sub_10030CE40(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[22];
  a1[21] = 0;
  a1[22] = 0;
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t result = a1[23];
    a1[23] = 0;
    if (!result) {
      return result;
    }
  }
  else
  {
    uint64_t result = a1[23];
    a1[23] = 0;
    if (!result) {
      return result;
    }
  }
  char v4 = *(uint64_t (**)(void))(*(void *)result + 8);

  return v4();
}

BOOL sub_10030CF00(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return 1;
  }
  if (*(void *)(a1 + 168)) {
    return *(void *)(a1 + 328) != *(void *)(a1 + 320);
  }
  return 0;
}

uint64_t sub_10030CF30@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_10030AB5C(a1 + 8, (uint64_t)v6);
  sub_100041D24();
  uint64_t v3 = operator new(0x108uLL);
  v3[1] = 0;
  v3[2] = 0;
  void *v3 = off_100454870;
  sub_1000417D0(v3 + 4, v5);
  *((_DWORD *)v3 + 6) = 9;
  *a2 = v3 + 3;
  a2[1] = v3;
  sub_100041664((uint64_t)v5);
  return sub_100041664((uint64_t)v6);
}

void sub_10030CFCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  std::__shared_weak_count::~__shared_weak_count(v27);
  operator delete(v29);
  sub_100041664((uint64_t)&a9);
  sub_100041664((uint64_t)&a27);
  _Unwind_Resume(a1);
}

void sub_10030CFF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

uint64_t sub_10030D010(uint64_t a1)
{
  *(void *)a1 = off_1004661B8;
  *(void *)(a1 + 8) = off_100465E98;
  uint64_t v2 = *(void *)(a1 + 200);
  *(void *)(a1 + 200) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 192);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 16)) {
      return a1;
    }
    goto LABEL_6;
  }
  if (*(unsigned char *)(a1 + 16))
  {
LABEL_6:
    sub_1001A3CC4(a1 + 24);
    *(unsigned char *)(a1 + 16) = 0;
  }
  return a1;
}

void sub_10030D108(uint64_t a1)
{
  *(void *)a1 = off_1004661B8;
  *(void *)(a1 + 8) = off_100465E98;
  uint64_t v2 = *(void *)(a1 + 200);
  *(void *)(a1 + 200) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 192);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 16))
    {
LABEL_7:
      operator delete();
    }
  }
  else if (!*(unsigned char *)(a1 + 16))
  {
    goto LABEL_7;
  }
  sub_1001A3CC4(a1 + 24);
  *(unsigned char *)(a1 + 16) = 0;
  goto LABEL_7;
}

uint64_t sub_10030D220(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[24];
  a1[23] = 0;
  a1[24] = 0;
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t result = a1[25];
    a1[25] = 0;
    if (!result) {
      return result;
    }
  }
  else
  {
    uint64_t result = a1[25];
    a1[25] = 0;
    if (!result) {
      return result;
    }
  }
  char v4 = *(uint64_t (**)(void))(*(void *)result + 8);

  return v4();
}

BOOL sub_10030D2E0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return 1;
  }
  if (*(void *)(a1 + 184)) {
    return *(void *)(a1 + 344) != *(void *)(a1 + 336);
  }
  return 0;
}

uint64_t sub_10030D310@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_10030AD50(a1 + 8, (uint64_t)v6);
  sub_10035F13C();
  uint64_t v3 = operator new(0x108uLL);
  v3[1] = 0;
  v3[2] = 0;
  void *v3 = off_100454870;
  sub_1001A4F40(v3 + 4, v5);
  *((_DWORD *)v3 + 6) = 6;
  *a2 = v3 + 3;
  a2[1] = v3;
  sub_1001A3CC4(v5);
  return sub_1001A3CC4(v6);
}

void sub_10030D3AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  std::__shared_weak_count::~__shared_weak_count(v29);
  operator delete(v31);
  sub_1001A3CC4(&a9);
  sub_1001A3CC4(&a29);
  _Unwind_Resume(a1);
}

void sub_10030D3D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void *sub_10030D3F0(void *a1)
{
  uint64_t v2 = a1[1];
  *a1 = off_100466208;
  a1[1] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_10030D45C(void *a1)
{
  uint64_t v2 = a1[1];
  *a1 = off_100466208;
  a1[1] = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }

  operator delete();
}

uint64_t sub_10030D4E8(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 8);
  uint64_t v2 = (std::__shared_weak_count *)v1[15];
  v1[14] = 0;
  v1[15] = 0;
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t result = v1[16];
    v1[16] = 0;
    if (!result) {
      return result;
    }
  }
  else
  {
    uint64_t result = v1[16];
    v1[16] = 0;
    if (!result) {
      return result;
    }
  }
  char v4 = *(uint64_t (**)(void))(*(void *)result + 8);

  return v4();
}

BOOL sub_10030D5A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (*(unsigned char *)(v1 + 8)) {
    return 1;
  }
  if (*(void *)(v1 + 112)) {
    return *(void *)(v1 + 272) != *(void *)(v1 + 264);
  }
  return 0;
}

uint64_t sub_10030D5DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  (*(void (**)(void *__return_ptr))(**(void **)(a1 + 8) + 16))(v8);
  sub_100046D58(v6, *(unsigned int *)(a1 + 16), v8);
  char v4 = operator new(0x108uLL);
  v4[1] = 0;
  v4[2] = 0;
  *char v4 = off_100454870;
  sub_1000458C4((uint64_t)(v4 + 4), (uint64_t)v6);
  *((_DWORD *)v4 + 32) = v7;
  *((_DWORD *)v4 + 6) = 8;
  *a2 = v4 + 3;
  a2[1] = v4;
  nullsub_9(v6);
  return nullsub_9(v8);
}

void sub_10030D6A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  std::__shared_weak_count::~__shared_weak_count(v23);
  operator delete(v25);
  nullsub_9(&a10);
  nullsub_9(&a23);
  _Unwind_Resume(a1);
}

void sub_10030D6C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  nullsub_9((uint64_t *)va);
  nullsub_9(va1);
  _Unwind_Resume(a1);
}

uint64_t sub_10030D6E4(uint64_t a1)
{
  *(void *)a1 = off_100466258;
  *(void *)(a1 + 8) = off_100465F10;
  uint64_t v2 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 120);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 16)) {
      return a1;
    }
    goto LABEL_6;
  }
  if (*(unsigned char *)(a1 + 16))
  {
LABEL_6:
    nullsub_95(a1 + 24);
    *(unsigned char *)(a1 + 16) = 0;
  }
  return a1;
}

void sub_10030D7DC(uint64_t a1)
{
  *(void *)a1 = off_100466258;
  *(void *)(a1 + 8) = off_100465F10;
  uint64_t v2 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 120);
  if (v3 && !atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
    if (!*(unsigned char *)(a1 + 16))
    {
LABEL_7:
      operator delete();
    }
  }
  else if (!*(unsigned char *)(a1 + 16))
  {
    goto LABEL_7;
  }
  nullsub_95(a1 + 24);
  *(unsigned char *)(a1 + 16) = 0;
  goto LABEL_7;
}

uint64_t sub_10030D8F4(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[15];
  a1[14] = 0;
  a1[15] = 0;
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t result = a1[16];
    a1[16] = 0;
    if (!result) {
      return result;
    }
  }
  else
  {
    uint64_t result = a1[16];
    a1[16] = 0;
    if (!result) {
      return result;
    }
  }
  char v4 = *(uint64_t (**)(void))(*(void *)result + 8);

  return v4();
}

BOOL sub_10030D9B4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    return 1;
  }
  if (*(void *)(a1 + 112)) {
    return *(void *)(a1 + 272) != *(void *)(a1 + 264);
  }
  return 0;
}

uint64_t sub_10030D9E4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v9 = 0;
  __int16 v10 = 0;
  v7[1] = 0;
  v7[2] = 0;
  v7[0] = off_10045D998;
  int v8 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  char v13 = 0;
  if (*(unsigned char *)(a1 + 16))
  {
    sub_1001A8530((uint64_t)v7, a1 + 24);
    if (*(unsigned char *)(a1 + 16))
    {
      nullsub_95(a1 + 24);
      *(unsigned char *)(a1 + 16) = 0;
    }
  }
  else
  {
    *(void *)(a1 + 272) += sub_1001A7744((uint64_t)v7, *(uint64_t **)(a1 + 128));
  }
  sub_10035F0AC((uint64_t)v6, (uint64_t)v7);
  char v4 = operator new(0x108uLL);
  v4[1] = 0;
  v4[2] = 0;
  *char v4 = off_100454870;
  sub_1001A84CC((uint64_t)(v4 + 4), (uint64_t)v6);
  *((_DWORD *)v4 + 6) = 10;
  *a2 = v4 + 3;
  a2[1] = v4;
  nullsub_95(v6);
  return nullsub_95(v7);
}

void sub_10030DAFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20)
{
  std::__shared_weak_count::~__shared_weak_count(v20);
  operator delete(v22);
  nullsub_95(&a9);
  nullsub_95(&a20);
  _Unwind_Resume(a1);
}

void sub_10030DB2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  nullsub_95(va);
  _Unwind_Resume(a1);
}

uint64_t sub_10030DB40(uint64_t a1)
{
  *(void *)a1 = off_1004662A8;
  if (*(unsigned char *)(a1 + 8))
  {
    sub_100315854((void *)(a1 + 16));
    *(unsigned char *)(a1 + 8) = 0;
  }
  return a1;
}

void sub_10030DB94(uint64_t a1)
{
  *(void *)a1 = off_1004662A8;
  if (*(unsigned char *)(a1 + 8))
  {
    sub_100315854((void *)(a1 + 16));
    *(unsigned char *)(a1 + 8) = 0;
  }

  operator delete();
}

void *sub_10030DC08(void *result)
{
  if (*((unsigned char *)result + 8))
  {
    uint64_t v1 = result;
    uint64_t result = sub_100315854(result + 2);
    *((unsigned char *)v1 + 8) = 0;
  }
  return result;
}

uint64_t sub_10030DC3C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_10030DC44@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (*(unsigned char *)(result + 8)
    && (uint64_t v3 = result,
        char v4 = (void *)(result + 16),
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(result + 16) + 16))(result + 16),
        (result & 1) != 0))
  {
    uint64_t result = (uint64_t)sub_100315A14((uint64_t)v4, a2);
    if (!*a2)
    {
      if (*(unsigned char *)(v3 + 8))
      {
        uint64_t result = (uint64_t)sub_100315854(v4);
        *(unsigned char *)(v3 + 8) = 0;
      }
    }
  }
  else
  {
    uint64_t v5 = qword_100492A88;
    *a2 = qword_100492A80;
    a2[1] = v5;
    if (v5) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
    }
  }
  return result;
}

void *sub_10030DD10(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

void sub_10030DDA4()
{
}

void *sub_10030DDB8()
{
  uint64_t result = operator new(0x10uLL);
  *uint64_t result = off_1004662F8;
  return result;
}

void sub_10030DDF0(uint64_t a1, void *a2)
{
  *a2 = off_1004662F8;
}

uint64_t sub_10030DE18@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return sub_10035F274(a2, a1);
}

uint64_t sub_10030DE20(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI24ARSessionStateIn"
                     "putEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI24ARSes"
                                "sionStateInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI24ARSessionStateInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI24ARSessionStateInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

_UNKNOWN **sub_10030DE90()
{
}

uint64_t sub_10030DE9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = off_100466388;
  sub_100170200(a2, (_DWORD *)(a1 + 8));
  int v5 = *(_DWORD *)(a1 + 8);
  uint64_t v6 = operator new(0x70uLL);
  v6[1] = 0;
  v6[2] = 0;
  *uint64_t v6 = off_1004660C8;
  uint64_t v7 = v6 + 3;
  wireless_diagnostics::google::protobuf::io::FileInputStream::FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)(v6 + 3), v5, -1);
  *(void *)(a1 + 16) = v6 + 3;
  *(void *)(a1 + 24) = v6;
  int v8 = operator new(0x68uLL);
  v8[1] = 0;
  void v8[2] = 0;
  *int v8 = off_100466118;
  v8[3] = v7;
  v8[5] = 0;
  v8[6] = 0;
  v8[4] = 0;
  *(void *)((char *)v8 + 54) = 0;
  *((_OWORD *)v8 + 4) = xmmword_1003E7100;
  int v9 = wireless_diagnostics::google::protobuf::io::CodedInputStream::default_recursion_limit_;
  *((_DWORD *)v8 + 20) = 0;
  *((_DWORD *)v8 + 21) = v9;
  v8[11] = 0;
  void v8[12] = 0;
  wireless_diagnostics::google::protobuf::io::CodedInputStream::Refresh((wireless_diagnostics::google::protobuf::io::CodedInputStream *)(v8 + 3));
  *(void *)(a1 + 32) = v8 + 3;
  *(void *)(a1 + 40) = v8;
  uint64_t v10 = *(void *)(a3 + 24);
  if (!v10) {
    goto LABEL_4;
  }
  if (v10 != a3)
  {
    uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 16))(v10);
LABEL_4:
    *(void *)(a1 + 72) = v10;
    return a1;
  }
  *(void *)(a1 + 72) = a1 + 48;
  (*(void (**)(void))(**(void **)(a3 + 24) + 24))(*(void *)(a3 + 24));
  return a1;
}

void sub_10030E038(_Unwind_Exception *a1)
{
  sub_1000BA884(v3);
  sub_1000BA884(v2 + 16);
  sub_100052AEC(v1);
  _Unwind_Resume(a1);
}

void sub_10030E078(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  sub_100052AEC(v1);
  _Unwind_Resume(a1);
}

void sub_10030E098(_Unwind_Exception *a1)
{
  sub_100052AEC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10030E0AC(uint64_t a1)
{
  *(void *)a1 = off_100466388;
  uint64_t v2 = a1 + 48;
  uint64_t v3 = *(void *)(a1 + 72);
  if (v3 == v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 32))(v2);
    char v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v4) {
      goto LABEL_8;
    }
  }
  else
  {
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
    char v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v4) {
      goto LABEL_8;
    }
  }
  if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    int v5 = *(std::__shared_weak_count **)(a1 + 24);
    if (!v5) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_8:
  int v5 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v5)
  {
LABEL_10:
    sub_100052AEC((int *)(a1 + 8));
    return a1;
  }
LABEL_9:
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_10;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  sub_100052AEC((int *)(a1 + 8));
  return a1;
}

void sub_10030E214(uint64_t a1)
{
  *(void *)a1 = off_100466388;
  uint64_t v2 = a1 + 48;
  uint64_t v3 = *(void *)(a1 + 72);
  if (v3 == v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 32))(v2);
    char v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v4) {
      goto LABEL_8;
    }
  }
  else
  {
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
    char v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v4) {
      goto LABEL_8;
    }
  }
  if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    int v5 = *(std::__shared_weak_count **)(a1 + 24);
    if (!v5) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
LABEL_8:
  int v5 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v5) {
    goto LABEL_12;
  }
LABEL_9:
  if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_12:
  sub_100052AEC((int *)(a1 + 8));

  operator delete();
}

void sub_10030E384(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[5];
  a1[4] = 0;
  a1[5] = 0;
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = (std::__shared_weak_count *)a1[3];
    a1[2] = 0;
    a1[3] = 0;
    if (!v3) {
      return;
    }
  }
  else
  {
    uint64_t v3 = (std::__shared_weak_count *)a1[3];
    a1[2] = 0;
    a1[3] = 0;
    if (!v3) {
      return;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

wireless_diagnostics::google::protobuf::io::CodedInputStream *sub_10030E460(uint64_t a1)
{
  uint64_t result = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (result)
  {
    uint64_t v3 = 0;
    int v2 = 0;
    return (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::GetDirectBufferPointer(result, (const void **)&v3, &v2);
  }
  return result;
}

void sub_10030E498(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (!v3)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream not avaialble");
    sub_10018E868((uint64_t)v17);
    sub_100266EAC(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<ARSessionStateInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = ARSessionStateInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 438, (uint64_t)v17);
  }
  unsigned int v16 = 0;
  int v5 = (char *)*((void *)v3 + 1);
  if ((unint64_t)v5 >= *((void *)v3 + 2) || *v5 < 0)
  {
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(v3, &v16) & 1) == 0)
    {
      __cxa_allocate_exception(0x40uLL);
      std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to parse the length");
      sub_10018E868((uint64_t)v15);
      sub_100266EAC(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<ARSessionStateInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = ARSessionStateInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 444, (uint64_t)v15);
    }
  }
  else
  {
    unsigned int v16 = *v5;
    *((void *)v3 + 1) = v5 + 1;
  }
  sub_100011394(v14);
  int v6 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(*(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32), v16);
  if ((wireless_diagnostics::google::protobuf::MessageLite::MergeFromCodedStream((wireless_diagnostics::google::protobuf::MessageLite *)v14, *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32)) & 1) == 0)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to parse the message");
    sub_10018E868((uint64_t)v13);
    sub_100266EAC(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<ARSessionStateInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = ARSessionStateInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 451, (uint64_t)v13);
  }
  uint64_t v7 = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (!*((unsigned char *)v7 + 36))
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to consume the whole message");
    sub_10018E868((uint64_t)v12);
    sub_100266EAC(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<ARSessionStateInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = ARSessionStateInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 454, (uint64_t)v12);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(v7, v6);
  uint64_t v8 = *(void *)(a1 + 72);
  if (!v8) {
    sub_10008F39C();
  }
  (*(void (**)(std::runtime_error *__return_ptr))(*(void *)v8 + 48))(&v10);
  int v9 = operator new(0x108uLL);
  v9[1] = 0;
  v9[2] = 0;
  void *v9 = off_100454870;
  v9[4] = v10.__vftable;
  *((_DWORD *)v9 + 10) = v10.__imp_.__imp_;
  sub_100018854((uint64_t)(v9 + 6), (uint64_t)v11);
  *((_DWORD *)v9 + 6) = 17;
  *a2 = v9 + 3;
  a2[1] = v9;
  sub_1000428B0((uint64_t)v11);
  sub_1000243FC(v14);
}

void sub_10030E7A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::runtime_error a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  long long v25 = *(void **)(v23 - 88);
  if (v25)
  {
    *(void *)(v23 - 80) = v25;
    operator delete(v25);
  }
  std::runtime_error::~runtime_error(&a9);
  _Unwind_Resume(a1);
}

void sub_10030E878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  __cxa_free_exception(v24);
  sub_1000243FC(&a24);
  _Unwind_Resume(a1);
}

void sub_10030E898(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10030E8AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  std::__shared_weak_count::~__shared_weak_count(v24);
  operator delete(v26);
  sub_1000428B0((uint64_t)&a11);
  sub_1000243FC(&a24);
  _Unwind_Resume(a1);
}

void sub_10030E8E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_1000243FC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_10030E8F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  sub_1000243FC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void *sub_10030E908(void *a1)
{
  int v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

void sub_10030E99C()
{
}

void *sub_10030E9B0()
{
  uint64_t result = operator new(0x10uLL);
  *uint64_t result = off_1004663D8;
  return result;
}

void sub_10030E9E8(uint64_t a1, void *a2)
{
  *a2 = off_1004663D8;
}

void *sub_10030EA10@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  return sub_10035F368(a2, a1);
}

uint64_t sub_10030EA18(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI23VIOEstimationInp"
                     "utEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI23VIOEs"
                                "timationInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI23VIOEstimationInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI23VIOEstimationInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

_UNKNOWN **sub_10030EA88()
{
}

uint64_t sub_10030EA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = off_100466468;
  sub_100170200(a2, (_DWORD *)(a1 + 8));
  int v5 = *(_DWORD *)(a1 + 8);
  int v6 = operator new(0x70uLL);
  v6[1] = 0;
  v6[2] = 0;
  *int v6 = off_1004660C8;
  uint64_t v7 = v6 + 3;
  wireless_diagnostics::google::protobuf::io::FileInputStream::FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)(v6 + 3), v5, -1);
  *(void *)(a1 + 16) = v6 + 3;
  *(void *)(a1 + 24) = v6;
  uint64_t v8 = operator new(0x68uLL);
  v8[1] = 0;
  void v8[2] = 0;
  *uint64_t v8 = off_100466118;
  v8[3] = v7;
  v8[5] = 0;
  v8[6] = 0;
  v8[4] = 0;
  *(void *)((char *)v8 + 54) = 0;
  *((_OWORD *)v8 + 4) = xmmword_1003E7100;
  int v9 = wireless_diagnostics::google::protobuf::io::CodedInputStream::default_recursion_limit_;
  *((_DWORD *)v8 + 20) = 0;
  *((_DWORD *)v8 + 21) = v9;
  v8[11] = 0;
  void v8[12] = 0;
  wireless_diagnostics::google::protobuf::io::CodedInputStream::Refresh((wireless_diagnostics::google::protobuf::io::CodedInputStream *)(v8 + 3));
  *(void *)(a1 + 32) = v8 + 3;
  *(void *)(a1 + 40) = v8;
  uint64_t v10 = *(void *)(a3 + 24);
  if (!v10) {
    goto LABEL_4;
  }
  if (v10 != a3)
  {
    uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 16))(v10);
LABEL_4:
    *(void *)(a1 + 72) = v10;
    return a1;
  }
  *(void *)(a1 + 72) = a1 + 48;
  (*(void (**)(void))(**(void **)(a3 + 24) + 24))(*(void *)(a3 + 24));
  return a1;
}

void sub_10030EC30(_Unwind_Exception *a1)
{
  sub_1000BA884(v3);
  sub_1000BA884(v2 + 16);
  sub_100052AEC(v1);
  _Unwind_Resume(a1);
}

void sub_10030EC70(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  sub_100052AEC(v1);
  _Unwind_Resume(a1);
}

void sub_10030EC90(_Unwind_Exception *a1)
{
  sub_100052AEC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10030ECA4(uint64_t a1)
{
  *(void *)a1 = off_100466468;
  uint64_t v2 = a1 + 48;
  uint64_t v3 = *(void *)(a1 + 72);
  if (v3 == v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 32))(v2);
    char v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v4) {
      goto LABEL_8;
    }
  }
  else
  {
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
    char v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v4) {
      goto LABEL_8;
    }
  }
  if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    int v5 = *(std::__shared_weak_count **)(a1 + 24);
    if (!v5) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_8:
  int v5 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v5)
  {
LABEL_10:
    sub_100052AEC((int *)(a1 + 8));
    return a1;
  }
LABEL_9:
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_10;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  sub_100052AEC((int *)(a1 + 8));
  return a1;
}

void sub_10030EE0C(uint64_t a1)
{
  *(void *)a1 = off_100466468;
  uint64_t v2 = a1 + 48;
  uint64_t v3 = *(void *)(a1 + 72);
  if (v3 == v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 32))(v2);
    char v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v4) {
      goto LABEL_8;
    }
  }
  else
  {
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
    char v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v4) {
      goto LABEL_8;
    }
  }
  if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    int v5 = *(std::__shared_weak_count **)(a1 + 24);
    if (!v5) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
LABEL_8:
  int v5 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v5) {
    goto LABEL_12;
  }
LABEL_9:
  if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_12:
  sub_100052AEC((int *)(a1 + 8));

  operator delete();
}

void sub_10030EF7C(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[5];
  a1[4] = 0;
  a1[5] = 0;
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = (std::__shared_weak_count *)a1[3];
    a1[2] = 0;
    a1[3] = 0;
    if (!v3) {
      return;
    }
  }
  else
  {
    uint64_t v3 = (std::__shared_weak_count *)a1[3];
    a1[2] = 0;
    a1[3] = 0;
    if (!v3) {
      return;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

wireless_diagnostics::google::protobuf::io::CodedInputStream *sub_10030F058(uint64_t a1)
{
  uint64_t result = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (result)
  {
    uint64_t v3 = 0;
    int v2 = 0;
    return (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::GetDirectBufferPointer(result, (const void **)&v3, &v2);
  }
  return result;
}

void sub_10030F090(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (!v3)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream not avaialble");
    sub_10018E868((uint64_t)v17);
    sub_100266EAC(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<VIOEstimationInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = VIOEstimationInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 438, (uint64_t)v17);
  }
  unsigned int v16 = 0;
  int v5 = (char *)*((void *)v3 + 1);
  if ((unint64_t)v5 >= *((void *)v3 + 2) || *v5 < 0)
  {
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(v3, &v16) & 1) == 0)
    {
      __cxa_allocate_exception(0x40uLL);
      std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to parse the length");
      sub_10018E868((uint64_t)v15);
      sub_100266EAC(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<VIOEstimationInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = VIOEstimationInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 444, (uint64_t)v15);
    }
  }
  else
  {
    unsigned int v16 = *v5;
    *((void *)v3 + 1) = v5 + 1;
  }
  sub_100011394(v14);
  int v6 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(*(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32), v16);
  if ((wireless_diagnostics::google::protobuf::MessageLite::MergeFromCodedStream((wireless_diagnostics::google::protobuf::MessageLite *)v14, *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32)) & 1) == 0)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to parse the message");
    sub_10018E868((uint64_t)v13);
    sub_100266EAC(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<VIOEstimationInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = VIOEstimationInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 451, (uint64_t)v13);
  }
  uint64_t v7 = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (!*((unsigned char *)v7 + 36))
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to consume the whole message");
    sub_10018E868((uint64_t)v12);
    sub_100266EAC(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<VIOEstimationInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = VIOEstimationInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 454, (uint64_t)v12);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(v7, v6);
  uint64_t v8 = *(void *)(a1 + 72);
  if (!v8) {
    sub_10008F39C();
  }
  (*(void (**)(std::runtime_error *__return_ptr))(*(void *)v8 + 48))(&v10);
  int v9 = operator new(0x108uLL);
  v9[1] = 0;
  v9[2] = 0;
  void *v9 = off_100454870;
  v9[4] = v10.__vftable;
  sub_1000EF490((uint64_t)(v9 + 5), (uint64_t)&v10.__imp_);
  sub_100018854((uint64_t)(v9 + 18), (uint64_t)v11);
  *((_DWORD *)v9 + 6) = 18;
  *a2 = v9 + 3;
  a2[1] = v9;
  sub_1000428B0((uint64_t)v11);
  sub_1000EF770(&v10.__imp_.__imp_);
  sub_1000243FC(v14);
}

void sub_10030F3B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::runtime_error a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  float64x2x2_t v35 = *(void **)(v33 - 104);
  if (v35)
  {
    *(void *)(v33 - 96) = v35;
    operator delete(v35);
  }
  std::runtime_error::~runtime_error(&a9);
  _Unwind_Resume(a1);
}

void sub_10030F48C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  sub_1000243FC((void *)(v2 - 168));
  _Unwind_Resume(a1);
}

void sub_10030F4AC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10030F4C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  uint64_t v20 = va_arg(va1, void);
  sub_1000EF770(v3);
  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v6);
  sub_1000428B0((uint64_t)va1);
  sub_1000EF770((uint64_t *)va);
  sub_1000243FC((void *)(v4 - 168));
  _Unwind_Resume(a1);
}

void sub_10030F50C(_Unwind_Exception *a1)
{
  sub_1000243FC((void *)(v1 - 168));
  _Unwind_Resume(a1);
}

void sub_10030F520(_Unwind_Exception *a1)
{
  sub_1000243FC((void *)(v1 - 168));
  _Unwind_Resume(a1);
}

void *sub_10030F534(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

void sub_10030F5C8()
{
}

void *sub_10030F5DC()
{
  uint64_t result = operator new(0x10uLL);
  *uint64_t result = off_1004664B8;
  return result;
}

void sub_10030F614(uint64_t a1, void *a2)
{
  *a2 = off_1004664B8;
}

void *sub_10030F63C@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  return sub_10035F4C4(a2, a1);
}

uint64_t sub_10030F644(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI30VLLocalizationRe"
                     "sultInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI30VLLoc"
                                "alizationResultInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI30VLLocalizationResultInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI30VLLocalizationResultInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

_UNKNOWN **sub_10030F6B4()
{
}

uint64_t sub_10030F6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = off_100466548;
  sub_100170200(a2, (_DWORD *)(a1 + 8));
  int v5 = *(_DWORD *)(a1 + 8);
  int v6 = operator new(0x70uLL);
  v6[1] = 0;
  v6[2] = 0;
  *int v6 = off_1004660C8;
  uint64_t v7 = v6 + 3;
  wireless_diagnostics::google::protobuf::io::FileInputStream::FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)(v6 + 3), v5, -1);
  *(void *)(a1 + 16) = v6 + 3;
  *(void *)(a1 + 24) = v6;
  uint64_t v8 = operator new(0x68uLL);
  v8[1] = 0;
  void v8[2] = 0;
  *uint64_t v8 = off_100466118;
  v8[3] = v7;
  v8[5] = 0;
  v8[6] = 0;
  v8[4] = 0;
  *(void *)((char *)v8 + 54) = 0;
  *((_OWORD *)v8 + 4) = xmmword_1003E7100;
  int v9 = wireless_diagnostics::google::protobuf::io::CodedInputStream::default_recursion_limit_;
  *((_DWORD *)v8 + 20) = 0;
  *((_DWORD *)v8 + 21) = v9;
  v8[11] = 0;
  void v8[12] = 0;
  wireless_diagnostics::google::protobuf::io::CodedInputStream::Refresh((wireless_diagnostics::google::protobuf::io::CodedInputStream *)(v8 + 3));
  *(void *)(a1 + 32) = v8 + 3;
  *(void *)(a1 + 40) = v8;
  uint64_t v10 = *(void *)(a3 + 24);
  if (!v10) {
    goto LABEL_4;
  }
  if (v10 != a3)
  {
    uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 16))(v10);
LABEL_4:
    *(void *)(a1 + 72) = v10;
    return a1;
  }
  *(void *)(a1 + 72) = a1 + 48;
  (*(void (**)(void))(**(void **)(a3 + 24) + 24))(*(void *)(a3 + 24));
  return a1;
}

void sub_10030F85C(_Unwind_Exception *a1)
{
  sub_1000BA884(v3);
  sub_1000BA884(v2 + 16);
  sub_100052AEC(v1);
  _Unwind_Resume(a1);
}

void sub_10030F89C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  sub_100052AEC(v1);
  _Unwind_Resume(a1);
}

void sub_10030F8BC(_Unwind_Exception *a1)
{
  sub_100052AEC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10030F8D0(uint64_t a1)
{
  *(void *)a1 = off_100466548;
  uint64_t v2 = a1 + 48;
  uint64_t v3 = *(void *)(a1 + 72);
  if (v3 == v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 32))(v2);
    uint64_t v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v4) {
      goto LABEL_8;
    }
  }
  else
  {
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
    uint64_t v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v4) {
      goto LABEL_8;
    }
  }
  if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    int v5 = *(std::__shared_weak_count **)(a1 + 24);
    if (!v5) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_8:
  int v5 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v5)
  {
LABEL_10:
    sub_100052AEC((int *)(a1 + 8));
    return a1;
  }
LABEL_9:
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_10;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  sub_100052AEC((int *)(a1 + 8));
  return a1;
}

void sub_10030FA38(uint64_t a1)
{
  *(void *)a1 = off_100466548;
  uint64_t v2 = a1 + 48;
  uint64_t v3 = *(void *)(a1 + 72);
  if (v3 == v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 32))(v2);
    uint64_t v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v4) {
      goto LABEL_8;
    }
  }
  else
  {
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
    uint64_t v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v4) {
      goto LABEL_8;
    }
  }
  if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    int v5 = *(std::__shared_weak_count **)(a1 + 24);
    if (!v5) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
LABEL_8:
  int v5 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v5) {
    goto LABEL_12;
  }
LABEL_9:
  if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_12:
  sub_100052AEC((int *)(a1 + 8));

  operator delete();
}

void sub_10030FBA8(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[5];
  a1[4] = 0;
  a1[5] = 0;
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = (std::__shared_weak_count *)a1[3];
    a1[2] = 0;
    a1[3] = 0;
    if (!v3) {
      return;
    }
  }
  else
  {
    uint64_t v3 = (std::__shared_weak_count *)a1[3];
    a1[2] = 0;
    a1[3] = 0;
    if (!v3) {
      return;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

wireless_diagnostics::google::protobuf::io::CodedInputStream *sub_10030FC84(uint64_t a1)
{
  uint64_t result = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (result)
  {
    uint64_t v3 = 0;
    int v2 = 0;
    return (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::GetDirectBufferPointer(result, (const void **)&v3, &v2);
  }
  return result;
}

void sub_10030FCBC(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (!v3)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream not avaialble");
    sub_10018E868((uint64_t)v17);
    sub_100266EAC(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<VLLocalizationResultInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = VLLocalizationResultInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 438, (uint64_t)v17);
  }
  unsigned int v16 = 0;
  int v5 = (char *)*((void *)v3 + 1);
  if ((unint64_t)v5 >= *((void *)v3 + 2) || *v5 < 0)
  {
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(v3, &v16) & 1) == 0)
    {
      __cxa_allocate_exception(0x40uLL);
      std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to parse the length");
      sub_10018E868((uint64_t)v15);
      sub_100266EAC(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<VLLocalizationResultInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = VLLocalizationResultInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 444, (uint64_t)v15);
    }
  }
  else
  {
    unsigned int v16 = *v5;
    *((void *)v3 + 1) = v5 + 1;
  }
  sub_100011394(v14);
  int v6 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(*(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32), v16);
  if ((wireless_diagnostics::google::protobuf::MessageLite::MergeFromCodedStream((wireless_diagnostics::google::protobuf::MessageLite *)v14, *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32)) & 1) == 0)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to parse the message");
    sub_10018E868((uint64_t)v13);
    sub_100266EAC(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<VLLocalizationResultInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = VLLocalizationResultInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 451, (uint64_t)v13);
  }
  uint64_t v7 = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (!*((unsigned char *)v7 + 36))
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to consume the whole message");
    sub_10018E868((uint64_t)v12);
    sub_100266EAC(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<VLLocalizationResultInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = VLLocalizationResultInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 454, (uint64_t)v12);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(v7, v6);
  uint64_t v8 = *(void *)(a1 + 72);
  if (!v8) {
    sub_10008F39C();
  }
  (*(void (**)(std::runtime_error *__return_ptr))(*(void *)v8 + 48))(&v10);
  int v9 = operator new(0x108uLL);
  v9[1] = 0;
  v9[2] = 0;
  void *v9 = off_100454870;
  v9[4] = v10.__vftable;
  sub_1000FA680((uint64_t)(v9 + 5), (uint64_t)&v10.__imp_);
  sub_100018854((uint64_t)(v9 + 14), (uint64_t)v11);
  *((_DWORD *)v9 + 6) = 19;
  *a2 = v9 + 3;
  a2[1] = v9;
  sub_1000428B0((uint64_t)v11);
  sub_1000FA868(&v10.__imp_);
  sub_1000243FC(v14);
}

void sub_10030FFE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::runtime_error a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  unint64_t v31 = *(void **)(v29 - 104);
  if (v31)
  {
    *(void *)(v29 - 96) = v31;
    operator delete(v31);
  }
  std::runtime_error::~runtime_error(&a9);
  _Unwind_Resume(a1);
}

void sub_1003100B8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  sub_1000243FC((void *)(v2 - 168));
  _Unwind_Resume(a1);
}

void sub_1003100D8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1003100EC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  sub_1000FA868(v3);
  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v6);
  sub_1000428B0((uint64_t)va1);
  sub_1000FA868((uint64_t *)va);
  sub_1000243FC((void *)(v4 - 168));
  _Unwind_Resume(a1);
}

void sub_100310138(_Unwind_Exception *a1)
{
  sub_1000243FC((void *)(v1 - 168));
  _Unwind_Resume(a1);
}

void sub_10031014C(_Unwind_Exception *a1)
{
  sub_1000243FC((void *)(v1 - 168));
  _Unwind_Resume(a1);
}

void *sub_100310160(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

void sub_1003101F4()
{
}

void *sub_100310208()
{
  uint64_t result = operator new(0x10uLL);
  *uint64_t result = off_100466598;
  return result;
}

void sub_100310240(uint64_t a1, void *a2)
{
  *a2 = off_100466598;
}

void *sub_100310268@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  return sub_10035F73C(a2, a1);
}

uint64_t sub_100310270(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI34OutdoorEstimator"
                     "LogEntryInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI34Outdo"
                                "orEstimatorLogEntryInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI34OutdoorEstimatorLogEntryInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN27input_event_stream_iterator47LocalizerEventStreamFromLengthDelimitedProtobufI34OutdoorEstimatorLogEntryInputEventN5proto3CLP8LogEntry8LogEntryEEC1ERKN5boost10filesystem4pathEEUlRKS5_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

_UNKNOWN **sub_1003102E0()
{
}

uint64_t sub_1003102EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = off_100466628;
  sub_100170200(a2, (_DWORD *)(a1 + 8));
  int v5 = *(_DWORD *)(a1 + 8);
  int v6 = operator new(0x70uLL);
  v6[1] = 0;
  v6[2] = 0;
  *int v6 = off_1004660C8;
  uint64_t v7 = v6 + 3;
  wireless_diagnostics::google::protobuf::io::FileInputStream::FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)(v6 + 3), v5, -1);
  *(void *)(a1 + 16) = v6 + 3;
  *(void *)(a1 + 24) = v6;
  uint64_t v8 = operator new(0x68uLL);
  v8[1] = 0;
  void v8[2] = 0;
  *uint64_t v8 = off_100466118;
  v8[3] = v7;
  v8[5] = 0;
  v8[6] = 0;
  v8[4] = 0;
  *(void *)((char *)v8 + 54) = 0;
  *((_OWORD *)v8 + 4) = xmmword_1003E7100;
  int v9 = wireless_diagnostics::google::protobuf::io::CodedInputStream::default_recursion_limit_;
  *((_DWORD *)v8 + 20) = 0;
  *((_DWORD *)v8 + 21) = v9;
  v8[11] = 0;
  void v8[12] = 0;
  wireless_diagnostics::google::protobuf::io::CodedInputStream::Refresh((wireless_diagnostics::google::protobuf::io::CodedInputStream *)(v8 + 3));
  *(void *)(a1 + 32) = v8 + 3;
  *(void *)(a1 + 40) = v8;
  uint64_t v10 = *(void *)(a3 + 24);
  if (!v10) {
    goto LABEL_4;
  }
  if (v10 != a3)
  {
    uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v10 + 16))(v10);
LABEL_4:
    *(void *)(a1 + 72) = v10;
    return a1;
  }
  *(void *)(a1 + 72) = a1 + 48;
  (*(void (**)(void))(**(void **)(a3 + 24) + 24))(*(void *)(a3 + 24));
  return a1;
}

void sub_100310488(_Unwind_Exception *a1)
{
  sub_1000BA884(v3);
  sub_1000BA884(v2 + 16);
  sub_100052AEC(v1);
  _Unwind_Resume(a1);
}

void sub_1003104C8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v4);
  sub_100052AEC(v1);
  _Unwind_Resume(a1);
}

void sub_1003104E8(_Unwind_Exception *a1)
{
  sub_100052AEC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1003104FC(uint64_t a1)
{
  *(void *)a1 = off_100466628;
  uint64_t v2 = a1 + 48;
  uint64_t v3 = *(void *)(a1 + 72);
  if (v3 == v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 32))(v2);
    uint64_t v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v4) {
      goto LABEL_8;
    }
  }
  else
  {
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
    uint64_t v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v4) {
      goto LABEL_8;
    }
  }
  if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    int v5 = *(std::__shared_weak_count **)(a1 + 24);
    if (!v5) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_8:
  int v5 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v5)
  {
LABEL_10:
    sub_100052AEC((int *)(a1 + 8));
    return a1;
  }
LABEL_9:
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    goto LABEL_10;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  sub_100052AEC((int *)(a1 + 8));
  return a1;
}

void sub_100310664(uint64_t a1)
{
  *(void *)a1 = off_100466628;
  uint64_t v2 = a1 + 48;
  uint64_t v3 = *(void *)(a1 + 72);
  if (v3 == v2)
  {
    (*(void (**)(uint64_t))(*(void *)v2 + 32))(v2);
    uint64_t v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v4) {
      goto LABEL_8;
    }
  }
  else
  {
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 40))(v3);
    }
    uint64_t v4 = *(std::__shared_weak_count **)(a1 + 40);
    if (!v4) {
      goto LABEL_8;
    }
  }
  if (!atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    int v5 = *(std::__shared_weak_count **)(a1 + 24);
    if (!v5) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
LABEL_8:
  int v5 = *(std::__shared_weak_count **)(a1 + 24);
  if (!v5) {
    goto LABEL_12;
  }
LABEL_9:
  if (!atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
LABEL_12:
  sub_100052AEC((int *)(a1 + 8));

  operator delete();
}

void sub_1003107D4(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[5];
  a1[4] = 0;
  a1[5] = 0;
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = (std::__shared_weak_count *)a1[3];
    a1[2] = 0;
    a1[3] = 0;
    if (!v3) {
      return;
    }
  }
  else
  {
    uint64_t v3 = (std::__shared_weak_count *)a1[3];
    a1[2] = 0;
    a1[3] = 0;
    if (!v3) {
      return;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

wireless_diagnostics::google::protobuf::io::CodedInputStream *sub_1003108B0(uint64_t a1)
{
  uint64_t result = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (result)
  {
    uint64_t v3 = 0;
    int v2 = 0;
    return (wireless_diagnostics::google::protobuf::io::CodedInputStream *)wireless_diagnostics::google::protobuf::io::CodedInputStream::GetDirectBufferPointer(result, (const void **)&v3, &v2);
  }
  return result;
}

void sub_1003108E8(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (!v3)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream not avaialble");
    sub_10018E868((uint64_t)v17);
    sub_100266EAC(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<OutdoorEstimatorLogEntryInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = OutdoorEstimatorLogEntryInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 438, (uint64_t)v17);
  }
  unsigned int v16 = 0;
  int v5 = (char *)*((void *)v3 + 1);
  if ((unint64_t)v5 >= *((void *)v3 + 2) || *v5 < 0)
  {
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(v3, &v16) & 1) == 0)
    {
      __cxa_allocate_exception(0x40uLL);
      std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to parse the length");
      sub_10018E868((uint64_t)v15);
      sub_100266EAC(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<OutdoorEstimatorLogEntryInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = OutdoorEstimatorLogEntryInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 444, (uint64_t)v15);
    }
  }
  else
  {
    unsigned int v16 = *v5;
    *((void *)v3 + 1) = v5 + 1;
  }
  sub_100011394(v14);
  int v6 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(*(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32), v16);
  if ((wireless_diagnostics::google::protobuf::MessageLite::MergeFromCodedStream((wireless_diagnostics::google::protobuf::MessageLite *)v14, *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32)) & 1) == 0)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to parse the message");
    sub_10018E868((uint64_t)v13);
    sub_100266EAC(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<OutdoorEstimatorLogEntryInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = OutdoorEstimatorLogEntryInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 451, (uint64_t)v13);
  }
  uint64_t v7 = *(wireless_diagnostics::google::protobuf::io::CodedInputStream **)(a1 + 32);
  if (!*((unsigned char *)v7 + 36))
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v10, "Protobuf stream eror: failed to consume the whole message");
    sub_10018E868((uint64_t)v12);
    sub_100266EAC(&v10, (uint64_t)"virtual LocalizerInputEvent input_event_stream_iterator::LocalizerEventStreamFromLengthDelimitedProtobuf<OutdoorEstimatorLogEntryInputEvent, proto::CLP::LogEntry::LogEntry>::read() [LocalizerEventType = OutdoorEstimatorLogEntryInputEvent, ProtobufT = proto::CLP::LogEntry::LogEntry]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/db/input_event_stream_iterator.h", 454, (uint64_t)v12);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(v7, v6);
  uint64_t v8 = *(void *)(a1 + 72);
  if (!v8) {
    sub_10008F39C();
  }
  (*(void (**)(std::runtime_error *__return_ptr))(*(void *)v8 + 48))(&v10);
  int v9 = operator new(0x108uLL);
  v9[1] = 0;
  v9[2] = 0;
  void *v9 = off_100454870;
  v9[4] = v10.__vftable;
  sub_1000FE5B4((uint64_t)(v9 + 5), (uint64_t)&v10.__imp_);
  sub_100018854((uint64_t)(v9 + 17), (uint64_t)v11);
  *((_DWORD *)v9 + 6) = 21;
  *a2 = v9 + 3;
  a2[1] = v9;
  sub_1000428B0((uint64_t)v11);
  sub_1000FE82C(&v10.__imp_.__imp_);
  sub_1000243FC(v14);
}

void sub_100310C10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::runtime_error a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  float64x2x2_t v35 = *(void **)(v33 - 104);
  if (v35)
  {
    *(void *)(v33 - 96) = v35;
    operator delete(v35);
  }
  std::runtime_error::~runtime_error(&a10);
  _Unwind_Resume(a1);
}

void sub_100310CE4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  sub_1000243FC((void *)(v2 - 168));
  _Unwind_Resume(a1);
}

void sub_100310D04(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100310D18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  uint64_t v20 = va_arg(va1, void);
  sub_1000FE82C(v4);
  std::__shared_weak_count::~__shared_weak_count(v3);
  operator delete(v7);
  sub_1000428B0((uint64_t)va1);
  sub_1000FE82C((uint64_t *)va);
  sub_1000243FC((void *)(v5 - 168));
  _Unwind_Resume(a1);
}

void sub_100310D64(_Unwind_Exception *a1)
{
  sub_1000243FC((void *)(v1 - 168));
  _Unwind_Resume(a1);
}

void sub_100310D78(_Unwind_Exception *a1)
{
  sub_1000243FC((void *)(v1 - 168));
  _Unwind_Resume(a1);
}

void sub_100310D8C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100310E04()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_100310E7C(uint64_t result, void *a2, void *a3, int a4, double a5)
{
  *(void *)uint64_t result = *a2;
  *(void *)(result + 8) = *a3;
  *(double *)(result + 16) = a5;
  *(_DWORD *)(result + 24) = a4;
  return result;
}

void sub_100310E98(uint64_t a1@<X8>)
{
  uint64_t v1 = qword_10047D098;
  *(void *)a1 = qword_10047D098;
  *(void *)(a1 + 8) = v1;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 2;
}

uint64_t sub_100310EB8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t *sub_100310EC0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *result;
  uint64_t v3 = result[1];
  uint64_t v4 = qword_10047D098;
  if (*result == v3)
  {
    int v5 = 2;
    double v9 = 0.0;
    uint64_t v7 = qword_10047D098;
  }
  else
  {
    int v5 = 0;
    double v6 = 0.0;
    uint64_t v7 = qword_10047D098;
    do
    {
      if ((v7 & 0x8000000000000000) == 0 && v7 != *(void *)v2)
      {
        sub_1000AE4B0(&__p, "");
        sub_100157138("LocalInPlaneHeadingRateOfChange entries must be back-to-back!", &buf);
        sub_10016A2C4((uint64_t)&__p, (uint64_t)&buf, 1);
        if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(buf.__r_.__value_.__l.__data_);
        }
        if (v13 < 0) {
          operator delete(__p.__vftable);
        }
        sub_1000D11E0((uint64_t)&v11);
      }
      uint64_t v7 = *(void *)(v2 + 8);
      if (v4 < 0) {
        uint64_t v4 = *(void *)v2;
      }
      int v8 = *(_DWORD *)(v2 + 24);
      if (v8 == 1)
      {
        int v5 = 1;
      }
      else if (v8 == 2)
      {
        __cxa_allocate_exception(0x40uLL);
        sub_1000AE4B0(&buf, "We shouldn't be running this code if we aren't converged.");
        std::runtime_error::runtime_error(&__p, &buf);
        __p.__vftable = (std::runtime_error_vtbl *)&off_100453860;
        sub_10018E868((uint64_t)v10);
        sub_1000D1698(&__p, (uint64_t)"static LocalInPlaneHeadingRateOfChange LocalInPlaneHeadingRateOfChange::aggregate(const std::vector<LocalInPlaneHeadingRateOfChange> &)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/local_in_plane_heading_rate_of_change.cpp", 93, (uint64_t)v10);
      }
      double v6 = v6 + *(double *)(v2 + 16) * ((double)(v7 - *(void *)v2) * 0.000000001);
      v2 += 32;
    }
    while (v2 != v3);
    double v9 = v6 / ((double)(v7 - v4) * 0.000000001);
  }
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v7;
  *(double *)(a2 + 16) = v9;
  *(_DWORD *)(a2 + 24) = v5;
  return result;
}

void sub_100311198(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, std::runtime_error a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a18 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100311224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v24);
    _Unwind_Resume(a1);
  }
  __cxa_free_exception(v24);
  _Unwind_Resume(a1);
}

void sub_10031125C(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

void sub_10031128C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100311304()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_10031137C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  *(_OWORD *)(a1 + 40) = 0u;
  uint64_t v3 = (void *)(a1 + 40);
  *(_OWORD *)(a1 + 56) = 0u;
  *(_DWORD *)(a1 + 72) = 1065353216;
  *(void *)(a1 + 80) = 0;
  uint64_t v4 = *(uint64_t ***)(a2 + 16);
  if (!v4) {
    return a1;
  }
  do
  {
    while (2)
    {
      uint64_t v5 = (*(uint64_t (**)(uint64_t *))(*v4[2] + 64))(v4[2]);
      double v6 = (double *)v4[3];
      uint64_t v7 = (double *)v4[4];
      for (double i = 0.0; v6 != v7; double i = i + v9)
        double v9 = *v6++;
      int v35 = 0;
      int v35 = *(_DWORD *)((*(uint64_t (**)(uint64_t *))(*v4[2] + 56))(v4[2]) + 1616);
      __p[0] = *(void **)&i;
      LODWORD(__p[1]) = v35;
      sub_1003122D4(a1, (uint64_t ***)v5, (const void **)v5, __p);
      *(double *)(a1 + 80) = i + *(double *)(a1 + 80);
      unint64_t v10 = *(void *)(a1 + 48);
      if (v10)
      {
        int v11 = v35;
        unint64_t v12 = v35;
        uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
        v13.i16[0] = vaddlv_u8(v13);
        if (v13.u32[0] > 1uLL)
        {
          unint64_t v14 = v35;
          if (v10 <= v35) {
            unint64_t v14 = v35 % v10;
          }
        }
        else
        {
          unint64_t v14 = (v10 - 1) & v35;
        }
        uint64_t v15 = *(uint64_t ***)(*v3 + 8 * v14);
        if (v15)
        {
          uint64_t v16 = *v15;
          if (v16)
          {
            if (v13.u32[0] < 2uLL)
            {
              while (1)
              {
                uint64_t v18 = v16[1];
                if (v18 == v35)
                {
                  if (*((_DWORD *)v16 + 4) == v35) {
                    goto LABEL_36;
                  }
                }
                else if ((v18 & (v10 - 1)) != v14)
                {
                  goto LABEL_26;
                }
                uint64_t v16 = (uint64_t *)*v16;
                if (!v16) {
                  goto LABEL_26;
                }
              }
            }
            do
            {
              unint64_t v17 = v16[1];
              if (v17 == v35)
              {
                if (*((_DWORD *)v16 + 4) == v35) {
                  goto LABEL_36;
                }
              }
              else
              {
                if (v17 >= v10) {
                  v17 %= v10;
                }
                if (v17 != v14) {
                  break;
                }
              }
              uint64_t v16 = (uint64_t *)*v16;
            }
            while (v16);
          }
        }
      }
LABEL_26:
      *(_OWORD *)std::runtime_error __p = 0u;
      long long v34 = 0u;
      sub_100312638((uint64_t)v3, &v35, &v35, (uint64_t)__p);
      uint64_t v19 = (char *)__p[1];
      if (__p[1])
      {
        uint64_t v20 = (char *)v34;
        uint64_t v21 = __p[1];
        if ((void *)v34 != __p[1])
        {
          do
          {
            uint64_t v22 = (std::__shared_weak_count *)*((void *)v20 - 1);
            if (v22 && !atomic_fetch_add(&v22->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
              std::__shared_weak_count::__release_weak(v22);
            }
            v20 -= 16;
          }
          while (v20 != v19);
          uint64_t v21 = __p[1];
        }
        *(void *)&long long v34 = v19;
        operator delete(v21);
      }
      int v11 = v35;
      unint64_t v10 = *(void *)(a1 + 48);
      unint64_t v12 = v35;
LABEL_36:
      if (!v10) {
        goto LABEL_61;
      }
      uint8x8_t v23 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
      v23.i16[0] = vaddlv_u8(v23);
      if (v23.u32[0] > 1uLL)
      {
        unint64_t v24 = v12;
        if (v10 <= v12) {
          unint64_t v24 = v12 % v10;
        }
      }
      else
      {
        unint64_t v24 = (v10 - 1) & v12;
      }
      long long v25 = *(uint64_t ***)(*v3 + 8 * v24);
      if (!v25 || (long long v26 = *v25) == 0) {
LABEL_61:
      }
        sub_10018E334("unordered_map::at: key not found");
      if (v23.u32[0] < 2uLL)
      {
        unint64_t v27 = v10 - 1;
        while (1)
        {
          uint64_t v29 = v26[1];
          if (v29 == v12)
          {
            if (*((_DWORD *)v26 + 4) == v11) {
              goto LABEL_56;
            }
          }
          else if ((v29 & v27) != v24)
          {
            goto LABEL_61;
          }
          long long v26 = (uint64_t *)*v26;
          if (!v26) {
            goto LABEL_61;
          }
        }
      }
      while (1)
      {
        unint64_t v28 = v26[1];
        if (v28 == v12) {
          break;
        }
        if (v28 >= v10) {
          v28 %= v10;
        }
        if (v28 != v24) {
          goto LABEL_61;
        }
LABEL_46:
        long long v26 = (uint64_t *)*v26;
        if (!v26) {
          goto LABEL_61;
        }
      }
      if (*((_DWORD *)v26 + 4) != v11) {
        goto LABEL_46;
      }
LABEL_56:
      *((double *)v26 + 3) = i + *((double *)v26 + 3);
      uint64_t v30 = (void *)v26[5];
      if ((unint64_t)v30 >= v26[6])
      {
        v26[5] = (uint64_t)sub_100017420((uint64_t)(v26 + 4), (void *)v5);
        uint64_t v4 = (uint64_t **)*v4;
        if (!v4) {
          return a1;
        }
        continue;
      }
      break;
    }
    void *v30 = *(void *)v5;
    uint64_t v31 = *(void *)(v5 + 8);
    v30[1] = v31;
    if (v31) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v31 + 8), 1uLL, memory_order_relaxed);
    }
    v26[5] = (uint64_t)(v30 + 2);
    uint64_t v4 = (uint64_t **)*v4;
  }
  while (v4);
  return a1;
}

void sub_100311760(_Unwind_Exception *a1)
{
  sub_100242B38(v2);
  sub_1000D8B48(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1003117B0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 16);
    uint64_t v4 = *(void **)(a1 + 8);
    if (v3 != v2)
    {
      do
      {
        uint64_t v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      uint64_t v4 = *(void **)(a1 + 8);
    }
    *(void *)(a1 + 16) = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_100311868(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (double *)a1[7];
  if (!v3) {
    goto LABEL_23;
  }
  uint64_t v5 = 0;
  double v6 = -INFINITY;
  do
  {
    if (v3[3] > v6 && v3[3] > 0.0)
    {
      uint64_t v5 = (uint64_t *)(v3 + 3);
      double v6 = v3[3];
    }
    uint64_t v3 = *(double **)v3;
  }
  while (v3);
  if (v5)
  {
    uint64_t v7 = *(void *)algn_10047ED48;
    *(void *)a2 = qword_10047ED40;
    *(void *)(a2 + 8) = v7;
    if (v7) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
    }
    uint64_t v8 = v5[1];
    uint64_t v9 = v5[2];
    if (v8 != v9)
    {
      double v10 = NAN;
      do
      {
        int v11 = sub_10006F50C(a1, (uint64_t ***)v8);
        if (!v11) {
          sub_10018E334("unordered_map::at: key not found");
        }
        double v12 = *((double *)v11 + 4);
        int v13 = sub_1000706F4((const void ***)a2, (unsigned __int8 ***)&qword_10047ED40);
        if (v12 > v10) {
          int v14 = 1;
        }
        else {
          int v14 = v13;
        }
        if (v14 == 1)
        {
          uint64_t v16 = *(uint64_t ***)v8;
          uint64_t v15 = *(void *)(v8 + 8);
          if (v15) {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(v15 + 8), 1uLL, memory_order_relaxed);
          }
          unint64_t v17 = *(std::__shared_weak_count **)(a2 + 8);
          *(void *)a2 = v16;
          *(void *)(a2 + 8) = v15;
          if (v17)
          {
            if (!atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
            {
              ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
              std::__shared_weak_count::__release_weak(v17);
            }
          }
          double v10 = v12;
        }
        v8 += 16;
      }
      while (v8 != v9);
    }
  }
  else
  {
LABEL_23:
    uint64_t v18 = *(void *)algn_10047ED48;
    *(void *)a2 = qword_10047ED40;
    *(void *)(a2 + 8) = v18;
    if (v18) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v18 + 8), 1uLL, memory_order_relaxed);
    }
  }
}

void sub_100311A04(_Unwind_Exception *a1)
{
  sub_100198250(v1);
  _Unwind_Resume(a1);
}

void sub_100311A18(_Unwind_Exception *a1)
{
  sub_100198250(v1);
  _Unwind_Resume(a1);
}

double sub_100311A2C(uint64_t a1, const void ***a2)
{
  char v4 = sub_1000706F4(a2, (unsigned __int8 ***)&qword_10047ED40);
  double result = 0.0;
  if ((v4 & 1) == 0)
  {
    double v6 = sub_10006F50C((void *)a1, (uint64_t ***)a2);
    if (!v6) {
      goto LABEL_25;
    }
    int8x8_t v7 = *(int8x8_t *)(a1 + 48);
    if (!*(void *)&v7) {
      goto LABEL_25;
    }
    unint64_t v8 = *((int *)v6 + 10);
    uint8x8_t v9 = (uint8x8_t)vcnt_s8(v7);
    v9.i16[0] = vaddlv_u8(v9);
    if (v9.u32[0] > 1uLL)
    {
      unint64_t v10 = *((int *)v6 + 10);
      if (*(void *)&v7 <= v8) {
        unint64_t v10 = v8 % *(void *)&v7;
      }
    }
    else
    {
      unint64_t v10 = (*(void *)&v7 - 1) & v8;
    }
    int v11 = *(double ***)(*(void *)(a1 + 40) + 8 * v10);
    if (!v11 || (double v12 = *v11) == 0) {
LABEL_25:
    }
      sub_10018E334("unordered_map::at: key not found");
    if (v9.u32[0] < 2uLL)
    {
      uint64_t v13 = *(void *)&v7 - 1;
      while (1)
      {
        uint64_t v15 = *((void *)v12 + 1);
        if (v15 == v8)
        {
          if (*((_DWORD *)v12 + 4) == v8) {
            return v12[3] / *(double *)(a1 + 80);
          }
        }
        else if ((v15 & v13) != v10)
        {
          goto LABEL_25;
        }
        double v12 = *(double **)v12;
        if (!v12) {
          goto LABEL_25;
        }
      }
    }
    while (1)
    {
      unint64_t v14 = *((void *)v12 + 1);
      if (v14 == v8)
      {
        if (*((_DWORD *)v12 + 4) == v8) {
          return v12[3] / *(double *)(a1 + 80);
        }
      }
      else
      {
        if (v14 >= *(void *)&v7) {
          v14 %= *(void *)&v7;
        }
        if (v14 != v10) {
          goto LABEL_25;
        }
      }
      double v12 = *(double **)v12;
      if (!v12) {
        goto LABEL_25;
      }
    }
  }
  return result;
}

uint64_t sub_100311B64(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  unint64_t v6 = (v4 - *a2) >> 3;
  if (v6 != (uint64_t)(a3[1] - *a3) >> 4)
  {
    sub_1000AE4B0(v16, "");
    sub_10016A2C4((uint64_t)v16, 0, 0);
    if (SHIBYTE(v17[0]) < 0) {
      operator delete(v16[0]);
    }
    sub_10014B3FC((uint64_t)&v19);
  }
  sub_10000C898((uint64_t)v16);
  uint64_t v7 = v17[0];
  *(_DWORD *)((char *)&v17[1] + *(void *)(v17[0] - 24)) = *(_DWORD *)((unsigned char *)&v17[1] + *(void *)(v17[0] - 24)) & 0xFFFFFEFB | 4;
  *(void *)((char *)&v17[2] + *(void *)(v7 - 24)) = 1;
  if (v4 != v5)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    if (v6 <= 1) {
      unint64_t v6 = 1;
    }
    do
    {
      unint64_t v10 = (void *)std::ostream::operator<<();
      int v11 = sub_10002986C(v10, (uint64_t)" @ L", 4);
      double v12 = sub_100029C00(v11, (uint64_t **)(*a3 + v8));
      sub_10002986C(v12, (uint64_t)" | ", 3);
      ++v9;
      v8 += 16;
    }
    while (v6 != v9);
  }
  uint64_t v13 = (void *)std::ostream::operator<<();
  sub_10002986C(v13, (uint64_t)" offmap", 7);
  std::stringbuf::str();
  *(void **)((char *)v16
  v17[0] = v14;
  if (v18 < 0) {
    operator delete((void *)v17[9]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return std::ios::~ios();
}

void sub_100311E5C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 - 97) < 0) {
    operator delete(*(void **)(v1 - 120));
  }
  _Unwind_Resume(exception_object);
}

void sub_100311E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100311E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100311EA0(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v43 = 0;
  long long v44 = 0;
  long long v45 = 0;
  unint64_t v8 = *(void *)(a1 + 24);
  if (v8)
  {
    if (v8 >> 61) {
      sub_1000A9108();
    }
    uint64_t v43 = (double *)operator new(8 * v8);
    long long v44 = v43;
    long long v45 = &v43[v8];
  }
  sub_100097908((uint64_t)a2, v8);
  uint64_t v42 = a3;
  double v9 = *(double *)(a1 + 80);
  double v10 = v9 * a4 / (1.0 - a4);
  double v11 = v9 + v10;
  double v12 = (v9 + v10) / v9;
  uint64_t v13 = *(uint64_t ****)(a1 + 16);
  if (v13)
  {
    while (1)
    {
      if (sub_1000706F4((const void ***)v13 + 2, (unsigned __int8 ***)&qword_10047ED40))
      {
        double v15 = v12 * (0.0 * *(double *)(a1 + 80) / v11);
        unint64_t v17 = v44;
        uint64_t v16 = v45;
        if (v44 >= v45) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t v19 = sub_10006F50C((void *)a1, v13 + 2);
        if (!v19) {
          sub_10018E334("unordered_map::at: key not found");
        }
        double v15 = v12 * (*((double *)v19 + 4) / *(double *)(a1 + 80) * *(double *)(a1 + 80) / v11);
        unint64_t v17 = v44;
        uint64_t v16 = v45;
        if (v44 >= v45)
        {
LABEL_12:
          uint64_t v20 = v43;
          uint64_t v21 = v17 - v43;
          unint64_t v22 = v21 + 1;
          if ((unint64_t)(v21 + 1) >> 61) {
            sub_1000A9108();
          }
          uint64_t v23 = (char *)v16 - (char *)v43;
          if (v23 >> 2 > v22) {
            unint64_t v22 = v23 >> 2;
          }
          if ((unint64_t)v23 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v24 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v24 = v22;
          }
          if (v24)
          {
            if (v24 >> 61) {
              sub_1000A6A10();
            }
            long long v25 = operator new(8 * v24);
            long long v26 = (double *)&v25[8 * v21];
            *long long v26 = v15;
            uint64_t v18 = (uint64_t)(v26 + 1);
            if (v17 == v43) {
              goto LABEL_29;
            }
LABEL_23:
            unint64_t v27 = (char *)(v17 - 1) - (char *)v43;
            if (v27 < 0x58) {
              goto LABEL_52;
            }
            if ((unint64_t)((char *)v43 - v25) < 0x20) {
              goto LABEL_52;
            }
            uint64_t v28 = (v27 >> 3) + 1;
            uint64_t v29 = 8 * (v28 & 0x3FFFFFFFFFFFFFFCLL);
            uint64_t v30 = &v17[v29 / 0xFFFFFFFFFFFFFFF8];
            long long v26 = (double *)((char *)v26 - v29);
            uint64_t v31 = &v25[8 * v21 - 16];
            uint64_t v32 = v17 - 2;
            uint64_t v33 = v28 & 0x3FFFFFFFFFFFFFFCLL;
            do
            {
              long long v34 = *(_OWORD *)v32;
              *(v31 - 1) = *((_OWORD *)v32 - 1);
              *uint64_t v31 = v34;
              v31 -= 2;
              v32 -= 4;
              v33 -= 4;
            }
            while (v33);
            unint64_t v17 = v30;
            if (v28 != (v28 & 0x3FFFFFFFFFFFFFFCLL))
            {
LABEL_52:
              do
              {
                uint64_t v35 = *((void *)v17-- - 1);
                *((void *)v26-- - 1) = v35;
              }
              while (v17 != v43);
            }
          }
          else
          {
            long long v25 = 0;
            long long v26 = (double *)(8 * v21);
            *(double *)(8 * v21) = v15;
            uint64_t v18 = 8 * v21 + 8;
            if (v17 != v43) {
              goto LABEL_23;
            }
          }
LABEL_29:
          uint64_t v43 = v26;
          long long v45 = (double *)&v25[8 * v24];
          if (v20) {
            operator delete(v20);
          }
          goto LABEL_31;
        }
      }
      *unint64_t v17 = v15;
      uint64_t v18 = (uint64_t)(v17 + 1);
LABEL_31:
      long long v44 = (double *)v18;
      int64_t v36 = (void *)a2[1];
      if ((unint64_t)v36 >= a2[2])
      {
        uint64_t v14 = sub_100017420((uint64_t)a2, v13 + 2);
        a2[1] = v14;
        uint64_t v13 = (uint64_t ***)*v13;
        if (!v13) {
          goto LABEL_35;
        }
      }
      else
      {
        void *v36 = v13[2];
        v37 = v13[3];
        v36[1] = v37;
        if (v37) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)v37 + 1, 1uLL, memory_order_relaxed);
        }
        uint64_t v14 = v36 + 2;
        a2[1] = v36 + 2;
        uint64_t v13 = (uint64_t ***)*v13;
        if (!v13) {
          goto LABEL_35;
        }
      }
    }
  }
  uint64_t v14 = (void *)a2[1];
LABEL_35:
  size_t v38 = (char *)v44 - (char *)v43;
  uint64_t v39 = v44 - v43;
  if (v39 != ((uint64_t)v14 - *a2) >> 4)
  {
    sub_1000AE4B0(__p, "");
    sub_10016A2C4((uint64_t)__p, 0, 0);
    if (v48 < 0) {
      operator delete(__p[0]);
    }
    sub_1000D11E0((uint64_t)&v46);
  }
  *(void *)uint64_t v42 = 0;
  *(void *)(v42 + 8) = 0;
  *(void *)(v42 + 16) = 0;
  if (v44 != v43)
  {
    if ((v38 & 0x8000000000000000) != 0) {
      sub_1000A9108();
    }
    uint64_t v40 = (char *)operator new(v38);
    *(void *)uint64_t v42 = v40;
    uint64_t v41 = &v40[8 * v39];
    *(void *)(v42 + 16) = v41;
    memcpy(v40, v43, v38);
    *(void *)(v42 + 8) = v41;
  }
  *(double *)(v42 + 24) = v10 / v11 * v12;
  if (v43) {
    operator delete(v43);
  }
}

void sub_100312270(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a10) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

const void **sub_1003122D4(uint64_t a1, uint64_t ***a2, const void **a3, _OWORD *a4)
{
  unint64_t v9 = sub_100077F68((uint64_t)v35, a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    uint64_t v13 = *(const void ****)(*(void *)a1 + 8 * v4);
    if (v13)
    {
      uint64_t v14 = *v13;
      if (*v13)
      {
        if (v12.u32[0] < 2uLL)
        {
          while (1)
          {
            unint64_t v16 = (unint64_t)v14[1];
            if (v16 == v10)
            {
              if (sub_1000706F4((const void ***)v14 + 2, (unsigned __int8 ***)a2)) {
                return v14;
              }
            }
            else if ((v16 & (v11 - 1)) != v4)
            {
              goto LABEL_23;
            }
            uint64_t v14 = (const void **)*v14;
            if (!v14) {
              goto LABEL_23;
            }
          }
        }
        do
        {
          unint64_t v15 = (unint64_t)v14[1];
          if (v15 == v10)
          {
            if (sub_1000706F4((const void ***)v14 + 2, (unsigned __int8 ***)a2)) {
              return v14;
            }
          }
          else
          {
            if (v15 >= v11) {
              v15 %= v11;
            }
            if (v15 != v4) {
              break;
            }
          }
          uint64_t v14 = (const void **)*v14;
        }
        while (v14);
      }
    }
  }
LABEL_23:
  unint64_t v17 = (const void ***)(a1 + 16);
  uint64_t v18 = (const void **)operator new(0x30uLL);
  uint64_t v14 = v18;
  v35[0] = v18;
  v35[1] = a1 + 16;
  void *v18 = 0;
  v18[1] = (const void *)v10;
  uint64_t v19 = (atomic_ullong *)a3[1];
  v18[2] = *a3;
  v18[3] = v19;
  if (v19) {
    atomic_fetch_add_explicit(v19 + 1, 1uLL, memory_order_relaxed);
  }
  *((_OWORD *)v18 + 2) = *a4;
  char v36 = 1;
  float v20 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v21 = *(float *)(a1 + 32);
  if (v11 && (float)(v21 * (float)v11) >= v20)
  {
    uint64_t v22 = *(void *)a1;
    uint64_t v23 = *(const void ****)(*(void *)a1 + 8 * v4);
    if (v23)
    {
LABEL_28:
      void *v14 = *v23;
LABEL_63:
      *uint64_t v23 = v14;
      goto LABEL_64;
    }
  }
  else
  {
    BOOL v24 = 1;
    if (v11 >= 3) {
      BOOL v24 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v25 = v24 | (2 * v11);
    unint64_t v26 = vcvtps_u32_f32(v20 / v21);
    if (v25 <= v26) {
      size_t prime = v26;
    }
    else {
      size_t prime = v25;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
    }
    int8x8_t v28 = *(int8x8_t *)(a1 + 8);
    if (prime > *(void *)&v28) {
      goto LABEL_39;
    }
    if (prime < *(void *)&v28)
    {
      unint64_t v29 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(void *)&v28 < 3uLL || (uint8x8_t v30 = (uint8x8_t)vcnt_s8(v28), v30.i16[0] = vaddlv_u8(v30), v30.u32[0] > 1uLL))
      {
        unint64_t v29 = std::__next_prime(v29);
      }
      else
      {
        uint64_t v31 = 1 << -(char)__clz(v29 - 1);
        if (v29 >= 2) {
          unint64_t v29 = v31;
        }
      }
      if (prime <= v29) {
        size_t prime = v29;
      }
      if (prime < *(void *)&v28) {
LABEL_39:
      }
        sub_10006338C(a1, prime);
    }
    unint64_t v11 = *(void *)(a1 + 8);
    unint64_t v32 = v11 - 1;
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
      {
        unint64_t v4 = v10 % v11;
        uint64_t v22 = *(void *)a1;
        uint64_t v23 = *(const void ****)(*(void *)a1 + 8 * (v10 % v11));
        if (v23) {
          goto LABEL_28;
        }
      }
      else
      {
        unint64_t v4 = v10;
        uint64_t v22 = *(void *)a1;
        uint64_t v23 = *(const void ****)(*(void *)a1 + 8 * v10);
        if (v23) {
          goto LABEL_28;
        }
      }
    }
    else
    {
      unint64_t v4 = v32 & v10;
      uint64_t v22 = *(void *)a1;
      uint64_t v23 = *(const void ****)(*(void *)a1 + 8 * (v32 & v10));
      if (v23) {
        goto LABEL_28;
      }
    }
  }
  void *v14 = *v17;
  *unint64_t v17 = v14;
  *(void *)(v22 + 8 * v4) = v17;
  if (*v14)
  {
    unint64_t v33 = *((void *)*v14 + 1);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v33 >= v11) {
        v33 %= v11;
      }
    }
    else
    {
      v33 &= v11 - 1;
    }
    uint64_t v23 = (const void ***)(*(void *)a1 + 8 * v33);
    goto LABEL_63;
  }
LABEL_64:
  ++*(void *)(a1 + 24);
  return v14;
}

void sub_100312624(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10022B004((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_100312638(uint64_t a1, int *a2, _DWORD *a3, uint64_t a4)
{
  unint64_t v8 = *a2;
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v4 = *a2;
      if (v9 <= v8) {
        unint64_t v4 = v8 % v9;
      }
    }
    else
    {
      unint64_t v4 = (v9 - 1) & v8;
    }
    unint64_t v11 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v11)
    {
      uint8x8_t v12 = *v11;
      if (*v11)
      {
        if (v10.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v14 = v12[1];
            if (v14 == v8)
            {
              if (*((_DWORD *)v12 + 4) == v8) {
                return v12;
              }
            }
            else if ((v14 & (v9 - 1)) != v4)
            {
              goto LABEL_23;
            }
            uint8x8_t v12 = (void *)*v12;
            if (!v12) {
              goto LABEL_23;
            }
          }
        }
        do
        {
          unint64_t v13 = v12[1];
          if (v13 == v8)
          {
            if (*((_DWORD *)v12 + 4) == v8) {
              return v12;
            }
          }
          else
          {
            if (v13 >= v9) {
              v13 %= v9;
            }
            if (v13 != v4) {
              break;
            }
          }
          uint8x8_t v12 = (void *)*v12;
        }
        while (v12);
      }
    }
  }
LABEL_23:
  unint64_t v15 = (void *)(a1 + 16);
  uint8x8_t v12 = operator new(0x38uLL);
  *uint8x8_t v12 = 0;
  v12[1] = v8;
  *((_DWORD *)v12 + 4) = *a3;
  v12[3] = *(void *)a4;
  *((_OWORD *)v12 + 2) = *(_OWORD *)(a4 + 8);
  v12[6] = *(void *)(a4 + 24);
  *(void *)(a4 + 8) = 0;
  *(void *)(a4 + 16) = 0;
  *(void *)(a4 + 24) = 0;
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (v9 && (float)(v17 * (float)v9) >= v16)
  {
    uint64_t v18 = *(void *)a1;
    uint64_t v19 = *(void **)(*(void *)a1 + 8 * v4);
    if (v19)
    {
LABEL_26:
      *uint8x8_t v12 = *v19;
LABEL_61:
      *uint64_t v19 = v12;
      goto LABEL_62;
    }
  }
  else
  {
    BOOL v20 = 1;
    if (v9 >= 3) {
      BOOL v20 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v21 = v20 | (2 * v9);
    unint64_t v22 = vcvtps_u32_f32(v16 / v17);
    if (v21 <= v22) {
      size_t prime = v22;
    }
    else {
      size_t prime = v21;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
    }
    int8x8_t v24 = *(int8x8_t *)(a1 + 8);
    if (prime > *(void *)&v24) {
      goto LABEL_37;
    }
    if (prime < *(void *)&v24)
    {
      unint64_t v25 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(void *)&v24 < 3uLL || (uint8x8_t v26 = (uint8x8_t)vcnt_s8(v24), v26.i16[0] = vaddlv_u8(v26), v26.u32[0] > 1uLL))
      {
        unint64_t v25 = std::__next_prime(v25);
      }
      else
      {
        uint64_t v27 = 1 << -(char)__clz(v25 - 1);
        if (v25 >= 2) {
          unint64_t v25 = v27;
        }
      }
      if (prime <= v25) {
        size_t prime = v25;
      }
      if (prime < *(void *)&v24) {
LABEL_37:
      }
        sub_10006338C(a1, prime);
    }
    unint64_t v9 = *(void *)(a1 + 8);
    unint64_t v28 = v9 - 1;
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v9 <= v8)
      {
        unint64_t v4 = v8 % v9;
        uint64_t v18 = *(void *)a1;
        uint64_t v19 = *(void **)(*(void *)a1 + 8 * (v8 % v9));
        if (v19) {
          goto LABEL_26;
        }
      }
      else
      {
        unint64_t v4 = v8;
        uint64_t v18 = *(void *)a1;
        uint64_t v19 = *(void **)(*(void *)a1 + 8 * v8);
        if (v19) {
          goto LABEL_26;
        }
      }
    }
    else
    {
      unint64_t v4 = v28 & v8;
      uint64_t v18 = *(void *)a1;
      uint64_t v19 = *(void **)(*(void *)a1 + 8 * (v28 & v8));
      if (v19) {
        goto LABEL_26;
      }
    }
  }
  *uint8x8_t v12 = *v15;
  *unint64_t v15 = v12;
  *(void *)(v18 + 8 * v4) = v15;
  if (*v12)
  {
    unint64_t v29 = *(void *)(*v12 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v29 >= v9) {
        v29 %= v9;
      }
    }
    else
    {
      v29 &= v9 - 1;
    }
    uint64_t v19 = (void *)(*(void *)a1 + 8 * v29);
    goto LABEL_61;
  }
LABEL_62:
  ++*(void *)(a1 + 24);
  return v12;
}

void sub_100312974(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_10025AED4((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100312988()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100312A00()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void *sub_100312A78(void *a1)
{
  *a1 = off_1004666B8;
  sub_10019BD98(a1 + 1);
  return a1;
}

void *sub_100312ABC(void *a1)
{
  *a1 = off_1004666B8;
  sub_10019BBC8(a1 + 1);
  return a1;
}

void sub_100312B00(void *a1)
{
  *a1 = off_1004666B8;
  sub_10019BBC8(a1 + 1);

  operator delete();
}

char *sub_100312B64@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[176])
  {
    if (result[39] < 0)
    {
      return (char *)sub_1000559FC((unsigned char *)a2, *((void **)result + 2), *((void *)result + 3));
    }
    else
    {
      *(_OWORD *)a2 = *((_OWORD *)result + 1);
      *(void *)(a2 + 16) = *((void *)result + 4);
    }
  }
  else if (result[63] < 0)
  {
    return (char *)sub_1000559FC((unsigned char *)a2, *((void **)result + 5), *((void *)result + 6));
  }
  else
  {
    *(_OWORD *)a2 = *(_OWORD *)(result + 40);
    *(void *)(a2 + 16) = *((void *)result + 7);
  }
  return result;
}

void sub_100312BC4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_DWORD *)(a2 + 32) = 1065353216;
  uint64_t v3 = *(void *)(a1 + 88);
  for (uint64_t i = *(void *)(a1 + 96); v3 != i; v3 += 24)
  {
    sub_100085B24(&v6, v3);
    sub_10002BB0C(a2, &v6, (uint64_t)&v6);
    uint64_t v5 = v7;
    if (v7)
    {
      if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
        std::__shared_weak_count::__release_weak(v5);
      }
    }
  }
}

void sub_100312C90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100198250((uint64_t)&a9);
  sub_1000D8B48(v9);
  _Unwind_Resume(a1);
}

void sub_100312CAC(_Unwind_Exception *a1)
{
  sub_1000D8B48(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100312CC0()
{
  if (qword_10047E0F0 != -1) {
    dispatch_once(&qword_10047E0F0, &stru_100466700);
  }
  return byte_10047E0EA;
}

void sub_100312D10(id a1)
{
  if ((MGIsDeviceOfType() & 1) != 0
    || (MGIsDeviceOfType() & 1) != 0
    || (MGIsDeviceOfType() & 1) != 0
    || (MGIsDeviceOfType() & 1) != 0
    || MGIsDeviceOfType()
    || (MGIsDeviceOfType() & 1) != 0
    || (MGIsDeviceOfType() & 1) != 0
    || (MGIsDeviceOfType() & 1) != 0
    || MGIsDeviceOfType()
    || (MGIsDeviceOfType() & 1) != 0
    || (MGIsDeviceOfType() & 1) != 0
    || (MGIsDeviceOfType() & 1) != 0
    || MGIsDeviceOfType()
    || (MGIsDeviceOfType() & 1) != 0
    || (MGIsDeviceOfType() & 1) != 0
    || (MGIsDeviceOfType() & 1) != 0
    || MGIsDeviceOfType()
    || (MGIsDeviceOfType() & 1) != 0
    || (MGIsDeviceOfType() & 1) != 0)
  {
    char v1 = 1;
  }
  else
  {
    char v1 = MGIsDeviceOfType();
  }
  byte_10047E0EA = v1;
}

void sub_100313084(id a1)
{
  CFBooleanRef v1 = (const __CFBoolean *)MGCopyAnswer();
  if (v1)
  {
    CFBooleanRef v2 = v1;
    CFTypeID v3 = CFGetTypeID(v1);
    if (v3 == CFBooleanGetTypeID() && CFBooleanGetValue(v2) == 1) {
      byte_10047E0EB = 1;
    }
    CFRelease(v2);
  }
}

void sub_100313108()
{
}

uint64_t sub_100313130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = off_100466750;
  uint64_t v6 = a1 + 48;
  uint64_t v7 = a1 + 8;
  uint64_t v8 = sub_10031B658(a2);
  sub_100329A54(v7, v8);
  int v22 = sub_1001E0EE0(a2);
  int v21 = sub_10031B5EC(a2);
  int v20 = sub_10031B5F8(a2);
  int v19 = sub_10031B604(a2);
  sub_1000741D0(v18, &v20, &v19);
  sub_1002A6200(v6, &v22, &v21, v18);
  *(double *)(a1 + 64) = sub_100270918(a3, a2);
  *(void *)(a1 + 72) = v9;
  *(void *)(a1 + 80) = v10;
  *(void *)(a1 + 88) = v11;
  uint64_t v12 = *(void *)(a3 + 40);
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 96) = v12;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  uint64_t v13 = sub_1000D7EFC(a2);
  sub_1002FF5F0((uint64_t)v18, v13);
  sub_1002FF630((uint64_t)v18, (unint64_t *)&v16);
  uint64_t v14 = *(void **)(a1 + 104);
  if (v14)
  {
    *(void *)(a1 + 112) = v14;
    operator delete(v14);
    *(void *)(a1 + 104) = 0;
    *(void *)(a1 + 112) = 0;
    *(void *)(a1 + 120) = 0;
  }
  *(_OWORD *)(a1 + 104) = v16;
  *(void *)(a1 + 120) = v17;
  *(_DWORD *)(a1 + 128) = ~(-1 << sub_1002FF628((uint64_t)v18));
  return a1;
}

void sub_100313288(_Unwind_Exception *a1)
{
  uint64_t v5 = *v3;
  if (*v3)
  {
    *(void *)(v2 + 112) = v5;
    operator delete(v5);
    sub_100329AF0(v1);
    _Unwind_Resume(a1);
  }
  sub_100329AF0(v1);
  _Unwind_Resume(a1);
}

BOOL sub_10031331C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = sub_1002A6204((_DWORD *)(a1 + 48), a2);
  if (v5 == -1) {
    return 0;
  }
  int v6 = *(_DWORD *)(a1 + 60);
  int v7 = v5 / v6;
  int v8 = v5 % v6;
  long double v9 = hypot((double)(*(_DWORD *)(a1 + 24) - v5 / v6), (double)(*(_DWORD *)(a1 + 28) - v5 % v6)) * *(double *)(a1 + 96);
  double v10 = *(float *)(a1 + 32);
  if (v9 > 0.0)
  {
    double v11 = (float)(*(float *)(a1 + 36) * -10.0);
    long double v9 = log10(v9);
    double v10 = v10 + v11 * v9;
  }
  LOBYTE(v9) = *(unsigned char *)(*(void *)(a1 + 104) + v8 + v7 * v6);
  double v12 = (double)*(unint64_t *)&v9 / (double)*(int *)(a1 + 128);
  BOOL result = v12 > 0.0;
  if (a3)
  {
    double v14 = NAN;
    if (v12 > 0.0) {
      double v14 = v10;
    }
    *(double *)(a3 + 8) = v14;
    *(double *)(a3 + 16) = v12;
  }
  return result;
}

BOOL sub_100313418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001E331C(a2, (_DWORD *)(a1 + 48), &v33);
  double v6 = *((double *)&v33 + 1);
  double v7 = 0.0;
  if (*((double *)&v33 + 1) == 0.0 || v33 == -1)
  {
    double v8 = 0.0;
    double v9 = 0.0;
  }
  else
  {
    int v14 = *(_DWORD *)(a1 + 60);
    LOBYTE(v5) = *(unsigned char *)(*(void *)(a1 + 104) + (int)v33 % v14 + (int)v33 / v14 * v14);
    long double v5 = (double)*(unint64_t *)&v5;
    double v15 = v5 / (double)*(int *)(a1 + 128);
    double v8 = 0.0;
    double v9 = 0.0;
    if (v15 != 0.0)
    {
      long double v16 = hypot((double)(*(_DWORD *)(a1 + 24) - (int)v33 / v14), (double)(*(_DWORD *)(a1 + 28) - (int)v33 % v14))
          * *(double *)(a1 + 96);
      double v17 = *(float *)(a1 + 32);
      if (v16 > 0.0)
      {
        double v18 = (float)(*(float *)(a1 + 36) * -10.0);
        double v17 = v17 + v18 * log10(v16);
      }
      long double v5 = 0.0;
      double v8 = v6 * v17 + 0.0;
      double v9 = v6 * v15 + 0.0;
      double v7 = v6 + 0.0;
    }
  }
  double v10 = v35;
  if (v35 != 0.0 && v34 != -1)
  {
    int v19 = *(_DWORD *)(a1 + 60);
    LOBYTE(v5) = *(unsigned char *)(*(void *)(a1 + 104) + v34 % v19 + v34 / v19 * v19);
    long double v5 = (double)*(unint64_t *)&v5;
    double v20 = v5 / (double)*(int *)(a1 + 128);
    if (v20 != 0.0)
    {
      long double v5 = hypot((double)(*(_DWORD *)(a1 + 24) - v34 / v19), (double)(*(_DWORD *)(a1 + 28) - v34 % v19))
         * *(double *)(a1 + 96);
      double v21 = *(float *)(a1 + 32);
      if (v5 > 0.0)
      {
        double v22 = (float)(*(float *)(a1 + 36) * -10.0);
        long double v5 = log10(v5);
        double v21 = v21 + v22 * v5;
      }
      double v8 = v8 + v10 * v21;
      double v9 = v9 + v10 * v20;
      double v7 = v7 + v10;
    }
  }
  double v11 = v37;
  if (v37 != 0.0 && v36 != -1)
  {
    int v23 = *(_DWORD *)(a1 + 60);
    LOBYTE(v5) = *(unsigned char *)(*(void *)(a1 + 104) + v36 % v23 + v36 / v23 * v23);
    long double v5 = (double)*(unint64_t *)&v5;
    double v24 = v5 / (double)*(int *)(a1 + 128);
    if (v24 != 0.0)
    {
      long double v5 = hypot((double)(*(_DWORD *)(a1 + 24) - v36 / v23), (double)(*(_DWORD *)(a1 + 28) - v36 % v23))
         * *(double *)(a1 + 96);
      double v25 = *(float *)(a1 + 32);
      if (v5 > 0.0)
      {
        double v26 = (float)(*(float *)(a1 + 36) * -10.0);
        long double v5 = log10(v5);
        double v25 = v25 + v26 * v5;
      }
      double v8 = v8 + v11 * v25;
      double v9 = v9 + v11 * v24;
      double v7 = v7 + v11;
    }
  }
  double v12 = v39;
  if (v39 != 0.0 && v38 != -1)
  {
    int v27 = *(_DWORD *)(a1 + 60);
    LOBYTE(v5) = *(unsigned char *)(*(void *)(a1 + 104) + v38 % v27 + v38 / v27 * v27);
    double v28 = (double)*(unint64_t *)&v5 / (double)*(int *)(a1 + 128);
    if (v28 != 0.0)
    {
      long double v29 = hypot((double)(*(_DWORD *)(a1 + 24) - v38 / v27), (double)(*(_DWORD *)(a1 + 28) - v38 % v27))
          * *(double *)(a1 + 96);
      double v30 = *(float *)(a1 + 32);
      if (v29 > 0.0)
      {
        double v31 = (float)(*(float *)(a1 + 36) * -10.0);
        double v30 = v30 + v31 * log10(v29);
      }
      double v8 = v8 + v12 * v30;
      double v9 = v9 + v12 * v28;
      double v7 = v7 + v12;
    }
  }
  if (a3)
  {
    if (v7 <= 0.0)
    {
      *(void *)(a3 + 8) = 0x7FF4000000000000;
      double v13 = 0.0;
    }
    else
    {
      *(double *)(a3 + 8) = v8 / v7;
      double v13 = v9 / v7;
    }
    *(double *)(a3 + 16) = v13;
  }
  return v7 > 0.0;
}

float sub_100313754(uint64_t a1, int a2)
{
  long double v3 = hypot((double)(*(_DWORD *)(a1 + 24) - a2 / *(_DWORD *)(a1 + 60)), (double)(*(_DWORD *)(a1 + 28) + a2 / *(_DWORD *)(a1 + 60) * *(_DWORD *)(a1 + 60) - a2))* *(double *)(a1 + 96);
  float v4 = *(float *)(a1 + 32);
  if (v3 > 0.0)
  {
    double v5 = (float)(*(float *)(a1 + 36) * -10.0);
    return v4 + v5 * log10(v3);
  }
  return v4;
}

float sub_1003137DC(uint64_t a1, int a2, double a3)
{
  LOBYTE(a3) = *(unsigned char *)(*(void *)(a1 + 104) + a2);
  *(float *)&a3 = (double)*(unint64_t *)&a3 / (double)*(int *)(a1 + 128);
  return *(float *)&a3;
}

void *sub_100313800(void *a1)
{
  *a1 = off_100466750;
  uint64_t v2 = (void *)a1[13];
  if (v2)
  {
    a1[14] = v2;
    operator delete(v2);
  }
  sub_100329AF0((uint64_t)(a1 + 1));
  return a1;
}

void sub_100313858(void *a1)
{
  *a1 = off_100466750;
  uint64_t v2 = (void *)a1[13];
  if (v2)
  {
    a1[14] = v2;
    operator delete(v2);
  }
  sub_100329AF0((uint64_t)(a1 + 1));

  operator delete();
}

uint64_t sub_1003138D0(uint64_t a1)
{
  return a1 + 64;
}

void sub_1003138D8()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100313950()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void *sub_1003139C8(void *a1)
{
  *a1 = off_1004667B0;
  uint64_t v2 = (void *)a1[15];
  while (v2)
  {
    double v12 = v2;
    uint64_t v2 = (void *)*v2;
    int v13 = *((_DWORD *)v12 + 20);
    if (v13 != v13 >> 31)
    {
      uint64_t v14 = v12[11];
      if (v13 < 0)
      {
        if (v14) {
          (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
        }
      }
      else
      {
        (*(void (**)(void *))v14)(v12 + 11);
      }
    }
    operator delete(v12);
  }
  long double v3 = (void *)a1[13];
  a1[13] = 0;
  if (v3) {
    operator delete(v3);
  }
  *a1 = off_100462DC0;
  float v4 = (void **)(a1 + 7);
  sub_100260FC4(a1 + 7);
  double v5 = (void **)a1[8];
  double v6 = (void **)a1[9];
  if (v5 != v6)
  {
    do
    {
      double v7 = *v5++;
      operator delete(v7);
    }
    while (v5 != v6);
    uint64_t v9 = a1[8];
    uint64_t v8 = a1[9];
    if (v8 != v9) {
      a1[9] = v8 + ((v9 - v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    }
  }
  if (*v4) {
    operator delete(*v4);
  }
  double v10 = (void *)a1[3];
  if (v10)
  {
    a1[4] = v10;
    operator delete(v10);
  }
  return a1;
}

void sub_100313B2C(void *a1)
{
  sub_1003139C8(a1);

  operator delete();
}

void *sub_100313B64(void *a1, uint64_t a2, uint64_t *a3)
{
  sub_100313D68(a1, a3[6]);
  uint64_t v6 = a3[3];
  uint64_t v5 = a3[4];
  if (v5 == v6)
  {
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    unint64_t v9 = 0;
    do
    {
      if (*(double *)(v6 + 8 * v9) > 0.0)
      {
        double v10 = (_DWORD *)(*a3 + v7);
        double v11 = sub_100261668(a1 + 13, (uint64_t)v10);
        if (v11)
        {
          sub_1000A9E44(a1 + 13, v11, (uint64_t)&v21);
          uint64_t v12 = v21;
          *(void *)&long long v21 = 0;
          if (v12)
          {
            if (v22)
            {
              int v13 = *(_DWORD *)(v12 + 80);
              if (v13 != v13 >> 31)
              {
                uint64_t v14 = *(void *)(v12 + 88);
                if (v13 < 0)
                {
                  if (v14) {
                    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
                  }
                }
                else
                {
                  (*(void (**)(uint64_t))v14)(v12 + 88);
                }
              }
            }
            operator delete((void *)v12);
          }
        }
        ++v8;
        sub_1003142A0((uint64_t)(a1 + 13), (uint64_t)v10, v10, (uint64_t)v10);
        uint64_t v6 = a3[3];
        uint64_t v5 = a3[4];
      }
      ++v9;
      v7 += 208;
    }
    while (v9 < (v5 - v6) >> 3);
  }
  *(void *)&long long v21 = a3[6];
  *((void *)&v21 + 1) = v8;
  sub_100260138(a1 + 2, &v21);
  uint64_t v15 = a1[8];
  uint64_t v16 = a1[9];
  uint64_t v17 = 73 * ((v16 - v15) >> 3) - 1;
  if (v16 == v15) {
    uint64_t v17 = 0;
  }
  if (v17 == a1[12] + a1[11])
  {
    sub_100263B24((uint64_t)(a1 + 7));
    uint64_t v15 = a1[8];
    uint64_t v16 = a1[9];
  }
  if (v16 == v15)
  {
    int v19 = 0;
  }
  else
  {
    unint64_t v18 = a1[12] + a1[11];
    int v19 = (void *)(*(void *)(v15 + 8 * (v18 / 0x49)) + 56 * (v18 % 0x49));
  }
  BOOL result = sub_10023BDF4(v19, a3);
  ++a1[12];
  return result;
}

void sub_100313D68(void *a1, uint64_t a2)
{
  sub_100260590(a1 + 2, a2, __p);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  while (a1[12])
  {
    if (a1[1] + *(void *)(*(void *)(a1[8] + 8 * (a1[11] / 0x49uLL)) + 56 * (a1[11] % 0x49uLL) + 48) >= a2) {
      break;
    }
    sub_100260B04((uint64_t)(a1 + 7));
  }
  float v4 = (uint64_t *)a1[15];
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v5 = (uint64_t *)v4[11];
        int v6 = *((_DWORD *)v4 + 20);
        if (v6 >= 0) {
          uint64_t v5 = v4 + 11;
        }
        uint64_t v7 = v5 + 1;
        uint64_t v8 = v4 + 18;
        if (v6 != v6 >> 31) {
          uint64_t v8 = v7;
        }
        if (a1[1] + *v8 < a2) {
          break;
        }
        float v4 = (uint64_t *)*v4;
        if (!v4) {
          return;
        }
      }
      unint64_t v9 = (uint64_t *)*v4;
      sub_1000A9E44(a1 + 13, v4, (uint64_t)&v14);
      double v10 = v14;
      uint64_t v14 = 0;
      if (v10)
      {
        if (v15)
        {
          int v11 = v10[20];
          if (v11 != v11 >> 31)
          {
            uint64_t v12 = *((void *)v10 + 11);
            if (v11 < 0)
            {
              if (v12) {
                (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
              }
            }
            else
            {
              (*(void (**)(_DWORD *))v12)(v10 + 22);
            }
          }
        }
        operator delete(v10);
      }
      float v4 = v9;
    }
    while (v9);
  }
}

uint64_t **sub_100313F14@<X0>(uint64_t **result@<X0>, uint64_t *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  uint64_t v2 = result[15];
  for (i = a2; v2; uint64_t v2 = (uint64_t *)*v2)
  {
    sub_100314AE4((uint64_t)v8, (uint64_t)(v2 + 2));
    if (v9 >> 31 == v9)
    {
      *(void *)&long long v23 = v10;
      int v22 = 0;
      int v3 = v12;
      if (v12 == v12 >> 31) {
        goto LABEL_12;
      }
    }
    else
    {
      long long v23 = v10;
      int v24 = v11;
      int v22 = (v9 >> 31) ^ v9;
      int v3 = v12;
      if (v12 == v12 >> 31)
      {
LABEL_12:
        int v6 = (int)v13 >> 31;
        if ((int)v13 >> 31 == v13)
        {
          *(void *)&long long v27 = v14;
          int v6 = (int)v13;
        }
        else
        {
          long long v27 = v14;
          int v28 = v15;
        }
        LODWORD(v26) = v6 ^ v13;
        uint64_t v29 = v16;
        char v30 = 0;
        if (v17)
        {
          int v31 = v18;
          char v30 = 1;
        }
        long long v32 = v19;
        long long v33 = v20;
        int v34 = v21;
        int v5 = v3;
        goto LABEL_18;
      }
    }
    if (v3 >= 0) {
      float v4 = &v13;
    }
    else {
      float v4 = v13;
    }
    sub_1001AC878(&v26, v4);
    int v5 = v12;
    int v3 = v12 >> 31;
LABEL_18:
    int v25 = v5 ^ v3;
    BOOL result = sub_1003148BC(&i, (uint64_t)&v22);
    if (v25 == v25 >> 31)
    {
      if (v30) {
        char v30 = 0;
      }
    }
    else
    {
      BOOL result = v26;
      if (v25 < 0)
      {
        if (v26) {
          BOOL result = (uint64_t **)((uint64_t (*)(void))(*v26)[1])();
        }
      }
      else
      {
        BOOL result = (uint64_t **)((uint64_t (*)(uint64_t ***))*v26)(&v26);
      }
    }
    if (v12 != v12 >> 31)
    {
      BOOL result = (uint64_t **)v13;
      if (v12 < 0)
      {
        if (v13) {
          BOOL result = (uint64_t **)(*(uint64_t (**)(void))(*v13 + 8))();
        }
      }
      else
      {
        BOOL result = (uint64_t **)((uint64_t (*)(void **))*v13)(&v13);
      }
    }
  }
  return result;
}

void sub_1003141B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_100314A2C((uint64_t)va);
  sub_1002329B0(v3);
  _Unwind_Resume(a1);
}

void sub_1003141E0(_Unwind_Exception *a1)
{
  sub_1002329B0(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_1003141F4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((unsigned char *)a1 + 16))
    {
      int v3 = *(_DWORD *)(v2 + 80);
      if (v3 != v3 >> 31)
      {
        uint64_t v4 = *(void *)(v2 + 88);
        if (v3 < 0)
        {
          if (v4) {
            (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
          }
        }
        else
        {
          (*(void (**)(uint64_t))v4)(v2 + 88);
        }
      }
    }
    operator delete((void *)v2);
  }
  return a1;
}

uint64_t *sub_1003142A0(uint64_t a1, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  v43[0] = &v45;
  uint64_t v9 = a2 + 8;
  if (*(_DWORD *)a2 == *(int *)a2 >> 31)
  {
    unint64_t v10 = *(void *)v9;
    unint64_t v11 = *(void *)(a1 + 8);
    if (!v11) {
      goto LABEL_58;
    }
  }
  else
  {
    unint64_t v10 = sub_100258DC8((uint64_t)v43, (unsigned __int8 *)(a2 + 8));
    unint64_t v11 = *(void *)(a1 + 8);
    if (!v11) {
      goto LABEL_58;
    }
  }
  uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
  v12.i16[0] = vaddlv_u8(v12);
  if (v12.u32[0] > 1uLL)
  {
    unint64_t v4 = v10;
    if (v10 >= v11) {
      unint64_t v4 = v10 % v11;
    }
  }
  else
  {
    unint64_t v4 = (v11 - 1) & v10;
  }
  int v13 = *(uint64_t ***)(*(void *)a1 + 8 * v4);
  if (v13)
  {
    BOOL result = *v13;
    if (*v13)
    {
      int v15 = *(_DWORD *)a2;
      int v16 = (v15 >> 31) ^ v15;
      BOOL v17 = v15 >> 31 == v15;
      uint64_t v18 = *(void *)(a2 + 8);
      if (v12.u32[0] <= 1uLL)
      {
        unint64_t v19 = v11 - 1;
        if (v17)
        {
          while (1)
          {
            uint64_t v20 = result[1];
            if (v20 == v10)
            {
              if ((*((_DWORD *)result + 4) ^ (*((int *)result + 4) >> 31)) == v16 && result[3] == v18) {
                return result;
              }
            }
            else if ((v20 & v19) != v4)
            {
              goto LABEL_58;
            }
            BOOL result = (uint64_t *)*result;
            if (!result) {
              goto LABEL_58;
            }
          }
        }
        while (1)
        {
          uint64_t v21 = result[1];
          if (v21 == v10)
          {
            if ((*((_DWORD *)result + 4) ^ (*((int *)result + 4) >> 31)) == v16)
            {
              BOOL v22 = result[3] == *(void *)v9 && result[4] == *(void *)(v9 + 8);
              if (v22 && *((_DWORD *)result + 10) == (unint64_t)*(unsigned int *)(v9 + 16)) {
                return result;
              }
            }
          }
          else if ((v21 & v19) != v4)
          {
            goto LABEL_58;
          }
          BOOL result = (uint64_t *)*result;
          if (!result) {
            goto LABEL_58;
          }
        }
      }
      if (v17)
      {
        while (1)
        {
          unint64_t v24 = result[1];
          if (v24 == v10)
          {
            if ((*((_DWORD *)result + 4) ^ (*((int *)result + 4) >> 31)) == v16 && result[3] == v18) {
              return result;
            }
          }
          else
          {
            if (v24 >= v11) {
              v24 %= v11;
            }
            if (v24 != v4) {
              goto LABEL_58;
            }
          }
          BOOL result = (uint64_t *)*result;
          if (!result) {
            goto LABEL_58;
          }
        }
      }
      do
      {
        unint64_t v25 = result[1];
        if (v25 == v10)
        {
          if ((*((_DWORD *)result + 4) ^ (*((int *)result + 4) >> 31)) == v16)
          {
            BOOL v26 = result[3] == *(void *)v9 && result[4] == *(void *)(v9 + 8);
            if (v26 && *((_DWORD *)result + 10) == (unint64_t)*(unsigned int *)(v9 + 16)) {
              return result;
            }
          }
        }
        else
        {
          if (v25 >= v11) {
            v25 %= v11;
          }
          if (v25 != v4) {
            break;
          }
        }
        BOOL result = (uint64_t *)*result;
      }
      while (result);
    }
  }
LABEL_58:
  int v28 = operator new(0x100uLL);
  v43[0] = v28;
  v43[1] = a1 + 16;
  char v44 = 0;
  *int v28 = 0;
  v28[1] = v10;
  sub_100314744((uint64_t)(v28 + 2), a3, a4);
  char v44 = 1;
  float v29 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v30 = *(float *)(a1 + 32);
  if (!v11 || (float)(v30 * (float)v11) < v29)
  {
    BOOL v33 = 1;
    if (v11 >= 3) {
      BOOL v33 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v34 = v33 | (2 * v11);
    unint64_t v35 = vcvtps_u32_f32(v29 / v30);
    if (v34 <= v35) {
      size_t prime = v35;
    }
    else {
      size_t prime = v34;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
    }
    int8x8_t v37 = *(int8x8_t *)(a1 + 8);
    if (prime > *(void *)&v37) {
      goto LABEL_72;
    }
    if (prime < *(void *)&v37)
    {
      unint64_t v38 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(void *)&v37 < 3uLL || (uint8x8_t v39 = (uint8x8_t)vcnt_s8(v37), v39.i16[0] = vaddlv_u8(v39), v39.u32[0] > 1uLL))
      {
        unint64_t v38 = std::__next_prime(v38);
      }
      else
      {
        uint64_t v40 = 1 << -(char)__clz(v38 - 1);
        if (v38 >= 2) {
          unint64_t v38 = v40;
        }
      }
      if (prime <= v38) {
        size_t prime = v38;
      }
      if (prime < *(void *)&v37) {
LABEL_72:
      }
        sub_10006338C(a1, prime);
    }
    unint64_t v11 = *(void *)(a1 + 8);
    unint64_t v41 = v11 - 1;
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11)
      {
        unint64_t v4 = v10 % v11;
        int v31 = *(void **)(*(void *)a1 + 8 * (v10 % v11));
        long long v32 = (void *)v43[0];
        if (v31) {
          goto LABEL_61;
        }
      }
      else
      {
        unint64_t v4 = v10;
        int v31 = *(void **)(*(void *)a1 + 8 * v10);
        long long v32 = (void *)v43[0];
        if (v31) {
          goto LABEL_61;
        }
      }
    }
    else
    {
      unint64_t v4 = v41 & v10;
      int v31 = *(void **)(*(void *)a1 + 8 * (v41 & v10));
      long long v32 = (void *)v43[0];
      if (v31) {
        goto LABEL_61;
      }
    }
LABEL_85:
    *long long v32 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v43[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v43[0])
    {
      unint64_t v42 = *(void *)(*(void *)v43[0] + 8);
      if ((v11 & (v11 - 1)) != 0)
      {
        if (v42 >= v11) {
          v42 %= v11;
        }
      }
      else
      {
        v42 &= v11 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v42) = v43[0];
    }
    goto LABEL_96;
  }
  int v31 = *(void **)(*(void *)a1 + 8 * v4);
  long long v32 = (void *)v43[0];
  if (!v31) {
    goto LABEL_85;
  }
LABEL_61:
  *long long v32 = *v31;
  *int v31 = v43[0];
LABEL_96:
  BOOL result = (uint64_t *)v43[0];
  ++*(void *)(a1 + 24);
  return result;
}

void sub_10031471C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100314730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100314744(uint64_t a1, _DWORD *a2, uint64_t a3)
{
  int v5 = (void *)(a1 + 8);
  uint64_t v7 = a2 + 2;
  int v6 = *a2;
  if (v6 == v6 >> 31)
  {
    *int v5 = *v7;
    int v8 = v6;
  }
  else
  {
    long long v9 = *(_OWORD *)v7;
    *(_DWORD *)(a1 + 24) = a2[6];
    *(_OWORD *)int v5 = v9;
    int v8 = *a2;
    int v6 = (int)*a2 >> 31;
  }
  *(_DWORD *)a1 = v8 ^ v6;
  unint64_t v10 = (void *)(a1 + 40);
  unint64_t v11 = (void *)(a3 + 8);
  if (*(_DWORD *)a3 == *(int *)a3 >> 31)
  {
    *unint64_t v10 = *v11;
    *(_DWORD *)(a1 + 32) = 0;
    int v12 = *(_DWORD *)(a3 + 32);
    int v13 = (void *)(a3 + 40);
    if (v12 != v12 >> 31)
    {
LABEL_6:
      uint64_t v14 = a1 + 72;
      if (v12 >= 0) {
        int v15 = v13;
      }
      else {
        int v15 = (void *)*v13;
      }
      sub_1001AC878(v14, v15);
      goto LABEL_17;
    }
  }
  else
  {
    long long v16 = *(_OWORD *)v11;
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a3 + 24);
    *(_OWORD *)unint64_t v10 = v16;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)a3 ^ (*(int *)a3 >> 31);
    int v12 = *(_DWORD *)(a3 + 32);
    int v13 = (void *)(a3 + 40);
    if (v12 != v12 >> 31) {
      goto LABEL_6;
    }
  }
  BOOL v17 = (void *)(a1 + 80);
  int v18 = *(_DWORD *)(a3 + 40);
  unint64_t v19 = (void *)(a3 + 48);
  if (v18 == v18 >> 31)
  {
    *BOOL v17 = *v19;
    int v20 = v18;
  }
  else
  {
    long long v21 = *(_OWORD *)v19;
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a3 + 64);
    *(_OWORD *)BOOL v17 = v21;
    int v20 = *(_DWORD *)v13;
    int v18 = v20 >> 31;
  }
  *(_DWORD *)(a1 + 72) = v20 ^ v18;
  *(void *)(a1 + 104) = *(void *)(a3 + 72);
  *(unsigned char *)(a1 + 112) = 0;
  if (*(unsigned char *)(a3 + 80))
  {
    *(_DWORD *)(a1 + 116) = *(_DWORD *)(a3 + 84);
    *(unsigned char *)(a1 + 112) = 1;
  }
  long long v22 = *(_OWORD *)(a3 + 88);
  long long v23 = *(_OWORD *)(a3 + 104);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a3 + 120);
  *(_OWORD *)(a1 + 136) = v23;
  *(_OWORD *)(a1 + 120) = v22;
LABEL_17:
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a3 + 32) ^ (*(int *)(a3 + 32) >> 31);
  return a1;
}

uint64_t **sub_1003148BC(uint64_t **a1, uint64_t a2)
{
  unint64_t v4 = *a1;
  unint64_t v5 = (*a1)[1];
  if (v5 >= (*a1)[2])
  {
    v4[1] = sub_100264918(*a1, a2);
    return a1;
  }
  else
  {
    int v6 = (void *)(v5 + 8);
    int v8 = (void *)(a2 + 8);
    int v7 = *(_DWORD *)a2;
    if (v7 == v7 >> 31)
    {
      *int v6 = *v8;
      int v9 = v7;
    }
    else
    {
      long long v11 = *(_OWORD *)v8;
      *(_DWORD *)(v5 + 24) = *(_DWORD *)(a2 + 24);
      *(_OWORD *)int v6 = v11;
      int v9 = *(_DWORD *)a2;
      int v7 = *(int *)a2 >> 31;
    }
    *(_DWORD *)unint64_t v5 = v9 ^ v7;
    int v12 = *(_DWORD *)(a2 + 32);
    int v13 = (int *)(a2 + 40);
    if (v12 == v12 >> 31)
    {
      uint64_t v14 = (void *)(v5 + 48);
      int v15 = *(_DWORD *)(a2 + 40);
      long long v16 = (void *)(a2 + 48);
      if (v15 == v15 >> 31)
      {
        void *v14 = *v16;
        int v17 = v15;
      }
      else
      {
        long long v19 = *(_OWORD *)v16;
        *(_DWORD *)(v5 + 64) = *(_DWORD *)(a2 + 64);
        *(_OWORD *)uint64_t v14 = v19;
        int v17 = *v13;
        int v15 = v17 >> 31;
      }
      *(_DWORD *)(v5 + 40) = v17 ^ v15;
      *(void *)(v5 + 72) = *(void *)(a2 + 72);
      *(unsigned char *)(v5 + 80) = 0;
      if (*(unsigned char *)(a2 + 80))
      {
        *(_DWORD *)(v5 + 84) = *(_DWORD *)(a2 + 84);
        *(unsigned char *)(v5 + 80) = 1;
      }
      long long v20 = *(_OWORD *)(a2 + 88);
      long long v21 = *(_OWORD *)(a2 + 104);
      *(_DWORD *)(v5 + 120) = *(_DWORD *)(a2 + 120);
      *(_OWORD *)(v5 + 104) = v21;
      *(_OWORD *)(v5 + 88) = v20;
    }
    else
    {
      if (v12 >= 0) {
        uint64_t v18 = a2 + 40;
      }
      else {
        uint64_t v18 = *(void *)v13;
      }
      sub_1001AC878(v5 + 40, v18);
    }
    *(_DWORD *)(v5 + 32) = *(_DWORD *)(a2 + 32) ^ (*(int *)(a2 + 32) >> 31);
    v4[1] = v5 + 208;
    v4[1] = v5 + 208;
    return a1;
  }
}

void sub_100314A24(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_100314A2C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 64);
  if (v2 == v2 >> 31)
  {
    if (*(unsigned char *)(a1 + 112)) {
      *(unsigned char *)(a1 + 112) = 0;
    }
    return a1;
  }
  uint64_t v4 = *(void *)(a1 + 72);
  if (v2 < 0)
  {
    if (!v4) {
      return a1;
    }
    (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    return a1;
  }
  else
  {
    (*(void (**)(uint64_t))v4)(a1 + 72);
    return a1;
  }
}

uint64_t sub_100314AE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)(a1 + 8);
  int v6 = (void *)(a2 + 8);
  int v5 = *(_DWORD *)a2;
  if (v5 == v5 >> 31)
  {
    *uint64_t v4 = *v6;
    int v7 = v5;
  }
  else
  {
    long long v8 = *(_OWORD *)v6;
    *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
    *(_OWORD *)uint64_t v4 = v8;
    int v7 = *(_DWORD *)a2;
    int v5 = *(int *)a2 >> 31;
  }
  *(_DWORD *)a1 = v7 ^ v5;
  int v9 = (void *)(a1 + 40);
  unint64_t v10 = (void *)(a2 + 40);
  if (*(_DWORD *)(a2 + 32) == *(int *)(a2 + 32) >> 31)
  {
    void *v9 = *v10;
    *(_DWORD *)(a1 + 32) = 0;
    int v11 = *(_DWORD *)(a2 + 64);
    int v12 = (void *)(a2 + 72);
    if (v11 != v11 >> 31)
    {
LABEL_6:
      uint64_t v13 = a1 + 72;
      if (v11 >= 0) {
        uint64_t v14 = v12;
      }
      else {
        uint64_t v14 = (void *)*v12;
      }
      sub_1001AC878(v13, v14);
      goto LABEL_17;
    }
  }
  else
  {
    long long v15 = *(_OWORD *)v10;
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    *(_OWORD *)int v9 = v15;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32) ^ (*(int *)(a2 + 32) >> 31);
    int v11 = *(_DWORD *)(a2 + 64);
    int v12 = (void *)(a2 + 72);
    if (v11 != v11 >> 31) {
      goto LABEL_6;
    }
  }
  long long v16 = (void *)(a1 + 80);
  int v17 = *(_DWORD *)(a2 + 72);
  uint64_t v18 = (void *)(a2 + 80);
  if (v17 == v17 >> 31)
  {
    *long long v16 = *v18;
    int v19 = v17;
  }
  else
  {
    long long v20 = *(_OWORD *)v18;
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    *(_OWORD *)long long v16 = v20;
    int v19 = *(_DWORD *)v12;
    int v17 = v19 >> 31;
  }
  *(_DWORD *)(a1 + 72) = v19 ^ v17;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = 0;
  if (*(unsigned char *)(a2 + 112))
  {
    *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
    *(unsigned char *)(a1 + 112) = 1;
  }
  long long v21 = *(_OWORD *)(a2 + 120);
  long long v22 = *(_OWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = v22;
  *(_OWORD *)(a1 + 120) = v21;
LABEL_17:
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64) ^ (*(int *)(a2 + 64) >> 31);
  return a1;
}

void sub_100314C5C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100314CD4()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

double sub_100314D4C(uint64_t a1)
{
  return *(double *)(a1 + 32);
}

double sub_100314D54(uint64_t a1)
{
  return *(double *)(a1 + 32) * 3.46410162;
}

BOOL sub_100314D68(uint64_t a1, uint64_t a2)
{
  return (*(double (**)(uint64_t))(*(void *)a2 + 16))(a2) < *(double *)(a1 + 48);
}

double sub_100314DBC(uint64_t a1)
{
  return *(double *)(a1 + 56);
}

void sub_100314DC4()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100314E3C()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_100314EB4(uint64_t result)
{
  return result;
}

int64x2_t sub_100314EC4(int64x2_t *a1)
{
  int64x2_t result = vaddq_s64(*a1, vdupq_n_s64(1uLL));
  *a1 = result;
  return result;
}

uint64_t sub_100314EDC(uint64_t result)
{
  return result;
}

int64x2_t sub_100314EEC(int64x2_t *a1)
{
  int64x2_t result = vaddq_s64(a1[1], vdupq_n_s64(1uLL));
  a1[1] = result;
  return result;
}

double sub_100314F04(void *a1)
{
  unint64_t v1 = a1[1];
  if (v1) {
    return (double)(v1 - *a1) / (double)v1;
  }
  else {
    return 1.0;
  }
}

double sub_100314F2C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1) {
    return (double)(v1 - *(void *)(a1 + 16)) / (double)v1;
  }
  else {
    return 1.0;
  }
}

void sub_1003153CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (v41) {

  }
  _Unwind_Resume(a1);
}

void sub_10031555C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  unint64_t v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)VideoPlaybackStream;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1003156C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  int v3 = va_arg(va1, const void *);
  va_copy(va2, va1);
  uint64_t v5 = va_arg(va2, void);
  uint64_t v7 = va_arg(va2, void);
  uint64_t v8 = va_arg(va2, void);
  sub_1003156EC((uint64_t)va1);
  sub_100315720((const void **)va);
  sub_100315720((const void **)va2);
  _Unwind_Resume(a1);
}

uint64_t sub_1003156EC(uint64_t a1)
{
  int v2 = *(const void **)(a1 + 16);
  if (v2) {
    CFRelease(v2);
  }
  return a1;
}

const void **sub_100315720(const void **a1)
{
  int v2 = *a1;
  if (v2) {
    CFRelease(v2);
  }
  return a1;
}

void *sub_100315854(void *result)
{
  unint64_t v1 = (id *)result[1];
  *int64x2_t result = off_1004667F8;
  result[1] = 0;
  if (v1)
  {

    operator delete();
  }
  return result;
}

void sub_1003158BC(void *a1)
{
  unint64_t v1 = (id *)a1[1];
  *a1 = off_1004667F8;
  a1[1] = 0;
  if (v1)
  {

    operator delete();
  }

  operator delete();
}

void *sub_100315944(void *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  *(void *)(a2 + ++*(void *)(result + 8) = 0;
  *int64x2_t result = off_1004667F8;
  result[1] = v2;
  return result;
}

void sub_10031596C(void *a1)
{
  *a1 = off_1004667F8;
  operator new();
}

void sub_1003159F0()
{
}

id sub_100315A14@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = **(id **)(a1 + 8);
  if (result) {
    return [result readNextEvent];
  }
  *a2 = 0;
  a2[1] = 0;
  return result;
}

uint64_t sub_100315A2C()
{
  return 1;
}

uint64_t sub_100315A34@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  uint64_t result = sub_100315AE4(a1, a2);
  if ((result & 1) == 0)
  {
    std::bad_cast::bad_cast(&v3);
    v3.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v3);
  }
  return result;
}

void sub_100315AB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
  std::bad_cast::~bad_cast(&a10);
  if (*(char *)(v10 + 23) < 0) {
    operator delete(*(void **)v10);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100315AE4(uint64_t a1, std::string *a2)
{
  long long v25 = 0u;
  long long v26 = 0u;
  memset(v24, 0, sizeof(v24));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::runtime_error __p = 0u;
  long long v28 = 0u;
  uint64_t v29 = 24;
  *(void *)&long long v25 = 0;
  *(void *)&v24[0] = off_100453E60;
  std::ios_base::init(&v31, v24);
  uint64_t v32 = 0;
  int v33 = -1;
  unint64_t v35 = &v34;
  int v36 = (char *)&v34 + 2;
  std::bad_cast v3 = (std::ios_base *)((char *)&v30 + (void)*(v30 - 3));
  v3->__exceptions_ = 1;
  std::ios_base::clear(v3, v3->__rdstate_);
  uint64_t v4 = (void *)std::ostream::operator<<();
  int v5 = *(_DWORD *)((char *)v4 + *(void *)(*v4 - 24) + 32);
  uint64_t v6 = *(void *)((char *)&v31.__rdstate_ + (void)*(v30 - 3));
  uint64_t v7 = *(void *)(v6 + 40);
  unint64_t v35 = (uint64_t *)v7;
  uint64_t v8 = *(char **)(v6 + 48);
  int v36 = v8;
  if ((v5 & 5) == 0)
  {
    unint64_t v10 = (unint64_t)&v8[-v7];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v14 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v13 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v13 >= v10)
      {
        unint64_t v15 = HIBYTE(v14);
LABEL_10:
        if ((v15 & 0x80u) == 0) {
          int v11 = a2;
        }
        else {
          int v11 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v7 == v8)
        {
          long long v16 = v11;
          goto LABEL_23;
        }
        if (v10 < 0x20 || (unint64_t)v11 - v7 < 0x20)
        {
          long long v16 = v11;
          int v17 = (char *)v7;
        }
        else
        {
          long long v16 = (std::string *)((char *)v11 + (v10 & 0xFFFFFFFFFFFFFFE0));
          int v17 = (char *)(v7 + (v10 & 0xFFFFFFFFFFFFFFE0));
          uint64_t v18 = (long long *)(v7 + 16);
          int v19 = &v11->__r_.__value_.__r.__words[2];
          unint64_t v20 = v10 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v21 = *v18;
            *((_OWORD *)v19 - 1) = *(v18 - 1);
            *(_OWORD *)int v19 = v21;
            v18 += 2;
            v19 += 4;
            v20 -= 32;
          }
          while (v20);
          if (v10 == (v10 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v16->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v10;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v10 & 0x7F;
            }
            uint64_t v9 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v22 = *v17++;
          v16->__r_.__value_.__s.__data_[0] = v22;
          long long v16 = (std::string *)((char *)v16 + 1);
        }
        while (v17 != v8);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      int v11 = a2;
      if (v10 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v13 = 22;
    }
    std::string::__grow_by(a2, v13, v10 - v13, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v15) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v9 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v28) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v9;
}

void sub_100315DC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100315DF8(void *a1)
{
}

std::string *sub_100315E10@<X0>(const std::string::value_type **a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, *a1);
}

void sub_100315E44(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100315E60()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100315ED8()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100315F50()
{
}

double sub_100315F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = a2;
  *(void *)(a1 + ++*(void *)(result + 8) = a3;
  *(void *)(a1 + 16) = a3;
  *(unsigned char *)(a1 + ++*(void *)(result + 24) = 0;
  *(void *)&double result = 0xFFFFFFFFLL;
  *(void *)(a1 + 32) = 0xFFFFFFFFLL;
  return result;
}

uint64_t sub_100315F90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  if (!*(void *)a1) {
    return v2;
  }
  if (v2 > 45000000000) {
    return 1;
  }
  uint64_t v4 = *(void *)(a2 + 8);
  int v5 = *(_DWORD *)(a1 + 32);
  int v6 = *(_DWORD *)(a1 + 36);
  if (v6 == v5)
  {
    int v5 = -1;
    *(_DWORD *)(a1 + 32) = -1;
  }
  int v7 = v6 % 11;
  if (v6 < v5) {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8 <= v4)
  {
    *(void *)(a1 + ++*(void *)(result + 8) = v8 + 45000000000;
    *(_DWORD *)(a1 + 32) = v6 + 11;
LABEL_13:
    uint64_t v2 = 0;
    *(void *)(a1 + 16) = v4;
    *(_DWORD *)(a1 + 2++*(void *)(result + 8) = v7;
    *(unsigned char *)(a1 + ++*(void *)(result + 24) = 1;
    goto LABEL_14;
  }
  if (*(void *)(a1 + 16) + v2 <= v4 && *(unsigned char *)(a1 + 24) && *(_DWORD *)(a1 + 28) != v7) {
    goto LABEL_13;
  }
  uint64_t v2 = 1;
LABEL_14:
  *(_DWORD *)(a1 + 36) = v6 + 1;
  return v2;
}

uint64_t *sub_100316064(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = operator new(0xE8uLL);
  v4[1] = 0;
  v4[2] = 0;
  *uint64_t v4 = off_100466878;
  *a1 = sub_10007FBEC((uint64_t)(v4 + 3));
  a1[1] = (uint64_t)v4;
  sub_100170200(a2, &v7);
  wireless_diagnostics::google::protobuf::io::FileInputStream::FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)v6, v7, -1);
  if ((wireless_diagnostics::google::protobuf::MessageLite::ParseFromZeroCopyStream() & 1) == 0)
  {
    sub_1000AE4B0(v9, "");
    sub_10024A41C("Failed to parse input stream", &v11);
    sub_10016A2C4((uint64_t)v9, (uint64_t)&v11, 1);
    if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v11.__r_.__value_.__l.__data_);
    }
    if (v10 < 0) {
      operator delete(v9[0]);
    }
    sub_1000D11E0((uint64_t)&__p);
  }
  wireless_diagnostics::google::protobuf::io::FileInputStream::~FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)v6);
  sub_100052AEC(&v7);
  return a1;
}

void sub_1003161A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  wireless_diagnostics::google::protobuf::io::FileInputStream::~FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)&a9);
  sub_100052AEC(&a21);
  sub_1000BA884(v27);
  _Unwind_Resume(a1);
}

void *sub_100316248@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_100085B24(a2, *(void *)(*(void *)a1 + 16));
}

uint64_t sub_100316258(uint64_t a1)
{
  return *(void *)(*(void *)a1 + 24);
}

uint64_t sub_100316264(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 72))();
}

uint64_t sub_10031628C()
{
  return wireless_diagnostics::google::protobuf::MessageLite::SerializeToZeroCopyStream();
}

double sub_100316294(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  int v3 = *(_DWORD *)(*a2 + 200);
  if ((v3 & 0x80000) == 0)
  {
    std::logic_error::logic_error(&v5, "Attempted to access the value of an uninitialized optional object.");
    v5.__vftable = (std::logic_error_vtbl *)&off_1004669A0;
    sub_1003167DC(&v5);
  }
  *(void *)a1 = *(void *)(v2 + 176);
  if ((v3 & 0x100000) == 0)
  {
    std::logic_error::logic_error(&v5, "Attempted to access the value of an uninitialized optional object.");
    v5.__vftable = (std::logic_error_vtbl *)&off_1004669A0;
    sub_1003167DC(&v5);
  }
  *(double *)(a1 + ++*(void *)(result + 8) = *(double *)(v2 + 184) + *(double *)(v2 + 184);
  double result = (double)*(int *)(v2 + 56);
  *(double *)(a1 + 16) = result;
  *(unsigned char *)(a1 + ++*(void *)(result + 24) = 0;
  return result;
}

void sub_100316368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::logic_error a9)
{
}

void sub_10031637C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, std::logic_error a9)
{
}

char *sub_100316390(void *a1, uint64_t a2)
{
  unint64_t v3 = 0x8E38E38E38E38E39 * ((uint64_t)(a1[1] - *a1) >> 3);
  unint64_t v4 = v3 + 1;
  if (v3 + 1 > 0x38E38E38E38E38ELL) {
    sub_1000A9108();
  }
  if (0x1C71C71C71C71C72 * ((uint64_t)(a1[2] - *a1) >> 3) > v4) {
    unint64_t v4 = 0x1C71C71C71C71C72 * ((uint64_t)(a1[2] - *a1) >> 3);
  }
  if (0x8E38E38E38E38E39 * ((uint64_t)(a1[2] - *a1) >> 3) >= 0x1C71C71C71C71C7) {
    unint64_t v6 = 0x38E38E38E38E38ELL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0x38E38E38E38E38ELL) {
      sub_1000A6A10();
    }
    int v7 = (char *)operator new(72 * v6);
  }
  else
  {
    int v7 = 0;
  }
  int v19 = &v7[72 * v3];
  *((void *)&v20 + 1) = &v7[72 * v6];
  sub_100077148(v19, a2);
  uint64_t v8 = 0;
  char v10 = (char *)*a1;
  for (uint64_t i = a1[1]; (char *)(i + v8) != v10; sub_100077148(&v19[v8], v8 + i))
    v8 -= 72;
  int v12 = (char *)*a1;
  std::string v11 = (char *)a1[1];
  *a1 = &v19[v8];
  *(void *)&long long v20 = v19 + 72;
  *(_OWORD *)(a1 + 1) = v20;
  if (v11 != v12)
  {
    std::string::size_type v13 = v11 - 72;
    unint64_t v14 = v11 - 72;
    unint64_t v15 = v11 - 72;
    do
    {
      long long v16 = *(void (***)(char *))v15;
      v15 -= 72;
      (*v16)(v14);
      v13 -= 72;
      BOOL v17 = v14 == v12;
      unint64_t v14 = v15;
    }
    while (!v17);
  }
  if (v12) {
    operator delete(v12);
  }
  return v19 + 72;
}

void sub_10031653C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_10019C7FC((uint64_t)va);
  _Unwind_Resume(a1);
}

char *sub_10031657C(void *a1, uint64_t a2)
{
  uint64_t v3 = 0x6DB6DB6DB6DB6DB7 * ((uint64_t)(a1[1] - *a1) >> 4);
  unint64_t v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) > 0x249249249249249) {
    sub_1000A9108();
  }
  if (0xDB6DB6DB6DB6DB6ELL * ((uint64_t)(a1[2] - *a1) >> 4) > v4) {
    unint64_t v4 = 0xDB6DB6DB6DB6DB6ELL * ((uint64_t)(a1[2] - *a1) >> 4);
  }
  if ((unint64_t)(0x6DB6DB6DB6DB6DB7 * ((uint64_t)(a1[2] - *a1) >> 4)) >= 0x124924924924924) {
    unint64_t v6 = 0x249249249249249;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0x249249249249249) {
      sub_1000A6A10();
    }
    int v7 = (char *)operator new(112 * v6);
  }
  else
  {
    int v7 = 0;
  }
  int v19 = &v7[112 * v3];
  *((void *)&v20 + 1) = &v7[112 * v6];
  sub_100077170(v19, a2);
  uint64_t v8 = 0;
  char v10 = (char *)*a1;
  for (uint64_t i = a1[1]; (char *)(i + v8) != v10; sub_100077170(&v19[v8], v8 + i))
    v8 -= 112;
  int v12 = (char *)*a1;
  std::string v11 = (char *)a1[1];
  *a1 = &v19[v8];
  *(void *)&long long v20 = v19 + 112;
  *(_OWORD *)(a1 + 1) = v20;
  if (v11 != v12)
  {
    std::string::size_type v13 = v11 - 112;
    unint64_t v14 = v11 - 112;
    unint64_t v15 = v11 - 112;
    do
    {
      long long v16 = *(void (***)(char *))v15;
      v15 -= 112;
      (*v16)(v14);
      v13 -= 112;
      BOOL v17 = v14 == v12;
      unint64_t v14 = v15;
    }
    while (!v17);
  }
  if (v12) {
    operator delete(v12);
  }
  return v19 + 112;
}

void sub_100316728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_10019CDE0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100316768(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100466878;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100316788(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100466878;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_1003167DC(const std::logic_error *a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_10031683C((uint64_t)exception, a1);
}

void sub_100316824(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10031683C(uint64_t a1, const std::logic_error *a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), a2);
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 4++*(void *)(result + 8) = 0;
  *(_DWORD *)(a1 + 56) = -1;
  *(void *)a1 = &off_100466928;
  *(void *)(a1 + ++*(void *)(result + 8) = off_100466958;
  *(void *)(a1 + ++*(void *)(result + 24) = off_100466980;
  return a1;
}

uint64_t sub_1003168E8(uint64_t a1)
{
  *(void *)(a1 + ++*(void *)(result + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::logic_error::~logic_error((std::logic_error *)(a1 + 8));
  return a1;
}

void sub_10031696C()
{
}

void sub_100316AB8()
{
  std::logic_error::~logic_error(v0);
  operator delete();
}

void sub_100316AE4(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_100316B18(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_100316EB0((uint64_t)exception, a1);
}

void sub_100316B60(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100316B74(uint64_t a1)
{
  *(void *)(a1 + ++*(void *)(result + 24) = &off_100451DC0;
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2 && (*(unsigned int (**)(uint64_t))(*(void *)v2 + 32))(v2)) {
    *(void *)(a1 + 32) = 0;
  }
  std::logic_error::~logic_error((std::logic_error *)(a1 + 8));

  operator delete();
}

void sub_100316C18(std::logic_error *this)
{
  this[1].__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::logic_error::~logic_error(this);
}

void sub_100316CA4(std::logic_error *this)
{
  this[1].__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::logic_error::~logic_error(this);

  operator delete();
}

void sub_100316D4C(std::logic_error *a1)
{
  a1->__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::logic_error::~logic_error(a1 - 1);
}

void sub_100316DD4(std::logic_error *a1)
{
  a1->__vftable = (std::logic_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::logic_error::~logic_error(a1 - 1);

  operator delete();
}

void sub_100316E78(std::logic_error *a1)
{
  std::logic_error::~logic_error(a1);

  operator delete();
}

uint64_t sub_100316EB0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  std::logic_error::logic_error((std::logic_error *)(a1 + 8), (const std::logic_error *)(a2 + 8));
  *(void *)(a1 + ++*(void *)(result + 8) = &off_1004669A0;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + ++*(void *)(result + 24) = &off_100451DC0;
  *(void *)(a1 + 32) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(void *)a1 = &off_100466928;
  *(void *)(a1 + ++*(void *)(result + 8) = off_100466958;
  *(void *)(a1 + ++*(void *)(result + 24) = off_100466980;
  return a1;
}

void sub_100316FD8(_Unwind_Exception *a1)
{
  std::logic_error::~logic_error(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100316FFC()
{
  return v0;
}

void sub_100317008()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100317080()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_1003170F8(uint64_t a1)
{
  return (uint64_t)(*(void *)(*(void *)(a1 + 8) + 8) - **(void **)(a1 + 8)) >> 4;
}

uint64_t sub_10031710C(void **a1, uint64_t a2)
{
  if (*(void *)(*a1[1] + 16 * a2)) {
    return ((uint64_t (*)(void))(*a1)[2])();
  }
  else {
    return 0;
  }
}

uint64_t sub_10031714C(uint64_t result, uint64_t a2, uint64_t a3)
{
  *(void *)double result = off_1004669C8;
  *(void *)(result + ++*(void *)(result + 8) = a2;
  *(void *)(result + 16) = a3;
  *(void *)(result + ++*(void *)(result + 24) = 0;
  *(unsigned char *)(result + 32) = 0;
  return result;
}

uint64_t sub_100317174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24) == a2)
  {
    if (*(unsigned char *)(a1 + 32))
    {
      sub_10007B704(a3, a1 + 40);
      return 1;
    }
    return 0;
  }
  *(void *)(a1 + ++*(void *)(result + 24) = a2;
  if (!(*(unsigned int (**)(uint64_t, void, uint64_t))(*(void *)a2 + 16))(a2, *(void *)(a1 + 16), a3))
  {
    if (*(unsigned char *)(a1 + 32))
    {
      nullsub_98(a1 + 40);
      uint64_t result = 0;
      *(unsigned char *)(a1 + 32) = 0;
      return result;
    }
    return 0;
  }
  uint64_t v5 = a1 + 40;
  if (*(unsigned char *)(a1 + 32))
  {
    sub_10007B704(v5, a3);
    return 1;
  }
  else
  {
    sub_1001B0778(v5, a3);
    uint64_t result = 1;
    *(unsigned char *)(a1 + 32) = 1;
  }
  return result;
}

uint64_t sub_100317264(uint64_t a1, uint64_t a2, double *a3)
{
  *(void *)a1 = off_1004669F0;
  *(void *)(a1 + ++*(void *)(result + 8) = a2;
  sub_1001E303C((unsigned int *)(a1 + 16), a3);
  return a1;
}

uint64_t sub_1003172AC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 24))(a2, a1 + 16);
}

uint64_t sub_1003172DC(uint64_t a1)
{
  *(void *)a1 = off_1004669C8;
  if (*(unsigned char *)(a1 + 32))
  {
    nullsub_98(a1 + 40);
    *(unsigned char *)(a1 + 32) = 0;
  }
  return a1;
}

void sub_100317330(uint64_t a1)
{
  *(void *)a1 = off_1004669C8;
  if (*(unsigned char *)(a1 + 32))
  {
    nullsub_98(a1 + 40);
    *(unsigned char *)(a1 + 32) = 0;
  }

  operator delete();
}

void sub_1003173A4(void *a1)
{
  *a1 = off_1004669F0;
  uint64_t v2 = (std::__shared_weak_count *)a1[23];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  sub_1001E35C0(a1 + 10);

  operator delete();
}

void *sub_100317454(void *a1, uint64_t a2, uint64_t a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  unint64_t v6 = *(const void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  int64_t v7 = v5 - *(void *)a2;
  if (v5 != *(void *)a2)
  {
    if (v7 < 0) {
      sub_1000A9108();
    }
    uint64_t v8 = (char *)operator new(v5 - *(void *)a2);
    *a1 = v8;
    a1[1] = v8;
    uint64_t v9 = &v8[8 * (v7 >> 3)];
    a1[2] = v9;
    memcpy(v8, v6, v7);
    a1[1] = v9;
  }
  sub_1003013EC(a3, &v11);
  sub_100300F90(a1 + 3, v11, a3);
  sub_10031753C((uint64_t)a1);
  return a1;
}

void sub_100317504(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)(v1 + 40);
  if (v3)
  {
    *(void *)(v1 + 4++*(void *)(result + 8) = v3;
    operator delete(v3);
  }
  uint64_t v4 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + ++*(void *)(result + 8) = v4;
    operator delete(v4);
  }
  _Unwind_Resume(exception_object);
}

void sub_10031753C(uint64_t a1)
{
  uint64_t v2 = a1 + 24;
  if (sub_1003013E4((unsigned int *)(a1 + 24)) != 1)
  {
    uint64_t v3 = sub_1002AA5A0((void *)a1);
    sub_1003013EC(v2, &v8);
    sub_100318720(v3, (uint64_t)v8, "mean", (uint64_t *)a1, "covariance", v2);
    uint64_t v4 = *(void *)(a1 + 40);
    for (uint64_t i = *(void *)(a1 + 48); v4 != i; v4 += 8)
      ;
    sub_1003016CC(v2);
    if (v7 < 0) {
      operator delete(v6);
    }
  }
}

void sub_1003176F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a32 < 0) {
    operator delete(__p);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  if (a14 < 0)
  {
    operator delete(a9);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100317768(uint64_t a1, uint64_t a2)
{
  return a1;
}

BOOL sub_1003177A8(uint64_t a1)
{
  return sub_1003013E4((unsigned int *)(a1 + 24)) == 1;
}

void sub_1003177CC(void *a1@<X0>, void *a2@<X1>, int a3@<W2>, unint64_t a4@<X3>, void *a5@<X8>)
{
  char v10 = (void *)*a1;
  uint64_t v11 = (void *)a1[1];
  if (0xAAAAAAAAAAAAAAABLL * (v11 - v10) != (uint64_t)(a2[1] - *a2) >> 3)
  {
    sub_1000AE4B0(v15, "");
    sub_100270054("Must be exactly one logweight for each observation", &v22);
    sub_10016A2C4((uint64_t)v15, (uint64_t)&v22, 1);
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v22.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v16) < 0) {
      operator delete(v15[0]);
    }
    sub_10014B3FC((uint64_t)v21);
  }
  if (v11 == v10) {
    sub_1001F352C();
  }
  unint64_t v13 = sub_1002AA5A0(v10);
  *(_OWORD *)std::runtime_error __p = *(_OWORD *)a2;
  uint64_t v20 = a2[2];
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 0;
  sub_100317A84((uint64_t)__p, a4, (uint64_t)v21);
  if (__p[0]) {
    operator delete(__p[0]);
  }
  sub_100317B54(v13, v21, a1, v18);
  uint64_t v14 = sub_1002AA5A0(v18);
  sub_100317C6C(v13, (double **)v21, a1, (unint64_t *)v18, a3, (uint64_t)v15);
  sub_100300F90(&v22, v14, v15);
  if (v16)
  {
    BOOL v17 = v16;
    operator delete(v16);
  }
  sub_100317454(a5, (uint64_t)v18, (uint64_t)&v22);
  if (v22.__r_.__value_.__r.__words[2])
  {
    std::string::size_type v23 = v22.__r_.__value_.__r.__words[2];
    operator delete((void *)v22.__r_.__value_.__r.__words[2]);
  }
  if (v18[0])
  {
    v18[1] = v18[0];
    operator delete(v18[0]);
  }
  if (v21[0])
  {
    v21[1] = v21[0];
    operator delete(v21[0]);
  }
}

void sub_1003179CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

double **sub_100317A84@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(double **)a1;
  *(void *)a3 = *(void *)a1;
  long long v5 = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a3 + ++*(void *)(result + 8) = v5;
  *(void *)(a1 + ++*(void *)(result + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  unint64_t v6 = (double *)v5;
  unint64_t v7 = (uint64_t)(v5 - (void)v4) >> 3;
  BOOL v8 = a2 >= v7;
  unint64_t v9 = a2 - v7;
  if (v9 != 0 && v8)
  {
    sub_10019C3E4(a3, v9);
    uint64_t v4 = *(double **)a3;
    unint64_t v6 = *(double **)(a3 + 8);
  }
  else if (!v8)
  {
    unint64_t v6 = &v4[a2];
    *(void *)(a3 + ++*(void *)(result + 8) = v6;
  }
  char v10 = v4 + 1;
  if (v4 != v6 && v10 != v6)
  {
    double v12 = *v4;
    unint64_t v13 = v4 + 1;
    do
    {
      double v14 = *v13++;
      double v15 = v14;
      if (v12 < v14)
      {
        double v12 = v15;
        uint64_t v4 = v10;
      }
      char v10 = v13;
    }
    while (v13 != v6);
  }
  sub_100357DBC((float64x2_t **)a3, *v4);
  return sub_100357EA4((double **)a3);
}

void sub_100317B38(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + ++*(void *)(result + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

double *sub_100317B54@<X0>(unint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t result = (double *)sub_1002AA4A0(a4, a1);
  if (a1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = a2[1] - *a2;
      if (v10)
      {
        uint64_t v11 = 0;
        uint64_t v12 = 0;
        unint64_t v13 = v10 >> 3;
        if (v13 <= 1) {
          uint64_t v14 = 1;
        }
        else {
          uint64_t v14 = v13;
        }
        double v15 = 0.0;
        double v16 = 0.0;
        do
        {
          double v17 = *(double *)(*a2 + 8 * v12);
          double v18 = v17 * *(double *)sub_1002AA5B0((void *)(*a3 + v11), v9) - v15;
          double v19 = v16 + v18;
          double v15 = v16 + v18 - v16 - v18;
          ++v12;
          v11 += 24;
          double v16 = v16 + v18;
        }
        while (v14 != v12);
      }
      else
      {
        double v19 = 0.0;
      }
      uint64_t result = (double *)sub_1002AA5B0(a4, v9);
      *uint64_t result = v19;
      ++v9;
    }
    while (v9 != a1);
  }
  return result;
}

void sub_100317C4C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + ++*(void *)(result + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_100317C6C(unint64_t a1@<X0>, double **a2@<X1>, void *a3@<X2>, unint64_t *a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(a3[1] - *a3) >> 3) < a2[1] - *a2)
  {
    sub_1000AE4B0(v43, "");
    sub_100318CF4("weights is the dominant input here. The size of weights should determine the size of the operation.", &buf);
    sub_10016A2C4((uint64_t)v43, (uint64_t)&buf, 1);
    if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(buf.__r_.__value_.__l.__data_);
    }
    if (v44 < 0) {
      operator delete(v43[0]);
    }
    sub_10014B3FC((uint64_t)__p);
  }
  double v11 = 1.0;
  if (!a5) {
    goto LABEL_22;
  }
  if (a5 != 1)
  {
    __cxa_allocate_exception(0x40uLL);
    std::logic_error::logic_error((std::logic_error *)&buf, "Not implemented estimation type");
    sub_10018E868((uint64_t)v41);
    sub_1000D8F04((std::logic_error *)&buf, (uint64_t)"static SymmetricMatrix64F MultivariateGaussian::computeCovariance(size_t, const std::vector<double> &, const std::vector<Vector64F> &, const Vector64F &, EstimationType)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/multivariate_gaussian.cpp", 178, (uint64_t)v41);
  }
  uint64_t v12 = *a2;
  unint64_t v13 = a2[1];
  uint64_t v14 = *a2;
  if (*a2 != v13)
  {
    double v15 = v12 + 1;
    uint64_t v14 = *a2;
    if (v12 + 1 != v13)
    {
      double v16 = *v12;
      uint64_t v14 = *a2;
      double v17 = v12 + 1;
      do
      {
        double v18 = *v17++;
        double v19 = v18;
        if (v16 < v18)
        {
          double v16 = v19;
          uint64_t v14 = v15;
        }
        double v15 = v17;
      }
      while (v17 != v13);
    }
  }
  long double v20 = 1.0 - *v14;
  if (v20 < nextafter(1.0, INFINITY) + -1.0) {
    goto LABEL_17;
  }
  if (v12 == v13)
  {
    double v25 = 0.0;
  }
  else
  {
    double v21 = 0.0;
    double v22 = 0.0;
    do
    {
      double v23 = *v12++;
      double v24 = v23 * v23 - v22;
      double v25 = v21 + v24;
      double v22 = v21 + v24 - v21 - v24;
      double v21 = v25;
    }
    while (v12 != v13);
  }
  double v11 = 1.0 / (1.0 - v25);
  if (v11 == INFINITY)
  {
LABEL_17:
    if (qword_10047BED8 != -1) {
      dispatch_once(&qword_10047BED8, &stru_100466A68);
    }
    long long v26 = qword_10047BEE0;
    if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO))
    {
      LOWORD(buf.__r_.__value_.__l.__data_) = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_INFO, "WARNING: MultivariateGaussian fromSample: singular covariance. This is most likely caused by particle deprivation, but can sometime also arise while switching modes/floors. Try increasing the number of particles.", (uint8_t *)&buf, 2u);
    }
    LODWORD(buf.__r_.__value_.__l.__data_) = 1;
    sub_100300F94(a6, a1, &buf);
  }
  else
  {
LABEL_22:
    double v40 = v11;
    sub_100300D10(a6, a1);
    sub_100302268(a6, v43);
    sub_100300D10((uint64_t)&buf, a1);
    sub_1002AA4A0(__p, a1);
    uint64_t v27 = (char *)a2[1] - (char *)*a2;
    if (v27)
    {
      uint64_t v28 = 0;
      unint64_t v29 = 0;
      unint64_t v30 = v27 >> 3;
      if (v30 <= 1) {
        uint64_t v31 = 1;
      }
      else {
        uint64_t v31 = v30;
      }
      do
      {
        sub_1002AA538(__p, *a3 + v28);
        sub_1002FCC88((unint64_t *)__p, a4);
        sub_100300FA8((uint64_t)&buf, 0.0);
        sub_100302204((uint64_t)&buf, (uint64_t)__p, 1.0);
        if (v29 >= a2[1] - *a2) {
          sub_1001F352C();
        }
        sub_10030230C((unint64_t *)v43, (uint64_t)&buf, (*a2)[v29++]);
        v28 += 24;
      }
      while (v31 != v29);
    }
    sub_100301024(a6, (unint64_t *)v43);
    int v33 = *(float64x2_t **)(a6 + 16);
    uint64_t v32 = *(double **)(a6 + 24);
    if (v33 != (float64x2_t *)v32)
    {
      unint64_t v34 = (char *)v32 - (char *)v33 - 8;
      unint64_t v35 = *(double **)(a6 + 16);
      if (v34 < 0x18) {
        goto LABEL_50;
      }
      uint64_t v36 = (v34 >> 3) + 1;
      unint64_t v35 = &v33->f64[v36 & 0x3FFFFFFFFFFFFFFCLL];
      int8x8_t v37 = v33 + 1;
      uint64_t v38 = v36 & 0x3FFFFFFFFFFFFFFCLL;
      do
      {
        float64x2_t v39 = vmulq_n_f64(*v37, v40);
        v37[-1] = vmulq_n_f64(v37[-1], v40);
        float64x2_t *v37 = v39;
        v37 += 2;
        v38 -= 4;
      }
      while (v38);
      if (v36 != (v36 & 0x3FFFFFFFFFFFFFFCLL))
      {
LABEL_50:
        do
        {
          double *v35 = v40 * *v35;
          ++v35;
        }
        while (v35 != v32);
      }
    }
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    if (buf.__r_.__value_.__r.__words[2])
    {
      std::string::size_type v46 = buf.__r_.__value_.__r.__words[2];
      operator delete((void *)buf.__r_.__value_.__r.__words[2]);
    }
    if (v43[0])
    {
      v43[1] = v43[0];
      operator delete(v43[0]);
    }
  }
}

void sub_1003180F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,std::invalid_argument a27,void *a28,uint64_t a29)
{
  if (a20 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100318224(uint64_t a1@<X0>, int a2@<W1>, void *a3@<X8>)
{
  if (*(unsigned char *)a1)
  {
    uint64_t v5 = a1 + 32;
    if (sub_1003013E4((unsigned int *)(a1 + 32)) != 1) {
      sub_100301D68(v5);
    }
    if (a2)
    {
      if (qword_10047BED8 != -1)
      {
        dispatch_once(&qword_10047BED8, &stru_100466A68);
        unint64_t v6 = qword_10047BEE0;
        if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
          goto LABEL_13;
        }
        goto LABEL_6;
      }
      unint64_t v6 = qword_10047BEE0;
      if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO))
      {
LABEL_6:
        *(_WORD *)std::string buf = 0;
        unint64_t v7 = "WARNING: UNIFORM: Max covariance blue dot, apply as UNIFORM.";
LABEL_12:
        _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, v7, buf, 2u);
      }
    }
  }
  else if (a2)
  {
    if (qword_10047BED8 == -1)
    {
      unint64_t v6 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        goto LABEL_13;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100466A68);
      unint64_t v6 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        goto LABEL_13;
      }
    }
    *(_WORD *)std::string buf = 0;
    unint64_t v7 = "WARNING: UNIFORM: Uninitialized blue dot, start with UNIFORM prior.";
    goto LABEL_12;
  }
LABEL_13:
  *a3 = 0;
  a3[1] = 0;
}

void sub_100318590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000BA884((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1003185A4(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_1003185BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11) {
    sub_1003A637C(a11);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003185D8(uint64_t a1@<X0>, int a2@<W1>, void *a3@<X8>)
{
  sub_100318224(a1, a2, &v6);
  if (!v6)
  {
    uint64_t v4 = *(std::__shared_weak_count **)algn_1004929B8;
    *a3 = qword_1004929B0;
    a3[1] = v4;
    if (!v4) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v4 = v7;
  *a3 = v6;
  a3[1] = v4;
  if (v4) {
LABEL_3:
  }
    atomic_fetch_add_explicit(&v4->__shared_owners_, 1uLL, memory_order_relaxed);
LABEL_4:
  uint64_t v5 = v7;
  if (v7 && !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
}

void sub_1003186A4(void *a1)
{
  uint64_t v1 = a1 + 3;
  uint64_t v2 = sub_1002AA5A0(a1);
  int v3 = 1;
  sub_100300F94((uint64_t)v4, v2, &v3);
  sub_1003011E0(v1, (uint64_t)v4);
  if (__p)
  {
    uint64_t v6 = __p;
    operator delete(__p);
  }
}

void sub_100318704(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100318720(uint64_t result, uint64_t a2, char *a3, uint64_t *a4, char *a5, uint64_t a6)
{
  if (result != a2)
  {
    uint64_t v11 = result;
    sub_1000CD96C((uint64_t)v28);
    sub_1002AAA6C(v28, a4);
    sub_1000CD96C((uint64_t)v27);
    sub_1003019A4(v27, a6);
    sub_1000AE4B0(v24, a3);
    std::stringbuf::str();
    sub_1000AE4B0(v22, a5);
    std::stringbuf::str();
    sub_100371BA4(&v26, v24, v11, v18, v22, a2, __p);
    if ((char)v21 < 0)
    {
      operator delete(__p[0]);
      if ((v23 & 0x80000000) == 0) {
        goto LABEL_4;
      }
    }
    else if ((v23 & 0x80000000) == 0)
    {
LABEL_4:
      if (SHIBYTE(v19) < 0) {
        goto LABEL_5;
      }
      goto LABEL_9;
    }
    operator delete(v22[0]);
    if (SHIBYTE(v19) < 0)
    {
LABEL_5:
      operator delete(v18[0]);
      if ((v25 & 0x80000000) == 0)
      {
LABEL_11:
        if (!sub_10016A1C0()) {
          goto LABEL_28;
        }
        sub_10000C898((uint64_t)v18);
        sub_1001664D8(0);
        if ((v21 & 0x80u) == 0) {
          uint64_t v12 = __p;
        }
        else {
          uint64_t v12 = (void **)__p[0];
        }
        if ((v21 & 0x80u) == 0) {
          uint64_t v13 = v21;
        }
        else {
          uint64_t v13 = (uint64_t)__p[1];
        }
        sub_10002986C(&v19, (uint64_t)v12, v13);
        if ((char)v21 < 0) {
          operator delete(__p[0]);
        }
        if (qword_10047BED8 == -1)
        {
          uint64_t v14 = qword_10047BEE0;
          if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
          {
LABEL_22:
            double v15 = std::logic_error::what(&v26);
            std::stringbuf::str();
            if ((v21 & 0x80u) == 0) {
              double v16 = __p;
            }
            else {
              double v16 = (void **)__p[0];
            }
            *(_DWORD *)std::string buf = 136315394;
            unint64_t v30 = v15;
            __int16 v31 = 2080;
            uint64_t v32 = v16;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "Precondition failure: %s\n%s\n", buf, 0x16u);
            if ((char)v21 < 0) {
              operator delete(__p[0]);
            }
          }
        }
        else
        {
          dispatch_once(&qword_10047BED8, &stru_100466A68);
          uint64_t v14 = qword_10047BEE0;
          if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
            goto LABEL_22;
          }
        }
        sub_1000DEA14((uint64_t)v18);
LABEL_28:
        __cxa_allocate_exception(0x80uLL);
        sub_10018E868((uint64_t)v17);
        sub_1002FD52C((uint64_t)&v26, (uint64_t)"void Preconditions::checkDimension(size_t, size_t, const char *, M1 &&, const char *, M2 &&) [M1 = const Vector64F &, M2 = const SymmetricMatrix64F &]", (uint64_t)"../../../common/math/dimensionality_mismatch_error.h", 100, (uint64_t)v17);
      }
LABEL_10:
      operator delete(v24[0]);
      goto LABEL_11;
    }
LABEL_9:
    if ((v25 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  return result;
}

void sub_100318A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,void *__p,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,std::logic_error a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  sub_1000DEA14((uint64_t)&a13);
  sub_100371C40(&a57);
  sub_1000CDB10((uint64_t)&a66);
  sub_1000CDB10((uint64_t)&STACK[0x2D8]);
  _Unwind_Resume(a1);
}

void sub_100318A94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,void *__p,uint64_t a52,int a53,__int16 a54,char a55,char a56,void *a57,uint64_t a58,int a59,__int16 a60,char a61,char a62,void *a63)
{
  if (a56 < 0)
  {
    operator delete(__p);
    if (a62 < 0)
    {
LABEL_5:
      operator delete(a57);
      if (a18 < 0)
      {
LABEL_8:
        operator delete(a13);
        if ((a68 & 0x80000000) == 0)
        {
LABEL_12:
          sub_1000CDB10((uint64_t)&a72);
          sub_1000CDB10((uint64_t)&STACK[0x2D8]);
          _Unwind_Resume(a1);
        }
LABEL_11:
        operator delete(a63);
        sub_1000CDB10((uint64_t)&a72);
        sub_1000CDB10((uint64_t)&STACK[0x2D8]);
        _Unwind_Resume(a1);
      }
LABEL_10:
      if ((a68 & 0x80000000) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else if (a62 < 0)
  {
    goto LABEL_5;
  }
  if (a18 < 0) {
    goto LABEL_8;
  }
  goto LABEL_10;
}

void sub_100318B5C(_Unwind_Exception *a1)
{
}

void sub_100318B70(_Unwind_Exception *a1)
{
}

void *sub_100318B88(void *a1, double **a2)
{
  sub_10028F27C(a2, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  uint64_t result = sub_10002986C(a1, (uint64_t)p_p, size);
  uint64_t v6 = result;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    return v6;
  }
  return result;
}

void sub_100318C0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100318C28(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

void sub_100318C58(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100466A98;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100318C78(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100466A98;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_100318CCC(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

std::string *sub_100318CF4@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_100318D28(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100318D44()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100318DBC()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100318E34(uint64_t **a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = a3[1];
  if (*a3 == v4)
  {
    uint64_t v10 = *a3;
  }
  else
  {
    do
    {
      uint64_t v6 = *(void *)(v3 + 40);
      int v7 = *(_DWORD *)(v3 + 32);
      if (v7 >= 0) {
        uint64_t v6 = v3 + 40;
      }
      BOOL v8 = (void *)(v6 + 8);
      uint64_t v9 = (void *)(v3 + 96);
      if (v7 != v7 >> 31) {
        uint64_t v9 = v8;
      }
      if (*v9 != a2)
      {
        sub_1000AE4B0(v15, "");
        sub_1003194F4("Rolling wifi independence requires the current Wi-Fi scan to always appear in the history. This isn't guaranteed if the scan has different timestamps", &__p);
        sub_10016A2C4((uint64_t)v15, (uint64_t)&__p, 1);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (v16 < 0) {
          operator delete(v15[0]);
        }
        sub_1000D11E0((uint64_t)&v14);
      }
      v3 += 208;
    }
    while (v3 != v4);
    uint64_t v10 = *a3;
    uint64_t v3 = a3[1];
  }
  uint64_t v11 = *a1;
  uint64_t v12 = (*a1)[2];
  uint64_t v13 = (*a1)[1];
  sub_1002628B0(v11 + 1, v11[2], v10, v3, 0x4EC4EC4EC4EC4EC5 * ((v3 - v10) >> 4));
  sub_100319014(v11, 0x4EC4EC4EC4EC4EC5 * ((v12 - v13) >> 4));
}

void sub_100318FC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100319008(void *a1)
{
  return *a1 + 8;
}

void sub_100319014(uint64_t *a1, unint64_t a2)
{
  uint64_t v3 = a1[1];
  uint64_t v2 = (uint64_t)(a1 + 1);
  uint64_t v4 = a1[2] - v3;
  if (v4 == 208)
  {
    *((_DWORD *)a1 + ++*(void *)(result + 8) = 1;
  }
  else
  {
    uint64_t v5 = v4 / 208;
    if (v4 / 208 <= a2)
    {
      unint64_t v6 = 0;
    }
    else
    {
      unint64_t v6 = 0;
      do
      {
        unint64_t v7 = v3 + 208 * a2;
        unint64_t v10 = *(void *)(v7 + 40);
        unint64_t v8 = v7 + 40;
        unint64_t v9 = v10;
        int v11 = *(_DWORD *)(v8 - 8);
        if (v11 >= 0) {
          unint64_t v9 = v8;
        }
        uint64_t v12 = (uint64_t *)(v9 + 8);
        uint64_t v13 = (uint64_t *)(v8 + 56);
        if (v11 != v11 >> 31) {
          uint64_t v13 = v12;
        }
        if (v6 != a2)
        {
          uint64_t v14 = *v13;
          uint64_t v15 = *a1;
          uint64_t v16 = v3 + 96 + 208 * v6;
          while (1)
          {
            int v17 = *(_DWORD *)(v16 - 64);
            uint64_t v18 = v16 - 56;
            if (v17 < 0) {
              uint64_t v18 = *(void *)(v16 - 56);
            }
            uint64_t v19 = v18 + 8;
            long double v20 = (void *)(v17 == v17 >> 31 ? v16 : v19);
            if (v15 >= v14 - *v20) {
              break;
            }
            ++v6;
            *((_DWORD *)a1 + ++*(void *)(result + 8) = 2;
            v16 += 208;
            if (a2 == v6) {
              goto LABEL_6;
            }
          }
        }
        if (v6 == a2)
        {
LABEL_6:
          *((_DWORD *)a1 + ++*(void *)(result + 8) = 1;
          unint64_t v6 = a2;
        }
        ++a2;
      }
      while (a2 != v5);
    }
    uint64_t v21 = v3 + 208 * v6;
    sub_10031940C(&__p, v3, v21);
    sub_10031924C(v2, v3, v21, v22);
    char v23 = (char *)__p;
    if (__p)
    {
      double v24 = v30;
      char v25 = __p;
      if (v30 != __p)
      {
        std::logic_error v26 = v30 - 168;
        do
        {
          int v28 = *((_DWORD *)v24 - 44);
          if (v28 == v28 >> 31)
          {
            if (*(v24 - 128)) {
              *(v24 - 12++*(void *)(result + 8) = 0;
            }
          }
          else
          {
            uint64_t v27 = *((void *)v24 - 21);
            if (v28 < 0)
            {
              if (v27) {
                (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
              }
            }
            else
            {
              (*(void (**)(char *))v27)(v24 - 168);
            }
          }
          v24 -= 208;
          v26 -= 208;
        }
        while (v24 != v23);
        char v25 = __p;
      }
      unint64_t v30 = v23;
      operator delete(v25);
    }
  }
}

void sub_100319230(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char *a10)
{
  if (a10) {
    sub_1003A63D8((uint64_t)&a10, a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031924C(uint64_t a1, uint64_t a2, uint64_t a3, __n128 a4)
{
  if (a2 != a3)
  {
    uint64_t v6 = a3;
    uint64_t v7 = *(void *)(a1 + 8);
    if (a3 == v7)
    {
      uint64_t v9 = a2;
      if (a3 == a2)
      {
LABEL_24:
        *(void *)(a1 + ++*(void *)(result + 8) = v9;
        return a2;
      }
    }
    else
    {
      uint64_t v8 = 16 * ((a3 - a2) >> 4);
      uint64_t v9 = a2;
      do
      {
        int v11 = *(_DWORD *)(v9 + v8);
        if (*(_DWORD *)v9 == v11)
        {
          uint64_t v12 = (void *)(v9 + 8);
          uint64_t v13 = v9 + 8 + v8;
          if (*(_DWORD *)v9 == *(int *)v9 >> 31)
          {
            *uint64_t v12 = *(void *)v13;
          }
          else
          {
            long long v10 = *(_OWORD *)v13;
            *(_DWORD *)(v9 + ++*(void *)(result + 24) = *(_DWORD *)(v13 + 16);
            *(_OWORD *)uint64_t v12 = v10;
          }
        }
        else
        {
          int v14 = v11 ^ (v11 >> 31);
          uint64_t v15 = v9 + 8 + v8;
          if (v14)
          {
            long long v16 = *(_OWORD *)v15;
            *(_DWORD *)(v9 + ++*(void *)(result + 24) = *(_DWORD *)(v15 + 16);
            *(_OWORD *)(v9 + ++*(void *)(result + 8) = v16;
            *(_DWORD *)uint64_t v9 = v14;
          }
          else
          {
            *(void *)(v9 + ++*(void *)(result + 8) = *(void *)v15;
            *(_DWORD *)uint64_t v9 = 0;
          }
        }
        a4.n128_f64[0] = sub_100262FEC((uint64_t *)(v9 + 32), (unsigned int *)(v9 + 32 + v8));
        v9 += 208;
      }
      while (v9 + v8 != v7);
      uint64_t v6 = *(void *)(a1 + 8);
      if (v6 == v9) {
        goto LABEL_24;
      }
    }
    uint64_t v17 = v6 - 168;
    do
    {
      int v19 = *(_DWORD *)(v6 - 176);
      if (v19 == v19 >> 31)
      {
        if (*(unsigned char *)(v6 - 128)) {
          *(unsigned char *)(v6 - 12++*(void *)(result + 8) = 0;
        }
      }
      else
      {
        uint64_t v18 = *(void *)(v6 - 168);
        if (v19 < 0)
        {
          if (v18) {
            (*(void (**)(uint64_t, __n128))(*(void *)v18 + 8))(v18, a4);
          }
        }
        else
        {
          (*(void (**)(uint64_t))v18)(v6 - 168);
        }
      }
      v6 -= 208;
      v17 -= 208;
    }
    while (v6 != v9);
    goto LABEL_24;
  }
  return a2;
}

void *sub_10031940C(void *a1, uint64_t a2, uint64_t a3)
{
  a1[2] = 0;
  uint64_t v4 = (uint64_t)(a1 + 2);
  *a1 = 0;
  a1[1] = 0;
  int64_t v5 = a3 - a2;
  if (a3 != a2)
  {
    unint64_t v6 = 0x4EC4EC4EC4EC4EC5 * (v5 >> 4);
    if (v6 >= 0x13B13B13B13B13CLL) {
      sub_1000A9108();
    }
    uint64_t v9 = (char *)operator new(v5);
    *a1 = v9;
    a1[1] = v9;
    a1[2] = &v9[208 * v6];
    a1[1] = sub_100233F14(v4, a2, a3, (uint64_t)v9);
  }
  return a1;
}

void sub_1003194C8(_Unwind_Exception *exception_object)
{
  *(void *)(v1 + ++*(void *)(result + 8) = v2;
  if (*(void *)v1) {
    sub_1003A545C((void **)(v1 + 8), *(char **)v1, (void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_1003194F4@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_100319528(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100319544()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1003195BC()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

char *sub_100319634@<X0>(char *result@<X0>, uint64_t a2@<X8>)
{
  if (result[23] < 0)
  {
    uint64_t result = (char *)sub_1000559FC((unsigned char *)a2, *(void **)result, *((void *)result + 1));
  }
  else
  {
    *(_OWORD *)a2 = *(_OWORD *)result;
    *(void *)(a2 + 16) = *((void *)result + 2);
  }
  *(void *)(a2 + ++*(void *)(result + 24) = 0;
  *(void *)(a2 + 32) = 0;
  *(void *)(a2 + 40) = 0;
  return result;
}

double *sub_100319694(double *a1)
{
  double v2 = sub_1002A3BDC();
  *a1 = v2 * v2;
  return a1;
}

void sub_1003196C8()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100319740()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_1003197B8(uint64_t a1, uint64_t a2, int a3, int a4)
{
  if (a3 == 1)
  {
    *(void *)a1 = 0;
    *(void *)(a1 + ++*(void *)(result + 8) = 0;
  }
  else
  {
    uint64_t v8 = operator new(0x78uLL);
    v8[1] = 0;
    void v8[2] = 0;
    *uint64_t v8 = off_100466DC8;
    *(void *)a1 = sub_10008DFA4((uint64_t)(v8 + 3));
    *(void *)(a1 + ++*(void *)(result + 8) = v8;
  }
  sub_100319A74((wireless_diagnostics::google::protobuf::MessageLite **)a1, a2, a3, a4);
  return a1;
}

void sub_100319858(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_100319870(uint64_t a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, _Unwind_Exception *exception_object)
{
  int v11 = *(std::__shared_weak_count **)(v9 + 8);
  if (v11)
  {
    sub_1003A6768(v11, a1, a2, (uint64_t)&exception_object);
    _Unwind_Resume(exception_object);
  }
  JUMPOUT(0x100319868);
}

int *sub_100319894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100170200(a1, &v5);
  wireless_diagnostics::google::protobuf::io::FileInputStream::FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)v4, v5, -1);
  sub_1003197B8(a2, (uint64_t)v4, 0, 1);
  wireless_diagnostics::google::protobuf::io::FileInputStream::~FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)v4);
  return sub_100052AEC(&v5);
}

void sub_1003198F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  wireless_diagnostics::google::protobuf::io::FileInputStream::~FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)&a9);
  sub_100052AEC((int *)(v9 - 20));
  _Unwind_Resume(a1);
}

void sub_100319914(_Unwind_Exception *a1)
{
  sub_100052AEC((int *)(v1 - 20));
  _Unwind_Resume(a1);
}

uint64_t sub_100319928(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = operator new(0x78uLL);
  v4[1] = 0;
  v4[2] = 0;
  *uint64_t v4 = off_100466DC8;
  *(void *)a1 = sub_10008DFA4((uint64_t)(v4 + 3));
  *(void *)(a1 + ++*(void *)(result + 8) = v4;
  sub_100170200(a2, &v7);
  wireless_diagnostics::google::protobuf::io::FileInputStream::FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)v6, v7, -1);
  v8[0] = v6;
  v8[1] = 0;
  void v8[2] = 0;
  v9[0] = 0;
  *(void *)((char *)v9 + 6) = 0;
  long long v10 = xmmword_1003E7100;
  int v11 = 0;
  int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::default_recursion_limit_;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  wireless_diagnostics::google::protobuf::io::CodedInputStream::Refresh((wireless_diagnostics::google::protobuf::io::CodedInputStream *)v8);
  sub_100319F14((wireless_diagnostics::google::protobuf::MessageLite **)a1, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)v8);
  wireless_diagnostics::google::protobuf::io::CodedInputStream::~CodedInputStream((wireless_diagnostics::google::protobuf::io::CodedInputStream *)v8);
  wireless_diagnostics::google::protobuf::io::FileInputStream::~FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)v6);
  sub_100052AEC(&v7);
  return a1;
}

void sub_100319A0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,char a22)
{
  wireless_diagnostics::google::protobuf::io::CodedInputStream::~CodedInputStream((wireless_diagnostics::google::protobuf::io::CodedInputStream *)&a22);
  wireless_diagnostics::google::protobuf::io::FileInputStream::~FileInputStream((wireless_diagnostics::google::protobuf::io::FileInputStream *)&a9);
  sub_100052AEC(&a21);
  sub_1000BA884(v22);
  _Unwind_Resume(a1);
}

void sub_100319A48(_Unwind_Exception *a1)
{
  sub_1000BA884(v1);
  _Unwind_Resume(a1);
}

void sub_100319A5C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_100319A74(wireless_diagnostics::google::protobuf::MessageLite **a1, uint64_t a2, int a3, int a4)
{
  v8[0] = a2;
  v8[1] = 0;
  void v8[2] = 0;
  v9[0] = 0;
  *(void *)((char *)v9 + 6) = 0;
  long long v10 = xmmword_1003E7100;
  int v11 = 0;
  int v12 = wireless_diagnostics::google::protobuf::io::CodedInputStream::default_recursion_limit_;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  wireless_diagnostics::google::protobuf::io::CodedInputStream::Refresh((wireless_diagnostics::google::protobuf::io::CodedInputStream *)v8);
  if (a4 == 1)
  {
    sub_100319C48((uint64_t)a1, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)v8, a3);
  }
  else if (!a4)
  {
    if (a3)
    {
      int v7 = sub_1000AE4B0(&v16, "");
      sub_10016A2C4((uint64_t)v7, 0, 0);
      if (v17 < 0) {
        operator delete(v16);
      }
      sub_1000D11E0((uint64_t)&__p);
    }
    sub_100319F14(a1, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)v8);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::~CodedInputStream((wireless_diagnostics::google::protobuf::io::CodedInputStream *)v8);
}

void sub_100319B64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a24 < 0)
  {
    operator delete(__p);
    wireless_diagnostics::google::protobuf::io::CodedInputStream::~CodedInputStream((wireless_diagnostics::google::protobuf::io::CodedInputStream *)&a9);
    _Unwind_Resume(a1);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::~CodedInputStream((wireless_diagnostics::google::protobuf::io::CodedInputStream *)&a9);
  _Unwind_Resume(a1);
}

void **sub_100319BA0(void **a1)
{
  double v2 = (char *)*a1;
  if (*a1)
  {
    uint64_t v3 = (char *)a1[1];
    uint64_t v4 = *a1;
    if (v3 != v2)
    {
      int v5 = v3 - 40;
      unint64_t v6 = v3 - 40;
      int v7 = v3 - 40;
      do
      {
        uint64_t v8 = *(void (***)(char *))v7;
        v7 -= 40;
        (*v8)(v6);
        v5 -= 40;
        BOOL v9 = v6 == v2;
        unint64_t v6 = v7;
      }
      while (!v9);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_100319C3C(uint64_t a1)
{
  return *(void *)(*(void *)a1 + 72);
}

uint64_t sub_100319C48(uint64_t result, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, int a3)
{
  int v5 = (wireless_diagnostics::google::protobuf::MessageLite **)result;
  unsigned int v12 = 0;
  unint64_t v6 = (char *)*((void *)this + 1);
  if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v12);
    if ((result & 1) == 0)
    {
      __cxa_allocate_exception(0x40uLL);
      sub_1000AE4B0(&v10, "Cannot find header length in input stream");
      std::runtime_error::runtime_error(&v11, &v10);
      v11.__vftable = (std::runtime_error_vtbl *)&off_1004646C0;
      sub_10018E868((uint64_t)v9);
      sub_1002AE794(&v11, (uint64_t)"void TileHeader::deserializeFramed(google::protobuf::io::CodedInputStream &, Mode)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 122, (uint64_t)v9);
    }
  }
  else
  {
    unsigned int v12 = *v6;
    *((void *)this + 1) = v6 + 1;
  }
  if (a3 == 1)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, v12);
    if ((result & 1) == 0)
    {
      __cxa_allocate_exception(0x40uLL);
      std::runtime_error::runtime_error((std::runtime_error *)&v10, "Failed to skip header in input stream");
      sub_10018E868((uint64_t)v8);
      sub_10031A0E8((std::runtime_error *)&v10, (uint64_t)"void TileHeader::deserializeFramed(google::protobuf::io::CodedInputStream &, Mode)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 134, (uint64_t)v8);
    }
  }
  else if (!a3)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v12);
    sub_100319F14(v5, this);
    return wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
  }
  return result;
}

void sub_100319E38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, uint64_t a14, std::underflow_error a15, int a16, __int16 a17, char a18, char a19)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error((std::runtime_error *)(v19 - 56));
  if (a19 < 0) {
    operator delete(a15.__vftable);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100319F14(wireless_diagnostics::google::protobuf::MessageLite **a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::MessageLite::MergeFromCodedStream(*a1, a2);
  if ((result & 1) == 0)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v6, "Failed to deserialize TileHeader message");
    sub_10018E868((uint64_t)v5);
    sub_10031A0E8(&v6, (uint64_t)"void TileHeader::deserializeNaked(google::protobuf::io::CodedInputStream &)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 143, (uint64_t)v5);
  }
  if (!*((unsigned char *)a2 + 36))
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v6, "Failed to consume entire message");
    sub_10018E868((uint64_t)v4);
    sub_10031A0E8(&v6, (uint64_t)"void TileHeader::deserializeNaked(google::protobuf::io::CodedInputStream &)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 147, (uint64_t)v4);
  }
  return result;
}

void sub_10031A068(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  if (__p) {
    operator delete(__p);
  }
  std::underflow_error::~underflow_error((std::underflow_error *)(v13 - 32));
  _Unwind_Resume(a1);
}

void sub_10031A0C0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10031A0D4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10031A0E8(std::runtime_error *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  std::runtime_error::runtime_error(&v12, a1);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  int v17 = -1;
  v12.__vftable = (std::runtime_error_vtbl *)off_100466C90;
  uint64_t v13 = off_100466CB8;
  sub_10031C9AC((uint64_t)&v18, (uint64_t)&v12);
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  int v21 = a4;
  BOOL v9 = *(const void **)a5;
  size_t v10 = *(void *)(a5 + 8) - *(void *)a5;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0) {
      sub_1000A9108();
    }
    std::string __p = operator new(v10);
    memcpy(__p, v9, v10);
  }
  sub_10031C650();
}

void sub_10031A3F4(void *a1)
{
  std::underflow_error::~underflow_error(v1);
  sub_1000A6954(a1);
}

void sub_10031A408(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    operator delete(__p);
    sub_1000A6954(a1);
  }
  sub_1000A6954(a1);
}

void sub_10031A430(std::underflow_error *this)
{
  this[1].__vftable = (std::underflow_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::underflow_error::~underflow_error(this);
}

int *sub_10031A4BC(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)a1 + 92) & 0x10) == 0)
  {
    sub_1000AE4B0(__p, "");
    sub_10016A2C4((uint64_t)__p, 0, 0);
    if (v12 < 0) {
      operator delete(__p[0]);
    }
    sub_1000D11E0((uint64_t)&v15);
  }
  sub_100052B3C(a2, 1, 0x1A4u, &v14);
  wireless_diagnostics::google::protobuf::io::FileOutputStream::FileOutputStream((wireless_diagnostics::google::protobuf::io::FileOutputStream *)__p, v14, -1);
  if ((wireless_diagnostics::google::protobuf::MessageLite::SerializeToZeroCopyStream() & 1) == 0)
  {
    __cxa_allocate_exception(0x40uLL);
    std::to_string(&v9, __val);
    uint64_t v3 = std::string::insert(&v9, 0, "Failed to serialize tile header. errno=");
    long long v4 = *(_OWORD *)&v3->__r_.__value_.__l.__data_;
    v15.__r_.__value_.__r.__words[2] = v3->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v15.__r_.__value_.__l.__data_ = v4;
    v3->__r_.__value_.__l.__size_ = 0;
    v3->__r_.__value_.__r.__words[2] = 0;
    v3->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v10, &v15);
    sub_10018E868((uint64_t)v8);
    sub_100266EAC(&v10, (uint64_t)"void TileHeader::saveUnframedTo(const fs::path &) const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 172, (uint64_t)v8);
  }
  if ((wireless_diagnostics::google::protobuf::io::FileOutputStream::Flush((wireless_diagnostics::google::protobuf::io::FileOutputStream *)__p) & 1) == 0)
  {
    __cxa_allocate_exception(0x40uLL);
    std::to_string(&v9, __val);
    int v5 = std::string::insert(&v9, 0, "Failed to flush tile header. errno=");
    long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
    v15.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v15.__r_.__value_.__l.__data_ = v6;
    v5->__r_.__value_.__l.__size_ = 0;
    v5->__r_.__value_.__r.__words[2] = 0;
    v5->__r_.__value_.__r.__words[0] = 0;
    std::runtime_error::runtime_error(&v10, &v15);
    sub_10018E868((uint64_t)v7);
    sub_100266EAC(&v10, (uint64_t)"void TileHeader::saveUnframedTo(const fs::path &) const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 175, (uint64_t)v7);
  }
  wireless_diagnostics::google::protobuf::io::FileOutputStream::~FileOutputStream((wireless_diagnostics::google::protobuf::io::FileOutputStream *)__p);
  return sub_100052AEC(&v14);
}

void sub_10031A6E4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 - 41) < 0) {
    operator delete(*(void **)(v1 - 64));
  }
  _Unwind_Resume(exception_object);
}

void sub_10031A700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,std::runtime_error a21,char a22)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a21);
  if (*(char *)(v22 - 41) < 0) {
    operator delete(*(void **)(v22 - 64));
  }
  if (a20 < 0) {
    operator delete(a15);
  }
  wireless_diagnostics::google::protobuf::io::FileOutputStream::~FileOutputStream((wireless_diagnostics::google::protobuf::io::FileOutputStream *)&a22);
  sub_100052AEC((int *)(v22 - 68));
  _Unwind_Resume(a1);
}

uint64_t sub_10031A82C(uint64_t a1)
{
  if ((*(unsigned char *)(*(void *)a1 + 92) & 0x10) == 0)
  {
    sub_1000AE4B0(__p, "");
    sub_10016A2C4((uint64_t)__p, 0, 0);
    if (v4 < 0) {
      operator delete(__p[0]);
    }
    sub_1000D11E0((uint64_t)&v2);
  }
  return *(void *)(*(void *)a1 + 80);
}

void sub_10031A8C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031A8E4(uint64_t a1)
{
  return (*(unsigned __int8 *)(*(void *)a1 + 92) >> 4) & 1;
}

uint64_t *sub_10031A8F4(uint64_t *result, uint64_t a2)
{
  uint64_t v2 = *result;
  *(_DWORD *)(v2 + 92) = *(_DWORD *)(*result + 92) | 0x10;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t sub_10031A90C(void *a1)
{
  return *a1 + 16;
}

float sub_10031A918(void *a1, uint64_t a2, void *a3, uint64_t a4, double a5)
{
  float v10 = 0.0;
  if (sub_100233D08(a5)) {
    return v10;
  }
  std::runtime_error v11 = sub_10031E558(a1, a2);
  if (!v11)
  {
    if (!sub_10031E558(a3, a2)) {
      return v10;
    }
    float v19 = (float)*(int *)(a4 + 24);
    float v14 = (float)*(int *)(a4 + 28);
    float v10 = *(float *)(a4 + 16);
    double v15 = (float)(v19 - v14);
    if (v15 >= a5) {
      return v10;
    }
    float v16 = *(float *)(a4 + 20);
    if ((float)(v19 + v14) > a5) {
      goto LABEL_5;
    }
    return v16;
  }
  uint64_t v12 = a1[8] + 40 * *((int *)v11 + 12);
  float v13 = (float)*(int *)(v12 + 24);
  float v14 = (float)*(int *)(v12 + 28);
  float v10 = *(float *)(v12 + 16);
  double v15 = (float)(v13 - v14);
  if (v15 < a5)
  {
    float v16 = *(float *)(v12 + 20);
    if ((float)(v13 + v14) > a5)
    {
LABEL_5:
      float v17 = a5 - v15;
      return (float)(v10 * (float)(1.0 - (float)(v17 / (float)(v14 + v14))))
           + (float)(v16 * (float)(v17 / (float)(v14 + v14)));
    }
    return v16;
  }
  return v10;
}

double sub_10031AA38(void *a1, uint64_t *a2, void *a3, uint64_t a4, int a5, void *a6)
{
  if (a5 == 2)
  {
    uint64_t v42 = *a2;
    uint64_t v43 = a2[1];
    double v13 = 0.0;
    if (*a2 != v43)
    {
      do
      {
        if (sub_10031E558(a1, v42)) {
          double v13 = v13 + 1.0;
        }
        v42 += 208;
      }
      while (v42 != v43);
    }
  }
  else if (a5 == 1)
  {
    return (double)(unint64_t)(0x4EC4EC4EC4EC4EC5 * ((a2[1] - *a2) >> 4));
  }
  else
  {
    if (a5)
    {
      __cxa_allocate_exception(0x40uLL);
      std::to_string(&v57, a5);
      long long v50 = std::string::insert(&v57, 0, "Unrecognized coarse indoor weight calculation type ");
      long long v51 = *(_OWORD *)&v50->__r_.__value_.__l.__data_;
      v58.__r_.__value_.__r.__words[2] = v50->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v58.__r_.__value_.__l.__data_ = v51;
      v50->__r_.__value_.__l.__size_ = 0;
      v50->__r_.__value_.__r.__words[2] = 0;
      v50->__r_.__value_.__r.__words[0] = 0;
      std::runtime_error::runtime_error(&v59, &v58);
      v59.__vftable = (std::runtime_error_vtbl *)&off_100453630;
      sub_10018E868((uint64_t)v56);
      sub_1000CC8F4(&v59, (uint64_t)"double CoarseIndoorApData::cumulativeCoarseWeight(const std::vector<RadioScanEntry> &, const std::unordered_set<MacAddress> &, const proto::radiomap::CoarseApParams &, CumulativeCoarseIndoorWeightType, FloorYieldEntry *) const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 312, (uint64_t)v56);
    }
    uint64_t v9 = *a2;
    uint64_t v10 = a2[1];
    if (*a2 == v10)
    {
      double v13 = 0.0;
      if (a6) {
LABEL_44:
      }
        sub_1001A5104((uint64_t)a6, v13);
    }
    else
    {
      uint64_t v12 = a3;
      if (a6)
      {
        long long v54 = (void **)(a6 + 7);
        double v13 = 0.0;
        uint64_t v52 = a2[1];
        while (1)
        {
          while (1)
          {
            int v14 = *(_DWORD *)(v9 + 32);
            if (v14 == v14 >> 31)
            {
              double v15 = *(double *)(v9 + 72);
            }
            else
            {
              uint64_t v16 = v14 >= 0 ? v9 + 40 : *(void *)(v9 + 40);
              double v15 = (double)*(int *)(v16 + 92);
            }
            double v17 = sub_10031A918(a1, v9, v12, a4, v15);
            __int16 v18 = llround(v17 * 10.0);
            uint64_t v20 = (char *)a6[8];
            unint64_t v19 = a6[9];
            if ((unint64_t)v20 >= v19) {
              break;
            }
            *(_WORD *)uint64_t v20 = v18;
            double v13 = v13 + v17;
            a6[8] = v20 + 2;
            v9 += 208;
            if (v9 == v10) {
              goto LABEL_44;
            }
          }
          uint64_t v21 = a4;
          uint64_t v22 = (char *)*v54;
          uint64_t v23 = v20 - (unsigned char *)*v54;
          if (v23 <= -3) {
            sub_1000A9108();
          }
          uint64_t v24 = v23 >> 1;
          unint64_t v25 = v19 - (void)v22;
          if (v25 <= (v23 >> 1) + 1) {
            unint64_t v26 = v24 + 1;
          }
          else {
            unint64_t v26 = v25;
          }
          BOOL v27 = v25 >= 0x7FFFFFFFFFFFFFFELL;
          uint64_t v28 = 0x7FFFFFFFFFFFFFFFLL;
          if (!v27) {
            uint64_t v28 = v26;
          }
          uint64_t v55 = v28;
          if (v28)
          {
            if (v28 < 0) {
              sub_1000A6A10();
            }
            unint64_t v29 = operator new(2 * v28);
            unint64_t v30 = &v29[2 * v24];
            _WORD *v30 = v18;
            uint64_t v31 = (uint64_t)(v30 + 1);
            if (v20 == v22)
            {
LABEL_27:
              a4 = v21;
              goto LABEL_33;
            }
          }
          else
          {
            unint64_t v29 = 0;
            unint64_t v30 = (_WORD *)(2 * v24);
            *(_WORD *)(2 * v++*(void *)(result + 24) = v18;
            uint64_t v31 = 2 * v24 + 2;
            if (v20 == v22) {
              goto LABEL_27;
            }
          }
          unint64_t v32 = v20 - 2 - v22;
          if (v32 >= 0x1E)
          {
            unint64_t v33 = v20 - &v29[v23 & 0xFFFFFFFFFFFFFFFELL];
            a4 = v21;
            if (v33 >= 0x20)
            {
              uint64_t v34 = (v32 >> 1) + 1;
              unint64_t v35 = 2 * (v34 & 0xFFFFFFFFFFFFFFF0);
              uint64_t v36 = &v20[-v35];
              unint64_t v30 = (_WORD *)((char *)v30 - v35);
              int8x8_t v37 = &v29[2 * v24 - 16];
              uint64_t v38 = v20 - 16;
              unint64_t v39 = v34 & 0xFFFFFFFFFFFFFFF0;
              do
              {
                long long v40 = *(_OWORD *)v38;
                *(v37 - 1) = *((_OWORD *)v38 - 1);
                _OWORD *v37 = v40;
                v37 -= 2;
                v38 -= 32;
                v39 -= 16;
              }
              while (v39);
              uint64_t v20 = v36;
              if (v34 == (v34 & 0xFFFFFFFFFFFFFFF0)) {
                goto LABEL_33;
              }
            }
          }
          else
          {
            a4 = v21;
          }
          do
          {
            __int16 v41 = *((_WORD *)v20 - 1);
            v20 -= 2;
            *--unint64_t v30 = v41;
          }
          while (v20 != v22);
LABEL_33:
          a6[7] = v30;
          a6[8] = v31;
          a6[9] = &v29[2 * v55];
          if (v22) {
            operator delete(v22);
          }
          uint64_t v10 = v52;
          uint64_t v12 = a3;
          double v13 = v13 + v17;
          a6[8] = v31;
          v9 += 208;
          if (v9 == v52) {
            goto LABEL_44;
          }
        }
      }
      uint64_t v45 = v9 + 40;
      double v13 = 0.0;
      do
      {
        int v48 = *(_DWORD *)(v45 - 8);
        if (v48 == v48 >> 31)
        {
          double v46 = *(double *)(v45 + 32);
        }
        else
        {
          if (v48 >= 0) {
            uint64_t v49 = v45;
          }
          else {
            uint64_t v49 = *(void *)v45;
          }
          double v46 = (double)*(int *)(v49 + 92);
        }
        double v13 = v13 + sub_10031A918(a1, v45 - 40, v12, a4, v46);
        uint64_t v47 = v45 + 168;
        v45 += 208;
      }
      while (v47 != v10);
    }
  }
  return v13;
}

void sub_10031AE54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,std::runtime_error a28)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a28);
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(a1);
}

void sub_10031AEF8(std::runtime_error *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  std::runtime_error::runtime_error(&v12, a1);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  int v17 = -1;
  v12.__vftable = (std::runtime_error_vtbl *)off_100466D80;
  double v13 = off_100466DA8;
  sub_10031D8B8((uint64_t)&v18, (uint64_t)&v12);
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  int v21 = a4;
  uint64_t v9 = *(const void **)a5;
  size_t v10 = *(void *)(a5 + 8) - *(void *)a5;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0) {
      sub_1000A9108();
    }
    std::string __p = operator new(v10);
    memcpy(__p, v9, v10);
  }
  sub_10031D55C();
}

void sub_10031B204(void *a1)
{
  std::runtime_error::~runtime_error(v1);
  sub_1000A6954(a1);
}

void sub_10031B218(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    operator delete(__p);
    sub_1000A6954(a1);
  }
  sub_1000A6954(a1);
}

void sub_10031B240(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_10031B2CC(uint64_t a1, uint64_t a2, int *a3)
{
  if ((*(unsigned char *)(*(void *)a1 + 81) & 2) != 0) {
    a3 = (int *)(*(void *)a1 + 72);
  }
  int v4 = *a3;
  switch(v4)
  {
    case 1:
      operator new();
    case 2:
      operator new();
    case 3:
      break;
    case 4:
      operator new();
    case 5:
      operator new();
    default:
      if (v4 != 101)
      {
        __cxa_allocate_exception(8uLL);
        operator new();
      }
      return;
  }
  operator new();
}

void sub_10031B4B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((v15 & 1) == 0) {
LABEL_6:
    }
      _Unwind_Resume(a1);
  }
  else if (!v15)
  {
    goto LABEL_6;
  }
  operator delete();
}

void sub_10031B588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1002A728C(a2);
  int v5 = (int *)nullsub_22(a2);

  sub_10031B2CC(a1, v4, v5);
}

uint64_t sub_10031B5EC(uint64_t a1)
{
  return *(unsigned int *)(*(void *)a1 + 28);
}

uint64_t sub_10031B5F8(uint64_t a1)
{
  return *(unsigned int *)(*(void *)a1 + 32);
}

uint64_t sub_10031B604(uint64_t a1)
{
  return *(unsigned int *)(*(void *)a1 + 36);
}

uint64_t sub_10031B610(uint64_t a1)
{
  uint64_t result = *(void *)(*(void *)a1 + 40);
  if (!result) {
    return *(void *)(qword_100492A20 + 40);
  }
  return result;
}

uint64_t sub_10031B634(uint64_t a1)
{
  uint64_t result = *(void *)(*(void *)a1 + 48);
  if (!result) {
    return *(void *)(qword_100492A20 + 48);
  }
  return result;
}

uint64_t sub_10031B658(uint64_t a1)
{
  uint64_t result = *(void *)(*(void *)a1 + 64);
  if (!result) {
    return *(void *)(qword_100492A20 + 64);
  }
  return result;
}

uint64_t sub_10031B67C(wireless_diagnostics::google::protobuf::MessageLite **a1, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2)
{
  unsigned int v4 = (*(uint64_t (**)(wireless_diagnostics::google::protobuf::MessageLite *))(*(void *)*a1 + 72))(*a1);
  wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2, v4);
  uint64_t result = wireless_diagnostics::google::protobuf::MessageLite::SerializeToCodedStream(*a1, a2);
  if ((result & 1) == 0)
  {
    __cxa_allocate_exception(0x40uLL);
    std::runtime_error::runtime_error(&v7, "Failed to seralize map to output stream");
    sub_10018E868((uint64_t)v6);
    sub_100266EAC(&v7, (uint64_t)"void purpleslam::ApRssiMap::SerializeToCodedStream(google::protobuf::io::CodedOutputStream *) const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 446, (uint64_t)v6);
  }
  return result;
}

void sub_10031B758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, std::runtime_error a13)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a13);
  _Unwind_Resume(a1);
}

void sub_10031B77C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::runtime_error a13)
{
  std::runtime_error::~runtime_error(&a13);
  __cxa_free_exception(v13);
  _Unwind_Resume(a1);
}

void sub_10031B798(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10031B7AC(_DWORD *a1, uint64_t a2)
{
}

void sub_10031B8A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::io::CodedInputStream::~CodedInputStream((wireless_diagnostics::google::protobuf::io::CodedInputStream *)va);
  sub_1000BA884(v4);
  uint64_t v6 = *(void *)(v3 + 8);
  *(void *)(v3 + ++*(void *)(result + 8) = 0;
  if (v6)
  {
    (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    sub_100052AEC((int *)v3);
    _Unwind_Resume(a1);
  }
  sub_100052AEC((int *)v3);
  _Unwind_Resume(a1);
}

__n128 sub_10031B94C(_DWORD *a1, __n128 *a2)
{
  uint64_t v3 = sub_100170218(a1);
  *((void *)v3 + 1) = 0;
  v3[4] = -1;
  __n128 result = *a2;
  *(__n128 *)(v3 + 6) = *a2;
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  return result;
}

int *sub_10031B988(uint64_t a1, uint64_t a2)
{
  sub_100052B3C(a2, 1, 0x1A4u, &v21);
  wireless_diagnostics::google::protobuf::io::FileOutputStream::FileOutputStream((wireless_diagnostics::google::protobuf::io::FileOutputStream *)v19, v21, -1);
  if (*(void *)(a1 + 24))
  {
    sub_10031BE30(a1, (uint64_t)v19);
  }
  else
  {
    uint64_t v18 = 0;
    int v17 = 0;
    while ((*(unsigned int (**)(void, uint64_t *, int *))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8), &v18, &v17))
    {
      int v3 = v17;
      if (v17)
      {
        int v4 = 0;
        uint64_t v5 = v18;
        BOOL v27 = 0;
        int v26 = 0;
        do
        {
          if ((wireless_diagnostics::google::protobuf::io::FileOutputStream::Next((wireless_diagnostics::google::protobuf::io::FileOutputStream *)v19, &v27, &v26) & 1) == 0)
          {
            __cxa_allocate_exception(0x40uLL);
            std::to_string(&v23, __val);
            uint64_t v9 = std::string::insert(&v23, 0, "Failed to get output buffer to save tile data: ");
            long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
            v24.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
            *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v10;
            v9->__r_.__value_.__l.__size_ = 0;
            v9->__r_.__value_.__r.__words[2] = 0;
            v9->__r_.__value_.__r.__words[0] = 0;
            std::runtime_error::runtime_error(&v25, &v24);
            sub_10018E868((uint64_t)&v22);
            sub_100266EAC(&v25, (uint64_t)"auto TileDataReader::saveWithoutHeaderTo(const fs::path &)::(anonymous class)::operator()(const void *, int) const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 487, (uint64_t)&v22);
          }
          if (v26 >= v3) {
            int v6 = v3;
          }
          else {
            int v6 = v26;
          }
          memcpy(v27, (const void *)(v5 + v4), v6);
          wireless_diagnostics::google::protobuf::io::FileOutputStream::BackUp((wireless_diagnostics::google::protobuf::io::FileOutputStream *)v19, v26 - v6);
          v4 += v6;
          v3 -= v6;
        }
        while (v3);
      }
    }
    std::runtime_error v7 = *(_DWORD **)(a1 + 8);
    if (v7[6])
    {
      __cxa_allocate_exception(0x40uLL);
      std::to_string(&v23, *(_DWORD *)(*(void *)(a1 + 8) + 24));
      std::runtime_error v11 = std::string::insert(&v23, 0, "Failed to read tile data: ");
      long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
      v24.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v12;
      v11->__r_.__value_.__l.__size_ = 0;
      v11->__r_.__value_.__r.__words[2] = 0;
      v11->__r_.__value_.__r.__words[0] = 0;
      std::runtime_error::runtime_error(&v22, &v24);
      sub_10018E868((uint64_t)v16);
      sub_100266EAC(&v22, (uint64_t)"void TileDataReader::saveWithoutHeaderTo(const fs::path &)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 510, (uint64_t)v16);
    }
    *(void *)(a1 + ++*(void *)(result + 8) = 0;
    (*(void (**)(_DWORD *))(*(void *)v7 + 8))(v7);
    sub_100053058((int *)a1);
    if ((wireless_diagnostics::google::protobuf::io::FileOutputStream::Flush((wireless_diagnostics::google::protobuf::io::FileOutputStream *)v19) & 1) == 0)
    {
      __cxa_allocate_exception(0x40uLL);
      std::to_string(&v23, __val);
      double v13 = std::string::insert(&v23, 0, "Failed to write tile data: ");
      long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
      v24.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v14;
      v13->__r_.__value_.__l.__size_ = 0;
      v13->__r_.__value_.__r.__words[2] = 0;
      v13->__r_.__value_.__r.__words[0] = 0;
      std::runtime_error::runtime_error(&v22, &v24);
      sub_10018E868((uint64_t)v15);
      sub_100266EAC(&v22, (uint64_t)"void TileDataReader::saveWithoutHeaderTo(const fs::path &)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 518, (uint64_t)v15);
    }
  }
  wireless_diagnostics::google::protobuf::io::FileOutputStream::~FileOutputStream((wireless_diagnostics::google::protobuf::io::FileOutputStream *)v19);
  return sub_100052AEC(&v21);
}

void sub_10031BCF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,int a29,std::runtime_error a30)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a30);
  if (*(char *)(v30 - 89) < 0) {
    operator delete(*(void **)(v30 - 112));
  }
  if (*(char *)(v30 - 113) < 0) {
    operator delete(*(void **)(v30 - 136));
  }
  wireless_diagnostics::google::protobuf::io::FileOutputStream::~FileOutputStream((wireless_diagnostics::google::protobuf::io::FileOutputStream *)&a18);
  sub_100052AEC(&a29);
  _Unwind_Resume(a1);
}

void sub_10031BE30(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    int v19 = 0;
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::CodedOutputStream();
    while ((*(unsigned int (**)(void))(**(void **)(a1 + 24) + 24))(*(void *)(a1 + 24)))
    {
      (*(void (**)(wireless_diagnostics::google::protobuf::MessageLite **__return_ptr))(**(void **)(a1 + 24)
                                                                                                 + 32))(&v15);
      sub_10031B67C(&v15, (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)&__dst);
      if (v18)
      {
        sub_1000AE4B0(&v21, "");
        sub_1003026F8("Trouble saving map ", &v23);
        sub_1002A3880(&v19, &v24);
        sub_10016A2C4((uint64_t)&v21, (uint64_t)&v23, 2);
        if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(v24.__r_.__value_.__l.__data_);
          if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
            goto LABEL_13;
          }
LABEL_10:
          if (v22 < 0) {
LABEL_14:
          }
            operator delete(v21.__vftable);
        }
        else
        {
          if ((SHIBYTE(v23.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
            goto LABEL_10;
          }
LABEL_13:
          operator delete(v23.__r_.__value_.__l.__data_);
          if (v22 < 0) {
            goto LABEL_14;
          }
        }
        sub_1000D11E0((uint64_t)__p);
      }
      ++v19;
      int v4 = v16;
      if (v16)
      {
        if (!atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
          std::__shared_weak_count::__release_weak(v4);
        }
      }
    }
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::~CodedOutputStream((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)&__dst);
  }
  else
  {
    __p[0] = 0;
    LODWORD(v15) = 0;
    if ((*(unsigned int (**)(void, void **, wireless_diagnostics::google::protobuf::MessageLite **))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8), __p, &v15))
    {
      do
      {
        __dst.__r_.__value_.__r.__words[0] = 0;
        LODWORD(v21.__vftable) = 0;
        int v5 = (int)v15;
        if (v15)
        {
          int v6 = 0;
          int v7 = 0;
          uint64_t v8 = (char *)__p[0];
          do
          {
            if (!v7)
            {
              if (!(*(unsigned int (**)(uint64_t, std::string *, std::runtime_error *))(*(void *)a2 + 16))(a2, &__dst, &v21))
              {
                __cxa_allocate_exception(0x40uLL);
                std::runtime_error::runtime_error((std::runtime_error *)&v23, "Failed get output buffer for serialization");
                sub_10018E868((uint64_t)v14);
                sub_100266EAC((std::runtime_error *)&v23, (uint64_t)"void TileDataReader::SerializeToZeroCopyStream(google::protobuf::io::ZeroCopyOutputStream *)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 577, (uint64_t)v14);
              }
              int v7 = (int)v21.__vftable;
              int v5 = (int)v15;
              int v6 = (void *)__dst.__r_.__value_.__r.__words[0];
            }
            if (v7 >= v5) {
              int v9 = v5;
            }
            else {
              int v9 = v7;
            }
            memcpy(v6, v8, v9);
            v8 += v9;
            int v6 = (void *)(__dst.__r_.__value_.__r.__words[0] + v9);
            __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v6;
            int v7 = LODWORD(v21.__vftable) - v9;
            LODWORD(v21.__vftable) -= v9;
            int v5 = v15 - v9;
            LODWORD(v15) = v5;
          }
          while (v5);
        }
        (*(void (**)(uint64_t))(*(void *)a2 + 24))(a2);
      }
      while (((*(uint64_t (**)(void, void **, wireless_diagnostics::google::protobuf::MessageLite **))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8), __p, &v15) & 1) != 0);
    }
    long long v10 = *(_DWORD **)(a1 + 8);
    if (v10[6])
    {
      __cxa_allocate_exception(0x40uLL);
      std::to_string(&__dst, *(_DWORD *)(*(void *)(a1 + 8) + 24));
      std::runtime_error v11 = std::string::insert(&__dst, 0, "Failed serialize. errno=");
      long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
      v23.__r_.__value_.__r.__words[2] = v11->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v23.__r_.__value_.__l.__data_ = v12;
      v11->__r_.__value_.__l.__size_ = 0;
      v11->__r_.__value_.__r.__words[2] = 0;
      v11->__r_.__value_.__r.__words[0] = 0;
      std::runtime_error::runtime_error(&v21, &v23);
      sub_10018E868((uint64_t)v13);
      sub_100266EAC(&v21, (uint64_t)"void TileDataReader::SerializeToZeroCopyStream(google::protobuf::io::ZeroCopyOutputStream *)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/radiomap.cpp", 593, (uint64_t)v13);
    }
    *(void *)(a1 + ++*(void *)(result + 8) = 0;
    (*(void (**)(_DWORD *))(*(void *)v10 + 8))(v10);
    sub_100053058((int *)a1);
  }
}

void sub_10031C2CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31,std::runtime_error a32,int a33,__int16 a34,char a35,char a36)
{
  if (a31 < 0) {
    operator delete(__p);
  }
  sub_1000BA884((uint64_t)&a16);
  wireless_diagnostics::google::protobuf::io::CodedOutputStream::~CodedOutputStream((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)&a18);
  _Unwind_Resume(a1);
}

void sub_10031C424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  wireless_diagnostics::google::protobuf::io::CodedOutputStream::~CodedOutputStream((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10031C458(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  if (v2) {
    return (*(uint64_t (**)(void))(*(void *)v2 + 16))();
  }
  else {
    return *(unsigned int *)(a1 + 16);
  }
}

uint64_t sub_10031C490(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + ++*(void *)(result + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 4++*(void *)(result + 8) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = off_100466BF0;
  *(void *)(a1 + 16) = off_100466C28;
  *(void *)(a1 + 56) = &off_100466C60;
  return a1;
}

void sub_10031C5B0(_Unwind_Exception *a1)
{
  std::underflow_error::~underflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_10031C5C4(std::underflow_error *this)
{
  this[1].__vftable = (std::underflow_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::underflow_error::~underflow_error(this);
}

void sub_10031C650()
{
}

void sub_10031C8EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CD2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10031C900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_1000CD2E0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10031C91C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031C9AC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + ++*(void *)(result + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 4++*(void *)(result + 8) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_100466BF0;
  *(void *)(a1 + 16) = off_100466C28;
  *(void *)(a1 + 56) = &off_100466C60;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_10031CAD8(_Unwind_Exception *a1)
{
  std::underflow_error::~underflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_10031CAEC(_Unwind_Exception *a1)
{
  sub_10031CB00(v1);
  _Unwind_Resume(a1);
}

void sub_10031CB00(std::underflow_error *this)
{
  this[1].__vftable = (std::underflow_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::underflow_error::~underflow_error(this);
}

void sub_10031CB8C(std::underflow_error *this)
{
  this[1].__vftable = (std::underflow_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::underflow_error::~underflow_error(this);

  operator delete();
}

void sub_10031CC2C()
{
}

void sub_10031CC88()
{
}

void sub_10031CCAC(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_10031C490((uint64_t)exception, a1);
}

void sub_10031CCF4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10031CD08(std::underflow_error *a1)
{
  a1->__vftable = (std::underflow_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::underflow_error::~underflow_error(a1 - 1);
}

void sub_10031CD90(std::underflow_error *a1)
{
  a1->__vftable = (std::underflow_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::underflow_error::~underflow_error(a1 - 1);

  operator delete();
}

void sub_10031CE2C()
{
}

void sub_10031CE9C()
{
}

void sub_10031CEC0(void *a1)
{
  uint64_t v1 = (uint64_t)a1 + *(void *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x40uLL);
  sub_10031C490((uint64_t)exception, v1);
}

void sub_10031CF1C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10031CF30(void *a1)
{
  uint64_t v1 = (std::underflow_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::underflow_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }

  std::underflow_error::~underflow_error(v1);
}

void sub_10031CFD0(void *a1)
{
  uint64_t v1 = (std::underflow_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::underflow_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }
  std::underflow_error::~underflow_error(v1);

  operator delete();
}

void sub_10031D084(std::underflow_error *this)
{
  this[1].__vftable = (std::underflow_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::underflow_error::~underflow_error(this);

  operator delete();
}

void sub_10031D124(std::underflow_error *a1)
{
  a1->__vftable = (std::underflow_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::underflow_error::~underflow_error(a1 - 1);
}

void sub_10031D1AC(std::underflow_error *a1)
{
  a1->__vftable = (std::underflow_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::underflow_error::~underflow_error(a1 - 1);

  operator delete();
}

uint64_t sub_10031D248(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + ++*(void *)(result + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 4++*(void *)(result + 8) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_100466BF0;
  *(void *)(a1 + 16) = off_100466C28;
  *(void *)(a1 + 56) = &off_100466C60;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_10031D374(_Unwind_Exception *a1)
{
  std::underflow_error::~underflow_error(v1);
  _Unwind_Resume(a1);
}

void sub_10031D388(_Unwind_Exception *a1)
{
  sub_10031CB00(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10031D39C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2)->__vftable = (std::runtime_error_vtbl *)&off_1004649D0;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + ++*(void *)(result + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 4++*(void *)(result + 8) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = off_100466CE0;
  *(void *)(a1 + 16) = off_100466D18;
  *(void *)(a1 + 56) = &off_100466D50;
  return a1;
}

void sub_10031D4BC(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10031D4D0(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_10031D55C()
{
}

void sub_10031D7F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CD2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10031D80C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_1000CD2E0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10031D828(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031D8B8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4->__vftable = (std::runtime_error_vtbl *)&off_1004649D0;
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + ++*(void *)(result + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 4++*(void *)(result + 8) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_100466CE0;
  *(void *)(a1 + 16) = off_100466D18;
  *(void *)(a1 + 56) = &off_100466D50;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_10031D9E4(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10031D9F8(_Unwind_Exception *a1)
{
  sub_10031DA0C(v1);
  _Unwind_Resume(a1);
}

void sub_10031DA0C(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(this);
}

void sub_10031DA98(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_10031DB38()
{
}

void sub_10031DB94()
{
}

void sub_10031DBB8(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_10031D39C((uint64_t)exception, a1);
}

void sub_10031DC00(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10031DC14(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_10031DC9C(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

void sub_10031DD38()
{
}

void sub_10031DDA8()
{
}

void sub_10031DDCC(void *a1)
{
  uint64_t v1 = (uint64_t)a1 + *(void *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x40uLL);
  sub_10031D39C((uint64_t)exception, v1);
}

void sub_10031DE28(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10031DE3C(void *a1)
{
  uint64_t v1 = (std::runtime_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(v1);
}

void sub_10031DEDC(void *a1)
{
  uint64_t v1 = (std::runtime_error *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(v1);

  operator delete();
}

void sub_10031DF90(std::runtime_error *this)
{
  this[1].__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(this);

  operator delete();
}

void sub_10031E030(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::runtime_error::~runtime_error(a1 - 1);
}

void sub_10031E0B8(std::runtime_error *a1)
{
  a1->__vftable = (std::runtime_error_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::runtime_error::~runtime_error(a1 - 1);

  operator delete();
}

uint64_t sub_10031E154(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  uint64_t v4 = std::runtime_error::runtime_error((std::runtime_error *)a1, (const std::runtime_error *)a2);
  v4->__vftable = (std::runtime_error_vtbl *)&off_1004649D0;
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + ++*(void *)(result + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 4++*(void *)(result + 8) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_100466CE0;
  *(void *)(a1 + 16) = off_100466D18;
  *(void *)(a1 + 56) = &off_100466D50;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_10031E280(_Unwind_Exception *a1)
{
  std::runtime_error::~runtime_error(v1);
  _Unwind_Resume(a1);
}

void sub_10031E294(_Unwind_Exception *a1)
{
  sub_10031DA0C(v1);
  _Unwind_Resume(a1);
}

void sub_10031E2A8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100466DC8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10031E2C8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100466DC8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10031E31C(void *a1)
{
  unint64_t v2 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1[1] - *a1) >> 3);
  unint64_t v3 = v2 + 1;
  if (v2 + 1 > 0x666666666666666) {
    sub_1000A9108();
  }
  if (0x999999999999999ALL * ((uint64_t)(a1[2] - *a1) >> 3) > v3) {
    unint64_t v3 = 0x999999999999999ALL * ((uint64_t)(a1[2] - *a1) >> 3);
  }
  if (0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a1[2] - *a1) >> 3) >= 0x333333333333333) {
    unint64_t v4 = 0x666666666666666;
  }
  else {
    unint64_t v4 = v3;
  }
  if (v4)
  {
    if (v4 > 0x666666666666666) {
      sub_1000A6A10();
    }
    uint64_t v5 = (char *)operator new(40 * v4);
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v17 = (uint64_t)&v5[40 * v2];
  *((void *)&v18 + 1) = &v5[40 * v4];
  sub_10009DB90(v17);
  uint64_t v6 = 0;
  uint64_t v8 = (char *)*a1;
  for (uint64_t i = a1[1]; (char *)(i + v6) != v8; sub_1000629E4(v6 + v17, v6 + i))
    v6 -= 40;
  long long v10 = (char *)*a1;
  int v9 = (char *)a1[1];
  *a1 = v17 + v6;
  *(void *)&long long v18 = v17 + 40;
  *(_OWORD *)(a1 + 1) = v18;
  if (v9 != v10)
  {
    std::runtime_error v11 = v9 - 40;
    long long v12 = v9 - 40;
    double v13 = v9 - 40;
    do
    {
      long long v14 = *(void (***)(char *))v13;
      v13 -= 40;
      (*v14)(v12);
      v11 -= 40;
      BOOL v15 = v12 == v10;
      long long v12 = v13;
    }
    while (!v15);
  }
  if (v10) {
    operator delete(v10);
  }
  return v17 + 40;
}

void sub_10031E4A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_10031E4E8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10031E4E8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    unint64_t v4 = *(void (***)(void))(i - 40);
    *(void *)(a1 + 16) = i - 40;
    (*v4)();
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t *sub_10031E558(void *a1, uint64_t a2)
{
  std::runtime_error v25 = &v24;
  uint64_t v4 = a2 + 8;
  if (*(_DWORD *)a2 != *(int *)a2 >> 31)
  {
    unint64_t v5 = sub_100258DC8((uint64_t)&v25, (unsigned __int8 *)(a2 + 8));
    int8x8_t v6 = (int8x8_t)a1[1];
    if (v6) {
      goto LABEL_3;
    }
    return 0;
  }
  unint64_t v5 = *(void *)v4;
  int8x8_t v6 = (int8x8_t)a1[1];
  if (!*(void *)&v6) {
    return 0;
  }
LABEL_3:
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v6);
  v7.i16[0] = vaddlv_u8(v7);
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v8 = v5;
    if (v5 >= *(void *)&v6) {
      unint64_t v8 = v5 % *(void *)&v6;
    }
  }
  else
  {
    unint64_t v8 = (*(void *)&v6 - 1) & v5;
  }
  long long v10 = *(uint64_t **)(*a1 + 8 * v8);
  if (!v10) {
    return v10;
  }
  long long v10 = (uint64_t *)*v10;
  if (!v10) {
    return v10;
  }
  int v11 = *(_DWORD *)a2;
  int v12 = (v11 >> 31) ^ v11;
  BOOL v13 = v11 >> 31 == v11;
  uint64_t v14 = *(void *)(a2 + 8);
  if (v7.u32[0] <= 1uLL)
  {
    uint64_t v15 = *(void *)&v6 - 1;
    if (v13)
    {
      while (1)
      {
        uint64_t v16 = v10[1];
        if (v5 == v16)
        {
          if ((*((_DWORD *)v10 + 4) ^ (*((int *)v10 + 4) >> 31)) == v12 && v10[3] == v14) {
            return v10;
          }
        }
        else if ((v16 & v15) != v8)
        {
          return 0;
        }
        long long v10 = (uint64_t *)*v10;
        if (!v10) {
          return v10;
        }
      }
    }
    while (1)
    {
      uint64_t v17 = v10[1];
      if (v5 == v17)
      {
        if ((*((_DWORD *)v10 + 4) ^ (*((int *)v10 + 4) >> 31)) == v12)
        {
          BOOL v18 = v10[3] == *(void *)v4 && v10[4] == *(void *)(v4 + 8);
          if (v18 && *((_DWORD *)v10 + 10) == (unint64_t)*(unsigned int *)(v4 + 16)) {
            return v10;
          }
        }
      }
      else if ((v17 & v15) != v8)
      {
        return 0;
      }
      long long v10 = (uint64_t *)*v10;
      if (!v10) {
        return v10;
      }
    }
  }
  if (v13)
  {
    while (1)
    {
      unint64_t v20 = v10[1];
      if (v5 == v20)
      {
        if ((*((_DWORD *)v10 + 4) ^ (*((int *)v10 + 4) >> 31)) == v12 && v10[3] == v14) {
          return v10;
        }
      }
      else
      {
        if (v20 >= *(void *)&v6) {
          v20 %= *(void *)&v6;
        }
        if (v20 != v8) {
          return 0;
        }
      }
      long long v10 = (uint64_t *)*v10;
      if (!v10) {
        return v10;
      }
    }
  }
  while (1)
  {
    unint64_t v21 = v10[1];
    if (v5 != v21) {
      break;
    }
    if ((*((_DWORD *)v10 + 4) ^ (*((int *)v10 + 4) >> 31)) == v12)
    {
      BOOL v22 = v10[3] == *(void *)v4 && v10[4] == *(void *)(v4 + 8);
      if (v22 && *((_DWORD *)v10 + 10) == (unint64_t)*(unsigned int *)(v4 + 16)) {
        return v10;
      }
    }
LABEL_44:
    long long v10 = (uint64_t *)*v10;
    if (!v10) {
      return v10;
    }
  }
  if (v21 >= *(void *)&v6) {
    v21 %= *(void *)&v6;
  }
  if (v21 == v8) {
    goto LABEL_44;
  }
  return 0;
}

void sub_10031E7C8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100466E18;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10031E7E8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100466E18;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_10031E83C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10031E8B4()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10031E92C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  (*(void (**)(int32x2_t *__return_ptr, double, double))(*(void *)a1 + 24))(&v33, *(double *)(a2 + 8), *(double *)(a2 + 16));
  int v23 = vcvtpd_s64_f64(a4 / sub_10014BA8C((uint64_t)&v33));
  if (v23 >= 1)
  {
    signed int v8 = 1;
    do
    {
      *(void *)a3 = off_10045DA98;
      *(void *)(a3 + ++*(void *)(result + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(unsigned char *)(a3 + 24) &= 0xFCu;
      sub_10014C480(&v33, v8, (uint64_t)&__p);
      long long v10 = (uint64_t *)__p;
      int v9 = v32;
      double v11 = 1.79769313e308;
      if (__p == v32)
      {
        if (!__p) {
          goto LABEL_5;
        }
      }
      else
      {
        do
        {
          uint64_t v28 = *v10;
          uint64_t v12 = v10[1];
          unint64_t v29 = (std::__shared_weak_count *)v12;
          if (v12) {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(v12 + 8), 1uLL, memory_order_relaxed);
          }
          uint64_t v30 = v10[2];
          v24[0] = sub_10014BB64(&v28);
          v24[1] = v13;
          _OWORD v24[2] = v14;
          v24[3] = v15;
          sub_100358750(v24, (uint64_t (***)())a2, (uint64_t)v25, 0.01);
          if ((*(unsigned __int8 (**)(uint64_t, double, double))(*(void *)a1 + 16))(a1, v26, v27))
          {
            double v16 = hypot(v26 - *(double *)(a2 + 8), v27 - *(double *)(a2 + 16));
            if (v11 > v16)
            {
              double v17 = v16;
              sub_10007B704(a3, (uint64_t)v25);
              double v11 = v17;
            }
          }
          nullsub_17(v25);
          BOOL v18 = v29;
          if (v29 && !atomic_fetch_add(&v29->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
          }
          v10 += 3;
        }
        while (v10 != v9);
        long long v10 = (uint64_t *)__p;
        if (!__p)
        {
LABEL_5:
          if (v11 <= a4) {
            goto LABEL_28;
          }
          goto LABEL_25;
        }
      }
      int v19 = v32;
      if (v32 == v10)
      {
        unint64_t v32 = v10;
        operator delete(v10);
        if (v11 <= a4) {
          goto LABEL_28;
        }
      }
      else
      {
        do
        {
          unint64_t v20 = (std::__shared_weak_count *)*(v19 - 2);
          if (v20 && !atomic_fetch_add(&v20->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
            std::__shared_weak_count::__release_weak(v20);
          }
          v19 -= 3;
        }
        while (v19 != v10);
        unint64_t v32 = v10;
        operator delete(__p);
        if (v11 <= a4) {
          goto LABEL_28;
        }
      }
LABEL_25:
      nullsub_17(a3);
    }
    while (v8++ != v23);
  }
  *(void *)a3 = off_10045DA98;
  *(unsigned char *)(a3 + 24) &= 0xFCu;
  *(int64x2_t *)(a3 + ++*(void *)(result + 8) = vdupq_n_s64(0x7FF4000000000000uLL);
LABEL_28:
  BOOL v22 = v34;
  if (v34)
  {
    if (!atomic_fetch_add(&v34->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v22->__on_zero_shared)(v22);
      std::__shared_weak_count::__release_weak(v22);
    }
  }
}

void sub_10031EC78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  sub_1000BA884((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10031EC8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  nullsub_17(v17);
  sub_1000BA884((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10031ECA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va3, a7);
  va_start(va2, a7);
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v14 = va_arg(va2, void);
  uint64_t v16 = va_arg(va2, void);
  uint64_t v17 = va_arg(va2, void);
  va_copy(va3, va2);
  BOOL v18 = va_arg(va3, void *);
  uint64_t v20 = va_arg(va3, void);
  uint64_t v21 = va_arg(va3, void);
  nullsub_17((uint64_t *)va);
  sub_1000BA884((uint64_t)va1);
  sub_10014C3CC((void **)va2);
  nullsub_17(v7);
  sub_1000BA884((uint64_t)va3);
  _Unwind_Resume(a1);
}

BOOL sub_10031ECE8(uint64_t a1, int a2, int a3, int a4, int a5)
{
  if (a2 <= a3 && a4 <= a5)
  {
    int v7 = a2;
    BOOL v5 = 0;
    int v9 = a5 + 1;
    int v19 = a4;
    while (1)
    {
      int v10 = a4;
      do
      {
        (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a1 + 40))(&v30, a1);
        sub_100073E84((uint64_t)v31, &v28);
        if ((_BYTE)v30) {
          nullsub_19(v31, v11);
        }
        uint64_t v22 = v28;
        int v23 = v29;
        if (v29) {
          atomic_fetch_add_explicit(&v29->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        int v20 = v10;
        int v21 = v7;
        sub_100073160((uint64_t)&v24, &v22, &v21, &v20);
        sub_10014BA98(&v24, (uint64_t)&v26);
        sub_1000727B4(&v26, (uint64_t)&v30);
        uint64_t v12 = v27;
        if (v27 && !atomic_fetch_add(&v27->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
          std::__shared_weak_count::__release_weak(v12);
          uint64_t v13 = v25;
          if (!v25) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v13 = v25;
          if (!v25) {
            goto LABEL_17;
          }
        }
        if (!atomic_fetch_add(&v13->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
LABEL_17:
        uint64_t v14 = v23;
        if (v23 && !atomic_fetch_add(&v23->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
        char v15 = (*(uint64_t (**)(uint64_t, double, double))(*(void *)a1 + 16))(a1, v31[0], v31[1]);
        nullsub_17(&v30);
        uint64_t v16 = v29;
        if (v29 && !atomic_fetch_add(&v29->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
        if (!v15) {
          return v5;
        }
        ++v10;
      }
      while (v9 != v10);
      a4 = v19;
      BOOL v17 = v7 == a3;
      BOOL v5 = v7++ >= a3;
      if (v17) {
        return v5;
      }
    }
  }
  return 1;
}

void sub_10031EFA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va1, a12);
  va_start(va, a12);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  nullsub_17(va1);
  sub_1000BA884((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10031EFC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va3, a3);
  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v7 = va_arg(va2, void);
  uint64_t v9 = va_arg(va2, void);
  uint64_t v10 = va_arg(va2, void);
  va_copy(va3, va2);
  uint64_t v11 = va_arg(va3, void);
  uint64_t v13 = va_arg(va3, void);
  uint64_t v14 = va_arg(va3, void);
  uint64_t v15 = va_arg(va3, void);
  sub_1000BA884((uint64_t)va2);
  sub_1000BA884((uint64_t)va1);
  sub_1000BA884((uint64_t)va);
  sub_1000BA884((uint64_t)va3);
  _Unwind_Resume(a1);
}

void sub_10031EFF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  sub_1000BA884((uint64_t)va);
  sub_1000BA884((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10031F014(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, double a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if (a23)
  {
    nullsub_19(v23, a9);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10031F03C(uint64_t a1, uint64_t a2)
{
  __int16 v4 = (*(uint64_t (**)(uint64_t, double, double))(*(void *)a1 + 16))(a1, *(double *)(a2 + 8), *(double *)(a2 + 16));
  if ((v4 & 0x100) == 0) {
    return 1;
  }
  if ((v4 & 1) == 0) {
    return 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a1 + 40))(&v12, a1);
  int v7 = v14;
  if ((_BYTE)v12) {
    nullsub_19(&v13, v6);
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)a1 + 40))(&v12, a1);
  int v9 = v15;
  if ((_BYTE)v12) {
    nullsub_19(&v13, v8);
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t, double, double))(*(void *)a1 + 24))(&v12, a1, *(double *)(a2 + 8), *(double *)(a2 + 16));
  if (sub_10031ECE8(a1, 0, v14, v15, v15)
    || sub_10031ECE8(a1, v14, v9 - 1, v15, v15)
    || sub_10031ECE8(a1, v14, v14, 0, v15))
  {
    BOOL v5 = 1;
    uint64_t v10 = v13;
    if (!v13) {
      return v5;
    }
  }
  else
  {
    BOOL v5 = sub_10031ECE8(a1, v14, v14, v15, v7 - 1);
    uint64_t v10 = v13;
    if (!v13) {
      return v5;
    }
  }
  if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  return v5;
}

void sub_10031F250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

double sub_10031F268@<D0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  if (!v3) {
    uint64_t v3 = *(void *)(qword_100492A58 + 16);
  }
  sub_1000764C4(v3, (uint64_t)v6);
  *a2 = 0;
  double v4 = sub_1001AA6EC((uint64_t)(a2 + 8), (uint64_t)v6);
  *a2 = 1;
  *(void *)&double result = nullsub_19(v6, v4).n128_u64[0];
  return result;
}

void sub_10031F2D0(_Unwind_Exception *a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
}

BOOL sub_10031F2E4(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 48) & 4) == 0 || *(_DWORD *)(a1 + 40) == 1;
}

uint64_t sub_10031F304(uint64_t a1, double a2, double a3)
{
  double v11 = 0.0;
  double v12 = 0.0;
  sub_10035946C(*(void *)(a1 + 56), &v12, &v11, a2, a3);
  unsigned int v9 = vcvtmd_s64_f64(v11 + 0.5);
  unsigned int v10 = vcvtmd_s64_f64(v12 + 0.5);
  int v4 = sub_100357CF0((_DWORD *)(a1 + 72), (int *)&v10, (int *)&v9);
  if (v4 == -1) {
    return 0;
  }
  if (v4 >= 0) {
    int v6 = v4;
  }
  else {
    int v6 = v4 + 7;
  }
  int v7 = *(uint64_t ***)(a1 + 32);
  uint64_t v8 = (uint64_t)v6 >> 3;
  if (*((char *)v7 + 23) < 0) {
    int v7 = (uint64_t **)*v7;
  }
  return (*((unsigned __int8 *)v7 + v8) >> (v4 & 7)) & 1 | 0x100u;
}

void sub_10031F3D4(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v6 = *(void *)(a1 + 56);
  int v7 = *(std::__shared_weak_count **)(a1 + 64);
  uint64_t v11 = v6;
  double v12 = v7;
  if (v7)
  {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
    uint64_t v6 = *(void *)(a1 + 56);
  }
  double v16 = 0.0;
  double v15 = 0.0;
  sub_10035946C(v6, &v16, &v15, a3, a4);
  uint64_t v8 = (_DWORD *)(a1 + 72);
  unsigned int v13 = vcvtmd_s64_f64(v15 + 0.5);
  unsigned int v14 = vcvtmd_s64_f64(v16 + 0.5);
  int v9 = sub_100357CF0(v8, (int *)&v14, (int *)&v13);
  sub_10014BA24(a2, &v11, (uint64_t)v8, v9);
  unsigned int v10 = v12;
  if (v12)
  {
    if (!atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
}

void sub_10031F4D4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000BA884((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_10031F4E8(uint64_t a1)
{
  return sub_100072640(*(double **)(a1 + 56));
}

uint64_t sub_10031F4F0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  if ((((*(uint64_t (**)(uint64_t))(*(void *)a1 + 48))(a1) & 1) != 0 || !*(unsigned char *)(a4 + 36))
    && *(unsigned char *)(a2 + 49))
  {
    goto LABEL_17;
  }
  double v45 = 0.0;
  double v46 = 0.0;
  sub_10035946C(*(void *)(a1 + 56), &v46, &v45, a5, a6);
  unsigned int v43 = vcvtmd_s64_f64(v45 + 0.5);
  unsigned int v44 = vcvtmd_s64_f64(v46 + 0.5);
  int v16 = sub_100357CF0((_DWORD *)(a1 + 72), (int *)&v44, (int *)&v43);
  double v45 = 0.0;
  double v46 = 0.0;
  sub_10035946C(*(void *)(a1 + 56), &v46, &v45, a7, a8);
  unsigned int v43 = vcvtmd_s64_f64(v45 + 0.5);
  unsigned int v44 = vcvtmd_s64_f64(v46 + 0.5);
  int v17 = sub_100357CF0((_DWORD *)(a1 + 72), (int *)&v44, (int *)&v43);
  if (v16 == -1) {
    goto LABEL_16;
  }
  int v18 = v17;
  if ((*(unsigned int (**)(void))(**(void **)(a2 + 56) + 72))(*(void *)(a2 + 56)) == 1 && v18 == -1) {
    goto LABEL_16;
  }
  if (v16 == v18) {
    goto LABEL_17;
  }
  double v20 = a8 - a6;
  long double v21 = hypot(a7 - a5, a8 - a6);
  double v22 = *(double *)(*(void *)(a1 + 56) + 64);
  double v41 = v21;
  int v23 = vcvtpd_s64_f64(v21 * *(float *)(a4 + 32) / v22);
  BOOL v24 = ((*(uint64_t (**)(uint64_t, double, double))(*(void *)a1 + 16))(a1, a5, a6) & 1) == 0;
  double v42 = a7 - a5;
  if (v23 < 1)
  {
LABEL_14:
    if (v24) {
      goto LABEL_15;
    }
LABEL_17:
    *(double *)(a2 + 16) = a7;
    *(double *)(a2 + ++*(void *)(result + 24) = a8;
LABEL_18:
    int v27 = 1;
    int v28 = 1;
    return v28 | (v27 << 8);
  }
  double v25 = (a7 - a5) / (double)v23;
  double v26 = v20 / (double)v23;
  while (!v24)
  {
    a5 = v25 + a5;
    a6 = v26 + a6;
    BOOL v24 = ((*(uint64_t (**)(uint64_t, double, double))(*(void *)a1 + 16))(a1, a5, a6) & 1) == 0;
    if (!--v23) {
      goto LABEL_14;
    }
  }
LABEL_15:
  if ((*(unsigned int (**)(void))(**(void **)(a2 + 56) + 72))(*(void *)(a2 + 56)) != 1)
  {
    if (*(int *)(a4 + 24) < 1)
    {
LABEL_31:
      double v40 = (*(double (**)(double, double))(*(void *)*a3 + 24))((float)-*(float *)(a4 + 28), *(float *)(a4 + 28));
      int v28 = 0;
      *(double *)(a2 + 32) = v40 + *(double *)(a2 + 32);
      int v27 = 1;
      return v28 | (v27 << 8);
    }
    double v30 = -v20 / v41;
    int v31 = 1;
    double v32 = v42 / v41;
    while (1)
    {
      char v33 = (*(uint64_t (**)(void, uint64_t))(*(void *)*a3 + 80))(*a3, 2);
      int v34 = (v33 & 1) != 0 ? 1 : -1;
      double v35 = v22 * (double)(v34 * v31);
      double v36 = a5 + v30 * v35;
      double v37 = a6 + v32 * v35;
      if ((*(uint64_t (**)(uint64_t, double, double))(*(void *)a1 + 16))(a1, v36, v37)) {
        break;
      }
      int v34 = (v33 & 1) != 0 ? -1 : 1;
      double v38 = v22 * (double)(v34 * v31);
      double v36 = a5 + v30 * v38;
      double v37 = a6 + v32 * v38;
      if ((*(uint64_t (**)(uint64_t, double, double))(*(void *)a1 + 16))(a1, v36, v37)) {
        break;
      }
      if (v31++ >= *(_DWORD *)(a4 + 24)) {
        goto LABEL_31;
      }
    }
    *(double *)(a2 + 32) = *(double *)(a2 + 32)
                         + (*(double (**)(double, double))(*(void *)*a3 + 24))(0.0, *(float *)(a4 + 28))
                         * (double)v34;
    *(double *)(a2 + 16) = v36;
    *(double *)(a2 + ++*(void *)(result + 24) = v37;
    goto LABEL_18;
  }
LABEL_16:
  int v27 = 0;
  int v28 = 0;
  return v28 | (v27 << 8);
}

void *sub_10031F984(void *a1)
{
  *a1 = off_100466E68;
  unint64_t v2 = (std::__shared_weak_count *)a1[8];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    sub_1003319FC(a1 + 1);
    return a1;
  }
  else
  {
    sub_1003319FC(a1 + 1);
    return a1;
  }
}

void sub_10031FA2C(void *a1)
{
  *a1 = off_100466E68;
  unint64_t v2 = (std::__shared_weak_count *)a1[8];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  sub_1003319FC(a1 + 1);

  operator delete();
}

void sub_10031FADC()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10031FB54()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10031FBCC()
{
  uint64_t v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_10031FE14();
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  std::string __p = operator new(0x19uLL);
  long long v3 = xmmword_1003E6DB0;
  strcpy((char *)__p, "protobuf/gen/math.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  operator delete(__p);
  if (!FileByName)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  }
  qword_10047E110 = *(void *)(FileByName + 80);
  operator new();
}

void sub_10031FDA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10031FDB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10031FDC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10031FE14(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10047E100 & 1) == 0)
  {
    byte_10047E100 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/math.pb.cc", a4);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n\x17protobuf/gen/math.proto\x12\nproto.math\"\x88\x01\n\x10ObservationStats\x12\x15\n\nsumWeights\x18\x01 \x02(\x01:\x010\x12\x0E\n\x03sum\x18\x02 \x02(\x01:\x010\x12\x15\n\nsumSquared\x18\x03 \x02(\x01:\x010\x12\x1C\n\x11sumSquaredWeights\x18\x04 \x02(\x01:\x010\x12\v\n\x03min\x18\x05 \x01(\x01\x12\v\n\x03max\x18\x06 \x01(\x01\"f\n\"LinearSaturationFunctionParameters\x12\x10\n\x05slope\x18\x01 \x01(\x01:\x011\x12\x14\n\tintercept\x18\x02 \x01(\x01:\x010\x12\v\n\x03max\x18\x03 \x01(\x01\x12\v\n\x03min\x18\x04 \x01(\x01B\x1D\n\x1Bcom.apple.indoor.proto.math", (const void *)0x137,
      v4);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_10031FF60()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10031FF88()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10031FFB0()
{
  if (qword_1004929D0) {
    (*(void (**)(uint64_t))(*(void *)qword_1004929D0 + 8))(qword_1004929D0);
  }
  if (qword_10047E118) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E118 + 8))(qword_10047E118);
  }
  if (qword_1004929D8) {
    (*(void (**)(uint64_t))(*(void *)qword_1004929D8 + 8))(qword_1004929D8);
  }
  uint64_t result = qword_10047E128;
  if (qword_10047E128)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10047E128 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_100320098()
{
  uint64_t v0 = qword_10047E130;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v3[1] = sub_10031FBCC;
    char v4 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v3);
  }
  if (!qword_1004929D0) {
    ((void (*)(void))sub_10031FE14)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1004929D8) {
    sub_10031FE14(v1);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_10032017C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_100320190(void *a1)
{
  *a1 = off_100466F90;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[5] = 0;
  a1[6] = 0;
  a1[2] = 0x3FF0000000000000;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_1003201E4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1003201F8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 68);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 68))
  {
    uint64_t v7 = *(void *)(a2 + 16);
    *(_DWORD *)(a1 + 68) |= 1u;
    *(void *)(a1 + 16) = v7;
    int v4 = *(_DWORD *)(a2 + 68);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_14;
    }
  }
  else if ((*(unsigned char *)(a2 + 68) & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 68) |= 2u;
  *(void *)(a1 + ++*(void *)(result + 24) = v8;
  int v4 = *(_DWORD *)(a2 + 68);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 68) |= 4u;
  *(void *)(a1 + 32) = v9;
  int v4 = *(_DWORD *)(a2 + 68);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
LABEL_16:
    uint64_t v11 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 68) |= 0x10u;
    *(void *)(a1 + 4++*(void *)(result + 8) = v11;
    if ((*(_DWORD *)(a2 + 68) & 0x20) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_10;
  }
LABEL_15:
  uint64_t v10 = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 68) |= 8u;
  *(void *)(a1 + 40) = v10;
  int v4 = *(_DWORD *)(a2 + 68);
  if ((v4 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_9:
  if ((v4 & 0x20) != 0)
  {
LABEL_10:
    uint64_t v5 = *(void *)(a2 + 56);
    *(_DWORD *)(a1 + 68) |= 0x20u;
    *(void *)(a1 + 56) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100320338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032034C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100320360(uint64_t a1)
{
  *(void *)a1 = off_100466EE0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1003203B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 64) = a2;
  return result;
}

uint64_t sub_1003203BC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_1004929D0;
  if (!qword_1004929D0)
  {
    sub_10031FE14(0, a2, a3, a4);
    return qword_1004929D0;
  }
  return result;
}

void sub_1003203F8()
{
}

void sub_100320464()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10032048C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 68))
  {
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 4++*(void *)(result + 8) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 15) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1003204CC(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 68);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    int v5 = *(_DWORD *)(v4 + 68);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  int v5 = *(_DWORD *)(v4 + 68);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
  int v5 = *(_DWORD *)(v4 + 68);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v4 + 40), a3);
  int v5 = *(_DWORD *)(v4 + 68);
  if ((v5 & 0x10) == 0)
  {
LABEL_6:
    if ((v5 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v4 + 48), a3);
  if ((*(_DWORD *)(v4 + 68) & 0x20) == 0)
  {
LABEL_7:
    uint64_t v8 = *(void **)(v4 + 8);
    uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    uint64_t v6 = v8;
    if (!v8) {
      return result;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (int)a2, *(double *)(v4 + 56), a3);
  uint64_t v9 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  uint64_t v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_15:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_1003205D8(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 68);
  if (v3)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v7;
    a2 += 9;
    int v3 = *(_DWORD *)(a1 + 68);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(a1 + 24);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v8;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 68);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v9 = *(void *)(a1 + 32);
  *(unsigned char *)a2 = 25;
  *(void *)(a2 + 1) = v9;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 68);
  if ((v3 & 8) == 0)
  {
LABEL_5:
    if ((v3 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t v10 = *(void *)(a1 + 40);
  *(unsigned char *)a2 = 33;
  *(void *)(a2 + 1) = v10;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 68);
  if ((v3 & 0x10) == 0)
  {
LABEL_6:
    if ((v3 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    uint64_t v12 = *(void *)(a1 + 56);
    *(unsigned char *)a2 = 49;
    *(void *)(a2 + 1) = v12;
    a2 += 9;
    unsigned int v13 = *(void **)(a1 + 8);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v5 = v13;
    if (!v13) {
      return a2;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t v11 = *(void *)(a1 + 48);
  *(unsigned char *)a2 = 41;
  *(void *)(a2 + 1) = v11;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 68) & 0x20) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  uint64_t v6 = *(void **)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_15:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_100320810(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 68);
  if (*(unsigned char *)(a1 + 68))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x10) != 0) {
      v4 += 9;
    }
    if ((v3 & 0x20) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7)
    {
LABEL_14:
      *(_DWORD *)(a1 + 64) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1]) {
    goto LABEL_14;
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
     + v5;
  *(_DWORD *)(a1 + 64) = v9;
  return v9;
}

uint64_t sub_1003208CC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1003201F8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1003209AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003209C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003209D4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100320A60()
{
  uint64_t v0 = qword_10047E130;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10031FBCC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E110;
}

void sub_100320AF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_100320B04(uint64_t a1)
{
  *(void *)a1 = off_100466F90;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100320B58(uint64_t a1)
{
  *(void *)a1 = off_100466F90;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100320BC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 4++*(void *)(result + 8) = a2;
  return result;
}

void sub_100320BC8()
{
}

void sub_100320C34()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100320C5C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 52))
  {
    *(void *)(a1 + 16) = 0x3FF0000000000000;
    *(void *)(a1 + ++*(void *)(result + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 11) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100320C84(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    uint64_t v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + ++*(void *)(result + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + ++*(void *)(result + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_30;
        }
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 16) = v14;
        *(_DWORD *)(a1 + 52) |= 1u;
        uint64_t v10 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 != 17) {
          continue;
        }
        *((void *)this + 1) = v10 + 1;
        goto LABEL_15;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_30;
        }
LABEL_15:
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + ++*(void *)(result + 24) = v14;
        *(_DWORD *)(a1 + 52) |= 2u;
        uint64_t v11 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v11 >= *((void *)this + 2) || *v11 != 25) {
          continue;
        }
        *((void *)this + 1) = v11 + 1;
LABEL_20:
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 32) = v14;
        *(_DWORD *)(a1 + 52) |= 4u;
        uint64_t v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 33) {
          continue;
        }
        *((void *)this + 1) = v12 + 1;
LABEL_25:
        unint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v14) & 1) == 0) {
          return 0;
        }
        *(void *)(a1 + 40) = v14;
        *(_DWORD *)(a1 + 52) |= 8u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + ++*(void *)(result + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_20;
        }
        goto LABEL_30;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_25;
        }
        goto LABEL_30;
      default:
        int v9 = TagFallback & 7;
LABEL_30:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t sub_100320EFC(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 52);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    int v5 = *(_DWORD *)(v4 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  int v5 = *(_DWORD *)(v4 + 52);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
  if ((*(_DWORD *)(v4 + 52) & 8) == 0)
  {
LABEL_5:
    uint64_t v8 = *(void **)(v4 + 8);
    uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    unsigned int v6 = v8;
    if (!v8) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v4 + 40), a3);
  int v9 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_11:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_100320FD0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 52);
  if (v3)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v7;
    a2 += 9;
    int v3 = *(_DWORD *)(a1 + 52);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(a1 + 24);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v8;
  a2 += 9;
  int v3 = *(_DWORD *)(a1 + 52);
  if ((v3 & 4) == 0)
  {
LABEL_4:
    if ((v3 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    uint64_t v10 = *(void *)(a1 + 40);
    *(unsigned char *)a2 = 33;
    *(void *)(a2 + 1) = v10;
    a2 += 9;
    uint64_t v11 = *(void **)(a1 + 8);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v5 = v11;
    if (!v11) {
      return a2;
    }
    goto LABEL_11;
  }
LABEL_9:
  uint64_t v9 = *(void *)(a1 + 32);
  *(unsigned char *)a2 = 25;
  *(void *)(a2 + 1) = v9;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 52) & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  unsigned int v6 = *(void **)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_11:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_100321158(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 52);
  if (*(unsigned char *)(a1 + 52))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      v4 += 9;
    }
    if ((v3 & 4) != 0) {
      v4 += 9;
    }
    if ((v3 & 8) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v5 = 0;
    unsigned int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7)
    {
LABEL_10:
      *(_DWORD *)(a1 + 4++*(void *)(result + 8) = v5;
      return v5;
    }
  }
  if (*v7 == v7[1]) {
    goto LABEL_10;
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
     + v5;
  *(_DWORD *)(a1 + 4++*(void *)(result + 8) = v9;
  return v9;
}

uint64_t sub_1003211FC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000724DC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1003212DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003212F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100321304(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100321390()
{
  return 1;
}

uint64_t sub_100321398()
{
  uint64_t v0 = qword_10047E130;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10031FBCC;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E120;
}

void sub_100321428(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10032143C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_100321444(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

void sub_100321450(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  sub_100321B40(a1, a2, a3, a4);
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v4);
  std::string __p = operator new(0x20uLL);
  long long v7 = xmmword_1003E74F0;
  strcpy((char *)__p, "protobuf/gen/radiomap.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  operator delete(__p);
  if (!FileByName)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  }
  qword_10047E148 = *(void *)(FileByName + 80);
  operator new();
}

void sub_100321AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100321AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100321AD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100321B40(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10047E138 & 1) == 0)
  {
    byte_10047E138 = 1;
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/radiomap.pb.cc", a4);
    sub_10032DA30(v4, v5, v6, v7);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n\x1Bprotobuf/gen/radiomap.proto\x12\x0Eproto.radiomap\x1A\x18protobuf/gen/venue.proto\"B\n\aAddress\x12*\n\bencoding\x18\x01 \x02(\x0E2\x18.proto.radiomap.ApIdType\x12\v\n\x03uid\x18\x02 \x02(\f\"U\n\x0EFixedPointSpec\x12\x19\n\x11fixedToFloatScale\x18\x01 \x02(\x01\x12\x1A\n\x12fixedToFloatOffset\x18\x02 \x02(\x01\x12\f\n\x04bits\x18\x03 \x02(\r\"}\n\x0ECoarseApParams\x12\x15\n\nweakWeight\x18\x01 \x01(\x02:\x011\x12\x17\n\fstrongWeight\x18\x02 \x01(\x02:\x011\x12\x1B\n\rrssiThreshold\x18\x03 \x01(\x11:\x04-255\x12\x1E\n\x12rssiSmoothingRange\x18\x04 \x01(\x11:\x0210\"\xBF\x01\n\vSurveyPoint\x12\x10\n"
                                                                "\bpowerDbm\x18\x01 \x02(\x01\x129\n"
                                                                "\x04type\x18\x02 \x01(\x0E2+.proto.radiomap.SurveyPoint."
                                                                "SurveyPointType\x12\x10\n"
                                                                "\bsourceId\x18\x03 \x01(\t\"Q\n"
                                                                "\x0FSurveyPointType\x12\n"
                                                                "\n"
                                                                "\x06Survey\x10\x01\x12\x11\n"
                                                                "\rIndoorHarvest\x10\x03\x12\a\n"
                                                                "\x03Als\x10\x04\x12\x16\n"
                                                                "\x12Deprecated_Harvest\x10\x02\"\xD0\x02\n"
                                                                "\x0FCellObservation\x12\x1A\n"
                                                                "\x12surveyPointWeights\x18\x01 \x03(\x01\x12E\n"
                                                                "\x10surveyPointTypes\x18\x02 \x03(\x0E2+.proto.radiomap."
                                                                "SurveyPoint.SurveyPointType\x12\x14\n"
                                                                "\fsourceIdIdxs\x18\x03 \x03(\x05\x12\x11\n"
                                                                "\tpowerDbms\x18\x04 \x03(\x01\x12\x11\n"
                                                                "\tsourceIds\x18\x05 \x03(\t\x12\x11\n"
                                                                "\tisOutlier\x18\x06 \x03(\b\x12\x12\n"
                                                                "\n"
                                                                "clusterIds\x18\b \x03(\x05\x12\x14\n"
                                                                "\ffrequencyMhz\x18\t \x03(\x05\x12\x13\n"
                                                                "\vprobIndoors\x18\n"
                                                                " \x03(\x01\x12\x1B\n"
                                                                "\x13horizontalAccuracys\x18\v \x03(\x01\x12\x16\n"
                                                                "\x0EtimestampNanos\x18\f \x03(\x03\x12\x17\n"
                                                                "\x0FmodeDbmNoReject\x18\a \x01(\x01\"q\n"
                                                                "\x0EApRssiMapDebug\x12(\n"
                                                                "\aaddress\x18\x01 \x02(\v2\x17.proto.radiomap.Address\x12"
                                                                "5\n"
                                                                "\fobservations\x18\x02 \x03(\v2\x1F.proto.radiomap.CellO"
                                                                "bservation\"b\n"
                                                                "\x14SelfHealingTileDebug\x12\x11\n"
                                                                "\tsourceIds\x18\x01 \x03(\t\x12\x12\n"
                                                                "\n"
                                                                "probIndoor\x18\x02 \x03(\x01\x12#\n"
                                                                "\x1BprobIndoorAgainstSurveyTile\x18\x03 \x03(\x01\"P\n"
                                                                "\x0EPathLossParams\x12\x0E\n"
                                                                "\x06rowIdx\x18\x01 \x02(\r\x12\x0E\n"
                                                                "\x06colIdx\x18\x02 \x02(\r\x12\x0F\n"
                                                                "\amodeDbm\x18\x03 \x02(\x02\x12\r\n"
                                                                "\x05gamma\x18\x04 \x02(\x02\"\xF7\x02\x0A"
                                                                "\x09ApRssiMap\x12(\n"
                                                                "\aaddress\x18\x01 \x02(\v2\x17.proto.radiomap.Address\x12"
                                                                "\x12\n"
                                                                "\n"
                                                                "xIdxOffset\x18\x02 \x02(\r\x12\x12\n"
                                                                "\n"
                                                                "yIdxOffset\x18\x03 \x02(\r\x12\f\n"
                                                                "\x04rows\x18\x04 \x02(\r\x12\f\n"
                                                                "\x04cols\x18\x05 \x02(\r\x120\n"
                                                                "\bmodeSpec\x18\x06 \x01(\v2\x1E.proto.radiomap.FixedPoin"
                                                                "tSpec\x125\n"
                                                                "\rcertaintySpec\x18\a \x01(\v2\x1E.proto.radiomap.FixedP"
                                                                "ointSpec\x12\"\n"
                                                                "\x1ApackedCellModeAndCertainty\x18\b \x02(\f\x126\n"
                                                                "\x0EpathLossParams\x18\t \x01(\v2\x1E.proto.radiomap.Pat"
                                                                "hLossParams\x127\n"
                                                                "\fencodingType\x18\n"
                                                                " \x01(\x0E2!.proto.venue.RadioMapEncodingType\"\xB9\x01\n"
                                                                "\n"
                                                                "TileHeader\x12*\n"
                                                                "\taddresses\x18\x01 \x03(\v2\x17.proto.radiomap.Address\x12"
                                                                "6\n"
                                                                "\x0EcoarseApParams\x18\x04 \x03(\v2\x1E.proto.radiomap.C"
                                                                "oarseApParams\x12)\n"
                                                                "\toccupancy\x18\x02 \x01(\v2\x16.proto.venue.Occupancy\x12"
                                                                "\v\n"
                                                                "\x03uid\x18\x03 \x02(\t\x12\x0F\n"
                                                                "\aversion\x18\x10 \x01(\x03\"H\n"
                                                                "\rApFrequencies\x12(\n"
                                                                "\aaddress\x18\x01 \x02(\v2\x17.proto.radiomap.Address\x12"
                                                                "\r\n"
                                                                "\x05freqs\x18\x02 \x03(\x05*#\n"
                                                                "\bApIdType\x12\b\n"
                                                                "\x04WiFi\x10\x01\x12\r\n"
                                                                "\tBluetooth\x10\x02B!\n"
                                                                "\x1Fcom.apple.indoor.proto.radiomap",
      (const void *)0x767,
      v8);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_1003220B0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_1003220DC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100322108()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100322134()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100322214()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100322240()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10032226C()
{
  if (qword_1004929E0) {
    (*(void (**)(uint64_t))(*(void *)qword_1004929E0 + 8))(qword_1004929E0);
  }
  if (qword_10047E150) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E150 + 8))(qword_10047E150);
  }
  if (qword_1004929E8) {
    (*(void (**)(uint64_t))(*(void *)qword_1004929E8 + 8))(qword_1004929E8);
  }
  if (qword_10047E160) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E160 + 8))(qword_10047E160);
  }
  if (qword_1004929F0) {
    (*(void (**)(uint64_t))(*(void *)qword_1004929F0 + 8))(qword_1004929F0);
  }
  if (qword_10047E170) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E170 + 8))(qword_10047E170);
  }
  if (qword_1004929F8) {
    (*(void (**)(uint64_t))(*(void *)qword_1004929F8 + 8))(qword_1004929F8);
  }
  if (qword_10047E180) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E180 + 8))(qword_10047E180);
  }
  if (qword_100492A00) {
    (*(void (**)(uint64_t))(*(void *)qword_100492A00 + 8))(qword_100492A00);
  }
  if (qword_10047E198) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E198 + 8))(qword_10047E198);
  }
  if (qword_100492A08) {
    (*(void (**)(uint64_t))(*(void *)qword_100492A08 + 8))(qword_100492A08);
  }
  if (qword_10047E1A8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E1A8 + 8))(qword_10047E1A8);
  }
  if (qword_100492A10) {
    (*(void (**)(uint64_t))(*(void *)qword_100492A10 + 8))(qword_100492A10);
  }
  if (qword_10047E1B8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E1B8 + 8))(qword_10047E1B8);
  }
  if (qword_100492A18) {
    (*(void (**)(uint64_t))(*(void *)qword_100492A18 + 8))(qword_100492A18);
  }
  if (qword_10047E1C8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E1C8 + 8))(qword_10047E1C8);
  }
  if (qword_100492A20) {
    (*(void (**)(uint64_t))(*(void *)qword_100492A20 + 8))(qword_100492A20);
  }
  if (qword_10047E1D8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E1D8 + 8))(qword_10047E1D8);
  }
  if (qword_100492A28) {
    (*(void (**)(uint64_t))(*(void *)qword_100492A28 + 8))(qword_100492A28);
  }
  if (qword_10047E1E8) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E1E8 + 8))(qword_10047E1E8);
  }
  if (qword_100492A30) {
    (*(void (**)(uint64_t))(*(void *)qword_100492A30 + 8))(qword_100492A30);
  }
  uint64_t result = qword_10047E1F8;
  if (qword_10047E1F8)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10047E1F8 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_1003226B4()
{
  uint64_t v0 = qword_10047E208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v12[1] = sub_100321450;
    char v13 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v12);
  }
  if (!qword_1004929E0) {
    ((void (*)(void))sub_100321B40)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1004929E8) {
    sub_100321B40(v1);
  }
  uint64_t v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1004929F0) {
    sub_100321B40(v2);
  }
  uint64_t v3 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_1004929F8) {
    sub_100321B40(v3);
  }
  uint64_t v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_100492A00) {
    sub_100321B40(v4);
  }
  uint64_t v5 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_100492A08) {
    sub_100321B40(v5);
  }
  uint64_t v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_100492A10) {
    sub_100321B40(v6);
  }
  uint64_t v7 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_100492A18) {
    sub_100321B40(v7);
  }
  uint64_t v8 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_100492A20) {
    sub_100321B40(v8);
  }
  uint64_t v9 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_100492A28) {
    sub_100321B40(v9);
  }
  uint64_t v10 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_100492A30) {
    sub_100321B40(v10);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_1003228DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003228F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2++*(void *)(result + 8) = a2;
  return result;
}

void sub_1003228F8()
{
}

void sub_100322970()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100322998(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 32);
  if (!v1 {
    || (*(_DWORD *)(a1 + ++*(void *)(result + 24) = 1, (v1 & 2) == 0)
  }
    || (uint64_t v2 = *(void *)(a1 + 16), (_UNKNOWN *)v2 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
  {
LABEL_6:
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
    *((_DWORD *)result + 6) = 0;
    if (!v4) {
      return result;
    }
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_6;
  }
  **(unsigned char **)uint64_t v2 = 0;
  *(void *)(v2 + ++*(void *)(result + 8) = 0;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 6) = 0;
  if (v5) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1003229FC(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 32);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 24), (int)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 2) == 0)
    {
LABEL_3:
      uint64_t v9 = *(void **)(v5 + 8);
      uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
      uint64_t v7 = v9;
      if (!v9) {
        return result;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  uint64_t v10 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_7:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100322A98(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_12:
    uint64_t v11 = *((void *)this + 2);
    *(unsigned char *)uint64_t v4 = 18;
    if (*(char *)(v11 + 23) < 0)
    {
      uint64_t v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v11 + 8);
      if (v12 <= 0x7F) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v11 + 23);
      if (*(unsigned __int8 *)(v11 + 23) <= 0x7Fu)
      {
LABEL_14:
        *((unsigned char *)v4 + 1) = (_BYTE)v12;
        int v13 = v4 + 2;
        goto LABEL_17;
      }
    }
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v4 + 1, a3);
LABEL_17:
    int v14 = *(char *)(v11 + 23);
    if (v14 >= 0) {
      double v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11;
    }
    else {
      double v15 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v11;
    }
    if (v14 >= 0) {
      int v16 = (const void *)*(unsigned __int8 *)(v11 + 23);
    }
    else {
      int v16 = (const void *)*(unsigned int *)(v11 + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v15, v16, v13, a4);
    int v17 = (void *)*((void *)this + 1);
    uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v6 = v17;
    if (!v17) {
      return v4;
    }
    goto LABEL_24;
  }
  uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 6);
  *(unsigned char *)a2 = 8;
  uint64_t v10 = (char *)a2 + 1;
  if ((v9 & 0x80000000) != 0)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v9, (unint64_t)v10, a3);
    if ((*((unsigned char *)this + 32) & 2) != 0) {
      goto LABEL_12;
    }
  }
  else if (v9 > 0x7F)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v10, a3);
    if ((*((unsigned char *)this + 32) & 2) != 0) {
      goto LABEL_12;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v9;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((*((unsigned char *)this + 32) & 2) != 0) {
      goto LABEL_12;
    }
  }
LABEL_3:
  uint64_t v8 = (void *)*((void *)this + 1);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v6 = v8;
  if (!v8) {
    return v4;
  }
LABEL_24:
  if (*v6 == v6[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v7, v4, a3);
}

uint64_t sub_100322BD0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  char v3 = *(unsigned char *)(a1 + 32);
  if (v3)
  {
    if (*(unsigned char *)(a1 + 32))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
      if ((v5 & 0x80000000) != 0)
      {
        uint64_t v4 = 11;
        if ((v3 & 2) == 0) {
          goto LABEL_22;
        }
      }
      else if (v5 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5, a2)+ 1;
        if ((*(_DWORD *)(a1 + 32) & 2) == 0) {
          goto LABEL_22;
        }
      }
      else
      {
        uint64_t v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_22;
        }
      }
    }
    else
    {
      uint64_t v4 = 0;
      if ((*(unsigned char *)(a1 + 32) & 2) == 0) {
        goto LABEL_22;
      }
    }
    uint64_t v6 = *(void *)(a1 + 16);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    char v8 = v7;
    uint64_t v9 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      unint64_t v10 = *(unsigned __int8 *)(v6 + 23);
    }
    else {
      unint64_t v10 = v9;
    }
    if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10, a2);
      int v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v9 = *(void *)(v6 + 8);
      char v8 = *(unsigned char *)(v6 + 23);
    }
    else
    {
      int v11 = 1;
    }
    if (v8 < 0) {
      int v7 = v9;
    }
    uint64_t v4 = (v4 + v11 + v7 + 1);
  }
  else
  {
    uint64_t v4 = 0;
  }
LABEL_22:
  uint64_t v12 = *(void **)(a1 + 8);
  if (v12 && *v12 != v12[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 2++*(void *)(result + 8) = v4;
  return v4;
}

uint64_t sub_100322CC8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100064680((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100322DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100322DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100322DD0(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100322E5C()
{
  uint64_t v0 = qword_10047E208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100321450;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E148;
}

void sub_100322EEC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100322F00(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((*(unsigned char *)(a2 + 40) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 40) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    uint64_t v8 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(void *)(a1 + ++*(void *)(result + 24) = v8;
    if ((*(_DWORD *)(a2 + 40) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 40) |= 1u;
  *(void *)(a1 + 16) = v7;
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
LABEL_7:
    int v5 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 4u;
    *(_DWORD *)(a1 + 32) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100322FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100322FF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100323008(uint64_t a1)
{
  *(void *)a1 = off_100467120;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_10032305C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_100323064()
{
}

void sub_1003230CC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1003230F4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + ++*(void *)(result + 24) = 0;
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + ++*(void *)(result + 8) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100323118(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 40) & 4) == 0)
  {
LABEL_4:
    uint64_t v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_9;
  }
LABEL_8:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 32), a2, a4);
  unint64_t v10 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_9:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_1003231D0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 10);
  if (v4)
  {
    uint64_t v8 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v8;
    a2 += 9;
    int v4 = *((_DWORD *)this + 10);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_11:
      unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
      *(unsigned char *)a2 = 24;
      if (v10 > 0x7F)
      {
        a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)a2 + 1, a3);
        uint64_t v12 = (void *)*((void *)this + 1);
        int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
        uint64_t v5 = v12;
        if (!v12) {
          return a2;
        }
      }
      else
      {
        *(unsigned char *)(a2 + 1) = (_BYTE)v10;
        a2 += 2;
        int v11 = (void *)*((void *)this + 1);
        int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
        uint64_t v5 = v11;
        if (!v11) {
          return a2;
        }
      }
      goto LABEL_5;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v9 = *((void *)this + 3);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v9;
  a2 += 9;
  if ((*((_DWORD *)this + 10) & 4) != 0) {
    goto LABEL_11;
  }
LABEL_4:
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = (void *)*((void *)this + 1);
  if (!v5) {
    return a2;
  }
LABEL_5:
  if (*v5 == v5[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100323320(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 40);
  if (*(unsigned char *)(a1 + 40))
  {
    unsigned int v4 = (v3 << 31 >> 31) & 9;
    if ((v3 & 2) != 0) {
      uint64_t v5 = v4 + 9;
    }
    else {
      uint64_t v5 = v4;
    }
    if ((v3 & 4) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
      if (v6 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)
      }
           + 1;
      else {
        int v7 = 2;
      }
      uint64_t v5 = (v7 + v5);
      uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      uint64_t v9 = *(void **)(a1 + 8);
      if (!v9) {
        goto LABEL_10;
      }
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v9 = *(void **)(a1 + 8);
  if (!v9)
  {
LABEL_10:
    *(_DWORD *)(a1 + 36) = v5;
    return v5;
  }
LABEL_13:
  if (*v9 == v9[1]) {
    goto LABEL_10;
  }
  uint64_t v11 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v8, a2)
      + v5;
  *(_DWORD *)(a1 + 36) = v11;
  return v11;
}

uint64_t sub_1003233D0(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100322F00((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1003234B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003234C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003234D8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100323564()
{
  uint64_t v0 = qword_10047E208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100321450;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E158;
}

void sub_1003235F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100323608(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_100323610()
{
}

void sub_100323680()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1003236A8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 36))
  {
    __asm { FMOV            V1.2S, #1.0 }
    *(void *)(a1 + 16) = _D1;
    *(void *)(a1 + ++*(void *)(result + 24) = 0xAFFFFFF01;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v7) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1003236E4(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(float *)(result + 16), a3);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 24), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 8) == 0)
  {
LABEL_5:
    uint64_t v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 28), (int)a2, a4);
  unint64_t v10 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_11:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

uint64_t sub_1003237B8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a2, unsigned __int8 *a3)
{
  int v4 = *((_DWORD *)this + 9);
  if (v4)
  {
    int v9 = *((_DWORD *)this + 4);
    *(unsigned char *)a2 = 13;
    *(_DWORD *)(a2 + 1) = v9;
    a2 += 5;
    int v4 = *((_DWORD *)this + 9);
    if ((v4 & 2) == 0)
    {
LABEL_3:
      if ((v4 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v10 = *((_DWORD *)this + 5);
  *(unsigned char *)a2 = 21;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  if ((*((_DWORD *)this + 9) & 4) == 0)
  {
LABEL_4:
    if ((*((unsigned char *)this + 36) & 8) == 0) {
      goto LABEL_5;
    }
LABEL_16:
    int v13 = *((_DWORD *)this + 7);
    *(unsigned char *)a2 = 32;
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v13) ^ (v13 >> 31));
    if (v14 > 0x7F)
    {
      a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)a2 + 1, a3);
      int v16 = (void *)*((void *)this + 1);
      int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      uint64_t v5 = v16;
      if (!v16) {
        return a2;
      }
    }
    else
    {
      *(unsigned char *)(a2 + 1) = (2 * v13) ^ (v13 >> 31);
      a2 += 2;
      double v15 = (void *)*((void *)this + 1);
      int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      uint64_t v5 = v15;
      if (!v15) {
        return a2;
      }
    }
    goto LABEL_6;
  }
LABEL_12:
  int v11 = *((_DWORD *)this + 6);
  *(unsigned char *)a2 = 24;
  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * v11) ^ (v11 >> 31));
  if (v12 > 0x7F)
  {
    a2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)a2 + 1, a3);
    if ((*((unsigned char *)this + 36) & 8) != 0) {
      goto LABEL_16;
    }
  }
  else
  {
    *(unsigned char *)(a2 + 1) = (2 * v11) ^ (v11 >> 31);
    a2 += 2;
    if ((*((unsigned char *)this + 36) & 8) != 0) {
      goto LABEL_16;
    }
  }
LABEL_5:
  uint64_t v7 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v7;
  if (!v7) {
    return a2;
  }
LABEL_6:
  if (*v5 == v5[1]) {
    return a2;
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100323920(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 36);
  if (!*(unsigned char *)(a1 + 36))
  {
    uint64_t v5 = 0;
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    uint64_t v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
  unsigned int v4 = (v3 << 31 >> 31) & 5;
  if ((v3 & 2) != 0) {
    uint64_t v5 = v4 + 5;
  }
  else {
    uint64_t v5 = v4;
  }
  if ((v3 & 4) == 0)
  {
    if ((v3 & 8) == 0) {
      goto LABEL_7;
    }
LABEL_15:
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *(_DWORD *)(a1 + 28)) ^ (*(int *)(a1 + 28) >> 31));
    if (v10 >= 0x80)
    {
      uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2)+ 1+ v5;
      int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      uint64_t v7 = *(void **)(a1 + 8);
      if (!v7) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v5 = (v5 + 2);
      int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      uint64_t v7 = *(void **)(a1 + 8);
      if (!v7) {
        goto LABEL_8;
      }
    }
    goto LABEL_19;
  }
  int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *(_DWORD *)(a1 + 24)) ^ (*(int *)(a1 + 24) >> 31));
  if (v9 >= 0x80)
  {
    uint64_t v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2)+ 1+ v5;
    if ((*(_DWORD *)(a1 + 36) & 8) != 0) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v5 = (v5 + 2);
    if ((v3 & 8) != 0) {
      goto LABEL_15;
    }
  }
LABEL_7:
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = *(void **)(a1 + 8);
  if (!v7)
  {
LABEL_8:
    *(_DWORD *)(a1 + 32) = v5;
    return v5;
  }
LABEL_19:
  if (*v7 == v7[1]) {
    goto LABEL_8;
  }
  uint64_t v11 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 32) = v11;
  return v11;
}

uint64_t sub_100323A34(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100062A8C(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100323B14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100323B28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100323B3C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100323BC8()
{
  return 1;
}

uint64_t sub_100323BD0()
{
  uint64_t v0 = qword_10047E208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100321450;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E168;
}

void sub_100323C60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

BOOL sub_100323C74(int a1)
{
  return (a1 - 1) < 4;
}

uint64_t sub_100323C84(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 40);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 40))
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 40) |= 1u;
      *(void *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 40);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
        }
LABEL_10:
        uint64_t v7 = *(const std::string **)(a2 + 24);
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v8 = *(std::string **)(a1 + 24);
        if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        std::string::operator=(v8, v7);
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
    }
    else if ((*(unsigned char *)(a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v6 = *(_DWORD *)(a2 + 32);
    *(_DWORD *)(a1 + 40) |= 2u;
    *(_DWORD *)(a1 + 32) = v6;
    if ((*(_DWORD *)(a2 + 40) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_10;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100323DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100323DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100323DD0(void *a1)
{
  *a1 = off_100467280;
  uint64_t v2 = a1[3];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100323E68(void *a1)
{
  *a1 = off_100467280;
  uint64_t v2 = a1[3];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100323F14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

void sub_100323F1C()
{
}

void sub_100323F94()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100323FBC(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 40);
  if (!v1
    || (*(void *)(a1 + 16) = 0, *(_DWORD *)(a1 + 32) = 1, (v1 & 4) == 0)
    || (uint64_t v2 = *(void *)(a1 + 24), (_UNKNOWN *)v2 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
  {
LABEL_6:
    uint64_t v4 = *(void *)(a1 + 8);
    uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
    *((_DWORD *)result + ++*(void *)(result + 8) = 0;
    if (!v4) {
      return result;
    }
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_6;
  }
  **(unsigned char **)uint64_t v2 = 0;
  *(void *)(v2 + ++*(void *)(result + 8) = 0;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + ++*(void *)(result + 8) = 0;
  if (v5) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100324024(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v7 = (char *)*((void *)this + 1);
          if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
            *((_DWORD *)this + ++*(void *)(result + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v7;
            *((_DWORD *)this + ++*(void *)(result + 8) = TagFallback;
            *((void *)this + 1) = v7 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v9 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v10 = TagFallback & 7;
          if (v10 != 1) {
            goto LABEL_26;
          }
          unint64_t v18 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v18) & 1) == 0) {
            return 0;
          }
          *(void *)(a1 + 16) = v18;
          *(_DWORD *)(a1 + 40) |= 1u;
          int v13 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          if ((unint64_t)v13 < v12 && *v13 == 16)
          {
            int v14 = v13 + 1;
            *((void *)this + 1) = v14;
            goto LABEL_21;
          }
        }
        if (v9 != 2) {
          break;
        }
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v14 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
LABEL_21:
        unsigned int v17 = 0;
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v17);
          if (!result) {
            return result;
          }
          signed int v15 = v17;
          if (v17 - 1 <= 3)
          {
LABEL_24:
            *(_DWORD *)(a1 + 40) |= 2u;
            *(_DWORD *)(a1 + 32) = v15;
            goto LABEL_32;
          }
        }
        else
        {
          signed int v15 = *v14;
          *((void *)this + 1) = v14 + 1;
          if ((v15 - 1) <= 3) {
            goto LABEL_24;
          }
        }
        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v6, 2, v15);
LABEL_32:
        int v16 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v16 < *((void *)this + 2) && *v16 == 26)
        {
          *((void *)this + 1) = v16 + 1;
          *(_DWORD *)(a1 + 40) |= 4u;
          if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_35:
          }
            operator new();
          goto LABEL_12;
        }
      }
      if (v9 != 3) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 2) {
        goto LABEL_26;
      }
      *(_DWORD *)(a1 + 40) |= 4u;
      if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        goto LABEL_35;
      }
LABEL_12:
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      if (*((void *)this + 1) == *((void *)this + 2)
        && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
      {
        *((_DWORD *)this + ++*(void *)(result + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      }
    }
    int v10 = TagFallback & 7;
LABEL_26:
    if (v10 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4) & 1) != 0);
  return 0;
}

uint64_t sub_1003242B4(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 32), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 4) == 0)
  {
LABEL_4:
    unsigned int v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_9;
  }
LABEL_8:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v10 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_9:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10032436C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 10);
  if (v6)
  {
    uint64_t v10 = *((void *)this + 2);
    *(unsigned char *)a2 = 9;
    *(void *)((char *)a2 + 1) = v10;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
    if ((*((_DWORD *)this + 10) & 2) == 0)
    {
LABEL_3:
      if ((*((unsigned char *)this + 40) & 4) == 0) {
        goto LABEL_4;
      }
LABEL_14:
      uint64_t v13 = *((void *)this + 3);
      *(unsigned char *)uint64_t v4 = 26;
      if (*(char *)(v13 + 23) < 0)
      {
        int v14 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v13 + 8);
        if (v14 <= 0x7F) {
          goto LABEL_16;
        }
      }
      else
      {
        int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v13 + 23);
        if (*(unsigned __int8 *)(v13 + 23) <= 0x7Fu)
        {
LABEL_16:
          *((unsigned char *)v4 + 1) = (_BYTE)v14;
          int v15 = v4 + 2;
          goto LABEL_19;
        }
      }
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, (int)v4 + 1, a3);
LABEL_19:
      int v16 = *(char *)(v13 + 23);
      if (v16 >= 0) {
        unsigned int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13;
      }
      else {
        unsigned int v17 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v13;
      }
      if (v16 >= 0) {
        unint64_t v18 = (const void *)*(unsigned __int8 *)(v13 + 23);
      }
      else {
        unint64_t v18 = (const void *)*(unsigned int *)(v13 + 8);
      }
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v17, v18, v15, a4);
      int v19 = (void *)*((void *)this + 1);
      uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      uint64_t v7 = v19;
      if (!v19) {
        return v4;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
  *(unsigned char *)uint64_t v4 = 16;
  unint64_t v12 = (unint64_t)v4 + 1;
  if ((v11 & 0x80000000) != 0)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v11, v12, a3);
    if ((*((unsigned char *)this + 40) & 4) != 0) {
      goto LABEL_14;
    }
  }
  else if (v11 > 0x7F)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v12, a3);
    if ((*((unsigned char *)this + 40) & 4) != 0) {
      goto LABEL_14;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v11;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((*((unsigned char *)this + 40) & 4) != 0) {
      goto LABEL_14;
    }
  }
LABEL_4:
  unsigned int v9 = (void *)*((void *)this + 1);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v7 = v9;
  if (!v9) {
    return v4;
  }
LABEL_26:
  if (*v7 == v7[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, v4, a3);
}

uint64_t sub_1003244FC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 40);
  if (!*(unsigned char *)(a1 + 40))
  {
    uint64_t v4 = 0;
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v6 = *(void **)(a1 + 8);
    if (!v6) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
  uint64_t v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) == 0)
  {
    if ((v3 & 4) == 0) {
      goto LABEL_4;
    }
LABEL_15:
    uint64_t v9 = *(void *)(a1 + 24);
    int v10 = *(unsigned __int8 *)(v9 + 23);
    char v11 = v10;
    uint64_t v12 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      unint64_t v13 = *(unsigned __int8 *)(v9 + 23);
    }
    else {
      unint64_t v13 = v12;
    }
    if (v13 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13, a2);
      int v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v12 = *(void *)(v9 + 8);
      char v11 = *(unsigned char *)(v9 + 23);
    }
    else
    {
      int v14 = 1;
    }
    if (v11 < 0) {
      int v10 = v12;
    }
    uint64_t v4 = (v4 + v14 + v10 + 1);
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v6 = *(void **)(a1 + 8);
    if (!v6) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if ((v8 & 0x80000000) != 0)
  {
    uint64_t v4 = (v4 + 11);
    if ((v3 & 4) != 0) {
      goto LABEL_15;
    }
  }
  else if (v8 >= 0x80)
  {
    uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2)+ 1+ v4;
    if ((*(_DWORD *)(a1 + 40) & 4) != 0) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v4 = (v4 + 2);
    if ((v3 & 4) != 0) {
      goto LABEL_15;
    }
  }
LABEL_4:
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v6 = *(void **)(a1 + 8);
  if (!v6)
  {
LABEL_5:
    *(_DWORD *)(a1 + 36) = v4;
    return v4;
  }
LABEL_24:
  if (*v6 == v6[1]) {
    goto LABEL_5;
  }
  uint64_t v15 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
      + v4;
  *(_DWORD *)(a1 + 36) = v15;
  return v15;
}

uint64_t sub_100324634(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100323C84((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100324714(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100324728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10032473C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1003247C8(uint64_t a1)
{
  return *(_DWORD *)(a1 + 40) & 1;
}

uint64_t sub_1003247D4()
{
  uint64_t v0 = qword_10047E208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100321450;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E178;
}

void sub_100324864(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100324878(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v66);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = *(_DWORD *)(a1 + 24);
    int v6 = *(_DWORD *)(a1 + 28);
    int v7 = v5 + v4;
    if (v6 < v7)
    {
      int v8 = 2 * v6;
      if (2 * v6 <= v7) {
        int v8 = v7;
      }
      if (v8 <= 4) {
        int v8 = 4;
      }
      *(_DWORD *)(a1 + 2++*(void *)(result + 8) = v8;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 16) + 8 * v5), *(const void **)(a2 + 16), 8 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if (v9)
  {
    int v10 = *(_DWORD *)(a1 + 40);
    int v11 = *(_DWORD *)(a1 + 44);
    int v12 = v10 + v9;
    if (v11 < v12)
    {
      int v13 = 2 * v11;
      if (2 * v11 <= v12) {
        int v13 = v12;
      }
      if (v13 <= 4) {
        int v13 = 4;
      }
      *(_DWORD *)(a1 + 44) = v13;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 32) + 4 * v10), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 40));
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
  }
  int v14 = *(_DWORD *)(a2 + 56);
  if (v14)
  {
    int v15 = *(_DWORD *)(a1 + 56);
    int v16 = *(_DWORD *)(a1 + 60);
    int v17 = v15 + v14;
    if (v16 < v17)
    {
      int v18 = 2 * v16;
      if (2 * v16 <= v17) {
        int v18 = v17;
      }
      if (v18 <= 4) {
        int v18 = 4;
      }
      *(_DWORD *)(a1 + 60) = v18;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 48) + 4 * v15), *(const void **)(a2 + 48), 4 * *(int *)(a2 + 56));
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
  }
  int v19 = *(_DWORD *)(a2 + 72);
  if (v19)
  {
    int v20 = *(_DWORD *)(a1 + 72);
    int v21 = *(_DWORD *)(a1 + 76);
    int v22 = v20 + v19;
    if (v21 < v22)
    {
      int v23 = 2 * v21;
      if (2 * v21 <= v22) {
        int v23 = v22;
      }
      if (v23 <= 4) {
        int v23 = 4;
      }
      *(_DWORD *)(a1 + 76) = v23;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 64) + 8 * v20), *(const void **)(a2 + 64), 8 * *(int *)(a2 + 72));
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
  }
  BOOL v24 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 80), *(_DWORD *)(a2 + 88) + *(_DWORD *)(a1 + 88));
  if (*(int *)(a2 + 88) >= 1)
  {
    uint64_t v25 = 0;
    do
    {
      while (1)
      {
        unint64_t v29 = *(const std::string **)(*(void *)(a2 + 80) + 8 * v25);
        int v30 = *(_DWORD *)(a1 + 92);
        uint64_t v31 = *(int *)(a1 + 88);
        if ((int)v31 >= v30) {
          break;
        }
        uint64_t v32 = *(void *)(a1 + 80);
        *(_DWORD *)(a1 + 8++*(void *)(result + 8) = v31 + 1;
        BOOL v24 = std::string::operator=(*(std::string **)(v32 + 8 * v31), v29);
        if (++v25 >= *(int *)(a2 + 88)) {
          goto LABEL_43;
        }
      }
      if (v30 == *(_DWORD *)(a1 + 96))
      {
        BOOL v24 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 80), v30 + 1);
        int v30 = *(_DWORD *)(a1 + 92);
      }
      *(_DWORD *)(a1 + 92) = v30 + 1;
      double v26 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)v24);
      uint64_t v27 = *(void *)(a1 + 80);
      uint64_t v28 = *(int *)(a1 + 88);
      *(_DWORD *)(a1 + 8++*(void *)(result + 8) = v28 + 1;
      *(void *)(v27 + 8 * v2++*(void *)(result + 8) = v26;
      BOOL v24 = std::string::operator=(v26, v29);
      ++v25;
    }
    while (v25 < *(int *)(a2 + 88));
  }
LABEL_43:
  int v33 = *(_DWORD *)(a2 + 112);
  if (v33)
  {
    int v34 = *(_DWORD *)(a1 + 112);
    int v35 = *(_DWORD *)(a1 + 116);
    int v36 = v34 + v33;
    if (v35 < v36)
    {
      int v37 = 2 * v35;
      if (2 * v35 <= v36) {
        int v37 = v36;
      }
      if (v37 <= 4) {
        int v38 = 4;
      }
      else {
        int v38 = v37;
      }
      *(_DWORD *)(a1 + 116) = v38;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 104) + v34), *(const void **)(a2 + 104), *(int *)(a2 + 112));
    *(_DWORD *)(a1 + 112) += *(_DWORD *)(a2 + 112);
  }
  int v39 = *(_DWORD *)(a2 + 128);
  if (v39)
  {
    int v40 = *(_DWORD *)(a1 + 128);
    int v41 = *(_DWORD *)(a1 + 132);
    int v42 = v40 + v39;
    if (v41 < v42)
    {
      int v43 = 2 * v41;
      if (2 * v41 <= v42) {
        int v43 = v42;
      }
      if (v43 <= 4) {
        int v43 = 4;
      }
      *(_DWORD *)(a1 + 132) = v43;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 120) + 4 * v40), *(const void **)(a2 + 120), 4 * *(int *)(a2 + 128));
    *(_DWORD *)(a1 + 128) += *(_DWORD *)(a2 + 128);
  }
  int v44 = *(_DWORD *)(a2 + 144);
  if (v44)
  {
    int v45 = *(_DWORD *)(a1 + 144);
    int v46 = *(_DWORD *)(a1 + 148);
    int v47 = v45 + v44;
    if (v46 < v47)
    {
      int v48 = 2 * v46;
      if (2 * v46 <= v47) {
        int v48 = v47;
      }
      if (v48 <= 4) {
        int v48 = 4;
      }
      *(_DWORD *)(a1 + 14++*(void *)(result + 8) = v48;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 136) + 4 * v45), *(const void **)(a2 + 136), 4 * *(int *)(a2 + 144));
    *(_DWORD *)(a1 + 144) += *(_DWORD *)(a2 + 144);
  }
  int v49 = *(_DWORD *)(a2 + 160);
  if (v49)
  {
    int v50 = *(_DWORD *)(a1 + 160);
    int v51 = *(_DWORD *)(a1 + 164);
    int v52 = v50 + v49;
    if (v51 < v52)
    {
      int v53 = 2 * v51;
      if (2 * v51 <= v52) {
        int v53 = v52;
      }
      if (v53 <= 4) {
        int v53 = 4;
      }
      *(_DWORD *)(a1 + 164) = v53;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 152) + 8 * v50), *(const void **)(a2 + 152), 8 * *(int *)(a2 + 160));
    *(_DWORD *)(a1 + 160) += *(_DWORD *)(a2 + 160);
  }
  int v54 = *(_DWORD *)(a2 + 176);
  if (v54)
  {
    int v55 = *(_DWORD *)(a1 + 176);
    int v56 = *(_DWORD *)(a1 + 180);
    int v57 = v55 + v54;
    if (v56 < v57)
    {
      int v58 = 2 * v56;
      if (2 * v56 <= v57) {
        int v58 = v57;
      }
      if (v58 <= 4) {
        int v58 = 4;
      }
      *(_DWORD *)(a1 + 180) = v58;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 168) + 8 * v55), *(const void **)(a2 + 168), 8 * *(int *)(a2 + 176));
    *(_DWORD *)(a1 + 176) += *(_DWORD *)(a2 + 176);
  }
  int v59 = *(_DWORD *)(a2 + 192);
  if (v59)
  {
    int v60 = *(_DWORD *)(a1 + 192);
    int v61 = *(_DWORD *)(a1 + 196);
    int v62 = v60 + v59;
    if (v61 < v62)
    {
      int v63 = 2 * v61;
      if (2 * v61 <= v62) {
        int v63 = v62;
      }
      if (v63 <= 4) {
        int v63 = 4;
      }
      *(_DWORD *)(a1 + 196) = v63;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 184) + 8 * v60), *(const void **)(a2 + 184), 8 * *(int *)(a2 + 192));
    *(_DWORD *)(a1 + 192) += *(_DWORD *)(a2 + 192);
  }
  if ((*(unsigned char *)(a2 + 213) & 8) != 0)
  {
    uint64_t v64 = *(void *)(a2 + 200);
    *(_DWORD *)(a1 + 212) |= 0x800u;
    *(void *)(a1 + 200) = v64;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10032510C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100325120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100325134(uint64_t a1)
{
  *(void *)a1 = off_100467330;
  if (*(void *)(a1 + 184)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 168)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 152)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 136)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 120)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 104)) {
    operator delete[]();
  }
  if (*(int *)(a1 + 92) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete();
      ++v2;
    }
    while (v2 < *(int *)(a1 + 92));
  }
  if (*(void *)(a1 + 80)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 64)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 48)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 32)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 16)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_1003252F4(uint64_t a1)
{
  sub_100325134(a1);

  operator delete();
}

uint64_t sub_10032532C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 20++*(void *)(result + 8) = a2;
  return result;
}

void sub_100325334()
{
}

void sub_1003253C0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1003253E8(uint64_t a1)
{
  if ((*(_DWORD *)(a1 + 212) & 0x7F800) != 0) {
    *(void *)(a1 + 200) = 0;
  }
  *(_DWORD *)(a1 + ++*(void *)(result + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 72) = 0;
  if (*(int *)(a1 + 88) >= 1)
  {
    uint64_t v1 = 0;
    do
    {
      while (1)
      {
        uint64_t v2 = *(void *)(*(void *)(a1 + 80) + 8 * v1);
        if (*(char *)(v2 + 23) < 0) {
          break;
        }
        *(unsigned char *)uint64_t v2 = 0;
        *(unsigned char *)(v2 + 23) = 0;
        if (++v1 >= *(int *)(a1 + 88)) {
          goto LABEL_8;
        }
      }
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + ++*(void *)(result + 8) = 0;
      ++v1;
    }
    while (v1 < *(int *)(a1 + 88));
  }
LABEL_8:
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 20) = 0;
  *((_DWORD *)result + 26) = 0;
  *((_DWORD *)result + 30) = 0;
  *((_DWORD *)result + 34) = 0;
  *((_DWORD *)result + 3++*(void *)(result + 8) = 0;
  *((_DWORD *)result + 42) = 0;
  *((_DWORD *)result + 46) = 0;
  *((_DWORD *)result + 51) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100325490(uint64_t result, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5 = result;
  v156 = (uint64_t *)(result + 168);
  v157 = (uint64_t *)(result + 184);
  int v6 = (uint64_t *)(result + 136);
  int v7 = (uint64_t *)(result + 120);
  v154 = (uint64_t *)(result + 104);
  v155 = (uint64_t *)(result + 152);
  int v8 = (uint64_t *)(result + 48);
  v153 = (uint64_t *)(result + 64);
  v152 = (uint64_t *)(result + 16);
  int v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(result + 8);
  v158 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 80);
LABEL_2:
  while (2)
  {
    int v10 = (char *)*((void *)this + 1);
    if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)result;
      *((_DWORD *)this + ++*(void *)(result + 8) = result;
      if (!result) {
        return 1;
      }
    }
    else
    {
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v10;
      *((_DWORD *)this + ++*(void *)(result + 8) = v11;
      *((void *)this + 1) = v10 + 1;
      if (!v11) {
        return 1;
      }
    }
    switch(v11 >> 3)
    {
      case 1u:
        int v12 = v11 & 7;
        if (v12 != 2)
        {
          if (v12 == 1)
          {
            *(void *)v159 = 0;
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v159);
            if ((result & 1) == 0) {
              return 0;
            }
            goto LABEL_65;
          }
          goto LABEL_48;
        }
        uint64_t result = sub_1000E9ECC(this, v152);
        if (!result) {
          return result;
        }
        while (1)
        {
          int v39 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
          if ((unint64_t)v39 >= v13) {
            goto LABEL_2;
          }
          int v40 = *v39;
          if (v40 == 16) {
            goto LABEL_105;
          }
          if (v40 != 9) {
            goto LABEL_2;
          }
          *((void *)this + 1) = v39 + 1;
          *(void *)v159 = 0;
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v159);
          if ((result & 1) == 0) {
            return 0;
          }
LABEL_65:
          uint64_t v25 = *(void *)v159;
          int v26 = *(_DWORD *)(v5 + 24);
          uint64_t v27 = *(void *)(v5 + 16);
          if (v26 == *(_DWORD *)(v5 + 28))
          {
            if (2 * v26 <= v26 + 1) {
              int v28 = v26 + 1;
            }
            else {
              int v28 = 2 * v26;
            }
            if (v28 <= 4) {
              int v28 = 4;
            }
            *(_DWORD *)(v5 + 2++*(void *)(result + 8) = v28;
            operator new[]();
          }
          int v29 = v26 + 1;
          *(_DWORD *)(v5 + ++*(void *)(result + 24) = v26 + 1;
          *(void *)(v27 + 8 * v26) = v25;
          uint64_t v30 = *((void *)this + 1);
          int v31 = *((_DWORD *)this + 4) - v30;
          if (v31 >= 1)
          {
            signed int v32 = *(_DWORD *)(v5 + 28) - v29;
            signed int v33 = v31 / 9u;
            if ((int)(v31 / 9u) >= v32) {
              signed int v33 = *(_DWORD *)(v5 + 28) - v29;
            }
            if (v33 >= 1)
            {
              uint64_t v34 = 0;
              int v35 = v26 + 2;
              uint64_t v36 = v27 + 8 * v29;
              uint64_t v37 = ((*((_DWORD *)this + 4) - v30) * (unsigned __int128)0x1C71C71C71C71C72uLL) >> 64;
              if (v37 >= v32) {
                LODWORD(v37) = v32;
              }
              while (*(unsigned char *)v30 == 9)
              {
                uint64_t v38 = *(void *)(v30 + 1);
                *(_DWORD *)(v5 + ++*(void *)(result + 24) = v35 + v34;
                *(void *)(v36 + 8 * v34++) = v38;
                v30 += 9;
                if (v37 == v34) {
                  goto LABEL_80;
                }
              }
              signed int v33 = v34;
              if (v34)
              {
LABEL_80:
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v33);
                continue;
              }
            }
          }
        }
      case 2u:
        int v12 = v11 & 7;
        if (v12 != 2)
        {
          if ((v11 & 7) == 0)
          {
            int v14 = (char *)*((void *)this + 1);
            unint64_t v13 = *((void *)this + 2);
            goto LABEL_88;
          }
          goto LABEL_48;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline();
        if (!result) {
          return result;
        }
LABEL_102:
        int v39 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v13 = *((void *)this + 2);
        if ((unint64_t)v39 >= v13) {
          continue;
        }
        int v46 = *v39;
        if (v46 == 24) {
          goto LABEL_131;
        }
        if (v46 != 16) {
          continue;
        }
LABEL_105:
        int v14 = (char *)(v39 + 1);
        *((void *)this + 1) = v14;
LABEL_88:
        v159[0] = 0;
        if ((unint64_t)v14 >= v13 || (int v41 = *v14, v41 < 0))
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v159);
          if (!result) {
            return result;
          }
          signed int v42 = v159[0];
          if (v159[0] - 1 <= 3) {
            goto LABEL_91;
          }
        }
        else
        {
          signed int v42 = *v14;
          *((void *)this + 1) = v14 + 1;
          if (v41 - 1 <= 3)
          {
LABEL_91:
            int v43 = *(_DWORD *)(v5 + 40);
            uint64_t v44 = *(void *)(v5 + 32);
            if (v43 == *(_DWORD *)(v5 + 44))
            {
              if (2 * v43 <= v43 + 1) {
                int v45 = v43 + 1;
              }
              else {
                int v45 = 2 * v43;
              }
              if (v45 <= 4) {
                int v45 = 4;
              }
              *(_DWORD *)(v5 + 44) = v45;
              operator new[]();
            }
            *(_DWORD *)(v5 + 40) = v43 + 1;
            *(_DWORD *)(v44 + 4 * v43) = v42;
            goto LABEL_102;
          }
        }
        uint64_t result = wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v9, 2, v42);
        goto LABEL_102;
      case 3u:
        int v12 = v11 & 7;
        if (v12 != 2)
        {
          if ((v11 & 7) == 0)
          {
            int v15 = (char *)*((void *)this + 1);
            unint64_t v13 = *((void *)this + 2);
            goto LABEL_106;
          }
LABEL_48:
          if (v12 == 4) {
            return 1;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, v11, v9, a4);
          if ((result & 1) == 0) {
            return 0;
          }
          continue;
        }
        uint64_t result = sub_10032682C(this, v8);
        if (!result) {
          return result;
        }
        while (1)
        {
          int v39 = (unsigned __int8 *)*((void *)this + 1);
          unint64_t v13 = *((void *)this + 2);
          if ((unint64_t)v39 >= v13) {
            goto LABEL_2;
          }
          int v57 = *v39;
          if (v57 == 33) {
            break;
          }
          if (v57 != 24) {
            goto LABEL_2;
          }
LABEL_131:
          int v15 = (char *)(v39 + 1);
          *((void *)this + 1) = v15;
LABEL_106:
          v159[0] = 0;
          if ((unint64_t)v15 >= v13 || *v15 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v159);
            if (!result) {
              return result;
            }
            unsigned int v47 = v159[0];
            int v48 = *(_DWORD *)(v5 + 56);
            uint64_t v49 = *(void *)(v5 + 48);
            if (v48 == *(_DWORD *)(v5 + 60))
            {
LABEL_112:
              if (2 * v48 <= v48 + 1) {
                int v50 = v48 + 1;
              }
              else {
                int v50 = 2 * v48;
              }
              if (v50 <= 4) {
                int v50 = 4;
              }
              *(_DWORD *)(v5 + 60) = v50;
              operator new[]();
            }
          }
          else
          {
            unsigned int v47 = *v15;
            *((void *)this + 1) = v15 + 1;
            int v48 = *(_DWORD *)(v5 + 56);
            uint64_t v49 = *(void *)(v5 + 48);
            if (v48 == *(_DWORD *)(v5 + 60)) {
              goto LABEL_112;
            }
          }
          *(_DWORD *)(v5 + 56) = v48 + 1;
          *(_DWORD *)(v49 + 4 * v4++*(void *)(result + 8) = v47;
          int v51 = *(_DWORD *)(v5 + 60) - *(_DWORD *)(v5 + 56);
          if (v51 >= 1)
          {
            int v52 = v51 + 1;
            do
            {
              int v55 = (unsigned char *)*((void *)this + 1);
              unint64_t v56 = *((void *)this + 2);
              if ((unint64_t)v55 >= v56 || *v55 != 24) {
                break;
              }
              *((void *)this + 1) = v55 + 1;
              v159[0] = 0;
              if ((unint64_t)(v55 + 1) >= v56 || (char)v55[1] < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v159);
                if (!result) {
                  return result;
                }
                unsigned int v53 = v159[0];
                uint64_t v49 = *v8;
              }
              else
              {
                unsigned int v53 = v55[1];
                *((void *)this + 1) = v55 + 2;
              }
              uint64_t v54 = *(int *)(v5 + 56);
              *(_DWORD *)(v5 + 56) = v54 + 1;
              *(_DWORD *)(v49 + 4 * v54) = v53;
              --v52;
            }
            while (v52 > 1);
          }
        }
LABEL_184:
        *((void *)this + 1) = v39 + 1;
LABEL_185:
        *(void *)v159 = 0;
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v159);
        if (result)
        {
          uint64_t v81 = *(void *)v159;
          int v82 = *(_DWORD *)(v5 + 72);
          uint64_t v83 = *(void *)(v5 + 64);
          if (v82 == *(_DWORD *)(v5 + 76))
          {
            if (2 * v82 <= v82 + 1) {
              int v84 = v82 + 1;
            }
            else {
              int v84 = 2 * v82;
            }
            if (v84 <= 4) {
              int v84 = 4;
            }
            *(_DWORD *)(v5 + 76) = v84;
            operator new[]();
          }
          int v85 = v82 + 1;
          *(_DWORD *)(v5 + 72) = v82 + 1;
          *(void *)(v83 + 8 * v82) = v81;
          uint64_t v86 = *((void *)this + 1);
          int v87 = *((_DWORD *)this + 4) - v86;
          if (v87 >= 1)
          {
            signed int v88 = *(_DWORD *)(v5 + 76) - v85;
            signed int v89 = v87 / 9u;
            if ((int)(v87 / 9u) >= v88) {
              signed int v89 = *(_DWORD *)(v5 + 76) - v85;
            }
            if (v89 >= 1)
            {
              uint64_t v90 = 0;
              int v91 = v82 + 2;
              uint64_t v92 = v83 + 8 * v85;
              uint64_t v93 = ((*((_DWORD *)this + 4) - v86) * (unsigned __int128)0x1C71C71C71C71C72uLL) >> 64;
              if (v93 >= v88) {
                LODWORD(v93) = v88;
              }
              while (*(unsigned char *)v86 == 33)
              {
                uint64_t v94 = *(void *)(v86 + 1);
                *(_DWORD *)(v5 + 72) = v91 + v90;
                *(void *)(v92 + 8 * v90++) = v94;
                v86 += 9;
                if (v93 == v90) {
                  goto LABEL_201;
                }
              }
              signed int v89 = v90;
              if (v90) {
LABEL_201:
              }
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v89);
            }
          }
LABEL_202:
          int v39 = (unsigned __int8 *)*((void *)this + 1);
          if ((unint64_t)v39 >= *((void *)this + 2)) {
            continue;
          }
          int v95 = *v39;
          if (v95 == 33) {
            goto LABEL_184;
          }
          if (v95 == 42)
          {
            while (1)
            {
              *((void *)this + 1) = v39 + 1;
              int v16 = *(_DWORD *)(v5 + 92);
              int v17 = *(_DWORD *)(v5 + 88);
              if (v17 < v16)
              {
LABEL_25:
                *(_DWORD *)(v5 + 8++*(void *)(result + 8) = v17 + 1;
              }
              else
              {
LABEL_209:
                if (v16 == *(_DWORD *)(v5 + 96))
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v158, v16 + 1);
                  int v16 = *(_DWORD *)(v5 + 92);
                }
                *(_DWORD *)(v5 + 92) = v16 + 1;
                uint64_t v96 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)result);
                uint64_t v97 = *(void *)(v5 + 80);
                uint64_t v98 = *(int *)(v5 + 88);
                *(_DWORD *)(v5 + 8++*(void *)(result + 8) = v98 + 1;
                *(void *)(v97 + 8 * v9++*(void *)(result + 8) = v96;
              }
              uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
              if (!result) {
                return result;
              }
              int v39 = (unsigned __int8 *)*((void *)this + 1);
              unint64_t v18 = *((void *)this + 2);
              if ((unint64_t)v39 >= v18) {
                break;
              }
              int v99 = *v39;
              if (v99 != 42)
              {
                while (v99 == 48)
                {
                  int v19 = (char *)(v39 + 1);
                  *((void *)this + 1) = v19;
LABEL_217:
                  v159[0] = 0;
                  if ((unint64_t)v19 >= v18 || (int v100 = *v19, v100 < 0))
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v159);
                    if (!result) {
                      return result;
                    }
                    BOOL v101 = v159[0] != 0;
                    int v102 = *(_DWORD *)(v5 + 112);
                    uint64_t v103 = *(void *)(v5 + 104);
                    if (v102 == *(_DWORD *)(v5 + 116))
                    {
LABEL_223:
                      if (2 * v102 <= v102 + 1) {
                        int v104 = v102 + 1;
                      }
                      else {
                        int v104 = 2 * v102;
                      }
                      if (v104 <= 4) {
                        int v105 = 4;
                      }
                      else {
                        int v105 = v104;
                      }
                      *(_DWORD *)(v5 + 116) = v105;
                      operator new[]();
                    }
                  }
                  else
                  {
                    *((void *)this + 1) = v19 + 1;
                    BOOL v101 = v100 != 0;
                    int v102 = *(_DWORD *)(v5 + 112);
                    uint64_t v103 = *(void *)(v5 + 104);
                    if (v102 == *(_DWORD *)(v5 + 116)) {
                      goto LABEL_223;
                    }
                  }
                  int v106 = v102 + 1;
                  *(_DWORD *)(v5 + 112) = v102 + 1;
                  *(unsigned char *)(v103 + v102) = v101;
                  int v107 = *(_DWORD *)(v5 + 116);
                  if (v107 - (v102 + 1) >= 1)
                  {
                    int v108 = v107 - v102;
                    do
                    {
                      v110 = (unsigned char *)*((void *)this + 1);
                      unint64_t v111 = *((void *)this + 2);
                      if ((unint64_t)v110 >= v111 || *v110 != 48) {
                        break;
                      }
                      *((void *)this + 1) = v110 + 1;
                      v159[0] = 0;
                      if ((unint64_t)(v110 + 1) >= v111 || (char)v110[1] < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v159);
                        if (!result) {
                          return result;
                        }
                        unsigned int v109 = v159[0];
                        uint64_t v103 = *(void *)(v5 + 104);
                        int v106 = *(_DWORD *)(v5 + 112);
                      }
                      else
                      {
                        unsigned int v109 = v110[1];
                        *((void *)this + 1) = v110 + 2;
                      }
                      *(_DWORD *)(v5 + 112) = v106 + 1;
                      *(unsigned char *)(v103 + v106) = v109 != 0;
                      --v108;
                      ++v106;
                    }
                    while (v108 > 1);
                  }
LABEL_240:
                  int v39 = (unsigned __int8 *)*((void *)this + 1);
                  unint64_t v18 = *((void *)this + 2);
                  if ((unint64_t)v39 >= v18) {
                    break;
                  }
                  int v99 = *v39;
                  if (v99 == 57)
                  {
                    *((void *)this + 1) = v39 + 1;
LABEL_243:
                    *(void *)v159 = 0;
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v159);
                    if ((result & 1) == 0) {
                      return 0;
                    }
                    *(void *)(v5 + 200) = *(void *)v159;
                    *(_DWORD *)(v5 + 212) |= 0x800u;
                    long long v68 = (char *)*((void *)this + 1);
                    unint64_t v20 = *((void *)this + 2);
                    if ((unint64_t)v68 < v20 && *v68 == 64)
                    {
                      while (1)
                      {
                        int v21 = v68 + 1;
                        *((void *)this + 1) = v21;
LABEL_132:
                        v159[0] = 0;
                        if ((unint64_t)v21 >= v20 || *v21 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v159);
                          if (!result) {
                            return result;
                          }
                          unsigned int v58 = v159[0];
                          int v59 = *(_DWORD *)(v5 + 128);
                          uint64_t v60 = *(void *)(v5 + 120);
                          if (v59 == *(_DWORD *)(v5 + 132))
                          {
LABEL_138:
                            if (2 * v59 <= v59 + 1) {
                              int v61 = v59 + 1;
                            }
                            else {
                              int v61 = 2 * v59;
                            }
                            if (v61 <= 4) {
                              int v61 = 4;
                            }
                            *(_DWORD *)(v5 + 132) = v61;
                            operator new[]();
                          }
                        }
                        else
                        {
                          unsigned int v58 = *v21;
                          *((void *)this + 1) = v21 + 1;
                          int v59 = *(_DWORD *)(v5 + 128);
                          uint64_t v60 = *(void *)(v5 + 120);
                          if (v59 == *(_DWORD *)(v5 + 132)) {
                            goto LABEL_138;
                          }
                        }
                        *(_DWORD *)(v5 + 12++*(void *)(result + 8) = v59 + 1;
                        *(_DWORD *)(v60 + 4 * v59) = v58;
                        int v62 = *(_DWORD *)(v5 + 132) - *(_DWORD *)(v5 + 128);
                        if (v62 >= 1)
                        {
                          int v63 = v62 + 1;
                          do
                          {
                            long long v66 = (unsigned char *)*((void *)this + 1);
                            unint64_t v67 = *((void *)this + 2);
                            if ((unint64_t)v66 >= v67 || *v66 != 64) {
                              break;
                            }
                            *((void *)this + 1) = v66 + 1;
                            v159[0] = 0;
                            if ((unint64_t)(v66 + 1) >= v67 || (char)v66[1] < 0)
                            {
                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v159);
                              if (!result) {
                                return result;
                              }
                              unsigned int v64 = v159[0];
                              uint64_t v60 = *v7;
                            }
                            else
                            {
                              unsigned int v64 = v66[1];
                              *((void *)this + 1) = v66 + 2;
                            }
                            uint64_t v65 = *(int *)(v5 + 128);
                            *(_DWORD *)(v5 + 12++*(void *)(result + 8) = v65 + 1;
                            *(_DWORD *)(v60 + 4 * v65) = v64;
                            --v63;
                          }
                          while (v63 > 1);
                        }
LABEL_154:
                        long long v68 = (char *)*((void *)this + 1);
                        unint64_t v20 = *((void *)this + 2);
                        if ((unint64_t)v68 >= v20) {
                          break;
                        }
                        int v69 = *v68;
                        if (v69 == 72)
                        {
                          while (1)
                          {
                            int v22 = v68 + 1;
                            *((void *)this + 1) = v22;
LABEL_158:
                            v159[0] = 0;
                            if ((unint64_t)v22 >= v20 || *v22 < 0)
                            {
                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v159);
                              if (!result) {
                                return result;
                              }
                              unsigned int v70 = v159[0];
                              int v71 = *(_DWORD *)(v5 + 144);
                              uint64_t v72 = *(void *)(v5 + 136);
                              if (v71 == *(_DWORD *)(v5 + 148))
                              {
LABEL_164:
                                if (2 * v71 <= v71 + 1) {
                                  int v73 = v71 + 1;
                                }
                                else {
                                  int v73 = 2 * v71;
                                }
                                if (v73 <= 4) {
                                  int v73 = 4;
                                }
                                *(_DWORD *)(v5 + 14++*(void *)(result + 8) = v73;
                                operator new[]();
                              }
                            }
                            else
                            {
                              unsigned int v70 = *v22;
                              *((void *)this + 1) = v22 + 1;
                              int v71 = *(_DWORD *)(v5 + 144);
                              uint64_t v72 = *(void *)(v5 + 136);
                              if (v71 == *(_DWORD *)(v5 + 148)) {
                                goto LABEL_164;
                              }
                            }
                            *(_DWORD *)(v5 + 144) = v71 + 1;
                            *(_DWORD *)(v72 + 4 * v71) = v70;
                            int v74 = *(_DWORD *)(v5 + 148) - *(_DWORD *)(v5 + 144);
                            if (v74 >= 1)
                            {
                              int v75 = v74 + 1;
                              do
                              {
                                long long v78 = (unsigned char *)*((void *)this + 1);
                                unint64_t v79 = *((void *)this + 2);
                                if ((unint64_t)v78 >= v79 || *v78 != 72) {
                                  break;
                                }
                                *((void *)this + 1) = v78 + 1;
                                v159[0] = 0;
                                if ((unint64_t)(v78 + 1) >= v79 || (char)v78[1] < 0)
                                {
                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v159);
                                  if (!result) {
                                    return result;
                                  }
                                  unsigned int v76 = v159[0];
                                  uint64_t v72 = *v6;
                                }
                                else
                                {
                                  unsigned int v76 = v78[1];
                                  *((void *)this + 1) = v78 + 2;
                                }
                                uint64_t v77 = *(int *)(v5 + 144);
                                *(_DWORD *)(v5 + 144) = v77 + 1;
                                *(_DWORD *)(v72 + 4 * v77) = v76;
                                --v75;
                              }
                              while (v75 > 1);
                            }
LABEL_180:
                            long long v68 = (char *)*((void *)this + 1);
                            unint64_t v20 = *((void *)this + 2);
                            if ((unint64_t)v68 >= v20) {
                              goto LABEL_2;
                            }
                            int v80 = *v68;
                            if (v80 == 81)
                            {
                              while (1)
                              {
                                *((void *)this + 1) = v68 + 1;
LABEL_248:
                                *(void *)v159 = 0;
                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v159);
                                if ((result & 1) == 0) {
                                  return 0;
                                }
                                uint64_t v112 = *(void *)v159;
                                int v113 = *(_DWORD *)(v5 + 160);
                                uint64_t v114 = *(void *)(v5 + 152);
                                if (v113 == *(_DWORD *)(v5 + 164))
                                {
                                  if (2 * v113 <= v113 + 1) {
                                    int v115 = v113 + 1;
                                  }
                                  else {
                                    int v115 = 2 * v113;
                                  }
                                  if (v115 <= 4) {
                                    int v115 = 4;
                                  }
                                  *(_DWORD *)(v5 + 164) = v115;
                                  operator new[]();
                                }
                                int v116 = v113 + 1;
                                *(_DWORD *)(v5 + 160) = v113 + 1;
                                *(void *)(v114 + 8 * v113) = v112;
                                uint64_t v117 = *((void *)this + 1);
                                int v118 = *((_DWORD *)this + 4) - v117;
                                if (v118 >= 1)
                                {
                                  signed int v119 = *(_DWORD *)(v5 + 164) - v116;
                                  signed int v120 = v118 / 9u;
                                  if ((int)(v118 / 9u) >= v119) {
                                    signed int v120 = *(_DWORD *)(v5 + 164) - v116;
                                  }
                                  if (v120 >= 1)
                                  {
                                    uint64_t v121 = 0;
                                    int v122 = v113 + 2;
                                    uint64_t v123 = v114 + 8 * v116;
                                    uint64_t v124 = ((*((_DWORD *)this + 4) - v117)
                                          * (unsigned __int128)0x1C71C71C71C71C72uLL) >> 64;
                                    if (v124 >= v119) {
                                      LODWORD(v1++*(void *)(result + 24) = v119;
                                    }
                                    while (*(unsigned char *)v117 == 81)
                                    {
                                      uint64_t v125 = *(void *)(v117 + 1);
                                      *(_DWORD *)(v5 + 160) = v122 + v121;
                                      *(void *)(v123 + 8 * v121++) = v125;
                                      v117 += 9;
                                      if (v124 == v121) {
                                        goto LABEL_264;
                                      }
                                    }
                                    signed int v120 = v121;
                                    if (v121) {
LABEL_264:
                                    }
                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v120);
                                  }
                                }
LABEL_265:
                                long long v68 = (char *)*((void *)this + 1);
                                if ((unint64_t)v68 >= *((void *)this + 2)) {
                                  goto LABEL_2;
                                }
                                int v126 = *v68;
                                if (v126 != 81)
                                {
                                  if (v126 == 89)
                                  {
                                    while (1)
                                    {
                                      *((void *)this + 1) = v68 + 1;
LABEL_272:
                                      *(void *)v159 = 0;
                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, (unint64_t *)v159);
                                      if ((result & 1) == 0) {
                                        return 0;
                                      }
                                      uint64_t v127 = *(void *)v159;
                                      int v128 = *(_DWORD *)(v5 + 176);
                                      uint64_t v129 = *(void *)(v5 + 168);
                                      if (v128 == *(_DWORD *)(v5 + 180))
                                      {
                                        if (2 * v128 <= v128 + 1) {
                                          int v130 = v128 + 1;
                                        }
                                        else {
                                          int v130 = 2 * v128;
                                        }
                                        if (v130 <= 4) {
                                          int v130 = 4;
                                        }
                                        *(_DWORD *)(v5 + 180) = v130;
                                        operator new[]();
                                      }
                                      int v131 = v128 + 1;
                                      *(_DWORD *)(v5 + 176) = v128 + 1;
                                      *(void *)(v129 + 8 * v12++*(void *)(result + 8) = v127;
                                      uint64_t v132 = *((void *)this + 1);
                                      int v133 = *((_DWORD *)this + 4) - v132;
                                      if (v133 >= 1)
                                      {
                                        signed int v134 = *(_DWORD *)(v5 + 180) - v131;
                                        signed int v135 = v133 / 9u;
                                        if ((int)(v133 / 9u) >= v134) {
                                          signed int v135 = *(_DWORD *)(v5 + 180) - v131;
                                        }
                                        if (v135 >= 1)
                                        {
                                          uint64_t v136 = 0;
                                          int v137 = v128 + 2;
                                          uint64_t v138 = v129 + 8 * v131;
                                          uint64_t v139 = ((*((_DWORD *)this + 4) - v132)
                                                * (unsigned __int128)0x1C71C71C71C71C72uLL) >> 64;
                                          if (v139 >= v134) {
                                            LODWORD(v139) = v134;
                                          }
                                          while (*(unsigned char *)v132 == 89)
                                          {
                                            uint64_t v140 = *(void *)(v132 + 1);
                                            *(_DWORD *)(v5 + 176) = v137 + v136;
                                            *(void *)(v138 + 8 * v136++) = v140;
                                            v132 += 9;
                                            if (v139 == v136) {
                                              goto LABEL_288;
                                            }
                                          }
                                          signed int v135 = v136;
                                          if (v136) {
LABEL_288:
                                          }
                                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v135);
                                        }
                                      }
LABEL_289:
                                      long long v68 = (char *)*((void *)this + 1);
                                      int v23 = (char *)*((void *)this + 2);
                                      if (v68 >= v23) {
                                        break;
                                      }
                                      int v141 = *v68;
                                      if (v141 != 89)
                                      {
                                        if (v141 == 96)
                                        {
                                          do
                                          {
                                            BOOL v24 = v68 + 1;
                                            *((void *)this + 1) = v24;
LABEL_296:
                                            *(void *)v159 = 0;
                                            if (v24 >= v23 || *v24 < 0)
                                            {
                                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, (unint64_t *)v159);
                                              if (!result) {
                                                return result;
                                              }
                                              uint64_t v142 = *(void *)v159;
                                              int v143 = *(_DWORD *)(v5 + 192);
                                              uint64_t v144 = *(void *)(v5 + 184);
                                              if (v143 == *(_DWORD *)(v5 + 196))
                                              {
LABEL_302:
                                                if (2 * v143 <= v143 + 1) {
                                                  int v145 = v143 + 1;
                                                }
                                                else {
                                                  int v145 = 2 * v143;
                                                }
                                                if (v145 <= 4) {
                                                  int v145 = 4;
                                                }
                                                *(_DWORD *)(v5 + 196) = v145;
                                                operator new[]();
                                              }
                                            }
                                            else
                                            {
                                              uint64_t v142 = *v24;
                                              *((void *)this + 1) = v24 + 1;
                                              int v143 = *(_DWORD *)(v5 + 192);
                                              uint64_t v144 = *(void *)(v5 + 184);
                                              if (v143 == *(_DWORD *)(v5 + 196)) {
                                                goto LABEL_302;
                                              }
                                            }
                                            int v146 = v143 + 1;
                                            *(_DWORD *)(v5 + 192) = v143 + 1;
                                            *(void *)(v144 + 8 * v143) = v142;
                                            int v147 = *(_DWORD *)(v5 + 196);
                                            if (v147 - (v143 + 1) >= 1)
                                            {
                                              for (int i = v147 - v143; i > 1; --i)
                                              {
                                                v150 = (unsigned char *)*((void *)this + 1);
                                                unint64_t v151 = *((void *)this + 2);
                                                if ((unint64_t)v150 >= v151 || *v150 != 96) {
                                                  break;
                                                }
                                                *((void *)this + 1) = v150 + 1;
                                                *(void *)v159 = 0;
                                                if ((unint64_t)(v150 + 1) >= v151 || (char)v150[1] < 0)
                                                {
                                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, (unint64_t *)v159);
                                                  if (!result) {
                                                    return result;
                                                  }
                                                  uint64_t v149 = *(void *)v159;
                                                  uint64_t v144 = *(void *)(v5 + 184);
                                                  int v146 = *(_DWORD *)(v5 + 192);
                                                }
                                                else
                                                {
                                                  uint64_t v149 = v150[1];
                                                  *((void *)this + 1) = v150 + 2;
                                                }
                                                *(_DWORD *)(v5 + 192) = v146 + 1;
                                                *(void *)(v144 + 8 * v146++) = v149;
                                              }
                                            }
LABEL_318:
                                            long long v68 = (char *)*((void *)this + 1);
                                            int v23 = (char *)*((void *)this + 2);
                                          }
                                          while (v68 < v23 && *v68 == 96);
                                          if (v68 == v23
                                            && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
                                          {
                                            *((_DWORD *)this + ++*(void *)(result + 8) = 0;
                                            uint64_t result = 1;
                                            *((unsigned char *)this + 36) = 1;
                                            return result;
                                          }
                                        }
                                        goto LABEL_2;
                                      }
                                    }
                                  }
                                  goto LABEL_2;
                                }
                              }
                            }
                            if (v80 != 72) {
                              goto LABEL_2;
                            }
                          }
                        }
                        if (v69 != 64) {
                          goto LABEL_2;
                        }
                      }
                    }
                    goto LABEL_2;
                  }
                }
                goto LABEL_2;
              }
            }
          }
          continue;
        }
        return 0;
      case 4u:
        int v12 = v11 & 7;
        if (v12 == 1) {
          goto LABEL_185;
        }
        if (v12 != 2) {
          goto LABEL_48;
        }
        uint64_t result = sub_1000E9ECC(this, v153);
        if (!result) {
          return result;
        }
        goto LABEL_202;
      case 5u:
        int v12 = v11 & 7;
        if (v12 != 2) {
          goto LABEL_48;
        }
        int v16 = *(_DWORD *)(v5 + 92);
        int v17 = *(_DWORD *)(v5 + 88);
        if (v17 < v16) {
          goto LABEL_25;
        }
        goto LABEL_209;
      case 6u:
        int v12 = v11 & 7;
        if (v12 == 2)
        {
          uint64_t result = sub_1003269CC(this, v154);
          if (!result) {
            return result;
          }
          goto LABEL_240;
        }
        if ((v11 & 7) != 0) {
          goto LABEL_48;
        }
        int v19 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_217;
      case 7u:
        int v12 = v11 & 7;
        if (v12 == 1) {
          goto LABEL_243;
        }
        goto LABEL_48;
      case 8u:
        int v12 = v11 & 7;
        if (v12 == 2)
        {
          uint64_t result = sub_10032682C(this, v7);
          if (!result) {
            return result;
          }
          goto LABEL_154;
        }
        if ((v11 & 7) != 0) {
          goto LABEL_48;
        }
        int v21 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_132;
      case 9u:
        int v12 = v11 & 7;
        if (v12 == 2)
        {
          uint64_t result = sub_10032682C(this, v6);
          if (!result) {
            return result;
          }
          goto LABEL_180;
        }
        if ((v11 & 7) != 0) {
          goto LABEL_48;
        }
        int v22 = (char *)*((void *)this + 1);
        unint64_t v20 = *((void *)this + 2);
        goto LABEL_158;
      case 0xAu:
        int v12 = v11 & 7;
        if (v12 == 1) {
          goto LABEL_248;
        }
        if (v12 != 2) {
          goto LABEL_48;
        }
        uint64_t result = sub_1000E9ECC(this, v155);
        if (!result) {
          return result;
        }
        goto LABEL_265;
      case 0xBu:
        int v12 = v11 & 7;
        if (v12 == 1) {
          goto LABEL_272;
        }
        if (v12 != 2) {
          goto LABEL_48;
        }
        uint64_t result = sub_1000E9ECC(this, v156);
        if (!result) {
          return result;
        }
        goto LABEL_289;
      case 0xCu:
        int v12 = v11 & 7;
        if (v12 == 2)
        {
          uint64_t result = sub_100326B74(this, v157);
          if (!result) {
            return result;
          }
          goto LABEL_318;
        }
        if ((v11 & 7) != 0) {
          goto LABEL_48;
        }
        BOOL v24 = (char *)*((void *)this + 1);
        int v23 = (char *)*((void *)this + 2);
        goto LABEL_296;
      default:
        int v12 = v11 & 7;
        goto LABEL_48;
    }
  }
}

uint64_t sub_10032682C(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t *a2)
{
  unsigned int v13 = 0;
  uint64_t v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
    if (!result) {
      return result;
    }
    unsigned int v5 = v13;
  }
  else
  {
    unsigned int v5 = *v4;
    unsigned int v13 = v5;
    *((void *)this + 1) = v4 + 1;
  }
  int v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      unsigned int v14 = 0;
      int v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v14);
        if (!result) {
          return result;
        }
        unsigned int v9 = v14;
        int v10 = *((_DWORD *)a2 + 2);
        uint64_t v11 = *a2;
        if (v10 == *((_DWORD *)a2 + 3))
        {
LABEL_15:
          if (2 * v10 <= v10 + 1) {
            int v12 = v10 + 1;
          }
          else {
            int v12 = 2 * v10;
          }
          if (v12 <= 4) {
            int v12 = 4;
          }
          *((_DWORD *)a2 + 3) = v12;
          operator new[]();
        }
      }
      else
      {
        unsigned int v9 = *v8;
        *((void *)this + 1) = v8 + 1;
        int v10 = *((_DWORD *)a2 + 2);
        uint64_t v11 = *a2;
        if (v10 == *((_DWORD *)a2 + 3)) {
          goto LABEL_15;
        }
      }
      *((_DWORD *)a2 + 2) = v10 + 1;
      *(_DWORD *)(v11 + 4 * v10) = v9;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
  return 1;
}

uint64_t sub_1003269CC(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t *a2)
{
  unsigned int v15 = 0;
  uint64_t v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v15);
    if (!result) {
      return result;
    }
    unsigned int v5 = v15;
  }
  else
  {
    unsigned int v5 = *v4;
    unsigned int v15 = v5;
    *((void *)this + 1) = v4 + 1;
  }
  int v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      unsigned int v16 = 0;
      int v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || (int v9 = *v8, v9 < 0))
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v16);
        if (!result) {
          return result;
        }
        BOOL v10 = v16 != 0;
        int v11 = *((_DWORD *)a2 + 2);
        uint64_t v12 = *a2;
        if (v11 == *((_DWORD *)a2 + 3))
        {
LABEL_15:
          if (2 * v11 <= v11 + 1) {
            int v13 = v11 + 1;
          }
          else {
            int v13 = 2 * v11;
          }
          if (v13 <= 4) {
            int v14 = 4;
          }
          else {
            int v14 = v13;
          }
          *((_DWORD *)a2 + 3) = v14;
          operator new[]();
        }
      }
      else
      {
        *((void *)this + 1) = v8 + 1;
        BOOL v10 = v9 != 0;
        int v11 = *((_DWORD *)a2 + 2);
        uint64_t v12 = *a2;
        if (v11 == *((_DWORD *)a2 + 3)) {
          goto LABEL_15;
        }
      }
      *((_DWORD *)a2 + 2) = v11 + 1;
      *(unsigned char *)(v12 + v11) = v10;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
  return 1;
}

uint64_t sub_100326B74(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t *a2)
{
  unsigned int v13 = 0;
  uint64_t v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
    if (!result) {
      return result;
    }
    unsigned int v5 = v13;
  }
  else
  {
    unsigned int v5 = *v4;
    unsigned int v13 = v5;
    *((void *)this + 1) = v4 + 1;
  }
  int v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      unint64_t v14 = 0;
      int v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v14);
        if (!result) {
          return result;
        }
        unint64_t v9 = v14;
        int v10 = *((_DWORD *)a2 + 2);
        uint64_t v11 = *a2;
        if (v10 == *((_DWORD *)a2 + 3))
        {
LABEL_15:
          if (2 * v10 <= v10 + 1) {
            int v12 = v10 + 1;
          }
          else {
            int v12 = 2 * v10;
          }
          if (v12 <= 4) {
            int v12 = 4;
          }
          *((_DWORD *)a2 + 3) = v12;
          operator new[]();
        }
      }
      else
      {
        unint64_t v9 = *v8;
        *((void *)this + 1) = v8 + 1;
        int v10 = *((_DWORD *)a2 + 2);
        uint64_t v11 = *a2;
        if (v10 == *((_DWORD *)a2 + 3)) {
          goto LABEL_15;
        }
      }
      *((_DWORD *)a2 + 2) = v10 + 1;
      *(void *)(v11 + 8 * v10) = v9;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
  return 1;
}

uint64_t sub_100326D14(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(*(void *)(v5 + 16) + 8 * v6++), a3);
    while (v6 < *(int *)(v5 + 24));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(*(void *)(v5 + 32) + 4 * v7++), (int)a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  if (*(int *)(v5 + 56) >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(*(void *)(v5 + 48) + 4 * v8++), (int)a2, a4);
    while (v8 < *(int *)(v5 + 56));
  }
  if (*(int *)(v5 + 72) >= 1)
  {
    uint64_t v9 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(*(void *)(v5 + 64) + 8 * v9++), a3);
    while (v9 < *(int *)(v5 + 72));
  }
  if (*(int *)(v5 + 88) >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      ++v10;
    }
    while (v10 < *(int *)(v5 + 88));
  }
  if (*(int *)(v5 + 112) >= 1)
  {
    uint64_t v11 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(*(void *)(v5 + 104) + v11++), (BOOL)a2, a4);
    while (v11 < *(int *)(v5 + 112));
  }
  if ((*(unsigned char *)(v5 + 213) & 8) != 0) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (int)a2, *(double *)(v5 + 200), a3);
  }
  if (*(int *)(v5 + 128) >= 1)
  {
    uint64_t v12 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(_DWORD *)(*(void *)(v5 + 120) + 4 * v12++), (int)a2, a4);
    while (v12 < *(int *)(v5 + 128));
  }
  if (*(int *)(v5 + 144) >= 1)
  {
    uint64_t v13 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(*(void *)(v5 + 136) + 4 * v13++), (int)a2, a4);
    while (v13 < *(int *)(v5 + 144));
  }
  if (*(int *)(v5 + 160) >= 1)
  {
    uint64_t v14 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (int)a2, *(double *)(*(void *)(v5 + 152) + 8 * v14++), a3);
    while (v14 < *(int *)(v5 + 160));
  }
  if (*(int *)(v5 + 176) >= 1)
  {
    uint64_t v15 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (int)a2, *(double *)(*(void *)(v5 + 168) + 8 * v15++), a3);
    while (v15 < *(int *)(v5 + 176));
  }
  if (*(int *)(v5 + 192) >= 1)
  {
    uint64_t v16 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(void *)(*(void *)(v5 + 184) + 8 * v16++), (uint64_t)a2, a4);
    while (v16 < *(int *)(v5 + 192));
  }
  int v19 = *(void **)(v5 + 8);
  unint64_t v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v17 = v19;
  if (v19 && *v17 != v17[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v18, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100326FD0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = *(void *)(*((void *)this + 2) + 8 * v6);
      *(unsigned char *)a2 = 9;
      *(void *)((char *)a2 + 1) = v7;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
      ++v6;
    }
    while (v6 < *((int *)this + 6));
  }
  if (*((int *)this + 10) >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      while (1)
      {
        while (1)
        {
          uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 4) + 4 * v8);
          *(unsigned char *)a2 = 16;
          uint64_t v10 = (char *)a2 + 1;
          if ((v9 & 0x80000000) == 0) {
            break;
          }
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v9, (unint64_t)v10, a3);
          if (++v8 >= *((int *)this + 10)) {
            goto LABEL_12;
          }
        }
        if (v9 > 0x7F) {
          break;
        }
        *((unsigned char *)a2 + 1) = (_BYTE)v9;
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        if (++v8 >= *((int *)this + 10)) {
          goto LABEL_12;
        }
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, v10, a3);
      ++v8;
    }
    while (v8 < *((int *)this + 10));
  }
LABEL_12:
  if (*((int *)this + 14) >= 1)
  {
    uint64_t v11 = 0;
    do
    {
      while (1)
      {
        while (1)
        {
          uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 6) + 4 * v11);
          *(unsigned char *)a2 = 24;
          uint64_t v13 = (char *)a2 + 1;
          if ((v12 & 0x80000000) == 0) {
            break;
          }
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v12, (unint64_t)v13, a3);
          if (++v11 >= *((int *)this + 14)) {
            goto LABEL_20;
          }
        }
        if (v12 > 0x7F) {
          break;
        }
        *((unsigned char *)a2 + 1) = (_BYTE)v12;
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        if (++v11 >= *((int *)this + 14)) {
          goto LABEL_20;
        }
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v13, a3);
      ++v11;
    }
    while (v11 < *((int *)this + 14));
  }
LABEL_20:
  if (*((int *)this + 18) >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      uint64_t v15 = *(void *)(*((void *)this + 8) + 8 * v14);
      *(unsigned char *)a2 = 33;
      *(void *)((char *)a2 + 1) = v15;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
      ++v14;
    }
    while (v14 < *((int *)this + 18));
  }
  if (*((int *)this + 22) >= 1)
  {
    for (uint64_t i = 0; i < *((int *)this + 22); ++i)
    {
      uint64_t v21 = *(void *)(*((void *)this + 10) + 8 * i);
      *(unsigned char *)a2 = 42;
      if (*(char *)(v21 + 23) < 0)
      {
        int v22 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v21 + 8);
        if (v22 <= 0x7F)
        {
LABEL_37:
          *((unsigned char *)a2 + 1) = (_BYTE)v22;
          int v17 = a2 + 2;
          goto LABEL_26;
        }
      }
      else
      {
        int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v21 + 23);
        if (*(unsigned __int8 *)(v21 + 23) <= 0x7Fu) {
          goto LABEL_37;
        }
      }
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, (int)a2 + 1, a3);
LABEL_26:
      int v18 = *(char *)(v21 + 23);
      if (v18 >= 0) {
        int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21;
      }
      else {
        int v19 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v21;
      }
      if (v18 >= 0) {
        unint64_t v20 = (const void *)*(unsigned __int8 *)(v21 + 23);
      }
      else {
        unint64_t v20 = (const void *)*(unsigned int *)(v21 + 8);
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v19, v20, v17, a4);
    }
  }
  if (*((int *)this + 28) >= 1)
  {
    uint64_t v23 = 0;
    do
    {
      char v24 = *(unsigned char *)(*((void *)this + 13) + v23);
      *(unsigned char *)a2 = 48;
      *((unsigned char *)a2 + 1) = v24;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      ++v23;
    }
    while (v23 < *((int *)this + 28));
  }
  if ((*((unsigned char *)this + 213) & 8) != 0)
  {
    uint64_t v25 = *((void *)this + 25);
    *(unsigned char *)a2 = 57;
    *(void *)((char *)a2 + 1) = v25;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
  }
  if (*((int *)this + 32) >= 1)
  {
    uint64_t v26 = 0;
    do
    {
      while (1)
      {
        while (1)
        {
          uint64_t v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 15)
                                                                                        + 4 * v26);
          *(unsigned char *)a2 = 64;
          int v28 = (char *)a2 + 1;
          if ((v27 & 0x80000000) == 0) {
            break;
          }
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v27, (unint64_t)v28, a3);
          if (++v26 >= *((int *)this + 32)) {
            goto LABEL_51;
          }
        }
        if (v27 > 0x7F) {
          break;
        }
        *((unsigned char *)a2 + 1) = (_BYTE)v27;
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        if (++v26 >= *((int *)this + 32)) {
          goto LABEL_51;
        }
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, v28, a3);
      ++v26;
    }
    while (v26 < *((int *)this + 32));
  }
LABEL_51:
  if (*((int *)this + 36) >= 1)
  {
    uint64_t v29 = 0;
    do
    {
      while (1)
      {
        while (1)
        {
          uint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 17)
                                                                                        + 4 * v29);
          *(unsigned char *)a2 = 72;
          int v31 = (char *)a2 + 1;
          if ((v30 & 0x80000000) == 0) {
            break;
          }
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v30, (unint64_t)v31, a3);
          if (++v29 >= *((int *)this + 36)) {
            goto LABEL_59;
          }
        }
        if (v30 > 0x7F) {
          break;
        }
        *((unsigned char *)a2 + 1) = (_BYTE)v30;
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        if (++v29 >= *((int *)this + 36)) {
          goto LABEL_59;
        }
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v30, v31, a3);
      ++v29;
    }
    while (v29 < *((int *)this + 36));
  }
LABEL_59:
  if (*((int *)this + 40) >= 1)
  {
    uint64_t v32 = 0;
    do
    {
      uint64_t v33 = *(void *)(*((void *)this + 19) + 8 * v32);
      *(unsigned char *)a2 = 81;
      *(void *)((char *)a2 + 1) = v33;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
      ++v32;
    }
    while (v32 < *((int *)this + 40));
  }
  if (*((int *)this + 44) >= 1)
  {
    uint64_t v34 = 0;
    do
    {
      uint64_t v35 = *(void *)(*((void *)this + 21) + 8 * v34);
      *(unsigned char *)a2 = 89;
      *(void *)((char *)a2 + 1) = v35;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
      ++v34;
    }
    while (v34 < *((int *)this + 44));
  }
  if (*((int *)this + 48) >= 1)
  {
    uint64_t v36 = 0;
    do
    {
      uint64_t v37 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((void *)this + 23) + 8 * v36);
      *(unsigned char *)a2 = 96;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v37, (unint64_t)a2 + 1, a3);
      ++v36;
    }
    while (v36 < *((int *)this + 48));
  }
  int v40 = (void *)*((void *)this + 1);
  int v39 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v38 = v40;
  if (!v40 || *v38 == v38[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v39, a2, a3);
}

uint64_t sub_100327558(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 213) << 28;
  int v4 = *(_DWORD *)(a1 + 24);
  int v5 = *(_DWORD *)(a1 + 40);
  if (v5 < 1)
  {
    int v7 = 0;
  }
  else
  {
    uint64_t v6 = 0;
    int v7 = 0;
    do
    {
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 32)
                                                                                            + 4 * v6);
      if ((v9 & 0x80000000) != 0)
      {
        int v8 = 10;
      }
      else if (v9 >= 0x80)
      {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
        int v5 = *(_DWORD *)(a1 + 40);
      }
      else
      {
        int v8 = 1;
      }
      v7 += v8;
      ++v6;
    }
    while (v6 < v5);
  }
  int v10 = (v3 >> 31) & 9;
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11 < 1)
  {
    int v13 = 0;
  }
  else
  {
    uint64_t v12 = 0;
    int v13 = 0;
    do
    {
      uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 48)
                                                                                             + 4 * v12);
      if ((v15 & 0x80000000) != 0)
      {
        int v14 = 10;
      }
      else if (v15 >= 0x80)
      {
        int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
        int v11 = *(_DWORD *)(a1 + 56);
      }
      else
      {
        int v14 = 1;
      }
      v13 += v14;
      ++v12;
    }
    while (v12 < v11);
  }
  int v16 = *(_DWORD *)(a1 + 88);
  int v17 = v7 + v10 + v11 + v5 + v13 + v16 + 9 * (*(_DWORD *)(a1 + 72) + v4);
  if (v16 >= 1)
  {
    for (uint64_t i = 0; i < v16; ++i)
    {
      uint64_t v23 = *(void *)(*(void *)(a1 + 80) + 8 * i);
      int v20 = *(unsigned __int8 *)(v23 + 23);
      char v22 = v20;
      uint64_t v21 = *(void *)(v23 + 8);
      if ((v20 & 0x80u) == 0) {
        unint64_t v24 = *(unsigned __int8 *)(v23 + 23);
      }
      else {
        unint64_t v24 = v21;
      }
      if (v24 >= 0x80)
      {
        int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24, a2);
        int v20 = *(unsigned __int8 *)(v23 + 23);
        uint64_t v21 = *(void *)(v23 + 8);
        int v16 = *(_DWORD *)(a1 + 88);
        char v22 = *(unsigned char *)(v23 + 23);
      }
      else
      {
        int v19 = 1;
      }
      if (v22 < 0) {
        int v20 = v21;
      }
      v17 += v19 + v20;
    }
  }
  int v25 = *(_DWORD *)(a1 + 112);
  int v26 = *(_DWORD *)(a1 + 128);
  if (v26 < 1)
  {
    int v28 = 0;
  }
  else
  {
    uint64_t v27 = 0;
    int v28 = 0;
    do
    {
      uint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 120)
                                                                                             + 4 * v27);
      if ((v30 & 0x80000000) != 0)
      {
        int v29 = 10;
      }
      else if (v30 >= 0x80)
      {
        int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
        int v26 = *(_DWORD *)(a1 + 128);
      }
      else
      {
        int v29 = 1;
      }
      v28 += v29;
      ++v27;
    }
    while (v27 < v26);
  }
  int v31 = *(_DWORD *)(a1 + 144);
  if (v31 < 1)
  {
    int v33 = 0;
  }
  else
  {
    uint64_t v32 = 0;
    int v33 = 0;
    do
    {
      uint64_t v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 136)
                                                                                             + 4 * v32);
      if ((v35 & 0x80000000) != 0)
      {
        int v34 = 10;
      }
      else if (v35 >= 0x80)
      {
        int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35, a2);
        int v31 = *(_DWORD *)(a1 + 144);
      }
      else
      {
        int v34 = 1;
      }
      v33 += v34;
      ++v32;
    }
    while (v32 < v31);
  }
  int v36 = 2 * v25;
  int v37 = *(_DWORD *)(a1 + 160);
  int v38 = *(_DWORD *)(a1 + 176);
  LODWORD(v39) = *(_DWORD *)(a1 + 192);
  if ((int)v39 < 1)
  {
    int v41 = 0;
  }
  else
  {
    int v45 = 2 * v25;
    uint64_t v40 = 0;
    int v41 = 0;
    do
    {
      v41 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*(void *)(a1 + 184) + 8 * v40++), (unint64_t)a2);
      uint64_t v39 = *(int *)(a1 + 192);
    }
    while (v40 < v39);
    int v36 = v45;
  }
  uint64_t v42 = (v36 + v17 + v28 + v26 + v33 + v31 + v39 + 9 * (v38 + v37) + v41);
  int v43 = *(void **)(a1 + 8);
  if (v43 && *v43 != v43[1]) {
    uint64_t v42 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v42;
  }
  *(_DWORD *)(a1 + 20++*(void *)(result + 8) = v42;
  return v42;
}

uint64_t sub_100327850(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100324878((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100327930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100327944(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100327958(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1003279E4()
{
  return 1;
}

uint64_t sub_1003279EC()
{
  uint64_t v0 = qword_10047E208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100321450;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E190;
}

void sub_100327A7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100327A90(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
    sub_10032D21C((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), a2 + 24);
    if ((*(unsigned char *)(a2 + 52) & 1) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    sub_10032D21C((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), a2 + 24);
    if ((*(unsigned char *)(a2 + 52) & 1) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  *(_DWORD *)(a1 + 52) |= 1u;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    operator new();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_100492A08 + 16);
  }
  sub_100064680(v4, v5);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100327BD8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100327C00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100327C14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100327C28(uint64_t a1)
{
  *(void *)a1 = off_1004673E0;
  if (qword_100492A08 != a1)
  {
    uint64_t v2 = *(void *)(a1 + 16);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  int v3 = *(_DWORD *)(a1 + 36);
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i < v3; ++i)
    {
      uint64_t v5 = *(void *)(*(void *)(a1 + 24) + 8 * i);
      if (v5)
      {
        (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
        int v3 = *(_DWORD *)(a1 + 36);
      }
    }
  }
  if (*(void *)(a1 + 24)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100327D34(uint64_t a1)
{
  sub_100327C28(a1);

  operator delete();
}

uint64_t sub_100327D6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 4++*(void *)(result + 8) = a2;
  return result;
}

void sub_100327D74()
{
}

void sub_100327DE0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100327E08(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 52))
  {
    this = *(void *)(this + 16);
    if (this)
    {
      char v2 = *(unsigned char *)(this + 32);
      if (!v2 {
        || (*(_DWORD *)(this + ++*(void *)(result + 24) = 1, (v2 & 2) == 0)
      }
        || (uint64_t v3 = *(void *)(this + 16),
            (_UNKNOWN *)v3 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
      {
LABEL_8:
        uint64_t v4 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + ++*(void *)(result + 24) = 0;
        if (!v4) {
          goto LABEL_10;
        }
        goto LABEL_9;
      }
      if ((*(char *)(v3 + 23) & 0x80000000) == 0)
      {
        *(unsigned char *)uint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
        goto LABEL_8;
      }
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + ++*(void *)(result + 8) = 0;
      uint64_t v9 = *(void *)(this + 8);
      this += 8;
      *(_DWORD *)(this + ++*(void *)(result + 24) = 0;
      if (v9) {
LABEL_9:
      }
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
    }
  }
LABEL_10:
  if (*(int *)(v1 + 32) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(v1 + 24) + 8 * v5);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 32))(v6);
      ++v5;
    }
    while (v5 < *(int *)(v1 + 32));
  }
  uint64_t v8 = *(void *)(v1 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v7 + 6) = 0;
  *((_DWORD *)v7 + 11) = 0;
  if (v8)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v7);
  }
  return this;
}

uint64_t sub_100327F18(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v8 = (char *)*((void *)this + 1);
      if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
        *((_DWORD *)this + ++*(void *)(result + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v8;
        *((_DWORD *)this + ++*(void *)(result + 8) = TagFallback;
        *((void *)this + 1) = v8 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v10 = TagFallback & 7;
      if (v10 != 2) {
        goto LABEL_19;
      }
      *(_DWORD *)(a1 + 52) |= 1u;
      uint64_t v15 = *(void *)(a1 + 16);
      if (!v15) {
        operator new();
      }
      unsigned int v36 = 0;
      int v16 = (char *)*((void *)this + 1);
      if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36))return 0; {
      }
        }
      else
      {
        unsigned int v36 = *v16;
        *((void *)this + 1) = v16 + 1;
      }
      int v17 = *((_DWORD *)this + 14);
      int v18 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v17 + 1;
      if (v17 >= v18) {
        return 0;
      }
      int v19 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v36);
      if (!sub_10005D58C(v15, this, v20, v21) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v19);
      int v22 = *((_DWORD *)this + 14);
      BOOL v23 = __OFSUB__(v22, 1);
      int v24 = v22 - 1;
      if (v24 < 0 == v23) {
        *((_DWORD *)this + 14) = v24;
      }
      int v25 = (unsigned char *)*((void *)this + 1);
      if ((unint64_t)v25 < *((void *)this + 2) && *v25 == 18)
      {
        do
        {
          *((void *)this + 1) = v25 + 1;
          int v11 = *(_DWORD *)(a1 + 36);
          uint64_t v12 = *(int *)(a1 + 32);
          if ((int)v12 >= v11) {
            goto LABEL_31;
          }
LABEL_11:
          uint64_t v13 = *(void *)(a1 + 24);
          *(_DWORD *)(a1 + 32) = v12 + 1;
          uint64_t v14 = *(void *)(v13 + 8 * v12);
          unsigned int v37 = 0;
          int v26 = (char *)*((void *)this + 1);
          if ((unint64_t)v26 >= *((void *)this + 2) || *v26 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0; {
          }
            }
          else
          {
            unsigned int v37 = *v26;
            *((void *)this + 1) = v26 + 1;
          }
          int v27 = *((_DWORD *)this + 14);
          int v28 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v27 + 1;
          if (v27 >= v28) {
            return 0;
          }
          int v29 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
          if (!sub_100325490(v14, this, v30, v31) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v29);
          int v32 = *((_DWORD *)this + 14);
          BOOL v23 = __OFSUB__(v32, 1);
          int v33 = v32 - 1;
          if (v33 < 0 == v23) {
            *((_DWORD *)this + 14) = v33;
          }
          int v25 = (unsigned char *)*((void *)this + 1);
          int v34 = (unsigned char *)*((void *)this + 2);
        }
        while (v25 < v34 && *v25 == 18);
        if (v25 == v34 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + ++*(void *)(result + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v10 = TagFallback & 7;
      if (v10 == 2)
      {
        int v11 = *(_DWORD *)(a1 + 36);
        uint64_t v12 = *(int *)(a1 + 32);
        if ((int)v12 < v11) {
          goto LABEL_11;
        }
LABEL_31:
        if (v11 == *(_DWORD *)(a1 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v11 + 1);
          int v11 = *(_DWORD *)(a1 + 36);
        }
        *(_DWORD *)(a1 + 36) = v11 + 1;
        operator new();
      }
    }
    else
    {
      int v10 = TagFallback & 7;
    }
LABEL_19:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
  }
    }
}

void sub_1003282DC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100328304()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10032832C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 52))
  {
    uint64_t v6 = *(void *)(result + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_100492A08 + 16);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  int v10 = *(void **)(v5 + 8);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_1003283F0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 52))
  {
    uint64_t v6 = (unsigned int *)*((void *)this + 2);
    if (v6)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v7 = a2 + 1;
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[7];
      if (v8 <= 0x7F)
      {
LABEL_4:
        *((unsigned char *)v4 + 1) = (_BYTE)v8;
        uint64_t v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_7:
        uint64_t v4 = sub_100322A98((wireless_diagnostics::google::protobuf::internal::WireFormat *)v6, v9, a3, a4);
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v6 = *(unsigned int **)(qword_100492A08 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v7 = a2 + 1;
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[7];
      if (v8 <= 0x7F) {
        goto LABEL_4;
      }
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    goto LABEL_7;
  }
LABEL_8:
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      uint64_t v12 = *(unsigned int **)(*((void *)this + 3) + 8 * v10);
      *(unsigned char *)uint64_t v4 = 18;
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12[52];
      if (v13 > 0x7F)
      {
        int v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, (int)v4 + 1, a3);
      }
      else
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v13;
        int v11 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      uint64_t v4 = sub_100326FD0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v12, v11, a3, a4);
      ++v10;
    }
    while (v10 < *((int *)this + 8));
  }
  int v16 = (void *)*((void *)this + 1);
  uint64_t v15 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v14 = v16;
  if (!v16 || *v14 == v14[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v15, v4, a3);
}

uint64_t sub_10032852C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 52))
  {
    uint64_t v5 = *(void *)(a1 + 16);
    if (v5)
    {
      uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100322BD0(v5, a2);
      if (v6 < 0x80)
      {
LABEL_6:
        int v7 = 1;
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100322BD0(*(void *)(qword_100492A08 + 16), a2);
      if (v6 < 0x80) {
        goto LABEL_6;
      }
    }
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
LABEL_9:
    int v8 = *(_DWORD *)(a1 + 32);
    uint64_t v4 = (v8 + v6 + v7 + 1);
    if (v8 < 1) {
      goto LABEL_15;
    }
    goto LABEL_10;
  }
  int v3 = *(_DWORD *)(a1 + 32);
  uint64_t v4 = v3;
  if (v3 < 1) {
    goto LABEL_15;
  }
LABEL_10:
  uint64_t v9 = 0;
  do
  {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100327558(*(void *)(*(void *)(a1 + 24) + 8 * v9), a2);
    int v12 = (int)v11;
    if (v11 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    }
    else {
      int v10 = 1;
    }
    uint64_t v4 = (v12 + v4 + v10);
    ++v9;
  }
  while (v9 < *(int *)(a1 + 32));
LABEL_15:
  uint64_t v13 = *(void **)(a1 + 8);
  if (v13 && *v13 != v13[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 4++*(void *)(result + 8) = v4;
  return v4;
}

uint64_t sub_100328640(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100327A90((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100328720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100328734(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100328748(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1003287D4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 52) & 1) == 0) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2) {
    return (*(uint64_t (**)(void))(*(void *)v2 + 40))();
  }
  else {
    return (*(uint64_t (**)(void))(**(void **)(qword_100492A08 + 16) + 40))();
  }
}

uint64_t sub_100328840()
{
  uint64_t v0 = qword_10047E208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100321450;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E1A0;
}

void sub_1003288D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003288E4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
  }
  uint64_t v4 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      while (1)
      {
        uint64_t v9 = *(const std::string **)(*(void *)(a2 + 16) + 8 * v5);
        int v10 = *(_DWORD *)(a1 + 28);
        uint64_t v11 = *(int *)(a1 + 24);
        if ((int)v11 >= v10) {
          break;
        }
        uint64_t v12 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + ++*(void *)(result + 24) = v11 + 1;
        uint64_t v4 = std::string::operator=(*(std::string **)(v12 + 8 * v11), v9);
        if (++v5 >= *(int *)(a2 + 24)) {
          goto LABEL_11;
        }
      }
      if (v10 == *(_DWORD *)(a1 + 32))
      {
        uint64_t v4 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v10 + 1);
        int v10 = *(_DWORD *)(a1 + 28);
      }
      *(_DWORD *)(a1 + 2++*(void *)(result + 8) = v10 + 1;
      uint64_t v6 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)v4);
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v8 = *(int *)(a1 + 24);
      *(_DWORD *)(a1 + ++*(void *)(result + 24) = v8 + 1;
      *(void *)(v7 + 8 * v++*(void *)(result + 8) = v6;
      uint64_t v4 = std::string::operator=(v6, v9);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
LABEL_11:
  int v13 = *(_DWORD *)(a2 + 48);
  if (v13)
  {
    int v14 = *(_DWORD *)(a1 + 48);
    int v15 = *(_DWORD *)(a1 + 52);
    int v16 = v14 + v13;
    if (v15 < v16)
    {
      int v17 = 2 * v15;
      if (2 * v15 <= v16) {
        int v17 = v16;
      }
      if (v17 <= 4) {
        int v17 = 4;
      }
      *(_DWORD *)(a1 + 52) = v17;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 40) + 8 * v14), *(const void **)(a2 + 40), 8 * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }
  int v18 = *(_DWORD *)(a2 + 64);
  if (v18)
  {
    int v19 = *(_DWORD *)(a1 + 64);
    int v20 = *(_DWORD *)(a1 + 68);
    int v21 = v19 + v18;
    if (v20 < v21)
    {
      int v22 = 2 * v20;
      if (2 * v20 <= v21) {
        int v22 = v21;
      }
      if (v22 <= 4) {
        int v22 = 4;
      }
      *(_DWORD *)(a1 + 6++*(void *)(result + 8) = v22;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 56) + 8 * v19), *(const void **)(a2 + 56), 8 * *(int *)(a2 + 64));
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100328BA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100328BBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100328BD0(uint64_t a1)
{
  *(void *)a1 = off_100467490;
  if (*(void *)(a1 + 56)) {
    operator delete[]();
  }
  if (*(void *)(a1 + 40)) {
    operator delete[]();
  }
  if (*(int *)(a1 + 28) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete();
      ++v2;
    }
    while (v2 < *(int *)(a1 + 28));
  }
  if (*(void *)(a1 + 16)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100328CB0(uint64_t a1)
{
  sub_100328BD0(a1);

  operator delete();
}

uint64_t sub_100328CE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 72) = a2;
  return result;
}

void sub_100328CF0()
{
}

void sub_100328D64()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100328D8C(uint64_t a1)
{
  if (*(int *)(a1 + 24) >= 1)
  {
    uint64_t v1 = 0;
    do
    {
      while (1)
      {
        uint64_t v2 = *(void *)(*(void *)(a1 + 16) + 8 * v1);
        if (*(char *)(v2 + 23) < 0) {
          break;
        }
        *(unsigned char *)uint64_t v2 = 0;
        *(unsigned char *)(v2 + 23) = 0;
        if (++v1 >= *(int *)(a1 + 24)) {
          goto LABEL_6;
        }
      }
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + ++*(void *)(result + 8) = 0;
      ++v1;
    }
    while (v1 < *(int *)(a1 + 24));
  }
LABEL_6:
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 10) = 0;
  *((_DWORD *)result + 14) = 0;
  *((_DWORD *)result + 17) = 0;
  if (v4) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100328E04(uint64_t result, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5 = result;
  uint64_t v6 = (uint64_t *)(result + 56);
  uint64_t v7 = (uint64_t *)(result + 40);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 16);
  unsigned int v9 = result + 8;
  while (1)
  {
    while (1)
    {
      while (1)
      {
LABEL_2:
        int v10 = (char *)*((void *)this + 1);
        if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
          uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)result;
          *((_DWORD *)this + ++*(void *)(result + 8) = result;
          if (!result) {
            return 1;
          }
        }
        else
        {
          uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v10;
          *((_DWORD *)this + ++*(void *)(result + 8) = v11;
          *((void *)this + 1) = v10 + 1;
          if (!v11) {
            return 1;
          }
        }
        unsigned int v12 = v11 >> 3;
        if (v11 >> 3 != 1) {
          break;
        }
        int v13 = v11 & 7;
        if (v13 != 2) {
          goto LABEL_30;
        }
        int v14 = *(_DWORD *)(v5 + 28);
        int v15 = *(_DWORD *)(v5 + 24);
        if (v15 < v14) {
          goto LABEL_16;
        }
        while (1)
        {
          if (v14 == *(_DWORD *)(v5 + 32))
          {
            uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v14 + 1);
            int v14 = *(_DWORD *)(v5 + 28);
          }
          *(_DWORD *)(v5 + 2++*(void *)(result + 8) = v14 + 1;
          uint64_t v16 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)result);
          uint64_t v17 = *(void *)(v5 + 16);
          uint64_t v18 = *(int *)(v5 + 24);
          *(_DWORD *)(v5 + ++*(void *)(result + 24) = v18 + 1;
          *(void *)(v17 + 8 * v1++*(void *)(result + 8) = v16;
          uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
          if (!result) {
            return result;
          }
LABEL_21:
          int v19 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v19 >= *((void *)this + 2)) {
            break;
          }
          int v20 = *v19;
          if (v20 != 10)
          {
            if (v20 != 17) {
              goto LABEL_2;
            }
            goto LABEL_34;
          }
          *((void *)this + 1) = v19 + 1;
          int v14 = *(_DWORD *)(v5 + 28);
          int v15 = *(_DWORD *)(v5 + 24);
          if (v15 < v14)
          {
LABEL_16:
            *(_DWORD *)(v5 + ++*(void *)(result + 24) = v15 + 1;
            uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
            if (!result) {
              return result;
            }
            goto LABEL_21;
          }
        }
      }
      if (v12 != 2) {
        break;
      }
      int v13 = v11 & 7;
      if (v13 == 1)
      {
        while (1)
        {
          unint64_t v51 = 0;
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v51);
          if ((result & 1) == 0) {
            return 0;
          }
          unint64_t v21 = v51;
          int v22 = *(_DWORD *)(v5 + 48);
          uint64_t v23 = *(void *)(v5 + 40);
          if (v22 == *(_DWORD *)(v5 + 52))
          {
            if (2 * v22 <= v22 + 1) {
              int v24 = v22 + 1;
            }
            else {
              int v24 = 2 * v22;
            }
            if (v24 <= 4) {
              int v24 = 4;
            }
            *(_DWORD *)(v5 + 52) = v24;
            operator new[]();
          }
          int v25 = v22 + 1;
          *(_DWORD *)(v5 + 4++*(void *)(result + 8) = v22 + 1;
          *(void *)(v23 + 8 * v22) = v21;
          uint64_t v26 = *((void *)this + 1);
          int v27 = *((_DWORD *)this + 4) - v26;
          if (v27 >= 1)
          {
            signed int v28 = *(_DWORD *)(v5 + 52) - v25;
            signed int v29 = v27 / 9u;
            if ((int)(v27 / 9u) >= v28) {
              signed int v29 = *(_DWORD *)(v5 + 52) - v25;
            }
            if (v29 >= 1)
            {
              uint64_t v30 = 0;
              int v31 = v22 + 2;
              uint64_t v32 = v23 + 8 * v25;
              uint64_t v33 = ((*((_DWORD *)this + 4) - v26) * (unsigned __int128)0x1C71C71C71C71C72uLL) >> 64;
              if (v33 >= v28) {
                LODWORD(v33) = v28;
              }
              while (*(unsigned char *)v26 == 17)
              {
                uint64_t v34 = *(void *)(v26 + 1);
                *(_DWORD *)(v5 + 4++*(void *)(result + 8) = v31 + v30;
                *(void *)(v32 + 8 * v30++) = v34;
                v26 += 9;
                if (v33 == v30) {
                  goto LABEL_51;
                }
              }
              signed int v29 = v30;
              if (v30) {
LABEL_51:
              }
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v29);
            }
          }
LABEL_52:
          int v19 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v19 >= *((void *)this + 2)) {
            break;
          }
          int v35 = *v19;
          if (v35 != 17)
          {
            if (v35 == 25) {
              goto LABEL_58;
            }
            goto LABEL_2;
          }
LABEL_34:
          *((void *)this + 1) = v19 + 1;
        }
      }
      else
      {
        if (v13 == 2)
        {
          uint64_t result = sub_1000E9ECC(this, v7);
          if (!result) {
            return result;
          }
          goto LABEL_52;
        }
LABEL_30:
        if (v13 == 4) {
          return 1;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, v11, v9, a4);
        if ((result & 1) == 0) {
          return 0;
        }
      }
    }
    if (v12 != 3)
    {
      int v13 = v11 & 7;
      goto LABEL_30;
    }
    int v13 = v11 & 7;
    if (v13 != 1) {
      break;
    }
    while (1)
    {
      unint64_t v51 = 0;
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v51);
      if ((result & 1) == 0) {
        return 0;
      }
      unint64_t v36 = v51;
      int v37 = *(_DWORD *)(v5 + 64);
      uint64_t v38 = *(void *)(v5 + 56);
      if (v37 == *(_DWORD *)(v5 + 68))
      {
        if (2 * v37 <= v37 + 1) {
          int v39 = v37 + 1;
        }
        else {
          int v39 = 2 * v37;
        }
        if (v39 <= 4) {
          int v39 = 4;
        }
        *(_DWORD *)(v5 + 6++*(void *)(result + 8) = v39;
        operator new[]();
      }
      int v40 = v37 + 1;
      *(_DWORD *)(v5 + 64) = v37 + 1;
      *(void *)(v38 + 8 * v37) = v36;
      uint64_t v41 = *((void *)this + 1);
      int v42 = *((_DWORD *)this + 4) - v41;
      if (v42 >= 1)
      {
        signed int v43 = *(_DWORD *)(v5 + 68) - v40;
        signed int v44 = v42 / 9u;
        if ((int)(v42 / 9u) >= v43) {
          signed int v44 = *(_DWORD *)(v5 + 68) - v40;
        }
        if (v44 >= 1)
        {
          uint64_t v45 = 0;
          int v46 = v37 + 2;
          uint64_t v47 = v38 + 8 * v40;
          uint64_t v48 = ((*((_DWORD *)this + 4) - v41) * (unsigned __int128)0x1C71C71C71C71C72uLL) >> 64;
          if (v48 >= v43) {
            LODWORD(v4++*(void *)(result + 8) = v43;
          }
          while (*(unsigned char *)v41 == 25)
          {
            uint64_t v49 = *(void *)(v41 + 1);
            *(_DWORD *)(v5 + 64) = v46 + v45;
            *(void *)(v47 + 8 * v45++) = v49;
            v41 += 9;
            if (v48 == v45) {
              goto LABEL_75;
            }
          }
          signed int v44 = v45;
          if (v45) {
LABEL_75:
          }
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(this, 9 * v44);
        }
      }
LABEL_76:
      int v19 = (unsigned char *)*((void *)this + 1);
      int v50 = (unsigned char *)*((void *)this + 2);
      if (v19 >= v50 || *v19 != 25) {
        break;
      }
LABEL_58:
      *((void *)this + 1) = v19 + 1;
    }
    if (v19 == v50 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
    {
      *((_DWORD *)this + ++*(void *)(result + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)this + 36) = 1;
      return result;
    }
  }
  if (v13 != 2) {
    goto LABEL_30;
  }
  uint64_t result = sub_1000E9ECC(this, v6);
  if (result) {
    goto LABEL_76;
  }
  return result;
}

uint64_t sub_100329328(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      ++v5;
    }
    while (v5 < *(int *)(v4 + 24));
  }
  if (*(int *)(v4 + 48) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(*(void *)(v4 + 40) + 8 * v6++), a3);
    while (v6 < *(int *)(v4 + 48));
  }
  if (*(int *)(v4 + 64) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(*(void *)(v4 + 56) + 8 * v7++), a3);
    while (v7 < *(int *)(v4 + 64));
  }
  int v10 = *(void **)(v4 + 8);
  unsigned int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  uint64_t v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10032942C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  if (*((int *)this + 6) >= 1)
  {
    for (uint64_t i = 0; i < *((int *)this + 6); ++i)
    {
      uint64_t v11 = *(void *)(*((void *)this + 2) + 8 * i);
      *(unsigned char *)a2 = 10;
      if (*(char *)(v11 + 23) < 0)
      {
        unsigned int v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v11 + 8);
        if (v12 <= 0x7F)
        {
LABEL_15:
          *((unsigned char *)a2 + 1) = (_BYTE)v12;
          int v7 = a2 + 2;
          goto LABEL_4;
        }
      }
      else
      {
        unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v11 + 23);
        if (*(unsigned __int8 *)(v11 + 23) <= 0x7Fu) {
          goto LABEL_15;
        }
      }
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)a2 + 1, a3);
LABEL_4:
      int v8 = *(char *)(v11 + 23);
      if (v8 >= 0) {
        unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11;
      }
      else {
        unsigned int v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v11;
      }
      if (v8 >= 0) {
        int v10 = (const void *)*(unsigned __int8 *)(v11 + 23);
      }
      else {
        int v10 = (const void *)*(unsigned int *)(v11 + 8);
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v9, v10, v7, a4);
    }
  }
  if (*((int *)this + 12) >= 1)
  {
    uint64_t v13 = 0;
    do
    {
      uint64_t v14 = *(void *)(*((void *)this + 5) + 8 * v13);
      *(unsigned char *)a2 = 17;
      *(void *)((char *)a2 + 1) = v14;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
      ++v13;
    }
    while (v13 < *((int *)this + 12));
  }
  if (*((int *)this + 16) >= 1)
  {
    uint64_t v15 = 0;
    do
    {
      uint64_t v16 = *(void *)(*((void *)this + 7) + 8 * v15);
      *(unsigned char *)a2 = 25;
      *(void *)((char *)a2 + 1) = v16;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 9);
      ++v15;
    }
    while (v15 < *((int *)this + 16));
  }
  int v19 = (void *)*((void *)this + 1);
  uint64_t v18 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v17 = v19;
  if (!v19 || *v17 == v17[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v18, a2, a3);
}

uint64_t sub_10032960C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 24);
  if (v3 < 1)
  {
    int v5 = *(_DWORD *)(a1 + 24);
  }
  else
  {
    uint64_t v4 = 0;
    int v5 = *(_DWORD *)(a1 + 24);
    do
    {
      uint64_t v10 = *(void *)(*(void *)(a1 + 16) + 8 * v4);
      int v7 = *(unsigned __int8 *)(v10 + 23);
      char v9 = v7;
      uint64_t v8 = *(void *)(v10 + 8);
      if ((v7 & 0x80u) == 0) {
        unint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      }
      else {
        unint64_t v11 = v8;
      }
      if (v11 >= 0x80)
      {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
        int v7 = *(unsigned __int8 *)(v10 + 23);
        uint64_t v8 = *(void *)(v10 + 8);
        int v3 = *(_DWORD *)(a1 + 24);
        char v9 = *(unsigned char *)(v10 + 23);
      }
      else
      {
        int v6 = 1;
      }
      if (v9 < 0) {
        int v7 = v8;
      }
      v5 += v6 + v7;
      ++v4;
    }
    while (v4 < v3);
  }
  unsigned int v12 = *(void **)(a1 + 8);
  uint64_t v13 = (9 * (*(_DWORD *)(a1 + 64) + *(_DWORD *)(a1 + 48)) + v5);
  if (v12 && *v12 != v12[1]) {
    uint64_t v13 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v13;
  }
  *(_DWORD *)(a1 + 72) = v13;
  return v13;
}

uint64_t sub_1003296EC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1003288E4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1003297CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003297E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003297F4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100329880()
{
  return 1;
}

uint64_t sub_100329888()
{
  uint64_t v0 = qword_10047E208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100321450;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E1B0;
}

void sub_100329918(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10032992C(_DWORD *a1, uint64_t a2)
{
  if ((_DWORD *)a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 36))
  {
    int v7 = *(_DWORD *)(a2 + 16);
    a1[9] |= 1u;
    a1[4] = v7;
    int v4 = *(_DWORD *)(a2 + 36);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_12:
      int v9 = *(_DWORD *)(a2 + 24);
      a1[9] |= 4u;
      a1[6] = v9;
      if ((*(_DWORD *)(a2 + 36) & 8) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_8;
    }
  }
  else if ((*(unsigned char *)(a2 + 36) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *(_DWORD *)(a2 + 20);
  a1[9] |= 2u;
  a1[5] = v8;
  int v4 = *(_DWORD *)(a2 + 36);
  if ((v4 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_7:
  if ((v4 & 8) != 0)
  {
LABEL_8:
    int v5 = *(_DWORD *)(a2 + 28);
    a1[9] |= 8u;
    a1[7] = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 2), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100329A2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100329A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100329A54(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_100467540;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + ++*(void *)(result + 24) = 0;
  *(void *)(a1 + 32) = 0;
  sub_10032992C((_DWORD *)a1, a2);
  return a1;
}

void sub_100329AC0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_100329ADC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_100329AF0(uint64_t a1)
{
  *(void *)a1 = off_100467540;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100329B44(uint64_t a1)
{
  *(void *)a1 = off_100467540;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100329BAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_100329BB4()
{
}

void sub_100329C18()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100329C40(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 36))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + ++*(void *)(result + 24) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100329C60(_DWORD *a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  int v6 = a1 + 4;
  int v7 = a1 + 5;
  unsigned int v8 = a1 + 8;
  while (2)
  {
    int v9 = (char *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || *v9 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + ++*(void *)(result + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v9;
      *((_DWORD *)this + ++*(void *)(result + 8) = TagFallback;
      *((void *)this + 1) = v9 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        uint64_t v13 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
          if (!result) {
            return result;
          }
          uint64_t v14 = (unsigned char *)*((void *)this + 1);
          unint64_t v12 = *((void *)this + 2);
          a1[9] |= 1u;
          if ((unint64_t)v14 >= v12) {
            continue;
          }
        }
        else
        {
          *int v6 = *v13;
          uint64_t v14 = v13 + 1;
          *((void *)this + 1) = v14;
          a1[9] |= 1u;
          if ((unint64_t)v14 >= v12) {
            continue;
          }
        }
        if (*v14 != 16) {
          continue;
        }
        uint64_t v15 = v14 + 1;
        *((void *)this + 1) = v15;
        if ((unint64_t)v15 >= v12) {
          goto LABEL_31;
        }
        goto LABEL_28;
      case 2u:
        int v11 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        uint64_t v15 = (char *)*((void *)this + 1);
        unint64_t v12 = *((void *)this + 2);
        if ((unint64_t)v15 >= v12) {
          goto LABEL_31;
        }
LABEL_28:
        if ((*v15 & 0x80000000) == 0)
        {
          *int v7 = *v15;
          uint64_t v17 = v15 + 1;
          *((void *)this + 1) = v17;
          a1[9] |= 2u;
          if ((unint64_t)v17 < v12) {
            goto LABEL_33;
          }
          continue;
        }
LABEL_31:
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
        if (!result) {
          return result;
        }
        uint64_t v17 = (unsigned char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        a1[9] |= 2u;
        if ((unint64_t)v17 >= v18) {
          continue;
        }
LABEL_33:
        if (*v17 != 29) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
        unsigned int v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) == 0) {
          return 0;
        }
LABEL_35:
        a1[6] = v21;
        a1[9] |= 4u;
        int v19 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v19 >= *((void *)this + 2) || *v19 != 37) {
          continue;
        }
        *((void *)this + 1) = v19 + 1;
LABEL_38:
        unsigned int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v20) & 1) == 0) {
          return 0;
        }
        a1[7] = v20;
        a1[9] |= 8u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + ++*(void *)(result + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        return result;
      case 3u:
        int v11 = TagFallback & 7;
        if (v11 != 5) {
          goto LABEL_21;
        }
        unsigned int v21 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v21) & 1) == 0) {
          return 0;
        }
        goto LABEL_35;
      case 4u:
        int v11 = TagFallback & 7;
        if (v11 != 5) {
          goto LABEL_21;
        }
        goto LABEL_38;
      default:
        int v11 = TagFallback & 7;
LABEL_21:
        if (v11 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v8, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100329F60(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(float *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 36) & 8) == 0)
  {
LABEL_5:
    int v9 = *(void **)(v5 + 8);
    unsigned int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(float *)(v5 + 28), a3);
  uint64_t v10 = *(void **)(v5 + 8);
  unsigned int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_11:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

unsigned char *sub_10032A034(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  if ((*((unsigned char *)this + 36) & 1) == 0)
  {
    if ((*((unsigned char *)this + 36) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_11:
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *a2 = 16;
    if (v9 > 0x7F)
    {
      a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)a2 + 1, a3);
      int v4 = *((_DWORD *)this + 9);
      if ((v4 & 4) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      a2[1] = (_BYTE)v9;
      a2 += 2;
      int v4 = *((_DWORD *)this + 9);
      if ((v4 & 4) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v4 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
  unsigned int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  *a2 = 8;
  if (v8 > 0x7F)
  {
    a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, (int)a2 + 1, a3);
    if ((*((unsigned char *)this + 36) & 2) != 0) {
      goto LABEL_11;
    }
  }
  else
  {
    a2[1] = (_BYTE)v8;
    a2 += 2;
    if ((*((unsigned char *)this + 36) & 2) != 0) {
      goto LABEL_11;
    }
  }
LABEL_3:
  int v4 = *((_DWORD *)this + 9);
  if ((v4 & 4) == 0) {
    goto LABEL_4;
  }
LABEL_15:
  int v10 = *((_DWORD *)this + 6);
  *a2 = 29;
  *(_DWORD *)(a2 + 1) = v10;
  a2 += 5;
  if ((*((_DWORD *)this + 9) & 8) == 0)
  {
LABEL_5:
    int v7 = (void *)*((void *)this + 1);
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = v7;
    if (!v7) {
      return a2;
    }
    goto LABEL_17;
  }
LABEL_16:
  int v11 = *((_DWORD *)this + 7);
  *a2 = 37;
  *(_DWORD *)(a2 + 1) = v11;
  a2 += 5;
  unint64_t v12 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v12;
  if (!v12) {
    return a2;
  }
LABEL_17:
  if (*v5 == v5[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10032A194(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if ((_BYTE)v3)
  {
    if (*(unsigned char *)(a1 + 36))
    {
      int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
      if (v9 >= 0x80)
      {
        int v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2)
           + 1;
        int v3 = *(_DWORD *)(a1 + 36);
        if ((v3 & 2) == 0) {
          goto LABEL_15;
        }
      }
      else
      {
        int v4 = 2;
        if ((v3 & 2) == 0) {
          goto LABEL_15;
        }
      }
    }
    else
    {
      int v4 = 0;
      if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
        goto LABEL_15;
      }
    }
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
    if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 36);
    }
    else
    {
      int v11 = 2;
    }
    v4 += v11;
LABEL_15:
    unsigned int v12 = v4 + 5;
    if ((v3 & 4) == 0) {
      unsigned int v12 = v4;
    }
    if ((v3 & 8) != 0) {
      uint64_t v5 = v12 + 5;
    }
    else {
      uint64_t v5 = v12;
    }
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v7 = *(void **)(a1 + 8);
    if (!v7) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
  uint64_t v5 = 0;
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = *(void **)(a1 + 8);
  if (!v7)
  {
LABEL_6:
    *(_DWORD *)(a1 + 32) = v5;
    return v5;
  }
LABEL_21:
  if (*v7 == v7[1]) {
    goto LABEL_6;
  }
  uint64_t v13 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 32) = v13;
  return v13;
}

uint64_t sub_10032A27C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10032992C(a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10032A35C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032A370(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10032A384(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

BOOL sub_10032A410(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 36) & 0xF) == 0;
}

uint64_t sub_10032A424()
{
  uint64_t v0 = qword_10047E208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100321450;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E1C0;
}

void sub_10032A4B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10032A4C8(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
    int v4 = *(_DWORD *)(a2 + 80);
    if (!(_BYTE)v4) {
      goto LABEL_17;
    }
  }
  else
  {
    int v4 = *(_DWORD *)(a2 + 80);
    if (!(_BYTE)v4)
    {
LABEL_17:
      if ((v4 & 0xFF00) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_40;
    }
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 80) |= 1u;
    uint64_t v5 = *(void *)(a1 + 16);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_100492A20 + 16);
    }
    sub_100064680(v5, v6);
    int v4 = *(_DWORD *)(a2 + 80);
  }
  if ((v4 & 2) != 0)
  {
    int v7 = *(_DWORD *)(a2 + 24);
    *(_DWORD *)(a1 + 80) |= 2u;
    *(_DWORD *)(a1 + ++*(void *)(result + 24) = v7;
    int v4 = *(_DWORD *)(a2 + 80);
    if ((v4 & 4) == 0)
    {
LABEL_12:
      if ((v4 & 8) == 0) {
        goto LABEL_13;
      }
      goto LABEL_21;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_12;
  }
  int v8 = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 80) |= 4u;
  *(_DWORD *)(a1 + 2++*(void *)(result + 8) = v8;
  int v4 = *(_DWORD *)(a2 + 80);
  if ((v4 & 8) == 0)
  {
LABEL_13:
    if ((v4 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v9 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 80) |= 8u;
  *(_DWORD *)(a1 + 32) = v9;
  int v4 = *(_DWORD *)(a2 + 80);
  if ((v4 & 0x10) == 0)
  {
LABEL_14:
    if ((v4 & 0x20) == 0) {
      goto LABEL_15;
    }
LABEL_23:
    *(_DWORD *)(a1 + 80) |= 0x20u;
    uint64_t v11 = *(void *)(a1 + 40);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 40);
    if (v12)
    {
      sub_100322F00(v11, v12);
      int v4 = *(_DWORD *)(a2 + 80);
      if ((v4 & 0x40) != 0) {
        goto LABEL_30;
      }
    }
    else
    {
      sub_100322F00(v11, *(void *)(qword_100492A20 + 40));
      int v4 = *(_DWORD *)(a2 + 80);
      if ((v4 & 0x40) != 0) {
        goto LABEL_30;
      }
    }
LABEL_16:
    if ((v4 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_22:
  int v10 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 80) |= 0x10u;
  *(_DWORD *)(a1 + 36) = v10;
  int v4 = *(_DWORD *)(a2 + 80);
  if ((v4 & 0x20) != 0) {
    goto LABEL_23;
  }
LABEL_15:
  if ((v4 & 0x40) == 0) {
    goto LABEL_16;
  }
LABEL_30:
  *(_DWORD *)(a1 + 80) |= 0x40u;
  uint64_t v13 = *(void *)(a1 + 48);
  if (!v13) {
    operator new();
  }
  uint64_t v14 = *(void *)(a2 + 48);
  if (v14)
  {
    sub_100322F00(v13, v14);
    int v4 = *(_DWORD *)(a2 + 80);
    if ((v4 & 0x80) == 0) {
      goto LABEL_17;
    }
  }
  else
  {
    sub_100322F00(v13, *(void *)(qword_100492A20 + 48));
    int v4 = *(_DWORD *)(a2 + 80);
    if ((v4 & 0x80) == 0) {
      goto LABEL_17;
    }
  }
LABEL_36:
  uint64_t v15 = *(const std::string **)(a2 + 56);
  *(_DWORD *)(a1 + 80) |= 0x80u;
  uint64_t v16 = *(std::string **)(a1 + 56);
  if (v16 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v16, v15);
  int v4 = *(_DWORD *)(a2 + 80);
  if ((v4 & 0xFF00) != 0)
  {
LABEL_40:
    if ((v4 & 0x100) != 0)
    {
      *(_DWORD *)(a1 + 80) |= 0x100u;
      uint64_t v17 = *(_DWORD **)(a1 + 64);
      if (!v17) {
        operator new();
      }
      uint64_t v18 = *(void *)(a2 + 64);
      if (!v18) {
        uint64_t v18 = *(void *)(qword_100492A20 + 64);
      }
      sub_10032992C(v17, v18);
      int v4 = *(_DWORD *)(a2 + 80);
    }
    if ((v4 & 0x200) != 0)
    {
      int v19 = *(_DWORD *)(a2 + 72);
      *(_DWORD *)(a1 + 80) |= 0x200u;
      *(_DWORD *)(a1 + 72) = v19;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10032A8F8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10032A920()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10032A94C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10032A974(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032A988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032A99C(void *a1)
{
  *a1 = off_1004675F0;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100064398(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10032AA10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 76) = a2;
  return result;
}

void sub_10032AA18()
{
}

void sub_10032AA9C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10032AAEC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 80);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 80);
      if ((v6 & 2) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_100492A20 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 80);
      if ((v6 & 2) != 0) {
        goto LABEL_17;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_18;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 24), a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 28), a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 32), a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 36), a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_25:
    uint64_t v12 = *(void *)(v5 + 48);
    if (v12)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v12, a2, a4);
      int v6 = *(_DWORD *)(v5 + 80);
      if ((v6 & 0x80) != 0) {
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(qword_100492A20 + 48), a2, a4);
      int v6 = *(_DWORD *)(v5 + 80);
      if ((v6 & 0x80) != 0) {
        goto LABEL_29;
      }
    }
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_30:
    uint64_t v13 = *(void *)(v5 + 64);
    if (v13)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v13, a2, a4);
      if ((*(_DWORD *)(v5 + 80) & 0x200) != 0) {
        goto LABEL_34;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(void *)(qword_100492A20 + 64), a2, a4);
      if ((*(_DWORD *)(v5 + 80) & 0x200) != 0) {
        goto LABEL_34;
      }
    }
LABEL_11:
    int v9 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_35;
  }
LABEL_21:
  uint64_t v11 = *(void *)(v5 + 40);
  if (v11)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v11, a2, a4);
    int v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 0x40) != 0) {
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(qword_100492A20 + 40), a2, a4);
    int v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 0x40) != 0) {
      goto LABEL_25;
    }
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    goto LABEL_9;
  }
LABEL_29:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x100) != 0) {
    goto LABEL_30;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    goto LABEL_11;
  }
LABEL_34:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(_DWORD *)(v5 + 72), (int)a2, a4);
  uint64_t v14 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v14;
  if (!v14) {
    return result;
  }
LABEL_35:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10032AD08(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v4 = a2;
  int v6 = *((_DWORD *)this + 20);
  if (v6)
  {
    uint64_t v11 = (unsigned int *)*((void *)this + 2);
    if (v11)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v12 = a2 + 1;
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[7];
      if (v13 <= 0x7F) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v11 = *(unsigned int **)(qword_100492A20 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v12 = a2 + 1;
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[7];
      if (v13 <= 0x7F)
      {
LABEL_15:
        *((unsigned char *)v4 + 1) = (_BYTE)v13;
        int v4 = sub_100322A98((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3, a4);
        if ((*((_DWORD *)this + 20) & 2) != 0) {
          goto LABEL_19;
        }
LABEL_3:
        if ((*((unsigned char *)this + 80) & 4) == 0) {
          goto LABEL_4;
        }
LABEL_23:
        uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
        *(unsigned char *)int v4 = 24;
        if (v18 > 0x7F)
        {
          int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)v4 + 1, a3);
          if ((*((unsigned char *)this + 80) & 8) != 0) {
            goto LABEL_27;
          }
        }
        else
        {
          *((unsigned char *)v4 + 1) = (_BYTE)v18;
          int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
          if ((*((unsigned char *)this + 80) & 8) != 0) {
            goto LABEL_27;
          }
        }
LABEL_5:
        if ((*((unsigned char *)this + 80) & 0x10) == 0) {
          goto LABEL_6;
        }
LABEL_31:
        unsigned int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
        *(unsigned char *)int v4 = 40;
        if (v20 > 0x7F)
        {
          int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, (int)v4 + 1, a3);
          int v7 = *((_DWORD *)this + 20);
          if ((v7 & 0x20) != 0) {
            goto LABEL_35;
          }
        }
        else
        {
          *((unsigned char *)v4 + 1) = (_BYTE)v20;
          int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
          int v7 = *((_DWORD *)this + 20);
          if ((v7 & 0x20) != 0) {
            goto LABEL_35;
          }
        }
LABEL_7:
        if ((v7 & 0x40) == 0) {
          goto LABEL_8;
        }
LABEL_41:
        uint64_t v26 = (unsigned int *)*((void *)this + 6);
        if (v26)
        {
          *(unsigned char *)int v4 = 58;
          unsigned int v27 = v4 + 1;
          signed int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26[9];
          if (v28 <= 0x7F) {
            goto LABEL_43;
          }
        }
        else
        {
          uint64_t v26 = *(unsigned int **)(qword_100492A20 + 48);
          *(unsigned char *)int v4 = 58;
          unsigned int v27 = v4 + 1;
          signed int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26[9];
          if (v28 <= 0x7F)
          {
LABEL_43:
            *((unsigned char *)v4 + 1) = (_BYTE)v28;
            int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1003231D0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v26, (uint64_t)v4 + 2, a3);
            int v7 = *((_DWORD *)this + 20);
            if ((v7 & 0x80) != 0) {
              goto LABEL_47;
            }
LABEL_9:
            if ((v7 & 0x100) == 0) {
              goto LABEL_10;
            }
LABEL_59:
            int v37 = (unsigned int *)*((void *)this + 8);
            if (v37)
            {
              *(unsigned char *)int v4 = 74;
              unsigned int v38 = v4 + 1;
              int v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v37[8];
              if (v39 <= 0x7F) {
                goto LABEL_61;
              }
            }
            else
            {
              int v37 = *(unsigned int **)(qword_100492A20 + 64);
              *(unsigned char *)int v4 = 74;
              unsigned int v38 = v4 + 1;
              int v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v37[8];
              if (v39 <= 0x7F)
              {
LABEL_61:
                *((unsigned char *)v4 + 1) = (_BYTE)v39;
                int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10032A034((wireless_diagnostics::google::protobuf::internal::WireFormat *)v37, (unsigned char *)v4 + 2, a3);
                if ((*((_DWORD *)this + 20) & 0x200) != 0) {
                  goto LABEL_65;
                }
LABEL_11:
                uint64_t v10 = (void *)*((void *)this + 1);
                int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
                int v8 = v10;
                if (!v10) {
                  return v4;
                }
                goto LABEL_72;
              }
            }
            int v40 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v39, v38, a3);
            int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10032A034((wireless_diagnostics::google::protobuf::internal::WireFormat *)v37, v40, v41);
            if ((*((_DWORD *)this + 20) & 0x200) != 0) {
              goto LABEL_65;
            }
            goto LABEL_11;
          }
        }
        uint64_t v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v28, v27, a3);
        int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1003231D0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v26, v29, v30);
        int v7 = *((_DWORD *)this + 20);
        if ((v7 & 0x80) != 0) {
          goto LABEL_47;
        }
        goto LABEL_9;
      }
    }
    uint64_t v14 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v12, a3);
    int v4 = sub_100322A98((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v14, v15, v16);
    if ((*((_DWORD *)this + 20) & 2) != 0) {
      goto LABEL_19;
    }
    goto LABEL_3;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_19:
  uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  *(unsigned char *)int v4 = 16;
  if (v17 > 0x7F)
  {
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, (int)v4 + 1, a3);
    if ((*((unsigned char *)this + 80) & 4) != 0) {
      goto LABEL_23;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v17;
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((*((unsigned char *)this + 80) & 4) != 0) {
      goto LABEL_23;
    }
  }
LABEL_4:
  if ((*((unsigned char *)this + 80) & 8) == 0) {
    goto LABEL_5;
  }
LABEL_27:
  int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  *(unsigned char *)int v4 = 32;
  if (v19 > 0x7F)
  {
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)v4 + 1, a3);
    if ((*((unsigned char *)this + 80) & 0x10) != 0) {
      goto LABEL_31;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v19;
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((*((unsigned char *)this + 80) & 0x10) != 0) {
      goto LABEL_31;
    }
  }
LABEL_6:
  int v7 = *((_DWORD *)this + 20);
  if ((v7 & 0x20) == 0) {
    goto LABEL_7;
  }
LABEL_35:
  unsigned int v21 = (unsigned int *)*((void *)this + 5);
  if (v21)
  {
    *(unsigned char *)int v4 = 50;
    unsigned int v22 = v4 + 1;
    uint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21[9];
    if (v23 <= 0x7F) {
      goto LABEL_37;
    }
LABEL_40:
    uint64_t v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, v22, a3);
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1003231D0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v21, v24, v25);
    int v7 = *((_DWORD *)this + 20);
    if ((v7 & 0x40) != 0) {
      goto LABEL_41;
    }
    goto LABEL_8;
  }
  unsigned int v21 = *(unsigned int **)(qword_100492A20 + 40);
  *(unsigned char *)int v4 = 50;
  unsigned int v22 = v4 + 1;
  uint64_t v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21[9];
  if (v23 > 0x7F) {
    goto LABEL_40;
  }
LABEL_37:
  *((unsigned char *)v4 + 1) = (_BYTE)v23;
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1003231D0((wireless_diagnostics::google::protobuf::internal::WireFormat *)v21, (uint64_t)v4 + 2, a3);
  int v7 = *((_DWORD *)this + 20);
  if ((v7 & 0x40) != 0) {
    goto LABEL_41;
  }
LABEL_8:
  if ((v7 & 0x80) == 0) {
    goto LABEL_9;
  }
LABEL_47:
  uint64_t v31 = *((void *)this + 7);
  *(unsigned char *)int v4 = 66;
  if (*(char *)(v31 + 23) < 0)
  {
    uint64_t v32 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v31 + 8);
    if (v32 <= 0x7F) {
      goto LABEL_49;
    }
  }
  else
  {
    uint64_t v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v31 + 23);
    if (*(unsigned __int8 *)(v31 + 23) <= 0x7Fu)
    {
LABEL_49:
      *((unsigned char *)v4 + 1) = (_BYTE)v32;
      int v33 = v4 + 2;
      goto LABEL_52;
    }
  }
  int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v32, (int)v4 + 1, a3);
LABEL_52:
  int v34 = *(char *)(v31 + 23);
  if (v34 >= 0) {
    int v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v31;
  }
  else {
    int v35 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v31;
  }
  if (v34 >= 0) {
    unint64_t v36 = (const void *)*(unsigned __int8 *)(v31 + 23);
  }
  else {
    unint64_t v36 = (const void *)*(unsigned int *)(v31 + 8);
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v35, v36, v33, a4);
  int v7 = *((_DWORD *)this + 20);
  if ((v7 & 0x100) != 0) {
    goto LABEL_59;
  }
LABEL_10:
  if ((v7 & 0x200) == 0) {
    goto LABEL_11;
  }
LABEL_65:
  int v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 18);
  *(unsigned char *)int v4 = 80;
  unint64_t v43 = (unint64_t)v4 + 1;
  if ((v42 & 0x80000000) != 0)
  {
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v42, v43, a3);
    uint64_t v45 = (void *)*((void *)this + 1);
    int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v8 = v45;
    if (!v45) {
      return v4;
    }
  }
  else if (v42 > 0x7F)
  {
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v42, v43, a3);
    int v46 = (void *)*((void *)this + 1);
    int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v8 = v46;
    if (!v46) {
      return v4;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v42;
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    signed int v44 = (void *)*((void *)this + 1);
    int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v8 = v44;
    if (!v44) {
      return v4;
    }
  }
LABEL_72:
  if (*v8 == v8[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v9, v4, a3);
}

uint64_t sub_10032B15C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 80);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    if ((v3 & 0xFF00) == 0) {
      goto LABEL_100;
    }
LABEL_86:
    if ((v3 & 0x100) == 0) {
      goto LABEL_93;
    }
    uint64_t v37 = *(void *)(a1 + 64);
    if (v37)
    {
      unsigned int v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10032A194(v37, a2);
      if (v38 < 0x80)
      {
LABEL_89:
        int v39 = 1;
LABEL_92:
        uint64_t v4 = (v4 + v38 + v39 + 1);
        int v3 = *(_DWORD *)(a1 + 80);
LABEL_93:
        if ((v3 & 0x200) != 0)
        {
          int v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
          if ((v40 & 0x80000000) != 0)
          {
            int v41 = 11;
          }
          else if (v40 >= 0x80)
          {
            int v41 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v40, a2)+ 1;
          }
          else
          {
            int v41 = 2;
          }
          uint64_t v4 = (v41 + v4);
        }
        goto LABEL_100;
      }
    }
    else
    {
      unsigned int v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10032A194(*(void *)(qword_100492A20 + 64), a2);
      if (v38 < 0x80) {
        goto LABEL_89;
      }
    }
    int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38, a2);
    goto LABEL_92;
  }
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_17;
    }
    goto LABEL_13;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100322BD0(v5, a2);
    if (v6 < 0x80) {
      goto LABEL_9;
    }
  }
  else
  {
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100322BD0(*(void *)(qword_100492A20 + 16), a2);
    if (v6 < 0x80)
    {
LABEL_9:
      uint64_t v4 = (v6 + 2);
      int v3 = *(_DWORD *)(a1 + 80);
      if ((v3 & 2) == 0) {
        goto LABEL_17;
      }
      goto LABEL_13;
    }
  }
  uint64_t v4 = v6
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2)+ 1;
  int v3 = *(_DWORD *)(a1 + 80);
  if ((v3 & 2) == 0) {
    goto LABEL_17;
  }
LABEL_13:
  int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 24);
  if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
    int v3 = *(_DWORD *)(a1 + 80);
  }
  else
  {
    int v8 = 1;
  }
  uint64_t v4 = (v4 + v8 + 1);
LABEL_17:
  if ((v3 & 4) != 0)
  {
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 28);
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9, a2);
      int v3 = *(_DWORD *)(a1 + 80);
      uint64_t v4 = (v4 + v10 + 1);
      if ((v3 & 8) != 0) {
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      if ((v3 & 8) != 0) {
        goto LABEL_29;
      }
    }
LABEL_19:
    if ((v3 & 0x10) == 0) {
      goto LABEL_20;
    }
LABEL_33:
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if (v13 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
      int v3 = *(_DWORD *)(a1 + 80);
      uint64_t v4 = (v4 + v14 + 1);
      if ((v3 & 0x20) != 0) {
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      if ((v3 & 0x20) != 0) {
        goto LABEL_37;
      }
    }
LABEL_21:
    if ((v3 & 0x40) == 0) {
      goto LABEL_22;
    }
LABEL_57:
    uint64_t v23 = *(void *)(a1 + 48);
    if (v23)
    {
      int v24 = *(unsigned __int8 *)(v23 + 40);
      if (*(unsigned char *)(v23 + 40)) {
        goto LABEL_59;
      }
    }
    else
    {
      uint64_t v23 = *(void *)(qword_100492A20 + 48);
      int v24 = *(unsigned __int8 *)(v23 + 40);
      if (*(unsigned char *)(v23 + 40))
      {
LABEL_59:
        unsigned int v25 = (v24 << 31 >> 31) & 9;
        if ((v24 & 2) != 0) {
          unint64_t v26 = v25 + 9;
        }
        else {
          unint64_t v26 = v25;
        }
        if ((v24 & 4) != 0)
        {
          unsigned int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v23 + 32);
          if (v27 >= 0x80) {
            int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2)+ 1;
          }
          else {
            int v28 = 2;
          }
          unint64_t v26 = (v28 + v26);
          uint64_t v29 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v23 + 8);
          uint64_t v30 = *(void **)(v23 + 8);
          if (!v30) {
            goto LABEL_73;
          }
          goto LABEL_71;
        }
LABEL_67:
        uint64_t v29 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v23 + 8);
        uint64_t v30 = *(void **)(v23 + 8);
        if (!v30) {
          goto LABEL_73;
        }
LABEL_71:
        if (*v30 != v30[1]) {
          unint64_t v26 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v29, a2)+ v26;
        }
LABEL_73:
        *(_DWORD *)(v23 + 36) = v26;
        if (v26 >= 0x80)
        {
          uint64_t v4 = v4
             + v26
             + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26, a2)+ 1;
          int v3 = *(_DWORD *)(a1 + 80);
          if ((v3 & 0x80) != 0) {
            goto LABEL_77;
          }
        }
        else
        {
          uint64_t v4 = (v4 + v26 + 2);
          int v3 = *(_DWORD *)(a1 + 80);
          if ((v3 & 0x80) != 0) {
            goto LABEL_77;
          }
        }
LABEL_23:
        if ((v3 & 0xFF00) == 0) {
          goto LABEL_100;
        }
        goto LABEL_86;
      }
    }
    unint64_t v26 = 0;
    goto LABEL_67;
  }
  if ((v3 & 8) == 0) {
    goto LABEL_19;
  }
LABEL_29:
  uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    int v3 = *(_DWORD *)(a1 + 80);
    uint64_t v4 = (v4 + v12 + 1);
    if ((v3 & 0x10) != 0) {
      goto LABEL_33;
    }
  }
  else
  {
    uint64_t v4 = (v4 + 2);
    if ((v3 & 0x10) != 0) {
      goto LABEL_33;
    }
  }
LABEL_20:
  if ((v3 & 0x20) == 0) {
    goto LABEL_21;
  }
LABEL_37:
  uint64_t v15 = *(void *)(a1 + 40);
  if (v15)
  {
    int v16 = *(unsigned __int8 *)(v15 + 40);
    if (*(unsigned char *)(v15 + 40)) {
      goto LABEL_39;
    }
LABEL_46:
    unint64_t v18 = 0;
    goto LABEL_47;
  }
  uint64_t v15 = *(void *)(qword_100492A20 + 40);
  int v16 = *(unsigned __int8 *)(v15 + 40);
  if (!*(unsigned char *)(v15 + 40)) {
    goto LABEL_46;
  }
LABEL_39:
  unsigned int v17 = (v16 << 31 >> 31) & 9;
  if ((v16 & 2) != 0) {
    unint64_t v18 = v17 + 9;
  }
  else {
    unint64_t v18 = v17;
  }
  if ((v16 & 4) != 0)
  {
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v15 + 32);
    if (v19 >= 0x80) {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2)
    }
          + 1;
    else {
      int v20 = 2;
    }
    unint64_t v18 = (v20 + v18);
    unsigned int v21 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v15 + 8);
    unsigned int v22 = *(void **)(v15 + 8);
    if (!v22) {
      goto LABEL_53;
    }
    goto LABEL_51;
  }
LABEL_47:
  unsigned int v21 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v15 + 8);
  unsigned int v22 = *(void **)(v15 + 8);
  if (!v22) {
    goto LABEL_53;
  }
LABEL_51:
  if (*v22 != v22[1]) {
    unint64_t v18 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v21, a2)
  }
        + v18;
LABEL_53:
  *(_DWORD *)(v15 + 36) = v18;
  if (v18 >= 0x80)
  {
    uint64_t v4 = v4
       + v18
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18, a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 80);
    if ((v3 & 0x40) != 0) {
      goto LABEL_57;
    }
  }
  else
  {
    uint64_t v4 = (v4 + v18 + 2);
    int v3 = *(_DWORD *)(a1 + 80);
    if ((v3 & 0x40) != 0) {
      goto LABEL_57;
    }
  }
LABEL_22:
  if ((v3 & 0x80) == 0) {
    goto LABEL_23;
  }
LABEL_77:
  uint64_t v31 = *(void *)(a1 + 56);
  int v32 = *(unsigned __int8 *)(v31 + 23);
  char v33 = v32;
  uint64_t v34 = *(void *)(v31 + 8);
  if ((v32 & 0x80u) == 0) {
    unint64_t v35 = *(unsigned __int8 *)(v31 + 23);
  }
  else {
    unint64_t v35 = v34;
  }
  if (v35 >= 0x80)
  {
    int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v35, a2);
    int v32 = *(unsigned __int8 *)(v31 + 23);
    uint64_t v34 = *(void *)(v31 + 8);
    int v3 = *(_DWORD *)(a1 + 80);
    char v33 = *(unsigned char *)(v31 + 23);
  }
  else
  {
    int v36 = 1;
  }
  if (v33 < 0) {
    int v32 = v34;
  }
  uint64_t v4 = (v4 + v36 + v32 + 1);
  if ((v3 & 0xFF00) != 0) {
    goto LABEL_86;
  }
LABEL_100:
  int v42 = *(void **)(a1 + 8);
  if (v42 && *v42 != v42[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 76) = v4;
  return v4;
}

uint64_t sub_10032B5B4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10032A4C8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10032B694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032B6A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10032B6BC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10032B748()
{
  uint64_t v0 = qword_10047E208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100321450;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E1D0;
}

void sub_10032B7D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10032B7EC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  sub_10032D388((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), a2 + 16);
  sub_10032D4E8((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40), a2 + 40);
  int v4 = *(_DWORD *)(a2 + 92);
  if ((v4 & 0x3FC) != 0)
  {
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 92) |= 4u;
      uint64_t v5 = *(void *)(a1 + 64);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = *(void *)(a2 + 64);
      if (!v6) {
        uint64_t v6 = *(void *)(qword_100492A28 + 64);
      }
      sub_100074290(v5, v6);
      int v4 = *(_DWORD *)(a2 + 92);
    }
    if ((v4 & 8) != 0)
    {
      int v7 = *(const std::string **)(a2 + 72);
      *(_DWORD *)(a1 + 92) |= 8u;
      int v8 = *(std::string **)(a1 + 72);
      if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v8, v7);
      int v4 = *(_DWORD *)(a2 + 92);
    }
    if ((v4 & 0x10) != 0)
    {
      uint64_t v9 = *(void *)(a2 + 80);
      *(_DWORD *)(a1 + 92) |= 0x10u;
      *(void *)(a1 + 80) = v9;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10032B96C()
{
}

void sub_10032B990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032B9A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032B9B8(uint64_t a1)
{
  sub_100064AC8(a1);

  operator delete();
}

uint64_t sub_10032B9F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 8++*(void *)(result + 8) = a2;
  return result;
}

void sub_10032B9F8()
{
}

void sub_10032BA74()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10032BADC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  int v7 = *(_DWORD *)(v5 + 92);
  if ((v7 & 4) != 0)
  {
    uint64_t v8 = *(void *)(v5 + 64);
    if (v8)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
      if ((*(_DWORD *)(v5 + 92) & 8) != 0) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(qword_100492A28 + 64), a2, a4);
      if ((*(_DWORD *)(v5 + 92) & 8) != 0) {
        goto LABEL_12;
      }
    }
LABEL_6:
    if (*(int *)(v5 + 48) < 1) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if ((v7 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  if (*(int *)(v5 + 48) < 1) {
    goto LABEL_15;
  }
LABEL_13:
  uint64_t v9 = 0;
  do
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 40) + 8 * v9++), a2, a4);
  while (v9 < *(int *)(v5 + 48));
LABEL_15:
  if ((*(unsigned char *)(v5 + 92) & 0x10) != 0) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(void *)(v5 + 80), (uint64_t)a2, a4);
  }
  int v12 = *(void **)(v5 + 8);
  uint64_t v11 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v10 = v12;
  if (v12 && *v10 != v10[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v11, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10032BC30(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v8 = *(unsigned int **)(*((void *)this + 2) + 8 * v6);
      *(unsigned char *)a2 = 10;
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8[7];
      if (v9 > 0x7F)
      {
        int v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)a2 + 1, a3);
      }
      else
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v9;
        int v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = sub_100322A98((wireless_diagnostics::google::protobuf::internal::WireFormat *)v8, v7, a3, a4);
      ++v6;
    }
    while (v6 < *((int *)this + 6));
  }
  int v10 = *((_DWORD *)this + 23);
  if ((v10 & 4) == 0)
  {
    if ((v10 & 8) == 0) {
      goto LABEL_9;
    }
LABEL_17:
    uint64_t v17 = *((void *)this + 9);
    *(unsigned char *)a2 = 26;
    if (*(char *)(v17 + 23) < 0)
    {
      unint64_t v18 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v17 + 8);
      if (v18 <= 0x7F) {
        goto LABEL_19;
      }
    }
    else
    {
      unint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v17 + 23);
      if (*(unsigned __int8 *)(v17 + 23) <= 0x7Fu)
      {
LABEL_19:
        *((unsigned char *)a2 + 1) = (_BYTE)v18;
        int v19 = a2 + 2;
        goto LABEL_22;
      }
    }
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)a2 + 1, a3);
LABEL_22:
    int v20 = *(char *)(v17 + 23);
    if (v20 >= 0) {
      unsigned int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17;
    }
    else {
      unsigned int v21 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v17;
    }
    if (v20 >= 0) {
      unsigned int v22 = (const void *)*(unsigned __int8 *)(v17 + 23);
    }
    else {
      unsigned int v22 = (const void *)*(unsigned int *)(v17 + 8);
    }
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v21, v22, v19, a4);
    if (*((int *)this + 12) < 1) {
      goto LABEL_34;
    }
    goto LABEL_29;
  }
  uint64_t v11 = (unsigned int *)*((void *)this + 8);
  if (v11)
  {
    *(unsigned char *)a2 = 18;
    unsigned int v12 = a2 + 1;
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[9];
    if (v13 <= 0x7F) {
      goto LABEL_13;
    }
LABEL_16:
    int v14 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v12, a3);
    a2 = sub_100331D3C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v14, v15, v16);
    if ((*((_DWORD *)this + 23) & 8) != 0) {
      goto LABEL_17;
    }
    goto LABEL_9;
  }
  uint64_t v11 = *(unsigned int **)(qword_100492A28 + 64);
  *(unsigned char *)a2 = 18;
  unsigned int v12 = a2 + 1;
  uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[9];
  if (v13 > 0x7F) {
    goto LABEL_16;
  }
LABEL_13:
  *((unsigned char *)a2 + 1) = (_BYTE)v13;
  a2 = sub_100331D3C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2), a3, a4);
  if ((*((_DWORD *)this + 23) & 8) != 0) {
    goto LABEL_17;
  }
LABEL_9:
  if (*((int *)this + 12) < 1) {
    goto LABEL_34;
  }
LABEL_29:
  uint64_t v23 = 0;
  do
  {
    unsigned int v25 = *(unsigned int **)(*((void *)this + 5) + 8 * v23);
    *(unsigned char *)a2 = 34;
    unint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25[8];
    if (v26 > 0x7F)
    {
      int v24 = (char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, (int)a2 + 1, a3);
    }
    else
    {
      *((unsigned char *)a2 + 1) = (_BYTE)v26;
      int v24 = (char *)a2 + 2;
    }
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1003237B8((wireless_diagnostics::google::protobuf::internal::WireFormat *)v25, (uint64_t)v24, a3);
    ++v23;
  }
  while (v23 < *((int *)this + 12));
LABEL_34:
  if ((*((unsigned char *)this + 92) & 0x10) != 0)
  {
    unsigned int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 10);
    *(_WORD *)a2 = 384;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v27, (unint64_t)a2 + 2, a3);
  }
  uint64_t v30 = (void *)*((void *)this + 1);
  uint64_t v29 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v28 = v30;
  if (!v30 || *v28 == v28[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v29, a2, a3);
}

uint64_t sub_10032BE88(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 0x3FC) == 0)
  {
    int v5 = *(_DWORD *)(a1 + 24);
    if (v5 < 1) {
      goto LABEL_31;
    }
    goto LABEL_26;
  }
  if ((v3 & 4) == 0)
  {
    int v4 = 0;
    if ((v3 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_13;
  }
  uint64_t v6 = *(void *)(a1 + 64);
  if (v6)
  {
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100331EF4(v6, a2);
    if (v7 < 0x80) {
      goto LABEL_9;
    }
  }
  else
  {
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100331EF4(*(void *)(qword_100492A28 + 64), a2);
    if (v7 < 0x80)
    {
LABEL_9:
      int v4 = v7 + 2;
      int v3 = *(_DWORD *)(a1 + 92);
      if ((v3 & 8) == 0) {
        goto LABEL_22;
      }
      goto LABEL_13;
    }
  }
  int v4 = v7
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2)
     + 1;
  int v3 = *(_DWORD *)(a1 + 92);
  if ((v3 & 8) == 0) {
    goto LABEL_22;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 72);
  int v9 = *(unsigned __int8 *)(v8 + 23);
  char v10 = v9;
  uint64_t v11 = *(void *)(v8 + 8);
  if ((v9 & 0x80u) == 0) {
    unint64_t v12 = *(unsigned __int8 *)(v8 + 23);
  }
  else {
    unint64_t v12 = v11;
  }
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12, a2);
    int v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v11 = *(void *)(v8 + 8);
    int v3 = *(_DWORD *)(a1 + 92);
    char v10 = *(unsigned char *)(v8 + 23);
  }
  else
  {
    int v13 = 1;
  }
  if (v10 < 0) {
    int v9 = v11;
  }
  v4 += v13 + v9 + 1;
LABEL_22:
  if ((v3 & 0x10) != 0)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 80), (unint64_t)a2);
    int v16 = *(_DWORD *)(a1 + 24);
    int v5 = v16 + v4 + v15 + 2;
    if (v16 < 1) {
      goto LABEL_31;
    }
  }
  else
  {
    int v14 = *(_DWORD *)(a1 + 24);
    int v5 = v14 + v4;
    if (v14 < 1) {
      goto LABEL_31;
    }
  }
LABEL_26:
  uint64_t v17 = 0;
  do
  {
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100322BD0(*(void *)(*(void *)(a1 + 16) + 8 * v17), a2);
    int v20 = (int)v19;
    if (v19 >= 0x80) {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19, a2);
    }
    else {
      int v18 = 1;
    }
    v5 += v20 + v18;
    ++v17;
  }
  while (v17 < *(int *)(a1 + 24));
LABEL_31:
  int v21 = *(_DWORD *)(a1 + 48);
  uint64_t v22 = (v21 + v5);
  if (v21 >= 1)
  {
    uint64_t v23 = 0;
    do
    {
      unsigned int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100323920(*(void *)(*(void *)(a1 + 40) + 8 * v23), a2);
      int v26 = (int)v25;
      if (v25 >= 0x80) {
        int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25, a2);
      }
      else {
        int v24 = 1;
      }
      uint64_t v22 = (v26 + v22 + v24);
      ++v23;
    }
    while (v23 < *(int *)(a1 + 48));
  }
  unsigned int v27 = *(void **)(a1 + 8);
  if (v27 && *v27 != v27[1]) {
    uint64_t v22 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v22;
  }
  *(_DWORD *)(a1 + 8++*(void *)(result + 8) = v22;
  return v22;
}

uint64_t sub_10032C09C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10032B7EC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10032C17C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032C190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10032C1A4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10032C230()
{
  uint64_t v0 = qword_10047E208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100321450;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E1E0;
}

void sub_10032C2C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10032C2D4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    int v5 = *(_DWORD *)(a1 + 32);
    int v6 = *(_DWORD *)(a1 + 36);
    int v7 = v5 + v4;
    if (v6 < v7)
    {
      int v8 = 2 * v6;
      if (2 * v6 <= v7) {
        int v8 = v7;
      }
      if (v8 <= 4) {
        int v8 = 4;
      }
      *(_DWORD *)(a1 + 36) = v8;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 24) + 4 * v5), *(const void **)(a2 + 24), 4 * *(int *)(a2 + 32));
    *(_DWORD *)(a1 + 32) += *(_DWORD *)(a2 + 32);
  }
  if (*(unsigned char *)(a2 + 44))
  {
    *(_DWORD *)(a1 + 44) |= 1u;
    uint64_t v9 = *(void *)(a1 + 16);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = *(void *)(a2 + 16);
    if (!v10) {
      uint64_t v10 = *(void *)(qword_100492A30 + 16);
    }
    sub_100064680(v9, v10);
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10032C4B0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10032C4D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032C4EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032C500(void *a1)
{
  *a1 = off_100467750;
  if ((void *)qword_100492A30 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  if (a1[3]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10032C5B0(void *a1)
{
  *a1 = off_100467750;
  if ((void *)qword_100492A30 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  if (a1[3]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10032C674(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_10032C67C()
{
}

void sub_10032C6E0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10032C708(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 44))
  {
    this = *(void *)(this + 16);
    if (this)
    {
      char v2 = *(unsigned char *)(this + 32);
      if (!v2 {
        || (*(_DWORD *)(this + ++*(void *)(result + 24) = 1, (v2 & 2) == 0)
      }
        || (uint64_t v3 = *(void *)(this + 16),
            (_UNKNOWN *)v3 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
      {
LABEL_8:
        uint64_t v4 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + ++*(void *)(result + 24) = 0;
        if (!v4) {
          goto LABEL_10;
        }
        goto LABEL_9;
      }
      if ((*(char *)(v3 + 23) & 0x80000000) == 0)
      {
        *(unsigned char *)uint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
        goto LABEL_8;
      }
      **(unsigned char **)uint64_t v3 = 0;
      *(void *)(v3 + ++*(void *)(result + 8) = 0;
      uint64_t v7 = *(void *)(this + 8);
      this += 8;
      *(_DWORD *)(this + ++*(void *)(result + 24) = 0;
      if (v7) {
LABEL_9:
      }
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
    }
  }
LABEL_10:
  uint64_t v6 = *(void *)(v1 + 8);
  int v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v5 + 6) = 0;
  *((_DWORD *)v5 + 9) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return this;
}

uint64_t sub_10032C7CC(uint64_t a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (uint64_t *)(a1 + 24);
  unsigned int v7 = a1 + 8;
  while (1)
  {
    int v8 = (char *)*((void *)this + 1);
    if ((unint64_t)v8 >= *((void *)this + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + ++*(void *)(result + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)this + ++*(void *)(result + 8) = TagFallback;
      *((void *)this + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    if (TagFallback >> 3 != 1) {
      break;
    }
    int v10 = TagFallback & 7;
    if (v10 == 2)
    {
      *(_DWORD *)(a1 + 44) |= 1u;
      uint64_t v13 = *(void *)(a1 + 16);
      if (!v13) {
        operator new();
      }
      unsigned int v37 = 0;
      int v14 = (char *)*((void *)this + 1);
      if ((unint64_t)v14 >= *((void *)this + 2) || *v14 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v37))return 0; {
      }
        }
      else
      {
        unsigned int v37 = *v14;
        *((void *)this + 1) = v14 + 1;
      }
      int v16 = *((_DWORD *)this + 14);
      int v17 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v16 + 1;
      if (v16 >= v17) {
        return 0;
      }
      int v18 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v37);
      if (!sub_10005D58C(v13, this, v19, v20) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v18);
      int v21 = *((_DWORD *)this + 14);
      BOOL v22 = __OFSUB__(v21, 1);
      int v23 = v21 - 1;
      if (v23 < 0 == v22) {
        *((_DWORD *)this + 14) = v23;
      }
      int v24 = (char *)*((void *)this + 1);
      uint64_t v11 = (char *)*((void *)this + 2);
      if (v24 < v11 && *v24 == 16)
      {
        do
        {
          unint64_t v12 = v24 + 1;
          *((void *)this + 1) = v12;
LABEL_33:
          unsigned int v36 = 0;
          if (v12 >= v11 || *v12 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v36);
            if (!result) {
              return result;
            }
            unsigned int v25 = v36;
            int v26 = *(_DWORD *)(a1 + 32);
            uint64_t v27 = *(void *)(a1 + 24);
            if (v26 == *(_DWORD *)(a1 + 36))
            {
LABEL_39:
              if (2 * v26 <= v26 + 1) {
                int v28 = v26 + 1;
              }
              else {
                int v28 = 2 * v26;
              }
              if (v28 <= 4) {
                int v28 = 4;
              }
              *(_DWORD *)(a1 + 36) = v28;
              operator new[]();
            }
          }
          else
          {
            unsigned int v25 = *v12;
            *((void *)this + 1) = v12 + 1;
            int v26 = *(_DWORD *)(a1 + 32);
            uint64_t v27 = *(void *)(a1 + 24);
            if (v26 == *(_DWORD *)(a1 + 36)) {
              goto LABEL_39;
            }
          }
          *(_DWORD *)(a1 + 32) = v26 + 1;
          *(_DWORD *)(v27 + 4 * v26) = v25;
          int v29 = *(_DWORD *)(a1 + 36) - *(_DWORD *)(a1 + 32);
          if (v29 >= 1)
          {
            for (int i = v29 + 1; i > 1; --i)
            {
              char v33 = (unsigned char *)*((void *)this + 1);
              unint64_t v34 = *((void *)this + 2);
              if ((unint64_t)v33 >= v34 || *v33 != 16) {
                break;
              }
              *((void *)this + 1) = v33 + 1;
              unsigned int v35 = 0;
              if ((unint64_t)(v33 + 1) >= v34 || (char)v33[1] < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v35);
                if (!result) {
                  return result;
                }
                unsigned int v31 = v35;
                uint64_t v27 = *v6;
              }
              else
              {
                unsigned int v31 = v33[1];
                *((void *)this + 1) = v33 + 2;
              }
              uint64_t v32 = *(int *)(a1 + 32);
              *(_DWORD *)(a1 + 32) = v32 + 1;
              *(_DWORD *)(v27 + 4 * v32) = v31;
            }
          }
LABEL_55:
          int v24 = (char *)*((void *)this + 1);
          uint64_t v11 = (char *)*((void *)this + 2);
        }
        while (v24 < v11 && *v24 == 16);
        if (v24 == v11 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
        {
          *((_DWORD *)this + ++*(void *)(result + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)this + 36) = 1;
          return result;
        }
      }
    }
    else
    {
LABEL_19:
      if (v10 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v7, a4) & 1) == 0)return 0; {
    }
      }
  }
  if (TagFallback >> 3 != 2)
  {
    int v10 = TagFallback & 7;
    goto LABEL_19;
  }
  int v10 = TagFallback & 7;
  if (v10 != 2)
  {
    if ((TagFallback & 7) == 0)
    {
      unint64_t v12 = (char *)*((void *)this + 1);
      uint64_t v11 = (char *)*((void *)this + 2);
      goto LABEL_33;
    }
    goto LABEL_19;
  }
  uint64_t result = sub_10032682C(this, v6);
  if (result) {
    goto LABEL_55;
  }
  return result;
}

void sub_10032CBB4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10032CBDC(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 44))
  {
    uint64_t v6 = *(void *)(result + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_100492A30 + 16);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(*(void *)(v5 + 24) + 4 * v7++), (int)a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  int v10 = *(void **)(v5 + 8);
  uint64_t v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10032CCA0(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 44))
  {
    uint64_t v6 = (unsigned int *)*((void *)this + 2);
    if (v6)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v7 = a2 + 1;
      int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[7];
      if (v8 <= 0x7F)
      {
LABEL_4:
        *((unsigned char *)v4 + 1) = (_BYTE)v8;
        uint64_t v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_7:
        uint64_t v4 = sub_100322A98((wireless_diagnostics::google::protobuf::internal::WireFormat *)v6, v9, a3, a4);
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v6 = *(unsigned int **)(qword_100492A30 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v7 = a2 + 1;
      int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6[7];
      if (v8 <= 0x7F) {
        goto LABEL_4;
      }
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    goto LABEL_7;
  }
LABEL_8:
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      while (1)
      {
        while (1)
        {
          uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(int *)(*((void *)this + 3) + 4 * v10);
          *(unsigned char *)uint64_t v4 = 16;
          unint64_t v12 = (unint64_t)v4 + 1;
          if ((v11 & 0x80000000) == 0) {
            break;
          }
          uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v11, v12, a3);
          if (++v10 >= *((int *)this + 8)) {
            goto LABEL_16;
          }
        }
        if (v11 > 0x7F) {
          break;
        }
        *((unsigned char *)v4 + 1) = (_BYTE)v11;
        uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
        if (++v10 >= *((int *)this + 8)) {
          goto LABEL_16;
        }
      }
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v11, v12, a3);
      ++v10;
    }
    while (v10 < *((int *)this + 8));
  }
LABEL_16:
  int v15 = (void *)*((void *)this + 1);
  int v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, v4, a3);
}

uint64_t sub_10032CDF8(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if (*(unsigned char *)(a1 + 44))
  {
    uint64_t v9 = *(void *)(a1 + 16);
    if (v9)
    {
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100322BD0(v9, a2);
      if (v10 < 0x80) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100322BD0(*(void *)(qword_100492A30 + 16), a2);
      if (v10 < 0x80)
      {
LABEL_10:
        int v3 = v10 + 2;
        int v4 = *(_DWORD *)(a1 + 32);
        if (v4 < 1) {
          goto LABEL_3;
        }
        goto LABEL_14;
      }
    }
    int v3 = v10
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2)
       + 1;
    int v4 = *(_DWORD *)(a1 + 32);
    if (v4 < 1) {
      goto LABEL_3;
    }
    goto LABEL_14;
  }
  int v3 = 0;
  int v4 = *(_DWORD *)(a1 + 32);
  if (v4 < 1)
  {
LABEL_3:
    int v5 = 0;
    goto LABEL_4;
  }
LABEL_14:
  uint64_t v11 = 0;
  int v5 = 0;
  do
  {
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 24)
                                                                                           + 4 * v11);
    if ((v13 & 0x80000000) != 0)
    {
      int v12 = 10;
    }
    else if (v13 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13, a2);
      int v4 = *(_DWORD *)(a1 + 32);
    }
    else
    {
      int v12 = 1;
    }
    v5 += v12;
    ++v11;
  }
  while (v11 < v4);
LABEL_4:
  uint64_t v6 = (v5 + v3 + v4);
  unsigned int v7 = *(void **)(a1 + 8);
  if (v7 && *v7 != v7[1]) {
    uint64_t v6 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v6;
  }
  *(_DWORD *)(a1 + 40) = v6;
  return v6;
}

uint64_t sub_10032CF20(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10032C2D4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10032D000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032D014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10032D028(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10032D0B4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 44) & 1) == 0) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2) {
    return (*(uint64_t (**)(void))(*(void *)v2 + 40))();
  }
  else {
    return (*(uint64_t (**)(void))(**(void **)(qword_100492A30 + 16) + 40))();
  }
}

uint64_t sub_10032D120()
{
  uint64_t v0 = qword_10047E208;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100321450;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E1F0;
}

void sub_10032D1B0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10032D1C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_10032D1CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_10032D1D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10032D1DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_10032D1E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 208);
}

uint64_t sub_10032D1EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_10032D1F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_10032D1FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10032D204(uint64_t a1)
{
  return *(unsigned int *)(a1 + 76);
}

uint64_t sub_10032D20C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_10032D214(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10032D21C(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_100324878(*(void *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_10032D360()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10032D388(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_100064680(*(void *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_10032D4C0()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10032D4E8(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    __asm { FMOV            V8.2S, #1.0 }
    do
    {
      uint64_t v12 = *(void *)(*(void *)a2 + 8 * v5);
      int v13 = *((_DWORD *)a1 + 3);
      uint64_t v14 = *((int *)a1 + 2);
      if ((int)v14 >= v13)
      {
        if (v13 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v13 + 1);
          int v13 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v13 + 1;
        operator new();
      }
      uint64_t v11 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v14 + 1;
      uint64_t result = sub_100062A8C(*(_DWORD **)(v11 + 8 * v14), v12);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_10032D628()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10032D654()
{
  uint64_t v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_10032DA30();
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  std::string __p = operator new(0x20uLL);
  long long v3 = xmmword_1003E7240;
  strcpy((char *)__p, "protobuf/gen/venue.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  operator delete(__p);
  if (!FileByName)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  }
  qword_10047E220 = *(void *)(FileByName + 80);
  operator new();
}

void sub_10032D9B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032D9CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032D9E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10032DA30(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10047E210 & 1) == 0)
  {
    byte_10047E210 = 1;
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/venue.pb.cc", a4);
    sub_1003328D4(v4, v5, v6, v7);
    sub_10031FE14(v8, v9, v10, v11);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n\x18protobuf/gen/venue.proto\x12\vproto.venue\x1A\x1Eprotobuf/gen/coordinates.proto\x1A\x17protobuf/gen/math.proto\"B\n\rPolygonBounds\x12\x0E\n\x02xs\x18\x01 \x03(\x01B\x02\x10\x01\x12\x0E\n\x02ys\x18\x02 \x03(\x01B\x02\x10\x01\x12\x11\n\ttolerance\x18\x03 \x01(\x01\"u\n\x0EGeoJsonPolygon\x120\n\fexteriorRing\x18\x01 \x01(\v2\x1A.proto.venue.PolygonBounds\x121\n\rinteriorRings\x18\x02 \x03(\v2\x1A.proto.venue.PolygonBounds\"\x80\x01\n\x1DIndoorOutdoorLikelihoodParams\x12\x1E\n\x16indoorSurveyOnTileMean\x18\x01 \x02(\x01\x12\x1D\n\x15indoorSurveyOnTileMin\x18\x02 \x02(\x01\x12 \n\x18indoorSurveyOnTileStdDev\x18\x03 \x02(\x01\"\xB1\b\n\rFloorMetadata\x12\v\n\x03uid\x18\x01 \x02(\t\x12\x13\n"
                                                                "\vfloorNumber\x18\x02 \x01(\x05\x12\x16\n"
                                                                "\x0ErssiMapVersion\x18\x03 \x02(\x03\x12/\n"
                                                                "\ftangentPoint\x18\x04 \x02(\v2\x19.proto.coordinates.La"
                                                                "tLon\x12/\n"
                                                                "\tglobalDbm\x18\x05 \x02(\v2\x1C.proto.math.ObservationS"
                                                                "tats\x12N\n"
                                                                "\x17radioMapCoordinateFrame\x18\x06 \x02(\v2-.proto.coor"
                                                                "dinates.BoundedCellCoordinateFrame\x12Q\n"
                                                                "\x1DwifiScanCountLikelihoodParams\x18\a \x02(\v2*.proto."
                                                                "venue.IndoorOutdoorLikelihoodParams\x12S\n"
                                                                "\x1FbeaconScanCountLikelihoodParams\x18\n"
                                                                " \x01(\v2*.proto.venue.IndoorOutdoorLikelihoodParams\x12"
                                                                "0\n"
                                                                "\fsurveyBounds\x18\b \x03(\v2\x1A.proto.venue.PolygonBou"
                                                                "nds\x12\f\n"
                                                                "\x04area\x18\t \x01(\x01\x12K\n"
                                                                "\fencodingType\x18\v \x01(\x0E2!.proto.venue.RadioMapEnc"
                                                                "odingType:\x12FixedPointEncoding\x12J\n"
                                                                "\x11mapCellLookupMode\x18\f \x01(\x0E2\x1E.proto.venue.M"
                                                                "apCellLookupMode:\x0FNearestNeighbor\x124\n"
                                                                "\x0FfloorplanBounds\x18\r \x03(\v2\x1B.proto.venue.GeoJs"
                                                                "onPolygon\x12'\n"
                                                                "\x1Fwifi2GpsFusionAccuracyThreshold\x18\x0E \x01(\x01\x12"
                                                                "-\n"
                                                                "\acontext\x18\x0F \x01(\x0E2\x1C.proto.venue.LocationCon"
                                                                "text\x12)\n"
                                                                "!wifi2GpsInjectionParticleFraction\x18\x10 \x01(\x01\x12"
                                                                "L\n"
                                                                "\x14gpsAccuracyTransform\x18\x11 \x01(\v2..proto.math.Li"
                                                                "nearSaturationFunctionParameters\x12K\n"
                                                                "\x13gpsAzimuthTransform\x18\x12 \x01(\v2..proto.math.Lin"
                                                                "earSaturationFunctionParameters\x12'\n"
                                                                "\x1FcoarseRegionalWithWifiLocations\x18\x13 \x01(\b\x12\x16"
                                                                "\n"
                                                                "\x0EaltitudeMeters\x18\x14 \x01(\x01\x12\x1E\n"
                                                                "\x16verticalAccuracyMeters\x18\x15 \x01(\x01\"\x95\x01\n"
                                                                "\tOccupancy\x12F\n"
                                                                "\x0FcoordinateFrame\x18\x01 \x02(\v2-.proto.coordinates."
                                                                "BoundedCellCoordinateFrame\x12\x10\n"
                                                                "\bwalkable\x18\x02 \x02(\f\x12.\n"
                                                                "\aversion\x18\x03 \x01(\x0E2\x1D.proto.venue.OccupancyVe"
                                                                "rsion*6\n"
                                                                "\x11MapCellLookupMode\x12\x13\n"
                                                                "\x0FNearestNeighbor\x10\x01\x12\f\n"
                                                                "\bBilinear\x10\x02*\xC0\x01\n"
                                                                "\x14RadioMapEncodingType\x12\x1D\n"
                                                                "\x19MangledFixedPointEncoding\x10\x01\x12\x16\n"
                                                                "\x12FixedPointEncoding\x10\x02\x12\x1F\n"
                                                                "\x1BRadiozapEncodingNoCertainty\x10\x03\x12\x14\n"
                                                                "\x10RadiozapEncoding\x10\x04\x12\x19\n"
                                                                "\x15PathLossModelEncoding\x10\x05\x12\x1F\n"
                                                                "\x1BRadiozapEncoding_deprecated\x10e*+\n"
                                                                "\x0FLocationContext\x12\n"
                                                                "\n"
                                                                "\x06Indoor\x10\x01\x12\f\n"
                                                                "\bRegional\x10\x02*>\n"
                                                                "\x10OccupancyVersion\x12\x0F\n"
                                                                "\vSurveyBased\x10\x01\x12\x19\n"
                                                                "\x15FloorplanOpeningBased\x10\x02B\x1E\n"
                                                                "\x1Ccom.apple.indoor.proto.venue",
      (const void *)0x7F2,
      v12);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_10032DD50()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10032DD7C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10032DDA8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10032DDD4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10032DE00()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10032DE2C()
{
  if (qword_100492A38) {
    (*(void (**)(uint64_t))(*(void *)qword_100492A38 + 8))(qword_100492A38);
  }
  if (qword_10047E228) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E228 + 8))(qword_10047E228);
  }
  if (qword_100492A40) {
    (*(void (**)(uint64_t))(*(void *)qword_100492A40 + 8))(qword_100492A40);
  }
  if (qword_10047E238) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E238 + 8))(qword_10047E238);
  }
  if (qword_100492A48) {
    (*(void (**)(uint64_t))(*(void *)qword_100492A48 + 8))(qword_100492A48);
  }
  if (qword_10047E248) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E248 + 8))(qword_10047E248);
  }
  if (qword_100492A50) {
    (*(void (**)(uint64_t))(*(void *)qword_100492A50 + 8))(qword_100492A50);
  }
  if (qword_10047E258) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E258 + 8))(qword_10047E258);
  }
  if (qword_100492A58) {
    (*(void (**)(uint64_t))(*(void *)qword_100492A58 + 8))(qword_100492A58);
  }
  uint64_t result = qword_10047E268;
  if (qword_10047E268)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10047E268 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_10032E034()
{
  uint64_t v0 = qword_10047E290;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v6[1] = sub_10032D654;
    char v7 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v6);
  }
  if (!qword_100492A38) {
    ((void (*)(void))sub_10032DA30)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_100492A40) {
    sub_10032DA30(v1);
  }
  uint64_t v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_100492A48) {
    sub_10032DA30(v2);
  }
  uint64_t v3 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_100492A50) {
    sub_10032DA30(v3);
  }
  uint64_t v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_100492A58) {
    sub_10032DA30(v4);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_10032E184(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

BOOL sub_10032E198(int a1)
{
  return (a1 - 1) < 5 || a1 == 101;
}

uint64_t sub_10032E1B4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = *(_DWORD *)(a1 + 24);
    int v6 = *(_DWORD *)(a1 + 28);
    int v7 = v5 + v4;
    if (v6 < v7)
    {
      int v8 = 2 * v6;
      if (2 * v6 <= v7) {
        int v8 = v7;
      }
      if (v8 <= 4) {
        int v8 = 4;
      }
      *(_DWORD *)(a1 + 2++*(void *)(result + 8) = v8;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 16) + 8 * v5), *(const void **)(a2 + 16), 8 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    int v10 = *(_DWORD *)(a1 + 48);
    int v11 = *(_DWORD *)(a1 + 52);
    int v12 = v10 + v9;
    if (v11 < v12)
    {
      int v13 = 2 * v11;
      if (2 * v11 <= v12) {
        int v13 = v12;
      }
      if (v13 <= 4) {
        int v13 = 4;
      }
      *(_DWORD *)(a1 + 52) = v13;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 40) + 8 * v10), *(const void **)(a2 + 40), 8 * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }
  if ((*(unsigned char *)(a2 + 76) & 4) != 0)
  {
    uint64_t v14 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 76) |= 4u;
    *(void *)(a1 + 64) = v14;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10032E3C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032E3D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032E3EC(void *a1)
{
  *a1 = off_100467908;
  if (a1[5]) {
    operator delete[]();
  }
  if (a1[2]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_10032E47C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 72) = a2;
  return result;
}

void sub_10032E484()
{
}

void sub_10032E4EC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10032E514(uint64_t a1)
{
  if ((*(_WORD *)(a1 + 76) & 0x3FC) != 0) {
    *(void *)(a1 + 64) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 10) = 0;
  *((_DWORD *)result + 17) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10032E540(uint64_t result, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  if (*(int *)(result + 24) >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2, 0xAu);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2, *(_DWORD *)(v4 + 32));
    if (*(int *)(v4 + 24) >= 1)
    {
      uint64_t v5 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian64(a2, *(void *)(*(void *)(v4 + 16) + 8 * v5++));
      while (v5 < *(int *)(v4 + 24));
    }
  }
  if (*(int *)(v4 + 48) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2, 0x12u);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2, *(_DWORD *)(v4 + 56));
    if (*(int *)(v4 + 48) >= 1)
    {
      uint64_t v6 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian64(a2, *(void *)(*(void *)(v4 + 40) + 8 * v6++));
      while (v6 < *(int *)(v4 + 48));
    }
  }
  if ((*(unsigned char *)(v4 + 76) & 4) != 0) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 64), a3);
  }
  int v9 = *(void **)(v4 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

unsigned char *sub_10032E668(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  if (*((int *)this + 6) >= 1)
  {
    *a2 = 10;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if (v4 > 0x7F)
    {
      a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
      if (*((int *)this + 6) < 1) {
        goto LABEL_8;
      }
    }
    else
    {
      a2[1] = (_BYTE)v4;
      a2 += 2;
      if (*((int *)this + 6) < 1) {
        goto LABEL_8;
      }
    }
    uint64_t v5 = 0;
    do
    {
      *(void *)a2 = *(void *)(*((void *)this + 2) + 8 * v5);
      a2 += 8;
      ++v5;
    }
    while (v5 < *((int *)this + 6));
  }
LABEL_8:
  if (*((int *)this + 12) <= 0) {
    goto LABEL_15;
  }
  *a2 = 18;
  uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if (v6 > 0x7F)
  {
    a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, (int)a2 + 1, a3);
    if (*((int *)this + 12) < 1) {
      goto LABEL_15;
    }
  }
  else
  {
    a2[1] = (_BYTE)v6;
    a2 += 2;
    if (*((int *)this + 12) < 1) {
      goto LABEL_15;
    }
  }
  uint64_t v7 = 0;
  do
  {
    *(void *)a2 = *(void *)(*((void *)this + 5) + 8 * v7);
    a2 += 8;
    ++v7;
  }
  while (v7 < *((int *)this + 12));
LABEL_15:
  if ((*((unsigned char *)this + 76) & 4) != 0)
  {
    uint64_t v8 = *((void *)this + 8);
    *a2 = 25;
    *(void *)(a2 + 1) = v8;
    a2 += 9;
  }
  int v11 = (void *)*((void *)this + 1);
  int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v9 = v11;
  if (!v11 || *v9 == v9[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_10032E7FC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = (*(unsigned __int8 *)(a1 + 76) << 29 >> 31) & 9;
  int v4 = *(_DWORD *)(a1 + 24);
  unsigned int v5 = 8 * v4;
  if (v4 >= 1)
  {
    if (v5 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v4), a2)+ 1;
    }
    else {
      int v6 = 2;
    }
    v3 += v6;
  }
  *(_DWORD *)(a1 + 32) = v5;
  unsigned int v7 = v3 + v5;
  int v8 = *(_DWORD *)(a1 + 48);
  unsigned int v9 = 8 * v8;
  if (v8 >= 1)
  {
    if (v9 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v8), a2)+ 1;
    }
    else {
      int v10 = 2;
    }
    v7 += v10;
  }
  int v11 = *(void **)(a1 + 8);
  *(_DWORD *)(a1 + 56) = v9;
  uint64_t v12 = v7 + v9;
  if (v11 && *v11 != v11[1]) {
    uint64_t v12 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v12;
  }
  *(_DWORD *)(a1 + 72) = v12;
  return v12;
}

uint64_t sub_10032E8CC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10032E1B4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10032E9AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032E9C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10032E9D4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10032EA60()
{
  return 1;
}

uint64_t sub_10032EA68()
{
  uint64_t v0 = qword_10047E290;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10032D654;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E220;
}

void sub_10032EAF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10032EB0C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
    sub_1003322FC((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), a2 + 24);
    if ((*(unsigned char *)(a2 + 52) & 1) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  else
  {
    sub_1003322FC((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), a2 + 24);
    if ((*(unsigned char *)(a2 + 52) & 1) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
  }
  *(_DWORD *)(a1 + 52) |= 1u;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    operator new();
  }
  uint64_t v5 = *(void *)(a2 + 16);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_100492A40 + 16);
  }
  sub_10032E1B4(v4, v5);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10032EC44()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10032EC6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032EC80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10032EC98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 4++*(void *)(result + 8) = a2;
  return result;
}

void sub_10032ECA0()
{
}

void sub_10032ED0C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10032ED34(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 52))
  {
    this = *(void *)(this + 16);
    if (this)
    {
      if ((*(_WORD *)(this + 76) & 0x3FC) != 0) {
        *(void *)(this + 64) = 0;
      }
      uint64_t v2 = *(void *)(this + 8);
      this += 8;
      *(_DWORD *)(this + 16) = 0;
      *(_DWORD *)(this + 40) = 0;
      *(_DWORD *)(this + 6++*(void *)(result + 8) = 0;
      if (v2) {
        this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
      }
    }
  }
  if (*(int *)(v1 + 32) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = *(void *)(*(void *)(v1 + 24) + 8 * v3);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 32))(v4);
      ++v3;
    }
    while (v3 < *(int *)(v1 + 32));
  }
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v5 + 6) = 0;
  *((_DWORD *)v5 + 11) = 0;
  if (v6)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
  }
  return this;
}

uint64_t sub_10032EE08(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 52))
  {
    uint64_t v6 = *(void *)(result + 16);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_100492A40 + 16);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v7 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 24) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 32));
  }
  int v10 = *(void **)(v5 + 8);
  unsigned int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v8 = v10;
  if (v10 && *v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10032EECC(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if (*((unsigned char *)this + 52))
  {
    uint64_t v5 = (unsigned int *)*((void *)this + 2);
    if (v5)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v6 = a2 + 1;
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v5[18];
      if (v7 <= 0x7F)
      {
LABEL_4:
        *((unsigned char *)v3 + 1) = (_BYTE)v7;
        int v8 = (char *)v3 + 2;
LABEL_7:
        uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10032E668((wireless_diagnostics::google::protobuf::internal::WireFormat *)v5, v8, a3);
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v5 = *(unsigned int **)(qword_100492A40 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v6 = a2 + 1;
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v5[18];
      if (v7 <= 0x7F) {
        goto LABEL_4;
      }
    }
    int v8 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v7, v6, a3);
    goto LABEL_7;
  }
LABEL_8:
  if (*((int *)this + 8) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      int v11 = *(unsigned int **)(*((void *)this + 3) + 8 * v9);
      *(unsigned char *)uint64_t v3 = 18;
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[18];
      if (v12 > 0x7F)
      {
        int v10 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)v3 + 1, a3);
      }
      else
      {
        *((unsigned char *)v3 + 1) = (_BYTE)v12;
        int v10 = (char *)v3 + 2;
      }
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10032E668((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v10, a3);
      ++v9;
    }
    while (v9 < *((int *)this + 8));
  }
  int v15 = (void *)*((void *)this + 1);
  uint64_t v14 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v13 = v15;
  if (!v15 || *v13 == v13[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v14, v3, a3);
}

uint64_t sub_10032F008(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  if ((*(unsigned char *)(a1 + 52) & 1) == 0)
  {
    int v3 = *(_DWORD *)(a1 + 32);
    uint64_t v4 = v3;
    if (v3 < 1) {
      goto LABEL_41;
    }
    goto LABEL_23;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    uint64_t v5 = *(void *)(qword_100492A40 + 16);
  }
  int v6 = (*(unsigned __int8 *)(v5 + 76) << 29 >> 31) & 9;
  int v7 = *(_DWORD *)(v5 + 24);
  unsigned int v8 = 8 * v7;
  if (v7 >= 1)
  {
    if (v8 >= 0x80) {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v7), a2)+ 1;
    }
    else {
      int v9 = 2;
    }
    v6 += v9;
  }
  *(_DWORD *)(v5 + 32) = v8;
  unsigned int v10 = v6 + v8;
  int v11 = *(_DWORD *)(v5 + 48);
  unsigned int v12 = 8 * v11;
  if (v11 >= 1)
  {
    if (v12 >= 0x80) {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v11), a2)+ 1;
    }
    else {
      int v13 = 2;
    }
    v10 += v13;
  }
  uint64_t v14 = *(void **)(v5 + 8);
  *(_DWORD *)(v5 + 56) = v12;
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v10 + v12);
  if (v14 && *v14 != v14[1]) {
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8), a2)+ v15);
  }
  *(_DWORD *)(v5 + 72) = v15;
  if (v15 >= 0x80) {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
  }
  else {
    int v16 = 1;
  }
  int v17 = *(_DWORD *)(a1 + 32);
  uint64_t v4 = (v17 + v15 + v16 + 1);
  if (v17 >= 1)
  {
LABEL_23:
    uint64_t v18 = 0;
    do
    {
      uint64_t v20 = *(void *)(*(void *)(a1 + 24) + 8 * v18);
      int v21 = (*(unsigned __int8 *)(v20 + 76) << 29 >> 31) & 9;
      int v22 = *(_DWORD *)(v20 + 24);
      unsigned int v23 = 8 * v22;
      if (v22 >= 1)
      {
        if (v23 >= 0x80) {
          int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v22), a2)+ 1;
        }
        else {
          int v24 = 2;
        }
        v21 += v24;
      }
      *(_DWORD *)(v20 + 32) = v23;
      unsigned int v25 = v21 + v23;
      int v26 = *(_DWORD *)(v20 + 48);
      unsigned int v27 = 8 * v26;
      if (v26 >= 1)
      {
        if (v27 >= 0x80) {
          int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v26), a2)+ 1;
        }
        else {
          int v28 = 2;
        }
        v25 += v28;
      }
      int v29 = *(void **)(v20 + 8);
      *(_DWORD *)(v20 + 56) = v27;
      uint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v25 + v27);
      if (v29 && *v29 != v29[1]) {
        uint64_t v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v20 + 8), a2)+ v30);
      }
      *(_DWORD *)(v20 + 72) = v30;
      if (v30 >= 0x80) {
        int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30, a2);
      }
      else {
        int v19 = 1;
      }
      uint64_t v4 = (v30 + v4 + v19);
      ++v18;
    }
    while (v18 < *(int *)(a1 + 32));
  }
LABEL_41:
  unsigned int v31 = *(void **)(a1 + 8);
  if (v31 && *v31 != v31[1]) {
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v4;
  }
  *(_DWORD *)(a1 + 4++*(void *)(result + 8) = v4;
  return v4;
}

uint64_t sub_10032F254(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10032EB0C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10032F334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032F348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10032F35C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10032F3E8()
{
  return 1;
}

uint64_t sub_10032F3F0()
{
  uint64_t v0 = qword_10047E290;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10032D654;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E230;
}

void sub_10032F480(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10032F494(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 44);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((*(unsigned char *)(a2 + 44) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    uint64_t v8 = *(void *)(a2 + 24);
    *(_DWORD *)(a1 + 44) |= 2u;
    *(void *)(a1 + ++*(void *)(result + 24) = v8;
    if ((*(_DWORD *)(a2 + 44) & 4) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 44) |= 1u;
  *(void *)(a1 + 16) = v7;
  int v4 = *(_DWORD *)(a2 + 44);
  if ((v4 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v4 & 4) != 0)
  {
LABEL_7:
    uint64_t v5 = *(void *)(a2 + 32);
    *(_DWORD *)(a1 + 44) |= 4u;
    *(void *)(a1 + 32) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10032F574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032F588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032F59C(uint64_t a1)
{
  *(void *)a1 = off_100467A68;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_10032F5F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 40) = a2;
  return result;
}

void sub_10032F5F8()
{
}

void sub_10032F65C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10032F684(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 44))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + ++*(void *)(result + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 9) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10032F6A8(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 44);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    int v5 = *(_DWORD *)(v4 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  if ((*(_DWORD *)(v4 + 44) & 4) == 0)
  {
LABEL_4:
    uint64_t v8 = *(void **)(v4 + 8);
    uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    int v6 = v8;
    if (!v8) {
      return result;
    }
    goto LABEL_9;
  }
LABEL_8:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 32), a3);
  int v9 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  int v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_9:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_10032F760(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 44);
  if (v3)
  {
    uint64_t v7 = *(void *)(a1 + 16);
    *(unsigned char *)a2 = 9;
    *(void *)(a2 + 1) = v7;
    a2 += 9;
    int v3 = *(_DWORD *)(a1 + 44);
    if ((v3 & 2) == 0)
    {
LABEL_3:
      if ((v3 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t v9 = *(void *)(a1 + 32);
      *(unsigned char *)a2 = 25;
      *(void *)(a2 + 1) = v9;
      a2 += 9;
      unsigned int v10 = *(void **)(a1 + 8);
      uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v5 = v10;
      if (!v10) {
        return a2;
      }
      goto LABEL_9;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(a1 + 24);
  *(unsigned char *)a2 = 17;
  *(void *)(a2 + 1) = v8;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 44) & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  int v6 = *(void **)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_9:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_10032F890(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 44);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if ((v3 & 4) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 44)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 40) = v5;
  return v5;
}

uint64_t sub_10032F904(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10032F494((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10032F9E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10032F9F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10032FA0C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10032FA98()
{
  uint64_t v0 = qword_10047E290;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10032D654;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E240;
}

void sub_10032FB28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10032FB3C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v33);
  }
  sub_1003322FC((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 80), a2 + 80);
  sub_100332444((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 112), a2 + 112);
  int v4 = *(_DWORD *)(a2 + 200);
  if (!(_BYTE)v4) {
    goto LABEL_12;
  }
  if (v4)
  {
    uint64_t v5 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 200) |= 1u;
    int v6 = *(std::string **)(a1 + 16);
    if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v6, v5);
    int v4 = *(_DWORD *)(a2 + 200);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v7 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 200) |= 2u;
  *(_DWORD *)(a1 + 56) = v7;
  int v4 = *(_DWORD *)(a2 + 200);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v8 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 200) |= 4u;
  *(void *)(a1 + ++*(void *)(result + 24) = v8;
  int v4 = *(_DWORD *)(a2 + 200);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
LABEL_25:
    *(_DWORD *)(a1 + 200) |= 0x10u;
    uint64_t v11 = *(void *)(a1 + 40);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = *(void *)(a2 + 40);
    if (v12)
    {
      sub_1003201F8(v11, v12);
      int v4 = *(_DWORD *)(a2 + 200);
      if ((v4 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      sub_1003201F8(v11, *(void *)(qword_100492A50 + 40));
      int v4 = *(_DWORD *)(a2 + 200);
      if ((v4 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
LABEL_10:
    if ((v4 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_37;
  }
LABEL_19:
  *(_DWORD *)(a1 + 200) |= 8u;
  uint64_t v9 = *(void *)(a1 + 32);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = *(void *)(a2 + 32);
  if (v10)
  {
    sub_100332E6C(v9, v10);
    int v4 = *(_DWORD *)(a2 + 200);
    if ((v4 & 0x10) != 0) {
      goto LABEL_25;
    }
  }
  else
  {
    sub_100332E6C(v9, *(void *)(qword_100492A50 + 32));
    int v4 = *(_DWORD *)(a2 + 200);
    if ((v4 & 0x10) != 0) {
      goto LABEL_25;
    }
  }
LABEL_9:
  if ((v4 & 0x20) == 0) {
    goto LABEL_10;
  }
LABEL_31:
  *(_DWORD *)(a1 + 200) |= 0x20u;
  uint64_t v13 = *(void *)(a1 + 48);
  if (!v13) {
    operator new();
  }
  uint64_t v14 = *(void *)(a2 + 48);
  if (v14)
  {
    sub_10007444C(v13, v14);
    int v4 = *(_DWORD *)(a2 + 200);
    if ((v4 & 0x40) != 0)
    {
LABEL_37:
      *(_DWORD *)(a1 + 200) |= 0x40u;
      uint64_t v15 = *(void *)(a1 + 64);
      if (!v15) {
        operator new();
      }
      uint64_t v16 = *(void *)(a2 + 64);
      if (v16)
      {
        sub_10032F494(v15, v16);
        int v4 = *(_DWORD *)(a2 + 200);
        if ((v4 & 0x80) != 0) {
          goto LABEL_43;
        }
      }
      else
      {
        sub_10032F494(v15, *(void *)(qword_100492A50 + 64));
        int v4 = *(_DWORD *)(a2 + 200);
        if ((v4 & 0x80) != 0) {
          goto LABEL_43;
        }
      }
LABEL_12:
      if ((v4 & 0x1FE00) == 0) {
        goto LABEL_56;
      }
      goto LABEL_49;
    }
  }
  else
  {
    sub_10007444C(v13, *(void *)(qword_100492A50 + 48));
    int v4 = *(_DWORD *)(a2 + 200);
    if ((v4 & 0x40) != 0) {
      goto LABEL_37;
    }
  }
LABEL_11:
  if ((v4 & 0x80) == 0) {
    goto LABEL_12;
  }
LABEL_43:
  *(_DWORD *)(a1 + 200) |= 0x80u;
  uint64_t v17 = *(void *)(a1 + 72);
  if (!v17) {
    operator new();
  }
  uint64_t v18 = *(void *)(a2 + 72);
  if (v18)
  {
    sub_10032F494(v17, v18);
    int v4 = *(_DWORD *)(a2 + 200);
    if ((v4 & 0x1FE00) == 0) {
      goto LABEL_56;
    }
  }
  else
  {
    sub_10032F494(v17, *(void *)(qword_100492A50 + 72));
    int v4 = *(_DWORD *)(a2 + 200);
    if ((v4 & 0x1FE00) == 0) {
      goto LABEL_56;
    }
  }
LABEL_49:
  if ((v4 & 0x200) != 0)
  {
    uint64_t v26 = *(void *)(a2 + 104);
    *(_DWORD *)(a1 + 200) |= 0x200u;
    *(void *)(a1 + 104) = v26;
    int v4 = *(_DWORD *)(a2 + 200);
    if ((v4 & 0x400) == 0)
    {
LABEL_51:
      if ((v4 & 0x800) == 0) {
        goto LABEL_52;
      }
      goto LABEL_74;
    }
  }
  else if ((v4 & 0x400) == 0)
  {
    goto LABEL_51;
  }
  int v27 = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 200) |= 0x400u;
  *(_DWORD *)(a1 + 60) = v27;
  int v4 = *(_DWORD *)(a2 + 200);
  if ((v4 & 0x800) == 0)
  {
LABEL_52:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_53;
    }
LABEL_75:
    uint64_t v29 = *(void *)(a2 + 144);
    *(_DWORD *)(a1 + 200) |= 0x2000u;
    *(void *)(a1 + 144) = v29;
    int v4 = *(_DWORD *)(a2 + 200);
    if ((v4 & 0x4000) == 0)
    {
LABEL_54:
      if ((v4 & 0x8000) == 0) {
        goto LABEL_56;
      }
      goto LABEL_55;
    }
    goto LABEL_76;
  }
LABEL_74:
  int v28 = *(_DWORD *)(a2 + 136);
  *(_DWORD *)(a1 + 200) |= 0x800u;
  *(_DWORD *)(a1 + 136) = v28;
  int v4 = *(_DWORD *)(a2 + 200);
  if ((v4 & 0x2000) != 0) {
    goto LABEL_75;
  }
LABEL_53:
  if ((v4 & 0x4000) == 0) {
    goto LABEL_54;
  }
LABEL_76:
  int v30 = *(_DWORD *)(a2 + 140);
  *(_DWORD *)(a1 + 200) |= 0x4000u;
  *(_DWORD *)(a1 + 140) = v30;
  int v4 = *(_DWORD *)(a2 + 200);
  if ((v4 & 0x8000) != 0)
  {
LABEL_55:
    uint64_t v19 = *(void *)(a2 + 152);
    *(_DWORD *)(a1 + 200) |= 0x8000u;
    *(void *)(a1 + 152) = v19;
    int v4 = *(_DWORD *)(a2 + 200);
  }
LABEL_56:
  if ((v4 & 0xFF0000) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 200) |= 0x10000u;
    uint64_t v20 = *(void *)(a1 + 160);
    if (!v20) {
      operator new();
    }
    uint64_t v21 = *(void *)(a2 + 160);
    if (!v21) {
      uint64_t v21 = *(void *)(qword_100492A50 + 160);
    }
    sub_1000724DC(v20, v21);
    int v4 = *(_DWORD *)(a2 + 200);
  }
  if ((v4 & 0x20000) != 0)
  {
    *(_DWORD *)(a1 + 200) |= 0x20000u;
    uint64_t v22 = *(void *)(a1 + 168);
    if (!v22) {
      operator new();
    }
    uint64_t v23 = *(void *)(a2 + 168);
    if (!v23) {
      uint64_t v23 = *(void *)(qword_100492A50 + 168);
    }
    sub_1000724DC(v22, v23);
    int v4 = *(_DWORD *)(a2 + 200);
  }
  if ((v4 & 0x40000) == 0)
  {
    if ((v4 & 0x80000) == 0) {
      goto LABEL_69;
    }
LABEL_79:
    uint64_t v32 = *(void *)(a2 + 176);
    *(_DWORD *)(a1 + 200) |= 0x80000u;
    *(void *)(a1 + 176) = v32;
    if ((*(_DWORD *)(a2 + 200) & 0x100000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_70;
  }
  char v31 = *(unsigned char *)(a2 + 192);
  *(_DWORD *)(a1 + 200) |= 0x40000u;
  *(unsigned char *)(a1 + 192) = v31;
  int v4 = *(_DWORD *)(a2 + 200);
  if ((v4 & 0x80000) != 0) {
    goto LABEL_79;
  }
LABEL_69:
  if ((v4 & 0x100000) != 0)
  {
LABEL_70:
    uint64_t v24 = *(void *)(a2 + 184);
    *(_DWORD *)(a1 + 200) |= 0x100000u;
    *(void *)(a1 + 184) = v24;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10033013C()
{
}

void sub_100330164()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100330190()
{
}

void sub_1003301B4()
{
}

void sub_1003301D8()
{
}

void sub_1003301FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100330210(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100330224(uint64_t a1)
{
  sub_100064E80(a1);

  operator delete();
}

uint64_t sub_10033025C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 196) = a2;
  return result;
}

void sub_100330264()
{
}

void sub_100330314()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100330390(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 200);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v6 = *(_DWORD *)(v5 + 200);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 56), (int)a2, a4);
  int v6 = *(_DWORD *)(v5 + 200);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_13:
    uint64_t v7 = *(void *)(v5 + 32);
    if (v7)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, a2, a4);
      int v6 = *(_DWORD *)(v5 + 200);
      if ((v6 & 0x10) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(qword_100492A50 + 32), a2, a4);
      int v6 = *(_DWORD *)(v5 + 200);
      if ((v6 & 0x10) != 0) {
        goto LABEL_17;
      }
    }
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_21:
    uint64_t v9 = *(void *)(v5 + 48);
    if (v9)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
      if ((*(_DWORD *)(v5 + 200) & 0x40) != 0) {
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(qword_100492A50 + 48), a2, a4);
      if ((*(_DWORD *)(v5 + 200) & 0x40) != 0) {
        goto LABEL_25;
      }
    }
LABEL_8:
    if (*(int *)(v5 + 88) < 1) {
      goto LABEL_30;
    }
    goto LABEL_28;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 200);
  if ((v6 & 8) != 0) {
    goto LABEL_13;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_17:
  uint64_t v8 = *(void *)(v5 + 40);
  if (v8)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, a2, a4);
    int v6 = *(_DWORD *)(v5 + 200);
    if ((v6 & 0x20) != 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(qword_100492A50 + 40), a2, a4);
    int v6 = *(_DWORD *)(v5 + 200);
    if ((v6 & 0x20) != 0) {
      goto LABEL_21;
    }
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    goto LABEL_8;
  }
LABEL_25:
  uint64_t v10 = *(void *)(v5 + 64);
  if (!v10) {
    uint64_t v10 = *(void *)(qword_100492A50 + 64);
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, a2, a4);
  if (*(int *)(v5 + 88) >= 1)
  {
LABEL_28:
    uint64_t v11 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(*(void *)(v5 + 80) + 8 * v11++), a2, a4);
    while (v11 < *(int *)(v5 + 88));
  }
LABEL_30:
  int v12 = *(_DWORD *)(v5 + 200);
  if ((v12 & 0x200) == 0)
  {
    if ((v12 & 0x80) == 0) {
      goto LABEL_32;
    }
LABEL_37:
    uint64_t v13 = *(void *)(v5 + 72);
    if (v13)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v13, a2, a4);
      int v12 = *(_DWORD *)(v5 + 200);
      if ((v12 & 0x400) != 0) {
        goto LABEL_41;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(void *)(qword_100492A50 + 72), a2, a4);
      int v12 = *(_DWORD *)(v5 + 200);
      if ((v12 & 0x400) != 0) {
        goto LABEL_41;
      }
    }
LABEL_33:
    if ((v12 & 0x800) == 0) {
      goto LABEL_34;
    }
    goto LABEL_42;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (int)a2, *(double *)(v5 + 104), a3);
  int v12 = *(_DWORD *)(v5 + 200);
  if ((v12 & 0x80) != 0) {
    goto LABEL_37;
  }
LABEL_32:
  if ((v12 & 0x400) == 0) {
    goto LABEL_33;
  }
LABEL_41:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 60), (int)a2, a4);
  if ((*(_DWORD *)(v5 + 200) & 0x800) == 0)
  {
LABEL_34:
    if (*(int *)(v5 + 120) < 1) {
      goto LABEL_45;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_DWORD *)(v5 + 136), (int)a2, a4);
  if (*(int *)(v5 + 120) < 1) {
    goto LABEL_45;
  }
LABEL_43:
  uint64_t v14 = 0;
  do
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(void *)(*(void *)(v5 + 112) + 8 * v14++), a2, a4);
  while (v14 < *(int *)(v5 + 120));
LABEL_45:
  int v15 = *(_DWORD *)(v5 + 200);
  if ((v15 & 0x2000) != 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (int)a2, *(double *)(v5 + 144), a3);
    int v15 = *(_DWORD *)(v5 + 200);
    if ((v15 & 0x4000) == 0)
    {
LABEL_47:
      if ((v15 & 0x8000) == 0) {
        goto LABEL_48;
      }
      goto LABEL_57;
    }
  }
  else if ((v15 & 0x4000) == 0)
  {
    goto LABEL_47;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(_DWORD *)(v5 + 140), (int)a2, a4);
  int v15 = *(_DWORD *)(v5 + 200);
  if ((v15 & 0x8000) == 0)
  {
LABEL_48:
    if ((v15 & 0x10000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_58;
  }
LABEL_57:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, (int)a2, *(double *)(v5 + 152), a3);
  int v15 = *(_DWORD *)(v5 + 200);
  if ((v15 & 0x10000) == 0)
  {
LABEL_49:
    if ((v15 & 0x20000) == 0) {
      goto LABEL_50;
    }
LABEL_62:
    uint64_t v20 = *(void *)(v5 + 168);
    if (v20)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v20, a2, a4);
      int v15 = *(_DWORD *)(v5 + 200);
      if ((v15 & 0x40000) != 0) {
        goto LABEL_66;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(void *)(qword_100492A50 + 168), a2, a4);
      int v15 = *(_DWORD *)(v5 + 200);
      if ((v15 & 0x40000) != 0) {
        goto LABEL_66;
      }
    }
LABEL_51:
    if ((v15 & 0x80000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_67;
  }
LABEL_58:
  uint64_t v19 = *(void *)(v5 + 160);
  if (v19)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v19, a2, a4);
    int v15 = *(_DWORD *)(v5 + 200);
    if ((v15 & 0x20000) != 0) {
      goto LABEL_62;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(void *)(qword_100492A50 + 160), a2, a4);
    int v15 = *(_DWORD *)(v5 + 200);
    if ((v15 & 0x20000) != 0) {
      goto LABEL_62;
    }
  }
LABEL_50:
  if ((v15 & 0x40000) == 0) {
    goto LABEL_51;
  }
LABEL_66:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(unsigned __int8 *)(v5 + 192), (BOOL)a2, a4);
  int v15 = *(_DWORD *)(v5 + 200);
  if ((v15 & 0x80000) == 0)
  {
LABEL_52:
    if ((v15 & 0x100000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_68;
  }
LABEL_67:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, (int)a2, *(double *)(v5 + 176), a3);
  if ((*(_DWORD *)(v5 + 200) & 0x100000) == 0)
  {
LABEL_53:
    uint64_t v18 = *(void **)(v5 + 8);
    uint64_t v17 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v16 = v18;
    if (!v18) {
      return result;
    }
    goto LABEL_69;
  }
LABEL_68:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, (int)a2, *(double *)(v5 + 184), a3);
  uint64_t v21 = *(void **)(v5 + 8);
  uint64_t v17 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v16 = v21;
  if (!v21) {
    return result;
  }
LABEL_69:
  if (*v16 != v16[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v17, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100330794(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v4 = a2;
  int v6 = *((_DWORD *)this + 50);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_22:
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 14);
    *(unsigned char *)int v4 = 16;
    unint64_t v16 = (unint64_t)v4 + 1;
    if ((v15 & 0x80000000) != 0)
    {
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v15, v16, a3);
      int v7 = *((_DWORD *)this + 50);
      if ((v7 & 4) != 0) {
        goto LABEL_29;
      }
    }
    else if (v15 > 0x7F)
    {
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, v16, a3);
      int v7 = *((_DWORD *)this + 50);
      if ((v7 & 4) != 0) {
        goto LABEL_29;
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v15;
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      int v7 = *((_DWORD *)this + 50);
      if ((v7 & 4) != 0) {
        goto LABEL_29;
      }
    }
LABEL_4:
    if ((v7 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_30:
    uint64_t v18 = *((void *)this + 4);
    if (v18)
    {
      *(unsigned char *)int v4 = 34;
      unsigned int v19 = v4 + 1;
      uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v18 + 32);
      if (v20 <= 0x7F) {
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v18 = *(void *)(qword_100492A50 + 32);
      *(unsigned char *)int v4 = 34;
      unsigned int v19 = v4 + 1;
      uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v18 + 32);
      if (v20 <= 0x7F)
      {
LABEL_32:
        *((unsigned char *)v4 + 1) = (_BYTE)v20;
        int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10033312C(v18, (uint64_t)v4 + 2, a3);
        int v7 = *((_DWORD *)this + 50);
        if ((v7 & 0x10) != 0) {
          goto LABEL_36;
        }
LABEL_6:
        if ((v7 & 0x20) == 0) {
          goto LABEL_7;
        }
LABEL_42:
        int v28 = (unsigned int *)*((void *)this + 6);
        if (v28)
        {
          *(unsigned char *)int v4 = 50;
          unsigned int v29 = v4 + 1;
          int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v28[8];
          if (v30 <= 0x7F) {
            goto LABEL_44;
          }
        }
        else
        {
          int v28 = *(unsigned int **)(qword_100492A50 + 48);
          *(unsigned char *)int v4 = 50;
          unsigned int v29 = v4 + 1;
          int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v28[8];
          if (v30 <= 0x7F)
          {
LABEL_44:
            *((unsigned char *)v4 + 1) = (_BYTE)v30;
            int v4 = sub_100334570((wireless_diagnostics::google::protobuf::internal::WireFormat *)v28, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3);
            if ((*((_DWORD *)this + 50) & 0x40) != 0) {
              goto LABEL_48;
            }
LABEL_8:
            if (*((int *)this + 22) < 1) {
              goto LABEL_59;
            }
            goto LABEL_54;
          }
        }
        char v31 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v30, v29, a3);
        int v4 = sub_100334570((wireless_diagnostics::google::protobuf::internal::WireFormat *)v28, v31, v32);
        if ((*((_DWORD *)this + 50) & 0x40) != 0) {
          goto LABEL_48;
        }
        goto LABEL_8;
      }
    }
    uint64_t v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, v19, a3);
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10033312C(v18, v21, v22);
    int v7 = *((_DWORD *)this + 50);
    if ((v7 & 0x10) != 0) {
      goto LABEL_36;
    }
    goto LABEL_6;
  }
  uint64_t v8 = *((void *)this + 2);
  *(unsigned char *)a2 = 10;
  unsigned int v9 = a2 + 1;
  if (*(char *)(v8 + 23) < 0)
  {
    uint64_t v10 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v8 + 8);
    if (v10 <= 0x7F) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v8 + 23);
    if (*(unsigned __int8 *)(v8 + 23) <= 0x7Fu)
    {
LABEL_12:
      *((unsigned char *)v4 + 1) = (_BYTE)v10;
      int v11 = v4 + 2;
      goto LABEL_15;
    }
  }
  int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, v9, a3);
LABEL_15:
  int v12 = *(char *)(v8 + 23);
  if (v12 >= 0) {
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8;
  }
  else {
    uint64_t v13 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v8;
  }
  if (v12 >= 0) {
    uint64_t v14 = (const void *)*(unsigned __int8 *)(v8 + 23);
  }
  else {
    uint64_t v14 = (const void *)*(unsigned int *)(v8 + 8);
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v13, v14, v11, a4);
  if ((*((_DWORD *)this + 50) & 2) != 0) {
    goto LABEL_22;
  }
LABEL_3:
  int v7 = *((_DWORD *)this + 50);
  if ((v7 & 4) == 0) {
    goto LABEL_4;
  }
LABEL_29:
  uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((void *)this + 3);
  *(unsigned char *)int v4 = 24;
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v17, (unint64_t)v4 + 1, a3);
  int v7 = *((_DWORD *)this + 50);
  if ((v7 & 8) != 0) {
    goto LABEL_30;
  }
LABEL_5:
  if ((v7 & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_36:
  uint64_t v23 = *((void *)this + 5);
  if (v23)
  {
    *(unsigned char *)int v4 = 42;
    unsigned int v24 = v4 + 1;
    unsigned int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v23 + 64);
    if (v25 <= 0x7F) {
      goto LABEL_38;
    }
LABEL_41:
    uint64_t v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, v24, a3);
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1003205D8(v23, v26, v27);
    int v7 = *((_DWORD *)this + 50);
    if ((v7 & 0x20) != 0) {
      goto LABEL_42;
    }
    goto LABEL_7;
  }
  uint64_t v23 = *(void *)(qword_100492A50 + 40);
  *(unsigned char *)int v4 = 42;
  unsigned int v24 = v4 + 1;
  unsigned int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v23 + 64);
  if (v25 > 0x7F) {
    goto LABEL_41;
  }
LABEL_38:
  *((unsigned char *)v4 + 1) = (_BYTE)v25;
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_1003205D8(v23, (uint64_t)v4 + 2, a3);
  int v7 = *((_DWORD *)this + 50);
  if ((v7 & 0x20) != 0) {
    goto LABEL_42;
  }
LABEL_7:
  if ((v7 & 0x40) == 0) {
    goto LABEL_8;
  }
LABEL_48:
  uint64_t v33 = *((void *)this + 8);
  if (v33)
  {
    *(unsigned char *)int v4 = 58;
    unsigned int v34 = v4 + 1;
    unsigned int v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v33 + 40);
    if (v35 <= 0x7F)
    {
LABEL_50:
      *((unsigned char *)v4 + 1) = (_BYTE)v35;
      uint64_t v36 = (uint64_t)v4 + 2;
      goto LABEL_53;
    }
  }
  else
  {
    uint64_t v33 = *(void *)(qword_100492A50 + 64);
    *(unsigned char *)int v4 = 58;
    unsigned int v34 = v4 + 1;
    unsigned int v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v33 + 40);
    if (v35 <= 0x7F) {
      goto LABEL_50;
    }
  }
  uint64_t v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v35, v34, a3);
LABEL_53:
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10032F760(v33, v36, a3);
  if (*((int *)this + 22) < 1) {
    goto LABEL_59;
  }
LABEL_54:
  uint64_t v37 = 0;
  do
  {
    int v39 = *(unsigned int **)(*((void *)this + 10) + 8 * v37);
    *(unsigned char *)int v4 = 66;
    int v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v39[18];
    if (v40 > 0x7F)
    {
      unsigned int v38 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v40, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v40;
      unsigned int v38 = (char *)v4 + 2;
    }
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10032E668((wireless_diagnostics::google::protobuf::internal::WireFormat *)v39, v38, a3);
    ++v37;
  }
  while (v37 < *((int *)this + 22));
LABEL_59:
  int v41 = *((_DWORD *)this + 50);
  if ((v41 & 0x200) != 0)
  {
    uint64_t v42 = *((void *)this + 13);
    *(unsigned char *)int v4 = 73;
    *(void *)((char *)v4 + 1) = v42;
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
    int v41 = *((_DWORD *)this + 50);
    if ((v41 & 0x80) == 0)
    {
LABEL_61:
      if ((v41 & 0x400) == 0) {
        goto LABEL_62;
      }
LABEL_72:
      uint64_t v48 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 15);
      *(unsigned char *)int v4 = 88;
      unint64_t v49 = (unint64_t)v4 + 1;
      if ((v48 & 0x80000000) != 0)
      {
        int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v48, v49, a3);
        if ((*((unsigned char *)this + 201) & 8) != 0) {
          goto LABEL_79;
        }
      }
      else if (v48 > 0x7F)
      {
        int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v48, v49, a3);
        if ((*((unsigned char *)this + 201) & 8) != 0) {
          goto LABEL_79;
        }
      }
      else
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v48;
        int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
        if ((*((unsigned char *)this + 201) & 8) != 0) {
          goto LABEL_79;
        }
      }
LABEL_63:
      if (*((int *)this + 30) < 1) {
        goto LABEL_91;
      }
      goto LABEL_86;
    }
  }
  else if ((v41 & 0x80) == 0)
  {
    goto LABEL_61;
  }
  uint64_t v43 = *((void *)this + 9);
  if (v43)
  {
    *(unsigned char *)int v4 = 82;
    unsigned int v44 = v4 + 1;
    uint64_t v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v43 + 40);
    if (v45 <= 0x7F) {
      goto LABEL_68;
    }
LABEL_71:
    uint64_t v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v45, v44, a3);
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10032F760(v43, v46, v47);
    if ((*((_DWORD *)this + 50) & 0x400) != 0) {
      goto LABEL_72;
    }
    goto LABEL_62;
  }
  uint64_t v43 = *(void *)(qword_100492A50 + 72);
  *(unsigned char *)int v4 = 82;
  unsigned int v44 = v4 + 1;
  uint64_t v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v43 + 40);
  if (v45 > 0x7F) {
    goto LABEL_71;
  }
LABEL_68:
  *((unsigned char *)v4 + 1) = (_BYTE)v45;
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_10032F760(v43, (uint64_t)v4 + 2, a3);
  if ((*((_DWORD *)this + 50) & 0x400) != 0) {
    goto LABEL_72;
  }
LABEL_62:
  if ((*((unsigned char *)this + 201) & 8) == 0) {
    goto LABEL_63;
  }
LABEL_79:
  int v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 34);
  *(unsigned char *)int v4 = 96;
  unint64_t v51 = (unint64_t)v4 + 1;
  if ((v50 & 0x80000000) != 0)
  {
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v50, v51, a3);
    if (*((int *)this + 30) < 1) {
      goto LABEL_91;
    }
  }
  else if (v50 > 0x7F)
  {
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v50, v51, a3);
    if (*((int *)this + 30) < 1) {
      goto LABEL_91;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v50;
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if (*((int *)this + 30) < 1) {
      goto LABEL_91;
    }
  }
LABEL_86:
  uint64_t v52 = 0;
  do
  {
    uint64_t v54 = *(unsigned int **)(*((void *)this + 14) + 8 * v52);
    *(unsigned char *)int v4 = 106;
    int v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v54[12];
    if (v55 > 0x7F)
    {
      unsigned int v53 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v55, (int)v4 + 1, a3);
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v55;
      unsigned int v53 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    }
    int v4 = sub_10032EECC((wireless_diagnostics::google::protobuf::internal::WireFormat *)v54, v53, a3);
    ++v52;
  }
  while (v52 < *((int *)this + 30));
LABEL_91:
  int v56 = *((_DWORD *)this + 50);
  if ((v56 & 0x2000) == 0)
  {
    if ((v56 & 0x4000) == 0) {
      goto LABEL_93;
    }
LABEL_102:
    int v62 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 35);
    *(unsigned char *)int v4 = 120;
    unint64_t v63 = (unint64_t)v4 + 1;
    if ((v62 & 0x80000000) != 0)
    {
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v62, v63, a3);
      int v57 = *((_DWORD *)this + 50);
      if ((v57 & 0x8000) != 0) {
        goto LABEL_109;
      }
    }
    else if (v62 > 0x7F)
    {
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v62, v63, a3);
      int v57 = *((_DWORD *)this + 50);
      if ((v57 & 0x8000) != 0) {
        goto LABEL_109;
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v62;
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      int v57 = *((_DWORD *)this + 50);
      if ((v57 & 0x8000) != 0) {
        goto LABEL_109;
      }
    }
LABEL_94:
    if ((v57 & 0x10000) == 0) {
      goto LABEL_95;
    }
    goto LABEL_110;
  }
  uint64_t v61 = *((void *)this + 18);
  *(unsigned char *)int v4 = 113;
  *(void *)((char *)v4 + 1) = v61;
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 50) & 0x4000) != 0) {
    goto LABEL_102;
  }
LABEL_93:
  int v57 = *((_DWORD *)this + 50);
  if ((v57 & 0x8000) == 0) {
    goto LABEL_94;
  }
LABEL_109:
  uint64_t v64 = *((void *)this + 19);
  *(_WORD *)int v4 = 385;
  *(void *)((char *)v4 + 2) = v64;
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 10);
  int v57 = *((_DWORD *)this + 50);
  if ((v57 & 0x10000) == 0)
  {
LABEL_95:
    if ((v57 & 0x20000) == 0) {
      goto LABEL_96;
    }
LABEL_116:
    uint64_t v70 = *((void *)this + 21);
    if (v70)
    {
      *(_WORD *)int v4 = 402;
      unsigned int v71 = v4 + 2;
      uint64_t v72 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v70 + 48);
      if (v72 <= 0x7F) {
        goto LABEL_118;
      }
    }
    else
    {
      uint64_t v70 = *(void *)(qword_100492A50 + 168);
      *(_WORD *)int v4 = 402;
      unsigned int v71 = v4 + 2;
      uint64_t v72 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v70 + 48);
      if (v72 <= 0x7F)
      {
LABEL_118:
        *((unsigned char *)v4 + 2) = (_BYTE)v72;
        int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100320FD0(v70, (uint64_t)v4 + 3, a3);
        int v57 = *((_DWORD *)this + 50);
        if ((v57 & 0x40000) != 0) {
          goto LABEL_122;
        }
LABEL_97:
        if ((v57 & 0x80000) == 0) {
          goto LABEL_98;
        }
        goto LABEL_123;
      }
    }
    uint64_t v73 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v72, v71, a3);
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100320FD0(v70, v73, v74);
    int v57 = *((_DWORD *)this + 50);
    if ((v57 & 0x40000) != 0) {
      goto LABEL_122;
    }
    goto LABEL_97;
  }
LABEL_110:
  uint64_t v65 = *((void *)this + 20);
  if (v65)
  {
    *(_WORD *)int v4 = 394;
    unsigned int v66 = v4 + 2;
    unint64_t v67 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v65 + 48);
    if (v67 <= 0x7F) {
      goto LABEL_112;
    }
LABEL_115:
    uint64_t v68 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v67, v66, a3);
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100320FD0(v65, v68, v69);
    int v57 = *((_DWORD *)this + 50);
    if ((v57 & 0x20000) != 0) {
      goto LABEL_116;
    }
    goto LABEL_96;
  }
  uint64_t v65 = *(void *)(qword_100492A50 + 160);
  *(_WORD *)int v4 = 394;
  unsigned int v66 = v4 + 2;
  unint64_t v67 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v65 + 48);
  if (v67 > 0x7F) {
    goto LABEL_115;
  }
LABEL_112:
  *((unsigned char *)v4 + 2) = (_BYTE)v67;
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100320FD0(v65, (uint64_t)v4 + 3, a3);
  int v57 = *((_DWORD *)this + 50);
  if ((v57 & 0x20000) != 0) {
    goto LABEL_116;
  }
LABEL_96:
  if ((v57 & 0x40000) == 0) {
    goto LABEL_97;
  }
LABEL_122:
  char v75 = *((unsigned char *)this + 192);
  *(_WORD *)int v4 = 408;
  *((unsigned char *)v4 + 2) = v75;
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
  int v57 = *((_DWORD *)this + 50);
  if ((v57 & 0x80000) == 0)
  {
LABEL_98:
    if ((v57 & 0x100000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_124;
  }
LABEL_123:
  uint64_t v76 = *((void *)this + 22);
  *(_WORD *)int v4 = 417;
  *(void *)((char *)v4 + 2) = v76;
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 10);
  if ((*((_DWORD *)this + 50) & 0x100000) == 0)
  {
LABEL_99:
    uint64_t v60 = (void *)*((void *)this + 1);
    int v59 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    unsigned int v58 = v60;
    if (!v60) {
      return v4;
    }
    goto LABEL_125;
  }
LABEL_124:
  uint64_t v77 = *((void *)this + 23);
  *(_WORD *)int v4 = 425;
  *(void *)((char *)v4 + 2) = v77;
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 10);
  long long v78 = (void *)*((void *)this + 1);
  int v59 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  unsigned int v58 = v78;
  if (!v78) {
    return v4;
  }
LABEL_125:
  if (*v58 == v58[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v59, v4, a3);
}

uint64_t sub_100331054(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 200);
  if (!(_BYTE)v3)
  {
    int v4 = 0;
    if ((v3 & 0x1FE00) != 0) {
      goto LABEL_86;
    }
    goto LABEL_29;
  }
  if ((v3 & 1) == 0)
  {
    int v4 = 0;
    if ((v3 & 2) == 0) {
      goto LABEL_22;
    }
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v3 = *(_DWORD *)(a1 + 200);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 1;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  int v4 = v10 + v6 + 1;
  if ((v3 & 2) != 0)
  {
LABEL_16:
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    if ((v11 & 0x80000000) != 0)
    {
      int v12 = 10;
    }
    else if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
      int v3 = *(_DWORD *)(a1 + 200);
    }
    else
    {
      int v12 = 1;
    }
    v4 += v12 + 1;
  }
LABEL_22:
  if ((v3 & 4) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(a1 + 24), (unint64_t)a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 200);
    if ((v3 & 8) == 0)
    {
LABEL_24:
      if ((v3 & 0x10) == 0) {
        goto LABEL_25;
      }
LABEL_39:
      uint64_t v17 = *(void *)(a1 + 40);
      if (v17)
      {
        uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100320810(v17, a2);
        if (v18 < 0x80) {
          goto LABEL_41;
        }
      }
      else
      {
        uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100320810(*(void *)(qword_100492A50 + 40), a2);
        if (v18 < 0x80)
        {
LABEL_41:
          v4 += v18 + 2;
          int v3 = *(_DWORD *)(a1 + 200);
          if ((v3 & 0x20) != 0) {
            goto LABEL_45;
          }
LABEL_26:
          if ((v3 & 0x40) == 0) {
            goto LABEL_27;
          }
LABEL_51:
          uint64_t v21 = *(void *)(a1 + 64);
          if (v21)
          {
            int v22 = *(unsigned __int8 *)(v21 + 44);
            if (*(unsigned char *)(v21 + 44)) {
              goto LABEL_53;
            }
          }
          else
          {
            uint64_t v21 = *(void *)(qword_100492A50 + 64);
            int v22 = *(unsigned __int8 *)(v21 + 44);
            if (*(unsigned char *)(v21 + 44))
            {
LABEL_53:
              int v23 = (v22 << 31 >> 31) & 9;
              if ((v22 & 2) != 0) {
                v23 += 9;
              }
              if ((v22 & 4) != 0) {
                int v24 = v23 + 9;
              }
              else {
                int v24 = v23;
              }
              unsigned int v25 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v21 + 8);
              uint64_t v26 = *(void **)(v21 + 8);
              if (!v26) {
                goto LABEL_66;
              }
              goto LABEL_62;
            }
          }
          int v24 = 0;
          unsigned int v25 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v21 + 8);
          uint64_t v26 = *(void **)(v21 + 8);
          if (!v26) {
            goto LABEL_66;
          }
LABEL_62:
          if (*v26 != v26[1])
          {
            int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v25, a2)+ v24);
            *(_DWORD *)(v21 + 40) = v27;
            if (v27 >= 0x80)
            {
              v4 += v27
                  + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2)+ 1;
              int v3 = *(_DWORD *)(a1 + 200);
              if ((v3 & 0x80) != 0) {
                goto LABEL_69;
              }
            }
            else
            {
              v4 += v27 + 2;
              int v3 = *(_DWORD *)(a1 + 200);
              if ((v3 & 0x80) != 0) {
                goto LABEL_69;
              }
            }
            goto LABEL_28;
          }
LABEL_66:
          *(_DWORD *)(v21 + 40) = v24;
          v4 += v24 + 2;
          int v3 = *(_DWORD *)(a1 + 200);
          if ((v3 & 0x80) != 0) {
            goto LABEL_69;
          }
LABEL_28:
          if ((v3 & 0x1FE00) == 0) {
            goto LABEL_29;
          }
LABEL_86:
          if ((v3 & 0x200) != 0) {
            int v35 = v4 + 9;
          }
          else {
            int v35 = v4;
          }
          if ((v3 & 0x400) == 0)
          {
            if ((v3 & 0x800) == 0) {
              goto LABEL_91;
            }
LABEL_106:
            unsigned int v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 136);
            if ((v38 & 0x80000000) != 0)
            {
              int v39 = 10;
            }
            else if (v38 >= 0x80)
            {
              int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v38, a2);
              int v3 = *(_DWORD *)(a1 + 200);
            }
            else
            {
              int v39 = 1;
            }
            v35 += v39 + 1;
            if ((v3 & 0x2000) != 0) {
              v35 += 9;
            }
            if ((v3 & 0x4000) == 0)
            {
LABEL_94:
              if ((v3 & 0x8000) != 0) {
                int v4 = v35 + 10;
              }
              else {
                int v4 = v35;
              }
              if ((v3 & 0xFF0000) != 0) {
                goto LABEL_123;
              }
              goto LABEL_30;
            }
LABEL_114:
            int v40 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 140);
            if ((v40 & 0x80000000) != 0)
            {
              int v41 = 10;
            }
            else if (v40 >= 0x80)
            {
              int v41 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v40, a2);
              int v3 = *(_DWORD *)(a1 + 200);
            }
            else
            {
              int v41 = 1;
            }
            int v42 = v35 + v41 + 1;
            if ((v3 & 0x8000) != 0) {
              int v4 = v42 + 10;
            }
            else {
              int v4 = v42;
            }
            if ((v3 & 0xFF0000) != 0) {
              goto LABEL_123;
            }
LABEL_30:
            int v13 = *(_DWORD *)(a1 + 88);
            int v14 = v13 + v4;
            if (v13 < 1) {
              goto LABEL_163;
            }
            goto LABEL_145;
          }
          uint64_t v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
          if ((v36 & 0x80000000) != 0)
          {
            v35 += 11;
            if ((v3 & 0x800) != 0) {
              goto LABEL_106;
            }
          }
          else if (v36 >= 0x80)
          {
            int v37 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v36, a2);
            int v3 = *(_DWORD *)(a1 + 200);
            v35 += v37 + 1;
            if ((v3 & 0x800) != 0) {
              goto LABEL_106;
            }
          }
          else
          {
            v35 += 2;
            if ((v3 & 0x800) != 0) {
              goto LABEL_106;
            }
          }
LABEL_91:
          if ((v3 & 0x2000) != 0) {
            v35 += 9;
          }
          if ((v3 & 0x4000) == 0) {
            goto LABEL_94;
          }
          goto LABEL_114;
        }
      }
      v4 += v18
          + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2)
          + 1;
      int v3 = *(_DWORD *)(a1 + 200);
      if ((v3 & 0x20) != 0) {
        goto LABEL_45;
      }
      goto LABEL_26;
    }
  }
  else if ((v3 & 8) == 0)
  {
    goto LABEL_24;
  }
  uint64_t v15 = *(void *)(a1 + 32);
  if (v15)
  {
    unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100333204(v15, a2);
    if (v16 < 0x80) {
      goto LABEL_35;
    }
LABEL_38:
    v4 += v16
        + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2)
        + 1;
    int v3 = *(_DWORD *)(a1 + 200);
    if ((v3 & 0x10) != 0) {
      goto LABEL_39;
    }
    goto LABEL_25;
  }
  unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100333204(*(void *)(qword_100492A50 + 32), a2);
  if (v16 >= 0x80) {
    goto LABEL_38;
  }
LABEL_35:
  v4 += v16 + 2;
  int v3 = *(_DWORD *)(a1 + 200);
  if ((v3 & 0x10) != 0) {
    goto LABEL_39;
  }
LABEL_25:
  if ((v3 & 0x20) == 0) {
    goto LABEL_26;
  }
LABEL_45:
  uint64_t v19 = *(void *)(a1 + 48);
  if (v19)
  {
    uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003346E4(v19, a2);
    if (v20 < 0x80) {
      goto LABEL_47;
    }
LABEL_50:
    v4 += v20
        + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2)
        + 1;
    int v3 = *(_DWORD *)(a1 + 200);
    if ((v3 & 0x40) != 0) {
      goto LABEL_51;
    }
    goto LABEL_27;
  }
  uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003346E4(*(void *)(qword_100492A50 + 48), a2);
  if (v20 >= 0x80) {
    goto LABEL_50;
  }
LABEL_47:
  v4 += v20 + 2;
  int v3 = *(_DWORD *)(a1 + 200);
  if ((v3 & 0x40) != 0) {
    goto LABEL_51;
  }
LABEL_27:
  if ((v3 & 0x80) == 0) {
    goto LABEL_28;
  }
LABEL_69:
  uint64_t v28 = *(void *)(a1 + 72);
  if (v28)
  {
    int v29 = *(unsigned __int8 *)(v28 + 44);
    if (*(unsigned char *)(v28 + 44)) {
      goto LABEL_71;
    }
  }
  else
  {
    uint64_t v28 = *(void *)(qword_100492A50 + 72);
    int v29 = *(unsigned __int8 *)(v28 + 44);
    if (*(unsigned char *)(v28 + 44))
    {
LABEL_71:
      int v30 = (v29 << 31 >> 31) & 9;
      if ((v29 & 2) != 0) {
        v30 += 9;
      }
      if ((v29 & 4) != 0) {
        LODWORD(v31) = v30 + 9;
      }
      else {
        LODWORD(v31) = v30;
      }
      uint64_t v32 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v28 + 8);
      uint64_t v33 = *(void **)(v28 + 8);
      if (!v33) {
        goto LABEL_83;
      }
      goto LABEL_80;
    }
  }
  LODWORD(v31) = 0;
  uint64_t v32 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v28 + 8);
  uint64_t v33 = *(void **)(v28 + 8);
  if (!v33)
  {
LABEL_83:
    *(_DWORD *)(v28 + 40) = v31;
    int v34 = 1;
    goto LABEL_85;
  }
LABEL_80:
  if (*v33 == v33[1]) {
    goto LABEL_83;
  }
  char v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v32, a2)+ v31);
  *(_DWORD *)(v28 + 40) = v31;
  if (v31 >= 0x80) {
    int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31, a2);
  }
  else {
    int v34 = 1;
  }
LABEL_85:
  v4 += v31 + v34 + 1;
  int v3 = *(_DWORD *)(a1 + 200);
  if ((v3 & 0x1FE00) != 0) {
    goto LABEL_86;
  }
LABEL_29:
  if ((v3 & 0xFF0000) == 0) {
    goto LABEL_30;
  }
LABEL_123:
  if ((v3 & 0x10000) == 0) {
    goto LABEL_130;
  }
  uint64_t v43 = *(void *)(a1 + 160);
  if (!v43)
  {
    unsigned int v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100321158(*(void *)(qword_100492A50 + 160), a2);
    if (v44 < 0x80) {
      goto LABEL_126;
    }
LABEL_128:
    int v45 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v44, a2);
    goto LABEL_129;
  }
  unsigned int v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100321158(v43, a2);
  if (v44 >= 0x80) {
    goto LABEL_128;
  }
LABEL_126:
  int v45 = 1;
LABEL_129:
  v4 += v44 + v45 + 2;
  int v3 = *(_DWORD *)(a1 + 200);
LABEL_130:
  if ((v3 & 0x20000) == 0) {
    goto LABEL_137;
  }
  uint64_t v46 = *(void *)(a1 + 168);
  if (!v46)
  {
    uint64_t v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100321158(*(void *)(qword_100492A50 + 168), a2);
    if (v47 < 0x80) {
      goto LABEL_133;
    }
LABEL_135:
    int v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v47, a2);
    goto LABEL_136;
  }
  uint64_t v47 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100321158(v46, a2);
  if (v47 >= 0x80) {
    goto LABEL_135;
  }
LABEL_133:
  int v48 = 1;
LABEL_136:
  v4 += v47 + v48 + 2;
  int v3 = *(_DWORD *)(a1 + 200);
LABEL_137:
  int v49 = v4 + 3;
  if ((v3 & 0x40000) == 0) {
    int v49 = v4;
  }
  if ((v3 & 0x80000) != 0) {
    v49 += 10;
  }
  if ((v3 & 0x100000) != 0) {
    int v50 = v49 + 10;
  }
  else {
    int v50 = v49;
  }
  int v51 = *(_DWORD *)(a1 + 88);
  int v14 = v51 + v50;
  if (v51 >= 1)
  {
LABEL_145:
    uint64_t v52 = 0;
    do
    {
      uint64_t v54 = *(void *)(*(void *)(a1 + 80) + 8 * v52);
      int v55 = (*(unsigned __int8 *)(v54 + 76) << 29 >> 31) & 9;
      int v56 = *(_DWORD *)(v54 + 24);
      unsigned int v57 = 8 * v56;
      if (v56 >= 1)
      {
        if (v57 >= 0x80) {
          int v58 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v56), a2)+ 1;
        }
        else {
          int v58 = 2;
        }
        v55 += v58;
      }
      *(_DWORD *)(v54 + 32) = v57;
      unsigned int v59 = v55 + v57;
      int v60 = *(_DWORD *)(v54 + 48);
      unsigned int v61 = 8 * v60;
      if (v60 >= 1)
      {
        if (v61 >= 0x80) {
          int v62 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v60), a2)+ 1;
        }
        else {
          int v62 = 2;
        }
        v59 += v62;
      }
      unint64_t v63 = *(void **)(v54 + 8);
      *(_DWORD *)(v54 + 56) = v61;
      uint64_t v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v59 + v61);
      if (v63 && *v63 != v63[1]) {
        uint64_t v64 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v54 + 8), a2)+ v64);
      }
      *(_DWORD *)(v54 + 72) = v64;
      if (v64 >= 0x80) {
        int v53 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v64, a2);
      }
      else {
        int v53 = 1;
      }
      v14 += v64 + v53;
      ++v52;
    }
    while (v52 < *(int *)(a1 + 88));
  }
LABEL_163:
  int v65 = *(_DWORD *)(a1 + 120);
  uint64_t v66 = (v65 + v14);
  if (v65 >= 1)
  {
    uint64_t v67 = 0;
    do
    {
      int v69 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10032F008(*(void *)(*(void *)(a1 + 112)+ 8 * v67), a2);
      int v70 = (int)v69;
      if (v69 >= 0x80) {
        int v68 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v69, a2);
      }
      else {
        int v68 = 1;
      }
      uint64_t v66 = (v70 + v66 + v68);
      ++v67;
    }
    while (v67 < *(int *)(a1 + 120));
  }
  unsigned int v71 = *(void **)(a1 + 8);
  if (v71 && *v71 != v71[1]) {
    uint64_t v66 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v66;
  }
  *(_DWORD *)(a1 + 196) = v66;
  return v66;
}

uint64_t sub_1003317C4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10032FB3C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_1003318A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003318B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003318CC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100331958()
{
  uint64_t v0 = qword_10047E290;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10032D654;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E250;
}

void sub_1003319E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1003319FC(void *a1)
{
  *a1 = off_100467BC8;
  uint64_t v2 = a1[3];
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if ((void *)qword_100492A58 != a1)
  {
    uint64_t v4 = a1[2];
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_100331AD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 36) = a2;
  return result;
}

uint64_t sub_100331AD8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_100492A58;
  if (!qword_100492A58)
  {
    sub_10032DA30(0, a2, a3, a4);
    return qword_100492A58;
  }
  return result;
}

void sub_100331B14()
{
}

void sub_100331B8C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100331BB4(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 40);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 40))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        this = sub_1003343E0(this);
        int v2 = *(_DWORD *)(v1 + 40);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 24);
      if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + ++*(void *)(result + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    *(_DWORD *)(v1 + 32) = 1;
  }
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v4 + ++*(void *)(result + 8) = 0;
  if (v5)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v4);
  }
  return this;
}

uint64_t sub_100331C5C(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 40);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 40);
      if ((v6 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_100492A58 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 40);
      if ((v6 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  if ((*(_DWORD *)(v5 + 40) & 4) == 0)
  {
LABEL_4:
    unint64_t v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    char v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 32), (int)a2, a4);
  int v11 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  char v7 = v11;
  if (!v11) {
    return result;
  }
LABEL_12:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100331D3C(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 10);
  if (v6)
  {
    uint64_t v10 = (unsigned int *)*((void *)this + 2);
    if (v10)
    {
      *(unsigned char *)a2 = 10;
      unsigned int v11 = a2 + 1;
      int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[8];
      if (v12 <= 0x7F) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v10 = *(unsigned int **)(qword_100492A58 + 16);
      *(unsigned char *)a2 = 10;
      unsigned int v11 = a2 + 1;
      int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10[8];
      if (v12 <= 0x7F)
      {
LABEL_8:
        *((unsigned char *)v4 + 1) = (_BYTE)v12;
        uint64_t v4 = sub_100334570((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2), a3);
        int v6 = *((_DWORD *)this + 10);
        if ((v6 & 2) != 0) {
          goto LABEL_12;
        }
LABEL_3:
        if ((v6 & 4) == 0) {
          goto LABEL_4;
        }
        goto LABEL_24;
      }
    }
    int v13 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v11, a3);
    uint64_t v4 = sub_100334570((wireless_diagnostics::google::protobuf::internal::WireFormat *)v10, v13, v14);
    int v6 = *((_DWORD *)this + 10);
    if ((v6 & 2) != 0) {
      goto LABEL_12;
    }
    goto LABEL_3;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_12:
  uint64_t v15 = *((void *)this + 3);
  *(unsigned char *)uint64_t v4 = 18;
  if (*(char *)(v15 + 23) < 0)
  {
    unint64_t v16 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v15 + 8);
    if (v16 <= 0x7F) {
      goto LABEL_14;
    }
  }
  else
  {
    unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v15 + 23);
    if (*(unsigned __int8 *)(v15 + 23) <= 0x7Fu)
    {
LABEL_14:
      *((unsigned char *)v4 + 1) = (_BYTE)v16;
      int v17 = v4 + 2;
      goto LABEL_17;
    }
  }
  int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v16, (int)v4 + 1, a3);
LABEL_17:
  int v18 = *(char *)(v15 + 23);
  if (v18 >= 0) {
    uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15;
  }
  else {
    uint64_t v19 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v15;
  }
  if (v18 >= 0) {
    uint64_t v20 = (const void *)*(unsigned __int8 *)(v15 + 23);
  }
  else {
    uint64_t v20 = (const void *)*(unsigned int *)(v15 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v19, v20, v17, a4);
  if ((*((_DWORD *)this + 10) & 4) == 0)
  {
LABEL_4:
    unint64_t v9 = (void *)*((void *)this + 1);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    char v7 = v9;
    if (!v9) {
      return v4;
    }
    goto LABEL_31;
  }
LABEL_24:
  uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 8);
  *(unsigned char *)uint64_t v4 = 24;
  unint64_t v22 = (unint64_t)v4 + 1;
  if ((v21 & 0x80000000) != 0)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v21, v22, a3);
    int v24 = (void *)*((void *)this + 1);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    char v7 = v24;
    if (!v24) {
      return v4;
    }
  }
  else if (v21 > 0x7F)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, v22, a3);
    unsigned int v25 = (void *)*((void *)this + 1);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    char v7 = v25;
    if (!v25) {
      return v4;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v21;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    int v23 = (void *)*((void *)this + 1);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    char v7 = v23;
    if (!v23) {
      return v4;
    }
  }
LABEL_31:
  if (*v7 == v7[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, v4, a3);
}

uint64_t sub_100331EF4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 40);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v6 = *(void **)(a1 + 8);
    if (!v6) {
      goto LABEL_24;
    }
    goto LABEL_32;
  }
  if ((*(unsigned char *)(a1 + 40) & 1) == 0)
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      goto LABEL_22;
    }
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003346E4(v7, a2);
    if (v8 < 0x80) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003346E4(*(void *)(qword_100492A58 + 16), a2);
    if (v8 < 0x80)
    {
LABEL_9:
      uint64_t v4 = (v8 + 2);
      int v3 = *(_DWORD *)(a1 + 40);
      if ((v3 & 2) == 0) {
        goto LABEL_22;
      }
      goto LABEL_13;
    }
  }
  uint64_t v4 = v8
     + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2)+ 1;
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 2) == 0) {
    goto LABEL_22;
  }
LABEL_13:
  uint64_t v9 = *(void *)(a1 + 24);
  int v10 = *(unsigned __int8 *)(v9 + 23);
  char v11 = v10;
  uint64_t v12 = *(void *)(v9 + 8);
  if ((v10 & 0x80u) == 0) {
    unint64_t v13 = *(unsigned __int8 *)(v9 + 23);
  }
  else {
    unint64_t v13 = v12;
  }
  if (v13 >= 0x80)
  {
    int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13, a2);
    int v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v12 = *(void *)(v9 + 8);
    int v3 = *(_DWORD *)(a1 + 40);
    char v11 = *(unsigned char *)(v9 + 23);
  }
  else
  {
    int v14 = 1;
  }
  if (v11 < 0) {
    int v10 = v12;
  }
  uint64_t v4 = (v4 + v14 + v10 + 1);
LABEL_22:
  if ((v3 & 4) != 0)
  {
    unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if ((v16 & 0x80000000) != 0)
    {
      uint64_t v4 = (v4 + 11);
      uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v6 = *(void **)(a1 + 8);
      if (!v6) {
        goto LABEL_24;
      }
    }
    else if (v16 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2)+ 1+ v4;
      uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v6 = *(void **)(a1 + 8);
      if (!v6) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
      int v6 = *(void **)(a1 + 8);
      if (!v6) {
        goto LABEL_24;
      }
    }
  }
  else
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v6 = *(void **)(a1 + 8);
    if (!v6)
    {
LABEL_24:
      *(_DWORD *)(a1 + 36) = v4;
      return v4;
    }
  }
LABEL_32:
  if (*v6 == v6[1]) {
    goto LABEL_24;
  }
  uint64_t v17 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
      + v4;
  *(_DWORD *)(a1 + 36) = v17;
  return v17;
}

uint64_t sub_10033209C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100074290((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10033217C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100332190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003321A4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100332230()
{
  uint64_t v0 = qword_10047E290;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_10032D654;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E260;
}

void sub_1003322C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003322D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_1003322DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_1003322E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_1003322EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 196);
}

uint64_t sub_1003322F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_1003322FC(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_10032E1B4(*(void *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_10033241C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100332444(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_10032EB0C(*(void *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_100332568()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100332594()
{
  uint64_t v0 = (wireless_diagnostics::google::protobuf::DescriptorPool *)sub_1003328D4();
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v0);
  std::string __p = operator new(0x20uLL);
  long long v3 = xmmword_1003E7220;
  strcpy((char *)__p, "protobuf/gen/coordinates.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  operator delete(__p);
  if (!FileByName)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  }
  qword_10047E2A8 = *(void *)(FileByName + 80);
  operator new();
}

void sub_100332860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100332874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100332888(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003328D4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10047E298 & 1) == 0)
  {
    byte_10047E298 = 1;
    wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/coordinates.pb.cc", a4);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n\x1Eprotobuf/gen/coordinates.proto\x12\x11proto.coordinates\"\"\n\x06LatLon\x12\v\n\x03lat\x18\x01 \x02(\x01\x12\v\n\x03lon\x18\x02 \x02(\x01\"#\n\vUniversal2d\x12\t\n\x01x\x18\x01 \x02(\x01\x12\t\n\x01y\x18\x02 \x02(\x01\"\x84\x02\n\x1EHomogeneousOrthonormalMatrix2d\x12P\n(universalLocationOfCoordinateFrameOrigin\x18\x01 \x02(\v2\x1E.proto.coordinates.Universal2d\x122\n*universalLengthOfCoordinateFrameUnitVector\x18\x02 \x02(\x01\x12)\n!localCoordinateFrameIsRightHanded\x18\x03 \x02(\b\x121\n&universalOrientationOfCoordinateFrameX\x18\x04 \x02(\x01:\x010\"~\n\x1ABoundedCellCoordinateFrame\x12\f\n\x04rows\x18\x01 \x02(\r\x12\f\n"
                                                                "\x04cols\x18\x02 \x02(\r\x12D\n"
                                                                "\ttransform\x18\x03 \x02(\v21.proto.coordinates.Homogene"
                                                                "ousOrthonormalMatrix2dB'\n"
                                                                "%com.apple.indoor.proto.javacommon.api",
      (const void *)0x22C,
      v4);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_100332B08()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100332B30()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100332B58()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100332B84()
{
  if (qword_100492A60) {
    (*(void (**)(uint64_t))(*(void *)qword_100492A60 + 8))(qword_100492A60);
  }
  if (qword_10047E2B0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E2B0 + 8))(qword_10047E2B0);
  }
  if (qword_100492A68) {
    (*(void (**)(uint64_t))(*(void *)qword_100492A68 + 8))(qword_100492A68);
  }
  if (qword_10047E2C0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E2C0 + 8))(qword_10047E2C0);
  }
  if (qword_100492A70) {
    (*(void (**)(uint64_t))(*(void *)qword_100492A70 + 8))(qword_100492A70);
  }
  if (qword_10047E2D0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E2D0 + 8))(qword_10047E2D0);
  }
  if (qword_100492A78) {
    (*(void (**)(uint64_t))(*(void *)qword_100492A78 + 8))(qword_100492A78);
  }
  uint64_t result = qword_10047E2E0;
  if (qword_10047E2E0)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10047E2E0 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_100332D2C()
{
  uint64_t v0 = qword_10047E2E8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v5[1] = sub_100332594;
    char v6 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v5);
  }
  if (!qword_100492A60) {
    ((void (*)(void))sub_1003328D4)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_100492A68) {
    sub_1003328D4(v1);
  }
  uint64_t v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_100492A70) {
    sub_1003328D4(v2);
  }
  uint64_t v3 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_100492A78) {
    sub_1003328D4(v3);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_100332E58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100332E6C(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 36);
  if ((_BYTE)v4)
  {
    if (*(unsigned char *)(a2 + 36))
    {
      uint64_t v5 = *(void *)(a2 + 16);
      *(_DWORD *)(a1 + 36) |= 1u;
      *(void *)(a1 + 16) = v5;
      int v4 = *(_DWORD *)(a2 + 36);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(_DWORD *)(a1 + 36) |= 2u;
      *(void *)(a1 + ++*(void *)(result + 24) = v6;
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100332F24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100332F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100332F4C(uint64_t a1)
{
  *(void *)a1 = off_100467CF0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_100332FA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

uint64_t sub_100332FA8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_100492A60;
  if (!qword_100492A60)
  {
    sub_1003328D4(0, a2, a3, a4);
    return qword_100492A60;
  }
  return result;
}

void sub_100332FE4()
{
}

void sub_100333048()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100333070(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 36))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + ++*(void *)(result + 24) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100333090(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 36);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 2) == 0)
    {
LABEL_3:
      int v8 = *(void **)(v4 + 8);
      uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      uint64_t v6 = v8;
      if (!v8) {
        return result;
      }
      goto LABEL_7;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  uint64_t v9 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  uint64_t v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_7:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_10033312C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = *(void *)(a1 + 24);
    *(unsigned char *)a2 = 17;
    *(void *)(a2 + 1) = v8;
    a2 += 9;
    uint64_t v9 = *(void **)(a1 + 8);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v5 = v9;
    if (!v9) {
      return a2;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  *(unsigned char *)a2 = 9;
  *(void *)(a2 + 1) = v7;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 36) & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v6 = *(void **)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_7:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_100333204(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 36);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 36)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

uint64_t sub_10033326C(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100332E6C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10033334C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100333360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100333374(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100333400()
{
  uint64_t v0 = qword_10047E2E8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100332594;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E2A8;
}

void sub_100333490(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1003334A4(uint64_t a1)
{
  *(void *)a1 = off_100467DA0;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1003334F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_100333500()
{
}

void sub_100333564()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10033358C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 36))
  {
    *(void *)(a1 + 16) = 0;
    *(void *)(a1 + ++*(void *)(result + 24) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_1003335AC(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 36);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (int)a2, *(double *)(result + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 2) == 0)
    {
LABEL_3:
      uint64_t v8 = *(void **)(v4 + 8);
      uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
      uint64_t v6 = v8;
      if (!v8) {
        return result;
      }
      goto LABEL_7;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v4 + 24), a3);
  uint64_t v9 = *(void **)(v4 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  uint64_t v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_7:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

uint64_t sub_100333648(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v3 = *(_DWORD *)(a1 + 36);
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = *(void *)(a1 + 24);
    *(unsigned char *)a2 = 17;
    *(void *)(a2 + 1) = v8;
    a2 += 9;
    uint64_t v9 = *(void **)(a1 + 8);
    uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v5 = v9;
    if (!v9) {
      return a2;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a1 + 16);
  *(unsigned char *)a2 = 9;
  *(void *)(a2 + 1) = v7;
  a2 += 9;
  if ((*(_DWORD *)(a1 + 36) & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v6 = *(void **)(a1 + 8);
  uint64_t v4 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v5 = v6;
  if (!v6) {
    return a2;
  }
LABEL_7:
  if (*v5 != v5[1]) {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v4, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
  return a2;
}

uint64_t sub_100333720(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 36);
  unsigned int v4 = (v3 << 31 >> 31) & 9;
  if ((v3 & 2) != 0) {
    v4 += 9;
  }
  if (*(unsigned char *)(a1 + 36)) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v8 = *(void **)(a1 + 8);
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  uint64_t v7 = v8;
  if (v8 && *v7 != v7[1]) {
    uint64_t v5 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
  }
       + v5;
  *(_DWORD *)(a1 + 32) = v5;
  return v5;
}

uint64_t sub_100333788(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1000747D8((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100333868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10033387C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100333890(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10033391C()
{
  uint64_t v0 = qword_10047E2E8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100332594;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E2B8;
}

void sub_1003339AC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_1003339C0(void *a1)
{
  *a1 = off_100467E50;
  if ((void *)qword_100492A70 != a1)
  {
    uint64_t v2 = a1[2];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_100333A54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 44) = a2;
  return result;
}

void sub_100333A5C()
{
}

void sub_100333AC8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100333AF0(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 48))
  {
    if (*(unsigned char *)(this + 48))
    {
      this = *(void *)(this + 16);
      if (this)
      {
        if (*(unsigned char *)(this + 36))
        {
          *(void *)(this + 16) = 0;
          *(void *)(this + ++*(void *)(result + 24) = 0;
        }
        uint64_t v2 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 2++*(void *)(result + 8) = 0;
        if (v2) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(void *)(v1 + ++*(void *)(result + 24) = 0;
    *(void *)(v1 + 32) = 0;
    *(unsigned char *)(v1 + 40) = 0;
  }
  uint64_t v4 = *(void *)(v1 + 8);
  char v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v3 + 10) = 0;
  if (v4)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v3);
  }
  return this;
}

uint64_t sub_100333B84(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 48);
  if (v6)
  {
    uint64_t v10 = *(void *)(result + 16);
    if (v10)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
      int v6 = *(_DWORD *)(v5 + 48);
      if ((v6 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(qword_100492A70 + 16), a2, a4);
      int v6 = *(_DWORD *)(v5 + 48);
      if ((v6 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_12;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 40), (BOOL)a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 8) == 0)
  {
LABEL_5:
    uint64_t v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v5 + 32), a3);
  char v11 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v11;
  if (!v11) {
    return result;
  }
LABEL_14:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

unsigned char *sub_100333C80(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  if ((*((unsigned char *)this + 48) & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 2);
  if (v4)
  {
    *a2 = 10;
    unsigned int v5 = a2 + 1;
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v4 + 32);
    if (v6 <= 0x7F) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(qword_100492A70 + 16);
    *a2 = 10;
    unsigned int v5 = a2 + 1;
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v4 + 32);
    if (v6 <= 0x7F)
    {
LABEL_4:
      a2[1] = (_BYTE)v6;
      a2 += 2;
      int v7 = *(_DWORD *)(v4 + 36);
      if ((v7 & 1) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
  }
  a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, v5, a3);
  int v7 = *(_DWORD *)(v4 + 36);
  if (v7)
  {
LABEL_8:
    uint64_t v8 = *(void *)(v4 + 16);
    *a2 = 9;
    *(void *)(a2 + 1) = v8;
    a2 += 9;
    int v7 = *(_DWORD *)(v4 + 36);
  }
LABEL_9:
  if ((v7 & 2) != 0)
  {
    uint64_t v12 = *(void *)(v4 + 24);
    *a2 = 17;
    *(void *)(a2 + 1) = v12;
    a2 += 9;
    unint64_t v13 = *(void **)(v4 + 8);
    uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    uint64_t v9 = v13;
    if (!v13) {
      goto LABEL_15;
    }
  }
  else
  {
    char v11 = *(void **)(v4 + 8);
    uint64_t v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    uint64_t v9 = v11;
    if (!v11) {
      goto LABEL_15;
    }
  }
  if (*v9 != v9[1]) {
    a2 = (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
  }
LABEL_15:
  int v14 = *((_DWORD *)this + 12);
  if ((v14 & 2) != 0)
  {
    uint64_t v18 = *((void *)this + 3);
    *a2 = 17;
    *(void *)(a2 + 1) = v18;
    a2 += 9;
    int v14 = *((_DWORD *)this + 12);
    if ((v14 & 4) == 0)
    {
LABEL_17:
      if ((v14 & 8) == 0) {
        goto LABEL_18;
      }
      goto LABEL_22;
    }
  }
  else if ((v14 & 4) == 0)
  {
    goto LABEL_17;
  }
  char v19 = *((unsigned char *)this + 40);
  *a2 = 24;
  a2[1] = v19;
  a2 += 2;
  if ((*((_DWORD *)this + 12) & 8) == 0)
  {
LABEL_18:
    uint64_t v17 = (void *)*((void *)this + 1);
    unint64_t v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v15 = v17;
    if (!v17) {
      return a2;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v20 = *((void *)this + 4);
  *a2 = 33;
  *(void *)(a2 + 1) = v20;
  a2 += 9;
  uint64_t v21 = (void *)*((void *)this + 1);
  unint64_t v16 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v15 = v21;
  if (!v21) {
    return a2;
  }
LABEL_23:
  if (*v15 == v15[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v16, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100333EF0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 48);
  if ((_BYTE)v3)
  {
    if ((*(unsigned char *)(a1 + 48) & 1) == 0)
    {
      unsigned int v4 = 0;
      goto LABEL_21;
    }
    uint64_t v9 = *(void *)(a1 + 16);
    if (v9)
    {
      int v10 = *(unsigned __int8 *)(v9 + 36);
      if (*(unsigned char *)(v9 + 36)) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v9 = *(void *)(qword_100492A70 + 16);
      int v10 = *(unsigned __int8 *)(v9 + 36);
      if (*(unsigned char *)(v9 + 36))
      {
LABEL_8:
        if ((v10 & 2) != 0) {
          LODWORD(v11) = ((v10 << 31 >> 31) & 9) + 9;
        }
        else {
          LODWORD(v11) = (v10 << 31 >> 31) & 9;
        }
        uint64_t v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8);
        unint64_t v13 = *(void **)(v9 + 8);
        if (!v13) {
          goto LABEL_18;
        }
LABEL_15:
        if (*v13 != v13[1])
        {
          char v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v12, a2)+ v11);
          *(_DWORD *)(v9 + 32) = v11;
          if (v11 >= 0x80) {
            int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
          }
          else {
            int v14 = 1;
          }
          goto LABEL_20;
        }
LABEL_18:
        *(_DWORD *)(v9 + 32) = v11;
        int v14 = 1;
LABEL_20:
        unsigned int v4 = v11 + v14 + 1;
        int v3 = *(_DWORD *)(a1 + 48);
LABEL_21:
        if ((v3 & 2) != 0) {
          v4 += 9;
        }
        if ((v3 & 4) != 0) {
          v4 += 2;
        }
        if ((v3 & 8) != 0) {
          uint64_t v5 = v4 + 9;
        }
        else {
          uint64_t v5 = v4;
        }
        int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        int v7 = *(void **)(a1 + 8);
        if (!v7) {
          goto LABEL_5;
        }
        goto LABEL_29;
      }
    }
    LODWORD(v11) = 0;
    uint64_t v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v9 + 8);
    unint64_t v13 = *(void **)(v9 + 8);
    if (!v13) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
  uint64_t v5 = 0;
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v7 = *(void **)(a1 + 8);
  if (!v7)
  {
LABEL_5:
    *(_DWORD *)(a1 + 44) = v5;
    return v5;
  }
LABEL_29:
  if (*v7 == v7[1]) {
    goto LABEL_5;
  }
  uint64_t v15 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 44) = v15;
  return v15;
}

uint64_t sub_100334044(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100074608((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100334124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100334138(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10033414C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1003341D8()
{
  uint64_t v0 = qword_10047E2E8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100332594;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E2C8;
}

void sub_100334268(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void sub_10033427C(void *a1)
{
  *a1 = off_100467F00;
  if ((void *)qword_100492A78 != a1)
  {
    uint64_t v2 = a1[3];
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_100334310(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

uint64_t sub_100334318(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t result = qword_100492A78;
  if (!qword_100492A78)
  {
    sub_1003328D4(0, a2, a3, a4);
    return qword_100492A78;
  }
  return result;
}

void sub_100334354()
{
}

void sub_1003343B8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1003343E0(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 36);
  if (v2)
  {
    *(void *)(this + 16) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(this + 24);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 48))
        {
          if (*(unsigned char *)(v3 + 48))
          {
            this = *(void *)(v3 + 16);
            if (this)
            {
              if (*(unsigned char *)(this + 36))
              {
                *(void *)(this + 16) = 0;
                *(void *)(this + ++*(void *)(result + 24) = 0;
              }
              uint64_t v4 = *(void *)(this + 8);
              this += 8;
              *(_DWORD *)(this + 2++*(void *)(result + 8) = 0;
              if (v4) {
                this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
              }
            }
          }
          *(void *)(v3 + ++*(void *)(result + 24) = 0;
          *(void *)(v3 + 32) = 0;
          *(unsigned char *)(v3 + 40) = 0;
        }
        uint64_t v6 = *(void *)(v3 + 8);
        uint64_t v5 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v3 + 8);
        *((_DWORD *)v5 + 10) = 0;
        if (v6) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v5);
        }
      }
    }
  }
  uint64_t v8 = *(void *)(v1 + 8);
  int v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v7 + 7) = 0;
  if (v8)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v7);
  }
  return this;
}

uint64_t sub_100334490(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 36);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(result + 16), a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(_DWORD *)(v5 + 20), a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 4) == 0)
  {
LABEL_4:
    uint64_t v9 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_12;
  }
LABEL_8:
  uint64_t v10 = *(void *)(v5 + 24);
  if (v10)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v10, a2, a4);
    char v11 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v11;
    if (!v11) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(qword_100492A78 + 24), a2, a4);
    uint64_t v12 = *(void **)(v5 + 8);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v7 = v12;
    if (!v12) {
      return result;
    }
  }
LABEL_12:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100334570(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a2;
  if ((*((unsigned char *)this + 36) & 1) == 0)
  {
    if ((*((unsigned char *)this + 36) & 2) == 0) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    *(unsigned char *)uint64_t v3 = 16;
    if (v10 > 0x7F)
    {
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v10, (int)v3 + 1, a3);
      if ((*((unsigned char *)this + 36) & 4) != 0) {
        goto LABEL_14;
      }
    }
    else
    {
      *((unsigned char *)v3 + 1) = (_BYTE)v10;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
      if ((*((unsigned char *)this + 36) & 4) != 0) {
        goto LABEL_14;
      }
    }
LABEL_4:
    int v7 = (void *)*((void *)this + 1);
    int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v5 = v7;
    if (!v7) {
      return v3;
    }
    goto LABEL_20;
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  *(unsigned char *)a2 = 8;
  unsigned int v9 = a2 + 1;
  if (v8 > 0x7F)
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v9, a3);
    if ((*((unsigned char *)this + 36) & 2) != 0) {
      goto LABEL_10;
    }
  }
  else
  {
    *((unsigned char *)v3 + 1) = (_BYTE)v8;
    uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v3 + 2);
    if ((*((unsigned char *)this + 36) & 2) != 0) {
      goto LABEL_10;
    }
  }
LABEL_3:
  if ((*((unsigned char *)this + 36) & 4) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  char v11 = (unsigned int *)*((void *)this + 3);
  if (v11)
  {
    *(unsigned char *)uint64_t v3 = 26;
    unsigned int v12 = v3 + 1;
    unint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[11];
    if (v13 <= 0x7F) {
      goto LABEL_16;
    }
  }
  else
  {
    char v11 = *(unsigned int **)(qword_100492A78 + 24);
    *(unsigned char *)uint64_t v3 = 26;
    unsigned int v12 = v3 + 1;
    unint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11[11];
    if (v13 <= 0x7F)
    {
LABEL_16:
      *((unsigned char *)v3 + 1) = (_BYTE)v13;
      uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100333C80((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, (unsigned char *)v3 + 2, a3);
      int v14 = (void *)*((void *)this + 1);
      int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      uint64_t v5 = v14;
      if (!v14) {
        return v3;
      }
      goto LABEL_20;
    }
  }
  uint64_t v15 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v13, v12, a3);
  uint64_t v3 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100333C80((wireless_diagnostics::google::protobuf::internal::WireFormat *)v11, v15, v16);
  uint64_t v17 = (void *)*((void *)this + 1);
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v5 = v17;
  if (!v17) {
    return v3;
  }
LABEL_20:
  if (*v5 == v5[1]) {
    return v3;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v6, v3, a3);
}

uint64_t sub_1003346E4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 36);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v6 = *(void **)(a1 + 8);
    if (!v6) {
      goto LABEL_17;
    }
    goto LABEL_24;
  }
  if (*(unsigned char *)(a1 + 36))
  {
    int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 16);
    if (v7 >= 0x80)
    {
      uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2)+ 1;
      int v3 = *(_DWORD *)(a1 + 36);
      if ((v3 & 2) == 0) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v4 = 2;
      if ((v3 & 2) == 0) {
        goto LABEL_15;
      }
    }
  }
  else
  {
    uint64_t v4 = 0;
    if ((*(unsigned char *)(a1 + 36) & 2) == 0) {
      goto LABEL_15;
    }
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 20);
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2) + 1;
    int v3 = *(_DWORD *)(a1 + 36);
  }
  else
  {
    int v9 = 2;
  }
  uint64_t v4 = (v9 + v4);
LABEL_15:
  if ((v3 & 4) != 0)
  {
    uint64_t v11 = *(void *)(a1 + 24);
    if (v11)
    {
      unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100333EF0(v11, a2);
      if (v12 < 0x80)
      {
LABEL_20:
        int v13 = 1;
        goto LABEL_23;
      }
    }
    else
    {
      unsigned int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_100333EF0(*(void *)(qword_100492A78 + 24), a2);
      if (v12 < 0x80) {
        goto LABEL_20;
      }
    }
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
LABEL_23:
    uint64_t v4 = (v4 + v12 + v13 + 1);
    uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v6 = *(void **)(a1 + 8);
    if (!v6) {
      goto LABEL_17;
    }
    goto LABEL_24;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v6 = *(void **)(a1 + 8);
  if (!v6)
  {
LABEL_17:
    *(_DWORD *)(a1 + 32) = v4;
    return v4;
  }
LABEL_24:
  if (*v6 == v6[1]) {
    goto LABEL_17;
  }
  uint64_t v14 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2)
      + v4;
  *(_DWORD *)(a1 + 32) = v14;
  return v14;
}

uint64_t sub_100334824(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10007444C((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100334904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100334918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10033492C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1003349B8()
{
  uint64_t v0 = qword_10047E2E8;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_100332594;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E2D8;
}

void sub_100334A48(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100334A5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_100334A64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_100334A6C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_100334A74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

void sub_100334A80(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = operator new(0x38uLL);
  uint64_t v5 = v4;
  v4[1] = 0;
  v4[2] = 0;
  *uint64_t v4 = off_100468010;
  int v6 = v4 + 3;
  v4[5] = 0;
  v4[3] = off_100468060;
  v4[4] = v4 + 5;
  int v4[6] = 0;
  if (v4 + 4 != a1) {
    sub_1003350D4(v4 + 4, (void *)*a1, a1 + 1);
  }
  *a2 = v6;
  a2[1] = v5;
}

void sub_100334B30(_Unwind_Exception *a1)
{
  sub_10033547C(v2, *(void **)(v1 + 40));
  std::__shared_weak_count::~__shared_weak_count((std::__shared_weak_count *)v1);
  operator delete(v4);
  _Unwind_Resume(a1);
}

void sub_100334B54(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100468010;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100334B74(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100468010;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_100334BC8(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_100334BF0(uint64_t a1)
{
  *(void *)a1 = off_100468060;
  sub_10033547C(a1 + 8, *(void **)(a1 + 16));
  return a1;
}

void sub_100334C38(uint64_t a1)
{
  *(void *)a1 = off_100468060;
  sub_10033547C(a1 + 8, *(void **)(a1 + 16));

  operator delete();
}

uint64_t sub_100334CA0(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 8);
  uint64_t v2 = (void *)(a1 + 16);
  uint64_t v3 = 1;
  if (v1 != (void *)(a1 + 16))
  {
    do
    {
      int v5 = (*(uint64_t (**)(void))(*(void *)v1[5] + 16))(v1[5]);
      int v6 = (void *)v1[1];
      if (v6)
      {
        do
        {
          int v7 = v6;
          int v6 = (void *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          int v7 = (void *)v1[2];
          BOOL v8 = *v7 == (void)v1;
          uint64_t v1 = v7;
        }
        while (!v8);
      }
      uint64_t v3 = v3 & v5;
      uint64_t v1 = v7;
    }
    while (v7 != v2);
  }
  return v3;
}

uint64_t sub_100334D44(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void **)(result + 8);
  uint64_t v3 = (void *)(result + 16);
  if (v2 != (void *)(result + 16))
  {
    do
    {
      uint64_t result = (*(uint64_t (**)(void, uint64_t))(*(void *)v2[5] + 24))(v2[5], a2);
      int v5 = (void *)v2[1];
      if (v5)
      {
        do
        {
          int v6 = v5;
          int v5 = (void *)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          int v6 = (void *)v2[2];
          BOOL v7 = *v6 == (void)v2;
          uint64_t v2 = v6;
        }
        while (!v7);
      }
      uint64_t v2 = v6;
    }
    while (v6 != v3);
  }
  return result;
}

uint64_t sub_100334DE8(uint64_t result, float a2)
{
  uint64_t v2 = *(void **)(result + 8);
  uint64_t v3 = (void *)(result + 16);
  if (v2 != (void *)(result + 16))
  {
    do
    {
      uint64_t result = (*(uint64_t (**)(void, float))(*(void *)v2[5] + 32))(v2[5], a2);
      int v5 = (void *)v2[1];
      if (v5)
      {
        do
        {
          int v6 = v5;
          int v5 = (void *)*v5;
        }
        while (v5);
      }
      else
      {
        do
        {
          int v6 = (void *)v2[2];
          BOOL v7 = *v6 == (void)v2;
          uint64_t v2 = v6;
        }
        while (!v7);
      }
      uint64_t v2 = v6;
    }
    while (v6 != v3);
  }
  return result;
}

WifiScannerSettings *sub_100334E8C(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  int v6 = +[NSMutableArray arrayWithCapacity:a1[3]];
  BOOL v7 = (void *)a1[1];
  BOOL v8 = a1 + 2;
  if (v7 == a1 + 2)
  {
    id v9 = 0;
    float v11 = 0.0;
    uint64_t v10 = 1;
  }
  else
  {
    id v9 = 0;
    LODWORD(v10) = 1;
    float v11 = 0.0;
    do
    {
      unsigned int v12 = (*(void (**)(void, uint64_t, id))(*(void *)v7[5] + 40))(v7[5], a2, v5);
      int v13 = [v12 channels];
      [v6 addObjectsFromArray:v13];

      [v12 dutyCycle];
      if (v14 > v11)
      {
        [v12 dutyCycle];
        float v11 = v15;
      }
      if ((uint64_t)v9 < (uint64_t)[v12 dwell]) {
        id v9 = [v12 dwell];
      }
      unsigned int v16 = [v12 lowPriorityScan];

      uint64_t v17 = (void *)v7[1];
      if (v17)
      {
        do
        {
          uint64_t v18 = v17;
          uint64_t v17 = (void *)*v17;
        }
        while (v17);
      }
      else
      {
        do
        {
          uint64_t v18 = (void *)v7[2];
          BOOL v19 = *v18 == (void)v7;
          BOOL v7 = v18;
        }
        while (!v19);
      }
      uint64_t v10 = v16 & v10;
      BOOL v7 = v18;
    }
    while (v18 != v8);
  }
  uint64_t v20 = [WifiScannerSettings alloc];
  *(float *)&double v21 = v11;
  unint64_t v22 = [(WifiScannerSettings *)v20 initWithChannels:v6 dwell:v9 scanType:2 includingOffChannelResults:0 atDutyCycle:v10 asLowPriority:v21];

  return v22;
}

void sub_100335048(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100335058(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003350BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003350D4(void *a1, void *a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = (uint64_t)a1;
  if (a1[2])
  {
    int v6 = (void *)*a1;
    BOOL v8 = (uint64_t **)(a1 + 1);
    uint64_t v7 = a1[1];
    *a1 = a1 + 1;
    *(void *)(v7 + 16) = 0;
    a1[2] = 0;
    a1[1] = 0;
    if (v6[1]) {
      id v9 = (void *)v6[1];
    }
    else {
      id v9 = v6;
    }
    if (!v9)
    {
      uint64_t v26 = 0;
LABEL_53:
      sub_10033547C((uint64_t)a1, v26);
      goto LABEL_54;
    }
    uint64_t v10 = (void *)v9[2];
    if (v10)
    {
      float v11 = (void *)*v10;
      if ((void *)*v10 == v9)
      {
        *uint64_t v10 = 0;
        while (1)
        {
          unsigned int v38 = (void *)v10[1];
          if (!v38) {
            break;
          }
          do
          {
            uint64_t v10 = v38;
            unsigned int v38 = (void *)*v38;
          }
          while (v38);
        }
      }
      else
      {
        for (v10[1] = 0; v11; float v11 = (void *)v10[1])
        {
          do
          {
            uint64_t v10 = v11;
            float v11 = (void *)*v11;
          }
          while (v11);
        }
      }
    }
    if (a2 != a3)
    {
      unsigned int v12 = v9;
      int v13 = a2;
      while (1)
      {
        id v9 = v10;
        *((unsigned char *)v12 + 32) = *((unsigned char *)v13 + 32);
        uint64_t v15 = v13[5];
        uint64_t v14 = v13[6];
        if (v14) {
          atomic_fetch_add_explicit((atomic_ullong *volatile)(v14 + 8), 1uLL, memory_order_relaxed);
        }
        unsigned int v16 = (std::__shared_weak_count *)v12[6];
        v12[5] = v15;
        v12[6] = v14;
        if (v16 && !atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
          uint64_t v17 = *v8;
          uint64_t v18 = (void *)(v5 + 8);
          BOOL v19 = (void *)(v5 + 8);
          if (*v8)
          {
LABEL_18:
            if (*((unsigned char *)v12 + 32))
            {
              do
              {
                uint64_t v18 = v17;
                uint64_t v17 = (uint64_t *)v17[1];
              }
              while (v17);
LABEL_20:
              BOOL v19 = v18 + 1;
            }
            else
            {
              do
              {
                while (1)
                {
                  uint64_t v18 = v17;
                  if (*((unsigned char *)v17 + 32)) {
                    break;
                  }
                  uint64_t v17 = (uint64_t *)v17[1];
                  if (!v17) {
                    goto LABEL_20;
                  }
                }
                uint64_t v17 = (uint64_t *)*v17;
                BOOL v19 = v18;
              }
              while (*v18);
            }
          }
        }
        else
        {
          uint64_t v17 = *v8;
          uint64_t v18 = (void *)(v5 + 8);
          BOOL v19 = (void *)(v5 + 8);
          if (*v8) {
            goto LABEL_18;
          }
        }
        *unsigned int v12 = 0;
        v12[1] = 0;
        void v12[2] = v18;
        *BOOL v19 = v12;
        uint64_t v20 = **(void **)v5;
        if (v20)
        {
          *(void *)uint64_t v5 = v20;
          unsigned int v12 = (void *)*v19;
        }
        sub_1000619B8(*(uint64_t **)(v5 + 8), v12);
        ++*(void *)(v5 + 16);
        if (v10)
        {
          uint64_t v10 = (void *)v10[2];
          if (v10)
          {
            int v23 = (void *)*v10;
            if ((void *)*v10 == v9)
            {
              *uint64_t v10 = 0;
              while (1)
              {
                int v24 = (void *)v10[1];
                if (!v24) {
                  break;
                }
                do
                {
                  uint64_t v10 = v24;
                  int v24 = (void *)*v24;
                }
                while (v24);
              }
            }
            else
            {
              for (v10[1] = 0; v23; int v23 = (void *)v10[1])
              {
                do
                {
                  uint64_t v10 = v23;
                  int v23 = (void *)*v23;
                }
                while (v23);
              }
            }
          }
        }
        else
        {
          uint64_t v10 = 0;
        }
        double v21 = (void *)v13[1];
        if (v21)
        {
          do
          {
            uint64_t v4 = v21;
            double v21 = (void *)*v21;
          }
          while (v21);
        }
        else
        {
          do
          {
            uint64_t v4 = (void *)v13[2];
            BOOL v22 = *v4 == (void)v13;
            int v13 = v4;
          }
          while (!v22);
        }
        if (v9)
        {
          unsigned int v12 = v9;
          int v13 = v4;
          if (v4 != a3) {
            continue;
          }
        }
        break;
      }
    }
    sub_10033547C(v5, v9);
    if (v10)
    {
      for (int i = (void *)v10[2]; i; int i = (void *)i[2])
        uint64_t v10 = i;
      a1 = (void *)v5;
      uint64_t v26 = v10;
      goto LABEL_53;
    }
  }
LABEL_54:
  if (v4 != a3)
  {
    int v27 = (uint64_t ***)(v5 + 8);
    do
    {
      uint64_t v28 = (uint64_t *)operator new(0x38uLL);
      int v29 = v28;
      int v30 = *((unsigned __int8 *)v4 + 32);
      *((unsigned char *)v28 + 32) = v30;
      uint64_t v31 = v4[6];
      v28[5] = v4[5];
      v28[6] = v31;
      if (v31) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v31 + 8), 1uLL, memory_order_relaxed);
      }
      uint64_t v32 = *v27;
      uint64_t v33 = (uint64_t **)(v5 + 8);
      int v34 = (uint64_t **)(v5 + 8);
      if (*v27)
      {
        if (v30)
        {
          do
          {
            uint64_t v33 = v32;
            uint64_t v32 = (uint64_t **)v32[1];
          }
          while (v32);
LABEL_62:
          int v34 = v33 + 1;
        }
        else
        {
          do
          {
            while (1)
            {
              uint64_t v33 = v32;
              if (*((unsigned char *)v32 + 32)) {
                break;
              }
              uint64_t v32 = (uint64_t **)v32[1];
              if (!v32) {
                goto LABEL_62;
              }
            }
            uint64_t v32 = (uint64_t **)*v32;
            int v34 = v33;
          }
          while (*v33);
        }
      }
      *uint64_t v28 = 0;
      v28[1] = 0;
      v28[2] = (uint64_t)v33;
      *int v34 = v28;
      uint64_t v35 = **(void **)v5;
      if (v35)
      {
        *(void *)uint64_t v5 = v35;
        int v29 = *v34;
      }
      sub_1000619B8(*(uint64_t **)(v5 + 8), v29);
      ++*(void *)(v5 + 16);
      uint64_t v36 = (void *)v4[1];
      if (v36)
      {
        do
        {
          int v37 = v36;
          uint64_t v36 = (void *)*v36;
        }
        while (v36);
      }
      else
      {
        do
        {
          int v37 = (void *)v4[2];
          BOOL v22 = *v37 == (void)v4;
          uint64_t v4 = v37;
        }
        while (!v22);
      }
      uint64_t v4 = v37;
    }
    while (v37 != a3);
  }
}

void sub_10033547C(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10033547C(a1, *a2);
    sub_10033547C(a1, a2[1]);
    uint64_t v4 = (std::__shared_weak_count *)a2[6];
    if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
      uint64_t v5 = a2;
    }
    else
    {
      uint64_t v5 = a2;
    }
    operator delete(v5);
  }
}

void sub_100335538()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1003355B0()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100335628()
{
}

void sub_100335650(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1004680C8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100335670(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1004680C8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_1003356C4(void *a1)
{
  *a1 = off_100468118;
  uint64_t v2 = (void *)a1[6];
  if (v2)
  {
    a1[7] = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)a1[3];
  if (v3)
  {
    a1[4] = v3;
    operator delete(v3);
  }

  operator delete();
}

uint64_t sub_100335744(uint64_t result, unsigned __int8 a2)
{
  return result;
}

uint64_t sub_100335750(uint64_t result, float a2)
{
  return result;
}

void sub_100335760()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1003357D8()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100335850()
{
}

void sub_10033594C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003359F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100335A94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100335B94(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  uint64_t v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

void sub_100335BD8()
{
}

void sub_100335C30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100335D2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, objc_super a12)
{
  a12.super_class = (Class)WifiScannerThread;
  [(_Unwind_Exception *)&a12 dealloc];
  _Unwind_Resume(a1);
}

id sub_100335D68()
{
  if (qword_10047BED8 == -1)
  {
    uint64_t v0 = (void *)qword_10047BEE0;
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_1004682C0);
    uint64_t v0 = (void *)qword_10047BEE0;
  }
  return v0;
}

void sub_10033613C(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 32))
  {
    if (qword_10047BED8 == -1)
    {
      uint64_t v2 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        goto LABEL_5;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_1004682C0);
      uint64_t v2 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO))
      {
LABEL_5:
        [*(id *)(a1 + 32) onQueueTeardown];
        if (qword_10047BED8 == -1)
        {
          uint64_t v3 = qword_10047BEE0;
          if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO))
          {
LABEL_8:
            **(unsigned char **)(a1 + 40) = 1;
            return;
          }
        }
        else
        {
          dispatch_once(&qword_10047BED8, &stru_1004682C0);
          uint64_t v3 = qword_10047BEE0;
          if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
            goto LABEL_8;
          }
        }
        *(_WORD *)uint64_t v5 = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Wi-Fi callbacks unregistered.", v5, 2u);
        goto LABEL_8;
      }
    }
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Unregistering all Wi-Fi callbacks.", buf, 2u);
    goto LABEL_5;
  }
  if (qword_10047BED8 == -1)
  {
    uint64_t v4 = qword_10047BEE0;
    if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO))
    {
LABEL_12:
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "Wi-Fi thread already shut-down", v7, 2u);
    }
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_1004682C0);
    uint64_t v4 = qword_10047BEE0;
    if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
      goto LABEL_12;
    }
  }
}

id sub_100336318(uint64_t a1, uint64_t a2)
{
  id result = *(id *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v5;
  return result;
}

void sub_10033634C(uint64_t a1)
{
}

void sub_100336354(uint64_t a1)
{
  if (qword_10047BED8 == -1)
  {
    uint64_t v2 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  dispatch_once(&qword_10047BED8, &stru_1004682C0);
  uint64_t v2 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG))
  {
LABEL_3:
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Freeing old WiFi manager", buf, 2u);
  }
LABEL_4:
  CFRelease(*(CFTypeRef *)(a1 + 40));
  if (qword_10047BED8 != -1)
  {
    dispatch_once(&qword_10047BED8, &stru_1004682C0);
    uint64_t v3 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v3 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG))
  {
LABEL_6:
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Stopping the WiFi runloop", v4, 2u);
  }
LABEL_7:
  [*(id *)(a1 + 32) setStopExpected];
  CFRunLoopStop(*(CFRunLoopRef *)(a1 + 48));
  CFRelease(*(CFTypeRef *)(a1 + 56));
}

void sub_10033649C(uint64_t a1, void *a2)
{
  if (qword_10047BED8 != -1)
  {
    dispatch_once(&qword_10047BED8, &stru_1004682C0);
    uint64_t v3 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v3 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO))
  {
LABEL_3:
    LODWORD(buf) = 134217984;
    *(void *)((char *)&buf + 4) = a2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "wifid restarted. refcon %p", (uint8_t *)&buf, 0xCu);
  }
LABEL_4:
  id v8 = a2;
  uint64_t v4 = v8;
  uint64_t v5 = v4;
  if (v4)
  {
    int v6 = (void *)v4[3];
    if (v6)
    {
      *(void *)&long long buf = _NSConcreteStackBlock;
      *((void *)&buf + 1) = 3321888768;
      uint64_t v10 = sub_1003386A0;
      float v11 = &unk_1004682E0;
      unsigned int v12 = v4;
      int v13 = &v8;
      uint64_t v7 = v6;
      dispatch_sync(v7, &buf);
    }
  }
}

void sub_100336624(uint64_t a1, void *a2, void *a3)
{
  if (qword_10047BED8 != -1)
  {
    dispatch_once(&qword_10047BED8, &stru_1004682C0);
    uint64_t v5 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v5 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO))
  {
LABEL_3:
    LODWORD(buf) = 134217984;
    *(void *)((char *)&buf + 4) = a3;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "wifi device attached. refcon %p", (uint8_t *)&buf, 0xCu);
  }
LABEL_4:
  v10[0] = a3;
  v10[1] = a2;
  int v6 = v10[0];
  uint64_t v7 = v6;
  if (v6)
  {
    id v8 = (void *)v6[3];
    if (v8)
    {
      *(void *)&long long buf = _NSConcreteStackBlock;
      *((void *)&buf + 1) = 3321888768;
      unsigned int v12 = sub_100338744;
      int v13 = &unk_100468310;
      uint64_t v14 = v6;
      uint64_t v15 = v10;
      id v9 = v8;
      dispatch_sync(v9, &buf);
    }
  }
}

void sub_1003368A8(uint64_t a1, int a2)
{
  if (!*(void *)(a1 + 8))
  {
    if (qword_10047BED8 == -1)
    {
      unsigned int v12 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
        return;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_1004682C0);
      unsigned int v12 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
        return;
      }
    }
    *(_DWORD *)BOOL v19 = 67109120;
    *(_DWORD *)&v19[4] = a2;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "Ignoring request to invalidate scan with error: %d. Already invalidated", v19, 8u);
    return;
  }
  *(_DWORD *)(a1 + 64) = a2;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v4 = *(void *)(a1 + 56) - std::chrono::steady_clock::now().__d_.__rep_;
  id v5 = [*(id *)(a1 + 24) estimatedScanTime];
  unint64_t v6 = (v4 + 1000000 * (void)v5) & ~((v4 + 1000000 * (uint64_t)v5) >> 63);
  if (a2 != 82)
  {
    if (qword_10047BED8 == -1)
    {
      uint64_t v13 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_13;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_1004682C0);
      uint64_t v13 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_13;
      }
    }
    *(_DWORD *)BOOL v19 = 67109376;
    *(_DWORD *)&v19[4] = a2;
    *(_WORD *)&unsigned char v19[8] = 2048;
    *(void *)&v19[10] = v6 / 0xF4240;
    id v8 = "Cancelling pending scan due to wifi error %d.  Cancellation will be handled in %lld ms";
    id v9 = v13;
    os_log_type_t v10 = OS_LOG_TYPE_ERROR;
    uint32_t v11 = 18;
    goto LABEL_12;
  }
  if (qword_10047BED8 != -1)
  {
    dispatch_once(&qword_10047BED8, &stru_1004682C0);
    uint64_t v7 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_13;
    }
    goto LABEL_5;
  }
  uint64_t v7 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG))
  {
LABEL_5:
    *(_DWORD *)BOOL v19 = 134217984;
    *(void *)&v19[4] = v6 / 0xF4240;
    id v8 = "Wifi is powered off - cancellation will be handled in %lld ms";
    id v9 = v7;
    os_log_type_t v10 = OS_LOG_TYPE_DEBUG;
    uint32_t v11 = 12;
LABEL_12:
    _os_log_impl((void *)&_mh_execute_header, v9, v10, v8, v19, v11);
  }
LABEL_13:
  uint64_t v14 = *(const void **)(a1 + 8);
  *(void *)(a1 + ++*(void *)(result + 8) = 0;
  if (v14) {
    CFRelease(v14);
  }
  unsigned int v16 = (dispatch_source_t *)(a1 + 40);
  uint64_t v15 = *(NSObject **)(a1 + 40);
  *(void *)BOOL v19 = _NSConcreteStackBlock;
  *(void *)&unsigned char v19[8] = 3321888768;
  *(void *)&v19[16] = sub_1003387E8;
  uint64_t v20 = &unk_100468340;
  uint64_t v21 = a1;
  uint64_t v17 = objc_retainBlock(v19);
  dispatch_source_set_event_handler(v15, v17);

  dispatch_time_t v18 = dispatch_time(0, v6);
  dispatch_source_set_timer(*v16, v18, 0xFFFFFFFFFFFFFFFFLL, 0);
}

void sub_100336B98(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_1000A6954(a1);
  }
  _Unwind_Resume(a1);
}

void sub_100336CE4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v2 = *(id *)(v1 + 48);
  uint64_t v3 = (char *)[v2 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v3)
  {
    uint64_t v4 = *(void *)v7;
    do
    {
      id v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v2);
        }
        WiFiDeviceClientRegisterScanUpdateCallback();
        ++v5;
      }
      while (v3 != v5);
      uint64_t v3 = (char *)[v2 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

void sub_100336DE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100336E08(uint64_t a1, uint64_t a2)
{
  id result = *(id *)(a2 + 32);
  *(void *)(a1 + 32) = result;
  return result;
}

void sub_100336E34(uint64_t a1)
{
}

void *sub_100336E3C(void *a1)
{
  id v2 = (void *)*a1;
  if (*a1)
  {
    uint64_t v3 = (void *)a1[1];
    uint64_t v4 = (void *)*a1;
    if (v3 != v2)
    {
      do
      {
        long long v6 = (id *)*--v3;
        id v5 = v6;
        void *v3 = 0;
        if (v6)
        {
          sub_100338BB4(v5);
          operator delete();
        }
      }
      while (v3 != v2);
      uint64_t v4 = (void *)*a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_100336EC0(uint64_t a1, CFTypeRef cf, int a3, id *a4)
{
  uint64_t v6 = a1;
  if (!cf)
  {
    CFArrayRef v9 = 0;
    goto LABEL_5;
  }
  CFTypeID v8 = CFGetTypeID(cf);
  if (v8 == CFArrayGetTypeID())
  {
    a1 = v6;
    CFArrayRef v9 = (const __CFArray *)cf;
LABEL_5:
    sub_100338EB0(a1, v9, a3, a4);
    return;
  }
  if (qword_10047BED8 != -1) {
    dispatch_once(&qword_10047BED8, &stru_1004682C0);
  }
  os_log_type_t v10 = (id)qword_10047BEE0;
  if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
  {
    CFTypeID v11 = CFGetTypeID(cf);
    CFStringRef v12 = CFCopyTypeIDDescription(v11);
    int v13 = 136315138;
    CStringPtr = CFStringGetCStringPtr(v12, 0x8000100u);
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "We expect that networkScan is of type CFArray, but it's not. Memory smasher? Got %s", (uint8_t *)&v13, 0xCu);
  }
}

void sub_100337058(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100337068(uint64_t a1, CFTypeRef cf, int a3, id *a4)
{
  if (cf)
  {
    CFTypeID v8 = CFGetTypeID(cf);
    if (v8 != CFArrayGetTypeID())
    {
      CFArrayRef v9 = sub_100335D68();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_FAULT))
      {
        CFTypeID v10 = CFGetTypeID(cf);
        CFStringRef v11 = CFCopyTypeIDDescription(v10);
        *(_DWORD *)long long buf = 68289795;
        int v21 = 0;
        __int16 v22 = 2082;
        int v23 = "";
        __int16 v24 = 2082;
        CStringPtr = CFStringGetCStringPtr(v11, 0x8000100u);
        __int16 v26 = 2082;
        int v27 = "assert";
        __int16 v28 = 2081;
        int v29 = "networkScan == __null || CFGetTypeID(networkScan) == CFArrayGetTypeID()";
        _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_FAULT, "{\"msg%{public}.0s\":\"We expect that networkScan is of type CFArray, but it's not. Memory smasher?\", \"networkScanType\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x30u);
      }

      CFStringRef v12 = sub_100335D68();
      if (os_signpost_enabled(v12))
      {
        CFTypeID v13 = CFGetTypeID(cf);
        CFStringRef v14 = CFCopyTypeIDDescription(v13);
        uint64_t v15 = CFStringGetCStringPtr(v14, 0x8000100u);
        *(_DWORD *)long long buf = 68289795;
        int v21 = 0;
        __int16 v22 = 2082;
        int v23 = "";
        __int16 v24 = 2082;
        CStringPtr = v15;
        __int16 v26 = 2082;
        int v27 = "assert";
        __int16 v28 = 2081;
        int v29 = "networkScan == __null || CFGetTypeID(networkScan) == CFArrayGetTypeID()";
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v12, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "We expect that networkScan is of type CFArray, but it's not. Memory smasher?", "{\"msg%{public}.0s\":\"We expect that networkScan is of type CFArray, but it's not. Memory smasher?\", \"networkScanType\":%{public, location:escape_only}s, \"event\":%{public, location:escape_only}s, \"condition\":%{private, location:escape_only}s}", buf, 0x30u);
      }

      unsigned int v16 = sub_100335D68();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
      {
        CFTypeID v17 = CFGetTypeID(cf);
        CFStringRef v18 = CFCopyTypeIDDescription(v17);
        BOOL v19 = CFStringGetCStringPtr(v18, 0x8000100u);
        sub_1003A7438((uint64_t)v19, buf, v16);
      }

      abort_report_np();
      __break(1u);
    }
  }

  sub_100338EB0(a1, (const __CFArray *)cf, a3, a4);
}

void sub_1003372E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id **sub_100337314(id **a1)
{
  id v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    sub_100338BB4(v2);
    operator delete();
  }
  return a1;
}

void sub_100337528(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100338340(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a16 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_10033865C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  id v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

void sub_1003386A0(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 32))
  {
    [**(id **)(a1 + 40) onQueueHandlerServerRestart];
  }
}

id sub_100338708(uint64_t a1, uint64_t a2)
{
  id result = *(id *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v5;
  return result;
}

void sub_10033873C(uint64_t a1)
{
}

void sub_100338744(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 32))
  {
    [**(id **)(a1 + 40) onQueueHandleDeviceAttached:*(void *)(*(void *)(a1 + 40) + 8)];
  }
}

id sub_1003387AC(uint64_t a1, uint64_t a2)
{
  id result = *(id *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v5;
  return result;
}

void sub_1003387E0(uint64_t a1)
{
}

uint64_t sub_1003387E8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a1 + 32) + 48) + 16))();
}

uint64_t sub_100338804(uint64_t result, uint64_t a2)
{
  *(void *)(result + 32) = *(void *)(a2 + 32);
  return result;
}

void sub_100338814(uint64_t a1, uint64_t a2, CFTypeRef cf, int a4, void *a5)
{
  if (cf && (CFTypeID v10 = CFGetTypeID(cf), v10 != CFArrayGetTypeID()))
  {
    CFTypeID v13 = CFGetTypeID(cf);
    CFStringRef v14 = CFCopyTypeIDDescription(v13);
    if (qword_10047BED8 != -1) {
      dispatch_once(&qword_10047BED8, &stru_1004682C0);
    }
    uint64_t v15 = (id)qword_10047BEE0;
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)long long buf = 136315138;
      *(void *)&uint8_t buf[4] = CFStringGetCStringPtr(v14, 0x8000100u);
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "We expect that networkScanResults is of type CFArray, but it's not. Memory smasher? Got %s", buf, 0xCu);
    }

    CFRelease(v14);
  }
  else
  {
    if (qword_10047BED8 != -1) {
      dispatch_once(&qword_10047BED8, &stru_1004682C0);
    }
    CFStringRef v11 = (id)qword_10047BEE0;
    if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
    {
      if (cf) {
        CFIndex Count = CFArrayGetCount((CFArrayRef)cf);
      }
      else {
        CFIndex Count = -1;
      }
      *(_DWORD *)long long buf = 134218496;
      *(void *)&uint8_t buf[4] = Count;
      *(_WORD *)&buf[12] = 1024;
      *(_DWORD *)&buf[14] = a4;
      *(_WORD *)&buf[18] = 2048;
      *(void *)&buf[20] = a5;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Got cached scan from framework: %ld APs, errcode %d, refcon %p", buf, 0x1Cu);
    }

    uint64_t v20 = a1;
    id v21 = a5;
    uint64_t v22 = a2;
    CFTypeRef v23 = cf;
    int v24 = a4;
    unsigned int v16 = v21;
    CFTypeID v17 = v16;
    if (v16)
    {
      CFStringRef v18 = (void *)v16[3];
      if (v18)
      {
        *(void *)long long buf = _NSConcreteStackBlock;
        *(void *)&uint8_t buf[8] = 3321888768;
        *(void *)&uint8_t buf[16] = sub_100338AC8;
        *(void *)&buf[24] = &unk_100468370;
        __int16 v26 = v16;
        int v27 = &v20;
        BOOL v19 = v18;
        dispatch_sync(v19, buf);
      }
    }
  }
}

void sub_100338AA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100338AB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100338AC8(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 32))
  {
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = +[WifiScannerCommonDarwin dictionaryToScanSettings:*(void *)(v3 + 16)];
    [*(id *)(v3 + 8) onQueueHandleScanFor:*(void *)v3 withResults:*(void *)(v3 + 24) forScan:0 withSettings:v4 withRequest:*(void *)(v3 + 16) withError:*(unsigned int *)(v3 + 32)];
  }
}

void sub_100338B68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100338B78(uint64_t a1, uint64_t a2)
{
  id result = *(id *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v5;
  return result;
}

void sub_100338BAC(uint64_t a1)
{
}

id *sub_100338BB4(id *a1)
{
  id v2 = a1[5];
  if (v2)
  {
    dispatch_source_set_timer(v2, 0xFFFFFFFFFFFFFFFFLL, 0xFFFFFFFFFFFFFFFFLL, 0);
    dispatch_source_set_event_handler((dispatch_source_t)a1[5], &stru_1004683A0);
    dispatch_source_cancel((dispatch_source_t)a1[5]);
    id v3 = a1[5];
  }
  else
  {
    id v3 = 0;
  }

  objc_destroyWeak(a1 + 2);
  id v4 = a1[1];
  a1[1] = 0;
  if (v4) {
    CFRelease(v4);
  }
  if (qword_10047BED8 != -1)
  {
    dispatch_once(&qword_10047BED8, &stru_1004682C0);
    uint64_t v5 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
      return a1;
    }
    goto LABEL_8;
  }
  uint64_t v5 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO))
  {
LABEL_8:
    id v6 = *a1;
    int v8 = 134217984;
    id v9 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "Pending scan information destroyed: %p", (uint8_t *)&v8, 0xCu);
  }
  return a1;
}

void sub_100338D0C(_Unwind_Exception *a1, int a2)
{
  if (!a2) {
    _Unwind_Resume(a1);
  }
  sub_1000A6954(a1);
}

dispatch_source_t *sub_100338D18(dispatch_source_t *a1)
{
  id v2 = *a1;
  if (v2)
  {
    dispatch_source_set_timer(v2, 0xFFFFFFFFFFFFFFFFLL, 0xFFFFFFFFFFFFFFFFLL, 0);
    dispatch_source_set_event_handler(*a1, &stru_1004683A0);
    dispatch_source_cancel(*a1);
  }
  else
  {
  }
  return a1;
}

const void **sub_100338D8C(const void **a1)
{
  id v2 = *a1;
  *a1 = 0;
  if (v2) {
    CFRelease(v2);
  }
  return a1;
}

uint64_t *sub_100338DC4(uint64_t *a1)
{
  if (qword_10047BED8 != -1)
  {
    dispatch_once(&qword_10047BED8, &stru_1004682C0);
    id v2 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
      return a1;
    }
    goto LABEL_3;
  }
  id v2 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO))
  {
LABEL_3:
    uint64_t v3 = *a1;
    int v5 = 134217984;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Pending scan information destroyed: %p", (uint8_t *)&v5, 0xCu);
  }
  return a1;
}

void sub_100338EB0(uint64_t a1, const __CFArray *a2, int a3, id *a4)
{
  if (qword_10047BED8 != -1) {
    dispatch_once(&qword_10047BED8, &stru_1004682C0);
  }
  id v9 = (id)qword_10047BEE0;
  if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
  {
    if (a2) {
      CFIndex Count = CFArrayGetCount(a2);
    }
    else {
      CFIndex Count = -1;
    }
    *(_DWORD *)long long buf = 134218496;
    *(void *)&uint8_t buf[4] = Count;
    *(_WORD *)&buf[12] = 1024;
    *(_DWORD *)&buf[14] = a3;
    *(_WORD *)&buf[18] = 2048;
    *(void *)&buf[20] = a4;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Got scan result from framework: %ld APs, errcode %d, refcon %p", buf, 0x1Cu);
  }

  id WeakRetained = objc_loadWeakRetained(a4 + 2);
  id v12 = a4[3];
  id v13 = a4[4];
  if (!v12)
  {
    sub_1000AE4B0(block, "");
    sub_1001F083C("Lost track of wifi settings for request", (std::string *)buf);
    sub_10016A2C4((uint64_t)block, (uint64_t)buf, 1);
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    if (SHIBYTE(v30) < 0) {
      operator delete(block[0]);
    }
    sub_1000D11E0((uint64_t)__p);
  }
  if (!v13)
  {
    sub_1000AE4B0(block, "");
    sub_1001F083C("Lost track of wifi settings for request", (std::string *)buf);
    sub_10016A2C4((uint64_t)block, (uint64_t)buf, 1);
    if ((buf[23] & 0x80000000) != 0) {
      operator delete(*(void **)buf);
    }
    if (SHIBYTE(v30) < 0) {
      operator delete(block[0]);
    }
    sub_1000D11E0((uint64_t)__p);
  }
  objc_opt_class();
  char isKindOfClass = objc_opt_isKindOfClass();
  uint64_t v15 = (objc_class *)objc_opt_class();
  NSStringFromClass(v15);
  id v16 = objc_claimAutoreleasedReturnValue();
  int v27 = (const std::string::value_type *)[v16 UTF8String];
  if ((isKindOfClass & 1) == 0)
  {
    sub_1000AE4B0(block, "");
    sub_1003394B8("We expect that settingsDictionary is of type NSDictionary, but it's not. Memory smasher? Got ", (std::string *)buf);
    sub_100315E10(&v27, (std::string *)&buf[24]);
    sub_10016A2C4((uint64_t)block, (uint64_t)buf, 2);
    if (SHIBYTE(v36) < 0)
    {
      operator delete(*(void **)&buf[24]);
      if ((buf[23] & 0x80000000) == 0)
      {
LABEL_28:
        if ((SHIBYTE(v30) & 0x80000000) == 0) {
          goto LABEL_29;
        }
LABEL_36:
        operator delete(block[0]);
LABEL_29:
        sub_1000D11E0((uint64_t)__p);
      }
    }
    else if ((buf[23] & 0x80000000) == 0)
    {
      goto LABEL_28;
    }
    operator delete(*(void **)buf);
    if ((SHIBYTE(v30) & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_36;
  }

  objc_opt_class();
  char v17 = objc_opt_isKindOfClass();
  CFStringRef v18 = (objc_class *)objc_opt_class();
  NSStringFromClass(v18);
  id v19 = objc_claimAutoreleasedReturnValue();
  int v27 = (const std::string::value_type *)[v19 UTF8String];
  if ((v17 & 1) == 0)
  {
    sub_1000AE4B0(block, "");
    sub_10024A46C("We expect that settings is of type WifiScannerSettings, but it's not. Memory smasher? Got ", (std::string *)buf);
    sub_100315E10(&v27, (std::string *)&buf[24]);
    sub_10016A2C4((uint64_t)block, (uint64_t)buf, 2);
    if (SHIBYTE(v36) < 0)
    {
      operator delete(*(void **)&buf[24]);
      if ((buf[23] & 0x80000000) == 0)
      {
LABEL_32:
        if ((SHIBYTE(v30) & 0x80000000) == 0) {
          goto LABEL_33;
        }
LABEL_39:
        operator delete(block[0]);
LABEL_33:
        sub_1000D11E0((uint64_t)__p);
      }
    }
    else if ((buf[23] & 0x80000000) == 0)
    {
      goto LABEL_32;
    }
    operator delete(*(void **)buf);
    if ((SHIBYTE(v30) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_39;
  }

  id v20 = WeakRetained;
  *(void *)long long buf = v20;
  *(void *)&uint8_t buf[8] = a1;
  *(void *)&uint8_t buf[16] = a4;
  id v21 = v12;
  *(void *)&buf[24] = v21;
  id v22 = v13;
  id v35 = v22;
  CFArrayRef v36 = a2;
  int v37 = a3;
  CFTypeRef v23 = v20;
  int v24 = v23;
  if (v23)
  {
    unsigned int v25 = (void *)v23[3];
    if (v25)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = (void *)3321888768;
      int v30 = sub_100339508;
      uint64_t v31 = &unk_1004683C0;
      uint64_t v32 = v23;
      uint64_t v33 = buf;
      __int16 v26 = v25;
      dispatch_sync(v26, block);
    }
  }
}

void sub_1003393A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

std::string *sub_1003394B8@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1003394EC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100339508(uint64_t a1)
{
  if (*(void *)(*(void *)(a1 + 32) + 32))
  {
    uint64_t v3 = *(void *)(a1 + 40);
    [*(id *)v3 onQueueHandleScanFor:*(void *)(v3 + 8) withResults:*(void *)(v3 + 40) forScan:*(void *)(v3 + 16) withSettings:*(void *)(v3 + 24) withRequest:*(void *)(v3 + 32) withError:*(unsigned int *)(v3 + 48)];
  }
}

id sub_10033957C(uint64_t a1, uint64_t a2)
{
  id result = *(id *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v5;
  return result;
}

void sub_1003395B0(uint64_t a1)
{
}

void *sub_1003395B8(void *a1, uint64_t *a2)
{
  uint64_t v3 = a1[1] - *a1;
  uint64_t v4 = v3 >> 3;
  unint64_t v5 = (v3 >> 3) + 1;
  if (v5 >> 61) {
    sub_1000A9108();
  }
  uint64_t v7 = a1[2] - *a1;
  if (v7 >> 2 > v5) {
    unint64_t v5 = v7 >> 2;
  }
  if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFF8) {
    unint64_t v8 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v8 = v5;
  }
  if (v8)
  {
    if (v8 >> 61) {
      sub_1000A6A10();
    }
    id v9 = (char *)operator new(8 * v8);
  }
  else
  {
    id v9 = 0;
  }
  CFTypeID v10 = &v9[8 * v4];
  CFStringRef v11 = &v9[8 * v8];
  uint64_t v12 = *a2;
  *a2 = 0;
  *(void *)CFTypeID v10 = v12;
  id v13 = v10 + 8;
  CFStringRef v14 = (char *)*a1;
  uint64_t v15 = (char *)a1[1];
  if (v15 == (char *)*a1)
  {
    *a1 = v10;
    a1[1] = v13;
    a1[2] = v11;
    if (!v15) {
      return v13;
    }
    goto LABEL_23;
  }
  unint64_t v16 = (unint64_t)&v15[-*a1 - 8];
  if (v16 < 0x78 || &v15[-(v16 & 0xFFFFFFFFFFFFFFF8) - 8] < v10 && &v9[v3 - (v16 & 0xFFFFFFFFFFFFFFF8) - 8] < v15) {
    goto LABEL_31;
  }
  uint64_t v17 = (v16 >> 3) + 1;
  uint64_t v18 = 8 * (v17 & 0x3FFFFFFFFFFFFFFCLL);
  v10 -= v18;
  id v19 = &v15[-v18];
  id v20 = v15 - 16;
  id v21 = &v9[8 * v4 - 16];
  uint64_t v22 = v17 & 0x3FFFFFFFFFFFFFFCLL;
  do
  {
    long long v24 = *((_OWORD *)v20 - 1);
    long long v23 = *(_OWORD *)v20;
    *((_OWORD *)v20 - 1) = 0uLL;
    *(_OWORD *)id v20 = 0uLL;
    *((_OWORD *)v21 - 1) = v24;
    *(_OWORD *)id v21 = v23;
    v20 -= 32;
    v21 -= 32;
    v22 -= 4;
  }
  while (v22);
  uint64_t v15 = v19;
  if (v17 != (v17 & 0x3FFFFFFFFFFFFFFCLL))
  {
LABEL_31:
    do
    {
      uint64_t v25 = *((void *)v15 - 1);
      v15 -= 8;
      *(void *)uint64_t v15 = 0;
      *((void *)v10 - 1) = v25;
      v10 -= 8;
    }
    while (v15 != v14);
  }
  __int16 v26 = (char *)*a1;
  uint64_t v15 = (char *)a1[1];
  *a1 = v10;
  a1[1] = v13;
  a1[2] = v11;
  if (v15 != v26)
  {
    do
    {
      int v27 = (void *)*((void *)v15 - 1);
      v15 -= 8;
    }
    while (v15 != v26);
    uint64_t v15 = v26;
  }
  if (v15) {
LABEL_23:
  }
    operator delete(v15);
  return v13;
}

void sub_100339758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_100048550();
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v8 = v7 - std::chrono::steady_clock::now().__d_.__rep_ + *(void *)(a2 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a2 + 16));
  [WeakRetained onQueueScanTimedOut:a2 withReason:a3 errorCode:a4 forScanInitiated:v8];
}

void sub_1003397DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1003397F0(uint64_t a1)
{
}

void sub_1003397F8(void *a1)
{
  if (qword_10047BED8 == -1)
  {
    id v2 = (void *)qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
      return;
    }
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_1004682C0);
    id v2 = (void *)qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
      return;
    }
  }
  uint64_t v3 = v2;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v4 = (std::chrono::steady_clock::now().__d_.__rep_ - *a1) / 1000000000;
  int v5 = 134218240;
  uint64_t v6 = 30;
  __int16 v7 = 2048;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v8 = v4;
  _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Timeout from Wi-Fi framework, shouldn't take longer than %lld seconds. Last scan was %lld seconds ago", (uint8_t *)&v5, 0x16u);
}

std::string *sub_100339920@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_100339954(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_100339970@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1003399A4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003399C0()
{
  operator delete();
}

void sub_1003399E0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0x26u);
}

void sub_100339A00(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_impl(a1, v9, OS_LOG_TYPE_INFO, a4, &a9, 0x26u);
}

void sub_100339A20()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100339A98()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100339B10()
{
  qword_10047E2F8 = (uint64_t)kWiFiDeviceScanRequestClientPid;
  qword_10047E300 = (uint64_t)kWiFiDeviceScanRequestReceiptTimestamp;
}

void sub_100339E88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a25 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_10033A130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

WifiScanResult *__cdecl sub_10033A19C(id a1, id a2)
{
  id v2 = a2;
  uint64_t Property = WiFiNetworkGetProperty();
  uint64_t v4 = WiFiNetworkGetProperty();
  uint64_t v5 = WiFiNetworkGetProperty();
  uint64_t v6 = WiFiNetworkGetProperty();
  uint64_t v7 = WiFiNetworkGetProperty();
  uint64_t v8 = WiFiNetworkGetProperty();
  int IsAdHoc = WiFiNetworkIsAdHoc();
  int IsCaptive = WiFiNetworkIsCaptive();
  uint64_t v11 = WiFiNetworkGetProperty();
  LOBYTE(v15) = WiFiNetworkIsApplePersonalHotspot() != 0;
  BYTE1(v14) = IsCaptive != 0;
  LOBYTE(v14) = IsAdHoc != 0;
  uint64_t v12 = +[WifiScannerCommonDarwin scanResultWithAge:bssid:ssid:channel:rssi:flags:adHoc:captive:mode:personalHotspot:](WifiScannerCommonDarwin, "scanResultWithAge:bssid:ssid:channel:rssi:flags:adHoc:captive:mode:personalHotspot:", Property, v4, v5, v6, v7, v8, v14, v11, v15);

  return (WifiScanResult *)v12;
}

void sub_10033A304(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10033A488(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10033A4CC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  id v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

void sub_10033A510()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10033A588()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10033A600()
{
}

void sub_10033A628(uint64_t a1)
{
}

void sub_10033A6DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, objc_super a10)
{
  a10.super_class = (Class)DispatchMonotonicTimer;
  [(_Unwind_Exception *)&a10 dealloc];
  _Unwind_Resume(a1);
}

id sub_10033A708(uint64_t a1)
{
  return [*(id *)(a1 + 32) onQueueInvalidate];
}

id sub_10033A7A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) onQueueInvalidate];
}

void sub_10033A8EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a17 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10033A95C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  id v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

void sub_10033A9A0()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10033AA18()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10033AA90()
{
}

void sub_10033AAB8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100468510;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10033AAD8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100468510;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_10033AB2C(uint64_t a1)
{
  sub_10005BAE4(a1);

  operator delete();
}

BOOL sub_10033AB64(uint64_t a1)
{
  return *(_DWORD *)(a1 + 8) == 2;
}

uint64_t sub_10033AB74(uint64_t result, unsigned __int8 a2)
{
  return result;
}

id sub_10033AB80(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)NSMutableArray);
  for (int i = *(uint64_t ***)(a1 + 16); i; int i = (uint64_t **)*i)
  {
    uint64_t v4 = +[NSNumber numberWithInt:*((unsigned int *)i + 4)];
    [v2 addObject:v4];
  }

  return v2;
}

void sub_10033AC04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10033AC18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t *sub_10033AC28(uint64_t a1, int *a2, _DWORD *a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = *a2;
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
    id v9 = *(uint64_t ***)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      uint64_t v10 = *v9;
      if (*v9)
      {
        if (v8.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v12 = v10[1];
            if (v12 == v6)
            {
              if (*((_DWORD *)v10 + 4) == v6) {
                return v10;
              }
            }
            else if ((v12 & (v7 - 1)) != v3)
            {
              goto LABEL_23;
            }
            uint64_t v10 = (uint64_t *)*v10;
            if (!v10) {
              goto LABEL_23;
            }
          }
        }
        do
        {
          unint64_t v11 = v10[1];
          if (v11 == v6)
          {
            if (*((_DWORD *)v10 + 4) == v6) {
              return v10;
            }
          }
          else
          {
            if (v11 >= v7) {
              v11 %= v7;
            }
            if (v11 != v3) {
              break;
            }
          }
          uint64_t v10 = (uint64_t *)*v10;
        }
        while (v10);
      }
    }
  }
LABEL_23:
  uint64_t v14 = operator new(0x18uLL);
  void *v14 = 0;
  v14[1] = v6;
  *((_DWORD *)v14 + 4) = *a3;
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (v7 && (float)(v16 * (float)v7) >= v15)
  {
    uint64_t v17 = *(void *)a1;
    uint64_t v18 = *(void **)(*(void *)a1 + 8 * v3);
    if (v18)
    {
LABEL_26:
      void *v14 = *v18;
LABEL_61:
      void *v18 = v14;
      goto LABEL_62;
    }
  }
  else
  {
    BOOL v19 = 1;
    if (v7 >= 3) {
      BOOL v19 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v7);
    unint64_t v21 = vcvtps_u32_f32(v15 / v16);
    if (v20 <= v21) {
      size_t prime = v21;
    }
    else {
      size_t prime = v20;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
      unint64_t v7 = *(void *)(a1 + 8);
    }
    if (prime > v7) {
      goto LABEL_37;
    }
    if (prime < v7)
    {
      unint64_t v23 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (v7 < 3 || (uint8x8_t v24 = (uint8x8_t)vcnt_s8((int8x8_t)v7), v24.i16[0] = vaddlv_u8(v24), v24.u32[0] > 1uLL))
      {
        unint64_t v23 = std::__next_prime(v23);
      }
      else
      {
        uint64_t v25 = 1 << -(char)__clz(v23 - 1);
        if (v23 >= 2) {
          unint64_t v23 = v25;
        }
      }
      if (prime <= v23) {
        size_t prime = v23;
      }
      if (prime < v7) {
LABEL_37:
      }
        sub_10006338C(a1, prime);
    }
    unint64_t v7 = *(void *)(a1 + 8);
    unint64_t v26 = v7 - 1;
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6)
      {
        unint64_t v3 = v6 % v7;
        uint64_t v17 = *(void *)a1;
        uint64_t v18 = *(void **)(*(void *)a1 + 8 * (v6 % v7));
        if (v18) {
          goto LABEL_26;
        }
      }
      else
      {
        unint64_t v3 = v6;
        uint64_t v17 = *(void *)a1;
        uint64_t v18 = *(void **)(*(void *)a1 + 8 * v6);
        if (v18) {
          goto LABEL_26;
        }
      }
    }
    else
    {
      unint64_t v3 = v26 & v6;
      uint64_t v17 = *(void *)a1;
      uint64_t v18 = *(void **)(*(void *)a1 + 8 * (v26 & v6));
      if (v18) {
        goto LABEL_26;
      }
    }
  }
  void *v14 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v14;
  *(void *)(v17 + 8 * v3) = a1 + 16;
  if (*v14)
  {
    unint64_t v27 = *(void *)(*v14 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v27 >= v7) {
        v27 %= v7;
      }
    }
    else
    {
      v27 &= v7 - 1;
    }
    uint64_t v18 = (void *)(*(void *)a1 + 8 * v27);
    goto LABEL_61;
  }
LABEL_62:
  ++*(void *)(a1 + 24);
  return v14;
}

void sub_10033AF38(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10033AF4C(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v8 = *a4;
  uint64_t v9 = *(void *)(*a4 + 144);
  uint64_t v10 = *a2;
  uint64_t v11 = 1000000 * *(void *)(*a4 + 136) + 50000000;
  uint64_t v12 = v11 + *a2;
  uint64_t v13 = 1000000 * v9;
  uint64_t v14 = *a1;
  uint64_t v15 = *a1 + v11;
  if (v12 >= 1000000 * v9 || v15 >= v13)
  {
    if (v14 < v10 || v10 == v14 && *((_DWORD *)a1 + 6) > *((_DWORD *)a2 + 6))
    {
      uint64_t v17 = *a3;
      uint64_t v18 = *a3 + v11;
      if (v12 >= v13 || v18 >= v13) {
        goto LABEL_31;
      }
      int v20 = *(unsigned __int8 *)(v8 + 152);
      double v21 = (double)v9 * 1000000.0;
      goto LABEL_28;
    }
    uint64_t v17 = *a3;
    uint64_t v18 = *a3 + v11;
    if (v12 >= v13 || v18 >= v13)
    {
LABEL_54:
      if (v10 >= v17 && (v17 != v10 || *((_DWORD *)a2 + 6) <= *((_DWORD *)a3 + 6))) {
        return 0;
      }
      goto LABEL_62;
    }
    int v20 = *(unsigned __int8 *)(v8 + 152);
    double v21 = (double)v9 * 1000000.0;
LABEL_51:
    double v52 = (double)v18 / v21;
    if (v20)
    {
      long double v53 = v52 * (1.0 - exp(-*((double *)a3 + 1)));
      long double v54 = (double)v12 / v21 * (1.0 - exp(-*((double *)a2 + 1)));
      BOOL v55 = v53 == v54;
      if (v53 > v54) {
        goto LABEL_62;
      }
    }
    else
    {
      double v56 = (double)v12 / v21;
      BOOL v55 = v52 == v56;
      if (v52 > v56) {
        goto LABEL_62;
      }
    }
    if (!v55 || *((_DWORD *)a2 + 6) <= *((_DWORD *)a3 + 6)) {
      return 0;
    }
LABEL_62:
    long long v58 = *(_OWORD *)a2;
    long long v57 = *((_OWORD *)a2 + 1);
    long long v59 = *((_OWORD *)a3 + 1);
    *(_OWORD *)a2 = *(_OWORD *)a3;
    *((_OWORD *)a2 + 1) = v59;
    *(_OWORD *)a3 = v58;
    *((_OWORD *)a3 + 1) = v57;
    uint64_t v60 = *(void *)(*a4 + 144);
    uint64_t v61 = *a2;
    uint64_t v62 = 1000000 * *(void *)(*a4 + 136) + 50000000;
    uint64_t v63 = v62 + *a2;
    uint64_t v64 = *a1;
    uint64_t v65 = *a1 + v62;
    if (v63 < 1000000 * v60 && v65 < 1000000 * v60)
    {
      double v67 = (double)v60 * 1000000.0;
      double v68 = (double)v63 / v67;
      if (*(unsigned char *)(*a4 + 152))
      {
        long double v69 = v68 * (1.0 - exp(-*((double *)a2 + 1)));
        long double v70 = (double)v65 / v67 * (1.0 - exp(-*((double *)a1 + 1)));
        BOOL v71 = v69 == v70;
        if (v69 > v70) {
          goto LABEL_82;
        }
      }
      else
      {
        double v76 = (double)v65 / v67;
        BOOL v71 = v68 == v76;
        if (v68 > v76) {
          goto LABEL_82;
        }
      }
      if (!v71) {
        return 1;
      }
    }
    else
    {
      if (v64 < v61) {
        goto LABEL_82;
      }
      if (v61 != v64) {
        return 1;
      }
    }
    if (*((_DWORD *)a1 + 6) <= *((_DWORD *)a2 + 6)) {
      return 1;
    }
LABEL_82:
    long long v78 = *(_OWORD *)a1;
    long long v77 = *((_OWORD *)a1 + 1);
    long long v79 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v79;
    *(_OWORD *)a2 = v78;
    *((_OWORD *)a2 + 1) = v77;
    return 2;
  }
  int v20 = *(unsigned __int8 *)(v8 + 152);
  double v21 = (double)v9 * 1000000.0;
  double v23 = (double)v12 / v21;
  double v24 = (double)v15;
  if (*(unsigned char *)(v8 + 152))
  {
    long double v25 = v23 * (1.0 - exp(-*((double *)a2 + 1)));
    long double v26 = v24 / v21 * (1.0 - exp(-*((double *)a1 + 1)));
    BOOL v27 = v25 == v26;
    if (v25 > v26)
    {
LABEL_22:
      uint64_t v17 = *a3;
      uint64_t v18 = *a3 + v11;
      goto LABEL_27;
    }
  }
  else
  {
    BOOL v27 = v23 == v24 / v21;
    if (v23 > v24 / v21) {
      goto LABEL_22;
    }
  }
  if (!v27)
  {
    uint64_t v17 = *a3;
    uint64_t v18 = *a3 + v11;
    goto LABEL_50;
  }
  uint64_t v17 = *a3;
  uint64_t v18 = *a3 + v11;
  if (*((_DWORD *)a1 + 6) <= *((_DWORD *)a2 + 6))
  {
LABEL_50:
    if (v18 >= v13) {
      goto LABEL_54;
    }
    goto LABEL_51;
  }
LABEL_27:
  if (v18 >= v13)
  {
LABEL_31:
    if (v10 < v17) {
      goto LABEL_38;
    }
    if (v17 != v10) {
      goto LABEL_40;
    }
LABEL_37:
    if (*((_DWORD *)a2 + 6) <= *((_DWORD *)a3 + 6)) {
      goto LABEL_40;
    }
LABEL_38:
    long long v34 = *(_OWORD *)a1;
    long long v33 = *((_OWORD *)a1 + 1);
    long long v35 = *((_OWORD *)a3 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a3;
    *((_OWORD *)a1 + 1) = v35;
    *(_OWORD *)a3 = v34;
    *((_OWORD *)a3 + 1) = v33;
    return 1;
  }
LABEL_28:
  double v28 = (double)v18 / v21;
  if (v20)
  {
    long double v29 = v28 * (1.0 - exp(-*((double *)a3 + 1)));
    long double v30 = (double)v12 / v21 * (1.0 - exp(-*((double *)a2 + 1)));
    BOOL v31 = v29 == v30;
    if (v29 > v30) {
      goto LABEL_38;
    }
  }
  else
  {
    double v32 = (double)v12 / v21;
    BOOL v31 = v28 == v32;
    if (v28 > v32) {
      goto LABEL_38;
    }
  }
  if (v31) {
    goto LABEL_37;
  }
LABEL_40:
  long long v38 = *(_OWORD *)a1;
  long long v37 = *((_OWORD *)a1 + 1);
  long long v39 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v39;
  *(_OWORD *)a2 = v38;
  *((_OWORD *)a2 + 1) = v37;
  uint64_t v40 = *(void *)(*a4 + 144);
  uint64_t v41 = *a3;
  uint64_t v42 = 1000000 * *(void *)(*a4 + 136) + 50000000;
  uint64_t v43 = v42 + *a3;
  uint64_t v44 = *a2;
  uint64_t v45 = *a2 + v42;
  if (v43 < 1000000 * v40 && v45 < 1000000 * v40)
  {
    double v47 = (double)v40 * 1000000.0;
    double v48 = (double)v43 / v47;
    if (*(unsigned char *)(*a4 + 152))
    {
      long double v49 = v48 * (1.0 - exp(-*((double *)a3 + 1)));
      long double v50 = (double)v45 / v47 * (1.0 - exp(-*((double *)a2 + 1)));
      BOOL v51 = v49 == v50;
      if (v49 > v50) {
        goto LABEL_77;
      }
    }
    else
    {
      double v72 = (double)v45 / v47;
      BOOL v51 = v48 == v72;
      if (v48 > v72) {
        goto LABEL_77;
      }
    }
    if (!v51) {
      return 1;
    }
LABEL_76:
    if (*((_DWORD *)a2 + 6) > *((_DWORD *)a3 + 6)) {
      goto LABEL_77;
    }
    return 1;
  }
  if (v44 >= v41)
  {
    if (v41 != v44) {
      return 1;
    }
    goto LABEL_76;
  }
LABEL_77:
  long long v74 = *(_OWORD *)a2;
  long long v73 = *((_OWORD *)a2 + 1);
  long long v75 = *((_OWORD *)a3 + 1);
  *(_OWORD *)a2 = *(_OWORD *)a3;
  *((_OWORD *)a2 + 1) = v75;
  *(_OWORD *)a3 = v74;
  *((_OWORD *)a3 + 1) = v73;
  return 2;
}

void sub_10033B440()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10033B4B8()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10033B530()
{
}

void sub_10033B558(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, void *a7@<X8>, float a8@<S0>)
{
  uint64_t v16 = a1;
  float v15 = a8;
  char v14 = a3;
  char v13 = a4;
  char v12 = a5;
  char v11 = a6;
  uint64_t v10 = operator new(0x58uLL);
  v10[1] = 0;
  id v10[2] = 0;
  *uint64_t v10 = off_1004685B8;
  sub_10033B6B8((uint64_t)&v17, (uint64_t)(v10 + 3), &v16, &v15, a2, &v14, &v13, &v12, &v11);
  *a7 = v10 + 3;
  a7[1] = v10;
}

void sub_10033B604(_Unwind_Exception *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_10033B61C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1004685B8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10033B63C(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1004685B8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10033B690(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_10033B6B8(uint64_t a1, uint64_t a2, uint64_t *a3, float *a4, uint64_t a5, char *a6, char *a7, char *a8, char *a9)
{
  uint64_t v13 = *a3;
  float v14 = *a4;
  double v21 = 0;
  uint64_t v22 = 0;
  std::string __p = 0;
  uint64_t v16 = *(const void **)a5;
  uint64_t v15 = *(void *)(a5 + 8);
  int64_t v17 = v15 - *(void *)a5;
  if (v15 != *(void *)a5)
  {
    if (v17 < 0) {
      sub_1000A9108();
    }
    uint64_t v18 = (char *)operator new(v15 - *(void *)a5);
    BOOL v19 = &v18[4 * (v17 >> 2)];
    std::string __p = v18;
    uint64_t v22 = v19;
    memcpy(v18, v16, v17);
    double v21 = v19;
  }
  sub_10033B7B8(a2, v13, (uint64_t)&__p, *a6, *a7, *a8, *a9, v14);
  if (__p)
  {
    double v21 = __p;
    operator delete(__p);
  }
}

void sub_10033B798(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10033B7B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, char a6, char a7, float a8)
{
  *(void *)a1 = off_100468608;
  *(void *)(a1 + ++*(void *)(result + 8) = a2;
  *(void *)(a1 + ++*(void *)(result + 24) = 0;
  *(float *)(a1 + 16) = a8;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  uint64_t v15 = *(const void **)a3;
  uint64_t v14 = *(void *)(a3 + 8);
  int64_t v16 = v14 - *(void *)a3;
  if (v14 != *(void *)a3)
  {
    if (v16 < 0) {
      sub_1000A9108();
    }
    int64_t v17 = (char *)operator new(v14 - *(void *)a3);
    *(void *)(a1 + ++*(void *)(result + 24) = v17;
    *(void *)(a1 + 32) = v17;
    uint64_t v18 = &v17[4 * (v16 >> 2)];
    *(void *)(a1 + 40) = v18;
    memcpy(v17, v15, v16);
    *(void *)(a1 + 32) = v18;
  }
  *(unsigned char *)(a1 + 4++*(void *)(result + 8) = a4;
  *(unsigned char *)(a1 + 49) = a5;
  *(unsigned char *)(a1 + 50) = a6;
  *(unsigned char *)(a1 + 51) = a7;
  *(void *)(a1 + 56) = 0;
  if (a2 > 0x10000)
  {
    sub_1000AE4B0(v21, "");
    sub_1001F1B10("Dwell requested is too long", &__p);
    sub_10016A2C4((uint64_t)v21, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v22 < 0) {
      operator delete(v21[0]);
    }
    sub_1000D11E0((uint64_t)&v20);
  }
  return a1;
}

void sub_10033B940(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  double v23 = *v21;
  if (*v21)
  {
    *(void *)(v20 + 32) = v23;
    operator delete(v23);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10033B990(void *a1)
{
  *a1 = off_100468608;
  id v2 = (void *)a1[3];
  if (v2)
  {
    a1[4] = v2;
    operator delete(v2);
  }
  return a1;
}

void sub_10033B9E0(void *a1)
{
  *a1 = off_100468608;
  id v2 = (void *)a1[3];
  if (v2)
  {
    a1[4] = v2;
    operator delete(v2);
  }

  operator delete();
}

uint64_t sub_10033BA50()
{
  return 1;
}

uint64_t sub_10033BA58(uint64_t result, unsigned __int8 a2)
{
  return result;
}

uint64_t sub_10033BA64(uint64_t result, float a2)
{
  return result;
}

WifiScannerSettings *sub_10033BA74(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (*(unsigned char *)(a1 + 48))
  {
    id v5 = [objc_alloc((Class)NSMutableArray) initWithCapacity:(uint64_t)(*(void *)(a1 + 32) - *(void *)(a1 + 24)) >> 2];
    unint64_t v6 = *(unsigned int **)(a1 + 24);
    for (int i = *(unsigned int **)(a1 + 32); v6 != i; ++v6)
    {
      uint64_t v8 = +[NSNumber numberWithInt:*v6];
      [v5 addObject:v8];
    }
  }
  else
  {
    uint64_t v9 = *(void *)(a1 + 24);
    if (v9 == *(void *)(a1 + 32))
    {
      id v5 = 0;
    }
    else
    {
      uint64_t v10 = +[NSNumber numberWithInt:*(unsigned int *)(v9 + 4 * *(void *)(a1 + 56))];
      uint64_t v20 = v10;
      id v5 = +[NSArray arrayWithObjects:&v20 count:1];

      *(void *)(a1 + 56) = (*(void *)(a1 + 56) + 1)
                           % (unint64_t)((uint64_t)(*(void *)(a1 + 32) - *(void *)(a1 + 24)) >> 2);
    }
  }
  int v11 = *(unsigned __int8 *)(a1 + 49);
  char v12 = [WifiScannerSettings alloc];
  if (v11) {
    uint64_t v14 = 1;
  }
  else {
    uint64_t v14 = 2;
  }
  uint64_t v15 = *(void *)(a1 + 8);
  uint64_t v16 = *(unsigned __int8 *)(a1 + 50);
  unsigned int v17 = atomic_load((unsigned int *)(a1 + 16));
  LODWORD(v13) = v17;
  LOBYTE(v17) = atomic_load((unsigned __int8 *)(a1 + 51));
  uint64_t v18 = [(WifiScannerSettings *)v12 initWithChannels:v5 dwell:v15 scanType:v14 includingOffChannelResults:v16 atDutyCycle:v17 & 1 asLowPriority:v13];

  return v18;
}

void sub_10033BC2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10033BC7C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10033BCF4()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10033BD6C()
{
}

uint64_t *sub_10033BD94(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    sub_10033C380(v2);
    operator delete();
  }
  return a1;
}

uint64_t sub_10033BDF0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 88))
  {
    uint64_t v2 = *(void **)(a1 + 112);
    if (v2)
    {
      *(void *)(a1 + 120) = v2;
      operator delete(v2);
    }
    *(unsigned char *)(a1 + 8++*(void *)(result + 8) = 0;
  }
  unint64_t v3 = *(void **)(a1 + 40);
  if (v3)
  {
    *(void *)(a1 + 4++*(void *)(result + 8) = v3;
    operator delete(v3);
  }
  id v4 = *(void **)(a1 + 16);
  if (v4)
  {
    *(void *)(a1 + ++*(void *)(result + 24) = v4;
    operator delete(v4);
  }
  return a1;
}

void sub_10033BE50(id a1)
{
}

void sub_10033BECC()
{
}

uint64_t sub_10033BEF0(uint64_t a1)
{
  *(_DWORD *)a1 = 1;
  *(void *)(a1 + ++*(void *)(result + 8) = 30000;
  *(_DWORD *)(a1 + 16) = 1065353216;
  *(unsigned char *)(a1 + 20) = 0;
  *(void *)(a1 + ++*(void *)(result + 24) = 0;
  *(void *)(a1 + 32) = 0;
  sub_10003D518(a1 + 40);
  *(void *)(a1 + 12++*(void *)(result + 8) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  sub_100341084(a1 + 152);
  char v5 = 0;
  if (sub_100312CC0())
  {
    v4[0] = sub_1001638A8();
    v4[1] = v2;
    *(unsigned char *)(a1 + 120) = sub_100059C20((uint64_t)v4, &v5);
  }
  else
  {
    *(unsigned char *)(a1 + 120) = 0;
  }
  return a1;
}

void sub_10033BFA4(void *a1)
{
}

void sub_10033BFC4(_Unwind_Exception *a1)
{
  sub_10033C04C(v3);
  sub_1001C2C94(v2);
  sub_1000BA884(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10033C00C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(void *)(a1 + 32) = v2;
    operator delete(v2);
  }
  sub_10033C31C(a1, *(void **)(a1 + 8));
  return a1;
}

void *sub_10033C04C(void *a1)
{
  uint64_t v2 = (void *)*a1;
  if (*a1)
  {
    unint64_t v3 = (void *)a1[1];
    id v4 = (void *)*a1;
    if (v3 != v2)
    {
      do
      {
        uint64_t v6 = *--v3;
        uint64_t v5 = v6;
        void *v3 = 0;
        if (v6) {
          (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
        }
      }
      while (v3 != v2);
      id v4 = (void *)*a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

float sub_10033C0DC(uint64_t a1)
{
  return *(float *)(a1 + 16);
}

uint64_t sub_10033C0E4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 20);
}

void sub_10033C0EC(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 20) = a2;
  sub_1000A189C(a1, &v4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)v4 + 24))(v4, a2);
  unint64_t v3 = v5;
  if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
}

void sub_10033C1B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10033C1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = a2;
  unsigned __int8 v5 = 0;
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10047E328, memory_order_acquire) & 1) == 0)
  {
    uint64_t v3 = a1;
    int v4 = __cxa_guard_acquire(&qword_10047E328);
    a1 = v3;
    if (v4)
    {
      sub_1000099BC(&qword_10047E320, "com.apple.indoor.WifiSettingsSingleton.changeListeners");
      __cxa_atexit((void (*)(void *))sub_100359A24, &qword_10047E320, (void *)&_mh_execute_header);
      __cxa_guard_release(&qword_10047E328);
      a1 = v3;
    }
  }
  v8[0] = 0;
  v8[1] = v8;
  void v8[2] = 0x4002000000;
  void v8[3] = sub_10033D374;
  v8[4] = nullsub_214;
  v8[5] = a1;
  v8[6] = &v6;
  v8[7] = &v5;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 0x40000000;
  v7[2] = sub_10033D38C;
  void v7[3] = &unk_1004687D8;
  v7[4] = v8;
  sub_100045DE8(&qword_10047E320, v7);
  _Block_object_dispose(v8, 8);
  return v5;
}

void sub_10033C31C(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10033C31C(a1, *a2);
    sub_10033C31C(a1, a2[1]);
    int v4 = (void *)a2[5];
    if (v4)
    {
      a2[6] = v4;
      operator delete(v4);
    }
    operator delete(a2);
  }
}

uint64_t sub_10033C380(uint64_t a1)
{
  uint64_t v2 = a1 + 152;
  uint64_t v3 = *(void **)(a1 + 176);
  if (v3)
  {
    *(void *)(a1 + 184) = v3;
    operator delete(v3);
  }
  sub_10033C31C(v2, *(void **)(a1 + 160));
  int v4 = *(void **)(a1 + 128);
  if (v4)
  {
    unsigned __int8 v5 = *(void **)(a1 + 136);
    uint64_t v6 = *(void **)(a1 + 128);
    if (v5 != v4)
    {
      do
      {
        uint64_t v8 = *--v5;
        uint64_t v7 = v8;
        *unsigned __int8 v5 = 0;
        if (v8) {
          (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        }
      }
      while (v5 != v4);
      uint64_t v6 = *(void **)(a1 + 128);
    }
    *(void *)(a1 + 136) = v4;
    operator delete(v6);
  }
  sub_1001C2C94((void *)(a1 + 40));
  uint64_t v9 = *(std::__shared_weak_count **)(a1 + 32);
  if (!v9 || atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
  std::__shared_weak_count::__release_weak(v9);
  return a1;
}

void sub_10033C494(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

float sub_10033C4C4(_DWORD *a1, uint64_t a2)
{
  uint64_t v2 = (double *)(a1 + 2);
  switch(*a1 ^ ((int)*a1 >> 31))
  {
    case 1:
      float result = (float)*(int *)v2;
      break;
    case 2:
      float result = (float)*(uint64_t *)v2;
      break;
    case 3:
      float result = sub_10033C768(a2, (uint64_t)v2);
      break;
    case 4:
      double v4 = *v2;
      sub_10033CE04(*v2);
      float result = v4;
      break;
    case 5:
      sub_10033CEAC();
    case 6:
      sub_10033D020();
    default:
      sub_10033C5F4();
  }
  return result;
}

void sub_10033C5F4()
{
  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003EE0F0;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert empty value to a type");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_100453860;
  sub_10018E868((uint64_t)v0);
  sub_1000D1698(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<float>::operator()(boost::none_t) const [T = float]", (uint64_t)"../../../common/util/overridable_setting.h", 111, (uint64_t)v0);
}

void sub_10033C6C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void sub_10033C730(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x10033C720);
}

void sub_10033C754(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

float sub_10033C768(uint64_t a1, uint64_t a2)
{
  float v9 = 0.0;
  uint64_t v2 = *(unsigned __int8 *)(a2 + 23);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = (std::bad_cast_vtbl *)a2;
  }
  else {
    uint64_t v3 = *(std::bad_cast_vtbl **)a2;
  }
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = *(void *)(a2 + 8);
  }
  v10.__vftable = v3;
  int v11 = (_UNKNOWN **)((char *)v3 + v2);
  if (!sub_10033CA88((unsigned __int8 *)v3, (unsigned __int8 *)v3 + v2, &v9, "NAN", "nan", "INFINITY", "infinity", 0x28u, 0x29u))
  {
    if (!sub_10033C884((uint64_t *)&v10)
      || ((unsigned int v4 = *((unsigned __int8 *)v11 - 1) - 43, v5 = v4 > 0x3A, v6 = (1 << v4) & 0x400000004000005, !v5)
        ? (BOOL v7 = v6 == 0)
        : (BOOL v7 = 1),
          !v7))
    {
      std::bad_cast::bad_cast(&v10);
      v10.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)&v10);
    }
  }
  return v9;
}

void sub_10033C870(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
}

BOOL sub_10033C884(uint64_t *a1)
{
  std::streambuf::basic_streambuf();
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  __sb[0] = off_100468708;
  __sb[2] = v2;
  __sb[3] = v2;
  __sb[4] = v3;
  v9[1] = 0;
  std::ios_base::init(&v10, __sb);
  uint64_t v11 = 0;
  int v12 = -1;
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  uint64_t v5 = v9[0];
  *(_DWORD *)((char *)&v9[1] + *(void *)(v9[0] - 24)) &= ~0x1000u;
  *(void *)((char *)&v9[2] + *(void *)(v5 - 24)) = 9;
  uint64_t v6 = (void *)std::istream::operator>>();
  BOOL v7 = (*((unsigned char *)v6 + *(void *)(*v6 - 24) + 32) & 5) == 0 && std::istream::get() == -1;
  std::istream::~istream();
  std::streambuf::~streambuf();
  return v7;
}

void sub_10033CA30(_Unwind_Exception *a1)
{
}

void sub_10033CA4C(_Unwind_Exception *a1)
{
}

uint64_t sub_10033CA88(unsigned __int8 *a1, unsigned __int8 *a2, float *a3, unsigned __int8 *a4, unsigned __int8 *a5, unsigned __int8 *a6, unsigned __int8 *a7, unsigned __int8 a8, unsigned __int8 a9)
{
  if (a1 == a2) {
    return 0;
  }
  int v9 = *a1;
  BOOL v10 = v9 == 45 || v9 == 43;
  uint64_t v11 = v10 ? a1 + 1 : a1;
  int64_t v12 = a2 - v11;
  if (a2 - v11 < 3) {
    return 0;
  }
  int v14 = *v11;
  if (v14 == *a5 || v14 == *a4)
  {
    int v15 = v11[1];
    if (v15 == a5[1] || v15 == a4[1])
    {
      int v16 = v11[2];
      if (v16 == a5[2] || v16 == a4[2])
      {
        unsigned int v17 = v11 + 3;
        if (v17 == a2 || a2 - v17 >= 2 && *v17 == a8 && *(a2 - 1) == a9)
        {
          float v18 = NAN;
          if (v9 == 45) {
            float v18 = NAN;
          }
          *a3 = v18;
          return 1;
        }
        return 0;
      }
    }
  }
  if (v12 == 8)
  {
    if (v14 != *a7 && v14 != *a6) {
      return 0;
    }
    int v22 = v11[1];
    if (v22 != a7[1] && v22 != a6[1]) {
      return 0;
    }
    int v23 = v11[2];
    if (v23 != a7[2] && v23 != a6[2]) {
      return 0;
    }
    int v24 = v11[3];
    if (v24 != a7[3] && v24 != a6[3]) {
      return 0;
    }
    int v25 = v11[4];
    if (v25 != a7[4] && v25 != a6[4]) {
      return 0;
    }
    int v26 = v11[5];
    if (v26 != a7[5] && v26 != a6[5]) {
      return 0;
    }
    int v27 = v11[6];
    if (v27 != a7[6] && v27 != a6[6]) {
      return 0;
    }
    int v20 = v11[7];
    if (v20 == a7[7]) {
      goto LABEL_48;
    }
    int v21 = a6[7];
  }
  else
  {
    if (v12 != 3 || v14 != *a7 && v14 != *a6) {
      return 0;
    }
    int v19 = v11[1];
    if (v19 != a7[1] && v19 != a6[1]) {
      return 0;
    }
    int v20 = v11[2];
    if (v20 == a7[2]) {
      goto LABEL_48;
    }
    int v21 = a6[2];
  }
  if (v20 != v21) {
    return 0;
  }
LABEL_48:
  float v28 = INFINITY;
  if (v9 == 45) {
    float v28 = -INFINITY;
  }
  *a3 = v28;
  return 1;
}

void *sub_10033CCC0(void *result, uint64_t a2, uint64_t a3)
{
  result[2] = a2;
  result[3] = a2;
  result[4] = a2 + a3;
  return result;
}

void sub_10033CCD4()
{
  std::streambuf::~streambuf();

  operator delete();
}

double sub_10033CD0C@<D0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  if ((a4 & 0x10) != 0)
  {
    uint64_t v7 = -1;
    goto LABEL_19;
  }
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[4] - v5;
  if (!a3)
  {
    uint64_t v7 = -1;
    if (a2 < 0 || v6 < a2) {
      goto LABEL_19;
    }
    uint64_t v9 = v5 + a2;
LABEL_15:
    uint64_t v8 = a1[4];
    goto LABEL_16;
  }
  if (a3 == 1)
  {
    uint64_t v7 = -1;
    uint64_t v10 = a1[3] - v5 + a2;
    if (v10 < 0 || v10 > v6) {
      goto LABEL_19;
    }
    uint64_t v9 = a1[3] + a2;
    goto LABEL_15;
  }
  if (a3 != 2)
  {
    uint64_t v9 = a1[3];
    goto LABEL_18;
  }
  uint64_t v7 = -1;
  if ((a2 & 0x8000000000000000) == 0 && v6 >= a2)
  {
    uint64_t v8 = a1[4];
    uint64_t v9 = v8 - a2;
LABEL_16:
    a1[3] = v9;
    a1[4] = v8;
LABEL_18:
    uint64_t v7 = v9 - v5;
  }
LABEL_19:
  double result = 0.0;
  *(_OWORD *)(a5 + 96) = 0u;
  *(_OWORD *)(a5 + 112) = 0u;
  *(_OWORD *)(a5 + 64) = 0u;
  *(_OWORD *)(a5 + 80) = 0u;
  *(_OWORD *)(a5 + 32) = 0u;
  *(_OWORD *)(a5 + 4++*(void *)(result + 8) = 0u;
  *(_OWORD *)a5 = 0u;
  *(_OWORD *)(a5 + 16) = 0u;
  *(void *)(a5 + 12++*(void *)(result + 8) = v7;
  return result;
}

double sub_10033CDBC@<D0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  if ((a3 & 0x10) == 0)
  {
    uint64_t v4 = a1[2];
    uint64_t v5 = *(void *)(a2 + 128);
    if (v5 <= a1[4] - v4)
    {
      uint64_t v6 = v4 + v5;
      uint64_t v7 = a1[4];
      a1[3] = v6;
      a1[4] = v7;
    }
  }
  double result = 0.0;
  *(_OWORD *)(a4 + 96) = 0u;
  *(_OWORD *)(a4 + 112) = 0u;
  *(_OWORD *)(a4 + 64) = 0u;
  *(_OWORD *)(a4 + 80) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)(a4 + 4++*(void *)(result + 8) = 0u;
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
  *(void *)(a4 + 12++*(void *)(result + 8) = -1;
  return result;
}

void sub_10033CE04(double a1)
{
  int v1 = 2 * (a1 > 3.40282347e38);
  if (a1 < -3.40282347e38) {
    int v1 = 1;
  }
  if (v1 == 2)
  {
    exception = (std::bad_cast *)__cxa_allocate_exception(8uLL);
    exception->__vftable = 0;
    uint64_t v3 = sub_10015F6A0(exception);
  }
  if (v1 == 1)
  {
    uint64_t v4 = (std::bad_cast *)__cxa_allocate_exception(8uLL);
    v4->__vftable = 0;
    uint64_t v5 = sub_10015F668(v4);
  }
}

void sub_10033CEAC()
{
  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003EE100;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert between incompatible types");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_100453860;
  sub_10018E868((uint64_t)v0);
  sub_1000D1698(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<float>::operator()(const F &) const [T = float, F = std::vector<boost::variant<boost::detail::variant::recursive_flag<boost::none_t>, int, long long, std::string, double, std::vector<boost::recursive_variant_>, std::unordered_map<std::string, boost::recursive_variant_>>>]", (uint64_t)"../../../common/util/overridable_setting.h", 106, (uint64_t)v0);
}

void sub_10033CF80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void sub_10033CFE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x10033CFD8);
}

void sub_10033D00C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10033D020()
{
  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003EE100;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert between incompatible types");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_100453860;
  sub_10018E868((uint64_t)v0);
  sub_1000D1698(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<float>::operator()(const F &) const [T = float, F = std::unordered_map<std::string, boost::variant<boost::detail::variant::recursive_flag<boost::none_t>, int, long long, std::string, double, std::vector<boost::recursive_variant_>, std::unordered_map<std::string, boost::recursive_variant_>>>]", (uint64_t)"../../../common/util/overridable_setting.h", 106, (uint64_t)v0);
}

void sub_10033D0F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void sub_10033D15C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x10033D14CLL);
}

void sub_10033D180(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

__n128 sub_10033D194(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)(a2 + 40);
  *(__n128 *)(a1 + 40) = result;
  return result;
}

void *sub_10033D1A4(void *a1, uint64_t *a2)
{
  uint64_t v3 = a1[1] - *a1;
  uint64_t v4 = v3 >> 3;
  unint64_t v5 = (v3 >> 3) + 1;
  if (v5 >> 61) {
    sub_1000A9108();
  }
  uint64_t v7 = a1[2] - *a1;
  if (v7 >> 2 > v5) {
    unint64_t v5 = v7 >> 2;
  }
  if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFF8) {
    unint64_t v8 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v8 = v5;
  }
  if (v8)
  {
    if (v8 >> 61) {
      sub_1000A6A10();
    }
    uint64_t v9 = (char *)operator new(8 * v8);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v10 = &v9[8 * v4];
  uint64_t v11 = &v9[8 * v8];
  uint64_t v12 = *a2;
  *a2 = 0;
  *(void *)uint64_t v10 = v12;
  double v13 = v10 + 8;
  int v14 = (char *)*a1;
  int v15 = (char *)a1[1];
  if (v15 == (char *)*a1)
  {
    *a1 = v10;
    a1[1] = v13;
    a1[2] = v11;
    if (!v15) {
      return v13;
    }
    goto LABEL_26;
  }
  unint64_t v16 = (unint64_t)&v15[-*a1 - 8];
  if (v16 < 0x78 || &v15[-(v16 & 0xFFFFFFFFFFFFFFF8) - 8] < v10 && &v9[v3 - (v16 & 0xFFFFFFFFFFFFFFF8) - 8] < v15) {
    goto LABEL_34;
  }
  uint64_t v17 = (v16 >> 3) + 1;
  uint64_t v18 = 8 * (v17 & 0x3FFFFFFFFFFFFFFCLL);
  v10 -= v18;
  int v19 = &v15[-v18];
  int v20 = v15 - 16;
  int v21 = &v9[8 * v4 - 16];
  uint64_t v22 = v17 & 0x3FFFFFFFFFFFFFFCLL;
  do
  {
    long long v24 = *((_OWORD *)v20 - 1);
    long long v23 = *(_OWORD *)v20;
    *((_OWORD *)v20 - 1) = 0uLL;
    *(_OWORD *)int v20 = 0uLL;
    *((_OWORD *)v21 - 1) = v24;
    *(_OWORD *)int v21 = v23;
    v20 -= 32;
    v21 -= 32;
    v22 -= 4;
  }
  while (v22);
  int v15 = v19;
  if (v17 != (v17 & 0x3FFFFFFFFFFFFFFCLL))
  {
LABEL_34:
    do
    {
      uint64_t v25 = *((void *)v15 - 1);
      v15 -= 8;
      *(void *)int v15 = 0;
      *((void *)v10 - 1) = v25;
      v10 -= 8;
    }
    while (v15 != v14);
  }
  int v26 = (char *)*a1;
  int v15 = (char *)a1[1];
  *a1 = v10;
  a1[1] = v13;
  a1[2] = v11;
  if (v15 != v26)
  {
    do
    {
      uint64_t v28 = *((void *)v15 - 1);
      v15 -= 8;
      uint64_t v27 = v28;
      *(void *)int v15 = 0;
      if (v28) {
        (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
      }
    }
    while (v15 != v26);
    int v15 = v26;
  }
  if (v15) {
LABEL_26:
  }
    operator delete(v15);
  return v13;
}

__n128 sub_10033D374(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(__n128 *)(a1 + 40) = result;
  return result;
}

void *sub_10033D38C(void *result)
{
  uint64_t v1 = *(void *)(result[4] + 8);
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(uint64_t **)(v2 + 128);
  uint64_t v4 = *(uint64_t **)(v2 + 136);
  if (v3 == v4)
  {
    uint64_t v4 = *(uint64_t **)(v2 + 128);
  }
  else
  {
    unint64_t v5 = *(void **)(v1 + 48);
    while (*v3 != *v5)
    {
      if (++v3 == v4)
      {
        uint64_t v3 = *(uint64_t **)(v2 + 136);
        goto LABEL_16;
      }
    }
    if (v3 != v4)
    {
      uint64_t v6 = v3 + 1;
      if (v3 + 1 != v4)
      {
        do
        {
          uint64_t v7 = *v6;
          if (*v6 != *v5)
          {
            *uint64_t v6 = 0;
            __n128 result = (void *)*v3;
            uint64_t *v3 = v7;
            if (result) {
              __n128 result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
            }
            ++v3;
          }
          ++v6;
        }
        while (v6 != v4);
        uint64_t v4 = *(uint64_t **)(v2 + 136);
      }
    }
  }
LABEL_16:
  **(unsigned char **)(v1 + 56) = v3 != v4;
  if (v3 != v4)
  {
    while (v4 != v3)
    {
      unint64_t v8 = (void *)*--v4;
      __n128 result = v8;
      *uint64_t v4 = 0;
      if (v8) {
        __n128 result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
      }
    }
    *(void *)(v2 + 136) = v3;
  }
  return result;
}

void sub_10033D534()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10033D5AC()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_10033D624()
{
  return __cxa_atexit((void (*)(void *))sub_10033BD94, &qword_10047E310, (void *)&_mh_execute_header);
}

void sub_10033D648(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 56);
  int v5 = *(_DWORD *)(a1 + 64);
  *v4 |= 1 << v5;
  if (v5 == 63)
  {
    int v6 = 0;
    *(void *)(a1 + 56) = ++v4;
  }
  else
  {
    int v6 = v5 + 1;
  }
  *(_DWORD *)(a1 + 64) = v6;
  uint64_t v7 = *(void **)(a1 + 32);
  unint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = (uint64_t)&v7[v8 >> 6];
  if (v4 == (void *)v9 && v6 == (v8 & 0x3F))
  {
    *(void *)(a1 + 56) = v7;
    *(_DWORD *)(a1 + 64) = 0;
  }
  buf[0] = 1;
  uint64_t v11 = sub_10033DFB0(v7, 0, v9, v8 & 0x3F, buf);
  unint64_t v12 = v11 & ~(v11 >> 63);
  if (qword_10047BED8 != -1) {
    dispatch_once(&qword_10047BED8, &stru_100468840);
  }
  double v13 = (id)qword_10047BEE0;
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
  {
    if (sub_10033C0E4(*(void *)(a1 + 8)))
    {
      strcpy(__p, "LOW");
      char v14 = 3;
    }
    else
    {
      strcpy(__p, "HIGH");
      char v14 = 4;
    }
    char v21 = v14;
    *(_DWORD *)long long buf = 136315394;
    long long v23 = __p;
    __int16 v24 = 2048;
    unint64_t v25 = v12;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Wifi Scan error. Priority %s. Num rejected scans in window: %llu", buf, 0x16u);
    if (v21 < 0) {
      operator delete(*(void **)__p);
    }
  }

  uint64_t v15 = sub_10009C404(*(void *)(a1 + 8));
  if (*(_DWORD *)(v15 + 32) == 2)
  {
    if ((sub_10033C0E4(*(void *)(a1 + 8)) & 1) == 0)
    {
      sub_10033DC1C(a1, a2);
      return;
    }
    if (v12 > *(unsigned int *)(v15 + 64))
    {
      if (qword_10047BED8 == -1)
      {
        unint64_t v16 = qword_10047BEE0;
        if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG))
        {
LABEL_24:
          uint64_t v17 = *(void *)(a1 + 32);
          unint64_t v18 = *(void *)(a1 + 40);
          if (v18)
          {
            if (v18 >= 0x40) {
              bzero(*(void **)(a1 + 32), 8 * (v18 >> 6));
            }
            if ((v18 & 0x3F) != 0) {
              *(void *)(v17 + 8 * (v18 >> 6)) &= ~(0xFFFFFFFFFFFFFFFFLL >> -(v18 & 0x3F));
            }
          }
          *(void *)(a1 + 56) = v17;
          *(_DWORD *)(a1 + 64) = 0;
          if (!*(unsigned char *)(a1 + 16)) {
            *(unsigned char *)(a1 + 16) = 1;
          }
          *(void *)(a1 + ++*(void *)(result + 24) = a2;
          sub_10033C0EC(*(void *)(a1 + 8), 0);
          return;
        }
      }
      else
      {
        dispatch_once(&qword_10047BED8, &stru_100468840);
        unint64_t v16 = qword_10047BEE0;
        if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG)) {
          goto LABEL_24;
        }
      }
      *(_WORD *)std::string __p = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEBUG, "Wifi Scan failed and roaming has been allowed long enough. Switching to high priority scans", __p, 2u);
      goto LABEL_24;
    }
    if (qword_10047BED8 == -1)
    {
      int v19 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG)) {
        return;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100468840);
      int v19 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG)) {
        return;
      }
    }
    *(_DWORD *)std::string __p = 134217984;
    *(void *)&__p[4] = v12;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEBUG, "Wifi Scan failed but still allowing roaming. Num rejected scans in window: %llu", __p, 0xCu);
  }
}

void sub_10033D9A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10033D9BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10009C404(*(void *)(a1 + 8));
  int v5 = *(void **)(a1 + 56);
  int v6 = *(_DWORD *)(a1 + 64);
  *v5 &= ~(1 << v6);
  if (v6 == 63)
  {
    int v7 = 0;
    *(void *)(a1 + 56) = ++v5;
  }
  else
  {
    int v7 = v6 + 1;
  }
  *(_DWORD *)(a1 + 64) = v7;
  uint64_t v8 = *(void *)(a1 + 32);
  if (v5 == (void *)(v8 + 8 * (*(void *)(a1 + 40) >> 6)) && v7 == (*(_DWORD *)(a1 + 40) & 0x3F))
  {
    *(void *)(a1 + 56) = v8;
    *(_DWORD *)(a1 + 64) = 0;
  }
  if (qword_10047BED8 != -1) {
    dispatch_once(&qword_10047BED8, &stru_100468840);
  }
  uint64_t v10 = (id)qword_10047BEE0;
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG))
  {
    if (sub_10033C0E4(*(void *)(a1 + 8)))
    {
      LODWORD(__p[0]) = 5721932;
      char v11 = 3;
    }
    else
    {
      strcpy((char *)__p, "HIGH");
      char v11 = 4;
    }
    char v18 = v11;
    unint64_t v12 = *(void **)(a1 + 32);
    unint64_t v13 = *(void *)(a1 + 40);
    char v19 = 1;
    uint64_t v14 = sub_10033DFB0(v12, 0, (uint64_t)&v12[v13 >> 6], v13 & 0x3F, &v19);
    *(_DWORD *)long long buf = 136315394;
    char v21 = __p;
    __int16 v22 = 2048;
    uint64_t v23 = v14 & ~(v14 >> 63);
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEBUG, "Wifi Scan success. Priority %s. Num rejected scans in window: %llu", buf, 0x16u);
    if (v18 < 0) {
      operator delete(__p[0]);
    }
  }

  char v15 = sub_10033C0E4(*(void *)(a1 + 8));
  if (*(_DWORD *)(v4 + 32) == 2) {
    char v16 = v15;
  }
  else {
    char v16 = 1;
  }
  if ((v16 & 1) == 0) {
    sub_10033DC1C(a1, a2);
  }
}

void sub_10033DBAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

double sub_10033DBC8@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (char *)operator new(0x20uLL);
  *(void *)a1 = v2;
  *(_OWORD *)(a1 + ++*(void *)(result + 8) = xmmword_1003E74F0;
  strcpy(v2, "DynamicScanPriorityObserver");
  return *(double *)"PriorityObserver";
}

void sub_10033DC1C(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)(a1 + 16))
  {
    sub_1000AE4B0(__p, "");
    sub_10033DF10("Should have a high priority start timestamp if we're scanning in high priority", &buf);
    sub_10016A2C4((uint64_t)__p, (uint64_t)&buf, 1);
    if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(buf.__r_.__value_.__l.__data_);
    }
    if (v6 < 0) {
      operator delete(__p[0]);
    }
    sub_10014B3FC((uint64_t)&v4);
  }
  if (*(float *)(sub_10009C404(*(void *)(a1 + 8)) + 56) * 1000000000.0 < (double)(a2 - *(void *)(a1 + 24)))
  {
    if (qword_10047BED8 == -1)
    {
      uint64_t v3 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG))
      {
LABEL_6:
        if (*(unsigned char *)(a1 + 16)) {
          *(unsigned char *)(a1 + 16) = 0;
        }
        sub_10033C0EC(*(void *)(a1 + 8), 1);
        return;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100468840);
      uint64_t v3 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG)) {
        goto LABEL_6;
      }
    }
    LOWORD(buf.__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Scanning on High Priority too long -- switching to low priority scans", (uint8_t *)&buf, 2u);
    goto LABEL_6;
  }
}

void sub_10033DDB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10033DDFC(uint64_t a1)
{
  *(void *)a1 = off_100468808;
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2) {
    operator delete(v2);
  }
  if (*(unsigned char *)(a1 + 16)) {
    *(unsigned char *)(a1 + 16) = 0;
  }
  return a1;
}

void sub_10033DE54(uint64_t a1)
{
  *(void *)a1 = off_100468808;
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2) {
    operator delete(v2);
  }
  if (*(unsigned char *)(a1 + 16)) {
    *(unsigned char *)(a1 + 16) = 0;
  }

  operator delete();
}

void sub_10033DECC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  uint64_t v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

std::string *sub_10033DF10@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10033DF44(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_10033DF60@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10033DF94(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10033DFB0(void *a1, unsigned int a2, uint64_t a3, unsigned int a4, unsigned char *a5)
{
  int v5 = (int8x16_t *)a1;
  unint64_t v6 = a4 - (unint64_t)a2;
  unint64_t v7 = v6 + 8 * (a3 - (void)a1);
  if (*a5)
  {
    if (a2)
    {
      if (64 - a2 >= v7) {
        unint64_t v8 = v6 + 8 * (a3 - (void)a1);
      }
      else {
        unint64_t v8 = 64 - a2;
      }
      int v5 = (int8x16_t *)(a1 + 1);
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)((0xFFFFFFFFFFFFFFFFLL >> (64 - a2 - v8)) & (-1 << a2) & *a1));
      v9.i16[0] = vaddlv_u8(v9);
      uint64_t result = v9.u32[0];
      v7 -= v8;
      unint64_t v11 = v7 - 64;
      if (v7 >= 0x40) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t result = 0;
      unint64_t v11 = v7 - 64;
      if (v7 >= 0x40)
      {
LABEL_7:
        if (v11 >= 0xC0)
        {
          uint64_t v17 = (v11 >> 6) + 1;
          unint64_t v12 = (int8x8_t *)v5 + (v17 & 0x7FFFFFFFFFFFFFCLL);
          v7 -= (v17 & 0x7FFFFFFFFFFFFFCLL) << 6;
          int64x2_t v18 = 0uLL;
          int64x2_t v19 = (int64x2_t)(unint64_t)result;
          int v20 = v5 + 1;
          uint64_t v21 = v17 & 0x7FFFFFFFFFFFFFCLL;
          do
          {
            int64x2_t v19 = (int64x2_t)vpadalq_u32((uint64x2_t)v19, vpaddlq_u16(vpaddlq_u8((uint8x16_t)vcntq_s8(v20[-1]))));
            int64x2_t v18 = (int64x2_t)vpadalq_u32((uint64x2_t)v18, vpaddlq_u16(vpaddlq_u8((uint8x16_t)vcntq_s8(*v20))));
            v20 += 2;
            v21 -= 4;
          }
          while (v21);
          uint64_t result = vaddvq_s64(vaddq_s64(v18, v19));
          if (v17 == (v17 & 0x7FFFFFFFFFFFFFCLL)) {
            goto LABEL_22;
          }
        }
        else
        {
          unint64_t v12 = (int8x8_t *)v5;
        }
        do
        {
          int8x8_t v22 = *v12++;
          uint8x8_t v23 = (uint8x8_t)vcnt_s8(v22);
          v23.i16[0] = vaddlv_u8(v23);
          result += v23.u32[0];
          v7 -= 64;
        }
        while (v7 > 0x3F);
LABEL_22:
        if (!v7) {
          return result;
        }
        unint64_t v24 = *(void *)v12 & (0xFFFFFFFFFFFFFFFFLL >> -(char)v7);
        goto LABEL_32;
      }
    }
    unint64_t v12 = (int8x8_t *)v5;
    goto LABEL_22;
  }
  if (a2)
  {
    if (64 - a2 >= v7) {
      unint64_t v13 = v6 + 8 * (a3 - (void)a1);
    }
    else {
      unint64_t v13 = 64 - a2;
    }
    int v5 = (int8x16_t *)(a1 + 1);
    uint8x8_t v14 = (uint8x8_t)vcnt_s8((int8x8_t)((0xFFFFFFFFFFFFFFFFLL >> (64 - a2 - v13)) & (-1 << a2) & ~*a1));
    v14.i16[0] = vaddlv_u8(v14);
    uint64_t result = v14.u32[0];
    v7 -= v13;
    unint64_t v15 = v7 - 64;
    if (v7 >= 0x40) {
      goto LABEL_14;
    }
LABEL_25:
    char v16 = (uint64_t *)v5;
    goto LABEL_30;
  }
  uint64_t result = 0;
  unint64_t v15 = v7 - 64;
  if (v7 < 0x40) {
    goto LABEL_25;
  }
LABEL_14:
  if (v15 >= 0xC0)
  {
    uint64_t v25 = (v15 >> 6) + 1;
    char v16 = &v5->i64[v25 & 0x7FFFFFFFFFFFFFCLL];
    v7 -= (v25 & 0x7FFFFFFFFFFFFFCLL) << 6;
    int64x2_t v26 = 0uLL;
    int64x2_t v27 = (int64x2_t)(unint64_t)result;
    uint64_t v28 = v5 + 1;
    uint64_t v29 = v25 & 0x7FFFFFFFFFFFFFCLL;
    do
    {
      int64x2_t v27 = (int64x2_t)vpadalq_u32((uint64x2_t)v27, vpaddlq_u16(vpaddlq_u8((uint8x16_t)vcntq_s8(vmvnq_s8(v28[-1])))));
      int64x2_t v26 = (int64x2_t)vpadalq_u32((uint64x2_t)v26, vpaddlq_u16(vpaddlq_u8((uint8x16_t)vcntq_s8(vmvnq_s8(*v28)))));
      v28 += 2;
      v29 -= 4;
    }
    while (v29);
    uint64_t result = vaddvq_s64(vaddq_s64(v26, v27));
    if (v25 == (v25 & 0x7FFFFFFFFFFFFFCLL)) {
      goto LABEL_30;
    }
  }
  else
  {
    char v16 = (uint64_t *)v5;
  }
  do
  {
    uint64_t v30 = *v16++;
    uint8x8_t v31 = (uint8x8_t)vcnt_s8((int8x8_t)~v30);
    v31.i16[0] = vaddlv_u8(v31);
    result += v31.u32[0];
    v7 -= 64;
  }
  while (v7 > 0x3F);
LABEL_30:
  if (!v7) {
    return result;
  }
  unint64_t v24 = (0xFFFFFFFFFFFFFFFFLL >> -(char)v7) & ~*v16;
LABEL_32:
  uint8x8_t v32 = (uint8x8_t)vcnt_s8((int8x8_t)v24);
  v32.i16[0] = vaddlv_u8(v32);
  result += v32.u32[0];
  return result;
}

void sub_10033E224()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10033E29C()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10033E314()
{
}

void sub_10033E36C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10033E3EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10033E508(uint64_t result)
{
  **(void **)(result + 40) = *(void *)(*(void *)(result + 32) + 8);
  return result;
}

id sub_10033E518(uint64_t a1, uint64_t a2)
{
  id result = *(id *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v5;
  return result;
}

void sub_10033E54C(uint64_t a1)
{
}

uint64_t sub_10033E63C(uint64_t result)
{
  **(void **)(result + 40) = *(void *)(*(void *)(result + 32) + 16);
  return result;
}

id sub_10033E64C(uint64_t a1, uint64_t a2)
{
  id result = *(id *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v5;
  return result;
}

void sub_10033E680(uint64_t a1)
{
}

void sub_10033E71C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10033E794()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10033E80C()
{
}

void sub_10033E898(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10033E8AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10033E8BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10033E9DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)NewWifiScanner;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_10033EBC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, std::future<void> a11, std::promise<void> a12)
{
  std::future<void>::~future(&a11);
  std::promise<void>::~promise(&a12);

  _Unwind_Resume(a1);
}

void sub_10033ED78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10033EE6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  std::future<void>::~future((std::future<void> *)(v11 - 32));
  std::promise<void>::~promise((std::promise<void> *)(v11 - 24));

  _Unwind_Resume(a1);
}

void sub_10033EEA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_10033EF30(uint64_t a1)
{
  [*(id *)(a1 + 32) onQueueStopScanning];
}

void sub_10033F038(uint64_t a1)
{
  [*(id *)(a1 + 32) onQueueHandleScan:*(void *)(a1 + 40) forSettings:*(void *)(a1 + 48)];
}

void sub_10033F144(uint64_t a1)
{
  [*(id *)(a1 + 32) onQueueHandleScan:*(void *)(a1 + 40) forSettings:*(void *)(a1 + 48)];
}

void sub_10033F254(id *a1)
{
  uint64_t v3 = [a1[4] settings];
  unsigned int v4 = [v3 lowPriorityScan];

  if (v4)
  {
    if (qword_10047BED8 != -1) {
      dispatch_once(&qword_10047BED8, &stru_1004689B8);
    }
    uint64_t v5 = (id)qword_10047BEE0;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
    {
      unsigned int v6 = [a1[5] code];
      int v11 = 67109120;
      unsigned int v12 = v6;
      unint64_t v7 = "WARNING: wifi scan failed with %d";
      unint64_t v8 = v5;
      os_log_type_t v9 = OS_LOG_TYPE_INFO;
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, v8, v9, v7, (uint8_t *)&v11, 8u);
    }
  }
  else
  {
    if (qword_10047BED8 != -1) {
      dispatch_once(&qword_10047BED8, &stru_1004689B8);
    }
    uint64_t v5 = (id)qword_10047BEE0;
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      unsigned int v10 = [a1[5] code];
      int v11 = 67109120;
      unsigned int v12 = v10;
      unint64_t v7 = "wifi scan failed with %d";
      unint64_t v8 = v5;
      os_log_type_t v9 = OS_LOG_TYPE_ERROR;
      goto LABEL_10;
    }
  }

  [a1[6] onQueueHandleScanFailed:a1[5] forSettings:a1[4]];
}

void sub_10033F3E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10033F3F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10033F400(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10033F644(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10033FA5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10033FFD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003402D0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  uint64_t v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

void sub_100340314(uint64_t a1)
{
}

void sub_100340350(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  __cxa_begin_catch(a1);
  unint64_t v15 = *(std::promise<void> **)(v14 + 40);
  std::current_exception();
  v16.__ptr_ = v17;
  std::promise<void>::set_exception(v15, v16);
  std::exception_ptr::~exception_ptr(v17);
  __cxa_end_catch();
}

void sub_100340388(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10)
{
}

void sub_1003403A4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  [*(id *)(*(void *)v2 + 8) stopListeningCachedScans];
  std::promise<void>::set_value(*(std::promise<void> **)(a1 + 40));
}

void sub_1003403FC(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  __cxa_begin_catch(a1);
  uint64_t v17 = *(std::promise<void> **)(v16 + 40);
  std::current_exception();
  v18.__ptr_ = v19;
  std::promise<void>::set_exception(v17, v18);
  std::exception_ptr::~exception_ptr(v19);
  __cxa_end_catch();
}

void sub_100340438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::exception_ptr a10)
{
}

void sub_100340454()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1003404CC()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100340544()
{
}

void sub_10034059C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003406B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003407F8()
{
}

uint64_t **sub_100340820(uint64_t **a1)
{
  a1[1] = 0;
  uint64_t v2 = a1 + 1;
  a1[2] = 0;
  *a1 = (uint64_t *)(a1 + 1);
  a1[3] = 0;
  a1[4] = 0;
  a1[5] = 0;
  long long v68 = xmmword_1003FD010;
  *(_OWORD *)long double v69 = unk_1003FD020;
  *(_OWORD *)&v69[12] = unk_1003FD02C;
  uint64_t v3 = (char *)operator new(0x40uLL);
  *((_DWORD *)v3 + ++*(void *)(result + 8) = 0;
  *((void *)v3 + 5) = 0;
  unsigned int v4 = v3 + 40;
  *((void *)v3 + 6) = 0;
  *((void *)v3 + 7) = 0;
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  *((void *)v3 + 2) = v2;
  *a1 = (uint64_t *)v3;
  a1[1] = (uint64_t *)v3;
  sub_1000619B8((uint64_t *)v3, (uint64_t *)v3);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  sub_10007B79C(v4, (char *)&v68, &v69[28], 0xBuLL);
  *(void *)&long long v68 = 0x600000001;
  DWORD2(v6++*(void *)(result + 8) = 11;
  uint64_t v5 = *v2;
  unsigned int v6 = v2;
  unint64_t v7 = v2;
  if (*v2)
  {
    while (1)
    {
      while (1)
      {
        unint64_t v7 = (uint64_t **)v5;
        int v8 = *((_DWORD *)v5 + 8);
        if (v8 < 2) {
          break;
        }
        uint64_t v5 = *v7;
        unsigned int v6 = v7;
        if (!*v7) {
          goto LABEL_8;
        }
      }
      if (v8 == 1) {
        break;
      }
      uint64_t v5 = v7[1];
      if (!v5)
      {
        unsigned int v6 = v7 + 1;
        goto LABEL_8;
      }
    }
    os_log_type_t v9 = v7;
  }
  else
  {
LABEL_8:
    os_log_type_t v9 = operator new(0x40uLL);
    v9[8] = 1;
    *((void *)v9 + 6) = 0;
    *((void *)v9 + 7) = 0;
    *((void *)v9 + 5) = 0;
    *(void *)os_log_type_t v9 = 0;
    *((void *)v9 + 1) = 0;
    *((void *)v9 + 2) = v7;
    *unsigned int v6 = (uint64_t *)v9;
    unsigned int v10 = (uint64_t *)**a1;
    int v11 = (uint64_t *)v9;
    if (v10)
    {
      *a1 = v10;
      int v11 = *v6;
    }
    sub_1000619B8(a1[1], v11);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  sub_10007B79C((void *)v9 + 5, (char *)&v68, (char *)&v68 + 12, 3uLL);
  long long v68 = xmmword_1003FD03C;
  *(_OWORD *)long double v69 = unk_1003FD04C;
  *(_OWORD *)&v69[16] = xmmword_1003FD05C;
  LODWORD(v70) = 13;
  unsigned int v12 = *v2;
  unint64_t v13 = v2;
  uint64_t v14 = v2;
  if (*v2)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v14 = (uint64_t **)v12;
        int v15 = *((_DWORD *)v12 + 8);
        if (v15 < 3) {
          break;
        }
        unsigned int v12 = *v14;
        unint64_t v13 = v14;
        if (!*v14) {
          goto LABEL_19;
        }
      }
      if (v15 == 2) {
        break;
      }
      unsigned int v12 = v14[1];
      if (!v12)
      {
        unint64_t v13 = v14 + 1;
        goto LABEL_19;
      }
    }
    uint64_t v16 = v14;
  }
  else
  {
LABEL_19:
    uint64_t v16 = operator new(0x40uLL);
    v16[8] = 2;
    *((void *)v16 + 6) = 0;
    *((void *)v16 + 7) = 0;
    *((void *)v16 + 5) = 0;
    *(void *)uint64_t v16 = 0;
    *((void *)v16 + 1) = 0;
    *((void *)v16 + 2) = v14;
    *unint64_t v13 = (uint64_t *)v16;
    uint64_t v17 = (uint64_t *)**a1;
    std::exception_ptr v18 = (uint64_t *)v16;
    if (v17)
    {
      *a1 = v17;
      std::exception_ptr v18 = *v13;
    }
    sub_1000619B8(a1[1], v18);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  sub_10007B79C((void *)v16 + 5, (char *)&v68, (char *)&v70 + 4, 0xDuLL);
  long long v68 = xmmword_1003FD070;
  *(_OWORD *)long double v69 = unk_1003FD080;
  *(_DWORD *)&v69[16] = 165;
  int64x2_t v19 = *v2;
  int v20 = v2;
  uint64_t v21 = v2;
  if (*v2)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v21 = (uint64_t **)v19;
        int v22 = *((_DWORD *)v19 + 8);
        if (v22 < 4) {
          break;
        }
        int64x2_t v19 = *v21;
        int v20 = v21;
        if (!*v21) {
          goto LABEL_30;
        }
      }
      if (v22 == 3) {
        break;
      }
      int64x2_t v19 = v21[1];
      if (!v19)
      {
        int v20 = v21 + 1;
        goto LABEL_30;
      }
    }
    uint8x8_t v23 = v21;
  }
  else
  {
LABEL_30:
    uint8x8_t v23 = operator new(0x40uLL);
    v23[8] = 3;
    *((void *)v23 + 6) = 0;
    *((void *)v23 + 7) = 0;
    *((void *)v23 + 5) = 0;
    *(void *)uint8x8_t v23 = 0;
    *((void *)v23 + 1) = 0;
    *((void *)v23 + 2) = v21;
    *int v20 = (uint64_t *)v23;
    unint64_t v24 = (uint64_t *)**a1;
    uint64_t v25 = (uint64_t *)v23;
    if (v24)
    {
      *a1 = v24;
      uint64_t v25 = *v20;
    }
    sub_1000619B8(a1[1], v25);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  sub_10007B79C((void *)v23 + 5, (char *)&v68, &v69[20], 9uLL);
  long long v68 = xmmword_1003FD094;
  *(_OWORD *)long double v69 = unk_1003FD0A4;
  *(_OWORD *)&v69[16] = xmmword_1003FD0B4;
  long long v70 = unk_1003FD0C4;
  int64x2_t v26 = *v2;
  int64x2_t v27 = v2;
  uint64_t v28 = v2;
  if (*v2)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v28 = (uint64_t **)v26;
        int v29 = *((_DWORD *)v26 + 8);
        if (v29 < 5) {
          break;
        }
        int64x2_t v26 = *v28;
        int64x2_t v27 = v28;
        if (!*v28) {
          goto LABEL_41;
        }
      }
      if (v29 == 4) {
        break;
      }
      int64x2_t v26 = v28[1];
      if (!v26)
      {
        int64x2_t v27 = v28 + 1;
        goto LABEL_41;
      }
    }
    uint64_t v30 = v28;
  }
  else
  {
LABEL_41:
    uint64_t v30 = operator new(0x40uLL);
    v30[8] = 4;
    *((void *)v30 + 6) = 0;
    *((void *)v30 + 7) = 0;
    *((void *)v30 + 5) = 0;
    *(void *)uint64_t v30 = 0;
    *((void *)v30 + 1) = 0;
    *((void *)v30 + 2) = v28;
    void *v27 = (uint64_t *)v30;
    uint8x8_t v31 = (uint64_t *)**a1;
    uint8x8_t v32 = (uint64_t *)v30;
    if (v31)
    {
      *a1 = v31;
      uint8x8_t v32 = *v27;
    }
    sub_1000619B8(a1[1], v32);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  sub_10007B79C((void *)v30 + 5, (char *)&v68, v71, 0x10uLL);
  long long v68 = xmmword_1003FCFF0;
  long long v33 = *v2;
  long long v34 = v2;
  long long v35 = v2;
  if (*v2)
  {
    while (1)
    {
      while (1)
      {
        long long v35 = (uint64_t **)v33;
        int v36 = *((_DWORD *)v33 + 8);
        if (v36 < 6) {
          break;
        }
        long long v33 = *v35;
        long long v34 = v35;
        if (!*v35) {
          goto LABEL_52;
        }
      }
      if (v36 == 5) {
        break;
      }
      long long v33 = v35[1];
      if (!v33)
      {
        long long v34 = v35 + 1;
        goto LABEL_52;
      }
    }
    long long v37 = v35;
  }
  else
  {
LABEL_52:
    long long v37 = operator new(0x40uLL);
    v37[8] = 5;
    *((void *)v37 + 6) = 0;
    *((void *)v37 + 7) = 0;
    *((void *)v37 + 5) = 0;
    *(void *)long long v37 = 0;
    *((void *)v37 + 1) = 0;
    *((void *)v37 + 2) = v35;
    *long long v34 = (uint64_t *)v37;
    long long v38 = (uint64_t *)**a1;
    long long v39 = (uint64_t *)v37;
    if (v38)
    {
      *a1 = v38;
      long long v39 = *v34;
    }
    sub_1000619B8(a1[1], v39);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  sub_10007B79C((void *)v37 + 5, (char *)&v68, v69, 4uLL);
  long long v68 = xmmword_1003FD0D4;
  *(_DWORD *)long double v69 = 165;
  uint64_t v40 = *v2;
  uint64_t v41 = v2;
  uint64_t v42 = v2;
  if (*v2)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v42 = (uint64_t **)v40;
        int v43 = *((_DWORD *)v40 + 8);
        if (v43 < 7) {
          break;
        }
        uint64_t v40 = *v42;
        uint64_t v41 = v42;
        if (!*v42) {
          goto LABEL_63;
        }
      }
      if (v43 == 6) {
        break;
      }
      uint64_t v40 = v42[1];
      if (!v40)
      {
        uint64_t v41 = v42 + 1;
        goto LABEL_63;
      }
    }
    uint64_t v44 = v42;
  }
  else
  {
LABEL_63:
    uint64_t v44 = operator new(0x40uLL);
    v44[8] = 6;
    *((void *)v44 + 6) = 0;
    *((void *)v44 + 7) = 0;
    *((void *)v44 + 5) = 0;
    *(void *)uint64_t v44 = 0;
    *((void *)v44 + 1) = 0;
    *((void *)v44 + 2) = v42;
    unsigned __int8 *v41 = (uint64_t *)v44;
    uint64_t v45 = (uint64_t *)**a1;
    uint64_t v46 = (uint64_t *)v44;
    if (v45)
    {
      *a1 = v45;
      uint64_t v46 = *v41;
    }
    sub_1000619B8(a1[1], v46);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  sub_10007B79C((void *)v44 + 5, (char *)&v68, &v69[4], 5uLL);
  long long v68 = xmmword_1003FD000;
  double v47 = *v2;
  double v48 = v2;
  long double v49 = v2;
  if (*v2)
  {
    while (1)
    {
      while (1)
      {
        long double v49 = (uint64_t **)v47;
        int v50 = *((_DWORD *)v47 + 8);
        if (v50 < 8) {
          break;
        }
        double v47 = *v49;
        double v48 = v49;
        if (!*v49) {
          goto LABEL_74;
        }
      }
      if (v50 == 7) {
        break;
      }
      double v47 = v49[1];
      if (!v47)
      {
        double v48 = v49 + 1;
        goto LABEL_74;
      }
    }
    BOOL v51 = v49;
  }
  else
  {
LABEL_74:
    BOOL v51 = operator new(0x40uLL);
    v51[8] = 7;
    *((void *)v51 + 6) = 0;
    *((void *)v51 + 7) = 0;
    *((void *)v51 + 5) = 0;
    *(void *)BOOL v51 = 0;
    *((void *)v51 + 1) = 0;
    *((void *)v51 + 2) = v49;
    *double v48 = (uint64_t *)v51;
    double v52 = (uint64_t *)**a1;
    long double v53 = (uint64_t *)v51;
    if (v52)
    {
      *a1 = v52;
      long double v53 = *v48;
    }
    sub_1000619B8(a1[1], v53);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  sub_10007B79C((void *)v51 + 5, (char *)&v68, v69, 4uLL);
  long long v68 = xmmword_1003FD0E8;
  *(_OWORD *)long double v69 = unk_1003FD0F8;
  *(_OWORD *)&v69[12] = unk_1003FD104;
  long double v54 = *v2;
  BOOL v55 = v2;
  double v56 = v2;
  if (*v2)
  {
    while (1)
    {
      while (1)
      {
        double v56 = (uint64_t **)v54;
        int v57 = *((_DWORD *)v54 + 8);
        if (v57 < 9) {
          break;
        }
        long double v54 = *v56;
        BOOL v55 = v56;
        if (!*v56) {
          goto LABEL_85;
        }
      }
      if (v57 == 8) {
        break;
      }
      long double v54 = v56[1];
      if (!v54)
      {
        BOOL v55 = v56 + 1;
        goto LABEL_85;
      }
    }
    long long v58 = v56;
  }
  else
  {
LABEL_85:
    long long v58 = operator new(0x40uLL);
    v58[8] = 8;
    *((void *)v58 + 6) = 0;
    *((void *)v58 + 7) = 0;
    *((void *)v58 + 5) = 0;
    *(void *)long long v58 = 0;
    *((void *)v58 + 1) = 0;
    *((void *)v58 + 2) = v56;
    *BOOL v55 = (uint64_t *)v58;
    long long v59 = (uint64_t *)**a1;
    uint64_t v60 = (uint64_t *)v58;
    if (v59)
    {
      *a1 = v59;
      uint64_t v60 = *v55;
    }
    sub_1000619B8(a1[1], v60);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  sub_10007B79C((void *)v58 + 5, (char *)&v68, &v69[28], 0xBuLL);
  *(void *)&long long v68 = 0x6400000034;
  uint64_t v61 = *v2;
  uint64_t v62 = v2;
  if (*v2)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v62 = (uint64_t **)v61;
        int v63 = *((_DWORD *)v61 + 8);
        if (v63 < 10) {
          break;
        }
        uint64_t v61 = *v62;
        uint64_t v2 = v62;
        if (!*v62) {
          goto LABEL_96;
        }
      }
      if (v63 == 9) {
        break;
      }
      uint64_t v61 = v62[1];
      if (!v61)
      {
        uint64_t v2 = v62 + 1;
        goto LABEL_96;
      }
    }
    uint64_t v64 = v62;
  }
  else
  {
LABEL_96:
    uint64_t v64 = operator new(0x40uLL);
    v64[8] = 9;
    *((void *)v64 + 6) = 0;
    *((void *)v64 + 7) = 0;
    *((void *)v64 + 5) = 0;
    *(void *)uint64_t v64 = 0;
    *((void *)v64 + 1) = 0;
    *((void *)v64 + 2) = v62;
    void *v2 = (uint64_t *)v64;
    uint64_t v65 = (uint64_t *)**a1;
    uint64_t v66 = (uint64_t *)v64;
    if (v65)
    {
      *a1 = v65;
      uint64_t v66 = *v2;
    }
    sub_1000619B8(a1[1], v66);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  sub_10007B79C((void *)v64 + 5, (char *)&v68, (char *)&v68 + 8, 2uLL);
  return a1;
}

void sub_100341038(_Unwind_Exception *a1)
{
  unsigned int v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 32) = v4;
    operator delete(v4);
  }
  sub_10033C31C(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

void sub_100341088(int *a1@<X1>, int *a2@<X2>, int *a3@<X3>, uint64_t *a4@<X4>, int **a5@<X8>)
{
  unsigned int v6 = a1;
  if (a1 != a2)
  {
    while (1)
    {
      os_log_type_t v9 = sub_1003411A0(a3, a4, &v18, &v17, v6);
      uint64_t v10 = *v9;
      if (*v9)
      {
        int v11 = *(uint64_t **)(v10 + 8);
        if (v11) {
          goto LABEL_10;
        }
      }
      else
      {
        unsigned int v12 = v9;
        uint64_t v10 = (uint64_t)operator new(0x20uLL);
        *(_DWORD *)(v10 + 2++*(void *)(result + 8) = *v6;
        unint64_t v13 = v18;
        *(void *)uint64_t v10 = 0;
        *(void *)(v10 + ++*(void *)(result + 8) = 0;
        *(void *)(v10 + 16) = v13;
        *unsigned int v12 = v10;
        uint64_t v14 = **(void ***)a3;
        int v15 = (uint64_t *)v10;
        if (v14)
        {
          *(void *)a3 = v14;
          int v15 = (uint64_t *)*v12;
        }
        sub_1000619B8(*((uint64_t **)a3 + 1), v15);
        ++*((void *)a3 + 2);
        int v11 = *(uint64_t **)(v10 + 8);
        if (v11)
        {
          do
          {
LABEL_10:
            a4 = v11;
            int v11 = (uint64_t *)*v11;
          }
          while (v11);
          goto LABEL_3;
        }
      }
      do
      {
        a4 = *(uint64_t **)(v10 + 16);
        BOOL v16 = *a4 == v10;
        uint64_t v10 = (uint64_t)a4;
      }
      while (!v16);
LABEL_3:
      if (++v6 == a2)
      {
        unsigned int v6 = a2;
        break;
      }
    }
  }
  *a5 = v6;
  a5[1] = a3;
  a5[2] = (int *)a4;
}

uint64_t *sub_1003411A0(void *a1, uint64_t *a2, uint64_t **a3, uint64_t **a4, int *a5)
{
  uint64_t v5 = a1 + 1;
  if (a1 + 1 == a2 || (int v6 = *a5, v7 = *((_DWORD *)a2 + 7), *a5 < v7))
  {
    int v8 = (uint64_t *)*a2;
    if ((uint64_t *)*a1 == a2)
    {
      uint64_t v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v8)
    {
      os_log_type_t v9 = (uint64_t *)*a2;
      do
      {
        uint64_t v10 = v9;
        os_log_type_t v9 = (uint64_t *)v9[1];
      }
      while (v9);
    }
    else
    {
      uint64_t v14 = a2;
      do
      {
        uint64_t v10 = (uint64_t *)v14[2];
        BOOL v15 = *v10 == (void)v14;
        uint64_t v14 = v10;
      }
      while (v15);
    }
    int v16 = *a5;
    if (*((_DWORD *)v10 + 7) < *a5) {
      goto LABEL_17;
    }
    uint64_t v18 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          int64x2_t v19 = (uint64_t *)v18;
          int v20 = *(_DWORD *)(v18 + 28);
          if (v16 >= v20) {
            break;
          }
          uint64_t v18 = *v19;
          uint64_t v5 = v19;
          if (!*v19) {
            goto LABEL_25;
          }
        }
        if (v20 >= v16) {
          break;
        }
        uint64_t v5 = v19 + 1;
        uint64_t v18 = v19[1];
      }
      while (v18);
LABEL_25:
      *a3 = v19;
      return v5;
    }
    else
    {
      *a3 = v5;
      return a1 + 1;
    }
  }
  else if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = a2;
    return (uint64_t *)a4;
  }
  else
  {
    uint64_t v11 = a2[1];
    if (v11)
    {
      unsigned int v12 = (uint64_t *)a2[1];
      do
      {
        unint64_t v13 = v12;
        unsigned int v12 = (uint64_t *)*v12;
      }
      while (v12);
    }
    else
    {
      uint64_t v21 = a2;
      do
      {
        unint64_t v13 = (uint64_t *)v21[2];
        BOOL v15 = *v13 == (void)v21;
        uint64_t v21 = v13;
      }
      while (!v15);
    }
    if (v13 == v5 || v6 < *((_DWORD *)v13 + 7))
    {
      if (v11)
      {
        *a3 = v13;
        return v13;
      }
      else
      {
        *a3 = a2;
        return a2 + 1;
      }
    }
    else
    {
      uint64_t v22 = *v5;
      if (*v5)
      {
        do
        {
          while (1)
          {
            uint8x8_t v23 = (uint64_t *)v22;
            int v24 = *(_DWORD *)(v22 + 28);
            if (v6 >= v24) {
              break;
            }
            uint64_t v22 = *v23;
            uint64_t v5 = v23;
            if (!*v23) {
              goto LABEL_41;
            }
          }
          if (v24 >= v6) {
            break;
          }
          uint64_t v5 = v23 + 1;
          uint64_t v22 = v23[1];
        }
        while (v22);
LABEL_41:
        *a3 = v23;
        return v5;
      }
      else
      {
        *a3 = v5;
        return a1 + 1;
      }
    }
  }
}

void *sub_100341350(void *a1, void *a2, void *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2 != a3)
  {
    uint64_t v5 = a2;
    unint64_t v6 = 0;
    int v7 = a2;
    do
    {
      unint64_t v8 = v6;
      os_log_type_t v9 = (void *)v7[1];
      if (v9)
      {
        do
        {
          uint64_t v10 = v9;
          os_log_type_t v9 = (void *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          uint64_t v10 = (void *)v7[2];
          BOOL v11 = *v10 == (void)v7;
          int v7 = v10;
        }
        while (!v11);
      }
      ++v6;
      int v7 = v10;
    }
    while (v10 != a3);
    if (v8 >= 0x3FFFFFFFFFFFFFFFLL) {
      sub_1000A9108();
    }
    unsigned int v12 = operator new(4 * v6);
    *a1 = v12;
    a1[1] = v12;
    a1[2] = &v12[v6];
    do
    {
      *unsigned int v12 = *((_DWORD *)v5 + 7);
      unint64_t v13 = (void *)v5[1];
      if (v13)
      {
        do
        {
          uint64_t v14 = v13;
          unint64_t v13 = (void *)*v13;
        }
        while (v13);
      }
      else
      {
        do
        {
          uint64_t v14 = (void *)v5[2];
          BOOL v11 = *v14 == (void)v5;
          uint64_t v5 = v14;
        }
        while (!v11);
      }
      ++v12;
      uint64_t v5 = v14;
    }
    while (v14 != a3);
    a1[1] = v12;
  }
  return a1;
}

void sub_100341460(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + ++*(void *)(result + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_100341614(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)BaseWifiScannerBackend;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_100341708(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  uint64_t v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

void sub_10034174C()
{
}

id sub_100341774(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  id v2 = [WeakRetained sensorPresent];

  return v2;
}

void sub_1003417AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003417BC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  [WeakRetained stop];
}

void sub_100341804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100341920(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1003419E4(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 96));
  *(void *)a1 = off_10046A518;
  uint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 80);
    unsigned int v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        uint64_t v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5) {
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      unsigned int v4 = *(void **)(a1 + 72);
    }
    *(void *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  return a1;
}

void sub_100341A80(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 96));
  *(void *)a1 = off_10046A518;
  uint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 80);
    unsigned int v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        uint64_t v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5) {
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      unsigned int v4 = *(void **)(a1 + 72);
    }
    *(void *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));

  operator delete();
}

void sub_100341B3C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  uint64_t v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

void sub_100341B80()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100341BF8()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100341C70()
{
}

void sub_100341CE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100341D04(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  uint64_t v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

void sub_100341D48()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100341DC0()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100341E38()
{
}

void sub_100341E60(id a1)
{
  id v1 = objc_alloc_init((Class)CMMotionManager);
  uint64_t v2 = (void *)qword_10047E348;
  qword_10047E348 = (uint64_t)v1;

  uint64_t v3 = (void *)qword_10047E348;

  [v3 setDeviceMotionUpdateInterval:0.01];
}

void *sub_100341EB4(void *a1)
{
  *a1 = off_10046A408;
  uint64_t v2 = (void *)a1[8];
  if (v2)
  {
    do
    {
      uint64_t v3 = (void *)*v2;
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  unsigned int v4 = (void *)a1[6];
  a1[6] = 0;
  if (v4) {
    operator delete(v4);
  }
  uint64_t v5 = (void *)a1[3];
  if (v5)
  {
    a1[4] = v5;
    operator delete(v5);
  }
  unint64_t v6 = (std::__shared_weak_count *)a1[2];
  if (!v6 || atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

uint64_t sub_100341F84(uint64_t a1)
{
  sub_100344340((id *)(a1 + 88));
  *(void *)a1 = off_10046A408;
  uint64_t v2 = *(void **)(a1 + 64);
  if (v2)
  {
    do
    {
      uint64_t v3 = (void *)*v2;
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  unsigned int v4 = *(void **)(a1 + 48);
  *(void *)(a1 + 4++*(void *)(result + 8) = 0;
  if (v4) {
    operator delete(v4);
  }
  uint64_t v5 = *(void **)(a1 + 24);
  if (v5)
  {
    *(void *)(a1 + 32) = v5;
    operator delete(v5);
  }
  unint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v6 || atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_10034205C(uint64_t a1)
{
  sub_100344340((id *)(a1 + 88));
  *(void *)a1 = off_10046A408;
  uint64_t v2 = *(void **)(a1 + 64);
  if (v2)
  {
    do
    {
      uint64_t v3 = (void *)*v2;
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  unsigned int v4 = *(void **)(a1 + 48);
  *(void *)(a1 + 4++*(void *)(result + 8) = 0;
  if (v4) {
    operator delete(v4);
  }
  uint64_t v5 = *(void **)(a1 + 24);
  if (v5)
  {
    *(void *)(a1 + 32) = v5;
    operator delete(v5);
  }
  unint64_t v6 = *(std::__shared_weak_count **)(a1 + 16);
  if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }

  operator delete();
}

void sub_100342144(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100342144(a1, *a2);
    sub_100342144(a1, a2[1]);

    operator delete(a2);
  }
}

void sub_1003421A0()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100342218()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100342290()
{
}

void sub_1003423C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100342764(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  uint64_t v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

void sub_1003427A8()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100342820()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100342898()
{
}

void sub_100342970(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 8);
  if (v3)
  {
    [v3 setDelegate:0];
    uint64_t v2 = *(void *)(a1 + 32);
    uint64_t v3 = *(void **)(v2 + 8);
  }
  *(void *)(v2 + ++*(void *)(result + 8) = 0;
}

id sub_1003429C0(uint64_t a1, uint64_t a2)
{
  id result = *(id *)(a2 + 32);
  *(void *)(a1 + 32) = result;
  return result;
}

void sub_1003429EC(uint64_t a1)
{
}

void sub_100342B88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100342C54(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  uint64_t v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

uint64_t sub_100342C98(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 96));
  *(void *)a1 = off_10046A518;
  uint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 80);
    unsigned int v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        uint64_t v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5) {
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      unsigned int v4 = *(void **)(a1 + 72);
    }
    *(void *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  return a1;
}

void sub_100342D34(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 96));
  *(void *)a1 = off_10046A518;
  uint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 80);
    unsigned int v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        uint64_t v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5) {
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      unsigned int v4 = *(void **)(a1 + 72);
    }
    *(void *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));

  operator delete();
}

id sub_100342DF0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  id v2 = [WeakRetained sensorPresent];

  return v2;
}

void sub_100342E28(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100342E38(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  [WeakRetained start];
}

void sub_100342E80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100342E94(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  [WeakRetained stop];
}

void sub_100342EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100342EF0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  uint64_t v10 = [v7 identifier];
  BOOL v11 = [v10 UUIDString];

  unsigned int v12 = [v8 objectForKey:CBAdvertisementDataManufacturerDataKey];
  size_t v13 = (size_t)[v12 length];
  size_t v14 = v13;
  double v47 = 0;
  double v48 = 0;
  long double v49 = 0;
  if (v13)
  {
    if ((v13 & 0x8000000000000000) != 0) {
      sub_1000A9108();
    }
    BOOL v15 = (char *)operator new(v13);
    double v47 = v15;
    long double v49 = &v15[v14];
    bzero(v15, v14);
    double v48 = &v15[v14];
  }
  else
  {
    BOOL v15 = 0;
  }
  [v12 getBytes:v15 length:[v12 length]];
  int v16 = [v7 name];
  uint64_t v17 = v16;
  if (v16)
  {
    [v16 ps_STLStringOnNil:&stru_10046D078];
  }
  else
  {
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    uint64_t v46 = 0;
  }

  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  memset(v41, 0, 29);
  memset(&v41[32], 0, 48);
  int v36 = off_10045DBB8;
  uint64_t v42 = 0;
  v43 &= 0xF000u;
  uint64_t v18 = sub_10036E0E0();
  int64x2_t v19 = v18;
  unsigned __int8 v20 = atomic_load((unsigned __int8 *)v18 + 20);
  if ((v20 & 1) != 0 || *((unsigned char *)v18 + 16))
  {
    if (!*((unsigned char *)v18 + 17)) {
      goto LABEL_17;
    }
LABEL_11:
    uint64_t v21 = [v8 objectForKey:CBAdvertisementDataServiceDataKey];
    uint64_t v22 = [v21 description];

    if (v22) {
      [v22 ps_STLStringOnNil:&stru_10046D078];
    }
    else {
      memset(v34, 0, 24);
    }
    sub_100343690((uint64_t)v47, (uint64_t)v48);
    sub_1001AB7A0((uint64_t)&v36, v34);
    sub_1001AB7D4((uint64_t)&v36, &__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v34[0].__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_16;
      }
    }
    else if ((SHIBYTE(v34[0].__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_16:

      goto LABEL_17;
    }
    operator delete(v34[0].__r_.__value_.__l.__data_);
    goto LABEL_16;
  }
  BOOL v32 = sub_100059C20((uint64_t)v18, (unsigned char *)v18 + 9);
  *((unsigned char *)v19 + 17) = v32;
  *((unsigned char *)v19 + 16) = 1;
  atomic_store(1u, (unsigned __int8 *)v19 + 20);
  if (v32) {
    goto LABEL_11;
  }
LABEL_17:
  if (!sub_10035D0CC(&v47))
  {
    int v24 = sub_10036E0E0();
    uint64_t v25 = v24;
    unsigned __int8 v26 = atomic_load((unsigned __int8 *)v24 + 20);
    if ((v26 & 1) != 0 || *((unsigned char *)v24 + 16))
    {
      if (!*((unsigned char *)v24 + 17)) {
        goto LABEL_36;
      }
    }
    else
    {
      BOOL v33 = sub_100059C20((uint64_t)v24, (unsigned char *)v24 + 9);
      *((unsigned char *)v25 + 17) = v33;
      *((unsigned char *)v25 + 16) = 1;
      atomic_store(1u, (unsigned __int8 *)v25 + 20);
      if (!v33) {
        goto LABEL_36;
      }
    }
    goto LABEL_25;
  }
  if (sub_10035D270((uint64_t)&v36, &v47))
  {
LABEL_25:
    uint64_t v27 = sub_100042EE0();
    sub_100041B18((uint64_t)&v36, v27);
    if (v11) {
      [v11 ps_STLString];
    }
    else {
      memset(v34, 0, 24);
    }
    sub_1001AB798((uint64_t)&v36, v34);
    if (SHIBYTE(v34[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v34[0].__r_.__value_.__l.__data_);
    }
    uint64_t v28 = [v8 objectForKey:CBAdvertisementDataTxPowerLevelKey, *(_OWORD *)&v34[0].__r_.__value_.__l.__data_, v34[0].__r_.__value_.__r.__words[2]];
    sub_1001AB808((uint64_t)&v36, (int)[v28 intValue]);

    sub_1001AB810((uint64_t)&v36, (int)[v9 intValue]);
    int v29 = [v8 objectForKey:CBAdvertisementDataChannel];
    sub_1001AB818((uint64_t)&v36, (int)[v29 intValue]);

    sub_10035EF94((uint64_t)v34, (uint64_t)&v36);
    uint64_t v30 = operator new(0x108uLL);
    v30[1] = 0;
    v30[2] = 0;
    void *v30 = off_100454870;
    sub_1001AC878(v30 + 4, v34);
    *((_DWORD *)v30 + 6) = 4;
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)(v30 + 3);
    __p.__r_.__value_.__l.__size_ = (std::string::size_type)v30;
    sub_100045938(a1, (uint64_t)&__p);
    std::string::size_type size = (std::__shared_weak_count *)__p.__r_.__value_.__l.__size_;
    if (__p.__r_.__value_.__l.__size_
      && !atomic_fetch_add((atomic_ullong *volatile)(__p.__r_.__value_.__l.__size_ + 8), 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))size->__on_zero_shared)(size);
      std::__shared_weak_count::__release_weak(size);
    }
    sub_1001AB75C(v34);
    goto LABEL_36;
  }
  if (qword_10047BED8 == -1)
  {
    uint8x8_t v23 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
      goto LABEL_36;
    }
    goto LABEL_21;
  }
  dispatch_once(&qword_10047BED8, &stru_100468C10);
  uint8x8_t v23 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
  {
LABEL_21:
    LOWORD(v34[0].__r_.__value_.__l.__data_) = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_ERROR, "failed to parse Beacon fields!", (uint8_t *)v34, 2u);
  }
LABEL_36:
  sub_1001AB75C(&v36);
  if (SHIBYTE(v46) < 0) {
    operator delete(v44);
  }
  if (v47)
  {
    double v48 = v47;
    operator delete(v47);
  }
}

void sub_100343420(void *a1)
{
}

void sub_10034343C(void *a1)
{
}

void sub_100343458(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,char a40)
{
  sub_1001AB75C(&a40);
  if (*(char *)(v45 - 105) < 0)
  {
    operator delete(*(void **)(v45 - 128));
    double v47 = *(void **)(v45 - 104);
    if (!v47) {
      goto LABEL_6;
    }
  }
  else
  {
    double v47 = *(void **)(v45 - 104);
    if (!v47)
    {
LABEL_6:

      _Unwind_Resume(a1);
    }
  }
  *(void *)(v45 - 96) = v47;
  operator delete(v47);
  goto LABEL_6;
}

uint64_t sub_100343690(uint64_t a1, uint64_t a2)
{
  sub_1000CD96C((uint64_t)v8);
  uint64_t v4 = v8[0];
  uint64_t v5 = (char *)v8 + *(void *)(v8[0] - 24);
  if (*((_DWORD *)v5 + 36) == -1)
  {
    std::ios_base::getloc((const std::ios_base *)((char *)v8 + *(void *)(v8[0] - 24)));
    unint64_t v6 = std::locale::use_facet(&v10, &std::ctype<char>::id);
    ((void (*)(const std::locale::facet *, uint64_t))v6->__vftable[2].~facet_0)(v6, 32);
    std::locale::~locale(&v10);
    uint64_t v4 = v8[0];
  }
  *((_DWORD *)v5 + 36) = 48;
  for (*(_DWORD *)((char *)&v8[1] + *(void *)(v4 - 24)) = *(_DWORD *)((unsigned char *)&v8[1] + *(void *)(v4 - 24)) & 0xFFFFFFB5 | 8;
        a1 != a2;
        ++a1)
  {
    *(void *)((char *)&v8[3] + *(void *)(v8[0] - 24)) = 2;
    std::ostream::operator<<();
  }
  std::stringbuf::str();
  if (v9 < 0) {
    operator delete((void *)v8[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_1003438C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1003438D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::locale::~locale((std::locale *)(v9 - 72));
  sub_1000CDB10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1003438F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100343904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100343918()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100343990()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100343A08()
{
}

uint64_t sub_100343A30(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 152));
  *(void *)a1 = off_10046A518;
  uint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 80);
    uint64_t v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        uint64_t v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5) {
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      uint64_t v4 = *(void **)(a1 + 72);
    }
    *(void *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  return a1;
}

void sub_100343ACC(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 152));
  *(void *)a1 = off_10046A518;
  uint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 80);
    uint64_t v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        uint64_t v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5) {
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      uint64_t v4 = *(void **)(a1 + 72);
    }
    *(void *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));

  operator delete();
}

id sub_100343B88(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 152));
  id v2 = [WeakRetained sensorPresent];

  return v2;
}

void sub_100343BC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100343BD0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 152));
  [WeakRetained stop];
}

void sub_100343C18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100343C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  uint64_t v4 = sub_100048550();
  if ((uint64_t)(v3 - v4) >= 0) {
    uint64_t v5 = v3 - v4;
  }
  else {
    uint64_t v5 = v4 - v3;
  }
  double v6 = (double)v5 / 1000000.0;
  *(double *)(a1 + 112) = *(double *)(a1 + 112) + v6;
  ++*(void *)(a1 + 120);
  double v7 = *(double *)(a1 + 128);
  double v8 = *(double *)(a1 + 136);
  if (v7 < v6) {
    double v7 = (double)v5 / 1000000.0;
  }
  if (v6 < v8) {
    double v8 = (double)v5 / 1000000.0;
  }
  *(double *)(a1 + 12++*(void *)(result + 8) = v7;
  *(double *)(a1 + 136) = v8;
  if (qword_10047BED8 == -1)
  {
    uint64_t v9 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  dispatch_once(&qword_10047BED8, &stru_100468CF8);
  uint64_t v9 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO))
  {
LABEL_10:
    int v10 = *(_DWORD *)(a1 + 96);
    double v12 = *(double *)(a1 + 128);
    double v11 = *(double *)(a1 + 136);
    *(_DWORD *)std::string buf = 67110144;
    double v13 = *(double *)(a1 + 112);
    double v14 = (double)*(unint64_t *)(a1 + 120);
    *(_DWORD *)&uint8_t buf[4] = v10;
    __int16 v27 = 2048;
    double v28 = v11;
    __int16 v29 = 2048;
    double v30 = v12;
    __int16 v31 = 2048;
    double v32 = v13 / v14;
    __int16 v33 = 2048;
    double v34 = (double)v5 / 1000000.0;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "Sensor %d time stats - minOffset: %f maxOffset: %f avgOffset: %f currentOffset: %f", buf, 0x30u);
  }
LABEL_11:
  if ((unint64_t)v5 < 0x3B9ACA01) {
    return;
  }
  if (qword_10047BED8 == -1)
  {
    BOOL v15 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  dispatch_once(&qword_10047BED8, &stru_100468CF8);
  BOOL v15 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
  {
LABEL_14:
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "Sensor time offsets are too high, these events are going to drop and PDR will suffer", buf, 2u);
  }
LABEL_15:
  if ((unint64_t)v5 < 0xDF8475801) {
    return;
  }
  if (qword_10047BED8 == -1)
  {
    int v16 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  dispatch_once(&qword_10047BED8, &stru_100468CF8);
  int v16 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
  {
LABEL_18:
    *(_WORD *)std::string buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "Sensor time offsets are exceedingly high, this may indicate a systemic issue.  If this persists we will crash", buf, 2u);
  }
LABEL_19:
  uint64_t v17 = *(void *)(a1 + 144) + 1;
  *(void *)(a1 + 144) = v17;
  double v18 = (double)(unint64_t)v17;
  if (qword_10047BED8 != -1)
  {
    double v22 = (double)*(unint64_t *)(a1 + 120);
    dispatch_once(&qword_10047BED8, &stru_100468CF8);
    int64x2_t v19 = qword_10047BEE0;
    double v20 = v18 / v22;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
  int64x2_t v19 = qword_10047BEE0;
  double v20 = v18 / (double)*(unint64_t *)(a1 + 120);
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
  {
LABEL_21:
    int v21 = *(_DWORD *)(a1 + 96);
    *(_DWORD *)std::string buf = 67109632;
    *(_DWORD *)&uint8_t buf[4] = v21;
    __int16 v27 = 2048;
    double v28 = (double)v5 / 1000000.0;
    __int16 v29 = 2048;
    double v30 = v20;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_ERROR, "Failed time sanity check, sensor %d, time offset %f ms, failure rate %f", buf, 0x1Cu);
  }
LABEL_22:
  if (*(void *)(a1 + 120) >= 0x1F4uLL && v20 >= 0.1)
  {
    sub_1000AE4B0(__p, "");
    sub_10029A49C("We are consistently seeing a large difference between motion and system timestamps, which violates our assumptions about time and would cause our system to break", (std::string *)buf);
    sub_10016A2C4((uint64_t)__p, (uint64_t)buf, 1);
    if (SBYTE3(v30) < 0) {
      operator delete(*(void **)buf);
    }
    if (v25 < 0) {
      operator delete(__p[0]);
    }
    sub_1000D11E0((uint64_t)&v23);
  }
}

void sub_100344008(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10034404C(uint64_t a1, uint64_t a2)
{
  sub_100046D58(v7, *(unsigned int *)(a1 + 96), a2);
  uint64_t v4 = operator new(0x108uLL);
  v4[1] = 0;
  void v4[2] = 0;
  *uint64_t v4 = off_100454870;
  sub_1000458C4((uint64_t)(v4 + 4), (uint64_t)v7);
  *((_DWORD *)v4 + 32) = v8;
  *((_DWORD *)v4 + 6) = 8;
  uint64_t v9 = (char *)(v4 + 3);
  int v10 = (std::__shared_weak_count *)v4;
  sub_100045938(a1, (uint64_t)&v9);
  uint64_t v5 = v10;
  if (v10 && !atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  nullsub_9(v7);
  uint64_t v6 = *(void *)(a1 + 104) + 1;
  *(void *)(a1 + 104) = v6;
  if (__ROR8__(0x8F5C28F5C28F5C29 * v6, 2) <= 0x28F5C28F5C28F5CuLL) {
    sub_100343C2C(a1, a2);
  }
}

void sub_100344194(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000E11EC(v2 - 48);
  nullsub_9(va);
  _Unwind_Resume(a1);
}

void sub_1003441B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  std::__shared_weak_count::~__shared_weak_count(v10);
  operator delete(v12);
  nullsub_9(&a10);
  _Unwind_Resume(a1);
}

void sub_1003441D0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  nullsub_9(va);
  _Unwind_Resume(a1);
}

void sub_1003441E4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  uint64_t v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

void sub_100344228()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1003442A0()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100344318()
{
}

id *sub_100344340(id *a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *a1;
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    uint64_t v4 = *(void *)v9;
    do
    {
      uint64_t v5 = 0;
      do
      {
        if (*(void *)v9 != v4) {
          objc_enumerationMutation(v2);
        }
        uint64_t v6 = *(void **)(*((void *)&v8 + 1) + 8 * (void)v5);
        if (objc_opt_respondsToSelector()) {
          [v6 invalidate:v8];
        }
        uint64_t v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v3);
  }

  return a1;
}

void sub_100344470(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_1000A6954(a1);
  }
  _Unwind_Resume(a1);
}

void sub_10034448C()
{
}

void sub_100344608()
{
  operator delete();
}

void sub_100344634(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100344644(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)CLLocationManager);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(v3 + 24);
  *(void *)(v3 + ++*(void *)(result + 24) = v2;

  uint64_t v5 = *(void **)(*(void *)(a1 + 32) + 24);

  return [v5 setDelegate:];
}

id sub_100344698(uint64_t a1, uint64_t a2)
{
  id result = *(id *)(a2 + 32);
  *(void *)(a1 + 32) = result;
  return result;
}

void sub_1003446C4(uint64_t a1)
{
}

void sub_10034477C(uint64_t a1)
{
  if (+[CLLocationManager authorizationStatus] != kCLAuthorizationStatusAuthorizedAlways)
  {
    id v4 = [*(id *)(a1 + 32) locationManager];
    [v4 requestWhenInUseAuthorization];
  }
  id v2 = *(unsigned char **)(a1 + 32);
  if (!v2[16])
  {
    id v5 = [v2 locationManager];
    char v3 = objc_opt_respondsToSelector();

    id v2 = *(unsigned char **)(a1 + 32);
    if (v3)
    {
      id v6 = [v2 locationManager];
      [v6 setAllowsBackgroundLocationUpdates:1];

      id v2 = *(unsigned char **)(a1 + 32);
    }
  }
  id v7 = [v2 locationManager];
  [v7 startUpdatingLocation];
}

void sub_100344850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_100344864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_100344878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_10034488C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_100344914(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) locationManager];
  [v1 stopUpdatingLocation];
}

void sub_100344960(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100344A18(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 96));
  *(void *)a1 = off_10046A518;
  uint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 80);
    id v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        id v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5) {
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      id v4 = *(void **)(a1 + 72);
    }
    *(void *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  return a1;
}

void sub_100344AB4(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 96));
  *(void *)a1 = off_10046A518;
  uint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 80);
    id v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        id v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5) {
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      id v4 = *(void **)(a1 + 72);
    }
    *(void *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));

  operator delete();
}

id sub_100344B70(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  id v2 = [WeakRetained sensorPresent];

  return v2;
}

void sub_100344BA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100344BB8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  [WeakRetained start];
}

void sub_100344C00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100344C14(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  [WeakRetained stop];
}

void sub_100344C5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100344C70()
{
  return 7;
}

void sub_100344C78(uint64_t a1, void *a2)
{
  id v3 = a2;
  int64x2_t v19 = off_10045DB78;
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  v23[0] = off_10045DAB8;
  v23[1] = 0;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  v23[2] = 0;
  char v24 = 0;
  double v32 = off_10045DB58;
  int v33 = 0;
  char v34 = 0;
  char v36 = 0;
  __int16 v35 = 0;
  [v3 horizontalAccuracy];
  sub_1000A4708((uint64_t)&v19, v4);
  [v3 altitude];
  sub_1000A46F4((uint64_t)&v19, v5);
  [v3 course];
  sub_1000A471C((uint64_t)&v19, v6);
  [v3 speed];
  sub_1000A4730((uint64_t)&v19, v7);
  [v3 coordinate];
  sub_100076484((uint64_t)v23, v8);
  [v3 coordinate];
  sub_10007647C((uint64_t)v23, v9);
  v35 |= 8u;
  uint64_t v10 = sub_100042EE0();
  sub_100041B18((uint64_t)&v19, v10);
  sub_100041EB0((uint64_t)&v19, v20);
  std::to_string(__p, (int)[v3 type]);
  sub_1000A46C0((uint64_t)&v19, __p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
  long long v11 = [v3 timestamp];
  [v11 timeIntervalSince1970];
  double v13 = v12;

  sub_100041B20((uint64_t)&v19, (uint64_t)(v13 * 1000000000.0));
  sub_10035ED78((uint64_t)__p, (uint64_t)&v19);
  double v14 = operator new(0x108uLL);
  v14[1] = 0;
  void v14[2] = 0;
  void *v14 = off_100454870;
  sub_1001AB5F8(v14 + 4, __p);
  *((_DWORD *)v14 + 6) = 7;
  uint64_t v17 = (char *)(v14 + 3);
  double v18 = (std::__shared_weak_count *)v14;
  sub_100045938(a1, (uint64_t)&v17);
  BOOL v15 = v18;
  if (v18 && !atomic_fetch_add(&v18->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
    std::__shared_weak_count::__release_weak(v15);
  }
  sub_1000A45A0((uint64_t)__p);
  sub_1000A45A0((uint64_t)&v19);
}

void sub_100344EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,char a36)
{
  sub_1000E11EC((uint64_t)&a34);
  sub_1000A45A0((uint64_t)&a9);
  sub_1000A45A0((uint64_t)&a36);

  _Unwind_Resume(a1);
}

void sub_100344F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  sub_1000A45A0((uint64_t)&a36);

  _Unwind_Resume(a1);
}

void sub_100344F50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  sub_1000A45A0((uint64_t)&a36);
  _Unwind_Resume(a1);
}

void sub_100344F6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  sub_1000A45A0((uint64_t)&a36);

  _Unwind_Resume(a1);
}

void sub_100344F84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  if (a14 < 0)
  {
    operator delete(__p);
    sub_1000A45A0((uint64_t)&a39);

    _Unwind_Resume(a1);
  }
  sub_1000A45A0((uint64_t)&a39);

  _Unwind_Resume(a1);
}

void sub_10034500C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100345084()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_1003450FC()
{
}

void sub_100345154(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100345164(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 96));
  *(void *)a1 = off_10046A518;
  uint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 80);
    double v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        double v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5) {
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      double v4 = *(void **)(a1 + 72);
    }
    *(void *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  return a1;
}

void sub_100345200(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v5;
  id v8 = v6;
  if (v7)
  {
    sub_1003455CC(*(void *)(a1 + 32) + 32, v7);
  }
  else
  {
    if (qword_10047BED8 != -1) {
      dispatch_once(&qword_10047BED8, &stru_100468E40);
    }
    double v9 = (id)qword_10047BEE0;
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      id v10 = [v8 description];
      int v11 = 136315138;
      id v12 = [v10 UTF8String];
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_ERROR, "Failed to get data from altimeter: %s", (uint8_t *)&v11, 0xCu);
    }
  }
}

void sub_100345340(_Unwind_Exception *a1)
{
  id v5 = v4;

  _Unwind_Resume(a1);
}

void sub_100345370(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100345390(uint64_t a1)
{
}

void sub_10034546C(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 96));
  *(void *)a1 = off_10046A518;
  uint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 80);
    double v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        id v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5) {
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      double v4 = *(void **)(a1 + 72);
    }
    *(void *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));

  operator delete();
}

id sub_100345528(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  id v2 = [WeakRetained sensorPresent];

  return v2;
}

void sub_100345560(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100345570(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  [WeakRetained stop];
}

void sub_1003455B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1003455CC(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 timestamp];
  uint64_t v5 = sub_100045E94(v4);
  uint64_t v17 = off_10045D9B8;
  long long v18 = 0u;
  memset(v19, 0, sizeof(v19));
  [v3 timestamp];
  sub_100076484((uint64_t)&v17, v6);
  uint64_t v7 = sub_100042EE0();
  sub_100041B20((uint64_t)&v17, v7);
  sub_1001A8584((uint64_t)&v17, v5);
  id v8 = [v3 relativeAltitude];
  [v8 doubleValue];
  sub_100076F14((uint64_t)&v17, v9);

  id v10 = [v3 pressure];
  [v10 doubleValue];
  sub_100076F1C((uint64_t)&v17, v11);

  sub_10035F0F4((uint64_t)v14, (uint64_t)&v17);
  id v12 = operator new(0x108uLL);
  v12[1] = 0;
  void v12[2] = 0;
  *id v12 = off_100454870;
  sub_1001A8DF4((uint64_t)(v12 + 4), (uint64_t)v14);
  *((_DWORD *)v12 + 6) = 1;
  BOOL v15 = (char *)(v12 + 3);
  int v16 = (std::__shared_weak_count *)v12;
  sub_100045938(a1, (uint64_t)&v15);
  double v13 = v16;
  if (v16 && !atomic_fetch_add(&v16->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  nullsub_96(v14);
  nullsub_96(&v17);
}

void sub_100345760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, char a18)
{
  sub_1000E11EC((uint64_t)&a16);
  nullsub_96(&a9);
  nullsub_96(&a18);

  _Unwind_Resume(a1);
}

void sub_1003457A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  nullsub_96(va);

  _Unwind_Resume(a1);
}

void sub_1003457BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);

  nullsub_96(va);
  _Unwind_Resume(a1);
}

void sub_1003457DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003457EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  nullsub_96(va);

  _Unwind_Resume(a1);
}

void sub_100345804(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  id v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

void sub_100345848(uint64_t a1, uint64_t *a2, uint64_t *a3, size_t __sz)
{
  double v6 = a2;
  uint64_t v8 = *(void *)(a1 + 16);
  double v9 = *(char **)a1;
  if (__sz <= (v8 - *(void *)a1) >> 4)
  {
    double v13 = *(char **)(a1 + 8);
    unint64_t v14 = (v13 - v9) >> 4;
    if (v14 >= __sz)
    {
      if (a2 == a3)
      {
        int64x2_t v19 = *(char **)a1;
      }
      else
      {
        int64x2_t v19 = *(char **)a1;
        do
        {
          uint64_t v21 = *v6;
          uint64_t v20 = v6[1];
          if (v20) {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(v20 + 16), 1uLL, memory_order_relaxed);
          }
          uint64_t v22 = (std::__shared_weak_count *)*((void *)v9 + 1);
          *(void *)double v9 = v21;
          *((void *)v9 + 1) = v20;
          if (v22) {
            std::__shared_weak_count::__release_weak(v22);
          }
          v19 += 16;
          v6 += 2;
          v9 += 16;
        }
        while (v6 != a3);
        double v13 = *(char **)(a1 + 8);
      }
      while (v13 != v19)
      {
        double v32 = (std::__shared_weak_count *)*((void *)v13 - 1);
        if (v32) {
          std::__shared_weak_count::__release_weak(v32);
        }
        v13 -= 16;
      }
      *(void *)(a1 + ++*(void *)(result + 8) = v19;
    }
    else
    {
      BOOL v15 = &a2[2 * v14];
      if (v13 != v9)
      {
        do
        {
          uint64_t v17 = *v6;
          uint64_t v16 = v6[1];
          if (v16) {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(v16 + 16), 1uLL, memory_order_relaxed);
          }
          long long v18 = (std::__shared_weak_count *)*((void *)v9 + 1);
          *(void *)double v9 = v17;
          *((void *)v9 + 1) = v16;
          if (v18) {
            std::__shared_weak_count::__release_weak(v18);
          }
          v6 += 2;
          v9 += 16;
        }
        while (v6 != v15);
        double v9 = *(char **)(a1 + 8);
      }
      long long v29 = v9;
      if (v15 != a3)
      {
        long long v29 = v9;
        long long v30 = v9;
        do
        {
          uint64_t v31 = v15[1];
          *(void *)long long v30 = *v15;
          *((void *)v30 + 1) = v31;
          if (v31) {
            atomic_fetch_add_explicit((atomic_ullong *volatile)(v31 + 16), 1uLL, memory_order_relaxed);
          }
          v29 += 16;
          v15 += 2;
          v30 += 16;
        }
        while (v15 != a3);
      }
      *(void *)(a1 + ++*(void *)(result + 8) = v29;
    }
  }
  else
  {
    if (v9)
    {
      id v10 = *(char **)(a1 + 8);
      double v11 = *(char **)a1;
      if (v10 != v9)
      {
        do
        {
          id v12 = (std::__shared_weak_count *)*((void *)v10 - 1);
          if (v12) {
            std::__shared_weak_count::__release_weak(v12);
          }
          v10 -= 16;
        }
        while (v10 != v9);
        double v11 = *(char **)a1;
      }
      *(void *)(a1 + ++*(void *)(result + 8) = v9;
      operator delete(v11);
      uint64_t v8 = 0;
      *(void *)a1 = 0;
      *(void *)(a1 + ++*(void *)(result + 8) = 0;
      *(void *)(a1 + 16) = 0;
    }
    if (__sz >> 60) {
      goto LABEL_51;
    }
    uint64_t v23 = v8 >> 3;
    if (v8 >> 3 <= __sz) {
      uint64_t v23 = __sz;
    }
    BOOL v24 = (unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0;
    unint64_t v25 = 0xFFFFFFFFFFFFFFFLL;
    if (!v24) {
      unint64_t v25 = v23;
    }
    if (v25 >> 60) {
LABEL_51:
    }
      sub_1000A9108();
    uint64_t v26 = 2 * v25;
    long long v27 = operator new(16 * v25);
    *(void *)a1 = v27;
    *(void *)(a1 + ++*(void *)(result + 8) = v27;
    for (*(void *)(a1 + 16) = &v27[v26]; v6 != a3; v6 += 2)
    {
      uint64_t v28 = v6[1];
      void *v27 = *v6;
      v27[1] = v28;
      if (v28) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v28 + 16), 1uLL, memory_order_relaxed);
      }
      v27 += 2;
    }
    *(void *)(a1 + ++*(void *)(result + 8) = v27;
  }
}

void sub_100345AC4()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100345B3C()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100345BB4()
{
}

void sub_100345C78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100345DAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100345DC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100345DD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100345DE0(uint64_t a1, void *a2)
{
  id v3 = a2;
  [v3 magneticField];
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  [v3 timestamp];
  v14[0] = off_10045D918;
  uint64_t v20 = 0;
  int v15 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v16 = 0;
  int v19 = 0;
  __int16 v21 = 0;
  v14[1] = v5;
  void v14[2] = v7;
  v14[3] = v9;
  v14[4] = sub_100045E94(v10);
  [v3 timestamp];
  sub_100046A8C((uint64_t)v14, v11);
  v13.receiver = *(id *)(a1 + 32);
  v13.super_class = (Class)IOSMagnetometer;
  id v12 = [super sensorBridge];
  sub_10034404C((uint64_t)v12, (uint64_t)v14);
  nullsub_9(v14);
}

void sub_100345EC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  nullsub_9(va);

  _Unwind_Resume(a1);
}

void sub_100345EE0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100345F40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100345F5C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100345FD4()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10034604C()
{
}

void sub_1003460BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  double v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)WifiSensor;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_100346E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char *a44,uint64_t a45,uint64_t a46,void *__p,uint64_t a48,int a49,__int16 a50,char a51,char a52,uint64_t a53,void *a54,uint64_t a55,int a56,__int16 a57,char a58,char a59)
{
  if (a52 < 0)
  {
    operator delete(__p);
    if (a59 < 0)
    {
LABEL_5:
      operator delete(a54);
      if ((*(char *)(v60 - 137) & 0x80000000) == 0)
      {
LABEL_9:

        sub_1002B083C(&a44);
        _Unwind_Resume(a1);
      }
LABEL_8:
      operator delete(*(void **)(v60 - 160));
      goto LABEL_9;
    }
  }
  else if (a59 < 0)
  {
    goto LABEL_5;
  }
  if ((*(char *)(v60 - 137) & 0x80000000) == 0) {
    goto LABEL_9;
  }
  goto LABEL_8;
}

void sub_100347054(uint64_t a1, unint64_t a2)
{
  id v2 = *(unsigned char **)a1;
  if (0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) < a2)
  {
    if (a2 >= 0x2E8BA2E8BA2E8BBLL) {
      sub_1000A9108();
    }
    uint64_t v4 = *(unsigned char **)(a1 + 8);
    uint64_t v5 = 88 * a2;
    uint64_t v6 = (char *)operator new(88 * a2);
    uint64_t v7 = &v6[v5];
    uint64_t v8 = &v6[v4 - v2];
    if (v4 == v2)
    {
      *(void *)a1 = v8;
      *(void *)(a1 + ++*(void *)(result + 8) = v8;
      *(void *)(a1 + 16) = v7;
    }
    else
    {
      uint64_t v9 = 0;
      do
      {
        id v12 = &v8[v9 - 80];
        int v13 = *(_DWORD *)&v4[v9 - 88];
        int v14 = v13 >> 31;
        int v15 = &v4[v9 - 80];
        if (v13 >> 31 == v13)
        {
          *(void *)id v12 = *v15;
          int v14 = v13;
        }
        else
        {
          long long v16 = *(_OWORD *)v15;
          *(_DWORD *)&v8[v9 - 64] = *(_DWORD *)&v4[v9 - 64];
          *(_OWORD *)id v12 = v16;
        }
        *(_DWORD *)&v8[v9 - 88] = v13 ^ v14;
        uint64_t v17 = &v8[v9];
        uint64_t v18 = &v4[v9];
        *((void *)v17 - 7) = *(void *)&v4[v9 - 56];
        *(v17 - 4++*(void *)(result + 8) = 0;
        if (v4[v9 - 48])
        {
          *((_DWORD *)v17 - 11) = *((_DWORD *)v18 - 11);
          *(v17 - 4++*(void *)(result + 8) = 1;
        }
        long long v10 = *(_OWORD *)(v18 - 40);
        long long v11 = *(_OWORD *)(v18 - 24);
        *((_DWORD *)v17 - 2) = *((_DWORD *)v18 - 2);
        *(_OWORD *)(v17 - ++*(void *)(result + 24) = v11;
        *(_OWORD *)(v17 - 40) = v10;
        v9 -= 88;
      }
      while (&v4[v9] != v2);
      *(void *)a1 = &v8[v9];
      *(void *)(a1 + ++*(void *)(result + 8) = v8;
      *(void *)(a1 + 16) = v7;
      while (v4 != v2)
      {
        if (*(v4 - 48)) {
          *(v4 - 4++*(void *)(result + 8) = 0;
        }
        v4 -= 88;
      }
    }
    if (v2)
    {
      operator delete(v2);
    }
  }
}

void sub_1003471F0(void *a1, void *a2)
{
  id v3 = a2;
  LOBYTE(v62) = 0;
  if ([v3 wifiError])
  {
    HIDWORD(v62) = [v3 wifiError];
    LOBYTE(v62) = 1;
  }
  v68[0] = 0;
  std::string __p = 0;
  unint64_t v60 = 0;
  uint64_t v61 = 0;
  uint64_t v4 = [v3 settings];
  id v47 = v3;
  uint64_t v5 = [v4 channels];
  unint64_t v6 = (unint64_t)[v5 count];
  unint64_t v7 = v6;
  if (v6)
  {
    if (v6 >> 62) {
      sub_1000A9108();
    }
    uint64_t v8 = (char *)operator new(4 * v6);
    std::string __p = &v8[v60 & 0xFFFFFFFFFFFFFFFCLL];
    unint64_t v60 = (unint64_t)__p;
    uint64_t v61 = &v8[4 * v7];
  }

  long long v57 = 0u;
  long long v58 = 0u;
  long long v55 = 0u;
  long long v56 = 0u;
  uint64_t v9 = [v3 settings];
  long long v10 = [v9 channels];
  uint64_t v45 = a1;

  id v11 = [v10 countByEnumeratingWithState:&v55 objects:v67 count:16];
  if (v11)
  {
    uint64_t v46 = *(void *)v56;
    id v12 = v10;
    do
    {
      for (int i = 0; i != v11; int i = (char *)i + 1)
      {
        if (*(void *)v56 != v46) {
          objc_enumerationMutation(v10);
        }
        int v15 = sub_10005AFC4((int)[*(id *)(*((void *)&v55 + 1) + 8 * i) intValue]);
        int v16 = v15;
        uint64_t v17 = (char *)v60;
        if (v60 < (unint64_t)v61)
        {
          *(_DWORD *)unint64_t v60 = v15;
          uint64_t v14 = (uint64_t)(v17 + 4);
          goto LABEL_10;
        }
        uint64_t v18 = (char *)__p;
        int64_t v19 = v60 - (void)__p;
        uint64_t v20 = (uint64_t)(v60 - (void)__p) >> 2;
        unint64_t v21 = v20 + 1;
        if ((unint64_t)(v20 + 1) >> 62) {
          sub_1000A9108();
        }
        uint64_t v22 = v61 - (unsigned char *)__p;
        if ((v61 - (unsigned char *)__p) >> 1 > v21) {
          unint64_t v21 = v22 >> 1;
        }
        if ((unint64_t)v22 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v23 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v23 = v21;
        }
        if (v23)
        {
          if (v23 >> 62) {
            sub_1000A6A10();
          }
          BOOL v24 = (char *)operator new(4 * v23);
          unint64_t v25 = &v24[4 * v20];
          *(_DWORD *)unint64_t v25 = v16;
          uint64_t v14 = (uint64_t)(v25 + 4);
          if (v17 == v18) {
            goto LABEL_31;
          }
LABEL_25:
          unint64_t v26 = v17 - 4 - v18;
          if (v26 < 0x2C) {
            goto LABEL_47;
          }
          if ((unint64_t)(v17 - &v24[v19]) < 0x20) {
            goto LABEL_47;
          }
          uint64_t v27 = (v26 >> 2) + 1;
          uint64_t v28 = 4 * (v27 & 0x7FFFFFFFFFFFFFF8);
          long long v29 = &v17[-v28];
          v25 -= v28;
          long long v30 = &v24[4 * v20 - 16];
          uint64_t v31 = v17 - 16;
          uint64_t v32 = v27 & 0x7FFFFFFFFFFFFFF8;
          do
          {
            long long v33 = *(_OWORD *)v31;
            *((_OWORD *)v30 - 1) = *((_OWORD *)v31 - 1);
            *(_OWORD *)long long v30 = v33;
            v30 -= 32;
            v31 -= 32;
            v32 -= 8;
          }
          while (v32);
          uint64_t v17 = v29;
          if (v27 != (v27 & 0x7FFFFFFFFFFFFFF8))
          {
LABEL_47:
            do
            {
              int v34 = *((_DWORD *)v17 - 1);
              v17 -= 4;
              *((_DWORD *)v25 - 1) = v34;
              v25 -= 4;
            }
            while (v17 != v18);
          }
          goto LABEL_31;
        }
        BOOL v24 = 0;
        unint64_t v25 = (char *)(4 * v20);
        *(_DWORD *)(4 * v20) = v16;
        uint64_t v14 = 4 * v20 + 4;
        if (v17 != v18) {
          goto LABEL_25;
        }
LABEL_31:
        std::string __p = v25;
        unint64_t v60 = v14;
        uint64_t v61 = &v24[4 * v23];
        if (v18) {
          operator delete(v18);
        }
LABEL_10:
        id v3 = v47;
        unint64_t v60 = v14;
        long long v10 = v12;
      }
      id v11 = [v12 countByEnumeratingWithState:&v55 objects:v67 count:16];
    }
    while (v11);
  }

  id v54 = [v3 initiatedTimestamp];
  int v52 = 0;
  unsigned int v53 = [v3 cachedScan] ^ 1;
  __int16 v35 = [v3 settings];
  id v51 = [v35 dwell];
  char v36 = [v3 settings];
  unsigned int v50 = [v36 includeOffChannelResults] ^ 1;
  long long v37 = [v3 settings];
  [v37 dutyCycle];
  int v49 = v38;
  long long v39 = [v3 settings];
  unsigned int v40 = [v39 scanType];
  int v41 = v40;
  if (v40 >= 3)
  {
    __cxa_allocate_exception(0x40uLL);
    std::to_string(&v64, v41);
    __int16 v43 = std::string::insert(&v64, 0, "invalid scan type ");
    long long v44 = *(_OWORD *)&v43->__r_.__value_.__l.__data_;
    v65.__r_.__value_.__r.__words[2] = v43->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v65.__r_.__value_.__l.__data_ = v44;
    v43->__r_.__value_.__l.__size_ = 0;
    v43->__r_.__value_.__r.__words[2] = 0;
    v43->__r_.__value_.__r.__words[0] = 0;
    std::logic_error::logic_error(&v66, &v65);
    sub_10018E868((uint64_t)v63);
    sub_100347E78(&v66, (uint64_t)"wifi::ScanType convert(WifiScanType)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/xcode/purpleslam/IOSCommon/IOSCommon/WifiSensor.mm", 42, (uint64_t)v63);
  }
  unsigned int v48 = v40;
  LOWORD(v64.__r_.__value_.__l.__data_) = (unsigned __int16)[v3 merged];
  v65.__r_.__value_.__r.__words[0] = (std::string::size_type)[v3 scanRssiThreshold];
  LOBYTE(v66.__vftable) = [v3 targettedSsid];
  uint64_t v42 = operator new(0x98uLL);
  v42[1] = 0;
  v42[2] = 0;
  void *v42 = off_100468EB8;
  sub_100347D1C((uint64_t)v63, (uint64_t)(v42 + 3), (uint64_t *)&v54, &v62, (int *)&v53, &v52, (uint64_t)v68, (uint64_t *)&v51, (uint64_t)&__p, (int *)&v50, (float *)&v49, (int *)&v48, (__int16 *)&v64, (uint64_t *)&v65, (char *)&v66);
  void *v45 = v42 + 3;
  v45[1] = v42;

  if (__p)
  {
    unint64_t v60 = (unint64_t)__p;
    operator delete(__p);
  }
  if (v68[0] && v70 < 0) {
    operator delete(v69);
  }
}

void sub_100347804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *__p,uint64_t a34,uint64_t a35,uint64_t a36,void *a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,std::out_of_range a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a37) {
    operator delete(a37);
  }
  std::out_of_range::~out_of_range(&a52);
  if (a51 < 0) {
    operator delete(a46);
  }
  if (a45 < 0) {
    operator delete(a40);
  }

  if (__p) {
    operator delete(__p);
  }
  if (*(unsigned char *)(v74 - 136))
  {
    if (*(char *)(v74 - 105) < 0) {
      operator delete(a70);
    }
  }

  _Unwind_Resume(a1);
}

void sub_100347AF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1000BA884((uint64_t)&a9);

  _Unwind_Resume(a1);
}

void sub_100347B10(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100347C14(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  id v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

void sub_100347C58(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100468EB8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100347C78(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100468EB8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_100347CCC(uint64_t a1)
{
  id v2 = *(void **)(a1 + 88);
  if (v2)
  {
    *(void *)(a1 + 96) = v2;
    operator delete(v2);
  }
  if (*(unsigned char *)(a1 + 24))
  {
    if (*(char *)(a1 + 55) < 0) {
      operator delete(*(void **)(a1 + 32));
    }
    *(unsigned char *)(a1 + ++*(void *)(result + 24) = 0;
  }
}

void sub_100347D1C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, int *a5, int *a6, uint64_t a7, uint64_t *a8, uint64_t a9, int *a10, float *a11, int *a12, __int16 *a13, uint64_t *a14, char *a15)
{
  uint64_t v17 = *a3;
  uint64_t v18 = *a4;
  int v19 = *a5;
  int v20 = *a6;
  v24[0] = 0;
  if (*(unsigned char *)a7)
  {
    if (*(char *)(a7 + 31) < 0)
    {
      sub_1000559FC(&v25, *(void **)(a7 + 8), *(void *)(a7 + 16));
    }
    else
    {
      long long v25 = *(_OWORD *)(a7 + 8);
      uint64_t v26 = *(void *)(a7 + 24);
    }
    v24[0] = 1;
  }
  uint64_t v21 = *a8;
  *(_OWORD *)std::string __p = *(_OWORD *)a9;
  uint64_t v23 = *(void *)(a9 + 16);
  *(void *)(a9 + ++*(void *)(result + 8) = 0;
  *(void *)(a9 + 16) = 0;
  *(void *)a9 = 0;
  sub_100357A94(a2, v17, v18, v19, v20, (uint64_t)v24, v21, (uint64_t)__p, *a11, *a10, *a12, *a13, *a14, *a15);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if (v24[0])
  {
    if (SHIBYTE(v26) < 0) {
      operator delete((void *)v25);
    }
  }
}

void sub_100347E78(std::logic_error *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  std::logic_error::logic_error(&v12, a1);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  int v17 = -1;
  v12.__vftable = (std::logic_error_vtbl *)off_100469020;
  int v13 = off_100469048;
  sub_100348768((uint64_t)&v18, (uint64_t)&v12);
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  int v21 = a4;
  uint64_t v9 = *(const void **)a5;
  size_t v10 = *(void *)(a5 + 8) - *(void *)a5;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0) {
      sub_1000A9108();
    }
    std::string __p = operator new(v10);
    memcpy(__p, v9, v10);
  }
  sub_10034840C();
}

void sub_100348184(void *a1)
{
  std::out_of_range::~out_of_range(v1);
  sub_1000A6954(a1);
}

void sub_100348198(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    operator delete(__p);
    sub_1000A6954(a1);
  }
  sub_1000A6954(a1);
}

void sub_1003481C0(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(this);
}

uint64_t sub_10034824C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + ++*(void *)(result + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 4++*(void *)(result + 8) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = off_100468F80;
  *(void *)(a1 + 16) = off_100468FB8;
  *(void *)(a1 + 56) = &off_100468FF0;
  return a1;
}

void sub_10034836C(_Unwind_Exception *a1)
{
  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_100348380(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(this);
}

void sub_10034840C()
{
}

void sub_1003486A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1000CD2E0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_1003486BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_1000CD2E0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_1003486D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100348768(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  uint64_t v4 = std::logic_error::logic_error((std::logic_error *)a1, (const std::logic_error *)a2);
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + ++*(void *)(result + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 4++*(void *)(result + 8) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_100468F80;
  *(void *)(a1 + 16) = off_100468FB8;
  *(void *)(a1 + 56) = &off_100468FF0;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_100348894(_Unwind_Exception *a1)
{
  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_1003488A8(_Unwind_Exception *a1)
{
  sub_1003488BC(v1);
  _Unwind_Resume(a1);
}

void sub_1003488BC(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(this);
}

void sub_100348948(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(this);

  operator delete();
}

void sub_1003489E8()
{
}

void sub_100348A44()
{
}

void sub_100348A68(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x40uLL);
  sub_10034824C((uint64_t)exception, a1);
}

void sub_100348AB0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100348AC4(std::out_of_range *a1)
{
  a1->__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(a1 - 1);
}

void sub_100348B4C(std::out_of_range *a1)
{
  a1->__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(a1 - 1);

  operator delete();
}

void sub_100348BE8()
{
}

void sub_100348C58()
{
}

void sub_100348C7C(void *a1)
{
  uint64_t v1 = (uint64_t)a1 + *(void *)(*a1 - 32);
  exception = __cxa_allocate_exception(0x40uLL);
  sub_10034824C((uint64_t)exception, v1);
}

void sub_100348CD8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100348CEC(void *a1)
{
  uint64_t v1 = (std::out_of_range *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(v1);
}

void sub_100348D8C(void *a1)
{
  uint64_t v1 = (std::out_of_range *)((char *)a1 + *(void *)(*a1 - 40));
  v1[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = v1[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    v1[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(v1);

  operator delete();
}

void sub_100348E40(std::out_of_range *this)
{
  this[1].__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = this[1].__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    this[1].__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(this);

  operator delete();
}

void sub_100348EE0(std::out_of_range *a1)
{
  a1->__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }

  std::out_of_range::~out_of_range(a1 - 1);
}

void sub_100348F68(std::out_of_range *a1)
{
  a1->__vftable = (std::out_of_range_vtbl *)&off_100451DC0;
  imp = a1->__imp_.__imp_;
  if (imp && (*(unsigned int (**)(const char *))(*(void *)imp + 32))(imp)) {
    a1->__imp_.__imp_ = 0;
  }
  std::out_of_range::~out_of_range(a1 - 1);

  operator delete();
}

uint64_t sub_100349004(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = &off_100451ED0;
  uint64_t v4 = std::logic_error::logic_error((std::logic_error *)a1, (const std::logic_error *)a2);
  uint64_t v5 = (uint64_t)&v4[1];
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + ++*(void *)(result + 24) = v6;
  if (v6) {
    (*(void (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 4++*(void *)(result + 8) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)a1 = off_100468F80;
  *(void *)(a1 + 16) = off_100468FB8;
  *(void *)(a1 + 56) = &off_100468FF0;
  sub_1000A6FDC(v5, a2 + 16);
  return a1;
}

void sub_100349130(_Unwind_Exception *a1)
{
  std::out_of_range::~out_of_range(v1);
  _Unwind_Resume(a1);
}

void sub_100349144(_Unwind_Exception *a1)
{
  sub_1003488BC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100349158(uint64_t a1)
{
  return a1;
}

void sub_100349184(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 8));

  operator delete();
}

uint64_t sub_1003491D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3 == v2)
  {
    uint64_t v4 = *(void **)a1;
    if (*(void *)a1) {
LABEL_3:
    }
      operator delete(v4);
  }
  else
  {
    do
    {
      if (*(unsigned char *)(v3 - 48)) {
        *(unsigned char *)(v3 - 4++*(void *)(result + 8) = 0;
      }
      v3 -= 88;
    }
    while (v3 != v2);
    *(void *)(a1 + 16) = v2;
    uint64_t v4 = *(void **)a1;
    if (*(void *)a1) {
      goto LABEL_3;
    }
  }
  return a1;
}

uint64_t sub_100349238(void **a1, int *a2, int *a3, int *a4, int *a5, char *a6, char *a7, int *a8, double *a9, uint64_t *a10)
{
  uint64_t v11 = 0x2E8BA2E8BA2E8BA3 * (((unsigned char *)a1[1] - (unsigned char *)*a1) >> 3);
  unint64_t v12 = v11 + 1;
  if ((unint64_t)(v11 + 1) > 0x2E8BA2E8BA2E8BALL) {
    sub_1000A9108();
  }
  if (0x5D1745D1745D1746 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3) > v12) {
    unint64_t v12 = 0x5D1745D1745D1746 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3);
  }
  if ((unint64_t)(0x2E8BA2E8BA2E8BA3 * (((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3)) >= 0x1745D1745D1745DLL) {
    unint64_t v20 = 0x2E8BA2E8BA2E8BALL;
  }
  else {
    unint64_t v20 = v12;
  }
  if (v20)
  {
    if (v20 > 0x2E8BA2E8BA2E8BALL) {
      sub_1000A6A10();
    }
    int v21 = (char *)operator new(88 * v20);
  }
  else
  {
    int v21 = 0;
  }
  uint64_t v22 = (uint64_t)&v21[88 * v11];
  uint64_t v42 = v22;
  uint64_t v43 = v22;
  long long v44 = &v21[88 * v20];
  int v25 = *a2;
  BOOL v24 = a2 + 2;
  int v23 = v25;
  int v26 = v25 >> 31;
  if (v25 >> 31 == v25)
  {
    *(void *)&long long v48 = *(void *)v24;
    int v26 = v23;
  }
  else
  {
    long long v48 = *(_OWORD *)v24;
    int v49 = v24[4];
  }
  int v47 = v26 ^ v23;
  int v46 = *a4;
  v45[0] = 1;
  sub_10036C0A0(v22, &v47, (uint64_t)v45, *a5, *a6, *a7, *a8, *a10, (double)*a3, *a9);
  uint64_t v27 = v42;
  long long v29 = (char *)*a1;
  uint64_t v28 = (char *)a1[1];
  if (v28 == *a1)
  {
    unsigned int v40 = (char *)a1[1];
  }
  else
  {
    uint64_t v30 = 0;
    do
    {
      long long v33 = (void *)(v42 + v30 - 80);
      int v34 = *(_DWORD *)&v28[v30 - 88];
      __int16 v35 = &v28[v30 - 80];
      if (v34 == v34 >> 31)
      {
        *long long v33 = *(void *)v35;
        int v36 = v34;
      }
      else
      {
        long long v37 = *(_OWORD *)v35;
        *(_DWORD *)(v42 + v30 - 64) = *(_DWORD *)&v28[v30 - 64];
        *(_OWORD *)long long v33 = v37;
        int v36 = *(_DWORD *)&v28[v30 - 88];
        int v34 = v36 >> 31;
      }
      *(_DWORD *)(v42 + v30 - 8++*(void *)(result + 8) = v36 ^ v34;
      uint64_t v38 = v42 + v30;
      long long v39 = &v28[v30];
      *(void *)(v38 - 56) = *(void *)&v28[v30 - 56];
      *(unsigned char *)(v38 - 4++*(void *)(result + 8) = 0;
      if (v28[v30 - 48])
      {
        *(_DWORD *)(v38 - 44) = *((_DWORD *)v39 - 11);
        *(unsigned char *)(v38 - 4++*(void *)(result + 8) = 1;
      }
      long long v31 = *(_OWORD *)(v39 - 40);
      long long v32 = *(_OWORD *)(v39 - 24);
      *(_DWORD *)(v38 - ++*(void *)(result + 8) = *((_DWORD *)v39 - 2);
      *(_OWORD *)(v38 - ++*(void *)(result + 24) = v32;
      *(_OWORD *)(v38 - 40) = v31;
      v30 -= 88;
    }
    while (&v28[v30] != v29);
    unsigned int v40 = (char *)*a1;
    uint64_t v28 = (char *)a1[1];
    uint64_t v27 = v42 + v30;
  }
  *a1 = (void *)v27;
  a1[1] = (void *)(v43 + 88);
  a1[2] = v44;
  while (v28 != v40)
  {
    if (*(v28 - 48)) {
      *(v28 - 4++*(void *)(result + 8) = 0;
    }
    v28 -= 88;
  }
  if (v40) {
    operator delete(v40);
  }
  return v43 + 88;
}

void sub_10034950C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1003491D0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_100349520()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100349598()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100349610()
{
}

void sub_100349668(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100349880(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100349F14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, char a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10034A040(uint64_t a1)
{
  uint64_t v2 = *(void (****)(void))(a1 + 8);
  if (v2)
  {
    uint64_t v3 = *(void (****)(void))(a1 + 16);
    uint64_t v4 = *(void **)(a1 + 8);
    if (v3 != v2)
    {
      uint64_t v5 = v3 - 11;
      uint64_t v6 = v3 - 11;
      long long v7 = v3 - 11;
      do
      {
        uint64_t v8 = *v7;
        v7 -= 11;
        (*v8)(v6);
        v5 -= 11;
        BOOL v9 = v6 == v2;
        uint64_t v6 = v7;
      }
      while (!v9);
      uint64_t v4 = *(void **)(a1 + 8);
    }
    *(void *)(a1 + 16) = v2;
    operator delete(v4);
  }
  return a1;
}

void **sub_10034A0DC(void **a1)
{
  uint64_t v2 = (char *)*a1;
  if (*a1)
  {
    uint64_t v3 = (char *)a1[1];
    uint64_t v4 = *a1;
    if (v3 != v2)
    {
      uint64_t v5 = v3 - 88;
      uint64_t v6 = v3 - 88;
      long long v7 = v3 - 88;
      do
      {
        uint64_t v8 = *(void (***)(char *))v7;
        v7 -= 88;
        (*v8)(v6);
        v5 -= 88;
        BOOL v9 = v6 == v2;
        uint64_t v6 = v7;
      }
      while (!v9);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_10034A3BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10034A4A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10034A524(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  uint64_t v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

uint64_t sub_10034A568(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 96));
  *(void *)a1 = off_10046A518;
  uint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 80);
    uint64_t v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        uint64_t v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5) {
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      uint64_t v4 = *(void **)(a1 + 72);
    }
    *(void *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  return a1;
}

void sub_10034A604(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 96));
  *(void *)a1 = off_10046A518;
  uint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 80);
    uint64_t v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        uint64_t v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5) {
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      uint64_t v4 = *(void **)(a1 + 72);
    }
    *(void *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));

  operator delete();
}

id sub_10034A6C0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  id v2 = [WeakRetained sensorPresent];

  return v2;
}

void sub_10034A6F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10034A708(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  [WeakRetained start];
}

void sub_10034A750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10034A764(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  [WeakRetained stop];
}

void sub_10034A7AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10034A7C0(void *a1, uint64_t a2)
{
  uint64_t v3 = 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(a1[1] - *a1) >> 3);
  unint64_t v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) > 0x2E8BA2E8BA2E8BALL) {
    sub_1000A9108();
  }
  if (0x5D1745D1745D1746 * ((uint64_t)(a1[2] - *a1) >> 3) > v4) {
    unint64_t v4 = 0x5D1745D1745D1746 * ((uint64_t)(a1[2] - *a1) >> 3);
  }
  if ((unint64_t)(0x2E8BA2E8BA2E8BA3 * ((uint64_t)(a1[2] - *a1) >> 3)) >= 0x1745D1745D1745DLL) {
    unint64_t v6 = 0x2E8BA2E8BA2E8BALL;
  }
  else {
    unint64_t v6 = v4;
  }
  if (v6)
  {
    if (v6 > 0x2E8BA2E8BA2E8BALL) {
      sub_1000A6A10();
    }
    long long v7 = (char *)operator new(88 * v6);
  }
  else
  {
    long long v7 = 0;
  }
  uint64_t v19 = (uint64_t)&v7[88 * v3];
  *((void *)&v20 + 1) = &v7[88 * v6];
  sub_10011D458(v19, a2);
  uint64_t v8 = 0;
  size_t v10 = (char *)*a1;
  for (uint64_t i = a1[1]; (char *)(i + v8) != v10; sub_10011D458(v8 + v19, v8 + i))
    v8 -= 88;
  unint64_t v12 = (char *)*a1;
  uint64_t v11 = (char *)a1[1];
  *a1 = v19 + v8;
  *(void *)&long long v20 = v19 + 88;
  *(_OWORD *)(a1 + 1) = v20;
  if (v11 != v12)
  {
    int v13 = v11 - 88;
    uint64_t v14 = v11 - 88;
    uint64_t v15 = v11 - 88;
    do
    {
      uint64_t v16 = *(void (***)(char *))v15;
      v15 -= 88;
      (*v16)(v14);
      v13 -= 88;
      BOOL v17 = v14 == v12;
      uint64_t v14 = v15;
    }
    while (!v17);
  }
  if (v12) {
    operator delete(v12);
  }
  return v19 + 88;
}

void sub_10034A96C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_10034A9AC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10034A9AC(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    unint64_t v4 = *(void (***)(void))(i - 88);
    *(void *)(a1 + 16) = i - 88;
    (*v4)();
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_10034AA1C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v5 = (void *)result;
    if (a4 >= 0x2E8BA2E8BA2E8BBLL) {
      sub_1000A9108();
    }
    id result = (uint64_t)operator new(88 * a4);
    uint64_t v8 = result;
    *uint64_t v5 = result;
    v5[1] = result;
    void v5[2] = result + 88 * a4;
    if (a2 != a3)
    {
      uint64_t v9 = 0;
      do
      {
        id result = sub_10011D458(v8 + v9, a2 + v9);
        v9 += 88;
      }
      while (a2 + v9 != a3);
      v8 += v9;
    }
    v5[1] = v8;
  }
  return result;
}

void sub_10034AAE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_10034AAF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  if (v11) {
    sub_1003A75A4((uint64_t)v10 + v11, v10);
  }
  *(void *)(v9 + ++*(void *)(result + 8) = v10;
  sub_10034AB1C(&a9);
  _Unwind_Resume(a1);
}

void ***sub_10034AB1C(void ***result)
{
  os_log_t v1 = result;
  if (!*((unsigned char *)result + 8))
  {
    id v2 = *result;
    uint64_t v3 = (char *)**result;
    if (v3)
    {
      unint64_t v4 = (char *)v2[1];
      uint64_t v5 = **result;
      if (v4 != v3)
      {
        unint64_t v6 = v4 - 88;
        long long v7 = v4 - 88;
        uint64_t v8 = v4 - 88;
        do
        {
          uint64_t v9 = *(void (***)(char *))v8;
          v8 -= 88;
          (*v9)(v7);
          v6 -= 88;
          BOOL v10 = v7 == v3;
          long long v7 = v8;
        }
        while (!v10);
        uint64_t v5 = **v1;
      }
      v2[1] = v3;
      operator delete(v5);
      return v1;
    }
  }
  return result;
}

void sub_10034ABE0()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10034AC58()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10034ACD0()
{
}

void sub_10034ACF8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    long long v7 = [v5 endDate];
    uint64_t v8 = [v5 startDate];
    [v7 timeIntervalSinceDate:v8];
    double v10 = v9;

    uint64_t v46 = 0;
    __int16 v47 = 0;
    uint64_t v44 = 0;
    *(void *)&long long buf = off_10045D998;
    unsigned int v45 = 0;
    long long v48 = 0u;
    long long v49 = 0u;
    v50 &= 0x80u;
    *((void *)&buf + 1) = sub_100042EE0();
    uint64_t v11 = [v5 endDate];
    [v11 timeIntervalSince1970];
    sub_1001A76F4((uint64_t)&buf, v12);

    uint64_t v44 = (uint64_t)(v10 * 1000000000.0);
    uint64_t v13 = [v5 numberOfSteps];
    unsigned int v45 = [(id)v13 intValue];

    uint64_t v14 = [v5 distance];
    LOBYTE(v13) = v14 == 0;

    if ((v13 & 1) == 0)
    {
      uint64_t v15 = [v5 distance];
      [v15 doubleValue];
      sub_1001A76B8((uint64_t)&buf, v16);
    }
    BOOL v17 = [v5 floorsAscended];
    BOOL v18 = v17 == 0;

    if (!v18)
    {
      uint64_t v19 = [v5 floorsAscended];
      sub_1001A76CC((uint64_t)&buf, (char)[v19 charValue]);
    }
    long long v20 = [v5 floorsDescended];
    BOOL v21 = v20 == 0;

    if (!v21)
    {
      uint64_t v22 = [v5 floorsDescended];
      sub_1001A76E0((uint64_t)&buf, (char)[v22 charValue]);
    }
    int v23 = [v5 firstStepTime];
    BOOL v24 = v23 == 0;

    if (!v24)
    {
      int v25 = [v5 firstStepTime];
      [v25 timeIntervalSince1970];
      sub_1001A7708((uint64_t)&buf, v26);
    }
    uint64_t v27 = [v5 activeTime];
    BOOL v28 = v27 == 0;

    if (!v28)
    {
      long long v29 = [v5 activeTime];
      [v29 doubleValue];
      sub_1001A771C((uint64_t)&buf, v30);
    }
    long long v31 = [v5 currentPace];
    BOOL v32 = v31 == 0;

    if (!v32)
    {
      long long v33 = [v5 currentPace];
      [v33 doubleValue];
      sub_1001A7730((uint64_t)&buf, v34);
    }
    uint64_t v35 = *(void *)(*(void *)(a1 + 32) + 16);
    sub_10035F0AC((uint64_t)v40, (uint64_t)&buf);
    int v36 = operator new(0x108uLL);
    v36[1] = 0;
    v36[2] = 0;
    void *v36 = off_100454870;
    sub_1001A84CC((uint64_t)(v36 + 4), (uint64_t)v40);
    *((_DWORD *)v36 + 6) = 10;
    int v41 = (char *)(v36 + 3);
    uint64_t v42 = (std::__shared_weak_count *)v36;
    sub_100045938(v35, (uint64_t)&v41);
    long long v37 = v42;
    if (v42 && !atomic_fetch_add(&v42->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
      std::__shared_weak_count::__release_weak(v37);
    }
    nullsub_95(v40);
    nullsub_95(&buf);
  }
  else
  {
    if (qword_10047BED8 != -1) {
      dispatch_once(&qword_10047BED8, &stru_100469150);
    }
    uint64_t v38 = (id)qword_10047BEE0;
    if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
    {
      id v39 = [v6 description];
      LODWORD(buf) = 136315138;
      *(void *)((char *)&buf + 4) = [v39 UTF8String];
      _os_log_impl((void *)&_mh_execute_header, v38, OS_LOG_TYPE_ERROR, "Pedometry update failed.  Got error %s", (uint8_t *)&buf, 0xCu);
    }
  }
}

void sub_10034B130(_Unwind_Exception *a1)
{
  id v5 = v3;

  _Unwind_Resume(a1);
}

void sub_10034B29C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  id v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

uint64_t sub_10034B2E0(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 96));
  *(void *)a1 = off_10046A518;
  uint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 80);
    unint64_t v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        id v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5) {
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      unint64_t v4 = *(void **)(a1 + 72);
    }
    *(void *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  return a1;
}

void sub_10034B37C(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 96));
  *(void *)a1 = off_10046A518;
  uint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 80);
    unint64_t v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        id v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5) {
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      unint64_t v4 = *(void **)(a1 + 72);
    }
    *(void *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));

  operator delete();
}

id sub_10034B438(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  id v2 = [WeakRetained sensorPresent];

  return v2;
}

void sub_10034B470(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10034B480(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  [WeakRetained stop];
}

void sub_10034B4C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10034B4DC()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10034B554()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10034B5CC()
{
}

void sub_10034B5F4(uint64_t a1@<X0>, unsigned int a2@<W1>, std::string *a3@<X8>)
{
  id v5 = sub_10034B764(a2);
  size_t v6 = strlen(v5);
  if (v6 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  long long v7 = (void *)v6;
  if (v6 >= 0x17)
  {
    uint64_t v9 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17) {
      uint64_t v9 = v6 | 7;
    }
    uint64_t v10 = v9 + 1;
    uint64_t v8 = (void **)operator new(v9 + 1);
    __dst[1] = v7;
    unint64_t v12 = v10 | 0x8000000000000000;
    __dst[0] = v8;
LABEL_9:
    memmove(v8, v5, (size_t)v7);
    *((unsigned char *)v7 + (void)v++*(void *)(result + 8) = 0;
    if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
  HIBYTE(v12) = v6;
  uint64_t v8 = __dst;
  if (v6) {
    goto LABEL_9;
  }
  LOBYTE(__dst[0]) = 0;
  if ((*(char *)(a1 + 23) & 0x80000000) == 0)
  {
LABEL_5:
    *(_OWORD *)&a3->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    a3->__r_.__value_.__r.__words[2] = *(void *)(a1 + 16);
    goto LABEL_11;
  }
LABEL_10:
  sub_1000559FC(a3, *(void **)a1, *(void *)(a1 + 8));
LABEL_11:
  sub_1000512AC(a3, (uint64_t)__dst);
  if (SHIBYTE(v12) < 0) {
    operator delete(__dst[0]);
  }
}

void sub_10034B718(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if ((a15 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

char *sub_10034B764(unsigned int a1)
{
  unsigned int v2 = a1;
  if (a1 >= 8)
  {
    sub_1000AE4B0(v4, "");
    sub_100295088("Invalid dir type ", &v6);
    sub_1002A3880((int *)&v2, &v7);
    sub_10016A2C4((uint64_t)v4, (uint64_t)&v6, 2);
    if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v7.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v6.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_5:
        if ((v5 & 0x80000000) == 0) {
          goto LABEL_6;
        }
LABEL_9:
        operator delete(v4[0]);
LABEL_6:
        sub_1000D11E0((uint64_t)&__p);
      }
    }
    else if ((SHIBYTE(v6.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_5;
    }
    operator delete(v6.__r_.__value_.__l.__data_);
    if ((v5 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_9;
  }
  return (&off_10047CF88)[a1];
}

void sub_10034B874(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10034B8D0(uint64_t a1, long long *a2, int a3, unsigned __int8 *a4, int a5)
{
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 3321888768;
  v19[2] = sub_10034E7CC;
  v19[3] = &unk_1004692E0;
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000559FC(&v12, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v12 = *a2;
    uint64_t v13 = *((void *)a2 + 2);
  }
  int v14 = a3;
  char v15 = 0;
  int v9 = *a4;
  if (*a4)
  {
    int v16 = *((_DWORD *)a4 + 2);
    if ((char)a4[39] < 0)
    {
      sub_1000559FC(&__p, *((void **)a4 + 2), *((void *)a4 + 3));
    }
    else
    {
      long long __p = *((_OWORD *)a4 + 1);
      uint64_t v18 = *((void *)a4 + 4);
    }
    int v9 = 1;
    char v15 = 1;
  }
  v19[4] = a1;
  if (SHIBYTE(v13) < 0)
  {
    sub_1000559FC(&v20, (void *)v12, *((unint64_t *)&v12 + 1));
    int v22 = v14;
    char v23 = 0;
    if (!v15) {
      goto LABEL_17;
    }
  }
  else
  {
    long long v20 = v12;
    uint64_t v21 = v13;
    int v22 = v14;
    char v23 = 0;
    if (!v9) {
      goto LABEL_17;
    }
  }
  int v24 = v16;
  if (SHIBYTE(v18) < 0)
  {
    sub_1000559FC(&v25, (void *)__p, *((unint64_t *)&__p + 1));
  }
  else
  {
    long long v25 = __p;
    uint64_t v26 = v18;
  }
  char v23 = 1;
LABEL_17:
  uint64_t v10 = objc_retainBlock(v19);
  if (v15)
  {
    if (SHIBYTE(v18) < 0) {
      operator delete((void *)__p);
    }
    char v15 = 0;
  }
  if ((SHIBYTE(v13) & 0x80000000) == 0)
  {
    if (a5) {
      goto LABEL_23;
    }
LABEL_27:
    dispatch_sync(*(dispatch_queue_t *)(a1 + 544), v10);
    goto LABEL_29;
  }
  operator delete((void *)v12);
  if (!a5) {
    goto LABEL_27;
  }
LABEL_23:
  if (a5 == 1)
  {
    ((void (*)(void *))v10[2])(v10);
  }
  else if (a5 == 2)
  {
    dispatch_async(*(dispatch_queue_t *)(a1 + 544), v10);
  }
LABEL_29:

  if (v23)
  {
    if (SHIBYTE(v26) < 0) {
      operator delete((void *)v25);
    }
    char v23 = 0;
  }
  if (SHIBYTE(v21) < 0) {
    operator delete((void *)v20);
  }
}

void sub_10034BB60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a33 < 0)
  {
    operator delete(__p);
    sub_10034E954((uint64_t)&a10);
    _Unwind_Resume(a1);
  }
  sub_10034E954((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_10034BD40(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v6 = a2;
  id v7 = a3;
  id v24 = a4;
  uint64_t v8 = [v7 originalRequest];
  int v9 = +[NSURLProtocol propertyForKey:@"CLSurveyUploadRunId" inRequest:v8];

  if (v9)
  {
    [v9 ps_STLString];
  }
  else
  {
    v37[0] = 0;
    v37[1] = 0;
    uint64_t v38 = 0;
  }
  uint64_t v10 = [v7 originalRequest];
  uint64_t v11 = +[NSURLProtocol propertyForKey:@"CLSurveyUploadPath" inRequest:v10];

  long long v12 = [v11 path];
  uint64_t v13 = v12;
  if (v12) {
    [v12 ps_STLString];
  }
  else {
    memset(buf, 0, sizeof(buf));
  }
  *(_OWORD *)uint64_t v35 = *(_OWORD *)buf;
  uint64_t v36 = *(void *)&buf[16];
  memset(buf, 0, sizeof(buf));

  if (qword_10047BED8 != -1) {
    dispatch_once(&qword_10047BED8, &stru_100469320);
  }
  int v14 = (id)qword_10047BEE0;
  if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
  {
    char v15 = v9;
    id v16 = v6;
    if (v38 >= 0) {
      BOOL v17 = v37;
    }
    else {
      BOOL v17 = (void **)v37[0];
    }
    id v18 = [v7 countOfBytesSent];
    id v19 = [v7 countOfBytesExpectedToSend];
    long long v20 = v35;
    if (v36 < 0) {
      long long v20 = (void **)v35[0];
    }
    *(_DWORD *)long long buf = 136315906;
    *(void *)&uint8_t buf[4] = v17;
    *(_WORD *)&buf[12] = 2048;
    *(void *)&buf[14] = v18;
    *(_WORD *)&buf[22] = 2048;
    id v40 = v19;
    __int16 v41 = 2080;
    uint64_t v42 = v20;
    _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_INFO, "Received onComplete notification for %s which uploaded %llu of %llu - %s", buf, 0x2Au);
    id v6 = v16;
    int v9 = v15;
  }

  sub_100056B28((const char *)v35, 0, (int *)buf);
  if (*(_DWORD *)buf != 2)
  {
    if (qword_10047BED8 == -1)
    {
      int v22 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        goto LABEL_31;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100469320);
      int v22 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        goto LABEL_31;
      }
    }
    *(_WORD *)long long buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_INFO, "Doesn't exist anymore, ignoring completion notification", buf, 2u);
    goto LABEL_31;
  }
  [v6 flushWithCompletionHandler:&stru_100469288];
  uint64_t v21 = *(NSObject **)(a1 + 768);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_10034D678;
  block[3] = &unk_1004692B0;
  uint64_t v30 = a1;
  id v26 = v7;
  id v27 = v24;
  id v28 = v11;
  if (SHIBYTE(v36) < 0)
  {
    sub_1000559FC(&v31, v35[0], (unint64_t)v35[1]);
  }
  else
  {
    long long v31 = *(_OWORD *)v35;
    uint64_t v32 = v36;
  }
  id v29 = v6;
  if (SHIBYTE(v38) < 0)
  {
    sub_1000559FC(&__p, v37[0], (unint64_t)v37[1]);
  }
  else
  {
    long long __p = *(_OWORD *)v37;
    uint64_t v34 = v38;
  }
  dispatch_async(v21, block);
  if (SHIBYTE(v34) < 0) {
    operator delete((void *)__p);
  }

  if (SHIBYTE(v32) < 0) {
    operator delete((void *)v31);
  }

LABEL_31:
  if (SHIBYTE(v36) < 0) {
    operator delete(v35[0]);
  }

  if (SHIBYTE(v38) < 0) {
    operator delete(v37[0]);
  }
}

void sub_10034C188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, void *a18, void *a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  if (a26 < 0) {
    operator delete(__p);
  }

  if (a35 < 0) {
    operator delete(a30);
  }

  if (a41 < 0) {
    operator delete(a36);
  }

  _Unwind_Resume(a1);
}

void sub_10034C338(std::string *a1, unsigned char *a2)
{
  sub_1000B2B28(a2, &v17);
  int v4 = sub_1000E1AC0((unint64_t)&v17, ".zip");
  int v5 = v4;
  if ((SHIBYTE(v17.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (v4) {
      goto LABEL_3;
    }
LABEL_13:
    sub_1000B2A60(a2, (unint64_t)&v17);
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_1000559FC(a1, v17.__r_.__value_.__l.__data_, v17.__r_.__value_.__l.__size_);
LABEL_25:
      if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v10 = (void *)v17.__r_.__value_.__r.__words[0];
LABEL_37:
        operator delete(v10);
        return;
      }
      return;
    }
LABEL_14:
    *a1 = v17;
    return;
  }
  operator delete(v17.__r_.__value_.__l.__data_);
  if (!v5) {
    goto LABEL_13;
  }
LABEL_3:
  sub_1000B2B28(a2, &v17);
  int v6 = sub_1000E1AC0((unint64_t)&v17, ".piece");
  int v7 = v6;
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v17.__r_.__value_.__l.__data_);
    if (v7)
    {
LABEL_5:
      sub_1000B2B28(a2, &v17);
      int v8 = sub_1000E1AC0((unint64_t)&v17, ".replica");
      int v9 = v8;
      if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v17.__r_.__value_.__l.__data_);
        if (v9)
        {
LABEL_7:
          sub_1000B2B28(a2, __p);
          if (sub_1000E1AC0((unint64_t)__p, ""))
          {
            sub_1000AE4B0(v15, "");
            sub_100157138("Only know how to deal with the path being the runid from here", &v17);
            sub_10016A2C4((uint64_t)v15, (uint64_t)&v17, 1);
            if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v17.__r_.__value_.__l.__data_);
            }
            if (v16 < 0) {
              operator delete(v15[0]);
            }
            sub_1000D11E0((uint64_t)v13);
          }
          if (v12 < 0) {
            operator delete(__p[0]);
          }
          sub_1000B2A60(a2, (unint64_t)&v17);
          if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
          {
            sub_1000559FC(a1, v17.__r_.__value_.__l.__data_, v17.__r_.__value_.__l.__size_);
            goto LABEL_25;
          }
          goto LABEL_14;
        }
      }
      else if (v8)
      {
        goto LABEL_7;
      }
      sub_1000B2A60(a2, (unint64_t)__p);
      sub_1000B2A60(__p, (unint64_t)v13);
      sub_1000B2A60(v13, (unint64_t)v15);
      sub_1000B2A60(v15, (unint64_t)&v17);
      if ((SHIBYTE(v17.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        *a1 = v17;
        if (v16 < 0) {
          goto LABEL_21;
        }
LABEL_33:
        if (v14 < 0)
        {
LABEL_22:
          operator delete(v13[0]);
          if ((v12 & 0x80000000) == 0) {
            return;
          }
          goto LABEL_36;
        }
LABEL_34:
        if ((v12 & 0x80000000) == 0) {
          return;
        }
LABEL_36:
        uint64_t v10 = __p[0];
        goto LABEL_37;
      }
      sub_1000559FC(a1, v17.__r_.__value_.__l.__data_, v17.__r_.__value_.__l.__size_);
      if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v17.__r_.__value_.__l.__data_);
        if ((v16 & 0x80000000) == 0) {
          goto LABEL_33;
        }
      }
      else if ((v16 & 0x80000000) == 0)
      {
        goto LABEL_33;
      }
LABEL_21:
      operator delete(v15[0]);
      if (v14 < 0) {
        goto LABEL_22;
      }
      goto LABEL_34;
    }
  }
  else if (v6)
  {
    goto LABEL_5;
  }
  sub_1000B2A60(a2, (unint64_t)v15);
  sub_1000B2A60(v15, (unint64_t)&v17);
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_1000559FC(a1, v17.__r_.__value_.__l.__data_, v17.__r_.__value_.__l.__size_);
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v17.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *a1 = v17;
  }
  if (v16 < 0)
  {
    uint64_t v10 = v15[0];
    goto LABEL_37;
  }
}

void sub_10034C694(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0)
  {
    operator delete(a10);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10034C7B0(uint64_t a1, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000559FC(&__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long __dst = *a2;
    uint64_t v13 = *((void *)a2 + 2);
  }
  sub_10034C338(&v14, &__dst);
  if (SHIBYTE(v13) < 0) {
    operator delete((void *)__dst);
  }
  int v4 = *(NSObject **)(a1 + 800);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_10034CA4C;
  block[3] = &unk_1004691D0;
  void block[4] = a1;
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    sub_1000559FC(&v11, v14.__r_.__value_.__l.__data_, v14.__r_.__value_.__l.__size_);
  }
  else {
    std::string v11 = v14;
  }
  dispatch_sync(v4, block);
  int v5 = *(NSObject **)(a1 + 768);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3321888768;
  void v6[2] = sub_10034CAA8;
  v6[3] = &unk_100469200;
  v6[4] = a1;
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000559FC(&v7, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v7 = *a2;
    uint64_t v8 = *((void *)a2 + 2);
  }
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    sub_1000559FC(&__p, v14.__r_.__value_.__l.__data_, v14.__r_.__value_.__l.__size_);
  }
  else {
    std::string __p = v14;
  }
  dispatch_async(v5, v6);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v8) & 0x80000000) == 0)
    {
LABEL_17:
      if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_18;
      }
      goto LABEL_22;
    }
  }
  else if ((SHIBYTE(v8) & 0x80000000) == 0)
  {
    goto LABEL_17;
  }
  operator delete((void *)v7);
  if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_18:
    if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_23:
    operator delete(v14.__r_.__value_.__l.__data_);
    return;
  }
LABEL_22:
  operator delete(v11.__r_.__value_.__l.__data_);
  if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_23;
  }
}

void sub_10034C9C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (a20 < 0)
  {
    operator delete(__p);
    if ((a34 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v34 - 49) & 0x80000000) == 0) {
LABEL_8:
      }
        _Unwind_Resume(exception_object);
LABEL_7:
      operator delete(*(void **)(v34 - 72));
      goto LABEL_8;
    }
  }
  else if ((a34 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a29);
  if ((*(char *)(v34 - 49) & 0x80000000) == 0) {
    goto LABEL_8;
  }
  goto LABEL_7;
}

uint64_t *sub_10034CA4C(uint64_t a1)
{
  return sub_100353418((uint64_t **)(*(void *)(a1 + 32) + 776), (const void **)(a1 + 40), a1 + 40);
}

void *sub_10034CA64(uint64_t a1, uint64_t a2)
{
  id result = (void *)(a1 + 40);
  if (*(char *)(a2 + 63) < 0) {
    return sub_1000559FC(result, *(void **)(a2 + 40), *(void *)(a2 + 48));
  }
  long long v3 = *(_OWORD *)(a2 + 40);
  result[2] = *(void *)(a2 + 56);
  *(_OWORD *)id result = v3;
  return result;
}

void sub_10034CA94(uint64_t a1)
{
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
}

void sub_10034CAA8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (qword_10047BED8 != -1) {
    dispatch_once(&qword_10047BED8, &stru_100469320);
  }
  long long v3 = (id)qword_10047BEE0;
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    int v4 = (void *)(a1 + 40);
    sub_10009BB3C((unsigned char *)(a1 + 40), &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if (*(char *)(a1 + 63) < 0) {
      int v4 = (void *)*v4;
    }
    *(_DWORD *)long long buf = 136315394;
    *(void *)&uint8_t buf[4] = p_p;
    __int16 v20 = 2080;
    uint64_t v21 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "Uploading %s at %s", buf, 0x16u);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }

  int v6 = (uint64_t *)(a1 + 64);
  __p.__r_.__value_.__s.__data_[0] = 0;
  sub_10034B8D0(v2, (long long *)(a1 + 64), 2, (unsigned __int8 *)&__p, 0);
  long long v7 = (const void **)(a1 + 40);
  uint64_t v8 = (const void *)(a1 + 40);
  if (*(char *)(a1 + 63) < 0) {
    uint64_t v8 = *v7;
  }
  int v9 = +[NSString stringWithUTF8String:v8];
  uint64_t v10 = +[NSURL fileURLWithPath:v9];

  std::string v11 = +[NSMutableURLRequest requestWithURL:*(void *)(v2 + 480)];
  if (*(_DWORD *)(v2 + 568) != 1)
  {
    sub_1000AE4B0(buf, "");
    sub_10014B894("Haven't implemented multipart with NSURLSession yet, since we're not using it right now", &__p);
    sub_10016A2C4((uint64_t)buf, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v22 < 0) {
      operator delete(*(void **)buf);
    }
    sub_1000D11E0((uint64_t)&v18);
  }
  [v11 setHTTPMethod:@"POST"];
  [v11 addValue:@"application/octet-stream" forHTTPHeaderField:@"Content-Type"];
  +[NSURLProtocol setProperty:v10 forKey:@"CLSurveyUploadPath" inRequest:v11];
  uint64_t v12 = a1 + 64;
  if (*(char *)(a1 + 87) < 0) {
    uint64_t v12 = *v6;
  }
  uint64_t v13 = +[NSString stringWithUTF8String:v12];
  +[NSURLProtocol setProperty:v13 forKey:@"CLSurveyUploadRunId" inRequest:v11];

  std::string v14 = [*(id *)(v2 + 576) uploadTaskWithRequest:v11 fromFile:v10];
  [*(id *)(v2 + 600) setObject:v14 forKeyedSubscript:v10];
  int v15 = sub_100055960((uint64_t)v7, 0);
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v6;
  char v16 = sub_100352AD0(v2 + 608, (uint64_t)v6, (uint64_t)&unk_1003FAE80, (long long **)&__p);
  *((_DWORD *)v16 + 10) += v15;
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)v6;
  std::string v17 = sub_100352F44(v2 + 688, (uint64_t)v6, (uint64_t)&unk_1003FAE80, (long long **)&__p);
  sub_100353418((uint64_t **)v17 + 5, v7, (uint64_t)v7);
  [v14 resume];
}

void sub_10034CE08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void *sub_10034CE90(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 63) < 0)
  {
    sub_1000559FC((unsigned char *)(a1 + 40), *(void **)(a2 + 40), *(void *)(a2 + 48));
    id result = (void *)(a1 + 64);
    if ((*(char *)(a2 + 87) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 40);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = v4;
    id result = (void *)(a1 + 64);
    if ((*(char *)(a2 + 87) & 0x80000000) == 0)
    {
LABEL_3:
      long long v6 = *(_OWORD *)(a2 + 64);
      result[2] = *(void *)(a2 + 80);
      *(_OWORD *)id result = v6;
      return result;
    }
  }
  return sub_1000559FC(result, *(void **)(a2 + 64), *(void *)(a2 + 72));
}

void sub_10034CF2C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v2 + 63) < 0) {
    operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10034CF48(uint64_t a1)
{
  if (*(char *)(a1 + 87) < 0)
  {
    operator delete(*(void **)(a1 + 64));
    if ((*(char *)(a1 + 63) & 0x80000000) == 0) {
      return;
    }
  }
  else if ((*(char *)(a1 + 63) & 0x80000000) == 0)
  {
    return;
  }
  uint64_t v2 = *(void **)(a1 + 40);

  operator delete(v2);
}

void sub_10034CFA8(uint64_t a1)
{
}

void sub_10034CFBC(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v9 = a2;
  id v10 = a3;
  id v28 = v9;
  std::string v11 = [v10 originalRequest];
  uint64_t v12 = +[NSURLProtocol propertyForKey:@"CLSurveyUploadRunId" inRequest:v11];

  if (v12)
  {
    [v12 ps_STLString];
  }
  else
  {
    __p[0] = 0;
    __p[1] = 0;
    uint64_t v38 = 0;
  }
  uint64_t v13 = [v10 originalRequest];
  std::string v14 = +[NSURLProtocol propertyForKey:@"CLSurveyUploadPath" inRequest:v13];

  id v29 = v14;
  int v15 = [v14 path];
  char v16 = v15;
  if (v15) {
    [v15 ps_STLString];
  }
  else {
    memset(buf, 0, sizeof(buf));
  }
  *(_OWORD *)uint64_t v35 = *(_OWORD *)buf;
  uint64_t v36 = *(void *)&buf[16];
  memset(buf, 0, sizeof(buf));

  buf[0] = 0;
  sub_10034B8D0(a1, (long long *)__p, 2, buf, 0);
  *(void *)long long buf = v35;
  int v17 = *((_DWORD *)sub_100352AD0(a1 + 728, (uint64_t)v35, (uint64_t)&unk_1003FAE80, (long long **)buf) + 10);
  *(void *)long long buf = __p;
  id v18 = sub_100352AD0(a1 + 648, (uint64_t)__p, (uint64_t)&unk_1003FAE80, (long long **)buf);
  *((_DWORD *)v18 + 10) += a4 - v17;
  *(void *)long long buf = v35;
  *((_DWORD *)sub_100352AD0(a1 + 728, (uint64_t)v35, (uint64_t)&unk_1003FAE80, (long long **)buf) + 10) = a4;
  if (qword_10047BED8 != -1) {
    dispatch_once(&qword_10047BED8, &stru_100469320);
  }
  id v19 = (id)qword_10047BEE0;
  if (os_log_type_enabled(v19, OS_LOG_TYPE_INFO))
  {
    __int16 v20 = v12;
    int v21 = SHIBYTE(v36);
    char v22 = (void **)v35[0];
    id v39 = v35;
    int v23 = *((_DWORD *)sub_100352AD0(a1 + 728, (uint64_t)v35, (uint64_t)&unk_1003FAE80, (long long **)&v39) + 10);
    if (v21 >= 0) {
      id v24 = v35;
    }
    else {
      id v24 = v22;
    }
    *(_DWORD *)long long buf = 136315906;
    *(void *)&uint8_t buf[4] = v24;
    *(_WORD *)&unsigned char buf[12] = 2048;
    *(void *)&buf[14] = a4;
    *(_WORD *)&buf[22] = 2048;
    uint64_t v41 = a5;
    LOWORD(v42) = 1024;
    *(_DWORD *)((char *)&v42 + 2) = v23;
    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_INFO, "Sent for %s; %lld of %lld, %d", buf, 0x26u);
    uint64_t v12 = v20;
  }

  *(void *)long long buf = __p;
  uint64_t v25 = *((int *)sub_100352AD0(a1 + 648, (uint64_t)__p, (uint64_t)&unk_1003FAE80, (long long **)buf) + 10);
  *(void *)long long buf = __p;
  uint64_t v26 = *((int *)sub_100352AD0(a1 + 608, (uint64_t)__p, (uint64_t)&unk_1003FAE80, (long long **)buf) + 10);
  v30[0] = _NSConcreteStackBlock;
  v30[1] = 3321888768;
  v30[2] = sub_10034D540;
  v30[3] = &unk_100469258;
  *(void *)long long buf = a1;
  if ((SHIBYTE(v38) & 0x80000000) == 0)
  {
    *(_OWORD *)&uint8_t buf[8] = *(_OWORD *)__p;
    uint64_t v41 = v38;
    *(void *)&long long v42 = v25;
    *((void *)&v42 + 1) = v26;
    uint64_t v31 = a1;
LABEL_16:
    long long v32 = *(_OWORD *)&buf[8];
    uint64_t v33 = v41;
    goto LABEL_19;
  }
  sub_1000559FC(&buf[8], __p[0], (unint64_t)__p[1]);
  *(void *)&long long v42 = v25;
  *((void *)&v42 + 1) = v26;
  uint64_t v31 = *(void *)buf;
  if ((SHIBYTE(v41) & 0x80000000) == 0) {
    goto LABEL_16;
  }
  sub_1000559FC(&v32, *(void **)&buf[8], *(unint64_t *)&buf[16]);
LABEL_19:
  long long v34 = v42;
  id v27 = objc_retainBlock(v30);
  if (SHIBYTE(v41) < 0) {
    operator delete(*(void **)&buf[8]);
  }
  dispatch_async(*(dispatch_queue_t *)(a1 + 544), v27);

  if (SHIBYTE(v33) < 0)
  {
    operator delete((void *)v32);
    if ((SHIBYTE(v36) & 0x80000000) == 0) {
      goto LABEL_23;
    }
  }
  else if ((SHIBYTE(v36) & 0x80000000) == 0)
  {
    goto LABEL_23;
  }
  operator delete(v35[0]);
LABEL_23:

  if (SHIBYTE(v38) < 0) {
    operator delete(__p[0]);
  }
}

void sub_10034D450(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (*(char *)(v36 - 129) < 0) {
    operator delete(*(void **)(v36 - 152));
  }
  if (a28 < 0) {
    operator delete(__p);
  }

  if (a34 < 0) {
    operator delete(a29);
  }

  _Unwind_Resume(a1);
}

void sub_10034D540(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a1 + 32) + 488) + 32);
  if (*(char *)(a1 + 63) < 0)
  {
    sub_1000559FC(__p, *(void **)(a1 + 40), *(void *)(a1 + 48));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)(a1 + 40);
    uint64_t v4 = *(void *)(a1 + 56);
  }
  long long v5 = *(_OWORD *)(a1 + 64);
  sub_10034F708(v2, (uint64_t)__p);
  if (SHIBYTE(v4) < 0) {
    operator delete(__p[0]);
  }
}

void sub_10034D5D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_10034D5F0(__n128 *a1, uint64_t a2)
{
  a1[2].n128_u64[0] = *(void *)(a2 + 32);
  uint64_t v4 = &a1[2].n128_i8[8];
  if (*(char *)(a2 + 63) < 0)
  {
    sub_1000559FC(v4, *(void **)(a2 + 40), *(void *)(a2 + 48));
    __n128 result = *(__n128 *)(a2 + 64);
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 40);
    *((void *)v4 + 2) = *(void *)(a2 + 56);
    *(_OWORD *)uint64_t v4 = v5;
    __n128 result = *(__n128 *)(a2 + 64);
  }
  a1[4] = result;
  return result;
}

void sub_10034D660(uint64_t a1)
{
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
}

void sub_10034D678(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 64);
  long long v3 = [*(id *)(a1 + 32) response];
  memset(&v81, 0, sizeof(v81));
  uint64_t v4 = *(void **)(a1 + 40);
  if (v4)
  {
    long long v5 = [v4 localizedFailureReason];
    long long v6 = v5;
    if (v5)
    {
      [v5 ps_STLString];
      long long v7 = std::string::insert(&v80, 0, " because ");
      long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
      buf.__r_.__value_.__r.__words[2] = v7->__r_.__value_.__r.__words[2];
      *(_OWORD *)&buf.__r_.__value_.__l.__data_ = v8;
      v7->__r_.__value_.__l.__size_ = 0;
      v7->__r_.__value_.__r.__words[2] = 0;
      v7->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v80.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      *((unsigned char *)&buf.__r_.__value_.__s + 23) = 0;
      buf.__r_.__value_.__s.__data_[0] = 0;
    }
    id v10 = [*(id *)(a1 + 40) localizedDescription];
    std::string v11 = v10;
    if (v10) {
      [v10 ps_STLString];
    }
    else {
      memset(&v80, 0, sizeof(v80));
    }
    if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_std::string buf = &buf;
    }
    else {
      p_std::string buf = (std::string *)buf.__r_.__value_.__r.__words[0];
    }
    if ((buf.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(buf.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = buf.__r_.__value_.__l.__size_;
    }
    std::string v14 = std::string::append(&v80, (const std::string::value_type *)p_buf, size);
    std::string::size_type v15 = v14->__r_.__value_.__r.__words[0];
    v82.__r_.__value_.__r.__words[0] = v14->__r_.__value_.__l.__size_;
    *(std::string::size_type *)((char *)v82.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v14->__r_.__value_.__r.__words[1] + 7);
    char v16 = HIBYTE(v14->__r_.__value_.__r.__words[2]);
    v14->__r_.__value_.__l.__size_ = 0;
    v14->__r_.__value_.__r.__words[2] = 0;
    v14->__r_.__value_.__r.__words[0] = 0;
    *(std::string::size_type *)((char *)&v81.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v82.__r_.__value_.__r.__words + 7);
    v81.__r_.__value_.__r.__words[0] = v15;
    v81.__r_.__value_.__l.__size_ = v82.__r_.__value_.__r.__words[0];
    *((unsigned char *)&v81.__r_.__value_.__s + 23) = v16;
    if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v80.__r_.__value_.__l.__data_);
    }

    if (SHIBYTE(buf.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(buf.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    if ([v3 statusCode] == (id)200)
    {
      int v9 = 1;
      goto LABEL_27;
    }
    int v17 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"Server responded with code %d", [v3 statusCode]);
    id v18 = v17;
    if (v17) {
      [v17 ps_STLString];
    }
    else {
      memset(&buf, 0, sizeof(buf));
    }
    std::string v81 = buf;
    *((unsigned char *)&buf.__r_.__value_.__s + 23) = 0;
    buf.__r_.__value_.__s.__data_[0] = 0;
  }
  int v9 = 0;
LABEL_27:
  [*(id *)(v2 + 600) removeObjectForKey:*(void *)(a1 + 48)];
  if (!v9)
  {
    buf.__r_.__value_.__r.__words[0] = a1 + 72;
    int v28 = *((_DWORD *)sub_100352AD0(v2 + 728, a1 + 72, (uint64_t)&unk_1003FAE80, (long long **)&buf) + 10);
    id v29 = (void *)(a1 + 96);
    buf.__r_.__value_.__r.__words[0] = a1 + 96;
    uint64_t v30 = sub_100352AD0(v2 + 648, a1 + 96, (uint64_t)&unk_1003FAE80, (long long **)&buf);
    *((_DWORD *)v30 + 10) -= v28;
    buf.__r_.__value_.__r.__words[0] = a1 + 72;
    *((_DWORD *)sub_100352AD0(v2 + 728, a1 + 72, (uint64_t)&unk_1003FAE80, (long long **)&buf) + 10) = 0;
    unsigned int v31 = [*(id *)(a1 + 32) countOfBytesExpectedToSend];
    buf.__r_.__value_.__r.__words[0] = a1 + 96;
    long long v32 = sub_100352AD0(v2 + 608, a1 + 96, (uint64_t)&unk_1003FAE80, (long long **)&buf);
    *((_DWORD *)v32 + 10) -= v31;
    if ([*(id *)(a1 + 40) code] == (id)-999)
    {
      sub_100056B28((const char *)(a1 + 72), 0, (int *)&buf);
      if (LODWORD(buf.__r_.__value_.__l.__data_) != 2)
      {
        if (qword_10047BED8 == -1)
        {
          uint64_t v50 = qword_10047BEE0;
          if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
            goto LABEL_160;
          }
        }
        else
        {
          dispatch_once(&qword_10047BED8, &stru_100469320);
          uint64_t v50 = qword_10047BEE0;
          if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
            goto LABEL_160;
          }
        }
        if (*(char *)(a1 + 119) < 0) {
          id v29 = (void *)*v29;
        }
        LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v29;
        uint64_t v38 = "Task for %s was cancelled";
        id v39 = v50;
        uint32_t v40 = 12;
        goto LABEL_90;
      }
    }
    if (qword_10047BED8 == -1)
    {
      uint64_t v33 = qword_10047BEE0;
      if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO))
      {
LABEL_43:
        if (*(char *)(a1 + 119) < 0) {
          id v29 = (void *)*v29;
        }
        long long v34 = &v81;
        if ((v81.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          long long v34 = (std::string *)v81.__r_.__value_.__r.__words[0];
        }
        LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
        *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = (std::string::size_type)v29;
        WORD2(buf.__r_.__value_.__r.__words[1]) = 2080;
        *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = (std::string::size_type)v34;
        _os_log_impl((void *)&_mh_execute_header, v33, OS_LOG_TYPE_INFO, "Failed to upload %s; will retry soon: %s",
          (uint8_t *)&buf,
          0x16u);
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100469320);
      uint64_t v33 = qword_10047BEE0;
      if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        goto LABEL_43;
      }
    }
    unsigned __int8 v35 = atomic_load((unsigned __int8 *)(v2 + 472));
    if (v35) {
      (*(void (**)(void))(**(void **)(v2 + 560) + 16))(*(void *)(v2 + 560));
    }
    unsigned __int8 v36 = atomic_load((unsigned __int8 *)(v2 + 472));
    if (v36)
    {
      if (*(char *)(a1 + 95) < 0)
      {
        sub_1000559FC(&v69, *(void **)(a1 + 72), *(void *)(a1 + 80));
      }
      else
      {
        long long v69 = *(_OWORD *)(a1 + 72);
        uint64_t v70 = *(void *)(a1 + 88);
      }
      sub_10034C7B0(v2, &v69);
      if ((SHIBYTE(v70) & 0x80000000) == 0) {
        goto LABEL_160;
      }
      id v51 = (void *)v69;
      goto LABEL_159;
    }
    if (qword_10047BED8 == -1)
    {
      uint64_t v37 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        goto LABEL_160;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100469320);
      uint64_t v37 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        goto LABEL_160;
      }
    }
    LOWORD(buf.__r_.__value_.__l.__data_) = 0;
    uint64_t v38 = "Shutdown in progress, not going to retry upload";
    id v39 = v37;
    uint32_t v40 = 2;
LABEL_90:
    _os_log_impl((void *)&_mh_execute_header, v39, OS_LOG_TYPE_INFO, v38, (uint8_t *)&buf, v40);
    goto LABEL_160;
  }
  id v19 = (void *)(a1 + 72);
  off_t v20 = sub_100055960(a1 + 72, 0);
  sub_10034CFBC(v2, *(void **)(a1 + 56), *(void **)(a1 + 32), v20, v20);
  uint64_t v21 = v2 + 8;
  sub_10034B5F4(v2 + 8, 6u, &v80);
  sub_10009BB3C((unsigned char *)(a1 + 72), &v82);
  sub_1000512AC(&v80, (uint64_t)&v82);
  std::string buf = v80;
  memset(&v80, 0, sizeof(v80));
  sub_100002D10(a1 + 72, (uint64_t)&buf, 0);
  if ((SHIBYTE(buf.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v82.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
LABEL_55:
    operator delete(v82.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v80.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_56;
  }
  operator delete(buf.__r_.__value_.__l.__data_);
  if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_55;
  }
LABEL_30:
  if ((SHIBYTE(v80.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_31;
  }
LABEL_56:
  operator delete(v80.__r_.__value_.__l.__data_);
LABEL_31:
  uint64_t v22 = v2 + 688;
  int v23 = (std::string::size_type *)(a1 + 96);
  buf.__r_.__value_.__r.__words[0] = a1 + 96;
  id v24 = sub_100352F44(v2 + 688, a1 + 96, (uint64_t)&unk_1003FAE80, (long long **)&buf);
  sub_100353614(v24 + 5, a1 + 72);
  atomic_fetch_add((atomic_uint *volatile)(v2 + 504), 0xFFFFFFFF);
  atomic_fetch_add((atomic_uint *volatile)(v2 + 508), 1u);
  buf.__r_.__value_.__r.__words[0] = a1 + 96;
  if (!sub_100352F44(v2 + 688, a1 + 96, (uint64_t)&unk_1003FAE80, (long long **)&buf)[7])
  {
    buf.__r_.__value_.__s.__data_[0] = 0;
    sub_10034B8D0(v2, (long long *)(a1 + 96), 3, (unsigned __int8 *)&buf, 0);
    if (qword_10047BED8 != -1) {
      dispatch_once(&qword_10047BED8, &stru_100469320);
    }
    uint64_t v41 = (id)qword_10047BEE0;
    if (os_log_type_enabled(v41, OS_LOG_TYPE_INFO))
    {
      std::string::size_type v42 = a1 + 96;
      if (*(char *)(a1 + 119) < 0) {
        std::string::size_type v42 = *v23;
      }
      LODWORD(buf.__r_.__value_.__l.__data_) = 136315138;
      *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v42;
      _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_INFO, "Completed uploading %s", (uint8_t *)&buf, 0xCu);
    }

    uint64_t v43 = sub_1003537B4((void *)(v2 + 688), a1 + 96);
    if (v43)
    {
      sub_1000A9E44((void *)(v2 + 688), v43, (uint64_t)&buf);
      std::string::size_type v44 = buf.__r_.__value_.__r.__words[0];
      buf.__r_.__value_.__r.__words[0] = 0;
      if (v44)
      {
        if (buf.__r_.__value_.__s.__data_[16])
        {
          sub_1001B1F9C(v44 + 40, *(char **)(v44 + 48));
          if (*(char *)(v44 + 39) < 0) {
            operator delete(*(void **)(v44 + 16));
          }
        }
        operator delete((void *)v44);
      }
    }
    unsigned int v45 = sub_1003539E4((void *)(v2 + 608), a1 + 96);
    if (v45)
    {
      sub_1000A9E44((void *)(v2 + 608), v45, (uint64_t)&buf);
      std::string::size_type v46 = buf.__r_.__value_.__r.__words[0];
      buf.__r_.__value_.__r.__words[0] = 0;
      if (v46)
      {
        if (buf.__r_.__value_.__s.__data_[16] && *(char *)(v46 + 39) < 0) {
          operator delete(*(void **)(v46 + 16));
        }
        operator delete((void *)v46);
      }
    }
    __int16 v47 = sub_1003539E4((void *)(v2 + 648), a1 + 96);
    if (v47)
    {
      sub_1000A9E44((void *)(v2 + 648), v47, (uint64_t)&buf);
      std::string::size_type v48 = buf.__r_.__value_.__r.__words[0];
      buf.__r_.__value_.__r.__words[0] = 0;
      if (v48)
      {
        if (buf.__r_.__value_.__s.__data_[16] && *(char *)(v48 + 39) < 0) {
          operator delete(*(void **)(v48 + 16));
        }
        operator delete((void *)v48);
      }
    }
    long long v49 = *(NSObject **)(v2 + 800);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3321888768;
    block[2] = sub_10034E6A0;
    block[3] = &unk_1004691D0;
    void block[4] = v2;
    if (*(char *)(a1 + 119) < 0)
    {
      sub_1000559FC(&v78, *(void **)(a1 + 96), *(void *)(a1 + 104));
    }
    else
    {
      long long v78 = *(_OWORD *)v23;
      uint64_t v79 = *(void *)(a1 + 112);
    }
    dispatch_sync(v49, block);
    long long v68 = v3;
    sub_10034B5F4(v2 + 8, 5u, &v82);
    if (*(char *)(a1 + 119) < 0)
    {
      sub_1000559FC(v75, *(void **)(a1 + 96), *(void *)(a1 + 104));
    }
    else
    {
      *(_OWORD *)long long v75 = *(_OWORD *)v23;
      unint64_t v76 = *(void *)(a1 + 112);
    }
    sub_1000512AC(&v82, (uint64_t)v75);
    std::string v80 = v82;
    memset(&v82, 0, sizeof(v82));
    int v52 = *(char *)(a1 + 119);
    if (v52 >= 0) {
      size_t v53 = *(unsigned __int8 *)(a1 + 119);
    }
    else {
      size_t v53 = *(void *)(a1 + 104);
    }
    unint64_t v54 = v53 + 4;
    if (v53 + 4 > 0x7FFFFFFFFFFFFFF7) {
      sub_1000A6968();
    }
    if (v54 >= 0x17)
    {
      uint64_t v56 = (v54 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v54 | 7) != 0x17) {
        uint64_t v56 = v54 | 7;
      }
      uint64_t v57 = v56 + 1;
      p_dst = (long long *)operator new(v56 + 1);
      *((void *)&__dst + 1) = v53 + 4;
      unint64_t v72 = v57 | 0x8000000000000000;
      *(void *)&long long __dst = p_dst;
    }
    else
    {
      unint64_t v72 = 0;
      long long __dst = 0uLL;
      p_dst = &__dst;
      HIBYTE(v72) = v53 + 4;
      if (!v53) {
        goto LABEL_112;
      }
    }
    if (v52 >= 0) {
      long long v58 = (const void *)(a1 + 96);
    }
    else {
      long long v58 = (const void *)*v23;
    }
    memmove(p_dst, v58, v53);
LABEL_112:
    strcpy((char *)p_dst + v53, ".zip");
    *(_OWORD *)std::string __p = __dst;
    unint64_t v74 = v72;
    sub_1000512AC(&v80, (uint64_t)__p);
    std::string buf = v80;
    memset(&v80, 0, sizeof(v80));
    if (SHIBYTE(v74) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v80.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_114:
        if ((SHIBYTE(v76) & 0x80000000) == 0) {
          goto LABEL_115;
        }
        goto LABEL_151;
      }
    }
    else if ((SHIBYTE(v80.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_114;
    }
    operator delete(v80.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v76) & 0x80000000) == 0)
    {
LABEL_115:
      if ((SHIBYTE(v82.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_116;
      }
LABEL_152:
      operator delete(v82.__r_.__value_.__l.__data_);
LABEL_116:
      sub_10034B5F4(v21, 6u, &v82);
      int v59 = *(char *)(a1 + 119);
      if (v59 >= 0) {
        size_t v60 = *(unsigned __int8 *)(a1 + 119);
      }
      else {
        size_t v60 = *(void *)(a1 + 104);
      }
      unint64_t v61 = v60 + 4;
      if (v60 + 4 > 0x7FFFFFFFFFFFFFF7) {
        sub_1000A6968();
      }
      if (v61 >= 0x17)
      {
        uint64_t v63 = (v61 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v61 | 7) != 0x17) {
          uint64_t v63 = v61 | 7;
        }
        uint64_t v64 = v63 + 1;
        uint64_t v62 = operator new(v63 + 1);
        __p[1] = (void *)(v60 + 4);
        unint64_t v74 = v64 | 0x8000000000000000;
        __p[0] = v62;
      }
      else
      {
        __p[1] = 0;
        unint64_t v74 = 0;
        __p[0] = 0;
        uint64_t v62 = __p;
        HIBYTE(v74) = v60 + 4;
        if (!v60) {
          goto LABEL_130;
        }
      }
      if (v59 >= 0) {
        std::string v65 = (const void *)(a1 + 96);
      }
      else {
        std::string v65 = (const void *)*v23;
      }
      memmove(v62, v65, v60);
LABEL_130:
      long long v3 = v68;
      strcpy((char *)v62 + v60, ".zip");
      *(_OWORD *)long long v75 = *(_OWORD *)__p;
      unint64_t v76 = v74;
      sub_1000512AC(&v82, (uint64_t)v75);
      std::string v80 = v82;
      memset(&v82, 0, sizeof(v82));
      if (SHIBYTE(v76) < 0)
      {
        operator delete(*(void **)v75);
        if ((SHIBYTE(v82.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_132:
          if (qword_10047BED8 == -1) {
            goto LABEL_133;
          }
LABEL_155:
          dispatch_once(&qword_10047BED8, &stru_100469320);
LABEL_133:
          std::logic_error v66 = (id)qword_10047BEE0;
          if (os_log_type_enabled(v66, OS_LOG_TYPE_INFO))
          {
            if (*(char *)(a1 + 95) < 0) {
              id v19 = (void *)*v19;
            }
            LODWORD(v82.__r_.__value_.__l.__data_) = 136315138;
            *(std::string::size_type *)((char *)v82.__r_.__value_.__r.__words + 4) = (std::string::size_type)v19;
            _os_log_impl((void *)&_mh_execute_header, v66, OS_LOG_TYPE_INFO, "Saving %s in the uploaded directory for future re-upload", (uint8_t *)&v82, 0xCu);
          }

          memset(&v82, 0, sizeof(v82));
          sub_100002D10((uint64_t)&buf, (uint64_t)&v80, (uint64_t)&v82);
          if ((v82.__r_.__value_.__s.__data_[16] & 1) != 0
            && (v82.__r_.__value_.__r.__words[2] != 1 || LODWORD(v82.__r_.__value_.__l.__data_)))
          {
            if (qword_10047BED8 != -1) {
              dispatch_once(&qword_10047BED8, &stru_100469320);
            }
            double v67 = (id)qword_10047BEE0;
            if (os_log_type_enabled(v67, OS_LOG_TYPE_INFO))
            {
              *(_WORD *)long long v75 = 0;
              _os_log_impl((void *)&_mh_execute_header, v67, OS_LOG_TYPE_INFO, "Oops... we already moved the uploading file", v75, 2u);
            }
          }
          if (SHIBYTE(v80.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v80.__r_.__value_.__l.__data_);
            if ((SHIBYTE(buf.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            {
LABEL_147:
              if ((SHIBYTE(v79) & 0x80000000) == 0) {
                goto LABEL_160;
              }
LABEL_158:
              id v51 = (void *)v78;
LABEL_159:
              operator delete(v51);
              goto LABEL_160;
            }
          }
          else if ((SHIBYTE(buf.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
            goto LABEL_147;
          }
          operator delete(buf.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v79) & 0x80000000) == 0) {
            goto LABEL_160;
          }
          goto LABEL_158;
        }
      }
      else if ((SHIBYTE(v82.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_132;
      }
      operator delete(v82.__r_.__value_.__l.__data_);
      if (qword_10047BED8 == -1) {
        goto LABEL_133;
      }
      goto LABEL_155;
    }
LABEL_151:
    operator delete(*(void **)v75);
    if ((SHIBYTE(v82.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_116;
    }
    goto LABEL_152;
  }
  if (qword_10047BED8 != -1) {
    dispatch_once(&qword_10047BED8, &stru_100469320);
  }
  uint64_t v25 = (id)qword_10047BEE0;
  if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
  {
    std::string::size_type v26 = a1 + 96;
    if (*(char *)(a1 + 119) < 0) {
      std::string::size_type v26 = *v23;
    }
    v80.__r_.__value_.__r.__words[0] = a1 + 96;
    std::string::size_type v27 = sub_100352F44(v22, a1 + 96, (uint64_t)&unk_1003FAE80, (long long **)&v80)[7];
    LODWORD(buf.__r_.__value_.__l.__data_) = 136315394;
    *(std::string::size_type *)((char *)buf.__r_.__value_.__r.__words + 4) = v26;
    WORD2(buf.__r_.__value_.__r.__words[1]) = 2048;
    *(std::string::size_type *)((char *)&buf.__r_.__value_.__r.__words[1] + 6) = v27;
    _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_INFO, "Uploaded part of %s with %zu pieces remaining", (uint8_t *)&buf, 0x16u);
  }

LABEL_160:
  if (SHIBYTE(v81.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v81.__r_.__value_.__l.__data_);
  }
}

void sub_10034E430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *__p,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  if (*(char *)(v50 - 153) < 0) {
    operator delete(*(void **)(v50 - 176));
  }
  if (a44 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v50 - 185) < 0) {
    operator delete(*(void **)(v50 - 208));
  }

  _Unwind_Resume(a1);
}

uint64_t sub_10034E6A0(uint64_t a1)
{
  return sub_100353614((void *)(*(void *)(a1 + 32) + 776), a1 + 40);
}

void *sub_10034E6B4(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 95) < 0)
  {
    sub_1000559FC((unsigned char *)(a1 + 72), *(void **)(a2 + 72), *(void *)(a2 + 80));
    __n128 result = (void *)(a1 + 96);
    if ((*(char *)(a2 + 119) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 72);
    *(void *)(a1 + 8++*(void *)(result + 8) = *(void *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = v4;
    __n128 result = (void *)(a1 + 96);
    if ((*(char *)(a2 + 119) & 0x80000000) == 0)
    {
LABEL_3:
      long long v6 = *(_OWORD *)(a2 + 96);
      result[2] = *(void *)(a2 + 112);
      *(_OWORD *)__n128 result = v6;
      return result;
    }
  }
  return sub_1000559FC(result, *(void **)(a2 + 96), *(void *)(a2 + 104));
}

void sub_10034E750(_Unwind_Exception *exception_object)
{
  if (*(char *)(v2 + 95) < 0) {
    operator delete(*v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10034E76C(uint64_t a1)
{
  if (*(char *)(a1 + 119) < 0)
  {
    operator delete(*(void **)(a1 + 96));
    if ((*(char *)(a1 + 95) & 0x80000000) == 0) {
      return;
    }
  }
  else if ((*(char *)(a1 + 95) & 0x80000000) == 0)
  {
    return;
  }
  uint64_t v2 = *(void **)(a1 + 72);

  operator delete(v2);
}

void sub_10034E7CC(uint64_t a1)
{
}

char *sub_10034E7EC(char *result, uint64_t a2)
{
  long long v3 = result;
  *((void *)result + 4) = *(void *)(a2 + 32);
  if (*(char *)(a2 + 63) < 0)
  {
    __n128 result = (char *)sub_1000559FC(result + 40, *(void **)(a2 + 40), *(void *)(a2 + 48));
    *((_DWORD *)v3 + 16) = *(_DWORD *)(a2 + 64);
    v3[72] = 0;
    if (!*(unsigned char *)(a2 + 72)) {
      return result;
    }
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 40);
    *((void *)result + 7) = *(void *)(a2 + 56);
    *(_OWORD *)(result + 40) = v4;
    *((_DWORD *)result + 16) = *(_DWORD *)(a2 + 64);
    result[72] = 0;
    if (!*(unsigned char *)(a2 + 72)) {
      return result;
    }
  }
  *((_DWORD *)v3 + 20) = *(_DWORD *)(a2 + 80);
  __n128 result = v3 + 88;
  if (*(char *)(a2 + 111) < 0)
  {
    __n128 result = (char *)sub_1000559FC(result, *(void **)(a2 + 88), *(void *)(a2 + 96));
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 88);
    *((void *)v3 + 13) = *(void *)(a2 + 104);
    *(_OWORD *)__n128 result = v5;
  }
  v3[72] = 1;
  return result;
}

void sub_10034E8D4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 63) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_10034E8F0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 72))
  {
    if (*(char *)(a1 + 111) < 0) {
      operator delete(*(void **)(a1 + 88));
    }
    *(unsigned char *)(a1 + 72) = 0;
  }
  if (*(char *)(a1 + 63) < 0)
  {
    uint64_t v2 = *(void **)(a1 + 40);
    operator delete(v2);
  }
}

uint64_t sub_10034E954(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(char *)(a1 + 79) < 0) {
      operator delete(*(void **)(a1 + 56));
    }
    *(unsigned char *)(a1 + 40) = 0;
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void sub_10034E9B4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  uint64_t v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

double sub_10034E9F8(uint64_t a1, uint64_t a2)
{
  long long v3 = (const void *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
  size_t v4 = strlen((const char *)(a2 & 0x7FFFFFFFFFFFFFFFLL));
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  long long v5 = (void *)v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    long long v6 = (void **)operator new(v7 + 1);
    __dst[1] = v5;
    unint64_t v13 = v8 | 0x8000000000000000;
    __dst[0] = v6;
    goto LABEL_8;
  }
  HIBYTE(v13) = v4;
  long long v6 = __dst;
  if (v4) {
LABEL_8:
  }
    memmove(v6, v3, (size_t)v5);
  *((unsigned char *)v5 + (void)v6) = 0;
  sub_10000DB3C(__dst, (uint64_t)&v10);
  if (SHIBYTE(v13) < 0) {
    operator delete(__dst[0]);
  }
  double result = *(double *)&v10;
  *(_OWORD *)a1 = v10;
  *(void *)(a1 + 16) = v11;
  return result;
}

void sub_10034EADC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10034EAF8(uint64_t *a1, unint64_t a2)
{
  if (0xAAAAAAAAAAAAAAABLL * ((a1[2] - *a1) >> 4) < a2)
  {
    if (a2 >= 0x555555555555556) {
      sub_1000A9108();
    }
    uint64_t v3 = a1[1] - *a1;
    unint64_t v13 = a1 + 2;
    uint64_t v4 = 48 * a2;
    std::string __p = operator new(48 * a2);
    long long v10 = (char *)__p + v3;
    uint64_t v11 = (char *)__p + v3;
    uint64_t v12 = (char *)__p + v4;
    sub_100161A2C(a1, &__p);
    long long v5 = v10;
    long long v6 = v11;
    if (v11 != v10)
    {
      while (1)
      {
        uint64_t v11 = v6 - 48;
        uint64_t v7 = (std::__shared_weak_count *)*((void *)v6 - 1);
        if (v7)
        {
          if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
            break;
          }
        }
        uint64_t v8 = *((void *)v6 - 5);
        if (v8) {
          goto LABEL_9;
        }
LABEL_5:
        long long v6 = v11;
        if (v11 == v5) {
          goto LABEL_12;
        }
      }
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
      uint64_t v8 = *((void *)v6 - 5);
      if (!v8) {
        goto LABEL_5;
      }
LABEL_9:
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
      goto LABEL_5;
    }
LABEL_12:
    if (__p) {
      operator delete(__p);
    }
  }
}

void sub_10034EC58(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100161B50((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_10034EC6C(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

void sub_10034ECFC()
{
  exception = __cxa_allocate_exception(0x38uLL);
  sub_10034ED5C((uint64_t)exception);
}

void sub_10034ED44(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10034ED5C(uint64_t result)
{
  *(void *)(result + ++*(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 4++*(void *)(result + 8) = -1;
  *(void *)double result = &off_1004693C0;
  *(void *)(result + ++*(void *)(result + 8) = off_1004693F0;
  *(void *)(result + 16) = off_100469418;
  return result;
}

std::bad_cast *sub_10034EDCC(std::bad_cast *a1)
{
  a1[2].__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    a1[3].__vftable = 0;
  }
  std::bad_cast::~bad_cast(a1 + 1);
  return a1;
}

void sub_10034EE50()
{
}

void sub_10034EF90()
{
  std::bad_cast::~bad_cast(v0);
  operator delete();
}

void sub_10034EFBC(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 24))(v1);
  _Unwind_Resume(a1);
}

void sub_10034EFF0(uint64_t a1)
{
  exception = __cxa_allocate_exception(0x38uLL);
  sub_10034F394((uint64_t)exception, a1);
}

void sub_10034F038(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10034F04C(std::bad_cast *a1)
{
  a1[2].__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[3].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    a1[3].__vftable = 0;
  }
  std::bad_cast::~bad_cast(a1 + 1);

  operator delete();
}

void sub_10034F0F0(std::bad_cast *this)
{
  this[1].__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    this[2].__vftable = 0;
  }

  std::bad_cast::~bad_cast(this);
}

void sub_10034F17C(std::bad_cast *this)
{
  this[1].__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = this[2].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    this[2].__vftable = 0;
  }
  std::bad_cast::~bad_cast(this);

  operator delete();
}

const char *sub_10034F224()
{
  return "boost::bad_any_cast: failed conversion using boost::any_cast";
}

void sub_10034F230(std::bad_cast *a1)
{
  a1->__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    a1[1].__vftable = 0;
  }

  std::bad_cast::~bad_cast(a1 - 1);
}

void sub_10034F2B8(std::bad_cast *a1)
{
  a1->__vftable = (std::bad_cast_vtbl *)&off_100451DC0;
  uint64_t v2 = a1[1].__vftable;
  if (v2 && (*((unsigned int (**)(std::bad_cast_vtbl *))v2->~bad_cast + 4))(v2)) {
    a1[1].__vftable = 0;
  }
  std::bad_cast::~bad_cast(a1 - 1);

  operator delete();
}

void sub_10034F35C(std::bad_cast *a1)
{
  std::bad_cast::~bad_cast(a1);

  operator delete();
}

uint64_t sub_10034F394(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = &off_100451ED0;
  *(void *)(a1 + ++*(void *)(result + 8) = &off_100469438;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = &off_100451DC0;
  *(void *)(a1 + ++*(void *)(result + 24) = v4;
  if (v4) {
    (*(void (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 4++*(void *)(result + 8) = *(_DWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v5;
  *(void *)a1 = &off_1004693C0;
  *(void *)(a1 + ++*(void *)(result + 8) = off_1004693F0;
  *(void *)(a1 + 16) = off_100469418;
  return a1;
}

void sub_10034F4B0(_Unwind_Exception *a1)
{
  std::bad_cast::~bad_cast(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10034F4C4(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 48);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = *(void *)(a1 + 16);
    if (!v3) {
      return a1;
    }
    goto LABEL_4;
  }
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3) {
LABEL_4:
  }
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  return a1;
}

void sub_10034F568(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 48);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = *(void *)(a1 + 16);
    if (!v3)
    {
LABEL_5:
      operator delete();
    }
  }
  else
  {
    uint64_t v3 = *(void *)(a1 + 16);
    if (!v3) {
      goto LABEL_5;
    }
  }
  (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  goto LABEL_5;
}

_UNKNOWN **sub_10034F62C()
{
}

void sub_10034F638()
{
}

void sub_10034F6E4()
{
}

void sub_10034F708(uint64_t a1, uint64_t a2)
{
  std::string __p = 0;
  std::string::size_type v42 = 0;
  unint64_t v43 = 0;
  uint64_t v4 = (std::mutex *)(a1 + 48);
  std::mutex::lock((std::mutex *)(a1 + 48));
  if (!*(void *)(a1 + 16)
        unint64_t v6 = 21 * ((265 * (v5 ^ (v5 >> 24))) ^ ((265 * (v5 ^ (v5 >> 24))) >> 14)),
        uint64_t v7 = (*(void *)(a1 + 8) - 1) & (2147483649u * (v6 ^ (v6 >> 28))),
        (uint64_t v8 = *(uint64_t ****)(*(void *)(a1 + 40) + 8 * v7)) == 0)
    || (int v9 = *v8) == 0)
  {
LABEL_33:
    if (qword_10047BED8 != -1) {
      dispatch_once(&qword_10047BED8, &stru_100469320);
    }
    uint64_t v25 = (id)qword_10047BEE0;
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
    {
      sub_10034E9F8((uint64_t)&v36, (uint64_t)"N7actions9upload_db14UploadProgressE");
      std::string::size_type v26 = (v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? &v36
          : (std::string *)v36.__r_.__value_.__r.__words[0];
      LODWORD(buf) = 136315138;
      *(void *)((char *)&buf + 4) = v26;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "No listeners for event %s", (uint8_t *)&buf, 0xCu);
      if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v36.__r_.__value_.__l.__data_);
      }
    }

    std::mutex::unlock(v4);
    goto LABEL_42;
  }
  {
    long long v10 = v9[1];
LABEL_6:
    if (((unint64_t)v10 & 0x7FFFFFFFFFFFFFFFLL) == v7)
    {
      while (1)
      {
        int v9 = (uint64_t **)*v9;
        if (!v9) {
          break;
        }
        long long v10 = v9[1];
        if (((unint64_t)v10 & 0x8000000000000000) == 0)
        {
            goto LABEL_6;
          goto LABEL_10;
        }
      }
    }
    goto LABEL_33;
  }
LABEL_10:
  sub_10034EAF8((uint64_t *)&__p, 0xAAAAAAAAAAAAAAABLL * (((char *)v9[4] - (char *)v9[3]) >> 4));
  uint64_t v11 = (uint64_t)v9[3];
  uint64_t v12 = v9[4];
  if ((uint64_t *)v11 != v12)
  {
    unint64_t v13 = (unint64_t)v42;
    do
    {
      while (v13 >= v43)
      {
        unint64_t v13 = sub_100161808((uint64_t *)&__p, v11);
        std::string::size_type v42 = (char *)v13;
        v11 += 48;
        if ((uint64_t *)v11 == v12) {
          goto LABEL_19;
        }
      }
      *(void *)unint64_t v13 = *(void *)v11;
      uint64_t v14 = *(void *)(v11 + 8);
      if (v14) {
        uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)v14 + 24))(v14);
      }
      *(void *)(v13 + ++*(void *)(result + 8) = v14;
      *(_OWORD *)(v13 + 16) = *(_OWORD *)(v11 + 16);
      *(void *)(v13 + 32) = *(void *)(v11 + 32);
      uint64_t v15 = *(void *)(v11 + 40);
      *(void *)(v13 + 40) = v15;
      if (v15) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v15 + 8), 1uLL, memory_order_relaxed);
      }
      v13 += 48;
      std::string::size_type v42 = (char *)v13;
      v11 += 48;
    }
    while ((uint64_t *)v11 != v12);
  }
LABEL_19:
  std::mutex::unlock(v4);
  sub_10034E9F8((uint64_t)&v36, (uint64_t)"N7actions9upload_db14UploadProgressE");
  char v16 = std::string::insert(&v36, 0, "delivering event ");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  std::string::size_type v40 = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)id v39 = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v36.__r_.__value_.__l.__data_);
  }
  *(void *)&long long buf = off_1004694C8;
  *((void *)&buf + 1) = a2;
  unsigned int v45 = v39;
  p_long long buf = &buf;
  sub_10016A7B4(&__p, (uint64_t)&buf, &v37);
  id v18 = (char *)v37;
  if (v37 != v38)
  {
    std::mutex::lock(v4);
    if (*(void *)(a1 + 16))
    {
      unint64_t v20 = 21 * ((265 * (v19 ^ (v19 >> 24))) ^ ((265 * (v19 ^ (v19 >> 24))) >> 14));
      uint64_t v21 = (*(void *)(a1 + 8) - 1) & (2147483649u * (v20 ^ (v20 >> 28)));
      uint64_t v22 = *(uint64_t ****)(*(void *)(a1 + 40) + 8 * v21);
      if (v22)
      {
        int v23 = *v22;
        if (v23)
        {
          {
LABEL_31:
            if (v37 != v38) {
              operator new();
            }
          }
          else
          {
            id v24 = v23[1];
LABEL_27:
            if (((unint64_t)v24 & 0x7FFFFFFFFFFFFFFFLL) == v21)
            {
              while (1)
              {
                int v23 = (uint64_t **)*v23;
                if (!v23) {
                  break;
                }
                id v24 = v23[1];
                if (((unint64_t)v24 & 0x8000000000000000) == 0)
                {
                    goto LABEL_27;
                  goto LABEL_31;
                }
              }
            }
          }
        }
      }
    }
    std::mutex::unlock(v4);
    id v18 = (char *)v37;
  }
  if (v18)
  {
    long long v32 = v38;
    uint64_t v33 = v18;
    if (v38 != v18)
    {
      do
      {
        long long v34 = (std::__shared_weak_count *)*((void *)v32 - 1);
        if (v34 && !atomic_fetch_add(&v34->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
        }
        uint64_t v35 = *((void *)v32 - 5);
        if (v35) {
          (*(void (**)(uint64_t))(*(void *)v35 + 8))(v35);
        }
        v32 -= 48;
      }
      while (v32 != v18);
      uint64_t v33 = v37;
    }
    uint64_t v38 = v18;
    operator delete(v33);
  }
  if (p_buf != &buf)
  {
    if (p_buf) {
      (*(void (**)(long long *))(*(void *)p_buf + 40))(p_buf);
    }
    if ((SHIBYTE(v40) & 0x80000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_73;
  }
  (*(void (**)(long long *))(buf + 32))(&buf);
  if (SHIBYTE(v40) < 0) {
LABEL_73:
  }
    operator delete(v39[0]);
LABEL_42:
  std::string::size_type v27 = (char *)__p;
  if (!__p) {
    return;
  }
  int v28 = v42;
  id v29 = __p;
  if (v42 == __p) {
    goto LABEL_53;
  }
  do
  {
    uint64_t v30 = (std::__shared_weak_count *)*((void *)v28 - 1);
    if (!v30 || atomic_fetch_add(&v30->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      uint64_t v31 = *((void *)v28 - 5);
      if (!v31) {
        goto LABEL_45;
      }
LABEL_49:
      (*(void (**)(uint64_t))(*(void *)v31 + 8))(v31);
      goto LABEL_45;
    }
    ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
    std::__shared_weak_count::__release_weak(v30);
    uint64_t v31 = *((void *)v28 - 5);
    if (v31) {
      goto LABEL_49;
    }
LABEL_45:
    v28 -= 48;
  }
  while (v28 != v27);
  id v29 = __p;
LABEL_53:
  std::string::size_type v42 = v27;
  operator delete(v29);
}

void sub_10034FF78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,uint64_t a32,char a33)
{
  sub_100161124(&a21);
  sub_10034EC6C((void *)(v33 - 128));
  if (a29 < 0)
  {
    operator delete(__p);
    sub_100161124(&a30);
    _Unwind_Resume(a1);
  }
  sub_100161124(&a30);
  _Unwind_Resume(a1);
}

void sub_1003500F8()
{
}

__n128 sub_10035010C(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = off_1004694C8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + ++*(void *)(result + 8) = result;
  return result;
}

__n128 sub_100350158(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1004694C8;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + ++*(void *)(result + 8) = result;
  return result;
}

void sub_100350188(uint64_t a1, uint64_t *a2)
{
}

uint64_t sub_100350190(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN8EventBus15notifyListenersIN7actions9upload_db14UploadProgressEEEvOT_EUlRKN9event_bus21GenericCallbackHandleEE_") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"ZN8EventBus15notifyListenersIN7actions9upload_db14UploadProgressEEEvOT_EUlRKN9event_bus2"
                                "1GenericCallbackHandleEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN8EventBus15notifyListenersIN7actions9upload_db14UploadProgressEEEvOT_EUlRKN9event_bus21GenericCallbackHandleEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN8EventBus15notifyListenersIN7actions9upload_db14UploadProgressEEEvOT_EUlRKN9event_bus21GenericCallbackHandleEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

_UNKNOWN **sub_100350200()
{
}

void sub_10035020C(void *a1, uint64_t *a2)
{
  uint64_t v3 = a2[4];
  unint64_t v5 = (long long *)*a1;
  uint64_t v4 = a1[1];
  if (*(char *)(*a1 + 23) < 0)
  {
    sub_1000559FC(__p, *(void **)v5, *((void *)v5 + 1));
    long long v12 = *(long long *)((char *)v5 + 24);
    uint64_t v7 = a2[1];
    uint64_t v13 = *a2;
    if (!v7) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  long long v6 = *v5;
  uint64_t v11 = *((void *)v5 + 2);
  *(_OWORD *)std::string __p = v6;
  long long v12 = *(long long *)((char *)v5 + 24);
  uint64_t v7 = a2[1];
  uint64_t v13 = *a2;
  if (v7) {
LABEL_5:
  }
    uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)v7 + 24))(v7);
LABEL_6:
  uint64_t v14 = v7;
  long long v15 = *((_OWORD *)a2 + 1);
  uint64_t v8 = (std::__shared_weak_count *)a2[5];
  uint64_t v16 = a2[4];
  long long v17 = v8;
  if (v8) {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1003503B4(v3, v4, (uint64_t)__p);
  int v9 = v17;
  if (v17 && !atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  if (v14) {
    (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
  }
  if (SHIBYTE(v11) < 0) {
    operator delete(__p[0]);
  }
}

void sub_100350384(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003503B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(char *)(a3 + 23) < 0)
  {
    sub_1000559FC(__p, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a3;
    uint64_t v16 = *(void *)(a3 + 16);
  }
  long long v17 = *(_OWORD *)(a3 + 24);
  uint64_t v6 = *(void *)(a3 + 48);
  uint64_t v18 = *(void *)(a3 + 40);
  if (v6) {
    uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  uint64_t v19 = v6;
  long long v20 = *(_OWORD *)(a3 + 56);
  uint64_t v7 = *(std::__shared_weak_count **)(a3 + 80);
  uint64_t v21 = *(void *)(a3 + 72);
  uint64_t v22 = v7;
  if (v7) {
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  id v24 = 0;
  uint64_t v8 = (char *)operator new(0x60uLL);
  *(void *)uint64_t v8 = off_100469538;
  *(_OWORD *)(v8 + ++*(void *)(result + 8) = *(_OWORD *)__p;
  uint64_t v9 = v18;
  *((void *)v8 + 3) = v16;
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v16 = 0;
  *((_OWORD *)v8 + 2) = v17;
  *((void *)v8 + 6) = v9;
  uint64_t v10 = v19;
  if (v19) {
    uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)v19 + 24))(v19);
  }
  *((void *)v8 + 7) = v10;
  *((_OWORD *)v8 + 4) = v20;
  uint64_t v11 = v22;
  *((void *)v8 + 10) = v21;
  *((void *)v8 + 11) = v11;
  if (v11) {
    atomic_fetch_add_explicit(&v11->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  id v24 = v8;
  (*(void (**)(uint64_t, uint64_t, void *))(*(void *)a1 + 16))(a1, a2, v23);
  if (v24 == v23)
  {
    (*(void (**)(void *))(v23[0] + 32))(v23);
    uint64_t v14 = v22;
    if (!v22) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v24) {
    (*(void (**)(void *, uint64_t, uint64_t))(*v24 + 40))(v24, v12, v13);
  }
  uint64_t v14 = v22;
  if (v22)
  {
LABEL_18:
    if (!atomic_fetch_add(&v14->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
LABEL_20:
  if (v19) {
    (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
  }
  if (SHIBYTE(v16) < 0) {
    operator delete(__p[0]);
  }
}

void sub_100350684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (v9[31] < 0) {
    operator delete(*v10);
  }
  operator delete(v9);
  sub_1003506FC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1003506B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003506CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
}

void sub_1003506E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1003506FC(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 80);
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    uint64_t v3 = *(void *)(a1 + 48);
    if (!v3) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  uint64_t v3 = *(void *)(a1 + 48);
  if (v3) {
LABEL_4:
  }
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
LABEL_5:
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_1003507C0(uint64_t a1)
{
  *(void *)a1 = off_100469538;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 88);
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    uint64_t v3 = *(void *)(a1 + 56);
    if (!v3) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  uint64_t v3 = *(void *)(a1 + 56);
  if (v3) {
LABEL_4:
  }
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
LABEL_5:
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void sub_1003508A0(uint64_t a1)
{
  *(void *)a1 = off_100469538;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 88);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = *(void *)(a1 + 56);
    if (!v3)
    {
LABEL_5:
      if (*(char *)(a1 + 31) < 0) {
        operator delete(*(void **)(a1 + 8));
      }
      operator delete();
    }
  }
  else
  {
    uint64_t v3 = *(void *)(a1 + 56);
    if (!v3) {
      goto LABEL_5;
    }
  }
  (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  goto LABEL_5;
}

char *sub_100350990(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x60uLL);
  uint64_t v3 = v2;
  *(void *)uint64_t v2 = off_100469538;
  if (*(char *)(a1 + 31) < 0)
  {
    sub_1000559FC(v2 + 8, *(void **)(a1 + 8), *(void *)(a1 + 16));
  }
  else
  {
    *(_OWORD *)(v2 + ++*(void *)(result + 8) = *(_OWORD *)(a1 + 8);
    *((void *)v2 + 3) = *(void *)(a1 + 24);
  }
  *((_OWORD *)v3 + 2) = *(_OWORD *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 56);
  *((void *)v3 + 6) = *(void *)(a1 + 48);
  if (v4) {
    uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 24))(v4);
  }
  *((void *)v3 + 7) = v4;
  *((_OWORD *)v3 + 4) = *(_OWORD *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 88);
  *((void *)v3 + 10) = *(void *)(a1 + 80);
  *((void *)v3 + 11) = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return v3;
}

void sub_100350A70(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_100350A84(_Unwind_Exception *a1)
{
  if (v1[31] < 0) {
    operator delete(*v2);
  }
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100350AA8(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_100469538;
  uint64_t v4 = (unsigned char *)(a2 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    sub_1000559FC(v4, *(void **)(a1 + 8), *(void *)(a1 + 16));
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
    uint64_t result = *(void *)(a1 + 56);
    *(void *)(a2 + 4++*(void *)(result + 8) = *(void *)(a1 + 48);
    if (!result) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  long long v5 = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + ++*(void *)(result + 24) = *(void *)(a1 + 24);
  *(_OWORD *)uint64_t v4 = v5;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t result = *(void *)(a1 + 56);
  *(void *)(a2 + 4++*(void *)(result + 8) = v7;
  if (result) {
LABEL_5:
  }
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 24))(result);
LABEL_6:
  *(void *)(a2 + 56) = result;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 88);
  *(void *)(a2 + 80) = *(void *)(a1 + 80);
  *(void *)(a2 + 8++*(void *)(result + 8) = v8;
  if (v8) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_100350B90(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_100350BAC(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 88);
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    uint64_t v3 = *(void *)(a1 + 56);
    if (!v3) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  uint64_t v3 = *(void *)(a1 + 56);
  if (v3) {
LABEL_4:
  }
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
LABEL_5:
  if (*(char *)(a1 + 31) < 0)
  {
    uint64_t v4 = *(void **)(a1 + 8);
    operator delete(v4);
  }
}

void sub_100350C74(char *__p)
{
  uint64_t v2 = (std::__shared_weak_count *)*((void *)__p + 11);
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    uint64_t v3 = *((void *)__p + 7);
    if (!v3) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  uint64_t v3 = *((void *)__p + 7);
  if (v3) {
LABEL_4:
  }
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
LABEL_5:
  if (__p[31] < 0)
  {
    operator delete(*((void **)__p + 1));
    uint64_t v4 = __p;
  }
  else
  {
    uint64_t v4 = __p;
  }
  operator delete(v4);
}

uint64_t sub_100350D58(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 64) + 24);
  if (!v1) {
    sub_10008F39C();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

uint64_t sub_100350DB4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN8EventBus15notifyListenersIN7actions9upload_db14UploadProgressEEEvOT_ENKUlRKN9event_bus21Generic"
                     "CallbackHandleEE_clES9_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN8EventBus15notifyListenersIN7actions9upload_db14UploadProgressEEEvOT_ENKUlRKN9event_b"
                                "us21GenericCallbackHandleEE_clES9_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN8EventBus15notifyListenersIN7actions9upload_db14UploadProgressEEEvOT_ENKUlRKN9event_bus21GenericCallbackHandleEE_clES9_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN8EventBus15notifyListenersIN7actions9upload_db14UploadProgressEEEvOT_ENKUlRKN9event_bus21GenericCallbackHandleEE_clES9_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

_UNKNOWN **sub_100350E24()
{
}

uint64_t sub_100350E30(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_100350EAC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  operator delete();
}

_UNKNOWN **sub_100350F38()
{
}

void sub_100350F44()
{
}

void sub_100350FB0(uint64_t a1, uint64_t a2, int *a3, uint64_t a4)
{
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1000559FC(v7, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
    uint64_t v8 = *(void *)(a2 + 16);
  }
  int v9 = *a3;
  char v10 = 0;
  if (*(unsigned char *)a4)
  {
    int v11 = *(_DWORD *)(a4 + 8);
    if (*(char *)(a4 + 39) < 0)
    {
      sub_1000559FC(&__p, *(void **)(a4 + 16), *(void *)(a4 + 24));
    }
    else
    {
      long long __p = *(_OWORD *)(a4 + 16);
      uint64_t v13 = *(void *)(a4 + 32);
    }
    char v10 = 1;
  }
  sub_100351108(a1, (uint64_t)v7);
  if (v10)
  {
    if (SHIBYTE(v13) < 0) {
      operator delete((void *)__p);
    }
    char v10 = 0;
  }
  if (SHIBYTE(v8) < 0) {
    operator delete(v7[0]);
  }
}

void sub_1003510CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003510F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100351108(uint64_t a1, uint64_t a2)
{
  long long __p = 0;
  std::string::size_type v42 = 0;
  unint64_t v43 = 0;
  uint64_t v4 = (std::mutex *)(a1 + 48);
  std::mutex::lock((std::mutex *)(a1 + 48));
  if (!*(void *)(a1 + 16)
        unint64_t v6 = 21 * ((265 * (v5 ^ (v5 >> 24))) ^ ((265 * (v5 ^ (v5 >> 24))) >> 14)),
        uint64_t v7 = (*(void *)(a1 + 8) - 1) & (2147483649u * (v6 ^ (v6 >> 28))),
        (uint64_t v8 = *(uint64_t ****)(*(void *)(a1 + 40) + 8 * v7)) == 0)
    || (int v9 = *v8) == 0)
  {
LABEL_33:
    if (qword_10047BED8 != -1) {
      dispatch_once(&qword_10047BED8, &stru_100469320);
    }
    uint64_t v25 = (id)qword_10047BEE0;
    if (os_log_type_enabled(v25, OS_LOG_TYPE_DEBUG))
    {
      sub_10034E9F8((uint64_t)&v36, (uint64_t)"N7actions9upload_db11StateChangeE");
      std::string::size_type v26 = (v36.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
          ? &v36
          : (std::string *)v36.__r_.__value_.__r.__words[0];
      LODWORD(buf) = 136315138;
      *(void *)((char *)&buf + 4) = v26;
      _os_log_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_DEBUG, "No listeners for event %s", (uint8_t *)&buf, 0xCu);
      if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v36.__r_.__value_.__l.__data_);
      }
    }

    std::mutex::unlock(v4);
    goto LABEL_42;
  }
  {
    char v10 = v9[1];
LABEL_6:
    if (((unint64_t)v10 & 0x7FFFFFFFFFFFFFFFLL) == v7)
    {
      while (1)
      {
        int v9 = (uint64_t **)*v9;
        if (!v9) {
          break;
        }
        char v10 = v9[1];
        if (((unint64_t)v10 & 0x8000000000000000) == 0)
        {
            goto LABEL_6;
          goto LABEL_10;
        }
      }
    }
    goto LABEL_33;
  }
LABEL_10:
  sub_10034EAF8((uint64_t *)&__p, 0xAAAAAAAAAAAAAAABLL * (((char *)v9[4] - (char *)v9[3]) >> 4));
  uint64_t v11 = (uint64_t)v9[3];
  uint64_t v12 = v9[4];
  if ((uint64_t *)v11 != v12)
  {
    unint64_t v13 = (unint64_t)v42;
    do
    {
      while (v13 >= v43)
      {
        unint64_t v13 = sub_100161808((uint64_t *)&__p, v11);
        std::string::size_type v42 = (char *)v13;
        v11 += 48;
        if ((uint64_t *)v11 == v12) {
          goto LABEL_19;
        }
      }
      *(void *)unint64_t v13 = *(void *)v11;
      uint64_t v14 = *(void *)(v11 + 8);
      if (v14) {
        uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)v14 + 24))(v14);
      }
      *(void *)(v13 + ++*(void *)(result + 8) = v14;
      *(_OWORD *)(v13 + 16) = *(_OWORD *)(v11 + 16);
      *(void *)(v13 + 32) = *(void *)(v11 + 32);
      uint64_t v15 = *(void *)(v11 + 40);
      *(void *)(v13 + 40) = v15;
      if (v15) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v15 + 8), 1uLL, memory_order_relaxed);
      }
      v13 += 48;
      std::string::size_type v42 = (char *)v13;
      v11 += 48;
    }
    while ((uint64_t *)v11 != v12);
  }
LABEL_19:
  std::mutex::unlock(v4);
  sub_10034E9F8((uint64_t)&v36, (uint64_t)"N7actions9upload_db11StateChangeE");
  uint64_t v16 = std::string::insert(&v36, 0, "delivering event ");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  std::string::size_type v40 = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)id v39 = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v36.__r_.__value_.__l.__data_);
  }
  *(void *)&long long buf = off_100469630;
  *((void *)&buf + 1) = a2;
  unsigned int v45 = v39;
  p_long long buf = &buf;
  sub_10016A7B4(&__p, (uint64_t)&buf, &v37);
  uint64_t v18 = (char *)v37;
  if (v37 != v38)
  {
    std::mutex::lock(v4);
    if (*(void *)(a1 + 16))
    {
      unint64_t v20 = 21 * ((265 * (v19 ^ (v19 >> 24))) ^ ((265 * (v19 ^ (v19 >> 24))) >> 14));
      uint64_t v21 = (*(void *)(a1 + 8) - 1) & (2147483649u * (v20 ^ (v20 >> 28)));
      uint64_t v22 = *(uint64_t ****)(*(void *)(a1 + 40) + 8 * v21);
      if (v22)
      {
        int v23 = *v22;
        if (v23)
        {
          {
LABEL_31:
            if (v37 != v38) {
              operator new();
            }
          }
          else
          {
            id v24 = v23[1];
LABEL_27:
            if (((unint64_t)v24 & 0x7FFFFFFFFFFFFFFFLL) == v21)
            {
              while (1)
              {
                int v23 = (uint64_t **)*v23;
                if (!v23) {
                  break;
                }
                id v24 = v23[1];
                if (((unint64_t)v24 & 0x8000000000000000) == 0)
                {
                    goto LABEL_27;
                  goto LABEL_31;
                }
              }
            }
          }
        }
      }
    }
    std::mutex::unlock(v4);
    uint64_t v18 = (char *)v37;
  }
  if (v18)
  {
    long long v32 = v38;
    uint64_t v33 = v18;
    if (v38 != v18)
    {
      do
      {
        long long v34 = (std::__shared_weak_count *)*((void *)v32 - 1);
        if (v34 && !atomic_fetch_add(&v34->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
        }
        uint64_t v35 = *((void *)v32 - 5);
        if (v35) {
          (*(void (**)(uint64_t))(*(void *)v35 + 8))(v35);
        }
        v32 -= 48;
      }
      while (v32 != v18);
      uint64_t v33 = v37;
    }
    uint64_t v38 = v18;
    operator delete(v33);
  }
  if (p_buf != &buf)
  {
    if (p_buf) {
      (*(void (**)(long long *))(*(void *)p_buf + 40))(p_buf);
    }
    if ((SHIBYTE(v40) & 0x80000000) == 0) {
      goto LABEL_42;
    }
    goto LABEL_73;
  }
  (*(void (**)(long long *))(buf + 32))(&buf);
  if (SHIBYTE(v40) < 0) {
LABEL_73:
  }
    operator delete(v39[0]);
LABEL_42:
  std::string::size_type v27 = (char *)__p;
  if (!__p) {
    return;
  }
  int v28 = v42;
  id v29 = __p;
  if (v42 == __p) {
    goto LABEL_53;
  }
  do
  {
    uint64_t v30 = (std::__shared_weak_count *)*((void *)v28 - 1);
    if (!v30 || atomic_fetch_add(&v30->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      uint64_t v31 = *((void *)v28 - 5);
      if (!v31) {
        goto LABEL_45;
      }
LABEL_49:
      (*(void (**)(uint64_t))(*(void *)v31 + 8))(v31);
      goto LABEL_45;
    }
    ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
    std::__shared_weak_count::__release_weak(v30);
    uint64_t v31 = *((void *)v28 - 5);
    if (v31) {
      goto LABEL_49;
    }
LABEL_45:
    v28 -= 48;
  }
  while (v28 != v27);
  id v29 = __p;
LABEL_53:
  std::string::size_type v42 = v27;
  operator delete(v29);
}

void sub_100351978(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,uint64_t a32,char a33)
{
  sub_100161124(&a21);
  sub_10034EC6C((void *)(v33 - 128));
  if (a29 < 0)
  {
    operator delete(__p);
    sub_100161124(&a30);
    _Unwind_Resume(a1);
  }
  sub_100161124(&a30);
  _Unwind_Resume(a1);
}

uint64_t sub_100351AF4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32))
  {
    if (*(char *)(a1 + 71) < 0) {
      operator delete(*(void **)(a1 + 48));
    }
    *(unsigned char *)(a1 + 32) = 0;
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_100351B58()
{
}

__n128 sub_100351B6C(uint64_t a1)
{
  uint64_t v2 = (char *)operator new(0x18uLL);
  *(void *)uint64_t v2 = off_100469630;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + ++*(void *)(result + 8) = result;
  return result;
}

__n128 sub_100351BB8(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_100469630;
  __n128 result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + ++*(void *)(result + 8) = result;
  return result;
}

void sub_100351BE8(uint64_t a1, uint64_t *a2)
{
}

uint64_t sub_100351BF0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN8EventBus15notifyListenersIN7actions9upload_db11StateChangeEEEvOT_EUlRKN9event_bus21GenericCallbackHandleEE_") {
    return a1 + 8;
  }
  if (((v3 & (unint64_t)"ZN8EventBus15notifyListenersIN7actions9upload_db11StateChangeEEEvOT_EUlRKN9event_bus21Ge"
                                "nericCallbackHandleEE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN8EventBus15notifyListenersIN7actions9upload_db11StateChangeEEEvOT_EUlRKN9event_bus21GenericCallbackHandleEE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN8EventBus15notifyListenersIN7actions9upload_db11StateChangeEEEvOT_EUlRKN9event_bus21GenericCallbackHandleEE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

_UNKNOWN **sub_100351C60()
{
}

void sub_100351C6C(void *a1, uint64_t *a2)
{
  uint64_t v3 = a2[4];
  unint64_t v5 = (long long *)*a1;
  uint64_t v4 = a1[1];
  if (*(char *)(*a1 + 23) < 0)
  {
    sub_1000559FC(v11, *(void **)v5, *((void *)v5 + 1));
  }
  else
  {
    long long v6 = *v5;
    uint64_t v12 = *((void *)v5 + 2);
    *(_OWORD *)uint64_t v11 = v6;
  }
  int v13 = *((_DWORD *)v5 + 6);
  char v14 = 0;
  if (*((unsigned char *)v5 + 32))
  {
    int v15 = *((_DWORD *)v5 + 10);
    if (*((char *)v5 + 71) < 0)
    {
      sub_1000559FC(&__p, *((void **)v5 + 6), *((void *)v5 + 7));
    }
    else
    {
      long long v7 = v5[3];
      uint64_t v17 = *((void *)v5 + 8);
      long long __p = v7;
    }
    char v14 = 1;
  }
  uint64_t v8 = a2[1];
  uint64_t v18 = *a2;
  if (v8) {
    uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 24))(v8);
  }
  uint64_t v19 = v8;
  long long v20 = *((_OWORD *)a2 + 1);
  int v9 = (std::__shared_weak_count *)a2[5];
  uint64_t v21 = a2[4];
  uint64_t v22 = v9;
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  sub_100351EA0(v3, v4, (long long *)v11);
  char v10 = v22;
  if (v22 && !atomic_fetch_add(&v22->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  if (v19) {
    (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
  }
  if (v14)
  {
    if (SHIBYTE(v17) < 0) {
      operator delete((void *)__p);
    }
    char v14 = 0;
  }
  if (SHIBYTE(v12) < 0) {
    operator delete(v11[0]);
  }
}

void sub_100351E50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100351E78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100351E8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100351EA0(uint64_t a1, uint64_t a2, long long *a3)
{
  sub_1003521B4((char *)v7, a3);
  int v15 = 0;
  unint64_t v5 = operator new(0x80uLL);
  *unint64_t v5 = off_1004696A0;
  sub_100352850((uint64_t)(v5 + 1), (long long *)v7);
  int v15 = v5;
  (*(void (**)(uint64_t, uint64_t, void *))(*(void *)a1 + 16))(a1, a2, v14);
  if (v15 == v14)
  {
    (*(void (**)(void *))(v14[0] + 32))(v14);
    long long v6 = v13;
    if (!v13) {
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  if (v15) {
    (*(void (**)(void *))(*v15 + 40))(v15);
  }
  long long v6 = v13;
  if (v13)
  {
LABEL_7:
    if (!atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
LABEL_9:
  if (v12) {
    (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
  }
  if (v9)
  {
    if (v11 < 0) {
      operator delete(__p);
    }
    char v9 = 0;
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
}

void sub_100352084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_1001F505C((void *)(v9 - 72));
  sub_1003520D4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1003520A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  operator delete(v9);
  sub_1003520D4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1003520BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1003520D4(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 112);
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    uint64_t v3 = *(void *)(a1 + 80);
    if (!v3) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  uint64_t v3 = *(void *)(a1 + 80);
  if (v3) {
LABEL_4:
  }
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
LABEL_5:
  if (*(unsigned char *)(a1 + 32))
  {
    if (*(char *)(a1 + 71) < 0) {
      operator delete(*(void **)(a1 + 48));
    }
    *(unsigned char *)(a1 + 32) = 0;
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

char *sub_1003521B4(char *__dst, long long *a2)
{
  if ((*((char *)a2 + 23) & 0x80000000) == 0)
  {
    long long v4 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v4;
    *((_DWORD *)__dst + 6) = *((_DWORD *)a2 + 6);
    __dst[32] = 0;
    if (!*((unsigned char *)a2 + 32)) {
      goto LABEL_3;
    }
LABEL_6:
    *((_DWORD *)__dst + 10) = *((_DWORD *)a2 + 10);
    long long v6 = __dst + 48;
    if (*((char *)a2 + 71) < 0)
    {
      sub_1000559FC(v6, *((void **)a2 + 6), *((void *)a2 + 7));
    }
    else
    {
      long long v7 = a2[3];
      *((void *)__dst + ++*(void *)(result + 8) = *((void *)a2 + 8);
      *(_OWORD *)long long v6 = v7;
    }
    __dst[32] = 1;
    uint64_t v5 = *((void *)a2 + 10);
    *((void *)__dst + 9) = *((void *)a2 + 9);
    if (!v5) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  sub_1000559FC(__dst, *(void **)a2, *((void *)a2 + 1));
  *((_DWORD *)__dst + 6) = *((_DWORD *)a2 + 6);
  __dst[32] = 0;
  if (*((unsigned char *)a2 + 32)) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v5 = *((void *)a2 + 10);
  *((void *)__dst + 9) = *((void *)a2 + 9);
  if (v5) {
LABEL_10:
  }
    uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 24))(v5);
LABEL_11:
  *((void *)__dst + 10) = v5;
  *(_OWORD *)(__dst + 8++*(void *)(result + 8) = *(long long *)((char *)a2 + 88);
  uint64_t v8 = *((void *)a2 + 14);
  *((void *)__dst + 13) = *((void *)a2 + 13);
  *((void *)__dst + 14) = v8;
  if (v8) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
  }
  return __dst;
}

void sub_1003522C8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003522E4(_Unwind_Exception *a1)
{
  sub_100351AF4(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1003522F8(uint64_t a1)
{
  *(void *)a1 = off_1004696A0;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 120);
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    uint64_t v3 = *(void *)(a1 + 88);
    if (!v3) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  uint64_t v3 = *(void *)(a1 + 88);
  if (v3) {
LABEL_4:
  }
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
LABEL_5:
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(char *)(a1 + 79) < 0) {
      operator delete(*(void **)(a1 + 56));
    }
    *(unsigned char *)(a1 + 40) = 0;
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void sub_1003523F4(uint64_t a1)
{
  *(void *)a1 = off_1004696A0;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 120);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = *(void *)(a1 + 88);
    if (!v3)
    {
LABEL_5:
      if (*(unsigned char *)(a1 + 40))
      {
        if (*(char *)(a1 + 79) < 0) {
          operator delete(*(void **)(a1 + 56));
        }
        *(unsigned char *)(a1 + 40) = 0;
      }
      if (*(char *)(a1 + 31) < 0) {
        operator delete(*(void **)(a1 + 8));
      }
      operator delete();
    }
  }
  else
  {
    uint64_t v3 = *(void *)(a1 + 88);
    if (!v3) {
      goto LABEL_5;
    }
  }
  (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
  goto LABEL_5;
}

char *sub_100352500(uint64_t a1)
{
  uint64_t v1 = (long long *)(a1 + 8);
  uint64_t v2 = (char *)operator new(0x80uLL);
  *(void *)uint64_t v2 = off_1004696A0;
  sub_1003521B4(v2 + 8, v1);
  return v2;
}

void sub_100352554(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

char *sub_100352568(uint64_t a1, uint64_t a2)
{
  *(void *)a2 = off_1004696A0;
  return sub_1003521B4((char *)(a2 + 8), (long long *)(a1 + 8));
}

void sub_100352594(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 120);
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    uint64_t v3 = *(void *)(a1 + 88);
    if (!v3) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  uint64_t v3 = *(void *)(a1 + 88);
  if (v3) {
LABEL_4:
  }
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
LABEL_5:
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(char *)(a1 + 79) < 0) {
      operator delete(*(void **)(a1 + 56));
    }
    *(unsigned char *)(a1 + 40) = 0;
  }
  if (*(char *)(a1 + 31) < 0)
  {
    long long v4 = *(void **)(a1 + 8);
    operator delete(v4);
  }
}

void sub_100352678(char *__p)
{
  uint64_t v2 = (std::__shared_weak_count *)*((void *)__p + 15);
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    uint64_t v3 = *((void *)__p + 11);
    if (!v3) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  uint64_t v3 = *((void *)__p + 11);
  if (v3) {
LABEL_4:
  }
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
LABEL_5:
  if (__p[40])
  {
    if (__p[79] < 0) {
      operator delete(*((void **)__p + 7));
    }
    __p[40] = 0;
  }
  if (__p[31] < 0)
  {
    operator delete(*((void **)__p + 1));
    long long v4 = __p;
  }
  else
  {
    long long v4 = __p;
  }
  operator delete(v4);
}

uint64_t sub_100352778(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 96) + 24);
  if (!v1) {
    sub_10008F39C();
  }
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v1 + 48);

  return v2();
}

uint64_t sub_1003527D4(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZZN8EventBus15notifyListenersIN7actions9upload_db11StateChangeEEEvOT_ENKUlRKN9event_bus21GenericCal"
                     "lbackHandleEE_clES9_EUlvE_")
    return a1 + 8;
  if (((v3 & (unint64_t)"ZZN8EventBus15notifyListenersIN7actions9upload_db11StateChangeEEEvOT_ENKUlRKN9event_bus2"
                                "1GenericCallbackHandleEE_clES9_EUlvE_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZZN8EventBus15notifyListenersIN7actions9upload_db11StateChangeEEEvOT_ENKUlRKN9event_bus21GenericCallbackHandleEE_clES9_EUlvE_"))return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZZN8EventBus15notifyListenersIN7actions9upload_db11StateChangeEEEvOT_ENKUlRKN9event_bus21GenericCallbackHandleEE_clES9_EUlvE_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 8; {
  return 0;
  }
}

_UNKNOWN **sub_100352844()
{
}

uint64_t sub_100352850(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(_OWORD *)a1 = v4;
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *(void *)a2 = 0;
  *(_DWORD *)(a1 + ++*(void *)(result + 24) = *((_DWORD *)a2 + 6);
  *(unsigned char *)(a1 + 32) = 0;
  if (*((unsigned char *)a2 + 32))
  {
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    long long v5 = a2[3];
    *(void *)(a1 + 64) = *((void *)a2 + 8);
    *(_OWORD *)(a1 + 4++*(void *)(result + 8) = v5;
    *((void *)a2 + 7) = 0;
    *((void *)a2 + ++*(void *)(result + 8) = 0;
    *((void *)a2 + 6) = 0;
    *(unsigned char *)(a1 + 32) = 1;
  }
  uint64_t v6 = *((void *)a2 + 10);
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  if (v6) {
    uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24))(v6);
  }
  *(void *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 8++*(void *)(result + 8) = *(long long *)((char *)a2 + 88);
  uint64_t v7 = *((void *)a2 + 14);
  *(void *)(a1 + 104) = *((void *)a2 + 13);
  *(void *)(a1 + 112) = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
  }
  return a1;
}

void sub_100352920(_Unwind_Exception *a1)
{
  if (*(unsigned char *)(v1 + 32))
  {
    if (*(char *)(v1 + 71) < 0) {
      operator delete(*(void **)(v1 + 48));
    }
    *(unsigned char *)(v1 + 32) = 0;
  }
  sub_1003A7610(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100352950(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    if (!atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_1003529CC(uint64_t a1)
{
  uint64_t v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1 && !atomic_fetch_add(&v1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
    std::__shared_weak_count::__release_weak(v1);
  }

  operator delete();
}

_UNKNOWN **sub_100352A58()
{
}

void sub_100352A64()
{
}

uint64_t *sub_100352AD0(uint64_t a1, uint64_t a2, uint64_t a3, long long **a4)
{
  uint64_t v6 = (unsigned char *)a2;
  unint64_t v8 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v9 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v9 = v8;
  }
  unint64_t v10 = sub_100077FAC((uint64_t)v45, (uint64_t *)a2, v9);
  unint64_t v11 = v10;
  unint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    if (v13.u32[0] > 1uLL)
    {
      unint64_t v4 = v10;
      if (v10 >= v12) {
        unint64_t v4 = v10 % v12;
      }
    }
    else
    {
      unint64_t v4 = (v12 - 1) & v10;
    }
    char v14 = *(uint64_t ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      int v15 = *v14;
      if (*v14)
      {
        char v16 = v6[23];
        if (v16 >= 0) {
          uint64_t v17 = v6[23];
        }
        else {
          uint64_t v17 = *((void *)v6 + 1);
        }
        if (v16 < 0) {
          uint64_t v6 = *(unsigned char **)v6;
        }
        if (v13.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v22 = v15[1];
            if (v22 == v11)
            {
              uint64_t v23 = *((unsigned __int8 *)v15 + 39);
              if ((v23 & 0x80u) == 0) {
                uint64_t v24 = *((unsigned __int8 *)v15 + 39);
              }
              else {
                uint64_t v24 = v15[3];
              }
              if (v24 == v17)
              {
                if ((v23 & 0x80) != 0)
                {
                  if (!memcmp((const void *)v15[2], v6, v15[3])) {
                    return v15;
                  }
                }
                else
                {
                  if (!*((unsigned char *)v15 + 39)) {
                    return v15;
                  }
                  uint64_t v25 = 0;
                  while (*((unsigned __int8 *)v15 + v25 + 16) == v6[v25])
                  {
                    if (v23 == ++v25) {
                      return v15;
                    }
                  }
                }
              }
            }
            else if ((v22 & (v12 - 1)) != v4)
            {
              goto LABEL_51;
            }
            int v15 = (uint64_t *)*v15;
            if (!v15) {
              goto LABEL_51;
            }
          }
        }
        do
        {
          unint64_t v18 = v15[1];
          if (v18 == v11)
          {
            uint64_t v19 = *((unsigned __int8 *)v15 + 39);
            if ((v19 & 0x80u) == 0) {
              uint64_t v20 = *((unsigned __int8 *)v15 + 39);
            }
            else {
              uint64_t v20 = v15[3];
            }
            if (v20 == v17)
            {
              if ((v19 & 0x80) != 0)
              {
                if (!memcmp((const void *)v15[2], v6, v15[3])) {
                  return v15;
                }
              }
              else
              {
                if (!*((unsigned char *)v15 + 39)) {
                  return v15;
                }
                uint64_t v21 = 0;
                while (*((unsigned __int8 *)v15 + v21 + 16) == v6[v21])
                {
                  if (v19 == ++v21) {
                    return v15;
                  }
                }
              }
            }
          }
          else
          {
            if (v18 >= v12) {
              v18 %= v12;
            }
            if (v18 != v4) {
              break;
            }
          }
          int v15 = (uint64_t *)*v15;
        }
        while (v15);
      }
    }
  }
LABEL_51:
  std::string::size_type v26 = (char *)operator new(0x30uLL);
  v45[0] = v26;
  v45[1] = a1 + 16;
  char v46 = 0;
  *(void *)std::string::size_type v26 = 0;
  *((void *)v26 + 1) = v11;
  std::string::size_type v27 = v26 + 16;
  int v28 = *a4;
  if (*((char *)*a4 + 23) < 0)
  {
    sub_1000559FC(v27, *(void **)v28, *((void *)v28 + 1));
  }
  else
  {
    long long v29 = *v28;
    *((void *)v26 + 4) = *((void *)v28 + 2);
    *(_OWORD *)std::string::size_type v27 = v29;
  }
  *((_DWORD *)v26 + 10) = 0;
  char v46 = 1;
  float v30 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v31 = *(float *)(a1 + 32);
  if (!v12 || (float)(v31 * (float)v12) < v30)
  {
    BOOL v34 = 1;
    if (v12 >= 3) {
      BOOL v34 = (v12 & (v12 - 1)) != 0;
    }
    unint64_t v35 = v34 | (2 * v12);
    unint64_t v36 = vcvtps_u32_f32(v30 / v31);
    if (v35 <= v36) {
      size_t prime = v36;
    }
    else {
      size_t prime = v35;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
    }
    int8x8_t v38 = *(int8x8_t *)(a1 + 8);
    if (prime > *(void *)&v38) {
      goto LABEL_68;
    }
    if (prime < *(void *)&v38)
    {
      unint64_t v39 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(void *)&v38 < 3uLL || (uint8x8_t v40 = (uint8x8_t)vcnt_s8(v38), v40.i16[0] = vaddlv_u8(v40), v40.u32[0] > 1uLL))
      {
        unint64_t v39 = std::__next_prime(v39);
      }
      else
      {
        uint64_t v41 = 1 << -(char)__clz(v39 - 1);
        if (v39 >= 2) {
          unint64_t v39 = v41;
        }
      }
      if (prime <= v39) {
        size_t prime = v39;
      }
      if (prime < *(void *)&v38) {
LABEL_68:
      }
        sub_10006338C(a1, prime);
    }
    unint64_t v12 = *(void *)(a1 + 8);
    unint64_t v42 = v12 - 1;
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12)
      {
        unint64_t v4 = v11 % v12;
        long long v32 = *(void **)(*(void *)a1 + 8 * (v11 % v12));
        uint64_t v33 = (void *)v45[0];
        if (v32) {
          goto LABEL_57;
        }
      }
      else
      {
        unint64_t v4 = v11;
        long long v32 = *(void **)(*(void *)a1 + 8 * v11);
        uint64_t v33 = (void *)v45[0];
        if (v32) {
          goto LABEL_57;
        }
      }
    }
    else
    {
      unint64_t v4 = v42 & v11;
      long long v32 = *(void **)(*(void *)a1 + 8 * (v42 & v11));
      uint64_t v33 = (void *)v45[0];
      if (v32) {
        goto LABEL_57;
      }
    }
LABEL_81:
    *uint64_t v33 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v45[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v45[0])
    {
      unint64_t v43 = *(void *)(*(void *)v45[0] + 8);
      if ((v12 & (v12 - 1)) != 0)
      {
        if (v43 >= v12) {
          v43 %= v12;
        }
      }
      else
      {
        v43 &= v12 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v43) = v45[0];
    }
    goto LABEL_92;
  }
  long long v32 = *(void **)(*(void *)a1 + 8 * v4);
  uint64_t v33 = (void *)v45[0];
  if (!v32) {
    goto LABEL_81;
  }
LABEL_57:
  *uint64_t v33 = *v32;
  *long long v32 = v45[0];
LABEL_92:
  int v15 = (uint64_t *)v45[0];
  ++*(void *)(a1 + 24);
  return v15;
}

void sub_100352F18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DF398((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_100352F2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DF398((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_100352F44(uint64_t a1, uint64_t a2, uint64_t a3, long long **a4)
{
  uint64_t v6 = (unsigned char *)a2;
  unint64_t v8 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v9 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v9 = v8;
  }
  unint64_t v10 = sub_100077FAC((uint64_t)v45, (uint64_t *)a2, v9);
  unint64_t v11 = v10;
  unint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    if (v13.u32[0] > 1uLL)
    {
      unint64_t v4 = v10;
      if (v10 >= v12) {
        unint64_t v4 = v10 % v12;
      }
    }
    else
    {
      unint64_t v4 = (v12 - 1) & v10;
    }
    char v14 = *(uint64_t ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      int v15 = *v14;
      if (*v14)
      {
        char v16 = v6[23];
        if (v16 >= 0) {
          uint64_t v17 = v6[23];
        }
        else {
          uint64_t v17 = *((void *)v6 + 1);
        }
        if (v16 < 0) {
          uint64_t v6 = *(unsigned char **)v6;
        }
        if (v13.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v22 = v15[1];
            if (v22 == v11)
            {
              uint64_t v23 = *((unsigned __int8 *)v15 + 39);
              if ((v23 & 0x80u) == 0) {
                uint64_t v24 = *((unsigned __int8 *)v15 + 39);
              }
              else {
                uint64_t v24 = v15[3];
              }
              if (v24 == v17)
              {
                if ((v23 & 0x80) != 0)
                {
                  if (!memcmp((const void *)v15[2], v6, v15[3])) {
                    return v15;
                  }
                }
                else
                {
                  if (!*((unsigned char *)v15 + 39)) {
                    return v15;
                  }
                  uint64_t v25 = 0;
                  while (*((unsigned __int8 *)v15 + v25 + 16) == v6[v25])
                  {
                    if (v23 == ++v25) {
                      return v15;
                    }
                  }
                }
              }
            }
            else if ((v22 & (v12 - 1)) != v4)
            {
              goto LABEL_51;
            }
            int v15 = (uint64_t *)*v15;
            if (!v15) {
              goto LABEL_51;
            }
          }
        }
        do
        {
          unint64_t v18 = v15[1];
          if (v18 == v11)
          {
            uint64_t v19 = *((unsigned __int8 *)v15 + 39);
            if ((v19 & 0x80u) == 0) {
              uint64_t v20 = *((unsigned __int8 *)v15 + 39);
            }
            else {
              uint64_t v20 = v15[3];
            }
            if (v20 == v17)
            {
              if ((v19 & 0x80) != 0)
              {
                if (!memcmp((const void *)v15[2], v6, v15[3])) {
                  return v15;
                }
              }
              else
              {
                if (!*((unsigned char *)v15 + 39)) {
                  return v15;
                }
                uint64_t v21 = 0;
                while (*((unsigned __int8 *)v15 + v21 + 16) == v6[v21])
                {
                  if (v19 == ++v21) {
                    return v15;
                  }
                }
              }
            }
          }
          else
          {
            if (v18 >= v12) {
              v18 %= v12;
            }
            if (v18 != v4) {
              break;
            }
          }
          int v15 = (uint64_t *)*v15;
        }
        while (v15);
      }
    }
  }
LABEL_51:
  std::string::size_type v26 = operator new(0x40uLL);
  v45[0] = v26;
  v45[1] = a1 + 16;
  char v46 = 0;
  *std::string::size_type v26 = 0;
  v26[1] = v11;
  std::string::size_type v27 = v26 + 2;
  int v28 = *a4;
  if (*((char *)*a4 + 23) < 0)
  {
    sub_1000559FC(v27, *(void **)v28, *((void *)v28 + 1));
  }
  else
  {
    long long v29 = *v28;
    v26[4] = *((void *)v28 + 2);
    *(_OWORD *)std::string::size_type v27 = v29;
  }
  v26[6] = 0;
  v26[7] = 0;
  v26[5] = v26 + 6;
  char v46 = 1;
  float v30 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v31 = *(float *)(a1 + 32);
  if (!v12 || (float)(v31 * (float)v12) < v30)
  {
    BOOL v34 = 1;
    if (v12 >= 3) {
      BOOL v34 = (v12 & (v12 - 1)) != 0;
    }
    unint64_t v35 = v34 | (2 * v12);
    unint64_t v36 = vcvtps_u32_f32(v30 / v31);
    if (v35 <= v36) {
      size_t prime = v36;
    }
    else {
      size_t prime = v35;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
    }
    int8x8_t v38 = *(int8x8_t *)(a1 + 8);
    if (prime > *(void *)&v38) {
      goto LABEL_68;
    }
    if (prime < *(void *)&v38)
    {
      unint64_t v39 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(void *)&v38 < 3uLL || (uint8x8_t v40 = (uint8x8_t)vcnt_s8(v38), v40.i16[0] = vaddlv_u8(v40), v40.u32[0] > 1uLL))
      {
        unint64_t v39 = std::__next_prime(v39);
      }
      else
      {
        uint64_t v41 = 1 << -(char)__clz(v39 - 1);
        if (v39 >= 2) {
          unint64_t v39 = v41;
        }
      }
      if (prime <= v39) {
        size_t prime = v39;
      }
      if (prime < *(void *)&v38) {
LABEL_68:
      }
        sub_10006338C(a1, prime);
    }
    unint64_t v12 = *(void *)(a1 + 8);
    unint64_t v42 = v12 - 1;
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12)
      {
        unint64_t v4 = v11 % v12;
        long long v32 = *(void **)(*(void *)a1 + 8 * (v11 % v12));
        uint64_t v33 = (void *)v45[0];
        if (v32) {
          goto LABEL_57;
        }
      }
      else
      {
        unint64_t v4 = v11;
        long long v32 = *(void **)(*(void *)a1 + 8 * v11);
        uint64_t v33 = (void *)v45[0];
        if (v32) {
          goto LABEL_57;
        }
      }
    }
    else
    {
      unint64_t v4 = v42 & v11;
      long long v32 = *(void **)(*(void *)a1 + 8 * (v42 & v11));
      uint64_t v33 = (void *)v45[0];
      if (v32) {
        goto LABEL_57;
      }
    }
LABEL_81:
    *uint64_t v33 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v45[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v45[0])
    {
      unint64_t v43 = *(void *)(*(void *)v45[0] + 8);
      if ((v12 & (v12 - 1)) != 0)
      {
        if (v43 >= v12) {
          v43 %= v12;
        }
      }
      else
      {
        v43 &= v12 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v43) = v45[0];
    }
    goto LABEL_92;
  }
  long long v32 = *(void **)(*(void *)a1 + 8 * v4);
  uint64_t v33 = (void *)v45[0];
  if (!v32) {
    goto LABEL_81;
  }
LABEL_57:
  *uint64_t v33 = *v32;
  *long long v32 = v45[0];
LABEL_92:
  int v15 = (uint64_t *)v45[0];
  ++*(void *)(a1 + 24);
  return v15;
}

void sub_100353390(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1003533BC((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1003533A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1003533BC((uint64_t *)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_1003533BC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((unsigned char *)a1 + 16))
    {
      sub_1001B1F9C(v2 + 40, *(char **)(v2 + 48));
      if (*(char *)(v2 + 39) < 0) {
        operator delete(*(void **)(v2 + 16));
      }
    }
    operator delete((void *)v2);
  }
  return a1;
}

uint64_t *sub_100353418(uint64_t **a1, const void **a2, uint64_t a3)
{
  uint64_t v6 = a1 + 1;
  long long v5 = a1[1];
  if (v5)
  {
    int v7 = *((char *)a2 + 23);
    if (v7 >= 0) {
      size_t v8 = *((unsigned __int8 *)a2 + 23);
    }
    else {
      size_t v8 = (size_t)a2[1];
    }
    if (v7 >= 0) {
      unint64_t v9 = a2;
    }
    else {
      unint64_t v9 = *a2;
    }
    do
    {
      while (1)
      {
        unint64_t v10 = (uint64_t **)v5;
        uint8x8_t v13 = (const void *)v5[4];
        unint64_t v11 = v5 + 4;
        unint64_t v12 = v13;
        int v14 = *((char *)v11 + 23);
        if (v14 >= 0) {
          size_t v15 = *((unsigned __int8 *)v11 + 23);
        }
        else {
          size_t v15 = v11[1];
        }
        if (v14 >= 0) {
          char v16 = v11;
        }
        else {
          char v16 = v12;
        }
        if (v15 >= v8) {
          size_t v17 = v8;
        }
        else {
          size_t v17 = v15;
        }
        int v18 = memcmp(v9, v16, v17);
        BOOL v19 = v8 < v15;
        if (v18) {
          BOOL v19 = v18 < 0;
        }
        if (!v19) {
          break;
        }
        long long v5 = *v10;
        uint64_t v6 = v10;
        if (!*v10) {
          goto LABEL_26;
        }
      }
      int v20 = memcmp(v16, v9, v17);
      BOOL v21 = v15 < v8;
      if (v20) {
        BOOL v21 = v20 < 0;
      }
      if (!v21) {
        return (uint64_t *)v10;
      }
      long long v5 = v10[1];
    }
    while (v5);
    uint64_t v6 = v10 + 1;
LABEL_26:
    uint64_t v22 = (uint64_t *)operator new(0x38uLL);
    uint64_t v23 = v22 + 4;
    if (*(char *)(a3 + 23) < 0) {
      goto LABEL_29;
    }
  }
  else
  {
    unint64_t v10 = a1 + 1;
    uint64_t v22 = (uint64_t *)operator new(0x38uLL);
    uint64_t v23 = v22 + 4;
    if (*(char *)(a3 + 23) < 0)
    {
LABEL_29:
      sub_1000559FC(v23, *(void **)a3, *(void *)(a3 + 8));
      goto LABEL_30;
    }
  }
  *(_OWORD *)uint64_t v23 = *(_OWORD *)a3;
  v23[2] = *(void *)(a3 + 16);
LABEL_30:
  *uint64_t v22 = 0;
  v22[1] = 0;
  v22[2] = (uint64_t)v10;
  *uint64_t v6 = v22;
  uint64_t v24 = (uint64_t *)**a1;
  uint64_t v25 = v22;
  if (v24)
  {
    *a1 = v24;
    uint64_t v25 = *v6;
  }
  sub_1000619B8(a1[1], v25);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return v22;
}

void sub_1003535B0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

std::string *sub_1003535C4@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_1003535F8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100353614(void *a1, uint64_t a2)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = (uint64_t *)a1[1];
  if (!v2) {
    return 0;
  }
  char v5 = *(unsigned char *)(a2 + 23);
  size_t v6 = v5 >= 0 ? *(unsigned __int8 *)(a2 + 23) : *(void *)(a2 + 8);
  int v7 = v5 >= 0 ? (const void *)a2 : *(const void **)a2;
  size_t v8 = a1 + 1;
  uint64_t v9 = a1[1];
  do
  {
    int v10 = *(char *)(v9 + 55);
    if (v10 >= 0) {
      size_t v11 = *(unsigned __int8 *)(v9 + 55);
    }
    else {
      size_t v11 = *(void *)(v9 + 40);
    }
    if (v10 >= 0) {
      unint64_t v12 = (const void *)(v9 + 32);
    }
    else {
      unint64_t v12 = *(const void **)(v9 + 32);
    }
    if (v6 >= v11) {
      size_t v13 = v11;
    }
    else {
      size_t v13 = v6;
    }
    int v14 = memcmp(v12, v7, v13);
    BOOL v15 = v11 < v6;
    if (v14) {
      BOOL v15 = v14 < 0;
    }
    BOOL v16 = !v15;
    if (v15) {
      size_t v17 = (uint64_t *)(v9 + 8);
    }
    else {
      size_t v17 = (uint64_t *)v9;
    }
    if (v16) {
      size_t v8 = (void *)v9;
    }
    uint64_t v9 = *v17;
  }
  while (*v17);
  if (v8 == v3) {
    return 0;
  }
  int v18 = *((char *)v8 + 55);
  if (v18 >= 0) {
    size_t v19 = *((unsigned __int8 *)v8 + 55);
  }
  else {
    size_t v19 = v8[5];
  }
  if (v18 >= 0) {
    int v20 = v8 + 4;
  }
  else {
    int v20 = (const void *)v8[4];
  }
  if (v19 >= v6) {
    size_t v21 = v6;
  }
  else {
    size_t v21 = v19;
  }
  int v22 = memcmp(v7, v20, v21);
  BOOL v23 = v6 < v19;
  if (v22) {
    BOOL v23 = v22 < 0;
  }
  if (v23) {
    return 0;
  }
  uint64_t v25 = (void *)v8[1];
  if (v25)
  {
    do
    {
      std::string::size_type v26 = v25;
      uint64_t v25 = (void *)*v25;
    }
    while (v25);
  }
  else
  {
    std::string::size_type v27 = v8;
    do
    {
      std::string::size_type v26 = (void *)v27[2];
      BOOL v16 = *v26 == (void)v27;
      std::string::size_type v27 = v26;
    }
    while (!v16);
  }
  if ((void *)*a1 == v8) {
    *a1 = v26;
  }
  --a1[2];
  sub_1002845F8(v2, v8);
  if (*((char *)v8 + 55) < 0) {
    operator delete((void *)v8[4]);
  }
  operator delete(v8);
  return 1;
}

uint64_t *sub_1003537B4(void *a1, uint64_t a2)
{
  uint64_t v2 = (unsigned char *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v5 = v4;
  }
  unint64_t v6 = sub_100077FAC((uint64_t)&v25, (uint64_t *)a2, v5);
  int8x8_t v7 = (int8x8_t)a1[1];
  if (!*(void *)&v7) {
    return 0;
  }
  unint64_t v8 = v6;
  uint8x8_t v9 = (uint8x8_t)vcnt_s8(v7);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    unint64_t v10 = v6;
    if (v6 >= *(void *)&v7) {
      unint64_t v10 = v6 % *(void *)&v7;
    }
  }
  else
  {
    unint64_t v10 = (*(void *)&v7 - 1) & v6;
  }
  unint64_t v12 = *(uint64_t ***)(*a1 + 8 * v10);
  if (v12)
  {
    size_t v13 = *v12;
    if (*v12)
    {
      char v14 = v2[23];
      if (v14 >= 0) {
        uint64_t v15 = v2[23];
      }
      else {
        uint64_t v15 = *((void *)v2 + 1);
      }
      if (v14 < 0) {
        uint64_t v2 = *(unsigned char **)v2;
      }
      if (v9.u32[0] < 2uLL)
      {
        uint64_t v16 = *(void *)&v7 - 1;
        while (1)
        {
          uint64_t v21 = v13[1];
          if (v21 == v8)
          {
            uint64_t v22 = *((unsigned __int8 *)v13 + 39);
            if ((v22 & 0x80u) == 0) {
              uint64_t v23 = *((unsigned __int8 *)v13 + 39);
            }
            else {
              uint64_t v23 = v13[3];
            }
            if (v23 == v15)
            {
              if ((v22 & 0x80) != 0)
              {
                if (!memcmp((const void *)v13[2], v2, v13[3])) {
                  return v13;
                }
              }
              else
              {
                if (!*((unsigned char *)v13 + 39)) {
                  return v13;
                }
                uint64_t v24 = 0;
                while (*((unsigned __int8 *)v13 + v24 + 16) == v2[v24])
                {
                  if (v22 == ++v24) {
                    return v13;
                  }
                }
              }
            }
          }
          else if ((v21 & v16) != v10)
          {
            return 0;
          }
          __n128 result = 0;
          size_t v13 = (uint64_t *)*v13;
          if (!v13) {
            return result;
          }
        }
      }
      while (1)
      {
        unint64_t v17 = v13[1];
        if (v17 == v8)
        {
          uint64_t v18 = *((unsigned __int8 *)v13 + 39);
          if ((v18 & 0x80u) == 0) {
            uint64_t v19 = *((unsigned __int8 *)v13 + 39);
          }
          else {
            uint64_t v19 = v13[3];
          }
          if (v19 == v15)
          {
            if ((v18 & 0x80) != 0)
            {
              if (!memcmp((const void *)v13[2], v2, v13[3])) {
                return v13;
              }
            }
            else
            {
              if (!*((unsigned char *)v13 + 39)) {
                return v13;
              }
              uint64_t v20 = 0;
              while (*((unsigned __int8 *)v13 + v20 + 16) == v2[v20])
              {
                if (v18 == ++v20) {
                  return v13;
                }
              }
            }
          }
        }
        else
        {
          if (v17 >= *(void *)&v7) {
            v17 %= *(void *)&v7;
          }
          if (v17 != v10) {
            return 0;
          }
        }
        __n128 result = 0;
        size_t v13 = (uint64_t *)*v13;
        if (!v13) {
          return result;
        }
      }
    }
  }
  return 0;
}

uint64_t *sub_1003539E4(void *a1, uint64_t a2)
{
  uint64_t v2 = (unsigned char *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v5 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v5 = v4;
  }
  unint64_t v6 = sub_100077FAC((uint64_t)&v25, (uint64_t *)a2, v5);
  int8x8_t v7 = (int8x8_t)a1[1];
  if (!*(void *)&v7) {
    return 0;
  }
  unint64_t v8 = v6;
  uint8x8_t v9 = (uint8x8_t)vcnt_s8(v7);
  v9.i16[0] = vaddlv_u8(v9);
  if (v9.u32[0] > 1uLL)
  {
    unint64_t v10 = v6;
    if (v6 >= *(void *)&v7) {
      unint64_t v10 = v6 % *(void *)&v7;
    }
  }
  else
  {
    unint64_t v10 = (*(void *)&v7 - 1) & v6;
  }
  unint64_t v12 = *(uint64_t ***)(*a1 + 8 * v10);
  if (v12)
  {
    size_t v13 = *v12;
    if (*v12)
    {
      char v14 = v2[23];
      if (v14 >= 0) {
        uint64_t v15 = v2[23];
      }
      else {
        uint64_t v15 = *((void *)v2 + 1);
      }
      if (v14 < 0) {
        uint64_t v2 = *(unsigned char **)v2;
      }
      if (v9.u32[0] < 2uLL)
      {
        uint64_t v16 = *(void *)&v7 - 1;
        while (1)
        {
          uint64_t v21 = v13[1];
          if (v21 == v8)
          {
            uint64_t v22 = *((unsigned __int8 *)v13 + 39);
            if ((v22 & 0x80u) == 0) {
              uint64_t v23 = *((unsigned __int8 *)v13 + 39);
            }
            else {
              uint64_t v23 = v13[3];
            }
            if (v23 == v15)
            {
              if ((v22 & 0x80) != 0)
              {
                if (!memcmp((const void *)v13[2], v2, v13[3])) {
                  return v13;
                }
              }
              else
              {
                if (!*((unsigned char *)v13 + 39)) {
                  return v13;
                }
                uint64_t v24 = 0;
                while (*((unsigned __int8 *)v13 + v24 + 16) == v2[v24])
                {
                  if (v22 == ++v24) {
                    return v13;
                  }
                }
              }
            }
          }
          else if ((v21 & v16) != v10)
          {
            return 0;
          }
          __n128 result = 0;
          size_t v13 = (uint64_t *)*v13;
          if (!v13) {
            return result;
          }
        }
      }
      while (1)
      {
        unint64_t v17 = v13[1];
        if (v17 == v8)
        {
          uint64_t v18 = *((unsigned __int8 *)v13 + 39);
          if ((v18 & 0x80u) == 0) {
            uint64_t v19 = *((unsigned __int8 *)v13 + 39);
          }
          else {
            uint64_t v19 = v13[3];
          }
          if (v19 == v15)
          {
            if ((v18 & 0x80) != 0)
            {
              if (!memcmp((const void *)v13[2], v2, v13[3])) {
                return v13;
              }
            }
            else
            {
              if (!*((unsigned char *)v13 + 39)) {
                return v13;
              }
              uint64_t v20 = 0;
              while (*((unsigned __int8 *)v13 + v20 + 16) == v2[v20])
              {
                if (v18 == ++v20) {
                  return v13;
                }
              }
            }
          }
        }
        else
        {
          if (v17 >= *(void *)&v7) {
            v17 %= *(void *)&v7;
          }
          if (v17 != v10) {
            return 0;
          }
        }
        __n128 result = 0;
        size_t v13 = (uint64_t *)*v13;
        if (!v13) {
          return result;
        }
      }
    }
  }
  return 0;
}

void sub_100353C14()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100353C8C()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100353D04()
{
}

uint64_t sub_100353D2C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(result + 8);
  if (!v3)
  {
    sub_1000AE4B0(v6, "");
    sub_100270054("Attempt to access event buses before they were set", &__p);
    sub_10016A2C4((uint64_t)v6, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v7 < 0) {
      operator delete(v6[0]);
    }
    sub_100149690((uint64_t)&v5);
  }
  uint64_t v4 = *(void *)(result + 16);
  *a2 = v3;
  a2[1] = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_100353E20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100353E64@<X0>(void *a1@<X8>)
{
  id v2 = &_dispatch_main_q;
  __n128 result = operator new(0x30uLL);
  result[1] = 0;
  result[2] = 0;
  *__n128 result = off_100469858;
  result[3] = off_1004698A8;
  result[4] = &_dispatch_main_q;
  result[5] = &stru_1004697E0;
  *a1 = result + 3;
  a1[1] = result;
  return result;
}

void sub_100353EE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100353F04(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (*(unsigned char *)(a1 + 24))
  {
    uint64_t v3 = a1 + 32;
    uint64_t v4 = a1 + 64;
    unint64_t v5 = (char *)operator new(0x48uLL);
    *((void *)v5 + 1) = 0;
    *((void *)v5 + 2) = 0;
    *(void *)unint64_t v5 = off_1004699C0;
    sub_100355210((int)&__dst, v5 + 24, v3, v4);
    *a2 = v5 + 24;
    a2[1] = v5;
    return;
  }
  unint64_t v6 = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, 1uLL, 1);
  id v7 = [v6 objectAtIndex:0];
  unint64_t v8 = (const char *)[v7 UTF8String];
  size_t v9 = strlen(v8);
  if (v9 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  std::string::size_type v10 = v9;
  if (v9 >= 0x17)
  {
    uint64_t v12 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17) {
      uint64_t v12 = v9 | 7;
    }
    uint64_t v13 = v12 + 1;
    p_dst = (std::string *)operator new(v12 + 1);
    __dst.__r_.__value_.__l.__size_ = v10;
    __dst.__r_.__value_.__r.__words[2] = v13 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    goto LABEL_10;
  }
  *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v9;
  p_dst = &__dst;
  if (v9) {
LABEL_10:
  }
    memmove(p_dst, v8, v10);
  p_dst->__r_.__value_.__s.__data_[v10] = 0;
  char v16 = 4;
  strcpy((char *)v15, "base");
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    sub_1000559FC(&__p, __dst.__r_.__value_.__l.__data_, __dst.__r_.__value_.__l.__size_);
  }
  else {
    std::string __p = __dst;
  }
  sub_1000512AC(&__p, (uint64_t)v15);
  char v14 = (char *)operator new(0x48uLL);
  *((void *)v14 + 1) = 0;
  *((void *)v14 + 2) = 0;
  *(void *)char v14 = off_1004699C0;
  sub_100355210((int)&v19, v14 + 24, (uint64_t)&__p, (uint64_t)&__dst);
  *a2 = v14 + 24;
  a2[1] = v14;
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if ((v16 & 0x80000000) == 0) {
      goto LABEL_16;
    }
LABEL_19:
    operator delete(v15[0]);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_17;
    }
LABEL_20:
    operator delete(__dst.__r_.__value_.__l.__data_);
    goto LABEL_17;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  if (v16 < 0) {
    goto LABEL_19;
  }
LABEL_16:
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_20;
  }
LABEL_17:
}

void sub_100354130(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a15 < 0)
  {
    operator delete(__p);
    if ((a28 & 0x80000000) == 0) {
      goto LABEL_6;
    }
  }
  else if ((a28 & 0x80000000) == 0)
  {
LABEL_6:

    _Unwind_Resume(a1);
  }
  operator delete(a23);

  _Unwind_Resume(a1);
}

void sub_1003541F0(uint64_t a1, long long *a2, uint64_t a3)
{
  uint64_t v6 = a1 + 88;
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)v6);
  }
  long long v7 = *a2;
  *(void *)(v6 + 16) = *((void *)a2 + 2);
  *(_OWORD *)uint64_t v6 = v7;
  *((unsigned char *)a2 + 23) = 0;
  *(unsigned char *)a2 = 0;
  if (*(unsigned char *)a3)
  {
    unint64_t v8 = (long long *)(a3 + 8);
    size_t v9 = (void **)(a1 + 120);
    if (*(unsigned char *)(a1 + 112))
    {
      if (*(char *)(a1 + 143) < 0) {
        operator delete(*v9);
      }
      long long v10 = *v8;
      *(void *)(a1 + 136) = *(void *)(a3 + 24);
      *(_OWORD *)size_t v9 = v10;
      *(unsigned char *)(a3 + 31) = 0;
      *(unsigned char *)(a3 + ++*(void *)(result + 8) = 0;
    }
    else
    {
      long long v11 = *v8;
      *(void *)(a1 + 136) = *(void *)(a3 + 24);
      *(_OWORD *)size_t v9 = v11;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + ++*(void *)(result + 24) = 0;
      *(void *)unint64_t v8 = 0;
      *(unsigned char *)(a1 + 112) = 1;
    }
  }
  else if (*(unsigned char *)(a1 + 112))
  {
    if (*(char *)(a1 + 143) < 0) {
      operator delete(*(void **)(a1 + 120));
    }
    *(unsigned char *)(a1 + 112) = 0;
  }
}

void sub_1003542FC(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + 88;
  if (a1[111] < 0)
  {
    unint64_t v5 = +[NSString stringWithUTF8String:*v4];
    if (a1[112]) {
      goto LABEL_3;
    }
LABEL_7:
    long long v7 = 0;
    goto LABEL_8;
  }
  unint64_t v5 = +[NSString stringWithUTF8String:v4];
  if (!a1[112]) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v6 = a1 + 120;
  if (a1[143] < 0) {
    uint64_t v6 = (void *)*v6;
  }
  long long v7 = +[NSString stringWithUTF8String:v6];
LABEL_8:
  unint64_t v8 = +[NSBundle mainBundle];
  size_t v9 = [v8 pathForResource:v5 ofType:v7];

  if (v9)
  {
    long long v10 = +[NSURL fileURLWithPath:v9];
    long long v11 = [v10 absoluteString];
    uint64_t v12 = v11;
    if (v11)
    {
      [v11 ps_STLString];
      *(_OWORD *)(a2 + ++*(void *)(result + 8) = v13;
      *(void *)(a2 + ++*(void *)(result + 24) = v14;
      *(unsigned char *)a2 = 1;
    }
    else
    {
      *(unsigned char *)a2 = 0;
    }
  }
  else
  {
    *(unsigned char *)a2 = 0;
  }
}

void sub_100354440(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100354468(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100354480(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100354490(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003544A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003544BC(uint64_t a1)
{
  sub_1000A1C84(a1);

  operator delete();
}

id sub_1003544F4()
{
  if (qword_10047BED8 == -1)
  {
    uint64_t v0 = (void *)qword_10047BEE0;
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_100469828);
    uint64_t v0 = (void *)qword_10047BEE0;
  }
  return v0;
}

void sub_100354564(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  id v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

void sub_1003545A8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100469858;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1003545C8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100469858;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10035461C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_100354644(uint64_t a1)
{
  return a1;
}

void sub_100354678(uint64_t a1)
{
  operator delete();
}

void sub_1003546CC(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v5 = *(NSObject **)(a1 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_100354AE0;
  block[3] = &unk_100469900;
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1000559FC(__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a2;
    uint64_t v9 = *(void *)(a2 + 16);
  }
  uint64_t v6 = a3[3];
  if (!v6) {
    goto LABEL_7;
  }
  if ((void *)v6 != a3)
  {
    uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 16))(v6);
LABEL_7:
    long long v11 = (void *)v6;
    goto LABEL_9;
  }
  long long v11 = v10;
  (*(void (**)(void *, void *))(*a3 + 24))(a3, v10);
LABEL_9:
  id v12 = objc_retainBlock(*(id *)(a1 + 16));
  if (SHIBYTE(v9) < 0)
  {
    sub_1000559FC(&v14, __p[0], (unint64_t)__p[1]);
  }
  else
  {
    long long v14 = *(_OWORD *)__p;
    uint64_t v15 = v9;
  }
  uint64_t v7 = (uint64_t)v11;
  if (!v11) {
    goto LABEL_15;
  }
  if (v11 != v10)
  {
    uint64_t v7 = (*(uint64_t (**)(void))(*v11 + 16))();
LABEL_15:
    unint64_t v17 = (void *)v7;
    goto LABEL_17;
  }
  unint64_t v17 = v16;
  (*(void (**)(void *, void *))(v10[0] + 24))(v10, v16);
LABEL_17:
  id v18 = objc_retainBlock(v12);
  dispatch_async(v5, block);

  if (v11 == v10)
  {
    (*(void (**)(void *))(v10[0] + 32))(v10);
    if ((SHIBYTE(v9) & 0x80000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_27;
  }
  if (v11) {
    (*(void (**)(void))(*v11 + 40))();
  }
  if (SHIBYTE(v9) < 0) {
LABEL_27:
  }
    operator delete(__p[0]);
LABEL_21:

  if (v17 == v16)
  {
    (*(void (**)(void *))(v16[0] + 32))(v16);
    if ((SHIBYTE(v15) & 0x80000000) == 0) {
      return;
    }
LABEL_29:
    operator delete((void *)v14);
    return;
  }
  if (v17) {
    (*(void (**)(void))(*v17 + 40))();
  }
  if (SHIBYTE(v15) < 0) {
    goto LABEL_29;
  }
}

void sub_100354A04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100354A18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  sub_100354CAC((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_100354A3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100354A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(NSObject **)(a1 + 8);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_100355070;
  block[3] = &unk_100469930;
  void block[4] = a2;
  void block[5] = a3;
  block[6] = a1;
  dispatch_sync(v3, block);
}

void sub_100354AE0(uint64_t a1)
{
}

id sub_100354AF8(uint64_t a1, uint64_t a2)
{
  if (*(char *)(a2 + 55) < 0)
  {
    sub_1000559FC((unsigned char *)(a1 + 32), *(void **)(a2 + 32), *(void *)(a2 + 40));
    uint64_t v5 = *(void *)(a2 + 80);
    if (!v5) {
      goto LABEL_7;
    }
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 4++*(void *)(result + 8) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = v4;
    uint64_t v5 = *(void *)(a2 + 80);
    if (!v5) {
      goto LABEL_7;
    }
  }
  if (v5 == a2 + 56)
  {
    *(void *)(a1 + 80) = a1 + 56;
    (*(void (**)(void))(**(void **)(a2 + 80) + 24))(*(void *)(a2 + 80));
    goto LABEL_9;
  }
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 16))(v5);
LABEL_7:
  *(void *)(a1 + 80) = v5;
LABEL_9:
  id result = objc_retainBlock(*(id *)(a2 + 88));
  *(void *)(a1 + 8++*(void *)(result + 8) = result;
  return result;
}

void sub_100354BD8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 55) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_100354BF4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  if (v2 == a1 + 56)
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 56) + 32))(a1 + 56);
    if ((*(char *)(a1 + 55) & 0x80000000) == 0) {
      return;
    }
    goto LABEL_7;
  }
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
  }
  if (*(char *)(a1 + 55) < 0)
  {
LABEL_7:
    uint64_t v3 = *(void **)(a1 + 32);
    operator delete(v3);
  }
}

uint64_t sub_100354CAC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  if (v2 == a1 + 24)
  {
    (*(void (**)(uint64_t))(*(void *)(a1 + 24) + 32))(a1 + 24);
    if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
      return a1;
    }
  }
  else
  {
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 40))(v2);
    }
    if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
      return a1;
    }
  }
  operator delete(*(void **)a1);
  return a1;
}

void sub_100354D60(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = a4;
  v7[2]();
  uint64_t v6 = *(void *)(a3 + 24);
  if (!v6) {
    sub_10008F39C();
  }
  (*(void (**)(uint64_t))(*(void *)v6 + 48))(v6);
}

void sub_100354E3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{
  _Unwind_Resume(a1);
}

void sub_100354E44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, int buf, long long a17, uint64_t a18)
{
  if (a2)
  {
    if (a2 == 3)
    {
      __cxa_begin_catch(a1);
      sub_10015F2D0();
    }
    uint64_t v20 = __cxa_begin_catch(a1);
    uint64_t v21 = sub_1003544F4();
    BOOL v22 = os_log_type_enabled(v21, OS_LOG_TYPE_ERROR);
    if (a2 == 2)
    {
      if (v22)
      {
        if (*((char *)v18 + 23) < 0) {
          id v18 = (uint64_t *)*v18;
        }
        uint64_t v23 = (*(uint64_t (**)(void *))(*(void *)v20 + 16))(v20);
        long long buf = 136315650;
        WORD2(a17) = 2080;
        *(void *)((char *)&a17 + 6) = v18;
        HIWORD(a17) = 2080;
        a18 = v23;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "Unhandled unwrapped exception executing %s task %s on GL thread: %s", (uint8_t *)&buf, 0x20u);
      }

      __cxa_rethrow();
    }
    if (v22)
    {
      if (*((char *)v18 + 23) >= 0) {
        uint64_t v24 = v18;
      }
      else {
        uint64_t v24 = (uint64_t *)*v18;
      }
      long long buf = 136315394;
      WORD2(a17) = 2080;
      *(void *)((char *)&a17 + 6) = v24;
      _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "Unknown unhandled exception executing %s task %s on GL thread", (uint8_t *)&buf, 0x16u);
    }

    __cxa_rethrow();
  }
  _Unwind_Resume(a1);
}

void sub_100355010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  JUMPOUT(0x100355068);
}

void sub_10035501C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  JUMPOUT(0x100355068);
}

void sub_100355028(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  __cxa_end_catch();
  JUMPOUT(0x100355048);
}

void sub_100355054(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_1000A6954(a1);
  }
  _Unwind_Resume(a1);
}

void sub_100355070(uint64_t *a1)
{
}

__n128 sub_100355088(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[2];
  a1[3].n128_u64[0] = a2[3].n128_u64[0];
  a1[2] = result;
  return result;
}

void sub_10035509C(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100469970;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1003550BC(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100469970;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_100355110(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_100355138(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_1004699C0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100355158(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_1004699C0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_1003551AC(uint64_t a1)
{
  if (*(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    if ((*(char *)(a1 + 47) & 0x80000000) == 0) {
      return;
    }
  }
  else if ((*(char *)(a1 + 47) & 0x80000000) == 0)
  {
    return;
  }
  uint64_t v2 = *(void **)(a1 + 24);

  operator delete(v2);
}

void sub_100355210(int a1, char *__dst, uint64_t a3, uint64_t a4)
{
  if (*(char *)(a3 + 23) < 0)
  {
    sub_1000559FC(__dsta, *(void **)a3, *(void *)(a3 + 8));
    if ((*(char *)(a4 + 23) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    *(_OWORD *)__dsta = *(_OWORD *)a3;
    uint64_t v9 = *(void *)(a3 + 16);
    if ((*(char *)(a4 + 23) & 0x80000000) == 0)
    {
LABEL_3:
      *(_OWORD *)std::string __p = *(_OWORD *)a4;
      uint64_t v7 = *(void *)(a4 + 16);
      goto LABEL_6;
    }
  }
  sub_1000559FC(__p, *(void **)a4, *(void *)(a4 + 8));
LABEL_6:
  sub_100363344(__dst, (long long *)__dsta, (long long *)__p);
  if ((SHIBYTE(v7) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v9) & 0x80000000) == 0) {
      return;
    }
LABEL_10:
    operator delete(__dsta[0]);
    return;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v9) < 0) {
    goto LABEL_10;
  }
}

void sub_1003552D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if ((a21 & 0x80000000) == 0) {
    _Unwind_Resume(exception_object);
  }
  operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_100355324(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100469A10;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100355344(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100469A10;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_100355398(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void *sub_1003553C0(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
    return a1;
  }
  else
  {
    if (v2) {
      (*(void (**)(void *))(*v2 + 40))(v2);
    }
    return a1;
  }
}

void sub_100355450()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1003554C8()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100355540()
{
}

const std::locale::facet *sub_100355568@<X0>(uint64_t a1@<X8>)
{
  sub_100163A20(a1);
  uint64_t v2 = *(unsigned __int8 *)(a1 + 23);
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = *(void *)(a1 + 8);
  }
  if (v2 != 12)
  {
    sub_1000AE4B0(v9, "");
    sub_1001661BC("Improperly formatted wifi mac address", &v11);
    if (*(char *)(a1 + 23) < 0)
    {
      sub_1000559FC(&v12, *(void **)a1, *(void *)(a1 + 8));
    }
    else
    {
      long long v12 = *(_OWORD *)a1;
      uint64_t v13 = *(void *)(a1 + 16);
    }
    sub_10016A2C4((uint64_t)v9, (uint64_t)&v11, 2);
    if (SHIBYTE(v13) < 0)
    {
      operator delete((void *)v12);
      if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_27:
        if ((v10 & 0x80000000) == 0) {
          goto LABEL_28;
        }
LABEL_31:
        operator delete(v9[0]);
LABEL_28:
        sub_1000D11E0((uint64_t)__p);
      }
    }
    else if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_27;
    }
    operator delete(v11.__r_.__value_.__l.__data_);
    if ((v10 & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_31;
  }
  uint64_t v3 = std::locale::classic();
  for (uint64_t i = 0; i != 12; ++i)
  {
    if (*(char *)(a1 + 23) >= 0) {
      uint64_t v5 = (unsigned __int8 *)a1;
    }
    else {
      uint64_t v5 = *(unsigned __int8 **)a1;
    }
    uint64_t v6 = v5[i];
    __n128 result = std::locale::use_facet(v3, &std::ctype<char>::id);
    if ((v6 & 0x80) != 0 || (*((_DWORD *)&result[1].~facet + v6) & 0x10000) == 0)
    {
      sub_1000AE4B0(v9, "");
      sub_1001661BC("Improperly formatted wifi mac address", &v11);
      if (*(char *)(a1 + 23) < 0)
      {
        sub_1000559FC(&v12, *(void **)a1, *(void *)(a1 + 8));
      }
      else
      {
        long long v12 = *(_OWORD *)a1;
        uint64_t v13 = *(void *)(a1 + 16);
      }
      sub_10016A2C4((uint64_t)v9, (uint64_t)&v11, 2);
      if (SHIBYTE(v13) < 0)
      {
        operator delete((void *)v12);
        if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_17:
          if ((v10 & 0x80000000) == 0) {
            goto LABEL_18;
          }
LABEL_21:
          operator delete(v9[0]);
LABEL_18:
          sub_1000D11E0((uint64_t)__p);
        }
      }
      else if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_17;
      }
      operator delete(v11.__r_.__value_.__l.__data_);
      if ((v10 & 0x80000000) == 0) {
        goto LABEL_18;
      }
      goto LABEL_21;
    }
  }
  return result;
}

void sub_1003557D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (*(char *)(v27 + 23) < 0) {
    operator delete(*(void **)v27);
  }
  _Unwind_Resume(exception_object);
}

void sub_100355850(void *a1@<X8>)
{
  id v4 = +[DarwinDeviceInfo currentDevice];
  uint64_t v2 = [v4 name];
  uint64_t v3 = v2;
  if (v2)
  {
    [v2 ps_STLString];
  }
  else
  {
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

void sub_1003558CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1003558E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1003558FC()
{
}

void sub_100355910()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100355988()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100355A00()
{
}

void sub_100355ADC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100355AEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100355FEC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100356000(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,std::bad_cast a22)
{
  uint64_t v24 = *(void **)v22;
  if (*(void *)v22)
  {
    *(void *)(v22 + ++*(void *)(result + 8) = v24;
    operator delete(v24);
    if ((a21 & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else if ((a21 & 0x80000000) == 0)
  {
LABEL_3:
    _Unwind_Resume(a1);
  }
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_1003562D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  if (*(char *)(v10 + 55) < 0) {
    operator delete(*v13);
  }

  if (*(char *)(v10 + 23) < 0)
  {
    operator delete(*(void **)v10);

    _Unwind_Resume(a1);
  }

  _Unwind_Resume(a1);
}

void sub_100356394()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10035640C()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100356484()
{
}

void sub_1003564AC(void *a1@<X8>)
{
}

void sub_100356780()
{
}

void sub_100356830(_Unwind_Exception *a1)
{
  sub_1000243FC(v1);
  _Unwind_Resume(a1);
}

void sub_100356844(void *a1@<X8>)
{
}

void sub_1003569B8()
{
}

void sub_100356A20(_Unwind_Exception *a1)
{
  sub_1000243FC(v1);
  _Unwind_Resume(a1);
}

void sub_100356A34(void *a1@<X8>)
{
}

void sub_100356BA8()
{
}

void sub_100356C10(_Unwind_Exception *a1)
{
  sub_1000243FC(v1);
  _Unwind_Resume(a1);
}

void sub_100356C24(void *a1@<X8>)
{
}

void sub_100356D48()
{
}

void sub_100356D9C(_Unwind_Exception *a1)
{
  sub_1000243FC(v1);
  _Unwind_Resume(a1);
}

void sub_100356DB0(void *a1@<X8>)
{
}

void sub_100356FAC()
{
}

void sub_10035703C(_Unwind_Exception *a1)
{
  sub_1000243FC(v1);
  _Unwind_Resume(a1);
}

void sub_100357050(_Unwind_Exception *a1)
{
  sub_1000243FC(v1);
  _Unwind_Resume(a1);
}

void sub_100357064(void *a1@<X8>)
{
}

void sub_100357238()
{
}

void sub_1003572AC(_Unwind_Exception *a1)
{
  sub_1000243FC(v1);
  _Unwind_Resume(a1);
}

void sub_1003572C0(_Unwind_Exception *a1)
{
  sub_1000243FC(v1);
  _Unwind_Resume(a1);
}

void sub_1003572D4(void *a1@<X8>)
{
}

void sub_1003574B4()
{
}

void sub_100357528(_Unwind_Exception *a1)
{
  sub_1000243FC(v1);
  _Unwind_Resume(a1);
}

void sub_10035753C(_Unwind_Exception *a1)
{
  sub_1000243FC(v1);
  _Unwind_Resume(a1);
}

void sub_100357550(void *a1@<X8>)
{
}

void sub_10035774C()
{
}

void sub_1003577DC(_Unwind_Exception *a1)
{
  sub_1000243FC(v1);
  _Unwind_Resume(a1);
}

void sub_1003577F0(_Unwind_Exception *a1)
{
  sub_1000243FC(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100357804(unsigned int *a1)
{
  if (*a1 - 1 >= 3) {
    return 0;
  }
  else {
    return *a1;
  }
}

void sub_100357818(uint64_t a1@<X1>, char a2@<W4>, uint64_t a3@<X8>)
{
  int v5 = 0;
  uint64_t v6 = *(void *)(a1 + 8);
  int v7 = *(unsigned __int8 *)(a1 + 20);
  int v8 = *(unsigned __int8 *)(a1 + 21);
  unsigned __int8 v40 = 0;
  if ((*(unsigned char *)(a1 + 104) & 2) != 0)
  {
    if (*(char *)(a1 + 47) < 0)
    {
      sub_1000559FC(__p, *(void **)(a1 + 24), *(void *)(a1 + 32));
    }
    else
    {
      *(_OWORD *)std::string __p = *(_OWORD *)(a1 + 24);
      __p[2] = *(void **)(a1 + 40);
    }
    int v5 = 1;
    unsigned __int8 v40 = 1;
  }
  uint64_t v9 = *(__int16 *)(a1 + 48);
  long long v35 = 0uLL;
  uint64_t v36 = 0;
  std::string v11 = *(char **)(a1 + 56);
  uint64_t v10 = *(char **)(a1 + 64);
  uint64_t v12 = v10 - v11;
  if (v10 != v11)
  {
    if (v12 < 0) {
      sub_1000A9108();
    }
    *(void *)&long long v35 = operator new(v10 - v11);
    *((void *)&v35 + 1) = v35;
    uint64_t v36 = v35 + 4 * (v12 >> 2);
    int8x8_t v38 = &v35;
    do
    {
      int v37 = *(_DWORD *)v11;
      sub_10005B970((uint64_t *)&v38, &v37);
      v11 += 4;
    }
    while (v11 != v10);
    int v5 = v40;
  }
  unint64_t v13 = *(unsigned __int8 *)(a1 + 104);
  double v14 = *(double *)(a1 + 88);
  if ((v13 & 4) == 0) {
    double v14 = NAN;
  }
  if (*(unsigned char *)(a1 + 96)) {
    int v15 = 1;
  }
  else {
    int v15 = 2;
  }
  __int16 v16 = *(unsigned __int8 *)(a1 + 97);
  int v17 = v13 & 0x40;
  uint64_t v18 = *(unsigned int *)(a1 + 100);
  uint64_t v19 = (v13 >> 6) & 1;
  BOOL v20 = *(unsigned char *)(a1 + 98) != 0;
  BOOL v21 = *(unsigned __int8 *)(a1 + 80) == 0;
  uint64_t v22 = (void *)((unint64_t)*(unsigned int *)(a1 + 16) << 32);
  if (v13) {
    unint64_t v23 = (unint64_t)*(unsigned int *)(a1 + 16) << 32;
  }
  else {
    unint64_t v23 = 0;
  }
  if (v5)
  {
    uint64_t v22 = __p[0];
    v39[0] = __p[1];
    *(void **)((char *)v39 + 7) = *(void **)((char *)&__p[1] + 7);
    a2 = HIBYTE(__p[2]);
    memset(__p, 0, sizeof(__p));
  }
  int v24 = v15 & ((int)(v13 << 28) >> 31);
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFELL | v13 & 1;
  int v26 = (v13 & 0x10) >> 4;
  long long v27 = v35;
  uint64_t v28 = v36;
  uint64_t v29 = v18 << 32;
  unsigned int v30 = v20 & (v13 >> 5);
  if (v17) {
    uint64_t v31 = v29;
  }
  else {
    uint64_t v31 = 0;
  }
  uint64_t v32 = v31 | v19;
  *(unsigned char *)a3 = 0;
  __int16 v33 = v26 | (v16 << 8);
  if (v5)
  {
    uint64_t v34 = v39[0];
    *(void *)(a3 + ++*(void *)(result + 8) = v22;
    *(void *)(a3 + 16) = v34;
    *(void *)(a3 + 23) = *(void *)((char *)v39 + 7);
    *(unsigned char *)(a3 + 31) = a2;
    *(unsigned char *)a3 = 1;
  }
  *(void *)(a3 + 32) = v6;
  *(void *)(a3 + 40) = v9;
  *(void *)(a3 + 4++*(void *)(result + 8) = v25;
  *(_DWORD *)(a3 + 56) = v7 == 0;
  *(_DWORD *)(a3 + 60) = v8;
  *(_OWORD *)(a3 + 64) = v27;
  *(void *)(a3 + 80) = v28;
  *(_DWORD *)(a3 + 8++*(void *)(result + 8) = v21;
  *(double *)(a3 + 96) = v14;
  *(_DWORD *)(a3 + 104) = v24;
  *(_WORD *)(a3 + 10++*(void *)(result + 8) = v33;
  *(void *)(a3 + 112) = v32;
  *(unsigned char *)(a3 + 120) = v30;
  if (v40)
  {
    if (SHIBYTE(__p[2]) < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_100357A7C(_Unwind_Exception *a1, int a2)
{
  if (a2) {
    sub_1000A6954(a1);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100357A94(uint64_t result, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, int a10, int a11, __int16 a12, uint64_t a13, char a14)
{
  *(unsigned char *)__n128 result = 0;
  if (*(unsigned char *)a6)
  {
    long long v14 = *(_OWORD *)(a6 + 8);
    *(void *)(result + ++*(void *)(result + 24) = *(void *)(a6 + 24);
    *(_OWORD *)(result + ++*(void *)(result + 8) = v14;
    *(void *)(a6 + 16) = 0;
    *(void *)(a6 + ++*(void *)(result + 24) = 0;
    *(void *)(a6 + ++*(void *)(result + 8) = 0;
    *(unsigned char *)__n128 result = 1;
  }
  *(void *)(result + 32) = a2;
  *(void *)(result + 40) = a7;
  *(void *)(result + 4++*(void *)(result + 8) = a3;
  *(_DWORD *)(result + 56) = a4;
  *(_DWORD *)(result + 60) = a5;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 64) = 0;
  *(_OWORD *)(result + 64) = *(_OWORD *)a8;
  *(void *)(result + 80) = *(void *)(a8 + 16);
  *(void *)a8 = 0;
  *(void *)(a8 + ++*(void *)(result + 8) = 0;
  *(void *)(a8 + 16) = 0;
  *(_DWORD *)(result + 8++*(void *)(result + 8) = a10;
  *(double *)(result + 96) = a9;
  *(_DWORD *)(result + 104) = a11;
  *(_WORD *)(result + 10++*(void *)(result + 8) = a12;
  *(void *)(result + 112) = a13;
  *(unsigned char *)(result + 120) = a14;
  return result;
}

uint64_t sub_100357B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  sub_100357818(a2, a5, (uint64_t)v9);
  *(unsigned char *)a1 = 0;
  int v6 = v9[0];
  if (v9[0])
  {
    *(_OWORD *)(a1 + ++*(void *)(result + 8) = *(_OWORD *)__p;
    *(void *)(a1 + ++*(void *)(result + 24) = v11;
    __p[1] = 0;
    uint64_t v11 = 0;
    __p[0] = 0;
    *(unsigned char *)a1 = 1;
  }
  long long v7 = v13;
  *(_OWORD *)(a1 + 32) = v12;
  *(_OWORD *)(a1 + 4++*(void *)(result + 8) = v7;
  *(_OWORD *)(a1 + 64) = v14;
  *(void *)(a1 + 80) = v15;
  *(_OWORD *)(a1 + 8++*(void *)(result + 8) = v16;
  *(_OWORD *)(a1 + 104) = v17;
  *(unsigned char *)(a1 + 120) = v18;
  if (v6 && SHIBYTE(v11) < 0) {
    operator delete(__p[0]);
  }
  return a1;
}

uint64_t *sub_100357BE8@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  id v4 = (char *)result[8];
  uint64_t v3 = (char *)result[9];
  uint64_t v5 = v3 - v4;
  if (v3 == v4)
  {
    int v8 = a2;
  }
  else
  {
    if (v5 < 0) {
      sub_1000A9108();
    }
    int v6 = (char *)operator new(v3 - v4);
    *a2 = v6;
    a2[1] = v6;
    a2[2] = &v6[4 * (v5 >> 2)];
    int v8 = a2;
    do
    {
      int v7 = *(_DWORD *)v4;
      __n128 result = sub_10005B970((uint64_t *)&v8, &v7);
      v4 += 4;
    }
    while (v4 != v3);
  }
  return result;
}

void sub_100357C90(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + ++*(void *)(result + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

int32x2_t sub_100357CB0@<D0>(uint64_t a1@<X0>, int32x2_t *a2@<X8>, uint64_t a3@<D0>)
{
  float64x2_t v3 = *(float64x2_t *)a1;
  v3.f64[1] = *(float64_t *)(a1 + 24);
  int32x2_t result = vrev64_s32(vmovn_s64(vcvtq_s64_f64(vrndpq_f64(vdivq_f64(vsubq_f64(*(float64x2_t *)(a1 + 8), v3), (float64x2_t)vdupq_lane_s64(a3, 0))))));
  *a2 = result;
  return result;
}

double sub_100357CE4(void *a1, double *a2)
{
  double result = *a2;
  *a1 = *(void *)a2;
  return result;
}

uint64_t sub_100357CF0(_DWORD *a1, int *a2, int *a3)
{
  int v3 = *a2;
  if (*a2 < 0) {
    return 0xFFFFFFFFLL;
  }
  int v4 = *a3;
  if (*a3 < 0) {
    return 0xFFFFFFFFLL;
  }
  int v5 = a1[1];
  if (v3 >= v5) {
    return 0xFFFFFFFFLL;
  }
  unsigned int v6 = v3 + v5 * v4;
  if (v4 < *a1) {
    return v6;
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t sub_100357D2C(uint64_t a1, uint64_t a2, uint64_t __x)
{
  uint64_t result = div(__x, *(unsigned int *)(a1 + 4)).quot;
  *(void *)(a2 + 16) = __ROR8__(result, 32);
  return result;
}

void sub_100357D60(long double a1)
{
}

float64x2_t **sub_100357DBC(float64x2_t **a1, double a2)
{
  int v3 = *a1;
  uint64_t v4 = (char *)a1[1] - (char *)*a1;
  if (v4)
  {
    double v5 = a2;
    unint64_t v6 = v4 >> 3;
    if (v6 <= 1) {
      unint64_t v7 = 1;
    }
    else {
      unint64_t v7 = v6;
    }
    if (v7 < 2)
    {
      unint64_t v8 = 0;
LABEL_10:
      unint64_t v12 = v7 - v8;
      long long v13 = &v3->f64[v8];
      do
      {
        long double v14 = exp(*v13 - v5);
        double v5 = a2;
        *v13++ = v14;
        --v12;
      }
      while (v12);
      return a1;
    }
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    float64x2_t v16 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&a2, 0);
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *a1;
    do
    {
      float64x2_t __x = vsubq_f64(*v10, v16);
      long double v19 = exp(__x.f64[1]);
      v11.f64[0] = exp(__x.f64[0]);
      v11.f64[1] = v19;
      *v10++ = v11;
      v9 -= 2;
    }
    while (v9);
    double v5 = a2;
    if (v7 != v8) {
      goto LABEL_10;
    }
  }
  return a1;
}

double **sub_100357EA4(double **result)
{
  uint64_t v2 = (float64x2_t *)*result;
  uint64_t v1 = result[1];
  if (*result != v1)
  {
    int v3 = *result;
    double v4 = 0.0;
    double v5 = 0.0;
    unint64_t v6 = *result;
    do
    {
      double v7 = *v6++;
      double v8 = v4;
      double v9 = v7 - v5;
      double v4 = v4 + v9;
      double v5 = v4 - v8 - v9;
    }
    while (v6 != v1);
    unint64_t v10 = (char *)v1 - (char *)v2 - 8;
    if (v10 < 0x18) {
      goto LABEL_11;
    }
    uint64_t v11 = (v10 >> 3) + 1;
    int v3 = &v2->f64[v11 & 0x3FFFFFFFFFFFFFFCLL];
    float64x2_t v12 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v4, 0);
    long long v13 = v2 + 1;
    uint64_t v14 = v11 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      float64x2_t v15 = vdivq_f64(*v13, v12);
      v13[-1] = vdivq_f64(v13[-1], v12);
      *long long v13 = v15;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != (v11 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_11:
      do
      {
        double *v3 = *v3 / v4;
        ++v3;
      }
      while (v3 != v1);
    }
  }
  return result;
}

void sub_100357F48()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100357FC0()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100358038()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1003580B0()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

double *sub_100358128(double *result, double *a2)
{
  double v2 = *a2;
  double v3 = result[1];
  if (*result >= *a2) {
    double v2 = *result;
  }
  *uint64_t result = v2;
  double v4 = a2[1];
  if (v4 >= v3) {
    double v4 = v3;
  }
  result[1] = v4;
  double v5 = a2[3];
  double v6 = result[2];
  if (result[3] >= v5) {
    double v5 = result[3];
  }
  result[3] = v5;
  double v7 = a2[2];
  if (v7 >= v6) {
    double v7 = v6;
  }
  result[2] = v7;
  if (v2 >= v4 || v5 >= v7)
  {
    uint64_t v10 = (uint64_t)result;
    sub_1000AE4B0(v12, "");
    sub_10024F040("Please check intersects() first. new this=", &v14);
    sub_100358B94(v10, &v15);
    sub_1001F34DC(", input other=", &v16);
    sub_100358B94((uint64_t)a2, &v17);
    sub_10016A2C4((uint64_t)v12, (uint64_t)&v14, 4);
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v17.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v16.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_15:
        if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_16;
        }
        goto LABEL_22;
      }
    }
    else if ((SHIBYTE(v16.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_15;
    }
    operator delete(v16.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_16:
      if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_17;
      }
      goto LABEL_23;
    }
LABEL_22:
    operator delete(v15.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_17:
      if ((v13 & 0x80000000) == 0) {
        goto LABEL_18;
      }
LABEL_24:
      operator delete(v12[0]);
LABEL_18:
      sub_1000D11E0((uint64_t)&__p);
    }
LABEL_23:
    operator delete(v14.__r_.__value_.__l.__data_);
    if ((v13 & 0x80000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_24;
  }
  return result;
}

void sub_1003582D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10035831C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  while (1)
  {
    if (*((char *)v16 - 1) < 0) {
      operator delete(*(v16 - 3));
    }
    v16 -= 3;
    if (v16 == (void **)&a16) {
      JUMPOUT(0x1003582F8);
    }
  }
}

BOOL sub_100358348(double *a1, double *a2)
{
  return *a1 < a2[1] && a1[1] > *a2 && a1[3] < a2[2] && a1[2] > a2[3];
}

double sub_100358394@<D0>(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, __n128 a4@<Q0>)
{
  double v4 = a4.n128_f64[0] * -0.5;
  double v5 = *a1 - a4.n128_f64[0] * -0.5;
  double v6 = a4.n128_f64[0] * -0.5 + a1[1];
  if (v5 < v6 && (double v7 = v4 + a1[2], v8 = a1[3] - v4, v8 < v7))
  {
    double v9 = *(double *)(a2 + 8);
    if (v9 >= v5 && v9 <= v6)
    {
      double v23 = *(double *)(a2 + 16);
      if (v23 >= v8 && v23 <= v7)
      {
        a4.n128_u64[0] = sub_1001A9C7C(a3, a2).n128_u64[0];
        return a4.n128_f64[0];
      }
    }
  }
  else
  {
    double v9 = *(double *)(a2 + 8);
    double v7 = NAN;
    double v5 = NAN;
    double v6 = NAN;
    double v8 = NAN;
  }
  *(void *)a3 = off_10045DA98;
  *(unsigned char *)(a3 + 24) &= 0xFCu;
  double v10 = v9 - a4.n128_f64[0];
  double v11 = *(double *)(a2 + 16);
  double v12 = v11 - a4.n128_f64[0];
  *(double *)(a3 + ++*(void *)(result + 8) = v9 - a4.n128_f64[0];
  *(double *)(a3 + 16) = v11 - a4.n128_f64[0];
  if (v9 - a4.n128_f64[0] >= v5)
  {
    if (v10 <= v6 && v12 >= v8 && v12 <= v7) {
      return a4.n128_f64[0];
    }
    double v13 = v11 + a4.n128_f64[0];
    *(double *)(a3 + 16) = v13;
    BOOL v20 = v10 > v6 || v13 < v8;
    if (!v20 && v13 <= v7) {
      return a4.n128_f64[0];
    }
  }
  else
  {
    double v13 = v11 + a4.n128_f64[0];
  }
  a4.n128_f64[0] = v9 + a4.n128_f64[0];
  *(void *)(a3 + ++*(void *)(result + 8) = a4.n128_u64[0];
  *(double *)(a3 + 16) = v12;
  if (a4.n128_f64[0] < v5
    || (a4.n128_f64[0] <= v6 ? (BOOL v14 = v12 < v8) : (BOOL v14 = 1),
        !v14 ? (BOOL v15 = v12 > v7) : (BOOL v15 = 1),
        v15
     && ((*(double *)(a3 + 16) = v13, a4.n128_f64[0] <= v6) ? (BOOL v16 = v13 < v8) : (BOOL v16 = 1),
         !v16 ? (BOOL v17 = v13 > v7) : (BOOL v17 = 1),
         v17)))
  {
    a4 = (__n128)vdupq_n_s64(0x7FF4000000000000uLL);
    *(__n128 *)(a3 + ++*(void *)(result + 8) = a4;
  }
  return a4.n128_f64[0];
}

BOOL sub_1003584B8(double *a1, uint64_t a2)
{
  double v2 = *(double *)(a2 + 8);
  if (v2 < *a1) {
    return 0;
  }
  if (v2 > a1[1]) {
    return 0;
  }
  double v4 = *(double *)(a2 + 16);
  return v4 >= a1[3] && v4 <= a1[2];
}

BOOL sub_10035850C(double *a1)
{
  if (fabs(*a1) == INFINITY) {
    return 1;
  }
  if (fabs(a1[1]) == INFINITY) {
    return 1;
  }
  if (fabs(a1[2]) == INFINITY) {
    return 1;
  }
  return fabs(a1[3]) == INFINITY;
}

double *sub_10035857C@<X0>(double *result@<X0>, uint64_t (***a2)()@<X1>, uint64_t a3@<X8>)
{
  double v3 = *((double *)a2 + 1);
  double v4 = *result;
  if (v3 <= *result)
  {
    double v5 = result[3];
    if (*((double *)a2 + 2) <= v5)
    {
      *(void *)a3 = off_10045DA98;
      *(unsigned char *)(a3 + 24) &= 0xFCu;
      *(double *)(a3 + ++*(void *)(result + 8) = v4;
      *(double *)(a3 + 16) = v5;
      return result;
    }
  }
  double v6 = result[1];
  if (v3 >= v6)
  {
    double v7 = *((double *)a2 + 2);
    double v8 = result[3];
    if (v7 <= v8 || (double v8 = result[2], v7 >= v8))
    {
      *(void *)a3 = off_10045DA98;
      *(unsigned char *)(a3 + 24) &= 0xFCu;
      *(double *)(a3 + ++*(void *)(result + 8) = v6;
      *(double *)(a3 + 16) = v8;
      return result;
    }
  }
  if (v3 <= v4)
  {
    double v9 = result[2];
    if (*((double *)a2 + 2) >= v9)
    {
      *(void *)a3 = off_10045DA98;
      *(unsigned char *)(a3 + 24) &= 0xFCu;
      *(double *)(a3 + ++*(void *)(result + 8) = v4;
      *(double *)(a3 + 16) = v9;
      return result;
    }
  }
  double v13 = 0.0;
  double v14 = 0.0;
  double v12 = off_10045DA98;
  char v15 = 0;
  if (v3 >= v4)
  {
    if (v3 <= v6)
    {
      double v11 = *((double *)a2 + 2);
      double v10 = result[2];
      if (v11 <= v10)
      {
        double v10 = result[3];
        if (v11 >= v10) {
          goto LABEL_19;
        }
      }
      double v13 = v3;
    }
    else
    {
      double v13 = v6;
      double v10 = *((double *)a2 + 2);
    }
  }
  else
  {
    double v13 = v4;
    double v10 = *((double *)a2 + 2);
  }
  double v14 = v10;
  a2 = &v12;
LABEL_19:
  sub_1001A9C7C(a3, (uint64_t)a2);
  return (double *)nullsub_17(&v12);
}

void sub_10035873C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_100358750@<X0>(double *a1@<X0>, uint64_t (***a2)()@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  sub_10035857C(a1, a2, (uint64_t)v9);
  v7.n128_f64[0] = a4;
  sub_100358394(a1, (uint64_t)v9, a3, v7);
  return nullsub_17(v9);
}

void sub_1003587AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

double sub_1003587C0@<D0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  double v2 = *a1;
  double v3 = a1[1];
  double v4 = a1[2];
  double v5 = a1[3];
  if (*a1 >= v3 || v5 >= v4)
  {
    sub_1000AE4B0(v9, "");
    sub_1003535C4("Rectangle has no middle", &v11);
    sub_10016A2C4((uint64_t)v9, (uint64_t)&v11, 1);
    if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v11.__r_.__value_.__l.__data_);
      if ((v10 & 0x80000000) == 0) {
        goto LABEL_7;
      }
    }
    else if ((v10 & 0x80000000) == 0)
    {
      goto LABEL_7;
    }
    operator delete(v9[0]);
LABEL_7:
    sub_1000D11E0((uint64_t)&__p);
  }
  *(void *)a2 = off_10045DA98;
  *(unsigned char *)(a2 + 24) &= 0xFCu;
  double result = (v2 + v3) * 0.5;
  *(double *)(a2 + ++*(void *)(result + 8) = result;
  *(double *)(a2 + 16) = (v4 + v5) * 0.5;
  return result;
}

void sub_100358910(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100358954(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = off_10045DA98;
  *(void *)(a3 + ++*(void *)(result + 8) = 0;
  *(void *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 24) &= 0xFCu;
  *(double *)(a3 + ++*(void *)(result + 8) = (*(double (**)(uint64_t, double, double))(*(void *)a2 + 24))(a2, *a1, a1[1]);
  *(double *)(a3 + 16) = (*(double (**)(uint64_t, double, double))(*(void *)a2 + 24))(a2, a1[3], a1[2]);
}

void sub_100358A18(_Unwind_Exception *a1)
{
  nullsub_17(v1);
  _Unwind_Resume(a1);
}

BOOL sub_100358A2C(double *a1, double *a2)
{
  if (*a1 > *a2) {
    return 0;
  }
  if (a1[1] < a2[1]) {
    return 0;
  }
  if (a1[2] >= a2[2]) {
    return a1[3] <= a2[3];
  }
  return 0;
}

void *sub_100358A88(void *a1, uint64_t a2)
{
  double v3 = sub_10002986C(a1, (uint64_t)"UniversalRect2d(bottomLeft=", 27);
  v13[0] = off_10045DA98;
  char v14 = 0;
  uint64_t v4 = *(void *)(a2 + 24);
  v13[1] = *(void *)a2;
  v13[2] = v4;
  double v5 = sub_1001A9CB8(v3, (uint64_t)v13);
  double v6 = sub_10002986C(v5, (uint64_t)", topRight=", 11);
  char v10 = off_10045DA98;
  char v12 = 0;
  long long v11 = *(_OWORD *)(a2 + 8);
  __n128 v7 = sub_1001A9CB8(v6, (uint64_t)&v10);
  double v8 = sub_10002986C(v7, (uint64_t)")", 1);
  nullsub_17(&v10);
  nullsub_17(v13);
  return v8;
}

void sub_100358B64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
}

void sub_100358B80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  nullsub_17(va);
  _Unwind_Resume(a1);
}

uint64_t sub_100358B94@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  uint64_t result = sub_100358C44(a1, a2);
  if ((result & 1) == 0)
  {
    std::bad_cast::bad_cast(&v3);
    v3.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)&v3);
  }
  return result;
}

void sub_100358C18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
  std::bad_cast::~bad_cast(&a10);
  if (*(char *)(v10 + 23) < 0) {
    operator delete(*(void **)v10);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100358C44(uint64_t a1, std::string *a2)
{
  long long v26 = 0u;
  long long v27 = 0u;
  memset(v25, 0, sizeof(v25));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v29 = 0u;
  uint64_t v30 = 24;
  *(void *)&long long v26 = 0;
  *(void *)&v25[0] = off_100453E60;
  std::ios_base::init(&v32, v25);
  uint64_t v33 = 0;
  int v34 = -1;
  uint64_t v36 = &v35;
  int v37 = (char *)&v35 + 2;
  uint64_t v4 = (std::ios_base *)((char *)&v31 + (void)*(v31 - 3));
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  double v5 = sub_100358A88(&v31, a1);
  int v6 = *(_DWORD *)((char *)v5 + *(void *)(*v5 - 24) + 32);
  uint64_t v7 = *(void *)((char *)&v32.__rdstate_ + (void)*(v31 - 3));
  uint64_t v8 = *(void *)(v7 + 40);
  uint64_t v36 = (uint64_t *)v8;
  double v9 = *(char **)(v7 + 48);
  int v37 = v9;
  if ((v6 & 5) == 0)
  {
    unint64_t v11 = (unint64_t)&v9[-v8];
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v15 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v14 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v14 >= v11)
      {
        unint64_t v16 = HIBYTE(v15);
LABEL_10:
        if ((v16 & 0x80u) == 0) {
          char v12 = a2;
        }
        else {
          char v12 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_13:
        if ((char *)v8 == v9)
        {
          BOOL v17 = v12;
          goto LABEL_23;
        }
        if (v11 < 0x20 || (unint64_t)v12 - v8 < 0x20)
        {
          BOOL v17 = v12;
          char v18 = (char *)v8;
        }
        else
        {
          BOOL v17 = (std::string *)((char *)v12 + (v11 & 0xFFFFFFFFFFFFFFE0));
          char v18 = (char *)(v8 + (v11 & 0xFFFFFFFFFFFFFFE0));
          long double v19 = (long long *)(v8 + 16);
          BOOL v20 = &v12->__r_.__value_.__r.__words[2];
          unint64_t v21 = v11 & 0xFFFFFFFFFFFFFFE0;
          do
          {
            long long v22 = *v19;
            *((_OWORD *)v20 - 1) = *(v19 - 1);
            *(_OWORD *)BOOL v20 = v22;
            v19 += 2;
            v20 += 4;
            v21 -= 32;
          }
          while (v21);
          if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0))
          {
LABEL_23:
            v17->__r_.__value_.__s.__data_[0] = 0;
            if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
              a2->__r_.__value_.__l.__size_ = v11;
            }
            else {
              *((unsigned char *)&a2->__r_.__value_.__s + 23) = v11 & 0x7F;
            }
            uint64_t v10 = 1;
            goto LABEL_27;
          }
        }
        do
        {
          std::string::value_type v23 = *v18++;
          v17->__r_.__value_.__s.__data_[0] = v23;
          BOOL v17 = (std::string *)((char *)v17 + 1);
        }
        while (v18 != v9);
        goto LABEL_23;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      char v12 = a2;
      if (v11 <= 0x16) {
        goto LABEL_13;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v14 = 22;
    }
    std::string::__grow_by(a2, v14, v11 - v14, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v16) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_10;
  }
  uint64_t v10 = 0;
LABEL_27:
  std::ostream::~ostream();
  if (SBYTE7(v29) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v10;
}

void sub_100358F1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100358F50(void *a1)
{
}

void sub_100358F68()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100358FE0()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

double sub_10035905C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&double result = sub_1001A9058(a2, a1).n128_u64[0];
  return result;
}

uint64_t sub_100359068(uint64_t result, float64_t a2, float64_t a3, double a4)
{
  if (a2 >= a3)
  {
    sub_1000AE4B0(__p, "");
    sub_100359210("You must add a _range_. If you intend to add an individual value, use addObservation() instead.", &v13);
    sub_10016A2C4((uint64_t)__p, (uint64_t)&v13, 1);
    if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v13.__r_.__value_.__l.__data_);
    }
    if (v12 < 0) {
      operator delete(__p[0]);
    }
    sub_10014B3FC((uint64_t)&v10);
  }
  double v5 = *(double *)(result + 16) + (a2 + a3) * a4 * 0.5;
  *(double *)(result + ++*(void *)(result + 8) = *(double *)(result + 8) + a4;
  *(double *)(result + 16) = v5;
  int8x16_t v6 = *(int8x16_t *)(result + 40);
  v7.f64[0] = *(float64_t *)(result + 40);
  v7.f64[1] = a3;
  v8.f64[1] = *(float64_t *)(result + 48);
  v8.f64[0] = a2;
  int8x16_t v9 = (int8x16_t)vcgtq_f64(v7, v8);
  v7.f64[0] = a2;
  *(float64x2_t *)(result + ++*(void *)(result + 24) = vaddq_f64((float64x2_t)COERCE_UNSIGNED_INT64((a2 * a3 + a3 * a3 + a2 * a2) * a4 / 3.0), *(float64x2_t *)(result + 24));
  *(int8x16_t *)(result + 40) = vbslq_s8(v9, (int8x16_t)v7, v6);
  return result;
}

void sub_1003591B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a18 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

double sub_1003591FC(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

double sub_100359204(uint64_t a1)
{
  return *(double *)(a1 + 16) / *(double *)(a1 + 8);
}

std::string *sub_100359210@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_100359244(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_100359260()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1003592D8()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_100359350(double *a1, uint64_t a2)
{
  double v3 = *a1;
  double v4 = *(double *)(a2 + 8);
  double v5 = *(double *)(a2 + 16);
  sub_1001A9C7C((uint64_t)v15, *(void *)a1 + 32);
  double v6 = v15[2];
  double v7 = (v4 - v15[1]) / *(double *)(*(void *)&v3 + 64);
  a1[2] = v7;
  double v8 = (double)*(int *)(*(void *)&v3 + 16);
  double v9 = (v5 - v6) * v8 / *(double *)(*(void *)&v3 + 64);
  a1[3] = v9;
  double v10 = *(double *)(*(void *)&v3 + 80);
  if (v10 != 0.0)
  {
    double v11 = hypot(v7, v9);
    long double v12 = atan2(v9, v7);
    __double2 v13 = __sincos_stret(v12 - v8 * v10);
    a1[2] = v11 * v13.__cosval;
    a1[3] = v11 * v13.__sinval;
  }
  return nullsub_17(v15);
}

double *sub_10035941C(double *a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)a2 = 0;
  *(void *)(a2 + ++*(void *)(result + 8) = 0;
  sub_100359350(a1, a3);
  return a1;
}

void sub_100359454(_Unwind_Exception *exception_object)
{
  double v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3) {
    sub_1003A4A40(v3);
  }
  _Unwind_Resume(exception_object);
}

void sub_10035946C(uint64_t a1, long double *a2, double *a3, double a4, double a5)
{
  sub_1001A9C7C((uint64_t)v18, a1 + 32);
  double v10 = v18[2];
  *a2 = (a4 - v18[1]) / *(double *)(a1 + 64);
  double v11 = (double)*(int *)(a1 + 16);
  double v12 = (a5 - v10) * v11 / *(double *)(a1 + 64);
  *a3 = v12;
  double v13 = *(double *)(a1 + 80);
  if (v13 != 0.0)
  {
    long double v14 = *a2;
    double v15 = hypot(*a2, v12);
    long double v16 = atan2(v12, v14);
    __double2 v17 = __sincos_stret(v16 - v11 * v13);
    *a2 = v15 * v17.__cosval;
    *a3 = v15 * v17.__sinval;
  }
  nullsub_17(v18);
}

void sub_100359550()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1003595C8()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100359640()
{
}

uint64_t sub_100359654(uint64_t result)
{
  uint64_t v1 = result;
  *(void *)double result = off_100469B18;
  if (*(char *)(result + 47) < 0)
  {
    operator delete(*(void **)(result + 24));
    return v1;
  }
  return result;
}

void sub_1003596B4(uint64_t a1)
{
  *(void *)a1 = off_100469B18;
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }

  operator delete();
}

std::string *sub_100359724(std::string *a1, const std::string *a2)
{
  return std::string::operator=(a1 + 1, a2);
}

uint64_t sub_10035972C(uint64_t a1, _DWORD *a2)
{
  unsigned int v2 = a2[7];
  unsigned int v3 = a2[6] + 1;
  a2[6] = v3;
  if (v2 < v3)
  {
    exception = __cxa_allocate_exception(0x28uLL);
    exception[2] = 0;
    exception[3] = 0;
    void *exception = off_100454818;
    exception[1] = 0;
    *((_DWORD *)exception + ++*(void *)(result + 8) = 6;
  }
  int v6 = (*(uint64_t (**)(_DWORD *, const char *))(*(void *)a2 + 32))(a2, "PowerEvent");
  int v7 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "timestampNanos", 10, 1)+ v6;
  int v8 = (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 8));
  int v9 = v7 + v8 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v10 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "utcTimestampNanos", 10, 2);
  int v11 = v10 + (*(uint64_t (**)(_DWORD *, void))(*(void *)a2 + 152))(a2, *(void *)(a1 + 16));
  int v12 = v9 + v11 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  int v13 = (*(uint64_t (**)(_DWORD *, const char *, uint64_t, uint64_t))(*(void *)a2 + 48))(a2, "description", 11, 3);
  LODWORD(a1) = v13 + (*(uint64_t (**)(_DWORD *, uint64_t))(*(void *)a2 + 168))(a2, a1 + 24);
  LODWORD(a1) = a1 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 56))(a2);
  LODWORD(a1) = v12 + a1 + (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 64))(a2);
  uint64_t result = a1 + (*(unsigned int (**)(_DWORD *))(*(void *)a2 + 40))(a2);
  --a2[6];
  return result;
}

dispatch_object_t *sub_100359A24(dispatch_object_t *a1)
{
  return a1;
}

void sub_100359A50(dispatch_queue_t *a1, void *a2)
{
}

uint64_t sub_100359A58(uint64_t result, long long *a2, int a3, unint64_t a4)
{
  uint64_t v5 = result;
  long long v6 = *a2;
  *(void *)(result + 16) = *((void *)a2 + 2);
  *(_OWORD *)uint64_t result = v6;
  *((void *)a2 + 1) = 0;
  *((void *)a2 + 2) = 0;
  *(void *)a2 = 0;
  unint64_t v7 = HIDWORD(a4);
  switch(a3)
  {
    case 0:
      *(void *)(result + ++*(void *)(result + 24) = archive_read_new();
      *(void *)(v5 + 32) = a4;
      *(_DWORD *)(v5 + 40) = 0;
      sub_100359BBC(v5, v7);
      goto LABEL_3;
    case 1:
      *(void *)(result + ++*(void *)(result + 24) = archive_write_new();
      *(void *)(v5 + 32) = a4;
      *(_DWORD *)(v5 + 40) = 1;
      sub_100359CC4(v5, v7);
      goto LABEL_3;
    case 2:
      *(void *)(result + ++*(void *)(result + 24) = archive_read_disk_new();
      *(void *)(v5 + 32) = a4;
      *(_DWORD *)(v5 + 40) = 2;
      unsigned int disk_set_symlink_physical = archive_read_disk_set_symlink_physical();
      sub_10035B46C(v5, disk_set_symlink_physical, "Failed to set to physical");
      goto LABEL_3;
    case 3:
      *(void *)(result + ++*(void *)(result + 24) = archive_write_disk_new();
      *(void *)(v5 + 32) = a4;
      *(_DWORD *)(v5 + 40) = 3;
      archive_write_disk_set_options();
LABEL_3:
      uint64_t result = v5;
      break;
    default:
      *(void *)(result + 32) = a4;
      *(_DWORD *)(result + 40) = a3;
      break;
  }
  return result;
}

void sub_100359B6C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100359BBC(uint64_t result, int a2)
{
  uint64_t v2 = result;
  switch(a2)
  {
    case 2:
      unsigned int support_format_zip = archive_read_support_format_zip();
      return sub_10035B37C(v2, support_format_zip, "Failed to setup file for zip format");
    case 1:
      unsigned int support_format_raw = archive_read_support_format_raw();
      sub_10035B0AC(v2, support_format_raw, "Failed to setup raw gz file format");
      unsigned int support_filter_gzip = archive_read_support_filter_gzip();
      return sub_10035B28C(v2, support_filter_gzip, "Failed to setup file for gzip compression");
    case 0:
      unsigned int v3 = archive_read_support_format_raw();
      sub_10035B0AC(v2, v3, "Failed to setup raw xz file format");
      unsigned int support_filter_xz = archive_read_support_filter_xz();
      return sub_10035B19C(v2, support_filter_xz, "Failed to setup file for xz compression");
  }
  return result;
}

uint64_t sub_100359CC4(uint64_t result, int a2)
{
  uint64_t v2 = result;
  switch(a2)
  {
    case 2:
      unsigned int v3 = archive_write_set_format_zip();
      return sub_10035A970(v2, v3, "Failed to set archive as zip");
    case 0:
      unsigned int v4 = archive_write_add_filter_xz();
      sub_10035B19C(v2, v4, "Failed to set archive as xz file format");
      __cxa_allocate_exception(0x40uLL);
      sub_1000AE4B0(&v8, "cannot write gzip archive at the moment");
      std::runtime_error::runtime_error(&v9, &v8);
      v9.__vftable = (std::runtime_error_vtbl *)&off_100453630;
      sub_10018E868((uint64_t)v6);
      sub_1000CC8F4(&v9, (uint64_t)"void ArchiveHandle::setupArchiveWrite(Archive::Kind)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/util/archive_handle.cpp", 358, (uint64_t)v6);
    case 1:
      unsigned int v5 = archive_write_add_filter_gzip();
      sub_10035B19C(v2, v5, "Failed to set archive as gz file format");
      __cxa_allocate_exception(0x40uLL);
      sub_1000AE4B0(&v8, "cannot write gzip archive at the moment");
      std::runtime_error::runtime_error(&v9, &v8);
      v9.__vftable = (std::runtime_error_vtbl *)&off_100453630;
      sub_10018E868((uint64_t)v7);
      sub_1000CC8F4(&v9, (uint64_t)"void ArchiveHandle::setupArchiveWrite(Archive::Kind)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/util/archive_handle.cpp", 349, (uint64_t)v7);
  }
  return result;
}

void sub_100359EAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error((std::runtime_error *)(v21 - 48));
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(a1);
}

void sub_100359F3C(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    switch(*(_DWORD *)(a1 + 40))
    {
      case 0:
      case 2:
        sub_10035A104((uint64_t *)a1);
        return;
      case 1:
      case 3:
        if (qword_10047BED8 == -1)
        {
          uint64_t v2 = qword_10047BEE0;
          if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO))
          {
LABEL_8:
            uint64_t v3 = a1;
            if (*(char *)(a1 + 23) < 0) {
              uint64_t v3 = *(void *)a1;
            }
            int v4 = 136315138;
            uint64_t v5 = v3;
            _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "WARNING: File %s not gracefully closed - closing", (uint8_t *)&v4, 0xCu);
          }
        }
        else
        {
          dispatch_once(&qword_10047BED8, &stru_100469B58);
          uint64_t v2 = qword_10047BEE0;
          if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
            goto LABEL_8;
          }
        }
        sub_10035A3D8(a1);
        return;
      default:
        return;
    }
  }
}

uint64_t sub_10035A0B8(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_10035A104(uint64_t *a1)
{
  uint64_t v1 = a1;
  if (((*((_DWORD *)a1 + 10) - 1) & 0xFFFFFFFD) == 0)
  {
    sub_1000AE4B0(buf, "");
    sub_10016A2C4((uint64_t)buf, 0, 0);
    if (v16 < 0) {
      operator delete(*(void **)buf);
    }
    sub_1000D11E0((uint64_t)&__p);
  }
  if (!a1[3])
  {
    if (qword_10047BED8 == -1)
    {
      uint64_t v11 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        return;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100469B58);
      uint64_t v11 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        return;
      }
    }
    *(_WORD *)long long buf = 0;
    unint64_t v7 = "WARNING: Archive already closed for reading";
    std::string v8 = v11;
    os_log_type_t v9 = OS_LOG_TYPE_INFO;
    uint32_t v10 = 2;
    goto LABEL_18;
  }
  int close = archive_read_close();
  if (close)
  {
    if (qword_10047BED8 == -1)
    {
      uint64_t v3 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_9;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100469B58);
      uint64_t v3 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_9;
      }
    }
    int v4 = v1;
    if (*((char *)v1 + 23) < 0) {
      int v4 = (uint64_t *)*v1;
    }
    *(_DWORD *)long long buf = 136380931;
    *(void *)&uint8_t buf[4] = v4;
    __int16 v14 = 1024;
    int v15 = close;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Failed to close handle for %{private}s: %d", buf, 0x12u);
  }
LABEL_9:
  int free = archive_read_free();
  v1[3] = 0;
  if (!free) {
    return;
  }
  if (qword_10047BED8 == -1)
  {
    uint64_t v6 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
      return;
    }
    goto LABEL_12;
  }
  dispatch_once(&qword_10047BED8, &stru_100469B58);
  uint64_t v6 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
  {
LABEL_12:
    if (*((char *)v1 + 23) < 0) {
      uint64_t v1 = (uint64_t *)*v1;
    }
    *(_DWORD *)long long buf = 136380931;
    *(void *)&uint8_t buf[4] = v1;
    __int16 v14 = 1024;
    int v15 = free;
    unint64_t v7 = "Failed to finish reading %{private}s: %d";
    std::string v8 = v6;
    os_log_type_t v9 = OS_LOG_TYPE_ERROR;
    uint32_t v10 = 18;
LABEL_18:
    _os_log_impl((void *)&_mh_execute_header, v8, v9, v7, buf, v10);
  }
}

void sub_10035A3B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10035A3D8(uint64_t a1)
{
  if (((*(_DWORD *)(a1 + 40) - 1) & 0xFFFFFFFD) != 0)
  {
    sub_1000AE4B0(buf, "");
    sub_10016A2C4((uint64_t)buf, 0, 0);
    if (v6 < 0) {
      operator delete(*(void **)buf);
    }
    sub_1000D11E0((uint64_t)&__p);
  }
  if (*(void *)(a1 + 24))
  {
    unsigned int v2 = archive_write_close();
    sub_10035AB50(a1, v2, "Failed to close archive");
    archive_read_free();
    *(void *)(a1 + ++*(void *)(result + 24) = 0;
    return;
  }
  if (qword_10047BED8 == -1)
  {
    uint64_t v3 = qword_10047BEE0;
    if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO))
    {
LABEL_7:
      *(_WORD *)long long buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "WARNING: Archive already closed for writing", buf, 2u);
    }
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_100469B58);
    uint64_t v3 = qword_10047BEE0;
    if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
      goto LABEL_7;
    }
  }
}

void sub_10035A51C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10035A564(uint64_t a1)
{
  switch(*(_DWORD *)(a1 + 40))
  {
    case 0:
      unsigned int open_filename = archive_read_open_filename();
      sub_10035A880(a1, open_filename, "Failed to open file for reading");
      if (*(unsigned char *)(a1 + 32))
      {
        __int32 v3 = archive_filter_code();
        int v4 = *(_DWORD *)(a1 + 36);
        LODWORD(v15.__vftable) = v3;
        if (v4 != 2)
        {
          __int32 v5 = v3;
          char v6 = (__int32 *)operator new(4uLL);
          unint64_t v7 = v6;
          if (v4 == 1) {
            int v8 = 1;
          }
          else {
            int v8 = 6;
          }
          *char v6 = v8;
          os_log_type_t v9 = v6 + 1;
          v16.__r_.__value_.__l.__size_ = (std::string::size_type)(v6 + 1);
          v16.__r_.__value_.__r.__words[2] = (std::string::size_type)(v6 + 1);
          v16.__r_.__value_.__r.__words[0] = (std::string::size_type)v6;
          uint32_t v10 = wmemchr(v6, v5, 1uLL);
          if (v10) {
            uint64_t v11 = v10;
          }
          else {
            uint64_t v11 = v9;
          }
          if ((char *)v11 - (char *)v7 != 4
            || (sub_10035B58C(a1, 0x16u, "Expected compression code one of ", (uint64_t *)&v16, ", instead ", (int *)&v15), (unint64_t v7 = (__int32 *)v16.__r_.__value_.__r.__words[0]) != 0))
          {
            v16.__r_.__value_.__l.__size_ = (std::string::size_type)v7;
            operator delete(v7);
          }
        }
      }
      break;
    case 1:
      unsigned int v12 = archive_write_open_filename();
      sub_10035A970(a1, v12, "Failed open file for writing");
      break;
    case 2:
      __cxa_allocate_exception(0x40uLL);
      sub_1000AE4B0(&v16, "Cannot open a directory for reading");
      std::runtime_error::runtime_error(&v15, &v16);
      v15.__vftable = (std::runtime_error_vtbl *)&off_100453860;
      sub_10018E868((uint64_t)v14);
      sub_1000D1698(&v15, (uint64_t)"void ArchiveHandle::open()", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/util/archive_handle.cpp", 211, (uint64_t)v14);
    case 3:
      unsigned int v13 = archive_write_open_filename();
      sub_10035AA60(a1, v13, "Failed to open directory for writing");
      break;
    default:
      return;
  }
}

void sub_10035A7C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, std::runtime_error a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a12);
  if (a18 < 0) {
    operator delete(a13);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10035A880(uint64_t result, unsigned int a2, std::string::value_type *__s)
{
  if (a2)
  {
    uint64_t v3 = result;
    char v7 = 0;
    LOBYTE(__p) = 0;
    memset(&v8, 0, sizeof(v8));
    std::string::assign(&v8, __s);
    sub_10016A2C4((uint64_t)&__p, (uint64_t)&v8, 1);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v8.__r_.__value_.__l.__data_);
    }
    if (v7 < 0) {
      operator delete(__p);
    }
    sub_10035AC40(v3, a2, &v5);
  }
  return result;
}

void sub_10035A940(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10035A970(uint64_t result, unsigned int a2, std::string::value_type *__s)
{
  if (a2)
  {
    uint64_t v3 = result;
    char v7 = 0;
    LOBYTE(__p) = 0;
    memset(&v8, 0, sizeof(v8));
    std::string::assign(&v8, __s);
    sub_10016A2C4((uint64_t)&__p, (uint64_t)&v8, 1);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v8.__r_.__value_.__l.__data_);
    }
    if (v7 < 0) {
      operator delete(__p);
    }
    sub_10035AC40(v3, a2, &v5);
  }
  return result;
}

void sub_10035AA30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10035AA60(uint64_t result, unsigned int a2, std::string::value_type *__s)
{
  if (a2)
  {
    uint64_t v3 = result;
    char v7 = 0;
    LOBYTE(__p) = 0;
    memset(&v8, 0, sizeof(v8));
    std::string::assign(&v8, __s);
    sub_10016A2C4((uint64_t)&__p, (uint64_t)&v8, 1);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v8.__r_.__value_.__l.__data_);
    }
    if (v7 < 0) {
      operator delete(__p);
    }
    sub_10035AC40(v3, a2, &v5);
  }
  return result;
}

void sub_10035AB20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10035AB50(uint64_t result, unsigned int a2, std::string::value_type *__s)
{
  if (a2)
  {
    uint64_t v3 = result;
    char v7 = 0;
    LOBYTE(__p) = 0;
    memset(&v8, 0, sizeof(v8));
    std::string::assign(&v8, __s);
    sub_10016A2C4((uint64_t)&__p, (uint64_t)&v8, 1);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v8.__r_.__value_.__l.__data_);
    }
    if (v7 < 0) {
      operator delete(__p);
    }
    sub_10035AC40(v3, a2, &v5);
  }
  return result;
}

void sub_10035AC10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10035AC40(uint64_t a1, uint64_t a2, const void **a3)
{
  int v4 = archive_errno();
  if ((unint64_t)qword_10047BF98 >> 1 == 0x595588BD12BF6FE8) {
    int v5 = v4 != 0;
  }
  else {
    int v5 = boost::system::detail::system_cat_holder<void>::instance[6]();
  }
  if (v5) {
    uint64_t v6 = 3;
  }
  else {
    uint64_t v6 = 2;
  }
  std::system_category();
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10047D090, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10047D090))
  {
    __cxa_atexit((void (*)(void *))std::error_category::~error_category, &off_10047D088, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_10047D090);
  }
  uint64_t v7 = archive_error_string();
  __cxa_allocate_exception(0x60uLL);
  int v8 = *((char *)a3 + 23);
  if (v8 >= 0) {
    size_t v9 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v9 = (size_t)a3[1];
  }
  unint64_t v10 = v9 + 2;
  if (v9 + 2 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  uint64_t v18 = v6;
  if (v10 >= 0x17)
  {
    uint64_t v12 = (v10 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v10 | 7) != 0x17) {
      uint64_t v12 = v10 | 7;
    }
    uint64_t v13 = v12 + 1;
    p_dst = (std::string *)operator new(v12 + 1);
    __dst.__r_.__value_.__l.__size_ = v9 + 2;
    __dst.__r_.__value_.__r.__words[2] = v13 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  }
  else
  {
    memset(&__dst, 0, sizeof(__dst));
    p_dst = &__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v9 + 2;
    if (!v9) {
      goto LABEL_23;
    }
  }
  if (v8 >= 0) {
    __int16 v14 = a3;
  }
  else {
    __int16 v14 = *a3;
  }
  memmove(p_dst, v14, v9);
LABEL_23:
  strcpy((char *)p_dst + v9, ": ");
  if (v7) {
    std::runtime_error v15 = (const std::string::value_type *)v7;
  }
  else {
    std::runtime_error v15 = "";
  }
  std::string v16 = std::string::append(&__dst, v15);
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  std::string::size_type v25 = v16->__r_.__value_.__r.__words[2];
  long long v24 = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  v20[0] = v4;
  v20[1] = 0;
  uint64_t v21 = &boost::system::detail::system_cat_holder<void>::instance;
  uint64_t v22 = v18;
  boost::filesystem::filesystem_error::filesystem_error(v26, &v24, v20);
  sub_10018E868((uint64_t)v19);
  sub_100171084((uint64_t)v26, (uint64_t)"void ArchiveHandle::throw_err(int, const std::string &) const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/util/archive_handle.cpp", 301, (uint64_t)v19);
}

void sub_10035AF50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *__p,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,char a39)
{
  *(void *)(v40 - 136) = &off_100451DC0;
  uint64_t v42 = *(void *)(v40 - 128);
  if (v42 && (*(unsigned int (**)(uint64_t))(*(void *)v42 + 32))(v42)) {
    *(void *)(v40 - 12++*(void *)(result + 8) = 0;
  }
  boost::filesystem::filesystem_error::~filesystem_error((boost::filesystem::filesystem_error *)(v40 - 184));
  if (__p)
  {
    operator delete(__p);
    boost::filesystem::filesystem_error::~filesystem_error((boost::filesystem::filesystem_error *)&a39);
    if ((a38 & 0x80000000) == 0)
    {
LABEL_9:
      if (a32 < 0) {
        operator delete(a27);
      }
      __cxa_free_exception(v39);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    boost::filesystem::filesystem_error::~filesystem_error((boost::filesystem::filesystem_error *)&a39);
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_9;
    }
  }
  operator delete(a33);
  goto LABEL_9;
}

void sub_10035B070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a29 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v29);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x10035B060);
}

void sub_10035B094(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10035B0AC(uint64_t result, unsigned int a2, std::string::value_type *__s)
{
  if (a2)
  {
    uint64_t v3 = result;
    char v7 = 0;
    LOBYTE(__p) = 0;
    memset(&v8, 0, sizeof(v8));
    std::string::assign(&v8, __s);
    sub_10016A2C4((uint64_t)&__p, (uint64_t)&v8, 1);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v8.__r_.__value_.__l.__data_);
    }
    if (v7 < 0) {
      operator delete(__p);
    }
    sub_10035AC40(v3, a2, &v5);
  }
  return result;
}

void sub_10035B16C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10035B19C(uint64_t result, unsigned int a2, std::string::value_type *__s)
{
  if (a2)
  {
    uint64_t v3 = result;
    char v7 = 0;
    LOBYTE(__p) = 0;
    memset(&v8, 0, sizeof(v8));
    std::string::assign(&v8, __s);
    sub_10016A2C4((uint64_t)&__p, (uint64_t)&v8, 1);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v8.__r_.__value_.__l.__data_);
    }
    if (v7 < 0) {
      operator delete(__p);
    }
    sub_10035AC40(v3, a2, &v5);
  }
  return result;
}

void sub_10035B25C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10035B28C(uint64_t result, unsigned int a2, std::string::value_type *__s)
{
  if (a2)
  {
    uint64_t v3 = result;
    char v7 = 0;
    LOBYTE(__p) = 0;
    memset(&v8, 0, sizeof(v8));
    std::string::assign(&v8, __s);
    sub_10016A2C4((uint64_t)&__p, (uint64_t)&v8, 1);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v8.__r_.__value_.__l.__data_);
    }
    if (v7 < 0) {
      operator delete(__p);
    }
    sub_10035AC40(v3, a2, &v5);
  }
  return result;
}

void sub_10035B34C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10035B37C(uint64_t result, unsigned int a2, std::string::value_type *__s)
{
  if (a2)
  {
    uint64_t v3 = result;
    char v7 = 0;
    LOBYTE(__p) = 0;
    memset(&v8, 0, sizeof(v8));
    std::string::assign(&v8, __s);
    sub_10016A2C4((uint64_t)&__p, (uint64_t)&v8, 1);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v8.__r_.__value_.__l.__data_);
    }
    if (v7 < 0) {
      operator delete(__p);
    }
    sub_10035AC40(v3, a2, &v5);
  }
  return result;
}

void sub_10035B43C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10035B46C(uint64_t result, unsigned int a2, std::string::value_type *__s)
{
  if (a2)
  {
    uint64_t v3 = result;
    char v7 = 0;
    LOBYTE(__p) = 0;
    memset(&v8, 0, sizeof(v8));
    std::string::assign(&v8, __s);
    sub_10016A2C4((uint64_t)&__p, (uint64_t)&v8, 1);
    if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v8.__r_.__value_.__l.__data_);
    }
    if (v7 < 0) {
      operator delete(__p);
    }
    sub_10035AC40(v3, a2, &v5);
  }
  return result;
}

void sub_10035B52C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10035B55C(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

uint64_t sub_10035B58C(uint64_t result, unsigned int a2, std::string::value_type *__s, uint64_t *a4, const std::string::value_type *a5, int *a6)
{
  if (a2)
  {
    uint64_t v22 = result;
    char v27 = 0;
    LOBYTE(v26) = 0;
    memset(&v32, 0, sizeof(v32));
    std::string::assign(&v32, __s);
    memset(&v33, 0, sizeof(v33));
    if ((sub_10035B91C(a4, &v33) & 1) == 0)
    {
      __int16 v14 = std::bad_cast::bad_cast(&v36);
      v36.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)v14);
    }
    memset(&v34, 0, sizeof(v34));
    std::string::assign(&v34, a5);
    p_p = &__p;
    memset(&__p, 0, sizeof(__p));
    unint64_t v39 = (char *)&v36.__vftable + 2;
    uint64_t v40 = (char *)&v38 + 7;
    int v8 = *a6;
    if (*a6 >= 0) {
      int v9 = *a6;
    }
    else {
      int v9 = -v8;
    }
    int v28 = v9;
    long long v29 = (char *)&v38 + 7;
    char v30 = 48;
    int v31 = 48;
    uint64_t v10 = sub_10000D008((uint64_t)&v28);
    uint64_t v11 = (void *)v10;
    if (v8 < 0)
    {
      *(unsigned char *)(v10 - 1) = 45;
      uint64_t v11 = (void *)(v10 - 1);
    }
    unint64_t v39 = (char *)v11;
    uint64_t v40 = (char *)&v38 + 7;
    uint64_t v12 = (char *)((char *)&v38 + 7 - (char *)v11);
    if ((unint64_t)((char *)&v38 + 7 - (char *)v11) >= 0x17)
    {
      std::string::__grow_by(&__p, 0x16uLL, (std::string::size_type)(v12 - 22), 0, 0, 0, 0);
      __p.__r_.__value_.__l.__size_ = 0;
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
    }
    if (v11 == (_UNKNOWN ***)((char *)&v38 + 7))
    {
      uint64_t v13 = p_p;
    }
    else
    {
      unint64_t v15 = (char *)&v36 - (char *)v11 + 23;
      if (v15 < 0x20 || (unint64_t)((char *)p_p - (char *)v11) < 0x20)
      {
        uint64_t v13 = p_p;
        std::string v16 = (std::string::value_type *)v11;
      }
      else
      {
        uint64_t v13 = (std::string *)((char *)p_p + (v15 & 0xFFFFFFFFFFFFFFE0));
        std::string v16 = (char *)v11 + (v15 & 0xFFFFFFFFFFFFFFE0);
        long long v17 = (long long *)(v11 + 2);
        uint64_t v18 = &p_p->__r_.__value_.__r.__words[2];
        unint64_t v19 = v15 & 0xFFFFFFFFFFFFFFE0;
        do
        {
          long long v20 = *v17;
          *((_OWORD *)v18 - 1) = *(v17 - 1);
          *(_OWORD *)uint64_t v18 = v20;
          v17 += 2;
          v18 += 4;
          v19 -= 32;
        }
        while (v19);
        if (v15 == (v15 & 0xFFFFFFFFFFFFFFE0)) {
          goto LABEL_22;
        }
      }
      do
      {
        std::string::value_type v21 = *v16++;
        v13->__r_.__value_.__s.__data_[0] = v21;
        uint64_t v13 = (std::string *)((char *)v13 + 1);
      }
      while (v16 != (char *)&v38 + 7);
    }
LABEL_22:
    v13->__r_.__value_.__s.__data_[0] = 0;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      __p.__r_.__value_.__l.__size_ = (char *)&v38 + 7 - (char *)v11;
    }
    else {
      *((unsigned char *)&__p.__r_.__value_.__s + 23) = v12 & 0x7F;
    }
    sub_10016A2C4((uint64_t)&v26, (uint64_t)&v32, 4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_27;
      }
    }
    else if ((SHIBYTE(v34.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_27:
      if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
        goto LABEL_28;
      }
      goto LABEL_34;
    }
    operator delete(v34.__r_.__value_.__l.__data_);
    if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0)
    {
LABEL_28:
      operator delete(v33.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_29;
      }
      goto LABEL_35;
    }
LABEL_34:
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_29:
      if ((v27 & 0x80000000) == 0) {
        goto LABEL_31;
      }
      goto LABEL_30;
    }
LABEL_35:
    operator delete(v32.__r_.__value_.__l.__data_);
    if ((v27 & 0x80000000) == 0) {
LABEL_31:
    }
      sub_10035AC40(v22, a2, (const void **)&v36.__vftable);
LABEL_30:
    operator delete(v26);
    goto LABEL_31;
  }
  return result;
}

void sub_10035B878(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,int a33,__int16 a34,char a35,char a36,uint64_t a37,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (*(char *)(v42 - 73) < 0)
  {
    operator delete(*(void **)(v42 - 96));
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10035B91C(uint64_t *a1, std::string *a2)
{
  long long v23 = 0u;
  long long v24 = 0u;
  memset(v22, 0, sizeof(v22));
  std::streambuf::basic_streambuf();
  *(_OWORD *)std::string __p = 0u;
  long long v26 = 0u;
  uint64_t v27 = 24;
  *(void *)&long long v23 = 0;
  v22[0].n128_u64[0] = (unint64_t)off_100453E60;
  std::ios_base::init(&v29, v22);
  uint64_t v30 = 0;
  int v31 = -1;
  std::string v33 = (char *)&v32;
  std::string v34 = (char *)&v32 + 2;
  sub_10035BBC0(v22, a1);
  uint64_t v5 = v4;
  if (v4)
  {
    char v7 = v33;
    uint64_t v6 = v34;
    unint64_t v8 = v34 - v33;
    if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
    {
      unint64_t v12 = a2->__r_.__value_.__r.__words[2];
      std::string::size_type v11 = (v12 & 0x7FFFFFFFFFFFFFFFLL) - 1;
      if (v11 >= v8)
      {
        unint64_t v13 = HIBYTE(v12);
LABEL_9:
        if ((v13 & 0x80u) == 0) {
          int v9 = a2;
        }
        else {
          int v9 = (std::string *)a2->__r_.__value_.__r.__words[0];
        }
LABEL_12:
        if (v7 == v6)
        {
          __int16 v14 = v9;
        }
        else
        {
          if (v8 < 0x20 || (unint64_t)((char *)v9 - v7) < 0x20)
          {
            __int16 v14 = v9;
            unint64_t v15 = v7;
          }
          else
          {
            __int16 v14 = (std::string *)((char *)v9 + (v8 & 0xFFFFFFFFFFFFFFE0));
            unint64_t v15 = &v7[v8 & 0xFFFFFFFFFFFFFFE0];
            std::string v16 = (long long *)(v7 + 16);
            long long v17 = &v9->__r_.__value_.__r.__words[2];
            unint64_t v18 = v8 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              long long v19 = *v16;
              *((_OWORD *)v17 - 1) = *(v16 - 1);
              *(_OWORD *)long long v17 = v19;
              v16 += 2;
              v17 += 4;
              v18 -= 32;
            }
            while (v18);
            if (v8 == (v8 & 0xFFFFFFFFFFFFFFE0)) {
              goto LABEL_22;
            }
          }
          do
          {
            std::string::value_type v20 = *v15++;
            v14->__r_.__value_.__s.__data_[0] = v20;
            __int16 v14 = (std::string *)((char *)v14 + 1);
          }
          while (v15 != v6);
        }
LABEL_22:
        v14->__r_.__value_.__s.__data_[0] = 0;
        if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
          a2->__r_.__value_.__l.__size_ = v8;
        }
        else {
          *((unsigned char *)&a2->__r_.__value_.__s + 23) = v8 & 0x7F;
        }
        goto LABEL_25;
      }
      std::string::size_type size = a2->__r_.__value_.__l.__size_;
    }
    else
    {
      int v9 = a2;
      if (v8 <= 0x16) {
        goto LABEL_12;
      }
      std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
      std::string::size_type v11 = 22;
    }
    std::string::__grow_by(a2, v11, v8 - v11, size, 0, size, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    LOBYTE(v13) = *((unsigned char *)&a2->__r_.__value_.__s + 23);
    goto LABEL_9;
  }
LABEL_25:
  std::ostream::~ostream();
  if (SBYTE7(v26) < 0) {
    operator delete(__p[0]);
  }
  std::streambuf::~streambuf();
  return v5;
}

void sub_10035BB80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10035BB94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10035BBA8(void *a1)
{
}

__n128 sub_10035BBC0(__n128 *a1, uint64_t *a2)
{
  uint64_t v4 = &a1[6].n128_u64[1];
  uint64_t v5 = (std::ios_base *)&a1[6].n128_i8[*(void *)(a1[6].n128_u64[1] - 24) + 8];
  v5->__exceptions_ = 1;
  std::ios_base::clear(v5, v5->__rdstate_);
  sub_10025BDCC(a2);
  if ((v10 & 0x80u) == 0) {
    uint64_t v6 = __p;
  }
  else {
    uint64_t v6 = (void **)__p[0];
  }
  if ((v10 & 0x80u) == 0) {
    uint64_t v7 = v10;
  }
  else {
    uint64_t v7 = (uint64_t)__p[1];
  }
  sub_10002986C(v4, (uint64_t)v6, v7);
  if ((char)v10 < 0) {
    operator delete(__p[0]);
  }
  __n128 result = *(__n128 *)(*(unint64_t *)((char *)v4 + *(void *)(a1[6].n128_u64[1] - 24) + 40) + 40);
  a1[17] = result;
  return result;
}

uint64_t sub_10035BCB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  if (v25 < 0) {
    operator delete(v24);
  }
  if (a2 != 1) {
    _Unwind_Resume(exception_object);
  }
  __cxa_begin_catch(exception_object);
  __cxa_end_catch();
  return 0;
}

void sub_10035BD08(std::error_category *a1)
{
  std::error_category::~error_category(a1);

  operator delete();
}

const char *sub_10035BD40()
{
  return "libarchive_error";
}

void sub_10035BD4C(int __val@<W1>, uint64_t a2@<X8>)
{
  switch(__val)
  {
    case -30:
      uint64_t v3 = (char *)operator new(0x20uLL);
      *(void *)a2 = v3;
      *(_OWORD *)(a2 + ++*(void *)(result + 8) = xmmword_1003E74F0;
      strcpy(v3, "no more operations possible");
      break;
    case -25:
      *(unsigned char *)(a2 + 23) = 15;
      strcpy((char *)a2, "cannot complete");
      break;
    case -20:
      *(unsigned char *)(a2 + 23) = 4;
      strcpy((char *)a2, "warn");
      break;
    case -10:
      *(unsigned char *)(a2 + 23) = 5;
      strcpy((char *)a2, "retry");
      break;
    case 0:
      *(unsigned char *)(a2 + 23) = 2;
      strcpy((char *)a2, "ok");
      break;
    case 1:
      *(unsigned char *)(a2 + 23) = 3;
      *(_DWORD *)a2 = 6713189;
      break;
    default:
      std::to_string(&v5, __val);
      uint64_t v4 = std::string::insert(&v5, 0, "unknown error code ");
      *(std::string *)a2 = *v4;
      v4->__r_.__value_.__l.__size_ = 0;
      v4->__r_.__value_.__r.__words[2] = 0;
      v4->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(v5.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v5.__r_.__value_.__l.__data_);
      }
      break;
  }
}

void sub_10035BEFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10035BF98()
{
}

void sub_10035C234(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100156F18((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10035C248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_100156F18((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10035C264(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_10035C2F8()
{
}

void sub_10035C354()
{
}

void sub_10035C368(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  sub_1000CD728((const char *)((unint64_t)"P25tag_libarchive_error_code" & 0x7FFFFFFFFFFFFFFFLL), &v13);
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)&v13;
  }
  else {
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)v13.__r_.__value_.__r.__words[0];
  }
  std::string::insert(&v13, v4, 91);
  std::string v14 = v13;
  memset(&v13, 0, sizeof(v13));
  std::string v5 = std::string::append(&v14, "] = ");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v15.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v15.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  sub_10035C5AC(a1 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v7 = __p;
  }
  else {
    uint64_t v7 = (void **)__p[0];
  }
  if ((v12 & 0x80u) == 0) {
    std::string::size_type v8 = v12;
  }
  else {
    std::string::size_type v8 = (std::string::size_type)__p[1];
  }
  int v9 = std::string::append(&v15, (const std::string::value_type *)v7, v8);
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v16.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v16.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  std::string::push_back(&v16, 10);
  *a2 = v16;
  memset(&v16, 0, sizeof(v16));
  if ((char)v12 < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_17;
    }
  }
  else if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v15.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_13:
    if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_18:
    operator delete(v13.__r_.__value_.__l.__data_);
    return;
  }
LABEL_17:
  operator delete(v14.__r_.__value_.__l.__data_);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_18;
  }
}

void sub_10035C4E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0)
  {
    operator delete(*(void **)(v33 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a33 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_6:
  }
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10035C5AC(uint64_t a1)
{
  sub_1000CD96C((uint64_t)v6);
  unsigned int v2 = (const char *)(*(uint64_t (**)(void))(**(void **)(a1 + 8) + 16))(*(void *)(a1 + 8));
  size_t v3 = strlen(v2);
  std::string::const_iterator v4 = sub_10002986C(v6, (uint64_t)v2, v3);
  char v8 = 58;
  sub_10002986C(v4, (uint64_t)&v8, 1);
  std::ostream::operator<<();
  std::stringbuf::str();
  if (v7 < 0) {
    operator delete((void *)v6[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_10035C730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10035C744()
{
}

void sub_10035C9D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_10035CA90((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10035C9E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_10035CA90((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10035CA00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10035CA90(uint64_t a1)
{
  unsigned int v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_10035CB38()
{
}

void sub_10035CC24(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    sub_1003A3598(v1);
  }
  __cxa_rethrow();
}

void sub_10035CC3C(_Unwind_Exception *a1)
{
}

void sub_10035CC54()
{
}

uint64_t sub_10035CC68(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 24))();
  }
  return result;
}

uint64_t sub_10035CC98()
{
  return 0;
}

uint64_t sub_10035CCA0()
{
  return 0;
}

uint64_t sub_10035CCA8()
{
  return 0;
}

void sub_10035CCB0()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10035CD28()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

std::string *sub_10035CDA0@<X0>(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10047E378, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_10047E378))
  {
    sub_10021FA6C((uint64_t)&unk_10047E380, "[^a-f0-9]", 0);
  }
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  uint64_t v4 = *(unsigned __int8 *)(a1 + 23);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = a1;
  }
  else {
    uint64_t v5 = *(void *)a1;
  }
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *(void *)(a1 + 8);
  }
  return sub_10035CEA8(a2, v5, (char *)(v5 + v4), (uint64_t)&unk_10047E380, "", 0);
}

void sub_10035CE74(_Unwind_Exception *a1)
{
}

void sub_10035CE8C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_10035CEA8(std::string *a1, uint64_t a2, char *a3, uint64_t a4, char *a5, int a6)
{
  __int16 v6 = a6;
  int v9 = (std::string::value_type *)a2;
  sub_10035D7C8((uint64_t)v20, a2, a3, a4, a6);
  std::string::size_type v11 = v22;
  if (v22 == __p)
  {
    if ((v6 & 0x200) != 0) {
      goto LABEL_20;
    }
    for (; v9 != a3; ++v9)
      std::string::push_back(a1, *v9);
  }
  else
  {
    unsigned __int8 v12 = (unsigned __int8 *)&a5[strlen(a5)];
    if ((v6 & 0x200) != 0)
    {
      if ((v6 & 0x400) != 0)
      {
        a1 = sub_10035D364((uint64_t)&__p, a1, (unsigned __int8 *)a5, v12, v6);
        goto LABEL_19;
      }
      do
      {
        a1 = sub_10035D364((uint64_t)&__p, a1, (unsigned __int8 *)a5, v12, v6);
        std::string v13 = v25;
        std::string v14 = v26;
        sub_10035D600((uint64_t)v20);
      }
      while (v22 != __p);
    }
    else
    {
      if ((v6 & 0x400) != 0)
      {
        unint64_t v18 = v23;
        for (uint64_t i = v24; v18 != i; ++v18)
          std::string::push_back(a1, *v18);
        a1 = sub_10035D364((uint64_t)&__p, a1, (unsigned __int8 *)a5, v12, v6);
        std::string v13 = v25;
        std::string v14 = v26;
        if ((v6 & 0x200) != 0) {
          goto LABEL_19;
        }
        goto LABEL_15;
      }
      do
      {
        std::string v15 = v23;
        for (j = v24; v15 != j; ++v15)
          std::string::push_back(a1, *v15);
        a1 = sub_10035D364((uint64_t)&__p, a1, (unsigned __int8 *)a5, v12, v6);
        std::string v13 = v25;
        std::string v14 = v26;
        sub_10035D600((uint64_t)v20);
      }
      while (v22 != __p);
    }
    if ((v6 & 0x200) == 0)
    {
LABEL_15:
      while (v13 != v14)
        std::string::push_back(a1, *v13++);
    }
  }
LABEL_19:
  std::string::size_type v11 = __p;
LABEL_20:
  if (v11)
  {
    uint64_t v22 = v11;
    operator delete(v11);
  }
  return a1;
}

void sub_10035D08C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_10035D0CC(void *a1)
{
  return a1[1] - *a1 == 25 && *(unsigned __int16 *)(*a1 + 2) == 5378;
}

BOOL sub_10035D0F8(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 87);
  if ((v1 & 0x80u) != 0) {
    uint64_t v1 = *(void *)(a1 + 72);
  }
  if (v1) {
    return sub_10035D138(a1 + 64);
  }
  uint64_t v3 = *(unsigned __int8 *)(a1 + 135);
  if ((v3 & 0x80u) != 0) {
    uint64_t v3 = *(void *)(a1 + 120);
  }
  return v3 == 32;
}

BOOL sub_10035D138(uint64_t a1)
{
  sub_10035CDA0(a1, &v7);
  if ((SHIBYTE(v7.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) != 50) {
      return 0;
    }
    uint64_t v1 = (_DWORD *)v7.__r_.__value_.__r.__words + 1;
    goto LABEL_6;
  }
  if (v7.__r_.__value_.__l.__size_ == 50)
  {
    uint64_t v1 = (_DWORD *)(v7.__r_.__value_.__r.__words[0] + 4);
LABEL_6:
    *((unsigned char *)&__p.__r_.__value_.__s + 23) = 4;
    LODWORD(__p.__r_.__value_.__l.__data_) = *v1;
    __p.__r_.__value_.__s.__data_[4] = 0;
    __int16 v2 = std::stoi(&__p, 0, 16);
    __int16 v3 = v2;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      BOOL v4 = v3 == 533;
      if ((SHIBYTE(v7.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return v4;
      }
    }
    else
    {
      BOOL v4 = v2 == 533;
      if ((SHIBYTE(v7.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return v4;
      }
    }
    goto LABEL_12;
  }
  BOOL v4 = 0;
LABEL_12:
  operator delete(v7.__r_.__value_.__l.__data_);
  return v4;
}

void sub_10035D234(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((a20 & 0x80000000) == 0) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else if ((a20 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10035D270(uint64_t a1, void *a2)
{
  uint64_t v2 = *a2;
  if (a2[1] - *a2 != 25 || *(_WORD *)(v2 + 2) != 5378) {
    return 0;
  }
  sub_100343690(v2 + 4, v2 + 20);
  sub_1000A31AC(a1, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  unsigned int v5 = *(unsigned __int16 *)(*a2 + 22);
  sub_1001AB830(a1, bswap32(*(unsigned __int16 *)(*a2 + 20)) >> 16);
  sub_1001AB828(a1, bswap32(v5) >> 16);
  sub_1001AB820(a1, *(unsigned char *)(*a2 + 24));
  return 1;
}

void sub_10035D348(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_10035D364(uint64_t a1, std::string *this, unsigned __int8 *a3, unsigned __int8 *a4, __int16 a5)
{
  __int16 v6 = a3;
  if ((a5 & 0x100) != 0)
  {
    if (a3 == a4) {
      return this;
    }
    while (1)
    {
      int v10 = *v6;
      if (v10 == 92)
      {
        int v9 = v6 + 1;
        if (v6 + 1 != a4)
        {
          int v10 = *v9;
          if ((v10 - 48) <= 9u)
          {
            unint64_t v14 = (v10 - 48);
            if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3) <= v14) {
              uint64_t v15 = a1 + 24;
            }
            else {
              uint64_t v15 = *(void *)a1 + 24 * v14;
            }
            std::string v16 = *(std::string::value_type **)v15;
            long long v17 = *(std::string::value_type **)(v15 + 8);
            if (*(std::string::value_type **)v15 != v17)
            {
              do
              {
                std::string::value_type v18 = *v16++;
                std::string::push_back(this, v18);
              }
              while (v16 != v17);
            }
            goto LABEL_9;
          }
          ++v6;
        }
      }
      else if (v10 == 38)
      {
        std::string::size_type v11 = **(std::string::value_type ***)a1;
        unsigned __int8 v12 = *(std::string::value_type **)(*(void *)a1 + 8);
        while (v11 != v12)
        {
          std::string::value_type v13 = *v11++;
          std::string::push_back(this, v13);
        }
        goto LABEL_8;
      }
      std::string::push_back(this, v10);
LABEL_8:
      int v9 = v6;
LABEL_9:
      __int16 v6 = v9 + 1;
      if (v9 + 1 == a4) {
        return this;
      }
    }
  }
  if (a3 != a4)
  {
    do
    {
      int v19 = *v6;
      std::string::value_type v20 = v6 + 1;
      if (v19 == 36 && v20 != a4)
      {
        int v22 = (char)*v20;
        int v19 = *v20;
        if (v22 > 38)
        {
          if (v22 == 39)
          {
            std::ios_base v29 = *(std::string::value_type **)(a1 + 72);
            uint64_t v30 = *(std::string::value_type **)(a1 + 80);
            while (v29 != v30)
            {
              std::string::value_type v31 = *v29++;
              std::string::push_back(this, v31);
            }
            goto LABEL_26;
          }
          if (v22 == 96)
          {
            long long v26 = *(std::string::value_type **)(a1 + 48);
            uint64_t v27 = *(std::string::value_type **)(a1 + 56);
            while (v26 != v27)
            {
              std::string::value_type v28 = *v26++;
              std::string::push_back(this, v28);
            }
            goto LABEL_26;
          }
        }
        else
        {
          if (v22 == 36) {
            goto LABEL_25;
          }
          if (v22 == 38)
          {
            long long v23 = **(std::string::value_type ***)a1;
            long long v24 = *(std::string::value_type **)(*(void *)a1 + 8);
            while (v23 != v24)
            {
              std::string::value_type v25 = *v23++;
              std::string::push_back(this, v25);
            }
            goto LABEL_26;
          }
        }
        if ((v19 - 48) <= 9)
        {
          unint64_t v32 = *v20 - 48;
          if (v6 + 2 != a4)
          {
            uint64_t v33 = v6[2];
            unsigned int v34 = v33 - 48;
            uint64_t v35 = v33 + 10 * (int)v32 - 48;
            if (v34 > 9)
            {
              std::string::value_type v20 = v6 + 1;
            }
            else
            {
              unint64_t v32 = v35;
              std::string::value_type v20 = v6 + 2;
            }
          }
          if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3) <= v32) {
            uint64_t v36 = a1 + 24;
          }
          else {
            uint64_t v36 = *(void *)a1 + 24 * (int)v32;
          }
          int v37 = *(std::string::value_type **)v36;
          int8x8_t v38 = *(std::string::value_type **)(v36 + 8);
          if (*(std::string::value_type **)v36 != v38)
          {
            do
            {
              std::string::value_type v39 = *v37++;
              std::string::push_back(this, v39);
            }
            while (v37 != v38);
          }
          goto LABEL_26;
        }
        LOBYTE(v19) = 36;
      }
      std::string::value_type v20 = v6;
LABEL_25:
      std::string::push_back(this, v19);
LABEL_26:
      __int16 v6 = v20 + 1;
    }
    while (v20 + 1 != a4);
  }
  return this;
}

uint64_t sub_10035D600(uint64_t a1)
{
  uint64_t v3 = a1 + 32;
  uint64_t v2 = *(void **)(a1 + 32);
  int v4 = *(_DWORD *)(v3 - 8);
  int v5 = v4 | 0x800;
  *(_DWORD *)(v3 - ++*(void *)(result + 8) = v4 | 0x800;
  if (*(void **)(v3 + 8) == v2) {
    __int16 v6 = (void *)(v3 + 24);
  }
  else {
    __int16 v6 = v2;
  }
  uint64_t v7 = v6[1];
  if (*v6 != v7)
  {
LABEL_5:
    *(_DWORD *)(a1 + ++*(void *)(result + 24) = v5 | 0x80;
    int v9 = *(char **)(a1 + 8);
    uint64_t v8 = *(void *)(a1 + 16);
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    char v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    char v22 = 0;
    char v23 = 0;
    uint64_t v24 = 0;
    *(_OWORD *)std::string __p = 0u;
    memset(v16, 0, sizeof(v16));
    char v10 = sub_10022B094(v8, v7, (uint64_t)v9, (uint64_t)__p, v5 | 0x80u);
    sub_10022B3A4((void **)v3, v7, v9, (uint64_t *)__p, (v5 & 0x800) != 0);
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    if ((v10 & 1) == 0)
    {
      uint64_t v2 = *(void **)v3;
      if (!*(void *)v3)
      {
LABEL_10:
        *(unsigned char *)(a1 + 12++*(void *)(result + 8) = 0;
        *(_OWORD *)uint64_t v3 = 0u;
        *(_OWORD *)(v3 + 16) = 0u;
        *(_OWORD *)(v3 + 25) = 0u;
        *(void *)(a1 + 80) = 0;
        *(void *)(a1 + 8++*(void *)(result + 8) = 0;
        *(unsigned char *)(a1 + 96) = 0;
        *(void *)(a1 + 104) = 0;
        *(void *)(a1 + 112) = 0;
        *(unsigned char *)(a1 + 120) = 0;
        *(void *)(a1 + 136) = 0;
        return a1;
      }
LABEL_9:
      *(void *)(a1 + 40) = v2;
      operator delete(v2);
      *(void *)uint64_t v3 = 0;
      *(void *)(v3 + ++*(void *)(result + 8) = 0;
      *(void *)(v3 + 16) = 0;
      goto LABEL_10;
    }
    return a1;
  }
  unsigned __int8 v12 = *(char **)(a1 + 8);
  if (v12 == (char *)v7)
  {
    if (!v2) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  char v19 = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  char v22 = 0;
  char v23 = 0;
  uint64_t v24 = 0;
  *(_OWORD *)std::string __p = 0u;
  memset(v16, 0, sizeof(v16));
  char v14 = sub_10022B094(v13, v7, (uint64_t)v12, (uint64_t)__p, v4 | 0x860u);
  sub_10022B3A4((void **)v3, v7, v12, (uint64_t *)__p, 1);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  if ((v14 & 1) == 0)
  {
    ++v7;
    int v5 = *(_DWORD *)(a1 + 24);
    goto LABEL_5;
  }
  return a1;
}

void sub_10035D7A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10035D7C8(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, int a5)
{
  __int16 v5 = a5;
  *(void *)a1 = a2;
  *(void *)(a1 + ++*(void *)(result + 8) = a3;
  *(void *)(a1 + 16) = a4;
  *(_DWORD *)(a1 + ++*(void *)(result + 24) = a5;
  *(_OWORD *)(a1 + 32) = 0u;
  int v9 = (void **)(a1 + 32);
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 8++*(void *)(result + 8) = 0;
  *(unsigned char *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(unsigned char *)(a1 + 120) = 0;
  *(unsigned char *)(a1 + 12++*(void *)(result + 8) = 0;
  *(void *)(a1 + 136) = 0;
  *(_OWORD *)(a1 + 4++*(void *)(result + 8) = 0u;
  *(_OWORD *)(a1 + 57) = 0u;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  char v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  char v18 = 0;
  char v19 = 0;
  uint64_t v20 = 0;
  *(_OWORD *)std::string __p = 0u;
  memset(v12, 0, sizeof(v12));
  sub_10022B094(a4, a2, (uint64_t)a3, (uint64_t)__p, a5);
  sub_10022B3A4(v9, a2, a3, (uint64_t *)__p, (v5 & 0x800) != 0);
  if (__p[0])
  {
    __p[1] = __p[0];
    operator delete(__p[0]);
  }
  return a1;
}

void sub_10035D8A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p)
  {
    operator delete(__p);
    uint64_t v13 = *v11;
    if (!*v11) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    uint64_t v13 = *v11;
    if (!*v11) {
      goto LABEL_3;
    }
  }
  *(void *)(v10 + 40) = v13;
  operator delete(v13);
  _Unwind_Resume(exception_object);
}

void sub_10035D8DC()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10035D954()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void *sub_10035D9CC(void *result, uint64_t a2)
{
  *uint64_t result = *(void *)(a2 + 32);
  return result;
}

id sub_10035D9D8()
{
  if (qword_10047BED8 == -1)
  {
    uint64_t v0 = (void *)qword_10047BEE0;
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_100469C90);
    uint64_t v0 = (void *)qword_10047BEE0;
  }
  return v0;
}

void sub_10035DA48(std::string *__str@<X0>, std::string *a2@<X8>)
{
  uint64_t v2 = (const std::string *)&__str->__r_.__value_.__r.__words[1];
  switch(LODWORD(__str->__r_.__value_.__l.__data_) ^ (SLODWORD(__str->__r_.__value_.__l.__data_) >> 31))
  {
    case 1:
      int data = (int)v2->__r_.__value_.__l.__data_;
      sub_10035DDB0(data, a2);
      break;
    case 2:
      uint64_t v3 = v2->__r_.__value_.__r.__words[0];
      sub_10035DF90(v3, a2);
      break;
    case 3:
      a2->__r_.__value_.__r.__words[0] = 0;
      a2->__r_.__value_.__l.__size_ = 0;
      a2->__r_.__value_.__r.__words[2] = 0;
      std::string::operator=(a2, v2);
      break;
    case 4:
      std::string::size_type v5 = v2->__r_.__value_.__r.__words[0];
      a2->__r_.__value_.__l.__size_ = 0;
      a2->__r_.__value_.__r.__words[2] = 0;
      a2->__r_.__value_.__r.__words[0] = 0;
      if ((sub_1001645DC((double *)&v5, a2) & 1) == 0)
      {
        std::bad_cast::bad_cast(&v6);
        v6.__vftable = (std::bad_cast_vtbl *)&off_100454020;
        sub_1000DB0D4((uint64_t)&v6);
      }
      return;
    case 5:
      sub_10035E16C();
    case 6:
      sub_10035E2E0();
    default:
      sub_10035DC3C();
  }
}

void sub_10035DBF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::bad_cast a10)
{
  std::bad_cast::~bad_cast(&a10);
  if (*(char *)(v10 + 23) < 0) {
    operator delete(*(void **)v10);
  }
  _Unwind_Resume(a1);
}

void sub_10035DC3C()
{
  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003EE0F0;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert empty value to a type");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_100453860;
  sub_10018E868((uint64_t)v0);
  sub_1000D1698(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<std::string>::operator()(boost::none_t) const [T = std::string]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/util/overridable_setting.h", 111, (uint64_t)v0);
}

void sub_10035DD10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void sub_10035DD78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x10035DD68);
}

void sub_10035DD9C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10035DDB0(int a1@<W0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  uint64_t v24 = v22;
  std::string::value_type v25 = &v23;
  if (a1 >= 0) {
    int v4 = a1;
  }
  else {
    int v4 = -a1;
  }
  int v17 = v4;
  char v18 = &v23;
  char v19 = 48;
  int v20 = 48;
  uint64_t v5 = sub_10000D008((uint64_t)&v17);
  std::bad_cast v6 = (char *)v5;
  if ((a1 & 0x80000000) == 0)
  {
    uint64_t v24 = (unsigned char *)v5;
    std::string::value_type v25 = &v23;
    unint64_t v7 = (unint64_t)(&v23 - v5);
    uint64_t v8 = a2;
    if ((unint64_t)(&v23 - v5) < 0x17) {
      goto LABEL_6;
    }
LABEL_14:
    std::string::__grow_by(a2, 0x16uLL, v7 - 22, 0, 0, 0, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v8 = a2;
    }
    else {
      uint64_t v8 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    if (v6 != &v23) {
      goto LABEL_7;
    }
LABEL_18:
    uint64_t v10 = v8;
    goto LABEL_21;
  }
  *(unsigned char *)(v5 - 1) = 45;
  std::bad_cast v6 = (char *)(v5 - 1);
  uint64_t v24 = (unsigned char *)(v5 - 1);
  std::string::value_type v25 = &v23;
  unint64_t v7 = (unint64_t)(&v23 - v5 + 1);
  uint64_t v8 = a2;
  if (v7 >= 0x17) {
    goto LABEL_14;
  }
LABEL_6:
  if (v6 == &v23) {
    goto LABEL_18;
  }
LABEL_7:
  unint64_t v9 = &v21 - v6 + 23;
  if (v9 < 0x20 || (unint64_t)((char *)v8 - v6) < 0x20)
  {
    uint64_t v10 = v8;
    std::string::size_type v11 = v6;
  }
  else
  {
    uint64_t v10 = (std::string *)((char *)v8 + (v9 & 0xFFFFFFFFFFFFFFE0));
    std::string::size_type v11 = &v6[v9 & 0xFFFFFFFFFFFFFFE0];
    unsigned __int8 v12 = (long long *)(v6 + 16);
    uint64_t v13 = &v8->__r_.__value_.__r.__words[2];
    unint64_t v14 = v9 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      long long v15 = *v12;
      *((_OWORD *)v13 - 1) = *(v12 - 1);
      *(_OWORD *)uint64_t v13 = v15;
      v12 += 2;
      v13 += 4;
      v14 -= 32;
    }
    while (v14);
    if (v9 == (v9 & 0xFFFFFFFFFFFFFFE0)) {
      goto LABEL_21;
    }
  }
  do
  {
    std::string::value_type v16 = *v11++;
    v10->__r_.__value_.__s.__data_[0] = v16;
    uint64_t v10 = (std::string *)((char *)v10 + 1);
  }
  while (v11 != &v23);
LABEL_21:
  v10->__r_.__value_.__s.__data_[0] = 0;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
    a2->__r_.__value_.__l.__size_ = v7;
  }
  else {
    *((unsigned char *)&a2->__r_.__value_.__s + 23) = v7 & 0x7F;
  }
}

void sub_10035DF74(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10035DF90(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  char v23 = v21;
  uint64_t v24 = v22;
  if (a1 >= 0) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = -a1;
  }
  v17[0] = v4;
  v17[1] = v22;
  char v18 = 48;
  int v19 = 48;
  uint64_t v5 = sub_100169AA8((uint64_t)v17);
  std::bad_cast v6 = (unsigned char *)v5;
  if ((a1 & 0x8000000000000000) == 0)
  {
    char v23 = (unsigned char *)v5;
    uint64_t v24 = v22;
    unint64_t v7 = (unint64_t)&v22[-v5];
    uint64_t v8 = a2;
    if ((unint64_t)&v22[-v5] < 0x17) {
      goto LABEL_6;
    }
LABEL_14:
    std::string::__grow_by(a2, 0x16uLL, v7 - 22, 0, 0, 0, 0);
    a2->__r_.__value_.__l.__size_ = 0;
    if ((a2->__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v8 = a2;
    }
    else {
      uint64_t v8 = (std::string *)a2->__r_.__value_.__r.__words[0];
    }
    if (v6 != v22) {
      goto LABEL_7;
    }
LABEL_18:
    uint64_t v10 = v8;
    goto LABEL_21;
  }
  *(unsigned char *)(v5 - 1) = 45;
  std::bad_cast v6 = (unsigned char *)(v5 - 1);
  char v23 = (unsigned char *)(v5 - 1);
  uint64_t v24 = v22;
  unint64_t v7 = (unint64_t)&v22[-v5 + 1];
  uint64_t v8 = a2;
  if (v7 >= 0x17) {
    goto LABEL_14;
  }
LABEL_6:
  if (v6 == v22) {
    goto LABEL_18;
  }
LABEL_7:
  unint64_t v9 = &v20 - v6 + 41;
  if (v9 < 0x20 || (unint64_t)((char *)v8 - v6) < 0x20)
  {
    uint64_t v10 = v8;
    std::string::size_type v11 = v6;
  }
  else
  {
    uint64_t v10 = (std::string *)((char *)v8 + (v9 & 0xFFFFFFFFFFFFFFE0));
    std::string::size_type v11 = &v6[v9 & 0xFFFFFFFFFFFFFFE0];
    unsigned __int8 v12 = (long long *)(v6 + 16);
    uint64_t v13 = &v8->__r_.__value_.__r.__words[2];
    unint64_t v14 = v9 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      long long v15 = *v12;
      *((_OWORD *)v13 - 1) = *(v12 - 1);
      *(_OWORD *)uint64_t v13 = v15;
      v12 += 2;
      v13 += 4;
      v14 -= 32;
    }
    while (v14);
    if (v9 == (v9 & 0xFFFFFFFFFFFFFFE0)) {
      goto LABEL_21;
    }
  }
  do
  {
    std::string::value_type v16 = *v11++;
    v10->__r_.__value_.__s.__data_[0] = v16;
    uint64_t v10 = (std::string *)((char *)v10 + 1);
  }
  while (v11 != v22);
LABEL_21:
  v10->__r_.__value_.__s.__data_[0] = 0;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
    a2->__r_.__value_.__l.__size_ = v7;
  }
  else {
    *((unsigned char *)&a2->__r_.__value_.__s + 23) = v7 & 0x7F;
  }
}

void sub_10035E150(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10035E16C()
{
  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003EE100;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert between incompatible types");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_100453860;
  sub_10018E868((uint64_t)v0);
  sub_1000D1698(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<std::string>::operator()(const F &) const [T = std::string, F = std::vector<boost::variant<boost::detail::variant::recursive_flag<boost::none_t>, int, long long, std::string, double, std::vector<boost::recursive_variant_>, std::unordered_map<std::string, boost::recursive_variant_>>>]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/util/overridable_setting.h", 106, (uint64_t)v0);
}

void sub_10035E240(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void sub_10035E2A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x10035E298);
}

void sub_10035E2CC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10035E2E0()
{
  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003EE100;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert between incompatible types");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_100453860;
  sub_10018E868((uint64_t)v0);
  sub_1000D1698(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<std::string>::operator()(const F &) const [T = std::string, F = std::unordered_map<std::string, boost::variant<boost::detail::variant::recursive_flag<boost::none_t>, int, long long, std::string, double, std::vector<boost::recursive_variant_>, std::unordered_map<std::string, boost::recursive_variant_>>>]", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/util/overridable_setting.h", 106, (uint64_t)v0);
}

void sub_10035E3B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void sub_10035E41C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x10035E40CLL);
}

void sub_10035E440(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10035E454(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  std::runtime_error v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

void sub_10035E498()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10035E510()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10035E588()
{
}

void sub_10035E5B0(int a1@<W0>, std::string *a2@<X8>)
{
  int v16 = a1;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  a2->__r_.__value_.__r.__words[0] = 0;
  uint64_t v3 = qword_10047EFA0;
  if (qword_10047EFA0)
  {
    uint64_t v4 = &qword_10047EFA0;
    do
    {
      int v5 = *(_DWORD *)(v3 + 32);
      BOOL v6 = v5 < a1;
      if (v5 >= a1) {
        unint64_t v7 = (uint64_t *)v3;
      }
      else {
        unint64_t v7 = (uint64_t *)(v3 + 8);
      }
      if (!v6) {
        uint64_t v4 = (uint64_t *)v3;
      }
      uint64_t v3 = *v7;
    }
    while (*v7);
    if (v4 != &qword_10047EFA0 && *((_DWORD *)v4 + 8) <= a1)
    {
      std::string::assign(a2, (const std::string::value_type *)v4[5]);
      return;
    }
  }
  std::string::assign(a2, "out-of-range '");
  memset(&v13, 0, sizeof(v13));
  if ((sub_10015EB3C((uint64_t)&v16, &v13) & 1) == 0)
  {
    unsigned __int8 v12 = std::bad_cast::bad_cast(&v17);
    v17.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)v12);
  }
  uint64_t v8 = std::string::append(&v13, "'");
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  int64_t v15 = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  if (v15 >= 0) {
    uint64_t v10 = __p;
  }
  else {
    uint64_t v10 = (void **)__p[0];
  }
  if (v15 >= 0) {
    std::string::size_type v11 = HIBYTE(v15);
  }
  else {
    std::string::size_type v11 = (std::string::size_type)__p[1];
  }
  std::string::append(a2, (const std::string::value_type *)v10, v11);
  if ((SHIBYTE(v15) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_22:
    operator delete(v13.__r_.__value_.__l.__data_);
    return;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_22;
  }
}

void sub_10035E72C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
  {
    operator delete(__p);
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v21 + 23) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a10);
  if ((*(char *)(v21 + 23) & 0x80000000) == 0) {
LABEL_4:
  }
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(*(void **)v21);
  _Unwind_Resume(exception_object);
}

void *sub_10035E7C8(void *a1, int a2)
{
  if (a2)
  {
    if (a2 == 2)
    {
      std::runtime_error v2 = "screen-recording";
      uint64_t v3 = 16;
    }
    else
    {
      std::runtime_error v2 = "front-facing-camera";
      uint64_t v3 = 19;
    }
  }
  else
  {
    std::runtime_error v2 = "rear-facing-camera";
    uint64_t v3 = 18;
  }
  return sub_10002986C(a1, (uint64_t)v2, v3);
}

void sub_10035E804(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  *(_OWORD *)&v24.__r_.__value_.__l.__data_ = 0uLL;
  std::string::value_type v28 = &v26.__r_.__value_.__s.__data_[2];
  std::ios_base v29 = v27;
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4 >= 0) {
    std::string::size_type v5 = *(void *)(a1 + 32);
  }
  else {
    std::string::size_type v5 = -v4;
  }
  v24.__r_.__value_.__r.__words[2] = 0;
  v25.__r_.__value_.__r.__words[0] = v5;
  v25.__r_.__value_.__l.__size_ = (std::string::size_type)v27;
  v25.__r_.__value_.__s.__data_[16] = 48;
  HIDWORD(v25.__r_.__value_.__r.__words[2]) = 48;
  uint64_t v6 = sub_100169AA8((uint64_t)&v25);
  unint64_t v7 = (unsigned char *)v6;
  if (v4 < 0)
  {
    *(unsigned char *)(v6 - 1) = 45;
    unint64_t v7 = (unsigned char *)(v6 - 1);
    std::string::value_type v28 = (std::string::value_type *)(v6 - 1);
    std::ios_base v29 = v27;
    std::string::size_type v8 = (std::string::size_type)&v27[-v6 + 1];
    if (v8 >= 0x17)
    {
LABEL_6:
      std::string::__grow_by(&v24, 0x16uLL, v8 - 22, 0, 0, 0, 0);
      v24.__r_.__value_.__l.__size_ = 0;
      if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        long long v9 = &v24;
      }
      else {
        long long v9 = (std::string *)v24.__r_.__value_.__r.__words[0];
      }
      if (v7 == v27) {
        goto LABEL_10;
      }
      goto LABEL_13;
    }
  }
  else
  {
    std::string::value_type v28 = (std::string::value_type *)v6;
    std::ios_base v29 = v27;
    std::string::size_type v8 = (std::string::size_type)&v27[-v6];
    if ((unint64_t)&v27[-v6] >= 0x17) {
      goto LABEL_6;
    }
  }
  long long v9 = &v24;
  if (v7 == v27)
  {
LABEL_10:
    uint64_t v10 = v9;
    goto LABEL_21;
  }
LABEL_13:
  unint64_t v11 = (char *)&v26 - v7 + 41;
  if (v11 < 0x20 || (unint64_t)((char *)v9 - v7) < 0x20)
  {
    uint64_t v10 = v9;
    unsigned __int8 v12 = v7;
  }
  else
  {
    uint64_t v10 = (std::string *)((char *)v9 + (v11 & 0xFFFFFFFFFFFFFFE0));
    unsigned __int8 v12 = &v7[v11 & 0xFFFFFFFFFFFFFFE0];
    std::string v13 = (long long *)(v7 + 16);
    unint64_t v14 = &v9->__r_.__value_.__r.__words[2];
    unint64_t v15 = v11 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      long long v16 = *v13;
      *((_OWORD *)v14 - 1) = *(v13 - 1);
      *(_OWORD *)unint64_t v14 = v16;
      v13 += 2;
      v14 += 4;
      v15 -= 32;
    }
    while (v15);
    if (v11 == (v11 & 0xFFFFFFFFFFFFFFE0)) {
      goto LABEL_21;
    }
  }
  do
  {
    std::string::value_type v17 = *v12++;
    v10->__r_.__value_.__s.__data_[0] = v17;
    uint64_t v10 = (std::string *)((char *)v10 + 1);
  }
  while (v12 != v27);
LABEL_21:
  v10->__r_.__value_.__s.__data_[0] = 0;
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    v24.__r_.__value_.__l.__size_ = v8;
  }
  else {
    *((unsigned char *)&v24.__r_.__value_.__s + 23) = v8 & 0x7F;
  }
  sub_10035E5B0(*(_DWORD *)(a1 + 96), &v26);
  std::operator+<char>();
  char v18 = std::string::append(&__p, " @ ");
  long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
  v25.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v19;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    char v20 = &v24;
  }
  else {
    char v20 = (std::string *)v24.__r_.__value_.__r.__words[0];
  }
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v24.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v24.__r_.__value_.__l.__size_;
  }
  char v22 = std::string::append(&v25, (const std::string::value_type *)v20, size);
  *a2 = *v22;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v25.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_32:
      if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_33;
      }
      goto LABEL_37;
    }
  }
  else if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_32;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_33:
    if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_38:
    operator delete(v24.__r_.__value_.__l.__data_);
    return;
  }
LABEL_37:
  operator delete(v26.__r_.__value_.__l.__data_);
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_38;
  }
}

void sub_10035EAB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a26 < 0)
  {
    operator delete(a21);
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a32 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a9);
  if ((a32 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_9:
  operator delete(a27);
  if ((a20 & 0x80000000) == 0) {
LABEL_6:
  }
    _Unwind_Resume(exception_object);
LABEL_5:
  operator delete(__p);
  goto LABEL_6;
}

void sub_10035EB38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if ((a17 & 0x80000000) == 0) {
    JUMPOUT(0x10035EADCLL);
  }
  JUMPOUT(0x10035EAD4);
}

void sub_10035EB4C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::to_string(&v4, *(void *)(a1 + 32));
  uint64_t v3 = std::string::insert(&v4, 0, "AttitudeX Input Event @ ");
  *a2 = *v3;
  v3->__r_.__value_.__l.__size_ = 0;
  v3->__r_.__value_.__r.__words[2] = 0;
  v3->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v4.__r_.__value_.__l.__data_);
  }
}

void sub_10035EBCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10035EBE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  *(void *)a1 = a2;
  *(_OWORD *)(a1 + ++*(void *)(result + 8) = *(_OWORD *)a3;
  *(void *)a3 = 0;
  *(void *)(a3 + ++*(void *)(result + 8) = 0;
  *(void *)(a1 + ++*(void *)(result + 24) = 0;
  *(void *)(a1 + 32) = 0;
  uint64_t v5 = a1 + 24;
  *(void *)(v5 + 16) = 0;
  sub_10035F89C((char *)v5, *a4, a4[1], 0x2E8BA2E8BA2E8BA3 * ((a4[1] - *a4) >> 3));
  return a1;
}

uint64_t sub_10035EC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  if ((*(unsigned char *)(a2 + 152) & 4) != 0)
  {
    uint64_t v6 = operator new(0x98uLL);
    v6[1] = 0;
    void v6[2] = 0;
    *uint64_t v6 = off_100468EB8;
    uint64_t v5 = v6 + 3;
    sub_100357B14((uint64_t)(v6 + 3), a2 + 40, v7, v8, v9);
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
  }
  sub_10036CAA0((void *)(a2 + 16), (uint64_t)&__p);
  *(void *)a1 = v4;
  *(void *)(a1 + ++*(void *)(result + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + ++*(void *)(result + 24) = 0;
  sub_10035F89C((char *)(a1 + 24), (uint64_t)__p, (uint64_t)v14, 0x2E8BA2E8BA2E8BA3 * ((v14 - (unsigned char *)__p) >> 3));
  uint64_t v10 = __p;
  if (__p)
  {
    for (uint64_t i = (uint64_t)v14; (unsigned char *)i != v10; i -= 88)
    {
      if (*(unsigned char *)(i - 48)) {
        *(unsigned char *)(i - 4++*(void *)(result + 8) = 0;
      }
    }
    unint64_t v14 = v10;
    operator delete(v10);
  }
  return a1;
}

void sub_10035ED58(void *a1)
{
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  sub_1000A6954(a1);
}

uint64_t sub_10035ED78(uint64_t a1, uint64_t a2)
{
  return sub_1001AB5F8(a1, a2);
}

void sub_10035ED94(char *a1@<X8>)
{
  a1[23] = 13;
  strcpy(a1, "GPSInputEvent");
}

void sub_10035EDBC(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  std::to_string(&v12, *(_DWORD *)(a1 + 8));
  uint64_t v4 = std::string::insert(&v12, 0, "AppOrientationInputEvent ");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v13.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v13.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  uint64_t v6 = std::string::append(&v13, " @ t=");
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v14.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v14.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&__p, *(void *)a1);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  uint64_t v10 = std::string::append(&v14, (const std::string::value_type *)p_p, size);
  *a2 = *v10;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_9:
      if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_10;
      }
      goto LABEL_14;
    }
  }
  else if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_9;
  }
  operator delete(v14.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_10:
    if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_15:
    operator delete(v12.__r_.__value_.__l.__data_);
    return;
  }
LABEL_14:
  operator delete(v13.__r_.__value_.__l.__data_);
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_15;
  }
}

void sub_10035EEF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0)
  {
    operator delete(__p);
    if ((*(char *)(v26 - 25) & 0x80000000) == 0)
    {
LABEL_3:
      if ((a26 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((*(char *)(v26 - 25) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(v26 - 48));
  if ((a26 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }
LABEL_8:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_5:
  }
    _Unwind_Resume(exception_object);
LABEL_9:
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10035EF94(uint64_t a1, uint64_t a2)
{
  return sub_1001AC878(a1, a2);
}

void sub_10035EFB0(char *a1@<X8>)
{
  a1[23] = 16;
  strcpy(a1, "BeaconInputEvent");
}

uint64_t sub_10035EFD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(void *)a1 = a2;
  *(_DWORD *)(a1 + ++*(void *)(result + 8) = a3;
  uint64_t v6 = *(void *)(a4 + 8);
  *(void *)(a1 + 16) = *(void *)a4;
  *(void *)(a1 + ++*(void *)(result + 24) = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  sub_1000771DC(a1 + 32, a4 + 16);
  uint64_t v7 = *(void *)(a4 + 64);
  *(void *)(a1 + 72) = *(void *)(a4 + 56);
  *(void *)(a1 + 80) = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
  }
  *(unsigned char *)(a1 + 8++*(void *)(result + 8) = *(unsigned char *)(a4 + 72);
  return a1;
}

void sub_10035F044(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  if (v3) {
    sub_1003A3868(v3);
  }
  sub_1000A6954(a1);
}

void sub_10035F05C(char *a1@<X8>)
{
  a1[23] = 15;
  strcpy(a1, "ResetInputEvent");
}

void sub_10035F084(char *a1@<X8>)
{
  a1[23] = 14;
  strcpy(a1, "CellInputEvent");
}

double sub_10035F0AC(uint64_t a1, uint64_t a2)
{
  *(void *)&double result = sub_1001A84CC(a1, a2).n128_u64[0];
  return result;
}

void sub_10035F0C8(char *a1@<X8>)
{
  a1[23] = 19;
  strcpy(a1, "PedometryInputEvent");
}

double sub_10035F0F4(uint64_t a1, uint64_t a2)
{
  *(void *)&double result = sub_1001A8DF4(a1, a2).n128_u64[0];
  return result;
}

void sub_10035F110(char *a1@<X8>)
{
  a1[23] = 19;
  strcpy(a1, "AltimeterInputEvent");
}

uint64_t sub_10035F13C()
{
  return sub_1001A4F40();
}

double sub_10035F158@<D0>(uint64_t a1@<X8>)
{
  std::runtime_error v2 = (char *)operator new(0x20uLL);
  *(void *)a1 = v2;
  *(_OWORD *)(a1 + ++*(void *)(result + 8) = xmmword_1003E7210;
  strcpy(v2, "DynamicUniverseInputEvent");
  return *(double *)"iverseInputEvent";
}

void sub_10035F1AC(char *a1@<X8>)
{
  a1[23] = 18;
  strcpy(a1, "CascadiaInputEvent");
}

uint64_t sub_10035F1D4(uint64_t a1, uint64_t a2, uint64_t *a3, double a4, double a5, double a6)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + ++*(void *)(result + 24) = 0;
  *(void *)(a1 + ++*(void *)(result + 8) = 0;
  sub_10034AA1C(a1 + 8, *a3, a3[1], 0x2E8BA2E8BA2E8BA3 * ((a3[1] - *a3) >> 3));
  *(double *)(a1 + 32) = a4;
  *(double *)(a1 + 40) = a5;
  *(double *)(a1 + 4++*(void *)(result + 8) = a6;
  return a1;
}

void sub_10035F250(char *a1@<X8>)
{
  a1[23] = 22;
}

uint64_t sub_10035F274(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 40);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 48);
    if (v5) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v6 = *(void *)(*(void *)(qword_10047EAF8 + 48) + 40);
    if (v6) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v6 = *(void *)(qword_10047E8F0 + 40);
    goto LABEL_4;
  }
  uint64_t v4 = *(void *)(qword_10047EAF8 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  if (!v5) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v6 = *(void *)(v5 + 40);
  if (!v6) {
    goto LABEL_7;
  }
LABEL_4:
  int v7 = *(_DWORD *)(v6 + 40);
  *(void *)a1 = *(void *)(v4 + 40);
  *(_DWORD *)(a1 + ++*(void *)(result + 8) = v7;
  sub_100018854(a1 + 16, v4);
  return a1;
}

char *sub_10035F314@<X0>(uint64_t a1@<X8>)
{
  double result = (char *)operator new(0x20uLL);
  *(void *)a1 = result;
  *(_OWORD *)(a1 + ++*(void *)(result + 8) = xmmword_1003E7240;
  strcpy(result, "ARSessionStateInputEvent");
  return result;
}

void *sub_10035F368(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 40);
  if (v3)
  {
    uint64_t v4 = *(void *)(a2 + 48);
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)(qword_10047EAF8 + 40);
    uint64_t v4 = *(void *)(a2 + 48);
    if (v4)
    {
LABEL_3:
      uint64_t v5 = *(void *)(v4 + 40);
      if (v5) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t v6 = *(void *)(*(void *)(qword_10047E8F0 + 40) + 16);
      if (v6) {
        goto LABEL_5;
      }
LABEL_9:
      uint64_t v6 = *(void *)(qword_10047EA40 + 16);
      goto LABEL_5;
    }
  }
  uint64_t v5 = *(void *)(*(void *)(qword_10047EAF8 + 48) + 40);
  if (!v5) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v6 = *(void *)(v5 + 16);
  if (!v6) {
    goto LABEL_9;
  }
LABEL_5:
  *a1 = *(void *)(v3 + 40);
  sub_1000EF490((uint64_t)(a1 + 1), v6);
  sub_100018854((uint64_t)(a1 + 14), v3);
  return a1;
}

void *sub_10035F428(void *a1, uint64_t a2, uint64_t a3)
{
  *a1 = *(void *)(a2 + 40);
  sub_1000EF490((uint64_t)(a1 + 1), a3);
  sub_100018854((uint64_t)(a1 + 14), a2);
  return a1;
}

char *sub_10035F470@<X0>(uint64_t a1@<X8>)
{
  double result = (char *)operator new(0x19uLL);
  *(void *)a1 = result;
  *(_OWORD *)(a1 + ++*(void *)(result + 8) = xmmword_1003E6DB0;
  strcpy(result, "VIOEstimationInputEvent");
  return result;
}

void *sub_10035F4C4(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 40);
  if (v3)
  {
    uint64_t v4 = *(void *)(a2 + 48);
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)(qword_10047EAF8 + 40);
    uint64_t v4 = *(void *)(a2 + 48);
    if (v4)
    {
LABEL_3:
      uint64_t v5 = *(void *)(v4 + 40);
      if (v5) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t v6 = *(void *)(*(void *)(qword_10047E8F0 + 40) + 32);
      if (v6) {
        goto LABEL_5;
      }
LABEL_9:
      uint64_t v6 = *(void *)(qword_10047EA40 + 32);
      goto LABEL_5;
    }
  }
  uint64_t v5 = *(void *)(*(void *)(qword_10047EAF8 + 48) + 40);
  if (!v5) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v6 = *(void *)(v5 + 32);
  if (!v6) {
    goto LABEL_9;
  }
LABEL_5:
  *a1 = *(void *)(v3 + 40);
  sub_1000FA680((uint64_t)(a1 + 1), v6);
  sub_100018854((uint64_t)(a1 + 10), v3);
  return a1;
}

void *sub_10035F584(void *a1, uint64_t a2, uint64_t a3)
{
  *a1 = *(void *)(a2 + 40);
  sub_1000FA680((uint64_t)(a1 + 1), a3);
  sub_100018854((uint64_t)(a1 + 10), a2);
  return a1;
}

double sub_10035F5CC@<D0>(uint64_t a1@<X8>)
{
  std::runtime_error v2 = (char *)operator new(0x20uLL);
  *(void *)a1 = v2;
  *(_OWORD *)(a1 + ++*(void *)(result + 8) = xmmword_1003E7220;
  strcpy(v2, "VLLocalizationResultInputEvent");
  return *(double *)"ResultInputEvent";
}

uint64_t sub_10035F620(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 40);
  if (v4)
  {
    uint64_t v5 = *(void *)(a3 + 48);
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(qword_10047EAF8 + 40);
    uint64_t v5 = *(void *)(a3 + 48);
    if (v5)
    {
LABEL_3:
      uint64_t v6 = *(void *)(v5 + 48);
      if (v6) {
        goto LABEL_4;
      }
LABEL_8:
      uint64_t v7 = *(void *)(*(void *)(qword_10047E8F0 + 48) + 72);
      if (v7) {
        goto LABEL_5;
      }
LABEL_9:
      uint64_t v7 = *(void *)(qword_10047EA78 + 72);
      goto LABEL_5;
    }
  }
  uint64_t v6 = *(void *)(*(void *)(qword_10047EAF8 + 48) + 48);
  if (!v6) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v7 = *(void *)(v6 + 72);
  if (!v7) {
    goto LABEL_9;
  }
LABEL_5:
  *(void *)a1 = *(void *)(v4 + 40);
  *(_DWORD *)(a1 + ++*(void *)(result + 8) = a2;
  sub_10001D800(a1 + 16, v7);
  sub_100018854(a1 + 176, v4);
  return a1;
}

double sub_10035F6E8@<D0>(uint64_t a1@<X8>)
{
  std::runtime_error v2 = (char *)operator new(0x20uLL);
  *(void *)a1 = v2;
  *(_OWORD *)(a1 + ++*(void *)(result + 8) = xmmword_1003E6DA0;
  strcpy(v2, "CLProviderPositionInputEvent");
  return *(double *)"sitionInputEvent";
}

void *sub_10035F73C(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 40);
  if (v3)
  {
    uint64_t v4 = *(void *)(a2 + 48);
    if (v4) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v5 = *(void *)(*(void *)(qword_10047EAF8 + 48) + 64);
    if (v5) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v5 = *(void *)(qword_10047E8F0 + 64);
    goto LABEL_4;
  }
  uint64_t v3 = *(void *)(qword_10047EAF8 + 40);
  uint64_t v4 = *(void *)(a2 + 48);
  if (!v4) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v5 = *(void *)(v4 + 64);
  if (!v5) {
    goto LABEL_7;
  }
LABEL_4:
  *a1 = *(void *)(v3 + 40);
  sub_1000FE5B4((uint64_t)(a1 + 1), v5);
  sub_100016B48((uint64_t)(a1 + 13));
  return a1;
}

void *sub_10035F7D8(void *a1, uint64_t a2, uint64_t a3)
{
  *a1 = *(void *)(a2 + 40);
  sub_1000FE5B4((uint64_t)(a1 + 1), a3);
  sub_100016B48((uint64_t)(a1 + 13));
  return a1;
}

char *sub_10035F818@<X0>(uint64_t a1@<X8>)
{
  double result = (char *)operator new(0x28uLL);
  *(void *)a1 = result;
  *(_OWORD *)(a1 + ++*(void *)(result + 8) = xmmword_1003E7200;
  strcpy(result, "OutdoorEstimatorLogEntryInputEvent");
  return result;
}

void sub_10035F86C(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

char *sub_10035F89C(char *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v5 = result;
    if (a4 >= 0x2E8BA2E8BA2E8BBLL) {
      sub_1000A9108();
    }
    double result = (char *)operator new(88 * a4);
    *uint64_t v5 = result;
    v5[1] = result;
    void v5[2] = &result[88 * a4];
    if (a2 != a3)
    {
      uint64_t v8 = 0;
      do
      {
        uint64_t v10 = a2 + v8;
        unint64_t v11 = &result[v8 + 8];
        std::string v13 = (void *)(a2 + v8 + 8);
        int v12 = *(_DWORD *)(a2 + v8);
        int v14 = v12 >> 31;
        if (v12 >> 31 == v12)
        {
          *(void *)unint64_t v11 = *v13;
          int v14 = v12;
        }
        else
        {
          *(_OWORD *)unint64_t v11 = *(_OWORD *)v13;
          *(_DWORD *)&result[v8 + 24] = *(_DWORD *)(a2 + v8 + 24);
        }
        int v15 = v14 ^ v12;
        long long v16 = &result[v8];
        *(_DWORD *)long long v16 = v15;
        *((void *)v16 + 4) = *(void *)(v10 + 32);
        v16[40] = 0;
        if (*(unsigned char *)(v10 + 40))
        {
          *((_DWORD *)v16 + 11) = *(_DWORD *)(a2 + v8 + 44);
          v16[40] = 1;
        }
        long long v9 = *(_OWORD *)(v10 + 64);
        *((_OWORD *)v16 + 3) = *(_OWORD *)(v10 + 48);
        *((_OWORD *)v16 + 4) = v9;
        *((_DWORD *)v16 + 20) = *(_DWORD *)(v10 + 80);
        v8 += 88;
      }
      while (v10 + 88 != a3);
      result += v8;
    }
    v5[1] = result;
  }
  return result;
}

void sub_10035F9D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void ***sub_10035F9E8(void ***a1)
{
  if (*((unsigned char *)a1 + 8)) {
    return a1;
  }
  uint64_t v3 = *a1;
  uint64_t v4 = (char *)**a1;
  if (!v4) {
    return a1;
  }
  for (uint64_t i = (char *)v3[1]; i != v4; i -= 88)
  {
    if (*(i - 48)) {
      *(i - 4++*(void *)(result + 8) = 0;
    }
  }
  v3[1] = v4;
  operator delete(v4);
  return a1;
}

void sub_10035FAA4()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10035FB1C()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_10035FB94()
{
  return __cxa_atexit((void (*)(void *))sub_1000E11EC, &qword_100492A80, (void *)&_mh_execute_header);
}

void sub_10035FBB8()
{
}

void sub_10035FBE0(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memset(&v74, 0, sizeof(v74));
  std::string::reserve(&v74, 0xCuLL);
  int v4 = *(char *)(a1 + 23);
  if (v4 >= 0) {
    unint64_t v5 = a1;
  }
  else {
    unint64_t v5 = *(void *)a1;
  }
  uint64_t v6 = *(unsigned __int8 *)(a1 + 23);
  if (v4 < 0)
  {
    unint64_t v7 = *(void *)a1;
    uint64_t v8 = *(void *)(a1 + 8);
    if ((uint64_t)(*(void *)a1 + v8 - v5) < 2) {
      goto LABEL_106;
    }
  }
  else
  {
    unint64_t v7 = a1;
    uint64_t v8 = *(unsigned __int8 *)(a1 + 23);
    if ((uint64_t)(a1 + v6 - v5) <= 1)
    {
LABEL_106:
      std::operator+<char>();
      size_t v53 = std::string::append(&v73, "'");
      std::string::size_type v54 = v53->__r_.__value_.__r.__words[0];
      v75.__r_.__value_.__r.__words[0] = v53->__r_.__value_.__l.__size_;
      *(std::string::size_type *)((char *)v75.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v53->__r_.__value_.__r.__words[1] + 7);
      char v55 = HIBYTE(v53->__r_.__value_.__r.__words[2]);
      v53->__r_.__value_.__l.__size_ = 0;
      v53->__r_.__value_.__r.__words[2] = 0;
      v53->__r_.__value_.__r.__words[0] = 0;
      v76.__r_.__value_.__r.__words[0] = v75.__r_.__value_.__r.__words[0];
      uint64_t v56 = *(std::string::size_type *)((char *)v75.__r_.__value_.__r.__words + 7);
      *(std::string::size_type *)((char *)v76.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)v75.__r_.__value_.__r.__words + 7);
      *(unsigned char *)a2 = 0;
      *(void *)(a2 + 55) = v56;
      std::string::size_type v57 = v76.__r_.__value_.__r.__words[0];
      *(void *)(a2 + 40) = v54;
      *(void *)(a2 + 4++*(void *)(result + 8) = v57;
      *(unsigned char *)(a2 + 63) = v55;
      if ((SHIBYTE(v73.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_109;
      }
      long long v58 = (void *)v73.__r_.__value_.__r.__words[0];
      goto LABEL_108;
    }
  }
  long long v9 = (char *)(v7 + v8);
  uint64_t v10 = (char *)v5;
  if ((char *)v5 != v9)
  {
    uint64_t v10 = (char *)v5;
    while (1)
    {
      int v11 = *v10;
      if (v11 == 45 || v11 == 58) {
        break;
      }
      if (++v10 == v9)
      {
        uint64_t v10 = v9;
        break;
      }
    }
  }
  if ((v6 & 0x80u) == 0) {
    unint64_t v12 = a1;
  }
  else {
    unint64_t v12 = *(void *)a1;
  }
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *(void *)(a1 + 8);
  }
  if (v10 == (char *)(v12 + v6)) {
    goto LABEL_106;
  }
  if (&v10[-v5] == (char *)1) {
    std::string::append(&v74, 1uLL, 48);
  }
  sub_100152CCC(&v74, v5, v10);
  unint64_t v13 = (unint64_t)(v10 + 1);
  uint64_t v14 = *(unsigned __int8 *)(a1 + 23);
  if (*(char *)(a1 + 23) < 0)
  {
    unint64_t v15 = *(void *)a1;
    uint64_t v16 = *(void *)(a1 + 8);
    if ((uint64_t)(*(void *)a1 + v16 - v13) < 2) {
      goto LABEL_106;
    }
  }
  else
  {
    unint64_t v15 = a1;
    uint64_t v16 = *(unsigned __int8 *)(a1 + 23);
    if ((uint64_t)(a1 + v14 - v13) < 2) {
      goto LABEL_106;
    }
  }
  std::string::value_type v17 = (char *)(v15 + v16);
  char v18 = v10 + 1;
  if ((char *)v13 != v17)
  {
    char v18 = (char *)v13;
    while (1)
    {
      int v19 = *v18;
      if (v19 == 45 || v19 == 58) {
        break;
      }
      if (++v18 == v17)
      {
        char v18 = v17;
        break;
      }
    }
  }
  if ((v14 & 0x80u) == 0) {
    unint64_t v20 = a1;
  }
  else {
    unint64_t v20 = *(void *)a1;
  }
  if ((v14 & 0x80u) != 0) {
    uint64_t v14 = *(void *)(a1 + 8);
  }
  if (v18 == (char *)(v20 + v14)) {
    goto LABEL_106;
  }
  if (&v18[-v13] == (char *)1) {
    std::string::append(&v74, 1uLL, 48);
  }
  sub_100152CCC(&v74, v13, v18);
  unint64_t v21 = (unint64_t)(v18 + 1);
  uint64_t v22 = *(unsigned __int8 *)(a1 + 23);
  if (*(char *)(a1 + 23) < 0)
  {
    unint64_t v23 = *(void *)a1;
    uint64_t v24 = *(void *)(a1 + 8);
    if ((uint64_t)(*(void *)a1 + v24 - v21) < 2) {
      goto LABEL_106;
    }
  }
  else
  {
    unint64_t v23 = a1;
    uint64_t v24 = *(unsigned __int8 *)(a1 + 23);
    if ((uint64_t)(a1 + v22 - v21) < 2) {
      goto LABEL_106;
    }
  }
  std::string v25 = (char *)(v23 + v24);
  uint64_t v26 = v18 + 1;
  if ((char *)v21 != v25)
  {
    uint64_t v26 = (char *)v21;
    while (1)
    {
      int v27 = *v26;
      if (v27 == 45 || v27 == 58) {
        break;
      }
      if (++v26 == v25)
      {
        uint64_t v26 = v25;
        break;
      }
    }
  }
  if ((v22 & 0x80u) == 0) {
    unint64_t v28 = a1;
  }
  else {
    unint64_t v28 = *(void *)a1;
  }
  if ((v22 & 0x80u) != 0) {
    uint64_t v22 = *(void *)(a1 + 8);
  }
  if (v26 == (char *)(v28 + v22)) {
    goto LABEL_106;
  }
  if (&v26[-v21] == (char *)1) {
    std::string::append(&v74, 1uLL, 48);
  }
  sub_100152CCC(&v74, v21, v26);
  unint64_t v29 = (unint64_t)(v26 + 1);
  uint64_t v30 = *(unsigned __int8 *)(a1 + 23);
  if (*(char *)(a1 + 23) < 0)
  {
    unint64_t v32 = *(void *)a1;
    uint64_t v33 = *(void *)(a1 + 8);
    uint64_t v31 = *(void *)a1 + v33 - v29;
  }
  else
  {
    uint64_t v31 = a1 + v30 - v29;
    unint64_t v32 = a1;
    uint64_t v33 = *(unsigned __int8 *)(a1 + 23);
  }
  if (v31 < 2) {
    goto LABEL_106;
  }
  unsigned int v34 = (char *)(v32 + v33);
  uint64_t v35 = v26 + 1;
  if ((char *)v29 != v34)
  {
    uint64_t v35 = (char *)v29;
    while (1)
    {
      int v36 = *v35;
      if (v36 == 45 || v36 == 58) {
        break;
      }
      if (++v35 == v34)
      {
        uint64_t v35 = v34;
        break;
      }
    }
  }
  if ((v30 & 0x80u) == 0) {
    unint64_t v37 = a1;
  }
  else {
    unint64_t v37 = *(void *)a1;
  }
  if ((v30 & 0x80u) != 0) {
    uint64_t v30 = *(void *)(a1 + 8);
  }
  if (v35 == (char *)(v37 + v30)) {
    goto LABEL_106;
  }
  if (&v35[-v29] == (char *)1) {
    std::string::append(&v74, 1uLL, 48);
  }
  sub_100152CCC(&v74, v29, v35);
  unint64_t v38 = (unint64_t)(v35 + 1);
  uint64_t v39 = *(unsigned __int8 *)(a1 + 23);
  if (*(char *)(a1 + 23) < 0)
  {
    unint64_t v41 = *(void *)a1;
    uint64_t v42 = *(void *)(a1 + 8);
    uint64_t v40 = *(void *)a1 + v42 - v38;
  }
  else
  {
    uint64_t v40 = a1 + v39 - v38;
    unint64_t v41 = a1;
    uint64_t v42 = *(unsigned __int8 *)(a1 + 23);
  }
  if (v40 < 2) {
    goto LABEL_106;
  }
  unint64_t v43 = (char *)(v41 + v42);
  std::string::size_type v44 = v35 + 1;
  if ((char *)v38 != v43)
  {
    std::string::size_type v44 = (char *)v38;
    while (1)
    {
      int v45 = *v44;
      if (v45 == 45 || v45 == 58) {
        break;
      }
      if (++v44 == v43)
      {
        std::string::size_type v44 = v43;
        break;
      }
    }
  }
  if ((v39 & 0x80u) == 0) {
    unint64_t v46 = a1;
  }
  else {
    unint64_t v46 = *(void *)a1;
  }
  if ((v39 & 0x80u) != 0) {
    uint64_t v39 = *(void *)(a1 + 8);
  }
  if (v44 == (char *)(v46 + v39)) {
    goto LABEL_106;
  }
  if (&v44[-v38] == (char *)1) {
    std::string::append(&v74, 1uLL, 48);
  }
  sub_100152CCC(&v74, v38, v44);
  uint64_t v47 = *(unsigned __int8 *)(a1 + 23);
  unint64_t v48 = (unint64_t)(v44 + 1);
  if ((v47 & 0x80u) == 0) {
    unint64_t v49 = a1;
  }
  else {
    unint64_t v49 = *(void *)a1;
  }
  if ((v47 & 0x80u) != 0) {
    uint64_t v47 = *(void *)(a1 + 8);
  }
  uint64_t v50 = (char *)(v49 + v47);
  if (~v48 + v49 + v47 > 1) {
    goto LABEL_106;
  }
  if (&v50[-v48] == (char *)1) {
    std::string::append(&v74, 1uLL, 48);
  }
  sub_100152CCC(&v74, v48, v50);
  if ((*(char *)(a1 + 23) & 0x80000000) == 0)
  {
    uint64_t v51 = *(unsigned __int8 *)(a1 + 23);
    if (v50 != (char *)(a1 + v51))
    {
      unint64_t v52 = a1;
      goto LABEL_114;
    }
LABEL_125:
    sub_1003603C8((const char *)&v74, a2);
    goto LABEL_109;
  }
  unint64_t v52 = *(void *)a1;
  uint64_t v51 = *(void *)(a1 + 8);
  if (v50 == (char *)(*(void *)a1 + v51)) {
    goto LABEL_125;
  }
LABEL_114:
  std::to_string(&v72, v52 + v51 - (void)v50);
  int v59 = std::string::insert(&v72, 0, "Didn't parse BSSID fully.  Stopped at ");
  long long v60 = *(_OWORD *)&v59->__r_.__value_.__l.__data_;
  v75.__r_.__value_.__r.__words[2] = v59->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v75.__r_.__value_.__l.__data_ = v60;
  v59->__r_.__value_.__l.__size_ = 0;
  v59->__r_.__value_.__r.__words[2] = 0;
  v59->__r_.__value_.__r.__words[0] = 0;
  unint64_t v61 = std::string::append(&v75, " in '");
  long long v62 = *(_OWORD *)&v61->__r_.__value_.__l.__data_;
  v76.__r_.__value_.__r.__words[2] = v61->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v76.__r_.__value_.__l.__data_ = v62;
  v61->__r_.__value_.__l.__size_ = 0;
  v61->__r_.__value_.__r.__words[2] = 0;
  v61->__r_.__value_.__r.__words[0] = 0;
  int v63 = *(char *)(a1 + 23);
  if (v63 >= 0) {
    uint64_t v64 = (const std::string::value_type *)a1;
  }
  else {
    uint64_t v64 = *(const std::string::value_type **)a1;
  }
  if (v63 >= 0) {
    std::string::size_type v65 = *(unsigned __int8 *)(a1 + 23);
  }
  else {
    std::string::size_type v65 = *(void *)(a1 + 8);
  }
  std::logic_error v66 = std::string::append(&v76, v64, v65);
  long long v67 = *(_OWORD *)&v66->__r_.__value_.__l.__data_;
  v73.__r_.__value_.__r.__words[2] = v66->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v73.__r_.__value_.__l.__data_ = v67;
  v66->__r_.__value_.__l.__size_ = 0;
  v66->__r_.__value_.__r.__words[2] = 0;
  v66->__r_.__value_.__r.__words[0] = 0;
  long long v68 = std::string::append(&v73, "'");
  std::string::size_type v69 = v68->__r_.__value_.__r.__words[0];
  v77[0] = v68->__r_.__value_.__l.__size_;
  *(void *)((char *)v77 + 7) = *(std::string::size_type *)((char *)&v68->__r_.__value_.__r.__words[1] + 7);
  char v70 = HIBYTE(v68->__r_.__value_.__r.__words[2]);
  v68->__r_.__value_.__l.__size_ = 0;
  v68->__r_.__value_.__r.__words[2] = 0;
  v68->__r_.__value_.__r.__words[0] = 0;
  v78[0] = v77[0];
  *(void *)((char *)v78 + 7) = *(void *)((char *)v77 + 7);
  *(unsigned char *)a2 = 0;
  uint64_t v71 = v78[0];
  *(void *)(a2 + 55) = *(void *)((char *)v78 + 7);
  *(void *)(a2 + 40) = v69;
  *(void *)(a2 + 4++*(void *)(result + 8) = v71;
  *(unsigned char *)(a2 + 63) = v70;
  if (SHIBYTE(v73.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v73.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v76.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_122:
      if ((SHIBYTE(v75.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_123;
      }
      goto LABEL_128;
    }
  }
  else if ((SHIBYTE(v76.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_122;
  }
  operator delete(v76.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v75.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_123:
    if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_129;
    }
    goto LABEL_109;
  }
LABEL_128:
  operator delete(v75.__r_.__value_.__l.__data_);
  if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0)
  {
LABEL_129:
    long long v58 = (void *)v72.__r_.__value_.__r.__words[0];
LABEL_108:
    operator delete(v58);
  }
LABEL_109:
  if (SHIBYTE(v74.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v74.__r_.__value_.__l.__data_);
  }
}

void sub_1003602E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003603C8(const char *a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = a1[23];
  if (v3 < 0)
  {
    if (*((void *)a1 + 1) != 12) {
      goto LABEL_50;
    }
    int v4 = *(unsigned __int8 **)a1;
    unsigned __int8 v5 = **(unsigned char **)a1;
    if ((v5 - 48) < 0xAu) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
  int v4 = (unsigned __int8 *)a1;
  if (v3 != 12) {
    goto LABEL_50;
  }
  unsigned __int8 v5 = *a1;
  if ((*a1 - 48) >= 0xAu)
  {
LABEL_7:
    unsigned int v6 = v5 - 65;
    BOOL v7 = v6 > 0x25;
    uint64_t v8 = (1 << v6) & 0x3F0000003FLL;
    if (!v7 && v8 != 0) {
      goto LABEL_11;
    }
LABEL_50:
    std::operator+<char>();
    std::string v25 = std::string::append(&v31, "'");
    goto LABEL_53;
  }
LABEL_11:
  if ((v4[1] - 48) >= 0xAu)
  {
    unsigned int v10 = v4[1] - 65;
    BOOL v7 = v10 > 0x25;
    uint64_t v11 = (1 << v10) & 0x3F0000003FLL;
    if (v7 || v11 == 0) {
      goto LABEL_50;
    }
  }
  if ((v4[2] - 48) >= 0xAu)
  {
    unsigned int v13 = v4[2] - 65;
    if (v13 > 0x25 || ((1 << v13) & 0x3F0000003FLL) == 0) {
      goto LABEL_50;
    }
  }
  if ((v4[3] - 48) >= 0xAu)
  {
    unsigned int v14 = v4[3] - 65;
    if (v14 > 0x25 || ((1 << v14) & 0x3F0000003FLL) == 0) {
      goto LABEL_50;
    }
  }
  if ((v4[4] - 48) >= 0xAu)
  {
    unsigned int v15 = v4[4] - 65;
    if (v15 > 0x25 || ((1 << v15) & 0x3F0000003FLL) == 0) {
      goto LABEL_50;
    }
  }
  if ((v4[5] - 48) >= 0xAu)
  {
    unsigned int v16 = v4[5] - 65;
    if (v16 > 0x25 || ((1 << v16) & 0x3F0000003FLL) == 0) {
      goto LABEL_50;
    }
  }
  if ((v4[6] - 48) >= 0xAu)
  {
    unsigned int v17 = v4[6] - 65;
    if (v17 > 0x25 || ((1 << v17) & 0x3F0000003FLL) == 0) {
      goto LABEL_50;
    }
  }
  if ((v4[7] - 48) >= 0xAu)
  {
    unsigned int v18 = v4[7] - 65;
    if (v18 > 0x25 || ((1 << v18) & 0x3F0000003FLL) == 0) {
      goto LABEL_50;
    }
  }
  if ((v4[8] - 48) >= 0xAu)
  {
    unsigned int v19 = v4[8] - 65;
    if (v19 > 0x25 || ((1 << v19) & 0x3F0000003FLL) == 0) {
      goto LABEL_50;
    }
  }
  if ((v4[9] - 48) >= 0xAu)
  {
    unsigned int v20 = v4[9] - 65;
    if (v20 > 0x25 || ((1 << v20) & 0x3F0000003FLL) == 0) {
      goto LABEL_50;
    }
  }
  if ((v4[10] - 48) >= 0xAu)
  {
    unsigned int v21 = v4[10] - 65;
    if (v21 > 0x25 || ((1 << v21) & 0x3F0000003FLL) == 0) {
      goto LABEL_50;
    }
  }
  unsigned __int8 v22 = v4[11];
  if ((v22 - 48) >= 0xAu)
  {
    unsigned int v23 = v22 - 65;
    if (v23 > 0x25 || ((1 << v23) & 0x3F0000003FLL) == 0) {
      goto LABEL_50;
    }
  }
  if (v3 < 0) {
    a1 = *(const char **)a1;
  }
  uint64_t v30 = 0;
  if (sscanf(a1, "%llx", &v30) == 1)
  {
    *(void *)(a2 + 16) = v30;
    *(_DWORD *)(a2 + ++*(void *)(result + 8) = 0;
    *(unsigned char *)a2 = 1;
    uint64_t v24 = (char *)operator new(0x20uLL);
    *(void *)(a2 + 40) = v24;
    *(_OWORD *)(a2 + 4++*(void *)(result + 8) = xmmword_1003E74B0;
    strcpy(v24, "Pass MacAddress validation");
    return;
  }
  std::operator+<char>();
  std::string v25 = std::string::append(&v31, "' to number");
LABEL_53:
  std::string::size_type v26 = v25->__r_.__value_.__r.__words[0];
  v32[0] = v25->__r_.__value_.__l.__size_;
  *(void *)((char *)v32 + 7) = *(std::string::size_type *)((char *)&v25->__r_.__value_.__r.__words[1] + 7);
  char v27 = HIBYTE(v25->__r_.__value_.__r.__words[2]);
  v25->__r_.__value_.__l.__size_ = 0;
  v25->__r_.__value_.__r.__words[2] = 0;
  v25->__r_.__value_.__r.__words[0] = 0;
  v33[0] = v32[0];
  uint64_t v28 = *(void *)((char *)v32 + 7);
  *(void *)((char *)v33 + 7) = *(void *)((char *)v32 + 7);
  *(unsigned char *)a2 = 0;
  *(void *)(a2 + 55) = v28;
  uint64_t v29 = v33[0];
  *(void *)(a2 + 40) = v26;
  *(void *)(a2 + 4++*(void *)(result + 8) = v29;
  *(unsigned char *)(a2 + 63) = v27;
  if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v31.__r_.__value_.__l.__data_);
  }
}

void sub_100360804(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10036083C(const char *a1@<X0>, int *a2@<X8>)
{
  sub_1003603C8(a1, (uint64_t)v10);
  if (!v10[0])
  {
    sub_1000AE4B0(__p, "");
    if (SHIBYTE(v15) < 0)
    {
      sub_1000559FC(&__dst, v14.__vftable, (unint64_t)v14.__imp_.__imp_);
    }
    else
    {
      std::logic_error __dst = v14;
      uint64_t v17 = v15;
    }
    sub_10016A2C4((uint64_t)__p, (uint64_t)&__dst, 1);
    if (SHIBYTE(v17) < 0) {
      operator delete(__dst.__vftable);
    }
    if (v9 < 0) {
      operator delete(__p[0]);
    }
    sub_1000D11E0((uint64_t)&v7);
  }
  int v3 = a2 + 2;
  int v4 = v11;
  int v5 = v11 >> 31;
  if (v11 >> 31 == v11)
  {
    void *v3 = v12;
    *a2 = 0;
    if ((SHIBYTE(v15) & 0x80000000) == 0) {
      return;
    }
  }
  else
  {
    *(_OWORD *)int v3 = v12;
    a2[6] = v13;
    *a2 = v5 ^ v4;
    if ((SHIBYTE(v15) & 0x80000000) == 0) {
      return;
    }
  }
  unsigned int v6 = v14.__vftable;

  operator delete(v6);
}

void sub_100360A04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *__p,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  std::logic_error::~logic_error((std::logic_error *)(v32 - 64));
  if (v31 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_100360A6C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + ++*(void *)(result + 8) = 0;
  *(_DWORD *)a1 = 0;
  if (!sub_10035D0F8(a2))
  {
    sub_1000AE4B0(&v42, "");
    sub_10024A41C("Invalid IBeacon measurement!", &v46);
    sub_10016A2C4((uint64_t)&v42, (uint64_t)&v46, 1);
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v46.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v42.__r_.__value_.__l.__data_);
    }
    sub_1000D11E0((uint64_t)&__p);
  }
  memset(&v46, 0, sizeof(v46));
  memset(&v42, 0, sizeof(v42));
  memset(&__p, 0, sizeof(__p));
  uint64_t v4 = *(unsigned __int8 *)(a2 + 87);
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *(void *)(a2 + 72);
  }
  if (!v4)
  {
    std::string::operator=(&v46, (const std::string *)(a2 + 112));
    LOWORD(__dst.__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 108);
    sub_10036117C();
    __int16 v7 = *(_DWORD *)(a2 + 104);
    std::string v42 = v40;
    LOWORD(__dst.__r_.__value_.__l.__data_) = v7;
    sub_10036117C();
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    std::string __p = v40;
    goto LABEL_36;
  }
  sub_10035CDA0(a2 + 64, &v40);
  if ((SHIBYTE(v40.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    std::string::size_type size = HIBYTE(v40.__r_.__value_.__r.__words[2]);
    if (HIBYTE(v40.__r_.__value_.__r.__words[2]) > 7u)
    {
      unsigned int v6 = &v40;
      goto LABEL_13;
    }
LABEL_106:
    sub_10018E31C();
  }
  std::string::size_type size = v40.__r_.__value_.__l.__size_;
  if (v40.__r_.__value_.__l.__size_ < 8) {
    goto LABEL_106;
  }
  unsigned int v6 = (std::string *)v40.__r_.__value_.__r.__words[0];
LABEL_13:
  p_std::string::size_type size = &v6->__r_.__value_.__l.__size_;
  unint64_t v9 = size - 8;
  if (v9 >= 0x20) {
    std::string::size_type v10 = 32;
  }
  else {
    std::string::size_type v10 = v9;
  }
  if (v10 >= 0x17)
  {
    uint64_t v36 = (v10 & 0x38) + 8;
    if ((v10 | 7) != 0x17) {
      uint64_t v36 = v10 | 7;
    }
    uint64_t v37 = v36 + 1;
    p_dst = (std::string *)operator new(v36 + 1);
    __dst.__r_.__value_.__l.__size_ = v10;
    __dst.__r_.__value_.__r.__words[2] = v37 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  }
  else
  {
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v10;
    p_dst = &__dst;
    if (!v10)
    {
      __dst.__r_.__value_.__s.__data_[0] = 0;
      if ((SHIBYTE(v46.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_19;
      }
      goto LABEL_80;
    }
  }
  memmove(p_dst, p_size, v10);
  p_dst->__r_.__value_.__s.__data_[v10] = 0;
  if ((SHIBYTE(v46.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_19:
    std::string v46 = __dst;
    uint64_t v12 = HIBYTE(v40.__r_.__value_.__r.__words[2]);
    if ((*((unsigned char *)&v40.__r_.__value_.__s + 23) & 0x80) == 0) {
      goto LABEL_20;
    }
LABEL_81:
    if (v40.__r_.__value_.__l.__size_ >= 0x28)
    {
      int v13 = (std::string *)v40.__r_.__value_.__r.__words[0];
      if (v40.__r_.__value_.__l.__size_ - 40 >= 4) {
        size_t v14 = 4;
      }
      else {
        size_t v14 = v40.__r_.__value_.__l.__size_ - 40;
      }
      *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v14;
      if (v14) {
        goto LABEL_25;
      }
      goto LABEL_26;
    }
LABEL_107:
    sub_10018E31C();
  }
LABEL_80:
  operator delete(v46.__r_.__value_.__l.__data_);
  std::string v46 = __dst;
  uint64_t v12 = HIBYTE(v40.__r_.__value_.__r.__words[2]);
  if ((*((unsigned char *)&v40.__r_.__value_.__s + 23) & 0x80) != 0) {
    goto LABEL_81;
  }
LABEL_20:
  if (v12 <= 0x27) {
    goto LABEL_107;
  }
  int v13 = &v40;
  if ((unint64_t)(v12 - 40) >= 4) {
    size_t v14 = 4;
  }
  else {
    size_t v14 = v12 - 40;
  }
  *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v14;
  if (v14) {
LABEL_25:
  }
    memmove(&__dst, &v13[1].__r_.__value_.__r.__words[2], v14);
LABEL_26:
  __dst.__r_.__value_.__s.__data_[v14] = 0;
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v42.__r_.__value_.__l.__data_);
    LODWORD(v12) = HIBYTE(v40.__r_.__value_.__r.__words[2]);
    std::string v42 = __dst;
    if ((*((unsigned char *)&v40.__r_.__value_.__s + 23) & 0x80) == 0)
    {
LABEL_28:
      if (v12 > 0x2B)
      {
        uint64_t v15 = &v40;
        if ((unint64_t)v12 - 44 >= 4) {
          size_t v16 = 4;
        }
        else {
          size_t v16 = v12 - 44;
        }
        *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v16;
        if (!v16) {
          goto LABEL_34;
        }
        goto LABEL_33;
      }
LABEL_108:
      sub_10018E31C();
    }
  }
  else
  {
    std::string v42 = __dst;
    if ((v12 & 0x80) == 0) {
      goto LABEL_28;
    }
  }
  if (v40.__r_.__value_.__l.__size_ < 0x2C) {
    goto LABEL_108;
  }
  uint64_t v15 = (std::string *)v40.__r_.__value_.__r.__words[0];
  if (v40.__r_.__value_.__l.__size_ - 44 >= 4) {
    size_t v16 = 4;
  }
  else {
    size_t v16 = v40.__r_.__value_.__l.__size_ - 44;
  }
  *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v16;
  if (!v16) {
    goto LABEL_34;
  }
LABEL_33:
  memmove(&__dst, (char *)&v15[1].__r_.__value_.__r.__words[2] + 4, v16);
LABEL_34:
  __dst.__r_.__value_.__s.__data_[v16] = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    std::string __p = __dst;
    if ((*((unsigned char *)&v40.__r_.__value_.__s + 23) & 0x80) == 0) {
      goto LABEL_36;
    }
  }
  else
  {
    std::string __p = __dst;
    if ((v12 & 0x80) == 0) {
      goto LABEL_36;
    }
  }
  operator delete(v40.__r_.__value_.__l.__data_);
LABEL_36:
  uint64_t v43 = 0;
  uint64_t v44 = 0;
  int v45 = 0;
  int v17 = SHIBYTE(v46.__r_.__value_.__r.__words[2]);
  if ((v46.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v18 = HIBYTE(v46.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v18 = v46.__r_.__value_.__l.__size_;
  }
  int v19 = SHIBYTE(v42.__r_.__value_.__r.__words[2]);
  if ((v42.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v20 = HIBYTE(v42.__r_.__value_.__r.__words[2]);
  }
  else {
    size_t v20 = v42.__r_.__value_.__l.__size_;
  }
  unint64_t v21 = v20 + v18;
  if (v20 + v18 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  if (v21 <= 0x16)
  {
    memset(&__dst, 0, sizeof(__dst));
    unsigned __int8 v22 = &__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v20 + v18;
    if (!v18) {
      goto LABEL_49;
    }
    goto LABEL_45;
  }
  uint64_t v32 = (v21 & 0xFFFFFFFFFFFFFFF8) + 8;
  if ((v21 | 7) != 0x17) {
    uint64_t v32 = v21 | 7;
  }
  uint64_t v33 = v32 + 1;
  unsigned __int8 v22 = (std::string *)operator new(v32 + 1);
  __dst.__r_.__value_.__l.__size_ = v20 + v18;
  __dst.__r_.__value_.__r.__words[2] = v33 | 0x8000000000000000;
  __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)v22;
  if (v18)
  {
LABEL_45:
    if (v17 >= 0) {
      unsigned int v23 = &v46;
    }
    else {
      unsigned int v23 = (std::string *)v46.__r_.__value_.__r.__words[0];
    }
    memmove(v22, v23, v18);
  }
LABEL_49:
  uint64_t v24 = (char *)v22 + v18;
  if (v20)
  {
    if (v19 >= 0) {
      std::string v25 = &v42;
    }
    else {
      std::string v25 = (std::string *)v42.__r_.__value_.__r.__words[0];
    }
    memmove(v24, v25, v20);
  }
  v24[v20] = 0;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v27 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v27 = __p.__r_.__value_.__l.__size_;
  }
  uint64_t v28 = std::string::append(&__dst, (const std::string::value_type *)p_p, v27);
  long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
  v40.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v29;
  v28->__r_.__value_.__l.__size_ = 0;
  v28->__r_.__value_.__r.__words[2] = 0;
  v28->__r_.__value_.__r.__words[0] = 0;
  sub_1003613F8((uint64_t *)&v40, (uint64_t)&v43);
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v40.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_62:
      uint64_t v30 = v43;
      int v31 = *(_DWORD *)a1;
      if (v31 == v31 >> 31) {
        goto LABEL_63;
      }
LABEL_72:
      uint64_t v34 = v44;
      *(void *)(a1 + ++*(void *)(result + 8) = v30;
      *(void *)(a1 + 16) = v34;
      *(_DWORD *)(a1 + ++*(void *)(result + 24) = v45;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        goto LABEL_88;
      }
      goto LABEL_73;
    }
  }
  else if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_62;
  }
  operator delete(__dst.__r_.__value_.__l.__data_);
  uint64_t v30 = v43;
  int v31 = *(_DWORD *)a1;
  if (v31 != v31 >> 31) {
    goto LABEL_72;
  }
LABEL_63:
  if (v31 != 1)
  {
    uint64_t v38 = v44;
    *(void *)(a1 + ++*(void *)(result + 8) = v30;
    *(void *)(a1 + 16) = v38;
    *(_DWORD *)(a1 + ++*(void *)(result + 24) = v45;
    *(_DWORD *)a1 = 1;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_88;
    }
LABEL_73:
    if (v19 < 0) {
      goto LABEL_89;
    }
    goto LABEL_74;
  }
  *(void *)(a1 + ++*(void *)(result + 8) = v30;
  if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_73;
  }
LABEL_88:
  operator delete(__p.__r_.__value_.__l.__data_);
  if (v19 < 0)
  {
LABEL_89:
    operator delete(v42.__r_.__value_.__l.__data_);
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_90;
    }
    return a1;
  }
LABEL_74:
  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
LABEL_90:
  }
    operator delete(v46.__r_.__value_.__l.__data_);
  return a1;
}

void sub_100361090(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a28 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10036117C()
{
  sub_1000CD96C((uint64_t)v4);
  uint64_t v0 = v4[0];
  uint64_t v1 = (char *)v4 + *(void *)(v4[0] - 24);
  if (*((_DWORD *)v1 + 36) == -1)
  {
    std::ios_base::getloc((const std::ios_base *)((char *)v4 + *(void *)(v4[0] - 24)));
    std::runtime_error v2 = std::locale::use_facet(&v6, &std::ctype<char>::id);
    ((void (*)(const std::locale::facet *, uint64_t))v2->__vftable[2].~facet_0)(v2, 32);
    std::locale::~locale(&v6);
    uint64_t v0 = v4[0];
  }
  *((_DWORD *)v1 + 36) = 48;
  *(_DWORD *)((char *)&v4[1] + *(void *)(v0 - 24)) = *(_DWORD *)((unsigned char *)&v4[1] + *(void *)(v0 - 24)) & 0xFFFFFFB5 | 8;
  *(void *)((char *)&v4[3] + *(void *)(v0 - 24)) = 4;
  std::ostream::operator<<();
  std::stringbuf::str();
  if (v5 < 0) {
    operator delete((void *)v4[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_1003613A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1003613B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::locale::~locale((std::locale *)(v9 - 56));
  sub_1000CDB10((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_1003613D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1003613E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_1003613F8(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = *((char *)a1 + 23);
  if (v4 < 0)
  {
    uint64_t v13 = a1[1];
    if (v13 != 40) {
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v13 = *((unsigned __int8 *)a1 + 23);
    if (v4 != 40)
    {
LABEL_23:
      sub_1000AE4B0(v15, "");
      sub_1002700F4("Invalid hex string length ", &__dst);
      sub_1001F3080(&v13, &v18);
      sub_10016A2C4((uint64_t)v15, (uint64_t)&__dst, 2);
      if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v18.__r_.__value_.__l.__data_);
        if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
        {
LABEL_25:
          if ((v16 & 0x80000000) == 0) {
            goto LABEL_26;
          }
LABEL_29:
          operator delete(v15[0]);
LABEL_26:
          sub_1000D11E0((uint64_t)&__p);
        }
      }
      else if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
        goto LABEL_25;
      }
      operator delete(__dst.__r_.__value_.__l.__data_);
      if ((v16 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      goto LABEL_29;
    }
  }
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  while ((*((char *)a1 + 23) & 0x80000000) == 0)
  {
    unint64_t v7 = *((unsigned __int8 *)a1 + 23);
    if (v6 >= v7) {
      return;
    }
    uint64_t v8 = a1;
    unint64_t v9 = v7 + v5;
    if (v9 >= 2) {
      size_t v10 = 2;
    }
    else {
      size_t v10 = v9;
    }
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v10;
    if (v10) {
LABEL_13:
    }
      memmove(&__dst, (char *)v8 + v6, v10);
LABEL_14:
    __dst.__r_.__value_.__s.__data_[v10] = 0;
    *(unsigned char *)(a2 + (v6 >> 1)) = std::stoi(&__dst, 0, 16);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
    v6 += 2;
    v5 -= 2;
  }
  unint64_t v11 = a1[1];
  if (v6 < v11)
  {
    uint64_t v8 = (uint64_t *)*a1;
    unint64_t v12 = v11 + v5;
    if (v12 >= 2) {
      size_t v10 = 2;
    }
    else {
      size_t v10 = v12;
    }
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v10;
    if (v10) {
      goto LABEL_13;
    }
    goto LABEL_14;
  }
}

void sub_1003615E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void *sub_10036165C@<X0>(const void **a1@<X0>, void *a2@<X8>)
{
  int v3 = *((char *)a1 + 23);
  if ((v3 & 0x80000000) == 0)
  {
    unint64_t v7 = (const void *)*((unsigned __int8 *)a1 + 23);
    if (v3 == 20)
    {
      LOBYTE(v3) = 20;
      goto LABEL_5;
    }
LABEL_12:
    sub_1000AE4B0(v9, "");
    sub_10015E5F4("Beacon mac address was", &v11);
    sub_1001F3080(&v7, &v12);
    sub_1001F1B10(" bytes, should have been 20", &v13);
    sub_10016A2C4((uint64_t)v9, (uint64_t)&v11, 3);
    if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v13.__r_.__value_.__l.__data_);
      if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_14:
        if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          goto LABEL_15;
        }
        goto LABEL_19;
      }
    }
    else if ((SHIBYTE(v12.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_14;
    }
    operator delete(v12.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_15:
      if ((v10 & 0x80000000) == 0) {
        goto LABEL_16;
      }
LABEL_20:
      operator delete(v9[0]);
LABEL_16:
      sub_1000D11E0((uint64_t)&__p);
    }
LABEL_19:
    operator delete(v11.__r_.__value_.__l.__data_);
    if ((v10 & 0x80000000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_20;
  }
  unint64_t v7 = a1[1];
  if (v7 != (const void *)20) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v3 & 0x80u) == 0) {
    int v4 = a1;
  }
  else {
    int v4 = *a1;
  }
  if ((v3 & 0x80u) == 0) {
    size_t v5 = v3;
  }
  else {
    size_t v5 = (size_t)a1[1];
  }
  return memcpy(a2, v4, v5);
}

void sub_1003617E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_10036182C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  while (1)
  {
    if (*((char *)v17 - 1) < 0) {
      operator delete(*(v17 - 3));
    }
    v17 -= 3;
    if (v17 == (void **)&a17) {
      JUMPOUT(0x100361808);
    }
  }
}

void sub_100361858()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1003618D0()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100361948(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_100469D00;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_100361968(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_100469D00;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_1003619BC(uint64_t a1)
{
  sub_1003619E8((uint64_t)&v1, a1 + 24);
}

void sub_1003619E8(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 80)) {
    *(unsigned char *)(a2 + 80) = 0;
  }
  uint64_t v3 = *(void *)(a2 + 40);
  if (v3)
  {
    uint64_t v4 = *(void *)(a2 + 48);
    size_t v5 = *(void **)(a2 + 40);
    if (v4 != v3)
    {
      do
        uint64_t v4 = sub_100374180(v4 - 16);
      while (v4 != v3);
      size_t v5 = *(void **)(a2 + 40);
    }
    *(void *)(a2 + 4++*(void *)(result + 8) = v3;
    operator delete(v5);
  }
  nullsub_22(a2 + 24);
  *(void *)a2 = off_1004592E0;
  unint64_t v6 = *(std::__shared_weak_count **)(a2 + 16);
  if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
}

void sub_100361AD0()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100361B48()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100361C60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100361CE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

dispatch_queue_t *sub_100361D5C(dispatch_queue_t *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  *a1 = dispatch_queue_create("dynamic settings runtime configuration", 0);
  a1[2] = (dispatch_queue_t)objc_alloc_init((Class)NSMutableArray);
  a1[3] = 0;
  if (v6)
  {
    unint64_t v7 = v6;
  }
  else
  {
    unint64_t v7 = [v5 stringByAppendingString:@"/Prefs"];
  }
  dispatch_queue_t v8 = a1[3];
  a1[3] = v7;

  sub_100361E44((uint64_t)a1);
  return a1;
}

void sub_100361DFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100361E18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100361E44(uint64_t a1)
{
  std::runtime_error v2 = (const char *)[*(id *)(a1 + 24) UTF8String];
  uint64_t v3 = *(NSObject **)a1;
  handler[0] = _NSConcreteStackBlock;
  handler[1] = 3321888768;
  handler[2] = sub_1003620E0;
  handler[3] = &unk_100469D40;
  handler[4] = a1;
  uint64_t result = notify_register_dispatch(v2, (int *)(a1 + 8), v3, handler);
  if (result)
  {
    sub_1000AE4B0(__p, "");
    sub_1003631DC("Failed to register", &v9);
    sub_10016A2C4((uint64_t)__p, (uint64_t)&v9, 1);
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v9.__r_.__value_.__l.__data_);
    }
    if (v8 < 0) {
      operator delete(__p[0]);
    }
    sub_1000D11E0((uint64_t)&v6);
  }
  return result;
}

void sub_100361F6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a20 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100361FB0(uint64_t a1)
{
  return a1;
}

void **sub_100361FF8(void **a1, uint64_t a2)
{
  *a1 = 0;
  a1[2] = 0;
  a1[3] = 0;
  notify_cancel(*(_DWORD *)(a2 + 8));
  uint64_t v4 = *a1;
  *a1 = 0;
  id v5 = *(void **)a2;
  *(void *)a2 = 0;
  id v6 = *a1;
  *a1 = v5;

  unint64_t v7 = *(void **)a2;
  *(void *)a2 = v4;

  char v8 = a1[2];
  a1[2] = 0;
  std::string v9 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = 0;
  char v10 = a1[2];
  a1[2] = v9;

  std::string v11 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = v8;

  std::string v12 = a1[3];
  a1[3] = 0;
  std::string v13 = *(void **)(a2 + 24);
  *(void *)(a2 + ++*(void *)(result + 24) = 0;
  size_t v14 = a1[3];
  a1[3] = v13;

  uint64_t v15 = *(void **)(a2 + 24);
  *(void *)(a2 + ++*(void *)(result + 24) = v12;

  sub_100361E44((uint64_t)a1);
  return a1;
}

void sub_1003620B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003620E0(uint64_t a1)
{
  char v1 = *(void **)(*(void *)(a1 + 32) + 16);
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  id v2 = v1;
  id v3 = [v2 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v3)
  {
    uint64_t v4 = *(void *)v7;
    do
    {
      id v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v2);
        }
        [*(id *)(*((void *)&v6 + 1) + 8 * (void)v5) notify:v6];
        id v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v2 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

void sub_1003621D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1003621F0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 32) = *(void *)(a2 + 32);
  return result;
}

void sub_100362200(NSObject **a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  long long v7 = [[NotificationListener alloc] initWithCallback:v6 onQueue:v5];
  long long v8 = *a1;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3321888768;
  id v10[2] = sub_1003622EC;
  void v10[3] = &unk_100469D70;
  long long v9 = v7;
  std::string v11 = v9;
  std::string v12 = a1;
  dispatch_async(v8, v10);
}

void sub_1003622D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1003622EC(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 40) + 16) addObject:*(void *)(a1 + 32)];
}

id sub_1003622F8(uint64_t a1, uint64_t a2)
{
  id result = *(id *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = result;
  *(void *)(a1 + 40) = v5;
  return result;
}

void sub_10036232C(uint64_t a1)
{
}

void sub_100362334(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  char v1 = *(void **)(a1 + 40);
  uint64_t v10 = 0;
  std::string v11 = &v10;
  uint64_t v12 = 0x4012000000;
  std::string v13 = sub_1000965C4;
  size_t v14 = nullsub_29;
  uint64_t v15 = 0;
  char v16 = 0;
  id v3 = *(void **)(v2 + 16);
  uint64_t v4 = _NSConcreteStackBlock;
  uint64_t v5 = 3221225472;
  id v6 = sub_100362980;
  long long v7 = &unk_100469E58;
  id v8 = v1;
  long long v9 = &v10;
  [v3 enumerateObjectsUsingBlock:&v4];
  if (*((unsigned char *)v11 + 48)) {
    [*(id *)(v2 + 16) removeObjectAtIndex:v11[7], v4, v5, v6, v7];
  }

  _Block_object_dispose(&v10, 8);
}

void sub_10036242C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, ...)
{
  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_100362450(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  id result = objc_retainBlock(v3);
  *(void *)(a1 + 40) = result;
  return result;
}

void sub_100362480(uint64_t a1)
{
}

uint64_t sub_100362488(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a3;
  id v11 = a4;
  *(void *)a1 = off_100469DE0;
  id v12 = v9;
  *(void *)(a1 + ++*(void *)(result + 8) = v12;
  id v13 = v10;
  *(void *)(a1 + 16) = v13;
  id v14 = v11;
  *(void *)(a1 + ++*(void *)(result + 24) = v14;
  sub_100361D5C((dispatch_queue_t *)(a1 + 32), v12, a5);
  if (!*(void *)(a1 + 8))
  {
    sub_1000AE4B0(v17, "");
    sub_1001F1B10("applicationId cannot be nil", &__p);
    sub_10016A2C4((uint64_t)v17, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v18 < 0) {
      operator delete(v17[0]);
    }
    sub_10014B3FC((uint64_t)v16);
  }
  if (!*(void *)(a1 + 16))
  {
    sub_1000AE4B0(v17, "");
    sub_1003631DC("user cannot be nil", &__p);
    sub_10016A2C4((uint64_t)v17, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v18 < 0) {
      operator delete(v17[0]);
    }
    sub_10014B3FC((uint64_t)v16);
  }

  return a1;
}

void sub_100362664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  sub_100361FB0(v24);

  _Unwind_Resume(a1);
}

const void **sub_100362704(const void **a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2) {
    CFRelease(v2);
  }
  return a1;
}

void sub_10036273C(uint64_t a1, void *a2, void *a3)
{
}

void sub_100362744(uint64_t a1, id a2)
{
  uint64_t v2 = a1 + 32;
  id v3 = *(NSObject **)(a1 + 32);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3321888768;
  void v5[2] = sub_100362334;
  v5[3] = &unk_100469DA0;
  id v4 = objc_retainBlock(a2);
  v5[4] = v2;
  id v6 = objc_retainBlock(v4);
  dispatch_async(v3, v5);
}

void sub_1003627EC(uint64_t a1)
{
  notify_cancel(*(_DWORD *)(a1 + 40));

  operator delete();
}

void sub_10036286C()
{
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "cannot override values in this kind of configuration");
}

void sub_1003628B4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1003628C8()
{
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "cannot override values in this kind of configuration");
}

void sub_100362910(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100362924()
{
  exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
  std::runtime_error::runtime_error(exception, "cannot override values in this kind of configuration");
}

void sub_10036296C(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100362980(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  long long v7 = [a2 cb];
  id v8 = *(void **)(a1 + 32);

  if (v7 == v8)
  {
    *a4 = 1;
    uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
    *(void *)(v9 + 56) = a3;
    *(unsigned char *)(v9 + 4++*(void *)(result + 8) = 1;
  }
}

void sub_100362A04(char **a1, unint64_t a2)
{
  uint64_t v2 = *a1;
  if (a2 > (a1[2] - *a1) >> 5)
  {
    if (a2 >> 59) {
      sub_1000A9108();
    }
    id v4 = a1[1];
    uint64_t v5 = 32 * a2;
    id v6 = (char *)operator new(32 * a2);
    uint64_t v7 = 0;
    id v8 = &v6[v4 - v2];
    *(void *)&long long v12 = v8;
    *((void *)&v12 + 1) = &v6[v5];
    while (&v4[v7] != v2)
    {
      v7 -= 32;
      sub_1000A8E40((uint64_t)&v8[v7], (uint64_t)&v4[v7]);
    }
    uint64_t v9 = &v8[v7];
    id v10 = *a1;
    uint64_t v11 = (uint64_t)a1[1];
    *a1 = v9;
    *(_OWORD *)(a1 + 1) = v12;
    while ((char *)v11 != v10)
    {
      v11 -= 32;
      sub_100077BC8(v11);
    }
    if (v10) {
      operator delete(v10);
    }
  }
}

void **sub_100362B1C(void **a1)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    uint64_t v3 = (uint64_t)a1[1];
    id v4 = *a1;
    if ((void *)v3 != v2)
    {
      do
      {
        v3 -= 32;
        sub_100077BC8(v3);
      }
      while ((void *)v3 != v2);
      id v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_100362B80(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 32;
    sub_100077BC8(i - 32);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_100362BD4(void *a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t)(a1[1] - *a1) >> 5;
  unint64_t v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 59) {
    sub_1000A9108();
  }
  uint64_t v6 = a1[2] - *a1;
  if (v6 >> 4 > v4) {
    unint64_t v4 = v6 >> 4;
  }
  if ((unint64_t)v6 >= 0x7FFFFFFFFFFFFFE0) {
    unint64_t v7 = 0x7FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v7 = v4;
  }
  if (v7)
  {
    if (v7 >> 59) {
      sub_1000A6A10();
    }
    id v8 = (char *)operator new(32 * v7);
  }
  else
  {
    id v8 = 0;
  }
  uint64_t v16 = (uint64_t)&v8[32 * v3];
  *((void *)&v17 + 1) = &v8[32 * v7];
  sub_1000A8CB8(v16, a2);
  uint64_t v9 = 0;
  uint64_t v11 = (void *)*a1;
  for (uint64_t i = a1[1]; (void *)(i + v9) != v11; sub_1000A8E40(v9 + v16, v9 + i))
    v9 -= 32;
  uint64_t v12 = v16 + v9;
  id v13 = (void *)*a1;
  uint64_t v14 = a1[1];
  *a1 = v12;
  *(void *)&long long v17 = v16 + 32;
  *(_OWORD *)(a1 + 1) = v17;
  while ((void *)v14 != v13)
  {
    v14 -= 32;
    sub_100077BC8(v14);
  }
  if (v13) {
    operator delete(v13);
  }
  return v16 + 32;
}

void sub_100362D14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_100362B80((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_100362D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7 = (unsigned char *)a2;
  unint64_t v9 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v10 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v10 = v9;
  }
  unint64_t v11 = sub_100077FAC((uint64_t)v43, (uint64_t *)a2, v10);
  unint64_t v12 = v11;
  unint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    uint8x8_t v14 = (uint8x8_t)vcnt_s8((int8x8_t)v13);
    v14.i16[0] = vaddlv_u8(v14);
    if (v14.u32[0] > 1uLL)
    {
      unint64_t v4 = v11;
      if (v11 >= v13) {
        unint64_t v4 = v11 % v13;
      }
    }
    else
    {
      unint64_t v4 = (v13 - 1) & v11;
    }
    uint64_t v15 = *(uint64_t ***)(*(void *)a1 + 8 * v4);
    if (v15)
    {
      uint64_t v16 = *v15;
      if (*v15)
      {
        char v17 = v7[23];
        if (v17 >= 0) {
          uint64_t v18 = v7[23];
        }
        else {
          uint64_t v18 = *((void *)v7 + 1);
        }
        if (v17 < 0) {
          unint64_t v7 = *(unsigned char **)v7;
        }
        if (v14.u32[0] < 2uLL)
        {
          while (1)
          {
            uint64_t v23 = v16[1];
            if (v23 == v12)
            {
              uint64_t v24 = *((unsigned __int8 *)v16 + 39);
              if ((v24 & 0x80u) == 0) {
                uint64_t v25 = *((unsigned __int8 *)v16 + 39);
              }
              else {
                uint64_t v25 = v16[3];
              }
              if (v25 == v18)
              {
                if ((v24 & 0x80) != 0)
                {
                  if (!memcmp((const void *)v16[2], v7, v16[3])) {
                    return v16;
                  }
                }
                else
                {
                  if (!*((unsigned char *)v16 + 39)) {
                    return v16;
                  }
                  uint64_t v26 = 0;
                  while (*((unsigned __int8 *)v16 + v26 + 16) == v7[v26])
                  {
                    if (v24 == ++v26) {
                      return v16;
                    }
                  }
                }
              }
            }
            else if ((v23 & (v13 - 1)) != v4)
            {
              goto LABEL_51;
            }
            uint64_t v16 = (uint64_t *)*v16;
            if (!v16) {
              goto LABEL_51;
            }
          }
        }
        do
        {
          unint64_t v19 = v16[1];
          if (v19 == v12)
          {
            uint64_t v20 = *((unsigned __int8 *)v16 + 39);
            if ((v20 & 0x80u) == 0) {
              uint64_t v21 = *((unsigned __int8 *)v16 + 39);
            }
            else {
              uint64_t v21 = v16[3];
            }
            if (v21 == v18)
            {
              if ((v20 & 0x80) != 0)
              {
                if (!memcmp((const void *)v16[2], v7, v16[3])) {
                  return v16;
                }
              }
              else
              {
                if (!*((unsigned char *)v16 + 39)) {
                  return v16;
                }
                uint64_t v22 = 0;
                while (*((unsigned __int8 *)v16 + v22 + 16) == v7[v22])
                {
                  if (v20 == ++v22) {
                    return v16;
                  }
                }
              }
            }
          }
          else
          {
            if (v19 >= v13) {
              v19 %= v13;
            }
            if (v19 != v4) {
              break;
            }
          }
          uint64_t v16 = (uint64_t *)*v16;
        }
        while (v16);
      }
    }
  }
LABEL_51:
  std::string::size_type v27 = operator new(0x48uLL);
  v43[0] = v27;
  v43[1] = a1 + 16;
  char v44 = 0;
  void *v27 = 0;
  v27[1] = v12;
  *((_OWORD *)v27 + 1) = *(_OWORD *)a3;
  v27[4] = *(void *)(a3 + 16);
  *(void *)a3 = 0;
  *(void *)(a3 + ++*(void *)(result + 8) = 0;
  *(void *)(a3 + 16) = 0;
  sub_1000A8CB8((uint64_t)(v27 + 5), a4);
  char v44 = 1;
  float v28 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v29 = *(float *)(a1 + 32);
  if (!v13 || (float)(v29 * (float)v13) < v28)
  {
    BOOL v32 = 1;
    if (v13 >= 3) {
      BOOL v32 = (v13 & (v13 - 1)) != 0;
    }
    unint64_t v33 = v32 | (2 * v13);
    unint64_t v34 = vcvtps_u32_f32(v28 / v29);
    if (v33 <= v34) {
      size_t prime = v34;
    }
    else {
      size_t prime = v33;
    }
    if (prime == 1)
    {
      size_t prime = 2;
    }
    else if ((prime & (prime - 1)) != 0)
    {
      size_t prime = std::__next_prime(prime);
    }
    int8x8_t v36 = *(int8x8_t *)(a1 + 8);
    if (prime > *(void *)&v36) {
      goto LABEL_65;
    }
    if (prime < *(void *)&v36)
    {
      unint64_t v37 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
      if (*(void *)&v36 < 3uLL || (uint8x8_t v38 = (uint8x8_t)vcnt_s8(v36), v38.i16[0] = vaddlv_u8(v38), v38.u32[0] > 1uLL))
      {
        unint64_t v37 = std::__next_prime(v37);
      }
      else
      {
        uint64_t v39 = 1 << -(char)__clz(v37 - 1);
        if (v37 >= 2) {
          unint64_t v37 = v39;
        }
      }
      if (prime <= v37) {
        size_t prime = v37;
      }
      if (prime < *(void *)&v36) {
LABEL_65:
      }
        sub_10006338C(a1, prime);
    }
    unint64_t v13 = *(void *)(a1 + 8);
    unint64_t v40 = v13 - 1;
    if ((v13 & (v13 - 1)) != 0)
    {
      if (v12 >= v13)
      {
        unint64_t v4 = v12 % v13;
        uint64_t v30 = *(void **)(*(void *)a1 + 8 * (v12 % v13));
        int v31 = (void *)v43[0];
        if (v30) {
          goto LABEL_54;
        }
      }
      else
      {
        unint64_t v4 = v12;
        uint64_t v30 = *(void **)(*(void *)a1 + 8 * v12);
        int v31 = (void *)v43[0];
        if (v30) {
          goto LABEL_54;
        }
      }
    }
    else
    {
      unint64_t v4 = v40 & v12;
      uint64_t v30 = *(void **)(*(void *)a1 + 8 * (v40 & v12));
      int v31 = (void *)v43[0];
      if (v30) {
        goto LABEL_54;
      }
    }
LABEL_78:
    *int v31 = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v43[0];
    *(void *)(*(void *)a1 + 8 * v4) = a1 + 16;
    if (*(void *)v43[0])
    {
      unint64_t v41 = *(void *)(*(void *)v43[0] + 8);
      if ((v13 & (v13 - 1)) != 0)
      {
        if (v41 >= v13) {
          v41 %= v13;
        }
      }
      else
      {
        v41 &= v13 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v41) = v43[0];
    }
    goto LABEL_89;
  }
  uint64_t v30 = *(void **)(*(void *)a1 + 8 * v4);
  int v31 = (void *)v43[0];
  if (!v30) {
    goto LABEL_78;
  }
LABEL_54:
  *int v31 = *v30;
  void *v30 = v43[0];
LABEL_89:
  uint64_t v16 = (uint64_t *)v43[0];
  ++*(void *)(a1 + 24);
  return v16;
}

void sub_1003631A0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000A9738((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_1003631B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  if (*(char *)(v2 + 39) < 0) {
    operator delete(*v3);
  }
  sub_1000A9738((uint64_t *)va);
  _Unwind_Resume(a1);
}

std::string *sub_1003631DC@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_100363210(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10036322C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1003632A4()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10036331C()
{
}

char *sub_100363344(char *__dst, long long *a2, long long *a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000559FC(__dst, *(void **)a2, *((void *)a2 + 1));
    uint64_t v6 = __dst + 24;
    if ((*((char *)a3 + 23) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else
  {
    long long v5 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v5;
    uint64_t v6 = __dst + 24;
    if ((*((char *)a3 + 23) & 0x80000000) == 0)
    {
LABEL_3:
      long long v7 = *a3;
      *((void *)v6 + 2) = *((void *)a3 + 2);
      *(_OWORD *)uint64_t v6 = v7;
      return __dst;
    }
  }
  sub_1000559FC(v6, *(void **)a3, *((void *)a3 + 1));
  return __dst;
}

void sub_1003633D4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003633F0(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

void sub_100363420(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  boost::filesystem::filesystem_error::filesystem_error(v12, a1);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  int v17 = -1;
  v12[0].__vftable = (std::runtime_error_vtbl *)off_10045B050;
  unint64_t v13 = off_10045B078;
  sub_100173764((uint64_t)v18, (uint64_t)v12);
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  int v21 = a4;
  unint64_t v9 = *(const void **)a5;
  size_t v10 = *(void *)(a5 + 8) - *(void *)a5;
  if (v10)
  {
    if ((v10 & 0x8000000000000000) != 0) {
      sub_1000A9108();
    }
    std::string __p = operator new(v10);
    memcpy(__p, v9, v10);
  }
  sub_100173408();
}

void sub_100363710(void *a1)
{
  boost::filesystem::filesystem_error::~filesystem_error(v1);
  sub_1000A6954(a1);
}

void sub_100363724(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12)
{
  if (__p)
  {
    operator delete(__p);
    sub_1000A6954(a1);
  }
  sub_1000A6954(a1);
}

void sub_10036374C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1003637C4()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

std::string *sub_10036383C@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_100363870(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10036388C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100363904()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10036397C()
{
}

void sub_1003639A4()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100363A1C()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100363A94()
{
}

Class sub_100363ABC()
{
  if (qword_10047E488 != -1) {
    dispatch_once(&qword_10047E488, &stru_100469EB8);
  }
  Class result = objc_getClass("AVAssetWriter");
  qword_10047E4B0 = (uint64_t)result;
  return result;
}

Class sub_100363B0C()
{
  if (qword_10047E488 != -1) {
    dispatch_once(&qword_10047E488, &stru_100469EB8);
  }
  Class result = objc_getClass("AVAssetWriterInput");
  qword_10047E4B8 = (uint64_t)result;
  return result;
}

Class sub_100363B5C()
{
  if (qword_10047E488 != -1) {
    dispatch_once(&qword_10047E488, &stru_100469EB8);
  }
  Class result = objc_getClass("AVAssetWriterInputPixelBufferAdaptor");
  qword_10047E4C0 = (uint64_t)result;
  return result;
}

Class sub_100363BAC()
{
  if (qword_10047E488 != -1) {
    dispatch_once(&qword_10047E488, &stru_100469EB8);
  }
  Class result = objc_getClass("AVAssetReader");
  qword_10047E4D0 = (uint64_t)result;
  return result;
}

Class sub_100363BFC()
{
  if (qword_10047E488 != -1) {
    dispatch_once(&qword_10047E488, &stru_100469EB8);
  }
  Class result = objc_getClass("AVURLAsset");
  qword_10047E4D8 = (uint64_t)result;
  return result;
}

Class sub_100363C4C()
{
  if (qword_10047E488 != -1) {
    dispatch_once(&qword_10047E488, &stru_100469EB8);
  }
  Class result = objc_getClass("AVAssetReaderTrackOutput");
  qword_10047E4E0 = (uint64_t)result;
  return result;
}

id sub_100363C9C()
{
  if (qword_10047E488 == -1)
  {
    uint64_t v0 = (id *)dlsym((void *)qword_10047E490, "AVMediaTypeVideo");
    if (!v0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  dispatch_once(&qword_10047E488, &stru_100469EB8);
  uint64_t v0 = (id *)dlsym((void *)qword_10047E490, "AVMediaTypeVideo");
  if (v0) {
LABEL_3:
  }
    objc_storeStrong((id *)&qword_10047E3E8, *v0);
LABEL_4:
  uint64_t v1 = (void *)qword_10047E3E8;

  return v1;
}

id sub_100363D30()
{
  if (qword_10047E488 == -1)
  {
    uint64_t v0 = (id *)dlsym((void *)qword_10047E490, "AVFileTypeMPEG4");
    if (!v0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  dispatch_once(&qword_10047E488, &stru_100469EB8);
  uint64_t v0 = (id *)dlsym((void *)qword_10047E490, "AVFileTypeMPEG4");
  if (v0) {
LABEL_3:
  }
    objc_storeStrong((id *)&qword_10047E3F0, *v0);
LABEL_4:
  uint64_t v1 = (void *)qword_10047E3F0;

  return v1;
}

id sub_100363DC4()
{
  if (qword_10047E488 == -1)
  {
    uint64_t v0 = (id *)dlsym((void *)qword_10047E490, "AVVideoCodecKey");
    if (!v0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  dispatch_once(&qword_10047E488, &stru_100469EB8);
  uint64_t v0 = (id *)dlsym((void *)qword_10047E490, "AVVideoCodecKey");
  if (v0) {
LABEL_3:
  }
    objc_storeStrong((id *)&qword_10047E3F8, *v0);
LABEL_4:
  uint64_t v1 = (void *)qword_10047E3F8;

  return v1;
}

id sub_100363E58()
{
  if (qword_10047E488 == -1)
  {
    uint64_t v0 = (id *)dlsym((void *)qword_10047E490, "AVVideoCodecH264");
    if (!v0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  dispatch_once(&qword_10047E488, &stru_100469EB8);
  uint64_t v0 = (id *)dlsym((void *)qword_10047E490, "AVVideoCodecH264");
  if (v0) {
LABEL_3:
  }
    objc_storeStrong((id *)&qword_10047E400, *v0);
LABEL_4:
  uint64_t v1 = (void *)qword_10047E400;

  return v1;
}

id sub_100363EEC()
{
  if (qword_10047E488 == -1)
  {
    uint64_t v0 = (id *)dlsym((void *)qword_10047E490, "AVVideoWidthKey");
    if (!v0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  dispatch_once(&qword_10047E488, &stru_100469EB8);
  uint64_t v0 = (id *)dlsym((void *)qword_10047E490, "AVVideoWidthKey");
  if (v0) {
LABEL_3:
  }
    objc_storeStrong((id *)&qword_10047E408, *v0);
LABEL_4:
  uint64_t v1 = (void *)qword_10047E408;

  return v1;
}

id sub_100363F80()
{
  if (qword_10047E488 == -1)
  {
    uint64_t v0 = (id *)dlsym((void *)qword_10047E490, "AVVideoHeightKey");
    if (!v0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  dispatch_once(&qword_10047E488, &stru_100469EB8);
  uint64_t v0 = (id *)dlsym((void *)qword_10047E490, "AVVideoHeightKey");
  if (v0) {
LABEL_3:
  }
    objc_storeStrong((id *)&qword_10047E410, *v0);
LABEL_4:
  uint64_t v1 = (void *)qword_10047E410;

  return v1;
}

uint64_t sub_100364014(uint64_t a1)
{
  return off_10047D100(a1);
}

uint64_t sub_100364020(uint64_t a1)
{
  long long v2 = *(_OWORD *)a1;
  uint64_t v3 = *(void *)(a1 + 16);
  return off_10047D108(&v2);
}

uint64_t sub_10036405C(uint64_t a1)
{
  return off_10047D110(a1);
}

uint64_t sub_100364068(uint64_t a1, uint64_t a2)
{
  return off_10047D118(a1, a2);
}

uint64_t sub_100364074()
{
  if (qword_10047E508 == -1)
  {
    uint64_t v0 = (uint64_t *)dlsym((void *)qword_10047E510, "kCVPixelBufferPixelFormatTypeKey");
    if (v0)
    {
LABEL_3:
      uint64_t result = *v0;
      qword_10047E500 = result;
      return result;
    }
  }
  else
  {
    dispatch_once(&qword_10047E508, &stru_100469EF8);
    uint64_t v0 = (uint64_t *)dlsym((void *)qword_10047E510, "kCVPixelBufferPixelFormatTypeKey");
    if (v0) {
      goto LABEL_3;
    }
  }
  return qword_10047E500;
}

uint64_t sub_1003640F8(uint64_t a1)
{
  return off_10047D128(a1);
}

uint64_t sub_100364104(uint64_t a1)
{
  return off_10047D130(a1);
}

void sub_100364110(id a1)
{
  qword_10047E490 = (uint64_t)dlopen("/System/Library/\"Frameworks\"/AVFoundation.framework/AVFoundation", 2);
}

void sub_10036413C(id a1)
{
  qword_10047E4F8 = (uint64_t)dlopen("/System/Library/\"Frameworks\"/CoreMedia.framework/CoreMedia", 2);
}

uint64_t sub_100364168(uint64_t a1)
{
  if (qword_10047E4F0 != -1) {
    dispatch_once(&qword_10047E4F0, &stru_100469ED8);
  }
  long long v2 = (uint64_t (*)())dlsym((void *)qword_10047E4F8, "CMSampleBufferGetPresentationTimeStamp");
  off_10047D100 = v2;

  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t sub_1003641EC(long long *a1)
{
  if (qword_10047E4F0 != -1) {
    dispatch_once(&qword_10047E4F0, &stru_100469ED8);
  }
  off_10047D108 = (uint64_t (*)())dlsym((void *)qword_10047E4F8, "CMTimeGetSeconds");
  long long v3 = *a1;
  uint64_t v4 = *((void *)a1 + 2);
  return ((uint64_t (*)(long long *))off_10047D108)(&v3);
}

uint64_t sub_100364274(uint64_t a1)
{
  if (qword_10047E4F0 != -1) {
    dispatch_once(&qword_10047E4F0, &stru_100469ED8);
  }
  long long v2 = (uint64_t (*)())dlsym((void *)qword_10047E4F8, "CMSampleBufferGetImageBuffer");
  off_10047D110 = v2;

  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t sub_1003642F0(uint64_t a1, uint64_t a2)
{
  if (qword_10047E4F0 != -1) {
    dispatch_once(&qword_10047E4F0, &stru_100469ED8);
  }
  uint64_t v4 = (uint64_t (*)())dlsym((void *)qword_10047E4F8, "CMTimeMake");
  off_10047D118 = v4;

  return ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
}

void sub_100364384(id a1)
{
  qword_10047E510 = (uint64_t)dlopen("/System/Library/\"Frameworks\"/CoreVideo.framework/CoreVideo", 2);
}

uint64_t sub_1003643B0(uint64_t a1)
{
  if (qword_10047E508 != -1) {
    dispatch_once(&qword_10047E508, &stru_100469EF8);
  }
  long long v2 = (uint64_t (*)())dlsym((void *)qword_10047E510, "CVPixelBufferGetWidth");
  off_10047D128 = v2;

  return ((uint64_t (*)(uint64_t))v2)(a1);
}

uint64_t sub_10036442C(uint64_t a1)
{
  if (qword_10047E508 != -1) {
    dispatch_once(&qword_10047E508, &stru_100469EF8);
  }
  long long v2 = (uint64_t (*)())dlsym((void *)qword_10047E510, "CVPixelBufferGetHeight");
  off_10047D130 = v2;

  return ((uint64_t (*)(uint64_t))v2)(a1);
}

void sub_1003644A8()
{
}

void sub_1003644D0()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100364548()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_1003645C0()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100364638()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_1003646B0()
{
}

void sub_1003646D8()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100364750()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_1003647C8()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100364840()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_1003648B8()
{
}

void sub_1003648F4(_Unwind_Exception *a1)
{
  sub_100364908(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_100364908(uint64_t *a1)
{
  uint64_t v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    sub_10035A0B8(v2);
    operator delete();
  }
  return a1;
}

void sub_100364950()
{
}

void sub_100364A0C(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
}

uint64_t sub_100364A48@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*(char *)(a2 + 23) < 0)
  {
    sub_1000559FC(__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a2;
    uint64_t v33 = *(void *)(a2 + 16);
  }
  sub_10035A0B4(v34, __p, 3, 0);
  uint64_t v31 = a2;
  if (SHIBYTE(v33) < 0) {
    operator delete(__p[0]);
  }
  float v29 = (uint64_t **)a1;
  uint64_t v7 = *a1;
  uint64_t v8 = archive_entry_new();
  int v38 = 0;
  *(void *)(a4 + ++*(void *)(result + 8) = 0;
  *(void *)(a4 + 16) = 0;
  *(void *)a4 = 0;
  while (1)
  {
    uint64_t next_header2 = archive_read_next_header2();
    if (next_header2 == 1) {
      break;
    }
    ++v38;
    sub_100364F74(v7, next_header2, "Failed to read entry ", &v38);
    int v10 = v38;
    unint64_t v11 = (const char *)archive_entry_pathname();
    size_t v12 = strlen(v11);
    if (v12 >= 0x7FFFFFFFFFFFFFF8) {
      sub_1000A6968();
    }
    size_t v13 = v12;
    if (v12 >= 0x17)
    {
      uint64_t v15 = (v12 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v12 | 7) != 0x17) {
        uint64_t v15 = v12 | 7;
      }
      uint64_t v16 = v15 + 1;
      p_dst = (long long *)operator new(v15 + 1);
      *((void *)&__dst + 1) = v13;
      int64_t v40 = v16 | 0x8000000000000000;
      *(void *)&long long __dst = p_dst;
LABEL_15:
      memmove(p_dst, v11, v13);
      goto LABEL_16;
    }
    HIBYTE(v40) = v12;
    p_dst = &__dst;
    if (v12) {
      goto LABEL_15;
    }
LABEL_16:
    *((unsigned char *)p_dst + v13) = 0;
    sub_1000521C4(&__dst);
    if (!v17)
    {
      uint64_t v20 = *(void *)(a3 + 24);
      if (!v20) {
        sub_10008F39C();
      }
      (*(void (**)(void **__return_ptr))(*(void *)v20 + 48))(&v35);
      goto LABEL_25;
    }
    if (qword_10047BED8 == -1)
    {
      uint64_t v18 = qword_10047BEE0;
      if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_19;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_100469F38);
      uint64_t v18 = qword_10047BEE0;
      if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR))
      {
LABEL_19:
        uint64_t v19 = &__dst;
        if (v40 < 0) {
          uint64_t v19 = (long long *)__dst;
        }
        *(_DWORD *)long long buf = 67109378;
        int v42 = v10;
        __int16 v43 = 2080;
        char v44 = v19;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_ERROR, "Cannot extract entry %d (%s) - it is absolute", buf, 0x12u);
      }
    }
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
LABEL_25:
    if (SHIBYTE(v40) < 0)
    {
      operator delete((void *)__dst);
      char v21 = HIBYTE(v37);
      if (v37 >= 0) {
        uint64_t v22 = HIBYTE(v37);
      }
      else {
        uint64_t v22 = v36;
      }
      if (v22) {
        goto LABEL_37;
      }
LABEL_30:
      if (v21 < 0) {
        goto LABEL_42;
      }
LABEL_31:
      if (v22) {
        goto LABEL_43;
      }
    }
    else
    {
      char v21 = HIBYTE(v37);
      if (v37 >= 0) {
        uint64_t v22 = HIBYTE(v37);
      }
      else {
        uint64_t v22 = v36;
      }
      if (!v22) {
        goto LABEL_30;
      }
LABEL_37:
      sub_100051DE0((uint64_t)&v35, v31, 0, (uint64_t)&__dst);
      unint64_t v23 = *(void *)(a4 + 8);
      if (v23 >= *(void *)(a4 + 16))
      {
        uint64_t v25 = sub_10008CF94((void **)a4, (uint64_t)&__dst);
        int v26 = SHIBYTE(v40);
        *(void *)(a4 + ++*(void *)(result + 8) = v25;
        if (v26 < 0) {
          operator delete((void *)__dst);
        }
      }
      else
      {
        long long v24 = __dst;
        *(void *)(v23 + 16) = v40;
        *(_OWORD *)unint64_t v23 = v24;
        *(void *)(a4 + ++*(void *)(result + 8) = v23 + 24;
      }
      archive_entry_set_pathname();
      if ((v37 & 0x8000000000000000) == 0) {
        goto LABEL_31;
      }
LABEL_42:
      operator delete(v35);
      if (v22)
      {
LABEL_43:
        if (!*(_WORD *)(archive_entry_stat() + 4)) {
          archive_entry_set_perm();
        }
        uint64_t extract2 = archive_read_extract2();
        *(void *)&long long __dst = archive_entry_pathname();
        sub_100365214((uint64_t)v34, extract2, "Failed to save entry ", &v38, (const std::string::value_type **)&__dst);
      }
    }
  }
  if (v8) {
    archive_entry_free();
  }
  sub_10035A3D8((uint64_t)v34);
  sub_10035A104(*v29);
  return sub_10035A0B8((uint64_t)v34);
}

void sub_100364E88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  if (!a2) {
    _Unwind_Resume(exception_object);
  }
  sub_1000A6954(exception_object);
}

uint64_t sub_100364F74(uint64_t result, uint64_t a2, std::string::value_type *__s, int *a4)
{
  if (a2)
  {
    uint64_t v6 = result;
    char v23 = 0;
    LOBYTE(v22) = 0;
    memset(&v28, 0, sizeof(v28));
    std::string::assign(&v28, __s);
    memset(&v29, 0, sizeof(v29));
    uint64_t v33 = v31;
    unint64_t v34 = &v32;
    int v7 = *a4;
    if (*a4 >= 0) {
      int v8 = *a4;
    }
    else {
      int v8 = -v7;
    }
    int v24 = v8;
    uint64_t v25 = &v32;
    char v26 = 48;
    int v27 = 48;
    uint64_t v9 = sub_10000D008((uint64_t)&v24);
    int v10 = (char *)v9;
    unint64_t v11 = &v29;
    if (v7 < 0)
    {
      *(unsigned char *)(v9 - 1) = 45;
      int v10 = (char *)(v9 - 1);
      uint64_t v33 = (unsigned char *)(v9 - 1);
      unint64_t v34 = &v32;
      std::string::size_type v12 = (std::string::size_type)(&v32 - v9 + 1);
      if (v12 < 0x17)
      {
LABEL_7:
        if (v10 != &v32)
        {
LABEL_8:
          unint64_t v13 = &v30 - v10 + 23;
          if (v13 < 0x20 || (unint64_t)((char *)v11 - v10) < 0x20)
          {
            uint64_t v14 = v11;
            uint64_t v15 = v10;
          }
          else
          {
            uint64_t v14 = (std::string *)((char *)v11 + (v13 & 0xFFFFFFFFFFFFFFE0));
            uint64_t v15 = &v10[v13 & 0xFFFFFFFFFFFFFFE0];
            uint64_t v16 = (long long *)(v10 + 16);
            uint64_t v17 = &v11->__r_.__value_.__r.__words[2];
            unint64_t v18 = v13 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              long long v19 = *v16;
              *((_OWORD *)v17 - 1) = *(v16 - 1);
              *(_OWORD *)uint64_t v17 = v19;
              v16 += 2;
              v17 += 4;
              v18 -= 32;
            }
            while (v18);
            if (v13 == (v13 & 0xFFFFFFFFFFFFFFE0)) {
              goto LABEL_21;
            }
          }
          do
          {
            std::string::value_type v20 = *v15++;
            v14->__r_.__value_.__s.__data_[0] = v20;
            uint64_t v14 = (std::string *)((char *)v14 + 1);
          }
          while (v15 != &v32);
LABEL_21:
          v14->__r_.__value_.__s.__data_[0] = 0;
          if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
            v29.__r_.__value_.__l.__size_ = v12;
          }
          else {
            *((unsigned char *)&v29.__r_.__value_.__s + 23) = v12 & 0x7F;
          }
          sub_10016A2C4((uint64_t)&v22, (uint64_t)&v28, 2);
          if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v29.__r_.__value_.__l.__data_);
            if ((SHIBYTE(v28.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            {
LABEL_26:
              if ((v23 & 0x80000000) == 0) {
                goto LABEL_27;
              }
LABEL_31:
              operator delete(v22);
LABEL_27:
              sub_10035AC40(v6, a2, (const void **)&__p);
            }
          }
          else if ((SHIBYTE(v28.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
            goto LABEL_26;
          }
          operator delete(v28.__r_.__value_.__l.__data_);
          if ((v23 & 0x80000000) == 0) {
            goto LABEL_27;
          }
          goto LABEL_31;
        }
LABEL_18:
        uint64_t v14 = v11;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v33 = (unsigned char *)v9;
      unint64_t v34 = &v32;
      std::string::size_type v12 = (std::string::size_type)(&v32 - v9);
      if ((unint64_t)(&v32 - v9) < 0x17) {
        goto LABEL_7;
      }
    }
    std::string::__grow_by(&v29, 0x16uLL, v12 - 22, 0, 0, 0, 0);
    v29.__r_.__value_.__l.__size_ = 0;
    if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      unint64_t v11 = (std::string *)v29.__r_.__value_.__r.__words[0];
    }
    if (v10 != &v32) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
  return result;
}

void sub_1003651CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100365214(uint64_t result, uint64_t a2, std::string::value_type *__s, int *a4, const std::string::value_type **a5)
{
  if (a2)
  {
    uint64_t v8 = result;
    char v25 = 0;
    LOBYTE(v++*(void *)(result + 24) = 0;
    memset(&v30, 0, sizeof(v30));
    std::string::assign(&v30, __s);
    uint64_t v9 = &v31;
    memset(&v31, 0, sizeof(v31));
    uint64_t v36 = v34;
    uint64_t v37 = &v35;
    int v10 = *a4;
    if (*a4 >= 0) {
      int v11 = *a4;
    }
    else {
      int v11 = -v10;
    }
    int v26 = v11;
    int v27 = &v35;
    char v28 = 48;
    int v29 = 48;
    uint64_t v12 = sub_10000D008((uint64_t)&v26);
    unint64_t v13 = (char *)v12;
    if (v10 < 0)
    {
      *(unsigned char *)(v12 - 1) = 45;
      unint64_t v13 = (char *)(v12 - 1);
      uint64_t v36 = (unsigned char *)(v12 - 1);
      uint64_t v37 = &v35;
      std::string::size_type v14 = (std::string::size_type)(&v35 - v12 + 1);
      if (v14 < 0x17)
      {
LABEL_7:
        if (v13 != &v35)
        {
LABEL_8:
          unint64_t v15 = &v33 - v13 + 23;
          if (v15 < 0x20 || (unint64_t)((char *)v9 - v13) < 0x20)
          {
            uint64_t v16 = v9;
            uint64_t v17 = v13;
          }
          else
          {
            uint64_t v16 = (std::string *)((char *)v9 + (v15 & 0xFFFFFFFFFFFFFFE0));
            uint64_t v17 = &v13[v15 & 0xFFFFFFFFFFFFFFE0];
            unint64_t v18 = (long long *)(v13 + 16);
            long long v19 = &v9->__r_.__value_.__r.__words[2];
            unint64_t v20 = v15 & 0xFFFFFFFFFFFFFFE0;
            do
            {
              long long v21 = *v18;
              *((_OWORD *)v19 - 1) = *(v18 - 1);
              *(_OWORD *)long long v19 = v21;
              v18 += 2;
              v19 += 4;
              v20 -= 32;
            }
            while (v20);
            if (v15 == (v15 & 0xFFFFFFFFFFFFFFE0)) {
              goto LABEL_21;
            }
          }
          do
          {
            std::string::value_type v22 = *v17++;
            v16->__r_.__value_.__s.__data_[0] = v22;
            uint64_t v16 = (std::string *)((char *)v16 + 1);
          }
          while (v17 != &v35);
LABEL_21:
          v16->__r_.__value_.__s.__data_[0] = 0;
          if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
            v31.__r_.__value_.__l.__size_ = v14;
          }
          else {
            *((unsigned char *)&v31.__r_.__value_.__s + 23) = v14 & 0x7F;
          }
          memset(&v32, 0, sizeof(v32));
          std::string::assign(&v32, *a5);
          sub_10016A2C4((uint64_t)&v24, (uint64_t)&v30, 3);
          if (SHIBYTE(v32.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v32.__r_.__value_.__l.__data_);
            if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
            {
LABEL_26:
              if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                goto LABEL_27;
              }
              goto LABEL_32;
            }
          }
          else if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
            goto LABEL_26;
          }
          operator delete(v31.__r_.__value_.__l.__data_);
          if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
          {
LABEL_27:
            if ((v25 & 0x80000000) == 0) {
              goto LABEL_28;
            }
LABEL_33:
            operator delete(v24);
LABEL_28:
            sub_10035AC40(v8, a2, (const void **)&__p);
          }
LABEL_32:
          operator delete(v30.__r_.__value_.__l.__data_);
          if ((v25 & 0x80000000) == 0) {
            goto LABEL_28;
          }
          goto LABEL_33;
        }
LABEL_18:
        uint64_t v16 = v9;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v36 = (unsigned char *)v12;
      uint64_t v37 = &v35;
      std::string::size_type v14 = (std::string::size_type)(&v35 - v12);
      if ((unint64_t)(&v35 - v12) < 0x17) {
        goto LABEL_7;
      }
    }
    std::string::__grow_by(&v31, 0x16uLL, v14 - 22, 0, 0, 0, 0);
    v31.__r_.__value_.__l.__size_ = 0;
    if ((v31.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      uint64_t v9 = (std::string *)v31.__r_.__value_.__r.__words[0];
    }
    if (v13 != &v35) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
  return result;
}

void sub_1003654AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,uint64_t a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100365538(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

void sub_100365568()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1003655E0()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_1003656C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003657BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003657D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003657E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003658D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003658E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100365950(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003659CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003659E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100365B50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100365D60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_100365E1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100365FEC(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1003660D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1003660E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366154(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366274(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100366288(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003663B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003663E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003664E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1003664FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1003666F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366708(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  _Unwind_Resume(a1);
}

void sub_100366720(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10036673C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366768(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366794(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1003667AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1003667C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366840(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1003668A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1003669D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error((std::runtime_error *)(v19 - 48));
  if (a19 < 0) {
    operator delete(a14);
  }
  _Unwind_Resume(a1);
}

void sub_100366A48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366A5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366AD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366AF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366B84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366B9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366C10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366C28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366CB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366CD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366D60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366D78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366DE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100366F14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366F30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366F48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366F5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366F74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100366F88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100367028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100367044(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1003670E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100367104(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1003673AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_100367528(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10036753C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10036754C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003676A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003676B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003676D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003676F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10036770C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100367800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100367820(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10036783C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100367930(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100367958(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100367970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

double sub_100367C70(uint64_t a1, double *a2)
{
  sub_1000776C8(*(void *)a1);
  switch(v15 ^ (v15 >> 31))
  {
    case 1:
      double v4 = (double)SLODWORD(v16[0]);
      if (!*(unsigned char *)(a1 + 8)) {
        goto LABEL_12;
      }
      break;
    case 2:
      double v4 = (double)*(uint64_t *)&v16[0];
      if (!*(unsigned char *)(a1 + 8)) {
        goto LABEL_12;
      }
      break;
    case 3:
      double v4 = sub_100368024((uint64_t)__p, (uint64_t)v16);
      if (!*(unsigned char *)(a1 + 8)) {
        goto LABEL_12;
      }
      break;
    case 4:
      double v4 = v16[0];
      if (!*(unsigned char *)(a1 + 8))
      {
LABEL_12:
        if (qword_10047BED8 != -1) {
          dispatch_once(&qword_10047BED8, &stru_100469F58);
        }
        long long v5 = (id)qword_10047BEE0;
        if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
        {
          uint64_t v6 = *(void *)a1;
          sub_10015F190(&v15, (uint64_t)__p);
          if (v10 >= 0) {
            int v7 = __p;
          }
          else {
            int v7 = (void **)__p[0];
          }
          *(_DWORD *)long long buf = 136315394;
          uint64_t v12 = v6;
          __int16 v13 = 2080;
          std::string::size_type v14 = v7;
          _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "developer override of %s with %s", buf, 0x16u);
          if (v10 < 0) {
            operator delete(__p[0]);
          }
        }

        *(unsigned char *)(a1 + ++*(void *)(result + 8) = 1;
      }
      break;
    case 5:
      sub_10036857C();
    case 6:
      sub_1003686F0();
    default:
      double v4 = *a2;
      break;
  }
  sub_100077BC8((uint64_t)&v15);
  return v4;
}

void sub_100367E5C(_Unwind_Exception *a1, int a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v6 = va_arg(va1, void *);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  std::string __p = va_arg(va1, void *);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t buf = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  if (a2)
  {

    __cxa_begin_catch(a1);
    long long v5 = sub_100367FB4();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      sub_10015F190((int *)va1, (uint64_t)va);
      sub_10015F2D0();
    }

    __cxa_rethrow();
  }
  _Unwind_Resume(a1);
}

id sub_100367FB4()
{
  if (qword_10047BED8 == -1)
  {
    uint64_t v0 = (void *)qword_10047BEE0;
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_100469F58);
    uint64_t v0 = (void *)qword_10047BEE0;
  }
  return v0;
}

double sub_100368024(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a2 + 23);
  if ((v2 & 0x80u) == 0) {
    long long v3 = (std::bad_cast_vtbl *)a2;
  }
  else {
    long long v3 = *(std::bad_cast_vtbl **)a2;
  }
  if ((v2 & 0x80u) != 0) {
    uint64_t v2 = *(void *)(a2 + 8);
  }
  double v9 = 0.0;
  v10.__vftable = v3;
  uint64_t v11 = (_UNKNOWN **)((char *)v3 + v2);
  if (!sub_100368344((unsigned __int8 *)v3, (unsigned __int8 *)v3 + v2, &v9, "NAN", "nan", "INFINITY", "infinity", 0x28u, 0x29u))
  {
    if (!sub_100368140((uint64_t *)&v10)
      || ((unsigned int v4 = *((unsigned __int8 *)v11 - 1) - 43, v5 = v4 > 0x3A, v6 = (1 << v4) & 0x400000004000005, !v5)
        ? (BOOL v7 = v6 == 0)
        : (BOOL v7 = 1),
          !v7))
    {
      std::bad_cast::bad_cast(&v10);
      v10.__vftable = (std::bad_cast_vtbl *)&off_100454020;
      sub_1000DB0D4((uint64_t)&v10);
    }
  }
  return v9;
}

void sub_10036812C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::bad_cast a12)
{
}

BOOL sub_100368140(uint64_t *a1)
{
  std::streambuf::basic_streambuf();
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  __sb[0] = off_100468708;
  __sb[2] = v2;
  __sb[3] = v2;
  __sb[4] = v3;
  v9[1] = 0;
  std::ios_base::init(&v10, __sb);
  uint64_t v11 = 0;
  int v12 = -1;
  v4->__exceptions_ = 1;
  std::ios_base::clear(v4, v4->__rdstate_);
  uint64_t v5 = v9[0];
  *(_DWORD *)((char *)&v9[1] + *(void *)(v9[0] - 24)) &= ~0x1000u;
  *(void *)((char *)&v9[2] + *(void *)(v5 - 24)) = 17;
  uint64_t v6 = (void *)std::istream::operator>>();
  BOOL v7 = (*((unsigned char *)v6 + *(void *)(*v6 - 24) + 32) & 5) == 0 && std::istream::get() == -1;
  std::istream::~istream();
  std::streambuf::~streambuf();
  return v7;
}

void sub_1003682EC(_Unwind_Exception *a1)
{
}

void sub_100368308(_Unwind_Exception *a1)
{
}

uint64_t sub_100368344(unsigned __int8 *a1, unsigned __int8 *a2, double *a3, unsigned __int8 *a4, unsigned __int8 *a5, unsigned __int8 *a6, unsigned __int8 *a7, unsigned __int8 a8, unsigned __int8 a9)
{
  if (a1 == a2) {
    return 0;
  }
  int v9 = *a1;
  BOOL v10 = v9 == 45 || v9 == 43;
  uint64_t v11 = v10 ? a1 + 1 : a1;
  int64_t v12 = a2 - v11;
  if (a2 - v11 < 3) {
    return 0;
  }
  int v14 = *v11;
  if (v14 == *a5 || v14 == *a4)
  {
    int v15 = v11[1];
    if (v15 == a5[1] || v15 == a4[1])
    {
      int v16 = v11[2];
      if (v16 == a5[2] || v16 == a4[2])
      {
        uint64_t v17 = v11 + 3;
        if (v17 == a2 || a2 - v17 >= 2 && *v17 == a8 && *(a2 - 1) == a9)
        {
          double v18 = NAN;
          if (v9 == 45) {
            double v18 = NAN;
          }
          *a3 = v18;
          return 1;
        }
        return 0;
      }
    }
  }
  if (v12 == 8)
  {
    if (v14 != *a7 && v14 != *a6) {
      return 0;
    }
    int v22 = v11[1];
    if (v22 != a7[1] && v22 != a6[1]) {
      return 0;
    }
    int v23 = v11[2];
    if (v23 != a7[2] && v23 != a6[2]) {
      return 0;
    }
    int v24 = v11[3];
    if (v24 != a7[3] && v24 != a6[3]) {
      return 0;
    }
    int v25 = v11[4];
    if (v25 != a7[4] && v25 != a6[4]) {
      return 0;
    }
    int v26 = v11[5];
    if (v26 != a7[5] && v26 != a6[5]) {
      return 0;
    }
    int v27 = v11[6];
    if (v27 != a7[6] && v27 != a6[6]) {
      return 0;
    }
    int v20 = v11[7];
    if (v20 == a7[7]) {
      goto LABEL_48;
    }
    int v21 = a6[7];
  }
  else
  {
    if (v12 != 3 || v14 != *a7 && v14 != *a6) {
      return 0;
    }
    int v19 = v11[1];
    if (v19 != a7[1] && v19 != a6[1]) {
      return 0;
    }
    int v20 = v11[2];
    if (v20 == a7[2]) {
      goto LABEL_48;
    }
    int v21 = a6[2];
  }
  if (v20 != v21) {
    return 0;
  }
LABEL_48:
  double v28 = INFINITY;
  if (v9 == 45) {
    double v28 = -INFINITY;
  }
  *a3 = v28;
  return 1;
}

void sub_10036857C()
{
  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003EE100;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert between incompatible types");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_100453860;
  sub_10018E868((uint64_t)v0);
  sub_1000D1698(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<double>::operator()(const F &) const [T = double, F = std::vector<boost::variant<boost::detail::variant::recursive_flag<boost::none_t>, int, long long, std::string, double, std::vector<boost::recursive_variant_>, std::unordered_map<std::string, boost::recursive_variant_>>>]", (uint64_t)"../../../common/util/overridable_setting.h", 106, (uint64_t)v0);
}

void sub_100368650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void sub_1003686B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x1003686A8);
}

void sub_1003686DC(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_1003686F0()
{
  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x30uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003EE100;
  strcpy(v1.__r_.__value_.__l.__data_, "Attempt to convert between incompatible types");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_100453860;
  sub_10018E868((uint64_t)v0);
  sub_1000D1698(&v2, (uint64_t)"T override::detail::SettingValueImpl::lexical_cast_visitor<double>::operator()(const F &) const [T = double, F = std::unordered_map<std::string, boost::variant<boost::detail::variant::recursive_flag<boost::none_t>, int, long long, std::string, double, std::vector<boost::recursive_variant_>, std::unordered_map<std::string, boost::recursive_variant_>>>]", (uint64_t)"../../../common/util/overridable_setting.h", 106, (uint64_t)v0);
}

void sub_1003687C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void sub_10036882C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x10036881CLL);
}

void sub_100368850(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_100368864(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  std::runtime_error v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

void sub_1003688A8()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100368920()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100368998()
{
}

void *sub_1003689C0(void *a1)
{
  *a1 = off_10046A030;
  std::runtime_error v2 = (std::__shared_weak_count *)a1[4];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *a1 = off_10046A0E0;
    uint64_t v3 = (std::__shared_weak_count *)a1[2];
    if (!v3) {
      return a1;
    }
  }
  else
  {
    *a1 = off_10046A0E0;
    uint64_t v3 = (std::__shared_weak_count *)a1[2];
    if (!v3) {
      return a1;
    }
  }
  if (atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return a1;
}

void sub_100368AE4()
{
}

void sub_100368B48(void *a1)
{
}

void sub_100368B54(_Unwind_Exception *a1)
{
}

void *sub_100368B68(void *a1)
{
  *a1 = off_100469F88;
  std::runtime_error v2 = (std::__shared_weak_count *)a1[252];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    uint64_t v3 = a1[250];
    a1[250] = 0;
    if (!v3) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v3 = a1[250];
  a1[250] = 0;
  if (v3) {
LABEL_4:
  }
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
LABEL_5:
  sub_100074A24(a1 + 10);
  unsigned int v4 = (std::__shared_weak_count *)a1[9];
  if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v4);
    uint64_t v5 = (std::__shared_weak_count *)a1[7];
    if (!v5) {
      return a1;
    }
  }
  else
  {
    uint64_t v5 = (std::__shared_weak_count *)a1[7];
    if (!v5) {
      return a1;
    }
  }
  if (atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
  std::__shared_weak_count::__release_weak(v5);
  return a1;
}

void sub_100368CE8(void *a1)
{
  sub_100368B68(a1);

  operator delete();
}

double sub_100368D20(uint64_t a1)
{
  if (sub_10035850C((double *)(a1 + 8)))
  {
    sub_1000AE4B0(v4, "");
    sub_100300974("Radio map tile must have finite bounds. Localizer doesn't know about floorplans.", &__p);
    sub_10016A2C4((uint64_t)v4, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v5 < 0) {
      operator delete(v4[0]);
    }
    sub_1000D11E0((uint64_t)&v3);
  }
  return *(double *)(a1 + 8);
}

void sub_100368DF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

double sub_100368E3C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + ++*(void *)(result + 8) = 0;
  char v5 = (void *)(a3 + 8);
  *(void *)a3 = off_10045DAB8;
  *(void *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 24) &= 0xFCu;
  if ((*(unsigned char *)(a1 + 1993) & 0x80) == 0)
  {
    sub_1000AE4B0(v10, "");
    sub_10015E644("Only production tiles are allowed.", &v13);
    sub_10016A2C4((uint64_t)v10, (uint64_t)&v13, 1);
    if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v13.__r_.__value_.__l.__data_);
    }
    if (v11 < 0) {
      operator delete(v10[0]);
    }
    sub_1000D11E0((uint64_t)v12);
  }
  sub_1000776C4(v9, a1 + 80);
  sub_100148A04((uint64_t)v9, &v13);
  sub_1001485B8((uint64_t)&v13, a2, (uint64_t)v10);
  sub_10007B704(a3, (uint64_t)v10);
  nullsub_15(v10);
  uint64_t v6 = v15;
  if (v15 && !atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  BOOL v7 = v14;
  if (v14 && !atomic_fetch_add(&v14->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
  nullsub_15(&v13);
  sub_100074A24(v9);
  double result = *(double *)(a3 + 16);
  if ((*v5 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
    || (*(void *)&result & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
    sub_1000AE4B0(v10, "");
    sub_10029A2BC("Latitude and longitude must be finite.", &v13);
    sub_10016A2C4((uint64_t)v10, (uint64_t)&v13, 1);
    if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v13.__r_.__value_.__l.__data_);
    }
    if (v11 < 0) {
      operator delete(v10[0]);
    }
    sub_1000D11E0((uint64_t)v12);
  }
  return result;
}

void sub_1003690E0(_Unwind_Exception *a1)
{
  if (*(char *)(v2 - 121) < 0)
  {
    operator delete(*(void **)(v2 - 144));
    nullsub_15(v1);
    _Unwind_Resume(a1);
  }
  nullsub_15(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100369194(uint64_t a1)
{
  return a1 + 80;
}

uint64_t sub_10036919C(uint64_t a1)
{
  return *(void *)(a1 + 2000);
}

void sub_1003691A4(char *a1@<X8>)
{
  a1[23] = 22;
}

double sub_1003691C8(uint64_t a1)
{
  return *(double *)(a1 + 40);
}

uint64_t sub_1003691D0(uint64_t a1)
{
  return a1 + 48;
}

uint64_t sub_1003691D8@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(result + 72);
  *a2 = *(void *)(result + 64);
  a2[1] = v2;
  if (v2) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v2 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

uint64_t sub_1003691F4(uint64_t a1)
{
  return a1 + 2008;
}

uint64_t sub_1003691FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 2024);
}

uint64_t sub_100369204(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 48) + 128))();
}

uint64_t sub_10036922C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 48) + 136))();
}

void sub_100369254(void *a1)
{
  *a1 = off_10046A030;
  uint64_t v2 = (std::__shared_weak_count *)a1[4];
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    *a1 = off_10046A0E0;
    uint64_t v3 = (std::__shared_weak_count *)a1[2];
    if (!v3) {
      goto LABEL_7;
    }
  }
  else
  {
    *a1 = off_10046A0E0;
    uint64_t v3 = (std::__shared_weak_count *)a1[2];
    if (!v3) {
      goto LABEL_7;
    }
  }
  if (!atomic_fetch_add(&v3->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
LABEL_7:

  operator delete();
}

uint64_t sub_100369388()
{
  return 0;
}

void sub_100369390()
{
  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x40uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003FE190;
  strcpy(v1.__r_.__value_.__l.__data_, "TODO(dtay): Where do particles generate if they are outdoors?");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_100453630;
  sub_10018E868((uint64_t)v0);
  sub_1000CC8F4(&v2, (uint64_t)"virtual UniversalRect2d StaticFloorEnvironment::OffMapFloorEnvironment::getBounds() const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/static_floor_environment.h", 20, (uint64_t)v0);
}

void sub_10036946C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void sub_1003694D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x1003694C4);
}

void sub_1003694F8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_10036950C()
{
  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x28uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003EE110;
  strcpy(v1.__r_.__value_.__l.__data_, "OffMap does not include surveyedArea");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_100453630;
  sub_10018E868((uint64_t)v0);
  sub_1000CC8F4(&v2, (uint64_t)"virtual double StaticFloorEnvironment::OffMapFloorEnvironment::surveyedArea() const", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/localize/static_floor_environment.h", 21, (uint64_t)v0);
}

void sub_1003695E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void sub_10036964C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x10036963CLL);
}

void sub_100369670(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100369684(uint64_t a1)
{
  return a1 + 8;
}

void sub_10036968C(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_100369694()
{
  return 0;
}

uint64_t sub_10036969C(uint64_t a1)
{
  return a1 + 24;
}

uint64_t sub_1003696A4(uint64_t a1)
{
  uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 56))(a1);

  return sub_100082814(v1);
}

uint64_t sub_1003696EC@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + ++*(void *)(result + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_10045DAB8;
  *(unsigned char *)(a1 + 24) &= 0xFCu;
  sub_100076484(a1, NAN);
  return sub_10007647C(a1, NAN);
}

void sub_100369758(_Unwind_Exception *a1)
{
  nullsub_15(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10036976C()
{
  return 0;
}

uint64_t sub_100369774()
{
  return 0;
}

void **sub_10036977C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result = (void **)sub_100085D38(a1 + 24);
  if (*((char *)result + 23) < 0)
  {
    char v5 = *result;
    unint64_t v6 = (unint64_t)result[1];
    return (void **)sub_1000559FC((unsigned char *)a2, v5, v6);
  }
  else
  {
    long long v4 = *(_OWORD *)result;
    *(void *)(a2 + 16) = result[2];
    *(_OWORD *)a2 = v4;
  }
  return result;
}

void sub_1003697E4(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_100369820(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "ZN22StaticFloorEnvironment22offmapFloorEnvironmentEvE3$_0") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"ZN22StaticFloorEnvironment22offmapFloorEnvironmentEvE3$_0" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN22StaticFloorEnvironment22offmapFloorEnvironmentEvE3$_0")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN22StaticFloorEnvironment22offmapFloorEnvironmentEvE3$_0" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_100369898()
{
}

uint64_t sub_1003698AC(uint64_t a1, double a2, double a3)
{
  v6[0] = off_10045DA98;
  char v7 = 0;
  *(double *)&v6[1] = a2;
  *(double *)&void v6[2] = a3;
  BOOL v3 = sub_1003584B8((double *)(a1 + 8), (uint64_t)v6);
  nullsub_17(v6);
  if (v3) {
    int v4 = 256;
  }
  else {
    int v4 = 0;
  }
  return v4 | v3;
}

void sub_100369920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100369934()
{
  __cxa_allocate_exception(0x40uLL);
  v1.__r_.__value_.__r.__words[0] = (std::string::size_type)operator new(0x20uLL);
  *(_OWORD *)&v1.__r_.__value_.__r.__words[1] = xmmword_1003E7220;
  strcpy(v1.__r_.__value_.__l.__data_, "Not implemented for base type.");
  std::runtime_error::runtime_error(&v2, &v1);
  v2.__vftable = (std::runtime_error_vtbl *)&off_100453630;
  sub_10018E868((uint64_t)v0);
  sub_1000CC8F4(&v2, (uint64_t)"virtual Index2d OccupancyGrid::gridIndex2d(double, double) const", (uint64_t)"../../../common/localize/occupancy_grid.h", 78, (uint64_t)v0);
}

void sub_100369A08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void sub_100369A70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
  {
    operator delete(__p);
    __cxa_free_exception(v17);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x100369A60);
}

void sub_100369A94(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

double sub_100369AA8(uint64_t a1)
{
  return *(double *)(a1 + 8);
}

void sub_100369AB4(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_100369ABC()
{
  return 0;
}

uint64_t sub_100369AC4(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  double v9 = a7;
  double v10 = a6;
  __int16 v14 = (*(uint64_t (**)(uint64_t, double, double))(*(void *)a1 + 16))(a1, a6, a7);
  if (v14)
  {
    int v18 = HIBYTE(v14);
  }
  else
  {
    double v15 = atan2(v9 - a5, v10 - a4) + 1.57079633;
    double v16 = (*(double (**)(double, double))(**(void **)a3 + 64))(0.0, 3.0);
    __double2 v17 = __sincos_stret(v15);
    double v10 = v10 + v16 * v17.__cosval;
    double v9 = v9 + v16 * v17.__sinval;
    __int16 v14 = (*(uint64_t (**)(uint64_t, double, double))(*(void *)a1 + 16))(a1, v10, v9);
    int v18 = HIBYTE(v14);
    if ((v14 & 1) == 0) {
      return v14 | (v18 << 8);
    }
  }
  *(double *)(a2 + 16) = v10;
  *(double *)(a2 + ++*(void *)(result + 24) = v9;
  return v14 | (v18 << 8);
}

void sub_100369BEC()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100369C64()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_100369CDC()
{
  qword_100492A98 = 0;
  unk_100492AA0 = 0;
  qword_100492A90 = (uint64_t)off_10046A030;
  sub_1000900D0(qword_100492AA8, "OffMap");

  return __cxa_atexit((void (*)(void *))sub_1003689C0, &qword_100492A90, (void *)&_mh_execute_header);
}

void sub_100369D60(_Unwind_Exception *exception_object)
{
  std::runtime_error v2 = v1;
  void *v2 = off_10046A0E0;
  int v4 = (std::__shared_weak_count *)v2[2];
  if (v4) {
    sub_1003A7804(v4);
  }
  _Unwind_Resume(exception_object);
}

void sub_100369E6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100369E94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100369FC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100369FEC(_Unwind_Exception *a1)
{
  std::runtime_error v2 = v1;

  _Unwind_Resume(a1);
}

void sub_10036A090(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10036A0A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);

    _Unwind_Resume(a1);
  }

  _Unwind_Resume(a1);
}

void sub_10036A23C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, id a12)
{
  sub_10036A2A0(&a9);
  _Unwind_Resume(a1);
}

void **sub_10036A2A0(void **a1)
{
  std::runtime_error v2 = (char *)*a1;
  if (*a1)
  {
    BOOL v3 = (char *)a1[1];
    int v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        char v5 = (void *)*((void *)v3 - 2);
        v3 -= 16;
      }
      while (v3 != v2);
      int v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_10036A3CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_10036A3E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10036A580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_10036A598(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_10036A5B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10036A5C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_10036A744(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10036A8B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10036A8C8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10036A8D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_10036AA94(void *a1, id *a2)
{
  uint64_t v3 = a1[1] - *a1;
  uint64_t v4 = v3 >> 3;
  unint64_t v5 = (v3 >> 3) + 1;
  if (v5 >> 61) {
    sub_1000A9108();
  }
  uint64_t v7 = a1[2] - *a1;
  if (v7 >> 2 > v5) {
    unint64_t v5 = v7 >> 2;
  }
  if ((unint64_t)v7 >= 0x7FFFFFFFFFFFFFF8) {
    unint64_t v8 = 0x1FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v8 = v5;
  }
  if (v8)
  {
    if (v8 >> 61) {
      sub_1000A6A10();
    }
    double v9 = (char *)operator new(8 * v8);
  }
  else
  {
    double v9 = 0;
  }
  double v10 = &v9[8 * v4];
  char v11 = &v9[8 * v8];
  *(void *)double v10 = *a2;
  int64_t v12 = v10 + 8;
  std::string v13 = (char *)*a1;
  __int16 v14 = (char *)a1[1];
  if (v14 == (char *)*a1)
  {
    *a1 = v10;
    a1[1] = v12;
    a1[2] = v11;
    if (!v14) {
      return v12;
    }
    goto LABEL_23;
  }
  unint64_t v15 = (unint64_t)&v14[-*a1 - 8];
  if (v15 < 0x78 || &v14[-(v15 & 0xFFFFFFFFFFFFFFF8) - 8] < v10 && &v9[v3 - (v15 & 0xFFFFFFFFFFFFFFF8) - 8] < v14) {
    goto LABEL_31;
  }
  uint64_t v16 = (v15 >> 3) + 1;
  uint64_t v17 = 8 * (v16 & 0x3FFFFFFFFFFFFFFCLL);
  v10 -= v17;
  int v18 = &v14[-v17];
  int v19 = v14 - 16;
  int v20 = &v9[8 * v4 - 16];
  uint64_t v21 = v16 & 0x3FFFFFFFFFFFFFFCLL;
  do
  {
    long long v23 = *((_OWORD *)v19 - 1);
    long long v22 = *(_OWORD *)v19;
    *((_OWORD *)v19 - 1) = 0uLL;
    *(_OWORD *)int v19 = 0uLL;
    *((_OWORD *)v20 - 1) = v23;
    *(_OWORD *)int v20 = v22;
    v19 -= 32;
    v20 -= 32;
    v21 -= 4;
  }
  while (v21);
  __int16 v14 = v18;
  if (v16 != (v16 & 0x3FFFFFFFFFFFFFFCLL))
  {
LABEL_31:
    do
    {
      uint64_t v24 = *((void *)v14 - 1);
      v14 -= 8;
      *(void *)__int16 v14 = 0;
      *((void *)v10 - 1) = v24;
      v10 -= 8;
    }
    while (v14 != v13);
  }
  int v25 = (char *)*a1;
  __int16 v14 = (char *)a1[1];
  *a1 = v10;
  a1[1] = v12;
  a1[2] = v11;
  if (v14 != v25)
  {
    do
    {
      int v26 = (void *)*((void *)v14 - 1);
      v14 -= 8;
    }
    while (v14 != v25);
    __int16 v14 = v25;
  }
  if (v14) {
LABEL_23:
  }
    operator delete(v14);
  return v12;
}

void sub_10036AC40()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10036ACB8()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10036AD30()
{
}

double sub_10036AD58@<D0>(uint64_t a1@<X0>, const void ***a2@<X1>, _OWORD *a3@<X8>)
{
  if (sub_1000706F4(a2, (unsigned __int8 ***)&qword_10047ED40))
  {
    sub_100368AE4();
  }
  sub_100070070(a1, (uint64_t ***)a2, (uint64_t)v7);
  double result = *(double *)&v8;
  *a3 = v8;
  return result;
}

void sub_10036ADE4(uint64_t a1@<X0>, const void ***a2@<X1>, uint64_t a3@<X8>)
{
  if (sub_1000706F4(a2, (unsigned __int8 ***)&qword_10047ED40)) {
    sub_100368AE4();
  }
  uint64_t v17 = 0;
  int v18 = 0;
  unint64_t v6 = sub_100070270((void *)(a1 + 40), (uint64_t ***)a2);
  uint64_t v7 = v6;
  if (v6)
  {
    long long v8 = (std::__shared_weak_count *)v6[5];
    if (v8 && (double v9 = std::__shared_weak_count::lock(v8)) != 0)
    {
      double v10 = v9;
      char v11 = v7[4];
      uint64_t v17 = v11;
      int v18 = v10;
      if (v11)
      {
        uint64_t v12 = (*((uint64_t (**)(const void **))*v11 + 7))(v11);
        sub_1000776C4(a3, v12);
LABEL_14:
        if (!atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
        return;
      }
    }
    else
    {
      uint64_t v17 = 0;
      int v18 = 0;
    }
  }
  sub_100076AC4((uint64_t)&v16);
  (*(void (**)(uint64_t *__return_ptr))(**(void **)(a1 + 8) + 120))(&v14);
  sub_100074A28(&v14, a3);
  std::string v13 = v15;
  if (v15 && !atomic_fetch_add(&v15->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
    std::__shared_weak_count::__release_weak(v13);
  }
  sub_100074A24(&v16);
  double v10 = v18;
  if (v18) {
    goto LABEL_14;
  }
}

void sub_10036B020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_1000BA884((uint64_t)&a9);
  sub_100074A24(&a11);
  sub_1000BA884(v11 - 64);
  _Unwind_Resume(a1);
}

void sub_10036B04C(_Unwind_Exception *a1)
{
  sub_1000BA884(v1 - 64);
  _Unwind_Resume(a1);
}

void sub_10036B064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_1000BA884((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10036B078(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)(a1 + 8) + 96))();
}

void sub_10036B0A4(void *a1)
{
  sub_10036B10C(a1);

  operator delete();
}

void sub_10036B0DC(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

void *sub_10036B10C(void *a1)
{
  *a1 = off_10046A218;
  std::runtime_error v2 = (void *)a1[7];
  while (v2)
  {
    uint64_t v3 = v2;
    std::runtime_error v2 = (void *)*v2;
    uint64_t v4 = (std::__shared_weak_count *)v3[5];
    if (v4) {
      std::__shared_weak_count::__release_weak(v4);
    }
    unint64_t v5 = (std::__shared_weak_count *)v3[3];
    if (v5 && !atomic_fetch_add(&v5->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
    operator delete(v3);
  }
  unint64_t v6 = (void *)a1[5];
  a1[5] = 0;
  if (v6) {
    operator delete(v6);
  }
  uint64_t v7 = (std::__shared_weak_count *)a1[4];
  if (v7 && !atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
    long long v8 = (std::__shared_weak_count *)a1[2];
    if (!v8) {
      return a1;
    }
  }
  else
  {
    long long v8 = (std::__shared_weak_count *)a1[2];
    if (!v8) {
      return a1;
    }
  }
  if (atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
  std::__shared_weak_count::__release_weak(v8);
  return a1;
}

void sub_10036B298(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10046A2C8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10036B2B8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10046A2C8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10036B30C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_10036B338(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10036B370(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t sub_10036B3A0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteI15OnDiskRadioMapsEE") {
    return a1 + 24;
  }
  if (((v3 & (unint64_t)"NSt3__114default_deleteI15OnDiskRadioMapsEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteI15OnDiskRadioMapsEE")) {
    return 0;
  }
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteI15OnDiskRadioMapsEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24; {
  return 0;
  }
}

void sub_10036B414(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10046A368;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10036B434(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10046A368;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10036B488(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_10036B4B0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10046A3B8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_10036B4D0(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10046A3B8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10036B524(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

uint64_t sub_10036B54C(uint64_t a1)
{
  std::runtime_error v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16))
    {
      unint64_t v3 = (std::__shared_weak_count *)v2[5];
      if (v3) {
        std::__shared_weak_count::__release_weak(v3);
      }
      uint64_t v4 = (std::__shared_weak_count *)v2[3];
      if (v4 && !atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
    operator delete(v2);
  }
  return a1;
}

char *sub_10036B5E8(char **a1, uint64_t a2)
{
  uint64_t v3 = (a1[1] - *a1) >> 4;
  unint64_t v4 = v3 + 1;
  if ((unint64_t)(v3 + 1) >> 60) {
    sub_1000A9108();
  }
  uint64_t v5 = a1[2] - *a1;
  if (v5 >> 3 > v4) {
    unint64_t v4 = v5 >> 3;
  }
  BOOL v6 = (unint64_t)v5 >= 0x7FFFFFFFFFFFFFF0;
  unint64_t v7 = 0xFFFFFFFFFFFFFFFLL;
  if (!v6) {
    unint64_t v7 = v4;
  }
  if (v7 >> 60) {
    sub_1000A6A10();
  }
  uint64_t v9 = 16 * v7;
  double v10 = (char *)operator new(16 * v7);
  uint64_t v11 = &v10[16 * v3];
  *(_OWORD *)uint64_t v11 = *(_OWORD *)a2;
  uint64_t v12 = v11 + 16;
  std::string v13 = &v10[v9];
  *(void *)a2 = 0;
  *(void *)(a2 + ++*(void *)(result + 8) = 0;
  uint64_t v14 = *a1;
  unint64_t v15 = a1[1];
  if (v15 == *a1)
  {
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v13;
    if (!v15) {
      return v12;
    }
    goto LABEL_17;
  }
  do
  {
    long long v16 = *((_OWORD *)v15 - 1);
    v15 -= 16;
    *((_OWORD *)v11 - 1) = v16;
    v11 -= 16;
    *(void *)unint64_t v15 = 0;
    *((void *)v15 + 1) = 0;
  }
  while (v15 != v14);
  uint64_t v17 = *a1;
  unint64_t v15 = a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v13;
  if (v15 != v17)
  {
    do
    {
      int v18 = (std::__shared_weak_count *)*((void *)v15 - 1);
      if (v18 && !atomic_fetch_add(&v18->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
      {
        ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
        std::__shared_weak_count::__release_weak(v18);
      }
      v15 -= 16;
    }
    while (v15 != v17);
    unint64_t v15 = v17;
  }
  if (v15) {
LABEL_17:
  }
    operator delete(v15);
  return v12;
}

void sub_10036B744()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10036B7BC()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10036B834(void *a1, int a2)
{
  if (qword_10047BED8 == -1)
  {
    unint64_t v4 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  dispatch_once(&qword_10047BED8, &stru_10046A488);
  unint64_t v4 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG))
  {
LABEL_3:
    *(_DWORD *)uint64_t buf = 134218240;
    *(void *)&uint8_t buf[4] = a1;
    __int16 v14 = 1024;
    __p[0] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "Stopping sensor collection %p %d", buf, 0x12u);
  }
LABEL_4:
  sub_100023D08(a2, (uint64_t)buf);
  if ((*(uint64_t (**)(void *, unsigned char *))(*a1 + 40))(a1, buf)) {
    goto LABEL_8;
  }
  if (qword_10047BED8 == -1)
  {
    uint64_t v5 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  dispatch_once(&qword_10047BED8, &stru_10046A488);
  uint64_t v5 = qword_10047BEE0;
  if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO))
  {
LABEL_7:
    uint64_t v6 = (uint64_t)(a1[4] - a1[3]) >> 3;
    v10[0] = 67109376;
    v10[1] = a2;
    __int16 v11 = 2048;
    uint64_t v12 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "WARNING: Attempt to stop control group %d but no matching sensors found (%zu sensors available)", (uint8_t *)v10, 0x12u);
  }
LABEL_8:
  unint64_t v7 = *(void **)((char *)__p + 2);
  if (*(void *)((char *)__p + 2))
  {
    do
    {
      long long v8 = (void *)*v7;
      operator delete(v7);
      unint64_t v7 = v8;
    }
    while (v8);
  }
  uint64_t v9 = *(void **)buf;
  *(void *)uint64_t buf = 0;
  if (v9) {
    operator delete(v9);
  }
}

void sub_10036BA30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_100258574((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10036BA48(void *a1, void *a2)
{
  unint64_t v4 = (void *)a1[3];
  uint64_t v5 = (void *)a1[4];
  if (v4 == v5)
  {
    char v6 = 0;
  }
  else
  {
    char v6 = 0;
    do
    {
      uint64_t v7 = *v4;
      int v8 = (*(uint64_t (**)(void))(*(void *)*v4 + 48))(*v4);
      unint64_t v9 = a2[1];
      if (v9)
      {
        uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
        v10.i16[0] = vaddlv_u8(v10);
        if (v10.u32[0] > 1uLL)
        {
          unint64_t v11 = v8;
          if (v9 <= v8) {
            unint64_t v11 = v8 % v9;
          }
        }
        else
        {
          unint64_t v11 = (v9 - 1) & v8;
        }
        uint64_t v12 = *(uint64_t ***)(*a2 + 8 * v11);
        if (v12)
        {
          std::string v13 = *v12;
          if (v13)
          {
            if (v10.u32[0] < 2uLL)
            {
              unint64_t v14 = v9 - 1;
              while (1)
              {
                uint64_t v16 = v13[1];
                if (v16 == v8)
                {
                  if (*((_DWORD *)v13 + 4) == v8) {
                    goto LABEL_3;
                  }
                }
                else if ((v16 & v14) != v11)
                {
                  goto LABEL_4;
                }
                std::string v13 = (uint64_t *)*v13;
                if (!v13) {
                  goto LABEL_4;
                }
              }
            }
            do
            {
              unint64_t v15 = v13[1];
              if (v15 == v8)
              {
                if (*((_DWORD *)v13 + 4) == v8)
                {
LABEL_3:
                  (*(void (**)(uint64_t))(*(void *)v7 + 32))(v7);
                  char v6 = 1;
                  break;
                }
              }
              else
              {
                if (v15 >= v9) {
                  v15 %= v9;
                }
                if (v15 != v11) {
                  break;
                }
              }
              std::string v13 = (uint64_t *)*v13;
            }
            while (v13);
          }
        }
      }
LABEL_4:
      ++v4;
    }
    while (v4 != v5);
  }
  uint64_t v17 = (int *)a2[2];
  if (v17)
  {
    int v18 = a1 + 6;
    do
    {
      sub_10036BE98(v18, v17 + 4);
      uint64_t v17 = *(int **)v17;
    }
    while (v17);
  }
  return v6 & 1;
}

uint64_t sub_10036BBF0(uint64_t a1)
{
  return a1 + 48;
}

void sub_10036BBF8(uint64_t a1, void *a2)
{
  std::runtime_error v2 = *(uint64_t **)(a1 + 24);
  uint64_t v3 = *(uint64_t **)(a1 + 32);
  while (v2 != v3)
  {
    uint64_t v5 = *v2++;
    sub_10036DB88(v5, a2);
  }
}

uint64_t sub_10036BC40(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(a1 + 24);
  std::runtime_error v2 = *(uint64_t **)(a1 + 32);
  if (v1 == v2) {
    return 0;
  }
  int v3 = 0;
  LODWORD(v4) = 0;
  do
  {
    uint64_t v5 = *v1++;
    uint64_t v4 = v4 + sub_10036DCF0(v5);
    v3 += v6;
  }
  while (v1 != v2);
  return v4;
}

void *sub_10036BCB8(void *a1)
{
  *a1 = off_10046A408;
  std::runtime_error v2 = (void *)a1[8];
  if (v2)
  {
    do
    {
      int v3 = (void *)*v2;
      operator delete(v2);
      std::runtime_error v2 = v3;
    }
    while (v3);
  }
  uint64_t v4 = (void *)a1[6];
  a1[6] = 0;
  if (v4) {
    operator delete(v4);
  }
  uint64_t v5 = (void *)a1[3];
  if (v5)
  {
    a1[4] = v5;
    operator delete(v5);
  }
  int v6 = (std::__shared_weak_count *)a1[2];
  if (!v6 || atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  return a1;
}

void sub_10036BD88(void *a1)
{
  *a1 = off_10046A408;
  std::runtime_error v2 = (void *)a1[8];
  if (v2)
  {
    do
    {
      int v3 = (void *)*v2;
      operator delete(v2);
      std::runtime_error v2 = v3;
    }
    while (v3);
  }
  uint64_t v4 = (void *)a1[6];
  a1[6] = 0;
  if (v4) {
    operator delete(v4);
  }
  uint64_t v5 = (void *)a1[3];
  if (v5)
  {
    a1[4] = v5;
    operator delete(v5);
  }
  int v6 = (std::__shared_weak_count *)a1[2];
  if (v6 && !atomic_fetch_add(&v6->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }

  operator delete();
}

void sub_10036BE68(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

uint64_t sub_10036BE98(void *a1, int *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = *a2;
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    unint64_t v5 = *a2;
    if (*(void *)&v2 <= v3) {
      unint64_t v5 = v3 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v5 = (*(void *)&v2 - 1) & v3;
  }
  int v6 = *(uint64_t ***)(*a1 + 8 * v5);
  if (!v6) {
    return 0;
  }
  uint64_t v7 = *v6;
  if (!*v6) {
    return 0;
  }
  if (v4.u32[0] < 2uLL)
  {
    uint64_t v8 = *(void *)&v2 - 1;
    while (1)
    {
      uint64_t v10 = v7[1];
      if (v10 == v3)
      {
        if (*((_DWORD *)v7 + 4) == v3) {
          goto LABEL_22;
        }
      }
      else if ((v10 & v8) != v5)
      {
        return 0;
      }
      uint64_t v7 = (uint64_t *)*v7;
      if (!v7) {
        return 0;
      }
    }
  }
  while (1)
  {
    unint64_t v9 = v7[1];
    if (v9 == v3) {
      break;
    }
    if (v9 >= *(void *)&v2) {
      v9 %= *(void *)&v2;
    }
    if (v9 != v5) {
      return 0;
    }
LABEL_11:
    uint64_t v7 = (uint64_t *)*v7;
    if (!v7) {
      return 0;
    }
  }
  if (*((_DWORD *)v7 + 4) != v3) {
    goto LABEL_11;
  }
LABEL_22:
  sub_1000A9E44(a1, v7, (uint64_t)&__p);
  uint64_t v12 = __p;
  std::string __p = 0;
  if (v12) {
    operator delete(v12);
  }
  return 1;
}

void sub_10036BFB0()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10036C028()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_10036C0A0(uint64_t result, _DWORD *a2, uint64_t a3, int a4, char a5, char a6, int a7, uint64_t a8, double a9, double a10)
{
  uint64_t v10 = (void *)(result + 8);
  unint64_t v11 = a2 + 2;
  if (*a2 == (int)*a2 >> 31)
  {
    *uint64_t v10 = *v11;
    *(_DWORD *)uint64_t result = 0;
    *(double *)(result + 32) = a9;
    *(unsigned char *)(result + 40) = 0;
    if (!*(unsigned char *)a3) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  long long v12 = *(_OWORD *)v11;
  *(_DWORD *)(result + ++*(void *)(result + 24) = a2[6];
  *(_OWORD *)uint64_t v10 = v12;
  *(_DWORD *)uint64_t result = *a2 ^ ((int)*a2 >> 31);
  *(double *)(result + 32) = a9;
  *(unsigned char *)(result + 40) = 0;
  if (*(unsigned char *)a3)
  {
LABEL_5:
    *(_DWORD *)(result + 44) = *(_DWORD *)(a3 + 4);
    *(unsigned char *)(result + 40) = 1;
  }
LABEL_6:
  *(unsigned char *)(result + 4++*(void *)(result + 8) = a5;
  *(unsigned char *)(result + 49) = a6;
  *(void *)(result + 56) = a8;
  *(_DWORD *)(result + 64) = a7;
  *(double *)(result + 72) = a10;
  *(_DWORD *)(result + 80) = a4;
  return result;
}

uint64_t sub_10036C138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)(a4 + ++*(void *)(result + 24) = 0;
  *(void *)a4 = off_10045DC28;
  *(void *)(a4 + ++*(void *)(result + 8) = 0;
  *(void *)(a4 + 16) = a4 + 24;
  uint64_t v7 = (uint64_t **)(a4 + 16);
  uint64_t v8 = (std::string *)(a4 + 40);
  *(void *)(a4 + 96) = 0;
  uint64_t v9 = a4 + 96;
  *(_DWORD *)(a4 + 140) = 0;
  *(void *)(a4 + 32) = 0;
  *(void *)(a4 + 40) = off_10045DC08;
  *(void *)(a4 + 4++*(void *)(result + 8) = 0;
  *(void *)(a4 + 54) = 0;
  *(void *)(a4 + 72) = 0;
  *(void *)(a4 + 80) = 0;
  *(void *)(a4 + 64) = 0;
  *(_WORD *)(a4 + 8++*(void *)(result + 8) = 0;
  *(void *)(a4 + 104) = 0;
  *(void *)(a4 + 112) = 0;
  *(unsigned char *)(a4 + 120) = 0;
  *(void *)(a4 + 12++*(void *)(result + 8) = 0;
  *(_DWORD *)(a4 + 135) = 0;
  *(unsigned char *)(a4 + 144) &= 0x80u;
  *(unsigned char *)(a4 + 152) &= 0xF8u;
  sub_100041B18(a4, a1);
  char v10 = *(unsigned char *)(a4 + 152) | 2;
  *(unsigned char *)(a4 + 152) = v10;
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  if (*a3 != v12)
  {
    do
    {
      long long v17 = (unint64_t)off_10045DBE8;
      LODWORD(v1++*(void *)(result + 8) = 0;
      BYTE4(v1++*(void *)(result + 8) = 0;
      uint64_t v19 = 0;
      char v20 = 0;
      int v21 = 0;
      v22 &= 0xC0u;
      sub_100076484((uint64_t)&v17, *(double *)(v11 + 32));
      sub_1001AC928((uint64_t)&v17, *(_DWORD *)(v11 + 80));
      sub_1000A093C((uint64_t)&v17, *(unsigned char *)(v11 + 48) == 0);
      sub_100041EB0((uint64_t)&v17, *(void *)(v11 + 56));
      sub_1001AC930((uint64_t)&v17, *(unsigned char *)(v11 + 49) == 1);
      sub_1001AC938((uint64_t)&v17, *(_DWORD *)(v11 + 44));
      sub_1001EF930((int *)v11, (uint64_t)__p);
      sub_10036CD08(v7, (const void **)__p, (uint64_t)__p, (uint64_t)&v17);
      if (v16 < 0) {
        operator delete(__p[0]);
      }
      nullsub_97(&v17);
      v11 += 88;
    }
    while (v11 != v12);
    char v10 = *(unsigned char *)(a4 + 152);
  }
  *(unsigned char *)(a4 + 152) = v10 | 4;
  sub_100041B18((uint64_t)v8, *(void *)(a2 + 32));
  if (*(unsigned char *)(a2 + 48)) {
    sub_1001AD37C((uint64_t)v8, *(_DWORD *)(a2 + 52));
  }
  sub_1000A093C((uint64_t)v8, *(_DWORD *)(a2 + 56) == 0);
  sub_1001AD390((uint64_t)v8, *(_DWORD *)(a2 + 60) == 1);
  if (*(unsigned char *)a2) {
    sub_1001AD398(v8, (const std::string *)(a2 + 8));
  }
  *(_WORD *)(a4 + 8++*(void *)(result + 8) = *(void *)(a2 + 40);
  sub_100357BE8((uint64_t *)a2, &v17);
  std::string v13 = *(void **)v9;
  if (*(void *)v9)
  {
    *(void *)(a4 + 104) = v13;
    operator delete(v13);
    *(void *)uint64_t v9 = 0;
    *(void *)(v9 + ++*(void *)(result + 8) = 0;
    *(void *)(v9 + 16) = 0;
  }
  *(_OWORD *)(a4 + 96) = v17;
  *(void *)(a4 + 112) = v18;
  sub_1001AD3CC((uint64_t)v8, *(_DWORD *)(a2 + 88) == 0);
  sub_1001AD3D4((uint64_t)v8, *(double *)(a2 + 96));
  return sub_1001AD3E8((uint64_t)v8, *(_DWORD *)(a2 + 104) != 2);
}

void sub_10036C3FC(_Unwind_Exception *a1)
{
  sub_1001AE958(v1);
  _Unwind_Resume(a1);
}

void sub_10036C418(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0)
  {
    operator delete(__p);
    nullsub_97(&a16);
    sub_1001AE958(v16);
    _Unwind_Resume(a1);
  }
  nullsub_97(&a16);
  sub_1001AE958(v16);
  _Unwind_Resume(a1);
}

void sub_10036C47C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v39 = a1;
  sub_100011394((void *)a4);
  *(_DWORD *)(a4 + 60) |= 1u;
  uint64_t v7 = *(void *)(a4 + 40);
  if (!v7) {
    operator new();
  }
  uint64_t v8 = sub_100048550();
  *(_DWORD *)(v7 + 52) |= 8u;
  *(void *)(v7 + 40) = v8;
  *(_DWORD *)(a4 + 60) |= 1u;
  uint64_t v9 = *(void *)(a4 + 40);
  if (!v9) {
    operator new();
  }
  double v10 = sub_100016C70();
  *(_DWORD *)(v9 + 52) |= 2u;
  *(double *)(v9 + ++*(void *)(result + 24) = v10;
  *(_DWORD *)(a4 + 60) |= 1u;
  uint64_t v11 = *(void *)(a4 + 40);
  if (!v11) {
    operator new();
  }
  double v12 = sub_100016BAC();
  *(_DWORD *)(v11 + 52) |= 4u;
  *(double *)(v11 + 32) = v12;
  *(_DWORD *)(a4 + 60) |= 1u;
  uint64_t v13 = *(void *)(a4 + 40);
  if (!v13) {
    operator new();
  }
  CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
  *(_DWORD *)(v13 + 52) |= 1u;
  *(CFAbsoluteTime *)(v13 + 16) = Current;
  *(_DWORD *)(a4 + 60) |= 2u;
  uint64_t v15 = *(void *)(a4 + 48);
  if (!v15) {
    operator new();
  }
  *(_DWORD *)(v15 + 76) |= 4u;
  uint64_t v16 = *(void *)(v15 + 32);
  if (!v16) {
    operator new();
  }
  *(_DWORD *)(v16 + 60) |= 1u;
  uint64_t v17 = *(void *)(v16 + 16);
  if (!v17) {
    operator new();
  }
  double v18 = sub_100190580(&v39);
  *(_DWORD *)(v17 + 44) |= 2u;
  *(double *)(v17 + ++*(void *)(result + 24) = v18;
  if (*(unsigned char *)(a2 + 48) && *(_DWORD *)(a2 + 52)) {
    int v19 = 5;
  }
  else {
    int v19 = 4;
  }
  int v20 = *(_DWORD *)(v16 + 60);
  *(_DWORD *)(v16 + 2++*(void *)(result + 8) = v19;
  *(_DWORD *)(v16 + 60) = v20 | 0x44;
  uint64_t v21 = *(void *)(v16 + 40);
  if (!v21) {
    operator new();
  }
  uint64_t v38 = a2;
  uint64_t v22 = a3[1];
  if (*a3 != v22)
  {
    uint64_t v23 = *a3 + 8;
    do
    {
      int v24 = *(_DWORD *)(v21 + 36);
      uint64_t v25 = *(int *)(v21 + 32);
      if ((int)v25 >= v24)
      {
        if (v24 == *(_DWORD *)(v21 + 40))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(v21 + 24), v24 + 1);
          int v24 = *(_DWORD *)(v21 + 36);
        }
        *(_DWORD *)(v21 + 36) = v24 + 1;
        operator new();
      }
      uint64_t v26 = *(void *)(v21 + 24);
      *(_DWORD *)(v21 + 32) = v25 + 1;
      uint64_t v27 = *(void *)(v26 + 8 * v25);
      uint64_t v28 = v23 - 8;
      unint64_t v41 = &v40;
      if (*(_DWORD *)(v23 - 8) != *(int *)(v23 - 8) >> 31) {
        sub_1001E7354();
      }
      uint64_t v29 = *(void *)v23;
      *(_DWORD *)(v27 + 64) |= 1u;
      *(void *)(v27 + 16) = v29;
      LODWORD(v41) = *(_DWORD *)(v23 + 56);
      int v30 = sub_100357804((unsigned int *)&v41);
      int v31 = *(_DWORD *)(v27 + 64);
      *(_DWORD *)(v27 + 36) = v30;
      float v32 = *(double *)(v23 + 64);
      *(_DWORD *)(v27 + 64) = v31 | 0x28;
      *(float *)(v27 + 44) = v32;
      int v33 = sub_10016646C(*(_DWORD *)(v23 + 72));
      int v34 = *(_DWORD *)(v27 + 64);
      *(_DWORD *)(v27 + 40) = v33;
      *(_DWORD *)(v27 + 32) = (int)*(double *)(v23 + 24);
      BOOL v35 = *(unsigned char *)(v23 + 41) == 1;
      *(_DWORD *)(v27 + 64) = v34 | 0x54;
      *(unsigned char *)(v27 + 4++*(void *)(result + 8) = v35;
      v23 += 88;
    }
    while (v28 + 88 != v22);
  }
  *(_DWORD *)(v21 + 52) |= 1u;
  uint64_t v36 = *(void *)(v21 + 16);
  if (!v36) {
    operator new();
  }
  unint64_t v41 = *(char **)(v38 + 32);
  double v37 = sub_100190580(&v41);
  *(_DWORD *)(v36 + 44) |= 2u;
  *(double *)(v36 + ++*(void *)(result + 24) = v37;
}

void sub_10036C91C()
{
}

void sub_10036CA78(_Unwind_Exception *a1)
{
  sub_1000243FC(v1);
  _Unwind_Resume(a1);
}

void sub_10036CA8C(_Unwind_Exception *a1)
{
  sub_1000243FC(v1);
  _Unwind_Resume(a1);
}

void sub_10036CAA0(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + ++*(void *)(result + 8) = 0;
  *(void *)(a2 + 16) = 0;
  sub_100347054(a2, a1[2]);
  int v6 = (void *)*a1;
  uint8x8_t v4 = a1 + 1;
  unint64_t v5 = v6;
  if (v6 != v4)
  {
    do
    {
      v32[0] = 0;
      if ((v5[12] & 0x20) != 0)
      {
        int v7 = *((_DWORD *)v5 + 23);
        v32[0] = 1;
        int v33 = v7;
      }
      char v31 = *((unsigned char *)v5 + 76) ^ 1;
      double v8 = *((double *)v5 + 8);
      char v30 = *((unsigned char *)v5 + 88);
      if (v8 < 0.0)
      {
        sub_10036083C((const char *)v5 + 32, &v34);
        uint64_t v9 = v5[10];
        uint64_t v29 = v9;
        double v10 = (int *)(v5 + 9);
        unint64_t v11 = *(void *)(a2 + 8);
        if (v11 >= *(void *)(a2 + 16))
        {
          int v20 = sub_10036CEBC((void **)a2, (uint64_t)&v34, v5 + 8, v32, v10, &v31, &v30, &v29);
        }
        else
        {
          int v12 = v34;
          if (v34 >> 31 != v34)
          {
            uint64_t v38 = v36;
            int v39 = v37;
            int v12 = v34 >> 31;
          }
          int v13 = v12 ^ v34;
          int v14 = (v12 ^ v34) >> 31;
          int v15 = v13;
          if (v14 != v13)
          {
            uint64_t v40 = v38;
            int v41 = v39;
            int v15 = v13 >> 31;
          }
          uint64_t v16 = v5[8];
          int v17 = *v10;
          int v18 = v15 ^ v13;
          int v19 = v18 >> 31;
          if (v18 >> 31 == v18)
          {
            *(void *)(v11 + ++*(void *)(result + 8) = v35;
            int v19 = v18;
          }
          else
          {
            uint64_t v21 = v40;
            *(void *)(v11 + ++*(void *)(result + 8) = v35;
            *(void *)(v11 + 16) = v21;
            *(_DWORD *)(v11 + ++*(void *)(result + 24) = v41;
          }
          int v22 = v32[0];
          int v23 = v33;
          char v24 = v31;
          char v25 = v30;
          *(_DWORD *)unint64_t v11 = v19 ^ v18;
          *(void *)(v11 + 32) = v16;
          *(unsigned char *)(v11 + 40) = 0;
          if (v22)
          {
            *(_DWORD *)(v11 + 44) = v23;
            *(unsigned char *)(v11 + 40) = 1;
          }
          *(unsigned char *)(v11 + 4++*(void *)(result + 8) = v24;
          *(unsigned char *)(v11 + 49) = v25;
          *(void *)(v11 + 56) = v9;
          *(_DWORD *)(v11 + 64) = 0;
          *(void *)(v11 + 72) = 0;
          int v20 = (char *)(v11 + 88);
          *(_DWORD *)(v11 + 80) = v17;
        }
        *(void *)(a2 + ++*(void *)(result + 8) = v20;
      }
      uint64_t v26 = (void *)v5[1];
      if (v26)
      {
        do
        {
          uint64_t v27 = v26;
          uint64_t v26 = (void *)*v26;
        }
        while (v26);
      }
      else
      {
        do
        {
          uint64_t v27 = (void *)v5[2];
          BOOL v28 = *v27 == (void)v5;
          unint64_t v5 = v27;
        }
        while (!v28);
      }
      unint64_t v5 = v27;
    }
    while (v27 != v4);
  }
}

void sub_10036CCCC(_Unwind_Exception *a1)
{
  sub_1002B083C(v1);
  _Unwind_Resume(a1);
}

void sub_10036CCE0(_Unwind_Exception *a1)
{
  sub_1002B083C(v1);
  _Unwind_Resume(a1);
}

void sub_10036CCF4(_Unwind_Exception *a1)
{
  sub_1002B083C(v1);
  _Unwind_Resume(a1);
}

uint64_t **sub_10036CD08(uint64_t **a1, const void **a2, uint64_t a3, uint64_t a4)
{
  double v8 = a1 + 1;
  int v7 = a1[1];
  if (v7)
  {
    int v9 = *((char *)a2 + 23);
    if (v9 >= 0) {
      size_t v10 = *((unsigned __int8 *)a2 + 23);
    }
    else {
      size_t v10 = (size_t)a2[1];
    }
    if (v9 >= 0) {
      unint64_t v11 = a2;
    }
    else {
      unint64_t v11 = *a2;
    }
    while (1)
    {
      while (1)
      {
        int v12 = (uint64_t **)v7;
        int v15 = (const void *)v7[4];
        int v13 = v7 + 4;
        int v14 = v15;
        int v16 = *((char *)v13 + 23);
        if (v16 >= 0) {
          size_t v17 = *((unsigned __int8 *)v13 + 23);
        }
        else {
          size_t v17 = v13[1];
        }
        if (v16 >= 0) {
          int v18 = v13;
        }
        else {
          int v18 = v14;
        }
        if (v17 >= v10) {
          size_t v19 = v10;
        }
        else {
          size_t v19 = v17;
        }
        int v20 = memcmp(v11, v18, v19);
        BOOL v21 = v10 < v17;
        if (v20) {
          BOOL v21 = v20 < 0;
        }
        if (!v21) {
          break;
        }
        int v7 = *v12;
        double v8 = v12;
        if (!*v12) {
          goto LABEL_27;
        }
      }
      int v22 = memcmp(v18, v11, v19);
      BOOL v23 = v17 < v10;
      if (v22) {
        BOOL v23 = v22 < 0;
      }
      if (!v23) {
        return v12;
      }
      int v7 = v12[1];
      if (!v7)
      {
        double v8 = v12 + 1;
        goto LABEL_27;
      }
    }
  }
  else
  {
    int v12 = a1 + 1;
LABEL_27:
    char v24 = operator new(0x68uLL);
    _OWORD v24[2] = *(_OWORD *)a3;
    *((void *)v24 + 6) = *(void *)(a3 + 16);
    *(void *)a3 = 0;
    *(void *)(a3 + ++*(void *)(result + 8) = 0;
    *(void *)(a3 + 16) = 0;
    sub_1001AD228((uint64_t)v24 + 56, a4);
    *(void *)char v24 = 0;
    *((void *)v24 + 1) = 0;
    *((void *)v24 + 2) = v12;
    *double v8 = (uint64_t *)v24;
    char v25 = (uint64_t *)**a1;
    uint64_t v26 = (uint64_t *)v24;
    if (v25)
    {
      *a1 = v25;
      uint64_t v26 = *v8;
    }
    sub_1000619B8(a1[1], v26);
    a1[2] = (uint64_t *)((char *)a1[2] + 1);
  }
  return (uint64_t **)v24;
}

void sub_10036CE98(_Unwind_Exception *a1)
{
  if (v1[55] < 0) {
    operator delete(*v2);
  }
  operator delete(v1);
  _Unwind_Resume(a1);
}

char *sub_10036CEBC(void **a1, uint64_t a2, void *a3, unsigned __int8 *a4, int *a5, char *a6, char *a7, uint64_t *a8)
{
  size_t v10 = (char *)*a1;
  int v9 = (char *)a1[1];
  uint64_t v11 = 0x2E8BA2E8BA2E8BA3 * ((v9 - (unsigned char *)*a1) >> 3);
  unint64_t v12 = v11 + 1;
  if ((unint64_t)(v11 + 1) > 0x2E8BA2E8BA2E8BALL) {
    sub_1000A9108();
  }
  if (0x5D1745D1745D1746 * (((unsigned char *)a1[2] - v10) >> 3) > v12) {
    unint64_t v12 = 0x5D1745D1745D1746 * (((unsigned char *)a1[2] - v10) >> 3);
  }
  if ((unint64_t)(0x2E8BA2E8BA2E8BA3 * (((unsigned char *)a1[2] - v10) >> 3)) >= 0x1745D1745D1745DLL) {
    unint64_t v12 = 0x2E8BA2E8BA2E8BALL;
  }
  unint64_t v53 = v12;
  if (v12)
  {
    unint64_t v52 = a3;
    if (v12 > 0x2E8BA2E8BA2E8BALL) {
      sub_1000A6A10();
    }
    size_t v19 = operator new(88 * v12);
    a3 = v52;
    int v20 = *(_DWORD *)a2;
    int v21 = *(int *)a2 >> 31;
    int v22 = *(_DWORD *)a2;
    if (v21 != *(_DWORD *)a2) {
      goto LABEL_9;
    }
  }
  else
  {
    size_t v19 = 0;
    int v20 = *(_DWORD *)a2;
    int v21 = *(int *)a2 >> 31;
    int v22 = *(_DWORD *)a2;
    if (v21 != *(_DWORD *)a2)
    {
LABEL_9:
      uint64_t v54 = *(void *)(a2 + 16);
      int v55 = *(_DWORD *)(a2 + 24);
      int v22 = v21;
    }
  }
  BOOL v23 = (char *)&v19[22 * v11];
  int v24 = v22 ^ v20;
  int v25 = v24;
  if (v24 >> 31 != v24)
  {
    uint64_t v56 = v54;
    int v57 = v55;
    int v25 = v24 >> 31;
  }
  uint64_t v26 = *a3;
  int v27 = *a4;
  int v28 = v25 ^ v24;
  int v29 = (v25 ^ v24) >> 31;
  *((void *)v23 + 1) = *(void *)(a2 + 8);
  if (v29 == (v25 ^ v24))
  {
    int v29 = v25 ^ v24;
  }
  else
  {
    *((void *)v23 + 2) = v56;
    *((_DWORD *)v23 + 6) = v57;
  }
  int v30 = *((_DWORD *)a4 + 1);
  int v31 = *a5;
  char v32 = *a6;
  char v33 = *a7;
  uint64_t v34 = *a8;
  *(_DWORD *)BOOL v23 = v29 ^ v28;
  uint64_t v35 = (char *)&v19[22 * v11];
  v35[40] = 0;
  uint64_t v36 = v35 + 40;
  *((void *)v36 - 1) = v26;
  if (v27)
  {
    v19[22 * v11 + 11] = v30;
    unsigned char *v36 = 1;
  }
  int v37 = (char *)&v19[22 * v11];
  v37[48] = v32;
  v37[49] = v33;
  *((void *)v37 + 7) = v34;
  *((_DWORD *)v37 + 16) = 0;
  uint64_t v38 = (char *)&v19[22 * v53];
  *((void *)v37 + 9) = 0;
  *((_DWORD *)v37 + 20) = v31;
  int v39 = v23 + 88;
  if (v9 == v10)
  {
    *a1 = v23;
    a1[1] = v39;
    a1[2] = v38;
  }
  else
  {
    uint64_t v40 = 0;
    do
    {
      __int16 v43 = &v23[v40 - 80];
      int v44 = *(_DWORD *)&v9[v40 - 88];
      int v45 = &v9[v40 - 80];
      if (v44 == v44 >> 31)
      {
        *(void *)__int16 v43 = *(void *)v45;
        int v46 = v44;
      }
      else
      {
        long long v47 = *(_OWORD *)v45;
        *(_DWORD *)&v23[v40 - 64] = *(_DWORD *)&v9[v40 - 64];
        *(_OWORD *)__int16 v43 = v47;
        int v46 = *(_DWORD *)&v9[v40 - 88];
        int v44 = v46 >> 31;
      }
      *(_DWORD *)&v23[v40 - 88] = v46 ^ v44;
      unint64_t v48 = &v23[v40];
      unint64_t v49 = &v9[v40];
      *((void *)v48 - 7) = *(void *)&v9[v40 - 56];
      *(v48 - 4++*(void *)(result + 8) = 0;
      if (v9[v40 - 48])
      {
        *((_DWORD *)v48 - 11) = *((_DWORD *)v49 - 11);
        *(v48 - 4++*(void *)(result + 8) = 1;
      }
      long long v41 = *(_OWORD *)(v49 - 40);
      long long v42 = *(_OWORD *)(v49 - 24);
      *((_DWORD *)v48 - 2) = *((_DWORD *)v49 - 2);
      *(_OWORD *)(v48 - ++*(void *)(result + 24) = v42;
      *(_OWORD *)(v48 - 40) = v41;
      v40 -= 88;
    }
    while (&v9[v40] != v10);
    int v9 = (char *)*a1;
    uint64_t v50 = (char *)a1[1];
    *a1 = &v23[v40];
    a1[1] = v39;
    a1[2] = v38;
    while (v50 != v9)
    {
      if (*(v50 - 48)) {
        *(v50 - 4++*(void *)(result + 8) = 0;
      }
      v50 -= 88;
    }
  }
  if (v9) {
    operator delete(v9);
  }
  return v39;
}

void sub_10036D204()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10036D27C()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

id sub_10036D2F4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  int8x8_t v2 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = [WeakRetained sensorPresent];

    return v3;
  }
  else
  {

    return 0;
  }
}

void sub_10036D34C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10036D35C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 96));
  [WeakRetained stop];
}

void sub_10036D3A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10036D3B8(uint64_t a1, uint64_t a2, long long *a3, uint64_t *a4)
{
  long long v11 = *a3;
  *(void *)a3 = 0;
  *((void *)a3 + 1) = 0;
  sub_10035EBE8((uint64_t)v12, a2, (uint64_t)&v11, a4);
  unint64_t v5 = (char *)operator new(0x108uLL);
  sub_10036D9B0((uint64_t)v5, v12);
  int v16 = v5 + 24;
  size_t v17 = (std::__shared_weak_count *)v5;
  sub_100045938(a1, (uint64_t)&v16);
  int v6 = v17;
  if (v17 && !atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
  int v7 = (char *)__p;
  if (__p)
  {
    for (uint64_t i = v15; i != v7; i -= 88)
    {
      if (*(i - 48)) {
        *(i - 4++*(void *)(result + 8) = 0;
      }
    }
    int v15 = v7;
    operator delete(v7);
  }
  int v9 = v13;
  if (v13 && !atomic_fetch_add(&v13->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  size_t v10 = (std::__shared_weak_count *)*((void *)&v11 + 1);
  if (*((void *)&v11 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v11 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
}

void sub_10036D53C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_1000E11EC(v11 - 32);
  sub_10036D5A0(&a11);
  sub_1000BA884((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10036D560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  operator delete(v11);
  sub_10036D5A0(&a11);
  sub_1000BA884((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_10036D584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
}

void *sub_10036D5A0(void *a1)
{
  int8x8_t v2 = (char *)a1[3];
  if (v2)
  {
    for (uint64_t i = (char *)a1[4]; i != v2; i -= 88)
    {
      if (*(i - 48)) {
        *(i - 4++*(void *)(result + 8) = 0;
      }
    }
    a1[4] = v2;
    operator delete(v2);
  }
  uint8x8_t v4 = (std::__shared_weak_count *)a1[2];
  if (!v4 || atomic_fetch_add(&v4->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL)) {
    return a1;
  }
  ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
  std::__shared_weak_count::__release_weak(v4);
  return a1;
}

void sub_10036D650(uint64_t a1, uint64_t a2, long long *a3)
{
  long long v15 = *a3;
  *(void *)a3 = 0;
  *((void *)a3 + 1) = 0;
  unint64_t v12 = 0;
  int v13 = 0;
  uint64_t v14 = 0;
  sub_10035EBE8((uint64_t)v16, a2, (uint64_t)&v15, (uint64_t *)&v12);
  uint8x8_t v4 = (char *)operator new(0x108uLL);
  sub_10036D9B0((uint64_t)v4, v16);
  int v20 = v4 + 24;
  int v21 = (std::__shared_weak_count *)v4;
  sub_100045938(a1, (uint64_t)&v20);
  unint64_t v5 = v21;
  if (v21 && !atomic_fetch_add(&v21->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  int v6 = (char *)__p;
  if (__p)
  {
    for (uint64_t i = v19; i != v6; i -= 88)
    {
      if (*(i - 48)) {
        *(i - 4++*(void *)(result + 8) = 0;
      }
    }
    size_t v19 = v6;
    operator delete(v6);
  }
  double v8 = v17;
  if (v17 && !atomic_fetch_add(&v17->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
    std::__shared_weak_count::__release_weak(v8);
  }
  int v9 = (char *)v12;
  if (v12)
  {
    for (j = v13; j != v9; j -= 88)
    {
      if (*(j - 48)) {
        *(j - 4++*(void *)(result + 8) = 0;
      }
    }
    int v13 = v9;
    operator delete(v9);
  }
  uint64_t v11 = (std::__shared_weak_count *)*((void *)&v15 + 1);
  if (*((void *)&v15 + 1)
    && !atomic_fetch_add((atomic_ullong *volatile)(*((void *)&v15 + 1) + 8), 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
  }
}

void sub_10036D814(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va2, a2);
  va_start(va1, a2);
  va_start(va, a2);
  uint8x8_t v4 = va_arg(va1, char *);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  va_copy(va2, va1);
  uint64_t v8 = va_arg(va2, void);
  uint64_t v10 = va_arg(va2, void);
  sub_1000E11EC(v2 - 32);
  sub_10036D5A0((uint64_t *)va2);
  sub_1002B083C((char **)va);
  sub_1000BA884((uint64_t)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_10036D858(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 96));
  *(void *)a1 = off_10046A518;
  uint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 80);
    uint8x8_t v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        unint64_t v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5) {
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      uint8x8_t v4 = *(void **)(a1 + 72);
    }
    *(void *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));
  return a1;
}

void sub_10036D8F4(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 96));
  *(void *)a1 = off_10046A518;
  uint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = *(void *)(a1 + 80);
    uint8x8_t v4 = *(void **)(a1 + 72);
    if (v3 != v2)
    {
      do
      {
        unint64_t v5 = *(std::__shared_weak_count **)(v3 - 8);
        if (v5) {
          std::__shared_weak_count::__release_weak(v5);
        }
        v3 -= 16;
      }
      while (v3 != v2);
      uint8x8_t v4 = *(void **)(a1 + 72);
    }
    *(void *)(a1 + 80) = v2;
    operator delete(v4);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 8));

  operator delete();
}

uint64_t sub_10036D9B0(uint64_t a1, void *a2)
{
  *(void *)(a1 + ++*(void *)(result + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = off_100454870;
  uint64_t v3 = a2[1];
  *(void *)(a1 + 32) = *a2;
  *(void *)(a1 + 40) = v3;
  uint64_t v4 = a2[2];
  *(void *)(a1 + 4++*(void *)(result + 8) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  sub_10035F89C((char *)(a1 + 56), a2[3], a2[4], 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(a2[4] - a2[3]) >> 3));
  *(_DWORD *)(a1 + ++*(void *)(result + 24) = 14;
  return a1;
}

void sub_10036DA50(_Unwind_Exception *a1)
{
  uint64_t v3 = (std::__shared_weak_count *)v1[2].__vftable;
  if (v3) {
    sub_1003A4A40(v3);
  }
  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void sub_10036DA70()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10036DAE8()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10036DB60()
{
}

void sub_10036DB88(uint64_t a1, void *a2)
{
  uint64_t v4 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  unint64_t v5 = sub_100057C24(a1 + 72, a2);
  uint64_t v6 = v5;
  uint64_t v7 = *(void **)(a1 + 80);
  if (v7 == v5)
  {
    if (qword_10047BED8 == -1)
    {
      unint64_t v12 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_16;
      }
    }
    else
    {
      dispatch_once(&qword_10047BED8, &stru_10046A580);
      unint64_t v12 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_ERROR)) {
        goto LABEL_16;
      }
    }
    *(_WORD *)int v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_ERROR, "Attempt to remove observer not in list", v13, 2u);
    goto LABEL_16;
  }
  uint64_t v8 = v5 + 2;
  if (v5 + 2 != v7)
  {
    do
    {
      long long v9 = *(_OWORD *)v8;
      *uint64_t v8 = 0;
      v8[1] = 0;
      uint64_t v10 = (std::__shared_weak_count *)*(v8 - 1);
      *((_OWORD *)v8 - 1) = v9;
      if (v10) {
        std::__shared_weak_count::__release_weak(v10);
      }
      v8 += 2;
    }
    while (v8 != v7);
    uint64_t v7 = *(void **)(a1 + 80);
    uint64_t v6 = v8 - 2;
  }
  while (v7 != v6)
  {
    uint64_t v11 = (std::__shared_weak_count *)*(v7 - 1);
    if (v11) {
      std::__shared_weak_count::__release_weak(v11);
    }
    v7 -= 2;
  }
  *(void *)(a1 + 80) = v6;
LABEL_16:
  std::mutex::unlock(v4);
}

void sub_10036DCDC(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10036DCF0(uint64_t a1)
{
  uint64_t v2 = (std::mutex *)(a1 + 8);
  std::mutex::lock((std::mutex *)(a1 + 8));
  uint64_t v3 = *(void **)(a1 + 72);
  uint64_t v4 = *(void **)(a1 + 80);
  if (v3 == v4)
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    do
    {
      uint64_t v8 = (std::__shared_weak_count *)v3[1];
      if (v8 && (long long v9 = std::__shared_weak_count::lock(v8)) != 0)
      {
        uint64_t v10 = v9;
        BOOL v7 = *v3 == 0;
        if (*v3) {
          ++v6;
        }
        if (!atomic_fetch_add(&v9->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      else
      {
        BOOL v7 = 1;
      }
      v5 += v7;
      v3 += 2;
    }
    while (v3 != v4);
    uint64_t v3 = *(void **)(a1 + 72);
    for (uint64_t i = *(void **)(a1 + 80); i != v3; i -= 2)
    {
      unint64_t v12 = (std::__shared_weak_count *)*(i - 1);
      if (v12) {
        std::__shared_weak_count::__release_weak(v12);
      }
    }
  }
  *(void *)(a1 + 80) = v3;
  std::mutex::unlock(v2);
  return v6;
}

double sub_10036DE10@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (!a1) {
    __cxa_bad_typeid();
  }
  uint64_t v3 = (const char *)(*(void *)(*(void *)(*a1 - 8) + 8) & 0x7FFFFFFFFFFFFFFFLL);
  size_t v4 = strlen(v3);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  uint64_t v5 = (void *)v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = (void **)operator new(v7 + 1);
    __dst[1] = v5;
    unint64_t v13 = v8 | 0x8000000000000000;
    __dst[0] = v6;
    goto LABEL_9;
  }
  HIBYTE(v13) = v4;
  uint64_t v6 = __dst;
  if (v4) {
LABEL_9:
  }
    memmove(v6, v3, (size_t)v5);
  *((unsigned char *)v5 + (void)v6) = 0;
  sub_10000DB3C(__dst, (uint64_t)&v10);
  if (SHIBYTE(v13) < 0) {
    operator delete(__dst[0]);
  }
  double result = *(double *)&v10;
  *(_OWORD *)a2 = v10;
  *(void *)(a2 + 16) = v11;
  return result;
}

void sub_10036DF14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10036DF30(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

void sub_10036DF60()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10036DFD8()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t *sub_10036E050()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)qword_10047E548, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(qword_10047E548))
  {
    return &qword_10047E5C0;
  }
  qword_10047E5C0 = (uint64_t)sub_100163794();
  unk_10047E5C8 = v1;
  byte_10047E5D0 = 0;
  byte_10047E5D2 = 0;
  byte_10047E5D4 = 0;
  __cxa_guard_release(qword_10047E548);
  return &qword_10047E5C0;
}

void sub_10036E0C8(_Unwind_Exception *a1)
{
}

uint64_t *sub_10036E0E0()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10047E578, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_10047E578))
  {
    return &qword_10047E608;
  }
  qword_10047E608 = (uint64_t)sub_100163818();
  unk_10047E610 = v1;
  byte_10047E618 = 0;
  byte_10047E61A = 0;
  byte_10047E61C = 0;
  __cxa_guard_release(&qword_10047E578);
  return &qword_10047E608;
}

void sub_10036E158(_Unwind_Exception *a1)
{
}

uint64_t *sub_10036E170()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10047E580, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_10047E580))
  {
    return &qword_10047E620;
  }
  qword_10047E620 = (uint64_t)sub_100163828();
  unk_10047E628 = v1;
  byte_10047E630 = 0;
  byte_10047E632 = 0;
  byte_10047E634 = 0;
  __cxa_guard_release(&qword_10047E580);
  return &qword_10047E620;
}

void sub_10036E1E8(_Unwind_Exception *a1)
{
}

uint64_t *sub_10036E200()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10047E588, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_10047E588))
  {
    return &qword_10047E638;
  }
  qword_10047E638 = (uint64_t)sub_100163858();
  unk_10047E640 = v1;
  byte_10047E648 = 0;
  byte_10047E64A = 0;
  byte_10047E64C = 0;
  __cxa_guard_release(&qword_10047E588);
  return &qword_10047E638;
}

void sub_10036E278(_Unwind_Exception *a1)
{
}

uint64_t *sub_10036E290()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10047E590, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_10047E590))
  {
    return &qword_10047E700;
  }
  qword_10047E700 = (uint64_t)sub_100163868();
  unk_10047E708 = v1;
  byte_10047E710 = 0;
  byte_10047E718 = 0;
  byte_10047E71A = 0;
  __cxa_guard_release(&qword_10047E590);
  return &qword_10047E700;
}

void sub_10036E308(_Unwind_Exception *a1)
{
}

uint64_t *sub_10036E320()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_10047E5A0, memory_order_acquire) & 1) != 0
    || !__cxa_guard_acquire(&qword_10047E5A0))
  {
    return &qword_10047E668;
  }
  qword_10047E668 = (uint64_t)sub_100163898();
  unk_10047E670 = v1;
  byte_10047E678 = 0;
  byte_10047E67A = 0;
  byte_10047E67C = 0;
  __cxa_guard_release(&qword_10047E5A0);
  return &qword_10047E668;
}

void sub_10036E398(_Unwind_Exception *a1)
{
}

void sub_10036E3B0()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10036E428()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10036E4A0()
{
}

void *sub_10036E4C8(void *a1, _DWORD *a2)
{
  switch(*a2)
  {
    case 0:
      uint64_t v2 = "sensor list for localization (no pdr)";
      uint64_t v3 = 37;
      break;
    case 1:
      uint64_t v2 = "additional sensors needed for pdr";
      uint64_t v3 = 33;
      break;
    case 2:
      uint64_t v2 = "additional sensors for extra tracing of localizers";
      uint64_t v3 = 50;
      break;
    case 3:
      uint64_t v2 = "sensor list for survey capture";
      uint64_t v3 = 30;
      break;
    case 4:
      uint64_t v2 = "invalid control group (num control groups)";
      uint64_t v3 = 42;
      break;
    default:
      __cxa_allocate_exception(0x40uLL);
      sub_1000AE4B0(&v6, "unsupported control group");
      std::runtime_error::runtime_error(&v7, &v6);
      v7.__vftable = (std::runtime_error_vtbl *)&off_100453860;
      sub_10018E868((uint64_t)v5);
      sub_1000D1698(&v7, (uint64_t)"std::ostream &operator<<(std::ostream &, const SensorManager::ControlGroup &)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/common/sensors/sensor_manager.cpp", 33, (uint64_t)v5);
  }
  return sub_10002986C(a1, (uint64_t)v2, v3);
}

void sub_10036E6E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, std::runtime_error a20,std::runtime_error a21)
{
  sub_1000D19E0(&a21);
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a20);
  if (a19 < 0)
  {
    operator delete(a14);
    if ((v22 & 1) == 0) {
LABEL_8:
    }
      _Unwind_Resume(a1);
  }
  else if (!v22)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v21);
  goto LABEL_8;
}

void sub_10036E788()
{
}

void sub_10036E7E4()
{
}

void sub_10036E7F8(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  sub_1000CD728((const char *)((unint64_t)"PN13SensorManager12ControlGroupE" & 0x7FFFFFFFFFFFFFFFLL), &v13);
  if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)&v13;
  }
  else {
    v4.__i_ = (std::__wrap_iter<const char *>::iterator_type)v13.__r_.__value_.__r.__words[0];
  }
  std::string::insert(&v13, v4, 91);
  std::string v14 = v13;
  memset(&v13, 0, sizeof(v13));
  uint64_t v5 = std::string::append(&v14, "] = ");
  long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
  v15.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v15.__r_.__value_.__l.__data_ = v6;
  v5->__r_.__value_.__l.__size_ = 0;
  v5->__r_.__value_.__r.__words[2] = 0;
  v5->__r_.__value_.__r.__words[0] = 0;
  sub_10036EA3C((_DWORD *)(a1 + 8));
  if ((v12 & 0x80u) == 0) {
    std::runtime_error v7 = __p;
  }
  else {
    std::runtime_error v7 = (void **)__p[0];
  }
  if ((v12 & 0x80u) == 0) {
    std::string::size_type v8 = v12;
  }
  else {
    std::string::size_type v8 = (std::string::size_type)__p[1];
  }
  long long v9 = std::string::append(&v15, (const std::string::value_type *)v7, v8);
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v16.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v16.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  std::string::push_back(&v16, 10);
  *a2 = v16;
  memset(&v16, 0, sizeof(v16));
  if ((char)v12 < 0)
  {
    operator delete(__p[0]);
    if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_12:
      if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_17;
    }
  }
  else if ((SHIBYTE(v15.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_12;
  }
  operator delete(v15.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v14.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_13:
    if ((SHIBYTE(v13.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_18:
    operator delete(v13.__r_.__value_.__l.__data_);
    return;
  }
LABEL_17:
  operator delete(v14.__r_.__value_.__l.__data_);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_18;
  }
}

void sub_10036E978(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 41) < 0)
  {
    operator delete(*(void **)(v33 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a33 & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a28);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a21);
  if ((a20 & 0x80000000) == 0) {
LABEL_6:
  }
    _Unwind_Resume(exception_object);
LABEL_11:
  operator delete(a15);
  _Unwind_Resume(exception_object);
}

uint64_t sub_10036EA3C(_DWORD *a1)
{
  sub_1000CD96C((uint64_t)v3);
  sub_10036E4C8(v3, a1);
  std::stringbuf::str();
  if (v4 < 0) {
    operator delete((void *)v3[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return std::ios::~ios();
}

void sub_10036EB70(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000CDB10((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10036EB84()
{
}

void sub_10036EE10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_10036EED0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10036EE24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va1, a3);
  va_start(va, a3);
  uint64_t v4 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  sub_1000CD238((uint64_t)va);
  sub_10036EED0((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_10036EE40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, atomic_uint *a14)
{
  if (a14 && atomic_fetch_add(a14 + 2, 0xFFFFFFFF) == 1)
  {
    (*(void (**)(atomic_uint *))(*(void *)a14 + 16))(a14);
    if (atomic_fetch_add(a14 + 3, 0xFFFFFFFF) == 1) {
      (*(void (**)(atomic_uint *))(*(void *)a14 + 24))(a14);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10036EED0(uint64_t a1)
{
  uint64_t v2 = *(atomic_uint **)(a1 + 8);
  if (v2)
  {
    if (atomic_fetch_add(v2 + 2, 0xFFFFFFFF) == 1)
    {
      (*(void (**)(atomic_uint *))(*(void *)v2 + 16))(v2);
      if (atomic_fetch_add(v2 + 3, 0xFFFFFFFF) == 1) {
        (*(void (**)(atomic_uint *))(*(void *)v2 + 24))(v2);
      }
    }
  }
  return a1;
}

void sub_10036EF78()
{
}

void sub_10036F064(void *a1)
{
  __cxa_begin_catch(a1);
  if (v1) {
    sub_1003A3598(v1);
  }
  __cxa_rethrow();
}

void sub_10036F07C(_Unwind_Exception *a1)
{
}

void sub_10036F094()
{
}

uint64_t sub_10036F0A8(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 16);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 24))();
  }
  return result;
}

uint64_t sub_10036F0D8()
{
  return 0;
}

uint64_t sub_10036F0E0()
{
  return 0;
}

uint64_t sub_10036F0E8()
{
  return 0;
}

void sub_10036F0F0()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10036F168()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10036F308(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void sub_10036F31C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void sub_10036F330(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, id a12)
{
  sub_10036F360(&a9);
  _Unwind_Resume(a1);
}

void sub_10036F34C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void **sub_10036F360(void **a1)
{
  uint64_t v2 = (char *)*a1;
  if (*a1)
  {
    uint64_t v3 = (char *)a1[1];
    uint64_t v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        uint64_t v5 = (void *)*((void *)v3 - 1);
        v3 -= 8;
      }
      while (v3 != v2);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void sub_10036F3C0()
{
}

std::string *sub_10036F3E8@<X0>(std::string::value_type *__s@<X0>, std::string *a2@<X8>)
{
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return std::string::assign(a2, __s);
}

void sub_10036F41C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_10036F438()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10036F4B0()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10036F528(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  sub_100073838((uint64_t *)a2, a1 + 1);
  sub_100370C68(a2 + 24, 0x8E38E38E38E38E39 * ((uint64_t)(a1[11] - a1[10]) >> 3));
  uint64_t v4 = (void *)a1[10];
  for (uint64_t i = (void *)a1[11]; v4 != i; v4 += 9)
  {
    uint64_t v6 = (uint64_t *)sub_100370DA8((char **)(a2 + 24), *(void *)(a2 + 32));
    sub_100073838(v6, v4);
  }
  sub_10006C958((double **)a2);
}

void sub_10036F5D8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void *)(v1 + 24);
  if (v3)
  {
    uint64_t v5 = *(void *)(v1 + 32);
    uint64_t v6 = *(void **)(v1 + 24);
    if (v5 != v3)
    {
      uint64_t v7 = *(void *)(v1 + 32);
      do
      {
        long long v9 = *(void **)(v7 - 24);
        v7 -= 24;
        std::string::size_type v8 = v9;
        if (v9)
        {
          *(void *)(v5 - 16) = v8;
          operator delete(v8);
        }
        uint64_t v5 = v7;
      }
      while (v7 != v3);
      uint64_t v6 = *(void **)(v1 + 24);
    }
    *(void *)(v1 + 32) = v3;
    operator delete(v6);
    uint64_t v4 = *(void **)v1;
    if (!*(void *)v1) {
LABEL_3:
    }
      _Unwind_Resume(exception_object);
  }
  else
  {
    uint64_t v4 = *(void **)v1;
    if (!*(void *)v1) {
      goto LABEL_3;
    }
  }
  *(void *)(v1 + ++*(void *)(result + 8) = v4;
  operator delete(v4);
  _Unwind_Resume(exception_object);
}

double sub_10036F658(uint64_t a1, uint64_t a2, int a3, char a4)
{
  long long v34 = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a1 + 1800);
  uint64_t v5 = *(void *)(a1 + 1808);
  if (v4 == v5) {
    return NAN;
  }
  double v10 = INFINITY;
  double v11 = NAN;
  do
  {
    sub_1000737C4((void *)v4, (uint64_t)&v30);
    if (v30 == v31)
    {
      uint64_t v26 = __p;
      if (__p == v33)
      {
LABEL_30:
        int v37 = &off_10045FE58;
        v35.i64[0] = (uint64_t)"/AppleInternal/Library/BuildRoots/cb09429a-9ee5-11ef-b491-ce2c30f2a3e7/Applications/Xcode."
                              "app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.2.Internal.sd"
                              "k/usr/local/include/boost/geometry/algorithms/detail/throw_on_empty_input.hpp";
        v35.i64[1] = (uint64_t)"void boost::geometry::detail::throw_on_empty_input(const Geometry &) [Geometry = boost::ge"
                              "ometry::model::polygon<boost::geometry::model::d2::point_xy<double>>]";
        uint64_t v36 = 54;
        sub_1001DEE14((uint64_t)&v37, &v35);
      }
      while (*v26 == v26[1])
      {
        v26 += 3;
        if (v26 == v33) {
          goto LABEL_30;
        }
      }
    }
    double v19 = sub_10004CE90((double *)&v34, (uint64_t)&v30);
    int v20 = __p;
    if (__p)
    {
      int v21 = v33;
      int v22 = __p;
      if (v33 != __p)
      {
        BOOL v23 = v33;
        do
        {
          int v25 = (void *)*(v23 - 3);
          v23 -= 3;
          int v24 = v25;
          if (v25)
          {
            *(v21 - 2) = v24;
            operator delete(v24);
          }
          int v21 = v23;
        }
        while (v23 != v20);
        int v22 = __p;
      }
      uint64_t v33 = v20;
      operator delete(v22);
    }
    if (v30)
    {
      int v31 = v30;
      operator delete(v30);
    }
    double v12 = fabs(v19);
    double v13 = *(double *)(v4 + 56);
    if (!a3) {
      double v13 = 0.0;
    }
    double v14 = v12 - v13;
    double v15 = -(v12 - v13);
    if (v19 >= 0.0) {
      double v15 = v12 - v13;
    }
    BOOL v16 = v12 < v13;
    if (v12 >= v13) {
      double v17 = v15;
    }
    else {
      double v17 = 0.0;
    }
    if (v16) {
      double v18 = 0.0;
    }
    else {
      double v18 = v14;
    }
    if (v18 < v10)
    {
      double v10 = v18;
      double v11 = v17;
    }
    v4 += 72;
  }
  while (v4 != v5);
  if (v11 <= 0.0 && (a4 & 1) != 0)
  {
    sub_1001A9C7C((uint64_t)v29, a2);
    sub_10036F8B0(a1, (uint64_t)v29, a3);
    double v11 = v27;
    nullsub_17(v29);
  }
  return v11;
}

void sub_10036F86C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_10036F880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  sub_1002C2BDC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10036F894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  std::exception::~exception((std::exception *)(v5 - 104));
  sub_1002C2BDC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10036F8B0(uint64_t a1, uint64_t a2, int a3)
{
  long long v103 = *(_OWORD *)(a2 + 8);
  uint64_t v98 = *(void *)(a1 + 1840);
  if (*(void *)(a1 + 1832) == v98) {
    return;
  }
  double v3 = INFINITY;
  uint64_t v4 = *(void *)(a1 + 1832);
  while (2)
  {
    uint64_t v5 = *(void *)(v4 + 80);
    uint64_t v100 = *(void *)(v4 + 88);
    if (v5 == v100) {
      goto LABEL_4;
    }
    uint64_t v99 = v4;
    while (2)
    {
      int v102 = 0;
      *(_OWORD *)std::string __p = 0u;
      uint64_t v6 = *(void *)(v5 + 8);
      if (*(void *)(v5 + 16) == v6) {
        goto LABEL_83;
      }
      uint64_t v7 = 0;
      unint64_t v8 = 0;
      do
      {
        uint64_t v9 = *(void *)(v6 + 8 * v8);
        uint64_t v10 = *(void *)(*(void *)(v5 + 32) + 8 * v8);
        if (v7 < v102)
        {
          *(void *)uint64_t v7 = v9;
          *((void *)v7 + 1) = v10;
          v7 += 2;
          goto LABEL_11;
        }
        uint64_t v11 = ((char *)v7 - (char *)__p[0]) >> 4;
        unint64_t v12 = v11 + 1;
        if ((unint64_t)(v11 + 1) >> 60) {
          goto LABEL_136;
        }
        uint64_t v13 = (char *)v102 - (char *)__p[0];
        if (((char *)v102 - (char *)__p[0]) >> 3 > v12) {
          unint64_t v12 = v13 >> 3;
        }
        if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v14 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v14 = v12;
        }
        if (v14)
        {
          if (v14 >> 60) {
            goto LABEL_137;
          }
          double v15 = (char *)operator new(16 * v14);
          BOOL v16 = (double *)&v15[16 * v11];
          *(void *)BOOL v16 = v9;
          *((void *)v16 + 1) = v10;
          if (v7 == __p[0])
          {
LABEL_27:
            double v18 = v7;
            uint64_t v7 = v16 + 2;
            __p[0] = v16;
            int v102 = (double *)&v15[16 * v14];
            if (!v18) {
              goto LABEL_11;
            }
LABEL_28:
            operator delete(v18);
            goto LABEL_11;
          }
        }
        else
        {
          double v15 = 0;
          BOOL v16 = (double *)(16 * v11);
          *(void *)BOOL v16 = v9;
          *((void *)v16 + 1) = v10;
          if (v7 == __p[0]) {
            goto LABEL_27;
          }
        }
        double v17 = v16;
        do
        {
          *((_OWORD *)v17 - 1) = *((_OWORD *)v7 - 1);
          v17 -= 2;
          v7 -= 2;
        }
        while (v7 != __p[0]);
        double v18 = (double *)__p[0];
        uint64_t v7 = v16 + 2;
        __p[0] = v17;
        int v102 = (double *)&v15[16 * v14];
        if (v18) {
          goto LABEL_28;
        }
LABEL_11:
        __p[1] = v7;
        ++v8;
        uint64_t v6 = *(void *)(v5 + 8);
      }
      while (v8 < (*(void *)(v5 + 16) - v6) >> 3);
      unint64_t v19 = (unint64_t)__p[0];
      uint64_t v20 = (char *)v7 - (char *)__p[0];
      if ((unint64_t)((char *)v7 - (char *)__p[0]) < 0x30) {
        goto LABEL_83;
      }
      double v21 = *(double *)__p[0];
      double v22 = *(v7 - 2);
      if (*(double *)__p[0] != v22)
      {
        if ((*(void *)&v21 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
          || (*(void *)&v22 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
        {
          goto LABEL_50;
        }
        double v57 = vabdd_f64(v21, v22);
        double v58 = fabs(v21);
        double v59 = fabs(v22);
        if (v58 >= v59) {
          double v59 = v58;
        }
        double v60 = v59 >= 1.0 ? v59 * 2.22044605e-16 : 2.22044605e-16;
        if (v57 > v60) {
          goto LABEL_50;
        }
      }
      double v23 = *((double *)__p[0] + 1);
      double v24 = *(v7 - 1);
      if (v23 != v24)
      {
        if ((*(void *)&v23 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
          || (*(void *)&v24 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
        {
          goto LABEL_50;
        }
        double v26 = vabdd_f64(v23, v24);
        double v27 = fabs(v23);
        double v28 = fabs(v24);
        if (v27 < v28) {
          double v27 = v28;
        }
        double v29 = v27 >= 1.0 ? v27 * 2.22044605e-16 : 2.22044605e-16;
        if (v26 > v29)
        {
LABEL_50:
          uint64_t v31 = *((void *)__p[0] + 1);
          if (v7 < v102)
          {
            *uint64_t v7 = v21;
            *((void *)v7 + 1) = v31;
            uint64_t v32 = (uint64_t)(v7 + 2);
LABEL_68:
            __p[1] = (void *)v32;
            unint64_t v19 = (unint64_t)__p[0];
            uint64_t v20 = v32 - (unint64_t)__p[0];
            uint64_t v7 = (double *)v32;
            goto LABEL_69;
          }
          uint64_t v33 = v20 >> 4;
          unint64_t v34 = (v20 >> 4) + 1;
          if (v34 >> 60) {
LABEL_136:
          }
            sub_1000A9108();
          uint64_t v35 = (char *)v102 - (char *)__p[0];
          if (((char *)v102 - (char *)__p[0]) >> 3 > v34) {
            unint64_t v34 = v35 >> 3;
          }
          if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v36 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v36 = v34;
          }
          if (v36)
          {
            if (v36 >> 60) {
LABEL_137:
            }
              sub_1000A6A10();
            int v37 = (double *)((char *)operator new(16 * v36) + 16 * v33);
            double *v37 = v21;
            *((void *)v37 + 1) = v31;
            uint64_t v32 = (uint64_t)(v37 + 2);
            if (v7 == __p[0]) {
              goto LABEL_66;
            }
          }
          else
          {
            int v37 = (double *)(16 * v33);
            double *v37 = v21;
            *((void *)v37 + 1) = v31;
            uint64_t v32 = 16 * v33 + 16;
            if (v7 == __p[0])
            {
LABEL_66:
              __p[0] = v37;
LABEL_67:
              operator delete(v7);
              goto LABEL_68;
            }
          }
          do
          {
            *((_OWORD *)v37 - 1) = *((_OWORD *)v7 - 1);
            v37 -= 2;
            v7 -= 2;
          }
          while (v7 != __p[0]);
          uint64_t v7 = (double *)__p[0];
          __p[0] = v37;
          if (!v7) {
            goto LABEL_68;
          }
          goto LABEL_67;
        }
      }
LABEL_69:
      uint64_t v38 = (double *)(v19 + 16);
      if ((unint64_t)v20 >= 0x40 && v38 != v7)
      {
        unint64_t v40 = (unint64_t)v7 - v19 - 32;
        double v41 = 0.0;
        long long v42 = (double *)(v19 + 16);
        __int16 v43 = (double *)v19;
        if (v40 < 0x30) {
          goto LABEL_142;
        }
        uint64_t v44 = (v40 >> 4) + 1;
        uint64_t v45 = 2 * (v44 & 0x1FFFFFFFFFFFFFFCLL);
        long long v42 = &v38[v45];
        __int16 v43 = (double *)(v19 + v45 * 8);
        int v46 = (const double *)(v19 + 32);
        uint64_t v47 = v44 & 0x1FFFFFFFFFFFFFFCLL;
        do
        {
          unint64_t v48 = v46 - 4;
          float64x2x2_t v107 = vld2q_f64(v48);
          float64x2x2_t v108 = vld2q_f64(v46);
          unint64_t v49 = v46 - 2;
          uint64_t v50 = v46 + 2;
          float64x2x2_t v109 = vld2q_f64(v49);
          float64x2x2_t v110 = vld2q_f64(v50);
          v107.val[0] = vmulq_f64(vaddq_f64(v107.val[0], v109.val[0]), vsubq_f64(v107.val[1], v109.val[1]));
          v107.val[1] = vmulq_f64(vaddq_f64(v108.val[0], v110.val[0]), vsubq_f64(v108.val[1], v110.val[1]));
          double v41 = v41 + v107.val[0].f64[0] + v107.val[0].f64[1] + v107.val[1].f64[0] + v107.val[1].f64[1];
          v46 += 8;
          v47 -= 4;
        }
        while (v47);
        if (v44 != (v44 & 0x1FFFFFFFFFFFFFFCLL))
        {
LABEL_142:
          do
          {
            double v51 = *v42;
            v42 += 2;
            double v41 = v41 + (*v43 + v51) * (v43[1] - v43[3]);
            v43 += 2;
          }
          while (v42 != v7);
        }
        if (v41 * 0.5 < 0.0 && (double *)v19 != v7)
        {
          unint64_t v52 = v7 - 2;
          if ((unint64_t)(v7 - 2) > v19)
          {
            do
            {
              int8x16_t v105 = *(int8x16_t *)(v38 - 2);
              *((_OWORD *)v38 - 1) = *(_OWORD *)v52;
              *(int8x16_t *)unint64_t v52 = v105;
              v52 -= 2;
              BOOL v53 = v38 >= v52;
              v38 += 2;
            }
            while (!v53);
          }
        }
      }
LABEL_83:
      uint64_t v54 = (double *)__p[0];
      if ((void *)((char *)__p[1] - (char *)__p[0]) < (void *)0x40) {
        goto LABEL_91;
      }
      v105.i32[0] = 0;
      v105.i8[4] = 0;
      if ((char *)__p[0] + 16 == __p[1]) {
        goto LABEL_91;
      }
      do
      {
        BOOL v55 = sub_10004D030((double *)&v103, v54, v54 + 2, (uint64_t)&v105);
        BOOL v56 = v54 + 4 != __p[1] && v55;
        v54 += 2;
      }
      while (v56);
      if (v105.i8[4] || !v105.i32[0])
      {
LABEL_91:
        if (__p[0]) {
          operator delete(__p[0]);
        }
        v5 += 72;
        if (v5 == v100) {
          goto LABEL_3;
        }
        continue;
      }
      break;
    }
    int64_t v61 = (char *)__p[1] - (char *)__p[0];
    if (__p[1] == __p[0])
    {
      int v104 = &off_10045FE58;
      v105.i64[0] = (uint64_t)"/AppleInternal/Library/BuildRoots/cb09429a-9ee5-11ef-b491-ce2c30f2a3e7/Applications/Xcode.a"
                             "pp/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS18.2.Internal.sdk/"
                             "usr/local/include/boost/geometry/algorithms/detail/throw_on_empty_input.hpp";
      v105.i64[1] = (uint64_t)"void boost::geometry::detail::throw_on_empty_input(const Geometry &) [Geometry = boost::geo"
                             "metry::model::linestring<boost::geometry::model::d2::point_xy<double>>]";
      uint64_t v106 = 54;
      sub_1001DEE14((uint64_t)&v104, &v105);
    }
    if (v61 < 0) {
      sub_1000A9108();
    }
    long long v62 = (double *)operator new((char *)__p[1] - (char *)__p[0]);
    memcpy(v62, __p[0], v61);
    int v63 = v62;
    uint64_t v64 = v62;
    if (v61 != 16)
    {
      double v65 = v62[2];
      double v66 = v62[3];
      double v67 = v62[1];
      double v68 = v65 - *v62;
      double v69 = v66 - v67;
      double v70 = *(double *)&v103 - *v62;
      double v71 = (*((double *)&v103 + 1) - v67) * (v66 - v67) + v70 * v68;
      if (v71 <= 0.0)
      {
        double v73 = v70 * v70 + 0.0 + (*((double *)&v103 + 1) - v67) * (*((double *)&v103 + 1) - v67);
        uint64_t v64 = v62;
        if (v61 == 32) {
          goto LABEL_121;
        }
      }
      else
      {
        double v72 = v69 * v69 + v68 * v68;
        if (v72 <= v71)
        {
          double v73 = (*(double *)&v103 - v65) * (*(double *)&v103 - v65)
              + 0.0
              + (*((double *)&v103 + 1) - v66) * (*((double *)&v103 + 1) - v66);
          uint64_t v64 = v62;
          if (v61 == 32)
          {
LABEL_121:
            int v63 = v64 + 2;
            goto LABEL_123;
          }
        }
        else
        {
          double v73 = (*(double *)&v103 - (*v62 + v68 * (v71 / v72))) * (*(double *)&v103 - (*v62 + v68 * (v71 / v72)))
              + 0.0
              + (*((double *)&v103 + 1) - (v67 + v69 * (v71 / v72)))
              * (*((double *)&v103 + 1) - (v67 + v69 * (v71 / v72)));
          uint64_t v64 = v62;
          if (v61 == 32) {
            goto LABEL_121;
          }
        }
      }
      std::string v74 = v62 + 5;
      uint64_t v75 = 16 * (v61 >> 4) - 32;
      uint64_t v64 = v62;
      while (1)
      {
        double v76 = *(v74 - 3);
        double v77 = *(v74 - 1);
        double v78 = *(v74 - 2);
        double v79 = v77 - v76;
        double v80 = *v74 - v78;
        double v81 = (*((double *)&v103 + 1) - v78) * v80 + (*(double *)&v103 - v76) * (v77 - v76);
        if (v81 <= 0.0)
        {
          double v83 = (*(double *)&v103 - v76) * (*(double *)&v103 - v76)
              + 0.0
              + (*((double *)&v103 + 1) - v78) * (*((double *)&v103 + 1) - v78);
          if (v83 == 0.0) {
            goto LABEL_122;
          }
        }
        else
        {
          double v82 = v80 * v80 + v79 * v79;
          if (v82 <= v81)
          {
            double v83 = (*(double *)&v103 - v77) * (*(double *)&v103 - v77)
                + 0.0
                + (*((double *)&v103 + 1) - *v74) * (*((double *)&v103 + 1) - *v74);
            if (v83 == 0.0)
            {
LABEL_122:
              uint64_t v64 = v74 - 3;
              int v63 = v74 - 1;
              break;
            }
          }
          else
          {
            double v83 = (*(double *)&v103 - (v76 + v79 * (v81 / v82))) * (*(double *)&v103 - (v76 + v79 * (v81 / v82)))
                + 0.0
                + (*((double *)&v103 + 1) - (v78 + v80 * (v81 / v82)))
                * (*((double *)&v103 + 1) - (v78 + v80 * (v81 / v82)));
            if (v83 == 0.0) {
              goto LABEL_122;
            }
          }
        }
        if (v83 < v73)
        {
          double v73 = v83;
          uint64_t v64 = v74 - 3;
        }
        v74 += 2;
        v75 -= 16;
        if (!v75) {
          goto LABEL_121;
        }
      }
    }
LABEL_123:
    double v84 = v63[1];
    double v85 = v64[1];
    double v86 = *v63 - *v64;
    double v87 = v84 - v85;
    double v88 = *(double *)&v103 - *v64;
    double v89 = (*((double *)&v103 + 1) - v85) * (v84 - v85) + v88 * v86;
    if (v89 <= 0.0)
    {
      double v93 = v88 * v88 + 0.0 + (*((double *)&v103 + 1) - v85) * (*((double *)&v103 + 1) - v85);
    }
    else
    {
      double v90 = v87 * v87 + v86 * v86;
      if (v90 <= v89)
      {
        double v91 = *((double *)&v103 + 1) - v84;
        double v92 = *(double *)&v103 - *v63;
      }
      else
      {
        double v91 = *((double *)&v103 + 1) - (v85 + v87 * (v89 / v90));
        double v92 = *(double *)&v103 - (*v64 + v86 * (v89 / v90));
      }
      double v93 = v92 * v92 + 0.0 + v91 * v91;
    }
    double v94 = sqrt(v93);
    operator delete(v62);
    double v95 = *(double *)(v5 + 56);
    if (!a3) {
      double v95 = 0.0;
    }
    double v96 = fmax(v94 - v95, 0.0);
    if (v96 < v3) {
      double v3 = v96;
    }
    if (__p[0]) {
      operator delete(__p[0]);
    }
LABEL_3:
    uint64_t v4 = v99;
LABEL_4:
    v4 += 112;
    if (v4 != v98) {
      continue;
    }
    break;
  }
}

void sub_1003704B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,std::exception a26)
{
}

void sub_1003704D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21)
{
  if (__p)
  {
    operator delete(__p);
    sub_1002C2BDC((uint64_t)&a17);
    _Unwind_Resume(a1);
  }
  sub_1002C2BDC((uint64_t)&a17);
  _Unwind_Resume(a1);
}

double sub_100370590(void *a1, uint64_t a2, int a3, int a4, int a5, double a6)
{
  long long v36 = *(_OWORD *)(a2 + 8);
  uint64_t v7 = a1[225];
  uint64_t v8 = a1[226];
  if (v7 == v8) {
    return NAN;
  }
  double v14 = INFINITY;
  if (a3)
  {
    do
    {
      sub_1000737C4((void *)v7, (uint64_t)&v37);
      double v15 = sub_100370830((uint64_t)&v37, (double *)&v36, a4, 0.0, a6);
      if (v15 < v14) {
        double v14 = v15;
      }
      BOOL v16 = (char *)__p;
      if (__p)
      {
        double v17 = v40;
        double v18 = __p;
        if (v40 != __p)
        {
          unint64_t v19 = v40;
          do
          {
            double v21 = (void *)*((void *)v19 - 3);
            v19 -= 24;
            uint64_t v20 = v21;
            if (v21)
            {
              *((void *)v17 - 2) = v20;
              operator delete(v20);
            }
            double v17 = v19;
          }
          while (v19 != v16);
          double v18 = __p;
        }
        unint64_t v40 = v16;
        operator delete(v18);
      }
      if (v37)
      {
        uint64_t v38 = v37;
        operator delete(v37);
      }
      v7 += 72;
    }
    while (v7 != v8);
  }
  else
  {
    do
    {
      sub_1000737C4((void *)v7, (uint64_t)&v37);
      double v22 = sub_100370830((uint64_t)&v37, (double *)&v36, a4, *(double *)(v7 + 56), a6);
      if (v22 < v14) {
        double v14 = v22;
      }
      double v23 = (char *)__p;
      if (__p)
      {
        double v24 = v40;
        int v25 = __p;
        if (v40 != __p)
        {
          double v26 = v40;
          do
          {
            double v28 = (void *)*((void *)v26 - 3);
            v26 -= 24;
            double v27 = v28;
            if (v28)
            {
              *((void *)v24 - 2) = v27;
              operator delete(v27);
            }
            double v24 = v26;
          }
          while (v26 != v23);
          int v25 = __p;
        }
        unint64_t v40 = v23;
        operator delete(v25);
      }
      if (v37)
      {
        uint64_t v38 = v37;
        operator delete(v37);
      }
      v7 += 72;
    }
    while (v7 != v8);
  }
  if (a5)
  {
    if (v14 < 0.0)
    {
      uint64_t v29 = a1[229];
      uint64_t v30 = a1[230];
      if (v29 != v30)
      {
        while (1)
        {
          sub_100077170(&v37, v29);
          uint64_t v31 = v41;
          uint64_t v32 = v42;
          sub_100076224(&v37);
          if (v31 != v32) {
            break;
          }
          v29 += 112;
          if (v29 == v30) {
            return v14;
          }
        }
        sub_1001A9C7C((uint64_t)v35, a2);
        double v34 = sub_100370A98((uint64_t)a1, (uint64_t)v35, a3, a4, a6);
        nullsub_17(v35);
        if ((*(void *)&v34 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL && v34 >= v14) {
          return v34;
        }
      }
    }
  }
  return v14;
}

void sub_1003707F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100370808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_1002C2BDC((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_10037081C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  sub_1002C2BDC((uint64_t)va);
  _Unwind_Resume(a1);
}

double sub_100370830(uint64_t a1, double *a2, int a3, double a4, double a5)
{
  uint64_t v11 = *(double **)a1;
  uint64_t v10 = *(double **)(a1 + 8);
  uint64_t v33 = 0;
  double v34 = 0;
  std::string __p = 0;
  int64_t v12 = (char *)v10 - (char *)v11;
  if (v10 != v11)
  {
    if (v12 < 0) {
      sub_1000A9108();
    }
    uint64_t v13 = (char *)operator new((char *)v10 - (char *)v11);
    double v14 = &v13[16 * (v12 >> 4)];
    std::string __p = v13;
    double v34 = v14;
    memcpy(v13, v11, v12);
    uint64_t v33 = v14;
  }
  double v15 = sub_1002C3AF4(a2, (double **)&__p);
  if (__p)
  {
    uint64_t v33 = __p;
    operator delete(__p);
  }
  BOOL v16 = *(double **)a1;
  double v17 = *(double **)(a1 + 8);
  if ((unint64_t)v17 - *(void *)a1 >= 0x40)
  {
    LODWORD(__p) = 0;
    BYTE4(__p) = 0;
    if (v16 + 2 != v17)
    {
      do
      {
        if (!sub_10004D030(a2, v16, v16 + 2, (uint64_t)&__p)) {
          break;
        }
        double v18 = v16 + 4;
        v16 += 2;
      }
      while (v18 != v17);
      if (!BYTE4(__p) && __p)
      {
        unint64_t v19 = *(double ***)(a1 + 24);
        uint64_t v20 = *(double ***)(a1 + 32);
        double v21 = v15;
        while (v19 != v20)
        {
          double v23 = *v19;
          double v22 = v19[1];
          std::string __p = 0;
          uint64_t v33 = 0;
          double v34 = 0;
          int64_t v24 = (char *)v22 - (char *)v23;
          if (v22 != v23)
          {
            if (v24 < 0) {
              sub_1000A9108();
            }
            int v25 = (char *)operator new((char *)v22 - (char *)v23);
            double v26 = &v25[16 * (v24 >> 4)];
            std::string __p = v25;
            double v34 = v26;
            memcpy(v25, v23, v24);
            uint64_t v33 = v26;
          }
          double v15 = sub_1002C3AF4(a2, (double **)&__p);
          if (__p)
          {
            uint64_t v33 = __p;
            operator delete(__p);
          }
          double v27 = *v19;
          double v28 = v19[1];
          if ((unint64_t)((char *)v28 - (char *)*v19) >= 0x40)
          {
            LODWORD(__p) = 0;
            BYTE4(__p) = 0;
            if (v27 + 2 != v28)
            {
              do
              {
                if (!sub_10004D030(a2, v27, v27 + 2, (uint64_t)&__p)) {
                  break;
                }
                uint64_t v29 = v27 + 4;
                v27 += 2;
              }
              while (v29 != v28);
              if (!BYTE4(__p) && __p) {
                goto LABEL_30;
              }
            }
          }
          if (v15 < v21) {
            double v21 = v15;
          }
          v19 += 3;
        }
        double v15 = -v21;
      }
    }
  }
LABEL_30:
  double v30 = -1.0;
  if (a3 == 1) {
    double v30 = 1.0;
  }
  return v15 + v30 * (a4 + a5);
}

void sub_100370A70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double sub_100370A98(uint64_t a1, uint64_t a2, int a3, int a4, double a5)
{
  long long v29 = *(_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a1 + 1832);
  uint64_t v7 = *(void *)(a1 + 1840);
  if (v6 == v7) {
    return NAN;
  }
  double v9 = INFINITY;
  if (a3)
  {
    do
    {
      sub_10036F528((void *)v6, (uint64_t)&v25);
      double v10 = sub_100370830((uint64_t)&v25, (double *)&v29, a4, 0.0, a5);
      if (v10 < v9) {
        double v9 = v10;
      }
      uint64_t v11 = (char *)__p;
      if (__p)
      {
        int64_t v12 = v28;
        uint64_t v13 = __p;
        if (v28 != __p)
        {
          double v14 = v28;
          do
          {
            BOOL v16 = (void *)*((void *)v14 - 3);
            v14 -= 24;
            double v15 = v16;
            if (v16)
            {
              *((void *)v12 - 2) = v15;
              operator delete(v15);
            }
            int64_t v12 = v14;
          }
          while (v14 != v11);
          uint64_t v13 = __p;
        }
        double v28 = v11;
        operator delete(v13);
      }
      if (v25)
      {
        double v26 = v25;
        operator delete(v25);
      }
      v6 += 112;
    }
    while (v6 != v7);
  }
  else
  {
    do
    {
      sub_10036F528((void *)v6, (uint64_t)&v25);
      double v17 = sub_100370830((uint64_t)&v25, (double *)&v29, a4, *(double *)(v6 + 64), a5);
      if (v17 < v9) {
        double v9 = v17;
      }
      double v18 = (char *)__p;
      if (__p)
      {
        unint64_t v19 = v28;
        uint64_t v20 = __p;
        if (v28 != __p)
        {
          double v21 = v28;
          do
          {
            double v23 = (void *)*((void *)v21 - 3);
            v21 -= 24;
            double v22 = v23;
            if (v23)
            {
              *((void *)v19 - 2) = v22;
              operator delete(v22);
            }
            unint64_t v19 = v21;
          }
          while (v21 != v18);
          uint64_t v20 = __p;
        }
        double v28 = v18;
        operator delete(v20);
      }
      if (v25)
      {
        double v26 = v25;
        operator delete(v25);
      }
      v6 += 112;
    }
    while (v6 != v7);
  }
  return v9;
}

void sub_100370C40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100370C54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100370C68(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = *(char **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) >= a2) {
    return;
  }
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_1000A9108();
  }
  uint64_t v4 = *(char **)(a1 + 8);
  uint64_t v5 = 24 * a2;
  uint64_t v6 = (char *)operator new(24 * a2);
  uint64_t v7 = &v6[v5];
  uint64_t v8 = &v6[24 * ((v4 - v2) / 24)];
  if (v4 == v2)
  {
    *(void *)a1 = v8;
    *(void *)(a1 + ++*(void *)(result + 8) = v8;
    *(void *)(a1 + 16) = v7;
    if (!v2) {
      return;
    }
    goto LABEL_13;
  }
  double v9 = &v6[24 * ((v4 - v2) / 24)];
  do
  {
    long long v10 = *(_OWORD *)(v4 - 24);
    v4 -= 24;
    *(_OWORD *)(v9 - ++*(void *)(result + 24) = v10;
    v9 -= 24;
    *((void *)v9 + 2) = *((void *)v4 + 2);
    *(void *)uint64_t v4 = 0;
    *((void *)v4 + 1) = 0;
    *((void *)v4 + 2) = 0;
  }
  while (v4 != v2);
  uint64_t v11 = *(char **)a1;
  uint64_t v2 = *(char **)(a1 + 8);
  *(void *)a1 = v9;
  *(void *)(a1 + ++*(void *)(result + 8) = v8;
  *(void *)(a1 + 16) = v7;
  if (v2 != v11)
  {
    int64_t v12 = v2;
    do
    {
      double v14 = (void *)*((void *)v12 - 3);
      v12 -= 24;
      uint64_t v13 = v14;
      if (v14)
      {
        *((void *)v2 - 2) = v13;
        operator delete(v13);
      }
      uint64_t v2 = v12;
    }
    while (v12 != v11);
    uint64_t v2 = v11;
  }
  if (v2)
  {
LABEL_13:
    operator delete(v2);
  }
}

char *sub_100370DA8(char **a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  unint64_t v3 = (unint64_t)a1[1];
  uint64_t v5 = (a2 - (uint64_t)*a1) / 24;
  uint64_t v6 = &(*a1)[24 * v5];
  unint64_t v7 = (unint64_t)a1[2];
  if (v3 >= v7)
  {
    unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v3 - (void)v4) >> 3) + 1;
    if (v12 > 0xAAAAAAAAAAAAAAALL) {
      sub_1000A9108();
    }
    unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v7 - (void)v4) >> 3);
    if (2 * v13 > v12) {
      unint64_t v12 = 2 * v13;
    }
    if (v13 >= 0x555555555555555) {
      unint64_t v14 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v14 = v12;
    }
    long long v36 = a1 + 2;
    if (v14)
    {
      if (v14 > 0xAAAAAAAAAAAAAAALL) {
        sub_1000A6A10();
      }
      double v15 = (char *)operator new(24 * v14);
    }
    else
    {
      double v15 = 0;
    }
    uint64_t v32 = v15;
    uint64_t v33 = &v15[24 * v5];
    double v34 = v33;
    uint64_t v35 = &v15[24 * v14];
    sub_10037116C((uint64_t)&v32);
    double v17 = v33;
    double v18 = *a1;
    unint64_t v19 = v33;
    if (*a1 != v6)
    {
      unint64_t v19 = v33;
      uint64_t v20 = v6;
      do
      {
        *((void *)v19 - 3) = 0;
        *((void *)v19 - 2) = 0;
        v19 -= 24;
        *((void *)v19 + 2) = 0;
        long long v21 = *(_OWORD *)(v20 - 24);
        v20 -= 24;
        *(_OWORD *)unint64_t v19 = v21;
        *((void *)v19 + 2) = *((void *)v20 + 2);
        *(void *)uint64_t v20 = 0;
        *((void *)v20 + 1) = 0;
        *((void *)v20 + 2) = 0;
      }
      while (v20 != v18);
    }
    uint64_t v33 = v19;
    double v22 = a1[1];
    double v23 = v34;
    if (v22 != v6)
    {
      do
      {
        *(void *)double v23 = 0;
        *((void *)v23 + 1) = 0;
        *((void *)v23 + 2) = 0;
        *(_OWORD *)double v23 = *(_OWORD *)v6;
        *((void *)v23 + 2) = *((void *)v6 + 2);
        *(void *)uint64_t v6 = 0;
        *((void *)v6 + 1) = 0;
        *((void *)v6 + 2) = 0;
        v23 += 24;
        v6 += 24;
      }
      while (v6 != v22);
      unint64_t v19 = v33;
      uint64_t v6 = a1[1];
    }
    int64_t v24 = *a1;
    *a1 = v19;
    a1[1] = v23;
    int v25 = a1[2];
    a1[2] = v35;
    double v34 = v6;
    uint64_t v35 = v25;
    uint64_t v32 = v24;
    uint64_t v33 = v24;
    if (v6 == v24)
    {
      if (!v6) {
        return v17;
      }
    }
    else
    {
      do
      {
        while (1)
        {
          double v27 = v6 - 24;
          double v26 = (void *)*((void *)v6 - 3);
          double v34 = v6 - 24;
          if (!v26) {
            break;
          }
          *((void *)v6 - 2) = v26;
          operator delete(v26);
          uint64_t v6 = v34;
          if (v34 == v24) {
            goto LABEL_32;
          }
        }
        v6 -= 24;
      }
      while (v27 != v24);
LABEL_32:
      uint64_t v6 = v32;
      if (!v32) {
        return v17;
      }
    }
    operator delete(v6);
    return v17;
  }
  if (v6 == (char *)v3)
  {
    *(void *)uint64_t v6 = 0;
    *((void *)v6 + 1) = 0;
    *((void *)v6 + 2) = 0;
    a1[1] = v6 + 24;
    return v6;
  }
  uint64_t v8 = v6 + 24;
  unint64_t v9 = v3 - 24;
  if (v3 < 0x18)
  {
    a1[1] = (char *)v3;
    if ((void *)v3 == v8) {
      goto LABEL_39;
    }
LABEL_35:
    uint64_t v28 = 8 * ((uint64_t)(v3 - (void)v8) >> 3);
    do
    {
      double v30 = *(void **)v9;
      if (*(void *)v9)
      {
        *(void *)(v9 + ++*(void *)(result + 8) = v30;
        operator delete(v30);
        *(void *)unint64_t v9 = 0;
        *(void *)(v9 + ++*(void *)(result + 8) = 0;
        *(void *)(v9 + 16) = 0;
      }
      uint64_t v29 = (uint64_t)&v6[v28 - 24];
      *(_OWORD *)unint64_t v9 = *(_OWORD *)v29;
      *(void *)(v9 + 16) = *(void *)&v6[v28 - 8];
      *(void *)uint64_t v29 = 0;
      *(void *)(v29 + ++*(void *)(result + 8) = 0;
      *(void *)(v29 + 16) = 0;
      v9 -= 24;
      v28 -= 24;
    }
    while (v28);
    goto LABEL_39;
  }
  unint64_t v10 = v3 - 24;
  uint64_t v11 = a1[1];
  do
  {
    *(void *)uint64_t v11 = 0;
    *((void *)v11 + 1) = 0;
    *((void *)v11 + 2) = 0;
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v10;
    *((void *)v11 + 2) = *(void *)(v10 + 16);
    *(void *)unint64_t v10 = 0;
    *(void *)(v10 + ++*(void *)(result + 8) = 0;
    *(void *)(v10 + 16) = 0;
    v11 += 24;
    v10 += 24;
  }
  while (v10 < v3);
  a1[1] = v11;
  if ((void *)v3 != v8) {
    goto LABEL_35;
  }
LABEL_39:
  uint64_t v31 = *(void **)v6;
  if (*(void *)v6)
  {
    *((void *)v6 + 1) = v31;
    operator delete(v31);
    *(void *)uint64_t v6 = 0;
    *((void *)v6 + 1) = 0;
    *((void *)v6 + 2) = 0;
  }
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  *((void *)v6 + 2) = 0;
  return v6;
}

void sub_1003710E8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1003710FC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003710FC(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      while (1)
      {
        uint64_t v5 = v2 - 24;
        uint64_t v4 = *(void **)(v2 - 24);
        *(void *)(a1 + 16) = v2 - 24;
        if (!v4) {
          break;
        }
        *(void *)(v2 - 16) = v4;
        operator delete(v4);
        uint64_t v2 = *(void *)(a1 + 16);
        if (v2 == v3) {
          goto LABEL_6;
        }
      }
      v2 -= 24;
    }
    while (v5 != v3);
  }
LABEL_6:
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_10037116C(uint64_t a1)
{
  uint64_t v2 = *(char **)(a1 + 16);
  if (v2 == *(char **)(a1 + 24))
  {
    uint64_t v3 = *(char **)a1;
    uint64_t v4 = *(char **)(a1 + 8);
    if ((unint64_t)v4 <= *(void *)a1)
    {
      unint64_t v11 = 0x5555555555555556 * ((v2 - v3) >> 3);
      if (v2 == v3) {
        unint64_t v11 = 1;
      }
      if (v11 >= 0xAAAAAAAAAAAAAABLL) {
        sub_1000A6A10();
      }
      unint64_t v12 = v11 >> 2;
      uint64_t v13 = 24 * v11;
      unint64_t v14 = (char *)operator new(24 * v11);
      double v15 = &v14[24 * v12];
      BOOL v16 = &v14[v13];
      if (v2 == v4)
      {
        *(void *)a1 = v14;
        *(void *)(a1 + ++*(void *)(result + 8) = v15;
        *(void *)(a1 + 16) = v15;
        *(void *)(a1 + ++*(void *)(result + 24) = v16;
      }
      else
      {
        double v17 = &v15[v2 - v4];
        uint64_t v18 = 24 * v12;
        do
        {
          unint64_t v19 = &v14[v18];
          *(_OWORD *)unint64_t v19 = *(_OWORD *)v4;
          *((void *)v19 + 2) = *((void *)v4 + 2);
          *(void *)uint64_t v4 = 0;
          *((void *)v4 + 1) = 0;
          *((void *)v4 + 2) = 0;
          v18 += 24;
          v4 += 24;
        }
        while (v19 + 24 != v17);
        uint64_t v3 = *(char **)a1;
        uint64_t v20 = *(void *)(a1 + 8);
        uint64_t v21 = *(void *)(a1 + 16);
        *(void *)a1 = v14;
        *(void *)(a1 + ++*(void *)(result + 8) = v15;
        *(void *)(a1 + 16) = v17;
        *(void *)(a1 + ++*(void *)(result + 24) = v16;
        if (v21 != v20)
        {
          uint64_t v22 = v21;
          do
          {
            int64_t v24 = *(void **)(v22 - 24);
            v22 -= 24;
            double v23 = v24;
            if (v24)
            {
              *(void *)(v21 - 16) = v23;
              operator delete(v23);
            }
            uint64_t v21 = v22;
          }
          while (v22 != v20);
        }
      }
      if (v3) {
        operator delete(v3);
      }
      uint64_t v2 = *(char **)(a1 + 16);
    }
    else
    {
      int64_t v5 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)&v4[-*(void *)a1] >> 3);
      if (v5 >= -1) {
        uint64_t v6 = v5 + 1;
      }
      else {
        uint64_t v6 = v5 + 2;
      }
      uint64_t v7 = v6 >> 1;
      uint64_t v8 = -v7;
      if (v4 == v2)
      {
        int v25 = &v4[-24 * v7];
      }
      else
      {
        do
        {
          unint64_t v9 = (void **)&v4[24 * v8];
          unint64_t v10 = *v9;
          if (*v9)
          {
            v9[1] = v10;
            operator delete(v10);
            char *v9 = 0;
            v9[1] = 0;
            void v9[2] = 0;
          }
          *(_OWORD *)unint64_t v9 = *(_OWORD *)v4;
          void v9[2] = (void *)*((void *)v4 + 2);
          *(void *)uint64_t v4 = 0;
          *((void *)v4 + 1) = 0;
          *((void *)v4 + 2) = 0;
          v4 += 24;
        }
        while (v4 != v2);
        uint64_t v2 = *(char **)(a1 + 8);
        int v25 = &v4[24 * v8];
      }
      *(void *)(a1 + ++*(void *)(result + 8) = &v2[24 * v8];
      *(void *)(a1 + 16) = v25;
      uint64_t v2 = v25;
    }
  }
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  *((void *)v2 + 2) = 0;
  *(void *)(a1 + 16) += 24;
}

void sub_100371360()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1003713D8()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100371450()
{
}

void sub_1003715CC(uint64_t a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DB938((uint64_t)va);
  operator delete();
}

void sub_100371600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_100371614()
{
}

void sub_10037174C(void *a1)
{
}

void sub_100371758(_Unwind_Exception *a1)
{
}

void sub_10037176C()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1003717E4()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

uint64_t sub_10037185C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1000CD96C((uint64_t)v49);
  unint64_t v14 = sub_10002986C(v49, (uint64_t)"dimension mismatch between '", 28);
  int v15 = *(char *)(a2 + 23);
  if (v15 >= 0) {
    uint64_t v16 = a2;
  }
  else {
    uint64_t v16 = *(void *)a2;
  }
  if (v15 >= 0) {
    uint64_t v17 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v17 = *(void *)(a2 + 8);
  }
  uint64_t v18 = sub_10002986C(v14, v16, v17);
  sub_10002986C(v18, (uint64_t)"' (", 3);
  unint64_t v19 = (void *)std::ostream::operator<<();
  uint64_t v20 = sub_10002986C(v19, (uint64_t)") and '", 7);
  int v21 = *(char *)(a5 + 23);
  if (v21 >= 0) {
    uint64_t v22 = a5;
  }
  else {
    uint64_t v22 = *(void *)a5;
  }
  if (v21 >= 0) {
    uint64_t v23 = *(unsigned __int8 *)(a5 + 23);
  }
  else {
    uint64_t v23 = *(void *)(a5 + 8);
  }
  int64_t v24 = sub_10002986C(v20, v22, v23);
  sub_10002986C(v24, (uint64_t)"'(", 2);
  int v25 = (void *)std::ostream::operator<<();
  sub_10002986C(v25, (uint64_t)")", 1);
  double v26 = sub_10002986C(v49, (uint64_t)".  ", 3);
  int v27 = *(char *)(a2 + 23);
  if (v27 >= 0) {
    uint64_t v28 = a2;
  }
  else {
    uint64_t v28 = *(void *)a2;
  }
  if (v27 >= 0) {
    uint64_t v29 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    uint64_t v29 = *(void *)(a2 + 8);
  }
  double v30 = sub_10002986C(v26, v28, v29);
  uint64_t v31 = sub_10002986C(v30, (uint64_t)"=", 1);
  int v32 = *(char *)(a4 + 23);
  if (v32 >= 0) {
    uint64_t v33 = a4;
  }
  else {
    uint64_t v33 = *(void *)a4;
  }
  if (v32 >= 0) {
    uint64_t v34 = *(unsigned __int8 *)(a4 + 23);
  }
  else {
    uint64_t v34 = *(void *)(a4 + 8);
  }
  uint64_t v35 = sub_10002986C(v31, v33, v34);
  long long v36 = sub_10002986C(v35, (uint64_t)", ", 2);
  int v37 = *(char *)(a5 + 23);
  if (v37 >= 0) {
    uint64_t v38 = a5;
  }
  else {
    uint64_t v38 = *(void *)a5;
  }
  if (v37 >= 0) {
    uint64_t v39 = *(unsigned __int8 *)(a5 + 23);
  }
  else {
    uint64_t v39 = *(void *)(a5 + 8);
  }
  unint64_t v40 = sub_10002986C(v36, v38, v39);
  uint64_t v41 = sub_10002986C(v40, (uint64_t)"=", 1);
  int v42 = *(char *)(a7 + 23);
  if (v42 >= 0) {
    uint64_t v43 = a7;
  }
  else {
    uint64_t v43 = *(void *)a7;
  }
  if (v42 >= 0) {
    uint64_t v44 = *(unsigned __int8 *)(a7 + 23);
  }
  else {
    uint64_t v44 = *(void *)(a7 + 8);
  }
  sub_10002986C(v41, v43, v44);
  std::stringbuf::str();
  if (v50 < 0) {
    operator delete((void *)v49[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  std::ios::~ios();
  std::logic_error::logic_error((std::logic_error *)a1, &v48);
  if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v48.__r_.__value_.__l.__data_);
  }
  *(void *)a1 = off_10046A658;
  long long v45 = *(_OWORD *)a2;
  *(void *)(a1 + 32) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 16) = v45;
  *(void *)(a2 + ++*(void *)(result + 8) = 0;
  *(void *)(a2 + 16) = 0;
  *(void *)a2 = 0;
  *(void *)(a1 + 40) = a3;
  long long v46 = *(_OWORD *)a5;
  *(void *)(a1 + 64) = *(void *)(a5 + 16);
  *(_OWORD *)(a1 + 4++*(void *)(result + 8) = v46;
  *(void *)(a5 + ++*(void *)(result + 8) = 0;
  *(void *)(a5 + 16) = 0;
  *(void *)a5 = 0;
  *(void *)(a1 + 72) = a6;
  return a1;
}

void sub_100371B74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100371BA8(std::logic_error *this)
{
  this->__vftable = (std::logic_error_vtbl *)off_10046A658;
  if (SHIBYTE(this[4].__vftable) < 0)
  {
    operator delete(this[3].__vftable);
    if ((SHIBYTE(this[2].__vftable) & 0x80000000) == 0)
    {
LABEL_3:
      uint64_t v2 = this;
      goto LABEL_5;
    }
  }
  else if ((SHIBYTE(this[2].__vftable) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(this[1].__vftable);
  uint64_t v2 = this;

LABEL_5:
  std::logic_error::~logic_error(v2);
}

void sub_100371C40(std::logic_error *this)
{
  this->__vftable = (std::logic_error_vtbl *)off_10046A658;
  if (SHIBYTE(this[4].__vftable) < 0)
  {
    operator delete(this[3].__vftable);
    if ((SHIBYTE(this[2].__vftable) & 0x80000000) == 0)
    {
LABEL_3:
      uint64_t v2 = this;
      goto LABEL_5;
    }
  }
  else if ((SHIBYTE(this[2].__vftable) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(this[1].__vftable);
  uint64_t v2 = this;

LABEL_5:
  std::logic_error::~logic_error(v2);
}

void sub_100371CD8(std::logic_error *this)
{
  this->__vftable = (std::logic_error_vtbl *)off_10046A658;
  if (SHIBYTE(this[4].__vftable) < 0)
  {
    operator delete(this[3].__vftable);
    if ((SHIBYTE(this[2].__vftable) & 0x80000000) == 0) {
      goto LABEL_3;
    }
  }
  else if ((SHIBYTE(this[2].__vftable) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(this[1].__vftable);
LABEL_3:
  std::logic_error::~logic_error(this);

  operator delete();
}

void sub_100371D68()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100371DE0()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100371ED8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100371EE8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100371EFC()
{
}

void sub_1003720A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (a21 < 0)
  {
    operator delete(a16);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003721A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1003721C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100372244(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10037225C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100372270()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1003722E8()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100372360()
{
}

void sub_10037241C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100372524(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100372534()
{
}

void sub_1003725C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100372664(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100372674()
{
}

void sub_1003727FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10037294C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10037295C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10037296C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100372ADC()
{
}

void sub_100372C6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a16 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

id sub_100372D2C(uint64_t a1)
{
  return [*(id *)(a1 + 32) onQueueInvalidate];
}

void sub_100372EB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100372ED4(uint64_t a1, void *a2)
{
  return [a2 notifyDevicePowerChanged];
}

void sub_100372FD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_100373020(uint64_t a1, uint64_t a2, void *a3)
{
  return [a3 deviceAttached:a2];
}

id sub_1003730E8(uint64_t a1)
{
  objc_storeWeak((id *)(*(void *)(a1 + 32) + 32), *(id *)(a1 + 40));
  if (*(void *)(a1 + 40))
  {
    [*(id *)(a1 + 32) onQueueRegisterDevices];
    uint64_t v2 = *(void **)(a1 + 40);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = [*(id *)(a1 + 32) isDisabled] ^ 1;

  return [v2 wifiDidChangeIsPowered:v3];
}

id sub_1003731C4(uint64_t a1)
{
  return [*(id *)(a1 + 32) onQueueReEnumerateDevices];
}

void sub_1003732AC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 32));
  [WeakRetained wifiDidChangeIsPowered:[*(id *)(a1 + 32) isDisabled] ^ 1];
}

void sub_10037330C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100373398()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100373410()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100373488()
{
}

void sub_1003734B0(uint64_t a1@<X0>, const void **a2@<X1>, uint64_t a3@<X8>)
{
  int v4 = *((char *)a2 + 23);
  if (v4 >= 0) {
    size_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v5 = (size_t)a2[1];
  }
  unint64_t v6 = v5 + 20;
  if (v5 + 20 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  if (v6 >= 0x17)
  {
    uint64_t v10 = (v6 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v6 | 7) != 0x17) {
      uint64_t v10 = v6 | 7;
    }
    uint64_t v11 = v10 + 1;
    p_dst = (std::string *)operator new(v10 + 1);
    __dst.__r_.__value_.__l.__size_ = v5 + 20;
    __dst.__r_.__value_.__r.__words[2] = v11 | 0x8000000000000000;
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
  }
  else
  {
    memset(&__dst, 0, sizeof(__dst));
    p_dst = &__dst;
    *((unsigned char *)&__dst.__r_.__value_.__s + 23) = v5 + 20;
    if (!v5) {
      goto LABEL_15;
    }
  }
  if (v4 >= 0) {
    unint64_t v12 = a2;
  }
  else {
    unint64_t v12 = *a2;
  }
  memmove(p_dst, v12, v5);
LABEL_15:
  strcpy((char *)p_dst + v5, "-%%%%-%%%%-%%%%-%%%%");
  std::string v16 = __dst;
  if (*(char *)(a1 + 23) < 0) {
    sub_1000559FC(&__p, *(void **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __p = *(std::string *)a1;
  }
  sub_1000512AC(&__p, (uint64_t)&v16);
  sub_10000F010((uint64_t)&__p, 0, (uint64_t)v18);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v16.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_20;
    }
  }
  else if ((SHIBYTE(v16.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_20;
  }
  operator delete(v16.__r_.__value_.__l.__data_);
LABEL_20:
  sub_1000099F0((uint64_t)v18, 0, 0);
  sub_100052228(0, &v16);
  sub_1000AFEE4((uint64_t)v18, (uint64_t)&v16, 0, (unint64_t)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_1000559FC((unsigned char *)a3, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    BOOL v13 = (__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0;
  }
  else
  {
    BOOL v13 = 0;
    *(std::string *)a3 = __p;
  }
  uint64_t v14 = *(unsigned __int8 *)(a3 + 23);
  if ((v14 & 0x80u) != 0) {
    uint64_t v14 = *(void *)(a3 + 8);
  }
  *(unsigned char *)(a3 + ++*(void *)(result + 24) = v14 != 0;
  if (v13)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v16.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_29:
      if ((v19 & 0x80000000) == 0) {
        return;
      }
LABEL_33:
      operator delete(v18[0]);
      return;
    }
  }
  else if ((SHIBYTE(v16.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_29;
  }
  operator delete(v16.__r_.__value_.__l.__data_);
  if (v19 < 0) {
    goto LABEL_33;
  }
}

void sub_1003736F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  if (a25 < 0)
  {
    operator delete(__p);
    if ((a18 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0) {
LABEL_8:
      }
        _Unwind_Resume(exception_object);
LABEL_7:
      operator delete(a26);
      goto LABEL_8;
    }
  }
  else if ((a18 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a13);
  if ((a31 & 0x80000000) == 0) {
    goto LABEL_8;
  }
  goto LABEL_7;
}

unsigned char *sub_1003737A8(unsigned char *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000559FC(__dst, *(void **)a2, *((void *)a2 + 1));
    __dst[24] = *((unsigned char *)a2 + 24);
    if ((*((char *)a2 + 23) & 0x80000000) == 0) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  long long v4 = *a2;
  *((void *)__dst + 2) = *((void *)a2 + 2);
  *(_OWORD *)std::string __dst = v4;
  __dst[24] = *((unsigned char *)a2 + 24);
  if (*((char *)a2 + 23) < 0) {
LABEL_3:
  }
    operator delete(*(void **)a2);
LABEL_4:
  *(void *)a2 = 0;
  *((void *)a2 + 1) = 0;
  *((unsigned char *)a2 + ++*(void *)(result + 24) = 0;
  *((void *)a2 + 2) = 0;
  return __dst;
}

void sub_10037382C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    return;
  }
  if (qword_10047BED8 == -1)
  {
    uint64_t v2 = qword_10047BEE0;
    if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG))
    {
LABEL_4:
      uint64_t v3 = (void *)a1;
      if (*(char *)(a1 + 23) < 0) {
        uint64_t v3 = *(void **)a1;
      }
      int v4 = 136315138;
      size_t v5 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "Removing temporary path %s", (uint8_t *)&v4, 0xCu);
    }
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_10046A6A8);
    uint64_t v2 = qword_10047BEE0;
    if (os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_DEBUG)) {
      goto LABEL_4;
    }
  }
  sub_1000B2334(a1, 0);
  *(unsigned char *)(a1 + ++*(void *)(result + 24) = 0;
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  *(void *)a1 = 0;
  *(void *)(a1 + ++*(void *)(result + 8) = 0;
  *(void *)(a1 + 16) = 0;
}

uint64_t sub_100373950(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_10037399C(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

void sub_1003739CC()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100373A44()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100373ABC(void *a1@<X0>, std::string *a2@<X8>)
{
  sub_100374184((uint64_t)&v23, *(void *)(a1[3] + 8));
  int v4 = std::string::insert(&v23, 0, "Listener ");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v24.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  unint64_t v6 = std::string::append(&v24, " for event ");
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  v25.__r_.__value_.__r.__words[2] = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  sub_100374184((uint64_t)v21, *(void *)(*a1 + 8));
  if ((v22 & 0x80u) == 0) {
    uint64_t v8 = v21;
  }
  else {
    uint64_t v8 = (void **)v21[0];
  }
  if ((v22 & 0x80u) == 0) {
    std::string::size_type v9 = v22;
  }
  else {
    std::string::size_type v9 = (std::string::size_type)v21[1];
  }
  uint64_t v10 = std::string::append(&v25, (const std::string::value_type *)v8, v9);
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v26.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v26.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  unint64_t v12 = std::string::append(&v26, " (0x");
  long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
  v27.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v27.__r_.__value_.__l.__data_ = v13;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  v12->__r_.__value_.__r.__words[0] = 0;
  memset(&__p, 0, sizeof(__p));
  if ((sub_10015E6D8((uint64_t)(a1 + 2), &__p) & 1) == 0)
  {
    char v19 = std::bad_cast::bad_cast(&v29);
    v29.__vftable = (std::bad_cast_vtbl *)&off_100454020;
    sub_1000DB0D4((uint64_t)v19);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  std::string v16 = std::string::append(&v27, (const std::string::value_type *)p_p, size);
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  v28.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  uint64_t v18 = std::string::append(&v28, ")");
  *a2 = *v18;
  v18->__r_.__value_.__l.__size_ = 0;
  v18->__r_.__value_.__r.__words[2] = 0;
  v18->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v28.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_16:
      if ((SHIBYTE(v27.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_17;
      }
      goto LABEL_25;
    }
  }
  else if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_16;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v27.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_17:
    if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_26;
  }
LABEL_25:
  operator delete(v27.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_18:
    if (((char)v22 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_27;
  }
LABEL_26:
  operator delete(v26.__r_.__value_.__l.__data_);
  if (((char)v22 & 0x80000000) == 0)
  {
LABEL_19:
    if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_28;
  }
LABEL_27:
  operator delete(v21[0]);
  if ((SHIBYTE(v25.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_20:
    if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_29;
  }
LABEL_28:
  operator delete(v25.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v24.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_21:
    if ((SHIBYTE(v23.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_30:
    operator delete(v23.__r_.__value_.__l.__data_);
    return;
  }
LABEL_29:
  operator delete(v24.__r_.__value_.__l.__data_);
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_30;
  }
}

void sub_100373D58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47)
{
  if (*(char *)(v47 - 57) < 0)
  {
    operator delete(*(void **)(v47 - 80));
    if ((a15 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v47 - 89) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((a15 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v47 - 89) & 0x80000000) == 0)
  {
LABEL_4:
    if ((a47 & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  operator delete(*(void **)(v47 - 112));
  if ((a47 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a21 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  operator delete(a42);
  if ((a21 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a40 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(a16);
  if ((a40 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a33 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(a35);
  if ((a33 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a27 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(a28);
  if ((a27 & 0x80000000) == 0) {
LABEL_9:
  }
    _Unwind_Resume(exception_object);
LABEL_17:
  operator delete(a22);
  _Unwind_Resume(exception_object);
}

void *sub_100373EAC(void *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = (std::__shared_weak_count *)a2[1];
  uint64_t v6 = *a2;
  long long v7 = v4;
  if (v4) {
    atomic_fetch_add_explicit(&v4->__shared_weak_owners_, 1uLL, memory_order_relaxed);
  }
  sub_1003742B4((uint64_t)&v6, a3, a1);
  if (v7) {
    std::__shared_weak_count::__release_weak(v7);
  }
  return a1;
}

void sub_100373F0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  if (a11) {
    std::__shared_weak_count::__release_weak(a11);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100373F24(uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)a1;
  if (!*(void *)a1) {
    goto LABEL_19;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3 || *(void *)(v3 + 8)) {
    goto LABEL_19;
  }
  int v4 = (std::__shared_weak_count *)v2[1];
  if (!v4)
  {
LABEL_9:
    long long v7 = 0;
    std::string::size_type v9 = v2 + 2;
    if (qword_10047BED8 != -1) {
      goto LABEL_24;
    }
    goto LABEL_10;
  }
  long long v5 = std::__shared_weak_count::lock(v4);
  uint64_t v6 = *(uint64_t **)a1;
  if (!v5)
  {
    uint64_t v2 = *(uint64_t **)a1;
    goto LABEL_9;
  }
  long long v7 = v5;
  uint64_t v8 = *v2;
  if (!*v2)
  {
    std::string::size_type v9 = v6 + 2;
    if (qword_10047BED8 != -1)
    {
LABEL_24:
      dispatch_once(&qword_10047BED8, &stru_10046A6E8);
      uint64_t v10 = qword_10047BEE0;
      if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
        goto LABEL_16;
      }
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v10 = qword_10047BEE0;
    if (!os_log_type_enabled((os_log_t)qword_10047BEE0, OS_LOG_TYPE_INFO)) {
      goto LABEL_16;
    }
LABEL_11:
    sub_100373ABC(v9, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    *(_DWORD *)uint64_t buf = 136315138;
    std::string v16 = p_p;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "WARNING: Registered listener handle %s still active but event bus is gone", buf, 0xCu);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
LABEL_16:
    if (!v7) {
      goto LABEL_19;
    }
    goto LABEL_17;
  }
  std::mutex::lock((std::mutex *)(v8 + 48));
  sub_10016BB0C((void *)v8, v6[2], v6[4], v6[5]);
  std::mutex::unlock((std::mutex *)(v8 + 48));
LABEL_17:
  if (!atomic_fetch_add(&v7->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v7);
  }
LABEL_19:
  unint64_t v12 = *(std::__shared_weak_count **)(a1 + 8);
  if (v12 && !atomic_fetch_add(&v12->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
    std::__shared_weak_count::__release_weak(v12);
  }
  return a1;
}

void sub_100374154(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    std::mutex::unlock(v2);
    sub_1000A6954(exception_object);
  }
  _Unwind_Resume(exception_object);
}

double sub_100374184(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (const void *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
  size_t v4 = strlen((const char *)(a2 & 0x7FFFFFFFFFFFFFFFLL));
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000A6968();
  }
  long long v5 = (void *)v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = (void **)operator new(v7 + 1);
    __dst[1] = v5;
    unint64_t v13 = v8 | 0x8000000000000000;
    __dst[0] = v6;
    goto LABEL_8;
  }
  HIBYTE(v13) = v4;
  uint64_t v6 = __dst;
  if (v4) {
LABEL_8:
  }
    memmove(v6, v3, (size_t)v5);
  *((unsigned char *)v5 + (void)v6) = 0;
  sub_10000DB3C(__dst, (uint64_t)&v10);
  if (SHIBYTE(v13) < 0) {
    operator delete(__dst[0]);
  }
  double result = *(double *)&v10;
  *(_OWORD *)a1 = v10;
  *(void *)(a1 + 16) = v11;
  return result;
}

void sub_100374268(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100374284(id a1)
{
  qword_10047BEE0 = (uint64_t)os_log_create("com.apple.locationd.Pipeline", "Generic");
}

uint64_t sub_1003742B4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = (char *)operator new(0x58uLL);
  *((void *)v6 + 1) = 0;
  *((void *)v6 + 2) = 0;
  *(_OWORD *)(v6 + ++*(void *)(result + 24) = *(_OWORD *)a1;
  *(void *)uint64_t v6 = off_10046A718;
  *(void *)a1 = 0;
  *(void *)(a1 + ++*(void *)(result + 8) = 0;
  uint64_t result = *(void *)(a2 + 8);
  *((void *)v6 + 5) = *(void *)a2;
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 24))(result);
  }
  *((void *)v6 + 6) = result;
  *(_OWORD *)(v6 + 56) = *(_OWORD *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 40);
  *((void *)v6 + 9) = *(void *)(a2 + 32);
  *((void *)v6 + 10) = v8;
  if (v8) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
  }
  *a3 = v6 + 24;
  a3[1] = v6;
  return result;
}

void sub_100374380(_Unwind_Exception *a1)
{
  shared_owners = (std::__shared_weak_count *)v1[1].__shared_owners_;
  if (shared_owners) {
    std::__shared_weak_count::__release_weak(shared_owners);
  }
  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v4);
  _Unwind_Resume(a1);
}

void sub_1003743A4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10046A718;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1003743C4(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10046A718;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

void sub_100374418(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[10];
  if (!v2 || atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    uint64_t v3 = a1[6];
    if (!v3) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  uint64_t v3 = a1[6];
  if (v3) {
LABEL_4:
  }
    (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
LABEL_5:
  size_t v4 = (std::__shared_weak_count *)a1[4];
  if (v4)
  {
    std::__shared_weak_count::__release_weak(v4);
  }
}

void sub_1003744E0()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100374558()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_1003745D0()
{
}

const char *sub_1003745F8(uint64_t a1)
{
  uint64_t result = (const char *)(a1 + 8);
  if (*(char *)(a1 + 31) < 0)
  {
    if (*(void *)(a1 + 16)) {
      return *(const char **)result;
    }
  }
  else if (*(unsigned char *)(a1 + 31))
  {
    return result;
  }
  uint64_t v3 = *(int *)(a1 + 32);
  if (v3 > 7) {
    return "TTransportException: (Invalid exception type)";
  }
  else {
    return off_10046A798[v3];
  }
}

void sub_10037464C(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)off_100454188;
  if (SHIBYTE(this[3].__vftable) < 0) {
    operator delete(this[1].__vftable);
  }
  std::exception::~exception(this);

  operator delete();
}

void sub_1003746C0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  sub_100374B90(a1, a2, a3, a4);
  wireless_diagnostics::google::protobuf::DescriptorPool::generated_pool(v4);
  std::string __p = operator new(0x28uLL);
  long long v7 = xmmword_1003F1850;
  strcpy((char *)__p, "protobuf/gen/indoor_availability.proto");
  uint64_t FileByName = wireless_diagnostics::google::protobuf::DescriptorPool::FindFileByName();
  operator delete(__p);
  if (!FileByName)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)&__p);
  }
  qword_10047E788 = *(void *)(FileByName + 80);
  operator new();
}

void sub_100374B10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100374B24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100374B38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_100374B90(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if ((byte_10047E780 & 1) == 0)
  {
    byte_10047E780 = 1;
    uint64_t v4 = wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (int)"/Library/Caches/com.apple.xbs/Sources/purpleslam/protobuf/gen/indoor_availability.pb.cc", a4);
    sub_1001B85BC(v4, v5, v6, v7);
    sub_1001BAAC8(v8, v9, v10, v11);
    sub_10032DA30(v12, v13, v14, v15);
    wireless_diagnostics::google::protobuf::DescriptorPool::InternalAddGeneratedFile((wireless_diagnostics::google::protobuf::DescriptorPool *)"\n&protobuf/gen/indoor_availability.proto\x12\x12proto.availability\x1A'protobuf/gen/locationd_parameters.proto\x1A\x1Dprotobuf/gen/parameters.proto\x1A\x18protobuf/gen/venue.proto\"O\n\rLatLonPolygon\x12\x14\n\blatitude\x18\x01 \x03(\x01B\x02\x10\x01\x12\x15\n\tlongitude\x18\x02 \x03(\x01B\x02\x10\x01\x12\x11\n\ttolerance\x18\x03 \x02(\x01\"A\n\x19TileDownloadConfiguration\x12$\n\x1CfloorIdxsForWifiDownloadOnly\x18\x01 \x03(\r\"\xC2\x02\n\vVenueBounds\x12\v\n\x03ids\x18\x01 \x03(\t\x124\n\texteriors\x18\x03 \x03(\v2!.proto.availability.LatLonPolygon\x12P\n\x19tileDownloadConfiguration\x18\x05 \x01(\v2-.proto.availability.TileDownloadConfiguration\x12-\n\acontext\x18\x06 \x01(\x0E2\x1C.proto.venue.LocationCon"
                                                                "text\x12>\n"
                                                                "\x13DEPRECATED_exterior\x18\x02 \x01(\v2!.proto.availabi"
                                                                "lity.LatLonPolygon\x12/\n"
                                                                "'DEPRECATED_floorIdxsForWifiDownloadOnly\x18\x04 \x03(\r"
                                                                "\"\x99\x06\n"
                                                                "\x10AvailabilityTile\x12/\n"
                                                                "\x06venues\x18\x01 \x03(\v2\x1F.proto.availability.Venue"
                                                                "Bounds\x12=\n"
                                                                "\x12parameterOverrides\x18\x10 \x01(\v2!.proto.params.Lo"
                                                                "calizerParameters\x122\n"
                                                                "$availabilityZScoreConfidenceInterval\x18\x11 \x01(\x01:"
                                                                "\x041.96\x12#\n"
                                                                "\x16indoorPrefetchRadiusKM\x18\x12 \x01(\r:\x03200\x12%\n"
                                                                "\x18regionalPrefetchRadiusKM\x18\x16 \x01(\r:\x03200\x12"
                                                                "(\n"
                                                                "\x1BindoorPrefetchMaxFloorCount\x18\x13 \x01(\r:\x03200\x12"
                                                                "*\n"
                                                                "\x1DregionalPrefetchMaxFloorCount\x18\x17 \x01(\r:\x0320"
                                                                "0\x12.\n"
                                                                "\x1BindoorPrefetchMaxTotalBytes\x18\x19 \x01(\r:\t200000"
                                                                "000\x120\n"
                                                                "\x1DregionalPrefetchMaxTotalBytes\x18\x1A \x01(\r:\t1000"
                                                                "00000\x121\n"
                                                                "%indoorLocationOfInterestMergeRadiusKM\x18\x14 \x01(\r:\x02"
                                                                "50\x123\n"
                                                                "'regionalLocationOfInterestMergeRadiusKM\x18\x18 \x01(\r"
                                                                ":\x0250\x120\n"
                                                                "%preferPredictionWithinNActivityCycles\x18\x15 \x01(\r:\x01"
                                                                "1\x121\n"
                                                                "&indoorNumberOfDaysBeforeTileRedownload\x18\x1B \x01(\x02"
                                                                ":\x017\x123\n"
                                                                "(regionalNumberOfDaysBeforeTileRedownload\x18\x1C \x01(\x02"
                                                                ":\x017\x12[\n"
                                                                " motionActivityDebounceParameters\x18\x1D \x01(\v21.prot"
                                                                "o.locationd.MotionActivityDebounceParameters\"\xC8\x02\n"
                                                                "\x18AvailabilityTileMetadata\x12\f\n"
                                                                "\x04uuid\x18\x01 \x01(\t\x12\x15\n"
                                                                "\rtimeGenerated\x18\x02 \x01(\x01\x12\x10\n"
                                                                "\bnumTiles\x18\x03 \x01(\r\x12\x11\n"
                                                                "\tnumVenues\x18\x04 \x01(\r\x12\x11\n"
                                                                "\tsizeBytes\x18\x05 \x01(\r\x12\x1B\n"
                                                                "\x13compressedSizeBytes\x18\x06 \x01(\r\x12\x13\n"
                                                                "\vgeneratedBy\x18\a \x01(\t\x12\x17\n"
                                                                "\x0FgeneratedReason\x18\b \x01(\t\x12\x1B\n"
                                                                "\x13numOverriddenParams\x18\t \x01(\r\x12\f\n"
                                                                "\x04sha1\x18\n"
                                                                " \x01(\f\x12\x11\n"
                                                                "\tnumGroups\x18\v \x01(\r\x12F\n"
                                                                "\btileType\x18\f \x01(\x0E2(.proto.availability.Availabi"
                                                                "lityTileType:\n"
                                                                "IndoorOnly\"m\n"
                                                                "\x1BGroupedAvailabilityLocation\x12\x12\n"
                                                                "\n"
                                                                "locationId\x18\x01 \x01(\t\x12\x0F\n"
                                                                "\agroupId\x18\x02 \x01(\t\x12\x0F\n"
                                                                "\avenueId\x18\x03 \x01(\t\x12\v\n"
                                                                "\x03lat\x18\x04 \x01(\x01\x12\v\n"
                                                                "\x03lng\x18\x05 \x01(\x01\"\xB8\x01\n"
                                                                "\x17AvailabilityTileDetails\x12\f\n"
                                                                "\x04uuid\x18\x01 \x01(\t\x12\x11\n"
                                                                "\ttileUuids\x18\x02 \x03(\t\x122\n"
                                                                "\x04tile\x18\x03 \x01(\v2$.proto.availability.Availabili"
                                                                "tyTile\x12H\n"
                                                                "\x0FgroupingDetails\x18\x04 \x03(\v2/.proto.availability"
                                                                ".GroupedAvailabilityLocation*>\n"
                                                                "\x14AvailabilityTileType\x12\x0E\n"
                                                                "\n"
                                                                "IndoorOnly\x10\x01\x12\x16\n"
                                                                "\x12IndoorPlusRegional\x10\x02B\x1F\n"
                                                                "\x1Dcom.apple.indoor.availability",
      (const void *)0x869,
      v16);
    wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedFile();
    operator new();
  }
}

void sub_100374F70()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100374F9C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100374FC8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100374FF4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100375020()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10037504C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100375078()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_1003750A4()
{
  if (qword_100492AB8) {
    (*(void (**)(uint64_t))(*(void *)qword_100492AB8 + 8))(qword_100492AB8);
  }
  if (qword_10047E790) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E790 + 8))(qword_10047E790);
  }
  if (qword_100492AC0) {
    (*(void (**)(uint64_t))(*(void *)qword_100492AC0 + 8))(qword_100492AC0);
  }
  if (qword_10047E7A0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E7A0 + 8))(qword_10047E7A0);
  }
  if (qword_100492AC8) {
    (*(void (**)(uint64_t))(*(void *)qword_100492AC8 + 8))(qword_100492AC8);
  }
  if (qword_10047E7B0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E7B0 + 8))(qword_10047E7B0);
  }
  if (qword_100492AD0) {
    (*(void (**)(uint64_t))(*(void *)qword_100492AD0 + 8))(qword_100492AD0);
  }
  if (qword_10047E7C0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E7C0 + 8))(qword_10047E7C0);
  }
  if (qword_100492AD8) {
    (*(void (**)(uint64_t))(*(void *)qword_100492AD8 + 8))(qword_100492AD8);
  }
  if (qword_10047E7D0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E7D0 + 8))(qword_10047E7D0);
  }
  if (qword_100492AE0) {
    (*(void (**)(uint64_t))(*(void *)qword_100492AE0 + 8))(qword_100492AE0);
  }
  if (qword_10047E7E0) {
    (*(void (**)(uint64_t))(*(void *)qword_10047E7E0 + 8))(qword_10047E7E0);
  }
  if (qword_100492AE8) {
    (*(void (**)(uint64_t))(*(void *)qword_100492AE8 + 8))(qword_100492AE8);
  }
  uint64_t result = qword_10047E7F0;
  if (qword_10047E7F0)
  {
    uint64_t v1 = *(uint64_t (**)(void))(*(void *)qword_10047E7F0 + 8);
    return v1();
  }
  return result;
}

uint64_t sub_10037536C()
{
  uint64_t v0 = qword_10047E800;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v8[1] = sub_1003746C0;
    char v9 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v8);
  }
  if (!qword_100492AB8) {
    ((void (*)(void))sub_100374B90)();
  }
  uint64_t v1 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_100492AC0) {
    sub_100374B90(v1);
  }
  uint64_t v2 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_100492AC8) {
    sub_100374B90(v2);
  }
  uint64_t v3 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_100492AD0) {
    sub_100374B90(v3);
  }
  uint64_t v4 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_100492AD8) {
    sub_100374B90(v4);
  }
  uint64_t v5 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_100492AE0) {
    sub_100374B90(v5);
  }
  uint64_t v6 = wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
  if (!qword_100492AE8) {
    sub_100374B90(v6);
  }
  return wireless_diagnostics::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage();
}

void sub_100375504(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *sub_100375518(void *a1)
{
  *a1 = off_10046A7E8;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[5] = 0;
  a1[6] = 0;
  a1[8] = 0;
  a1[9] = 0;
  return a1;
}

void sub_100375568(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void *sub_10037557C(void *a1)
{
  *a1 = off_10046A898;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0;
  return a1;
}

void sub_1003755C8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1003755DC(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = *(_DWORD *)(a1 + 24);
    int v6 = *(_DWORD *)(a1 + 28);
    int v7 = v5 + v4;
    if (v6 < v7)
    {
      int v8 = 2 * v6;
      if (2 * v6 <= v7) {
        int v8 = v7;
      }
      if (v8 <= 4) {
        int v8 = 4;
      }
      *(_DWORD *)(a1 + 2++*(void *)(result + 8) = v8;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 16) + 8 * v5), *(const void **)(a2 + 16), 8 * *(int *)(a2 + 24));
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    int v10 = *(_DWORD *)(a1 + 48);
    int v11 = *(_DWORD *)(a1 + 52);
    int v12 = v10 + v9;
    if (v11 < v12)
    {
      int v13 = 2 * v11;
      if (2 * v11 <= v12) {
        int v13 = v12;
      }
      if (v13 <= 4) {
        int v13 = 4;
      }
      *(_DWORD *)(a1 + 52) = v13;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 40) + 8 * v10), *(const void **)(a2 + 40), 8 * *(int *)(a2 + 48));
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
  }
  if ((*(unsigned char *)(a2 + 76) & 4) != 0)
  {
    uint64_t v14 = *(void *)(a2 + 64);
    *(_DWORD *)(a1 + 76) |= 4u;
    *(void *)(a1 + 64) = v14;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_1003757EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100375800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100375814(void *a1)
{
  *a1 = off_10046A7E8;
  if (a1[5]) {
    operator delete[]();
  }
  if (a1[2]) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

uint64_t sub_1003758A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 72) = a2;
  return result;
}

void sub_1003758AC()
{
}

void sub_100375914()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10037593C(uint64_t a1)
{
  if ((*(_WORD *)(a1 + 76) & 0x3FC) != 0) {
    *(void *)(a1 + 64) = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 10) = 0;
  *((_DWORD *)result + 17) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100375968(uint64_t result, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  if (*(int *)(result + 24) >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2, 0xAu);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2, *(_DWORD *)(v4 + 32));
    if (*(int *)(v4 + 24) >= 1)
    {
      uint64_t v5 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian64(a2, *(void *)(*(void *)(v4 + 16) + 8 * v5++));
      while (v5 < *(int *)(v4 + 24));
    }
  }
  if (*(int *)(v4 + 48) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2, 0x12u);
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2, *(_DWORD *)(v4 + 56));
    if (*(int *)(v4 + 48) >= 1)
    {
      uint64_t v6 = 0;
      do
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian64(a2, *(void *)(*(void *)(v4 + 40) + 8 * v6++));
      while (v6 < *(int *)(v4 + 48));
    }
  }
  if ((*(unsigned char *)(v4 + 76) & 4) != 0) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (int)a2, *(double *)(v4 + 64), a3);
  }
  int v9 = *(void **)(v4 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

unsigned char *sub_100375A90(wireless_diagnostics::google::protobuf::internal::WireFormat *this, unsigned char *a2, unsigned __int8 *a3)
{
  if (*((int *)this + 6) >= 1)
  {
    *a2 = 10;
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if (v4 > 0x7F)
    {
      a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v4, (int)a2 + 1, a3);
      if (*((int *)this + 6) < 1) {
        goto LABEL_8;
      }
    }
    else
    {
      a2[1] = (_BYTE)v4;
      a2 += 2;
      if (*((int *)this + 6) < 1) {
        goto LABEL_8;
      }
    }
    uint64_t v5 = 0;
    do
    {
      *(void *)a2 = *(void *)(*((void *)this + 2) + 8 * v5);
      a2 += 8;
      ++v5;
    }
    while (v5 < *((int *)this + 6));
  }
LABEL_8:
  if (*((int *)this + 12) <= 0) {
    goto LABEL_15;
  }
  *a2 = 18;
  uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
  if (v6 > 0x7F)
  {
    a2 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, (int)a2 + 1, a3);
    if (*((int *)this + 12) < 1) {
      goto LABEL_15;
    }
  }
  else
  {
    a2[1] = (_BYTE)v6;
    a2 += 2;
    if (*((int *)this + 12) < 1) {
      goto LABEL_15;
    }
  }
  uint64_t v7 = 0;
  do
  {
    *(void *)a2 = *(void *)(*((void *)this + 5) + 8 * v7);
    a2 += 8;
    ++v7;
  }
  while (v7 < *((int *)this + 12));
LABEL_15:
  if ((*((unsigned char *)this + 76) & 4) != 0)
  {
    uint64_t v8 = *((void *)this + 8);
    *a2 = 25;
    *(void *)(a2 + 1) = v8;
    a2 += 9;
  }
  int v11 = (void *)*((void *)this + 1);
  int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v9 = v11;
  if (!v11 || *v9 == v9[1]) {
    return a2;
  }

  return (unsigned char *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)a2, a3);
}

uint64_t sub_100375C24(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = (*(unsigned __int8 *)(a1 + 76) << 29 >> 31) & 9;
  int v4 = *(_DWORD *)(a1 + 24);
  unsigned int v5 = 8 * v4;
  if (v4 >= 1)
  {
    if (v5 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v4), a2)+ 1;
    }
    else {
      int v6 = 2;
    }
    v3 += v6;
  }
  *(_DWORD *)(a1 + 32) = v5;
  unsigned int v7 = v3 + v5;
  int v8 = *(_DWORD *)(a1 + 48);
  unsigned int v9 = 8 * v8;
  if (v8 >= 1)
  {
    if (v9 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v8), a2)+ 1;
    }
    else {
      int v10 = 2;
    }
    v7 += v10;
  }
  int v11 = *(void **)(a1 + 8);
  *(_DWORD *)(a1 + 56) = v9;
  uint64_t v12 = v7 + v9;
  if (v11 && *v11 != v11[1]) {
    uint64_t v12 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v12;
  }
  *(_DWORD *)(a1 + 72) = v12;
  return v12;
}

uint64_t sub_100375CF4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_1003755DC((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100375DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100375DE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100375DFC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100375E88(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 76) >> 2) & 1;
}

uint64_t sub_100375E94()
{
  uint64_t v0 = qword_10047E800;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1003746C0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E788;
}

void sub_100375F24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100375F38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 32) = a2;
  return result;
}

void sub_100375F40()
{
}

void sub_100375FA4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100375FCC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + 7) = 0;
  if (v2) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_100375FE4(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t *a2)
{
  unsigned int v14 = 0;
  uint64_t v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v14);
    if (!result) {
      return result;
    }
    unsigned int v5 = v14;
  }
  else
  {
    unsigned int v5 = *v4;
    unsigned int v14 = v5;
    *((void *)this + 1) = v4 + 1;
  }
  int v7 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v5);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      unsigned int v13 = 0;
      int v10 = (char *)*((void *)this + 1);
      if ((unint64_t)v10 >= *((void *)this + 2) || *v10 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v13);
        if (!result) {
          return result;
        }
      }
      else
      {
        unsigned int v13 = *v10;
        *((void *)this + 1) = v10 + 1;
      }
      int v11 = *((_DWORD *)a2 + 2);
      if (v11 == *((_DWORD *)a2 + 3))
      {
        if (2 * v11 <= v11 + 1) {
          int v12 = v11 + 1;
        }
        else {
          int v12 = 2 * v11;
        }
        if (v12 <= 4) {
          int v12 = 4;
        }
        *((_DWORD *)a2 + 3) = v12;
        operator new[]();
      }
      uint64_t v8 = *a2;
      unsigned int v9 = v13;
      *((_DWORD *)a2 + 2) = v11 + 1;
      *(_DWORD *)(v8 + 4 * v11) = v9;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v7);
  return 1;
}

uint64_t sub_100376178(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(_DWORD *)(*(void *)(v5 + 16) + 4 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  unsigned int v9 = *(void **)(v5 + 8);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  int v7 = v9;
  if (v9 && *v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100376214(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3)
{
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      while (1)
      {
        uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 2)
                                                                                              + 4 * v5);
        *(unsigned char *)a2 = 8;
        if (v6 <= 0x7F) {
          break;
        }
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v6, (int)a2 + 1, a3);
        if (++v5 >= *((int *)this + 6)) {
          goto LABEL_6;
        }
      }
      *((unsigned char *)a2 + 1) = (_BYTE)v6;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      ++v5;
    }
    while (v5 < *((int *)this + 6));
  }
LABEL_6:
  unsigned int v9 = (void *)*((void *)this + 1);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v7 = v9;
  if (!v9 || *v7 == v7[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, a2, a3);
}

uint64_t sub_1003762E0(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 24);
  if (v3 < 1)
  {
    uint64_t v8 = v3;
    unsigned int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v10 = *(void **)(a1 + 8);
    if (!v10)
    {
LABEL_7:
      *(_DWORD *)(a1 + 32) = v8;
      return v8;
    }
  }
  else
  {
    uint64_t v4 = 0;
    int v5 = 0;
    do
    {
      while (1)
      {
        int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 16)
                                                                                              + 4 * v4);
        if (v7 < 0x80) {
          break;
        }
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7, a2);
        int v3 = *(_DWORD *)(a1 + 24);
        v5 += v6;
        if (++v4 >= v3) {
          goto LABEL_6;
        }
      }
      ++v5;
      ++v4;
    }
    while (v4 < v3);
LABEL_6:
    uint64_t v8 = (v3 + v5);
    unsigned int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    int v10 = *(void **)(a1 + 8);
    if (!v10) {
      goto LABEL_7;
    }
  }
  if (*v10 == v10[1]) {
    goto LABEL_7;
  }
  uint64_t v12 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v9, a2)
      + v8;
  *(_DWORD *)(a1 + 32) = v12;
  return v12;
}

uint64_t sub_1003763B4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10006C568((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100376494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_1003764A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003764BC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100376548()
{
  return 1;
}

uint64_t sub_100376550()
{
  uint64_t v0 = qword_10047E800;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1003746C0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E798;
}

void sub_1003765E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1003765F4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 12);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*(void *)a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *(_DWORD *)(a1 + 12);
      }
    }
  }
  if (*(void *)a1) {
    operator delete[]();
  }
  return a1;
}

uint64_t sub_10037668C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_10046A948;
  wireless_diagnostics::google::protobuf::UnknownFieldSet::UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + ++*(void *)(result + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 4++*(void *)(result + 8) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 8++*(void *)(result + 8) = 0;
  *(void *)(a1 + 96) = 1;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 104) = 0;
  sub_100376794(a1, a2);
  return a1;
}

void sub_100376738(_Unwind_Exception *a1)
{
  if (*v5) {
    operator delete[]();
  }
  sub_1003765F4(v4);
  sub_10012219C(v3);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

void sub_100376780(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::Message::~Message(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_100376794(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v25);
  }
  uint64_t v4 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), *(_DWORD *)(a2 + 24) + *(_DWORD *)(a1 + 24));
  if (*(int *)(a2 + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      while (1)
      {
        unsigned int v9 = *(const std::string **)(*(void *)(a2 + 16) + 8 * v5);
        int v10 = *(_DWORD *)(a1 + 28);
        uint64_t v11 = *(int *)(a1 + 24);
        if ((int)v11 >= v10) {
          break;
        }
        uint64_t v12 = *(void *)(a1 + 16);
        *(_DWORD *)(a1 + ++*(void *)(result + 24) = v11 + 1;
        uint64_t v4 = std::string::operator=(*(std::string **)(v12 + 8 * v11), v9);
        if (++v5 >= *(int *)(a2 + 24)) {
          goto LABEL_11;
        }
      }
      if (v10 == *(_DWORD *)(a1 + 32))
      {
        uint64_t v4 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), v10 + 1);
        int v10 = *(_DWORD *)(a1 + 28);
      }
      *(_DWORD *)(a1 + 2++*(void *)(result + 8) = v10 + 1;
      int v6 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)v4);
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v8 = *(int *)(a1 + 24);
      *(_DWORD *)(a1 + ++*(void *)(result + 24) = v8 + 1;
      *(void *)(v7 + 8 * v++*(void *)(result + 8) = v6;
      uint64_t v4 = std::string::operator=(v6, v9);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 24));
  }
LABEL_11:
  sub_10037CCC8((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 40), a2 + 40);
  int v13 = *(_DWORD *)(a2 + 88);
  if (v13)
  {
    int v14 = *(_DWORD *)(a1 + 88);
    int v15 = *(_DWORD *)(a1 + 92);
    int v16 = v14 + v13;
    if (v15 < v16)
    {
      int v17 = 2 * v15;
      if (2 * v15 <= v16) {
        int v17 = v16;
      }
      if (v17 <= 4) {
        int v17 = 4;
      }
      *(_DWORD *)(a1 + 92) = v17;
      operator new[]();
    }
    memcpy((void *)(*(void *)(a1 + 80) + 4 * v14), *(const void **)(a2 + 80), 4 * *(int *)(a2 + 88));
    *(_DWORD *)(a1 + 88) += *(_DWORD *)(a2 + 88);
  }
  int v18 = *(_DWORD *)(a2 + 104);
  if ((v18 & 0x3FC) != 0)
  {
    if ((v18 & 4) != 0)
    {
      *(_DWORD *)(a1 + 104) |= 4u;
      uint64_t v19 = *(void *)(a1 + 64);
      if (!v19) {
        operator new();
      }
      uint64_t v20 = *(void *)(a2 + 64);
      if (!v20) {
        uint64_t v20 = *(void *)(qword_100492AC8 + 64);
      }
      sub_10006C568(v19, v20);
      int v18 = *(_DWORD *)(a2 + 104);
    }
    if ((v18 & 8) != 0)
    {
      int v21 = *(_DWORD *)(a2 + 96);
      *(_DWORD *)(a1 + 104) |= 8u;
      *(_DWORD *)(a1 + 96) = v21;
      int v18 = *(_DWORD *)(a2 + 104);
    }
    if ((v18 & 0x10) != 0)
    {
      *(_DWORD *)(a1 + 104) |= 0x10u;
      uint64_t v22 = *(void *)(a1 + 72);
      if (!v22) {
        operator new();
      }
      uint64_t v23 = *(void *)(a2 + 72);
      if (!v23) {
        uint64_t v23 = *(void *)(qword_100492AC8 + 72);
      }
      sub_1003755DC(v22, v23);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100376AEC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100376B14()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_100376B3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100376B50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100376B68(uint64_t a1)
{
  sub_10006768C(a1);

  operator delete();
}

uint64_t sub_100376BA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 100) = a2;
  return result;
}

void sub_100376BA8()
{
}

void sub_100376C2C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100376C54(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 104);
  if ((v2 & 0x3FC) != 0)
  {
    if ((v2 & 4) != 0)
    {
      this = *(void *)(this + 64);
      if (this)
      {
        uint64_t v3 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 16) = 0;
        *(_DWORD *)(this + 2++*(void *)(result + 8) = 0;
        if (v3) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
    *(_DWORD *)(v1 + 96) = 1;
    if ((*(unsigned char *)(v1 + 104) & 0x10) != 0)
    {
      this = *(void *)(v1 + 72);
      if (this)
      {
        if ((*(_WORD *)(this + 76) & 0x3FC) != 0) {
          *(void *)(this + 64) = 0;
        }
        uint64_t v4 = *(void *)(this + 8);
        this += 8;
        *(_DWORD *)(this + 16) = 0;
        *(_DWORD *)(this + 40) = 0;
        *(_DWORD *)(this + 6++*(void *)(result + 8) = 0;
        if (v4) {
          this = wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback((wireless_diagnostics::google::protobuf::UnknownFieldSet *)this);
        }
      }
    }
  }
  if (*(int *)(v1 + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      while (1)
      {
        uint64_t v6 = *(void *)(*(void *)(v1 + 16) + 8 * v5);
        if (*(char *)(v6 + 23) < 0) {
          break;
        }
        *(unsigned char *)uint64_t v6 = 0;
        *(unsigned char *)(v6 + 23) = 0;
        if (++v5 >= *(int *)(v1 + 24)) {
          goto LABEL_17;
        }
      }
      **(unsigned char **)uint64_t v6 = 0;
      *(void *)(v6 + ++*(void *)(result + 8) = 0;
      ++v5;
    }
    while (v5 < *(int *)(v1 + 24));
  }
LABEL_17:
  *(_DWORD *)(v1 + ++*(void *)(result + 24) = 0;
  if (*(int *)(v1 + 48) >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = *(void *)(*(void *)(v1 + 40) + 8 * v7);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v8 + 32))(v8);
      ++v7;
    }
    while (v7 < *(int *)(v1 + 48));
  }
  uint64_t v10 = *(void *)(v1 + 8);
  unsigned int v9 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v9 + 10) = 0;
  *((_DWORD *)v9 + 20) = 0;
  *((_DWORD *)v9 + ++*(void *)(result + 24) = 0;
  if (v10)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v9);
  }
  return this;
}

uint64_t sub_100376DD4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      ++v6;
    }
    while (v6 < *(int *)(v5 + 24));
  }
  if ((*(unsigned char *)(v5 + 104) & 0x10) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 72);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_100492AC8 + 72);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  }
  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 40) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 48));
  }
  if (*(int *)(v5 + 88) >= 1)
  {
    uint64_t v9 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(*(void *)(v5 + 80) + 4 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 88));
  }
  int v10 = *(_DWORD *)(v5 + 104);
  if ((v10 & 4) != 0)
  {
    uint64_t v14 = *(void *)(v5 + 64);
    if (v14)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v14, a2, a4);
      if ((*(_DWORD *)(v5 + 104) & 8) != 0) {
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(qword_100492AC8 + 64), a2, a4);
      if ((*(_DWORD *)(v5 + 104) & 8) != 0) {
        goto LABEL_22;
      }
    }
LABEL_16:
    int v13 = *(void **)(v5 + 8);
    uint64_t v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v11 = v13;
    if (!v13) {
      return result;
    }
    goto LABEL_23;
  }
  if ((v10 & 8) == 0) {
    goto LABEL_16;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 96), (int)a2, a4);
  int v15 = *(void **)(v5 + 8);
  uint64_t v12 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v11 = v15;
  if (!v15) {
    return result;
  }
LABEL_23:
  if (*v11 != v11[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v12, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100376F68(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  if (*((int *)this + 6) >= 1)
  {
    for (uint64_t i = 0; i < *((int *)this + 6); ++i)
    {
      uint64_t v11 = *(void *)(*((void *)this + 2) + 8 * i);
      *(unsigned char *)a2 = 10;
      if (*(char *)(v11 + 23) < 0)
      {
        uint64_t v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v11 + 8);
        if (v12 <= 0x7F)
        {
LABEL_15:
          *((unsigned char *)a2 + 1) = (_BYTE)v12;
          int v7 = a2 + 2;
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v11 + 23);
        if (*(unsigned __int8 *)(v11 + 23) <= 0x7Fu) {
          goto LABEL_15;
        }
      }
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, (int)a2 + 1, a3);
LABEL_4:
      int v8 = *(char *)(v11 + 23);
      if (v8 >= 0) {
        uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11;
      }
      else {
        uint64_t v9 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v11;
      }
      if (v8 >= 0) {
        int v10 = (const void *)*(unsigned __int8 *)(v11 + 23);
      }
      else {
        int v10 = (const void *)*(unsigned int *)(v11 + 8);
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v9, v10, v7, a4);
    }
  }
  if ((*((unsigned char *)this + 104) & 0x10) != 0)
  {
    int v13 = (unsigned int *)*((void *)this + 9);
    if (v13)
    {
      *(unsigned char *)a2 = 18;
      unsigned int v14 = a2 + 1;
      int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[18];
      if (v15 <= 0x7F)
      {
LABEL_19:
        *((unsigned char *)a2 + 1) = (_BYTE)v15;
        int v16 = (char *)a2 + 2;
LABEL_22:
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100375A90((wireless_diagnostics::google::protobuf::internal::WireFormat *)v13, v16, a3);
        goto LABEL_23;
      }
    }
    else
    {
      int v13 = *(unsigned int **)(qword_100492AC8 + 72);
      *(unsigned char *)a2 = 18;
      unsigned int v14 = a2 + 1;
      int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13[18];
      if (v15 <= 0x7F) {
        goto LABEL_19;
      }
    }
    int v16 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v15, v14, a3);
    goto LABEL_22;
  }
LABEL_23:
  if (*((int *)this + 12) >= 1)
  {
    uint64_t v17 = 0;
    do
    {
      uint64_t v19 = *(unsigned int **)(*((void *)this + 5) + 8 * v17);
      *(unsigned char *)a2 = 26;
      uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19[18];
      if (v20 > 0x7F)
      {
        int v18 = (unsigned char *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, (int)a2 + 1, a3);
      }
      else
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v20;
        int v18 = (char *)a2 + 2;
      }
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)sub_100375A90((wireless_diagnostics::google::protobuf::internal::WireFormat *)v19, v18, a3);
      ++v17;
    }
    while (v17 < *((int *)this + 12));
  }
  if (*((int *)this + 22) >= 1)
  {
    uint64_t v21 = 0;
    do
    {
      while (1)
      {
        uint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 10)
                                                                                               + 4 * v21);
        *(unsigned char *)a2 = 32;
        if (v22 <= 0x7F) {
          break;
        }
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, (int)a2 + 1, a3);
        if (++v21 >= *((int *)this + 22)) {
          goto LABEL_34;
        }
      }
      *((unsigned char *)a2 + 1) = (_BYTE)v22;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      ++v21;
    }
    while (v21 < *((int *)this + 22));
  }
LABEL_34:
  if ((*((unsigned char *)this + 104) & 4) != 0)
  {
    uint64_t v23 = *((void *)this + 8);
    if (v23)
    {
      *(unsigned char *)a2 = 42;
      unsigned int v24 = a2 + 1;
      std::string v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v23 + 32);
      if (v25 <= 0x7F) {
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v23 = *(void *)(qword_100492AC8 + 64);
      *(unsigned char *)a2 = 42;
      unsigned int v24 = a2 + 1;
      std::string v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v23 + 32);
      if (v25 <= 0x7F)
      {
LABEL_37:
        *((unsigned char *)a2 + 1) = (_BYTE)v25;
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
        if (*(int *)(v23 + 24) < 1) {
          goto LABEL_45;
        }
        goto LABEL_41;
      }
    }
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, v24, a3);
    if (*(int *)(v23 + 24) < 1)
    {
LABEL_45:
      double v30 = *(void **)(v23 + 8);
      std::bad_cast v29 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v23 + 8);
      std::string v28 = v30;
      if (v30 && *v28 != v28[1]) {
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v29, a2, a3);
      }
      goto LABEL_48;
    }
LABEL_41:
    uint64_t v26 = 0;
    do
    {
      while (1)
      {
        std::string v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(v23 + 16)
                                                                                               + 4 * v26);
        *(unsigned char *)a2 = 8;
        if (v27 <= 0x7F) {
          break;
        }
        a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, (int)a2 + 1, a3);
        if (++v26 >= *(int *)(v23 + 24)) {
          goto LABEL_45;
        }
      }
      *((unsigned char *)a2 + 1) = (_BYTE)v27;
      a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      ++v26;
    }
    while (v26 < *(int *)(v23 + 24));
    goto LABEL_45;
  }
LABEL_48:
  if ((*((unsigned char *)this + 104) & 8) == 0) {
    goto LABEL_52;
  }
  uint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 24);
  *(unsigned char *)a2 = 48;
  int v32 = (char *)a2 + 1;
  if ((v31 & 0x80000000) != 0)
  {
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v31, (unint64_t)v32, a3);
    long long v36 = (void *)*((void *)this + 1);
    uint64_t v34 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v33 = v36;
    if (!v36) {
      return a2;
    }
    goto LABEL_57;
  }
  if (v31 <= 0x7F)
  {
    *((unsigned char *)a2 + 1) = (_BYTE)v31;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
LABEL_52:
    uint64_t v35 = (void *)*((void *)this + 1);
    uint64_t v34 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v33 = v35;
    if (!v35) {
      return a2;
    }
    goto LABEL_57;
  }
  a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, v32, a3);
  int v37 = (void *)*((void *)this + 1);
  uint64_t v34 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v33 = v37;
  if (!v37) {
    return a2;
  }
LABEL_57:
  if (*v33 == v33[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v34, a2, a3);
}

uint64_t sub_1003772DC(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 104);
  if ((v3 & 0x3FC) == 0)
  {
    int v5 = *(_DWORD *)(a1 + 24);
    int v6 = v5;
    if (v5 < 1) {
      goto LABEL_61;
    }
    goto LABEL_51;
  }
  if ((v3 & 4) == 0)
  {
    int v4 = 0;
    if ((v3 & 8) == 0) {
      goto LABEL_29;
    }
    goto LABEL_23;
  }
  uint64_t v7 = *(void *)(a1 + 64);
  if (v7)
  {
    int v8 = *(_DWORD *)(v7 + 24);
    if (v8 >= 1) {
      goto LABEL_9;
    }
LABEL_15:
    int v10 = 0;
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)(qword_100492AC8 + 64);
  int v8 = *(_DWORD *)(v7 + 24);
  if (v8 < 1) {
    goto LABEL_15;
  }
LABEL_9:
  uint64_t v9 = 0;
  int v10 = 0;
  do
  {
    while (1)
    {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(v7 + 16)
                                                                                             + 4 * v9);
      if (v12 < 0x80) {
        break;
      }
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
      int v8 = *(_DWORD *)(v7 + 24);
      v10 += v11;
      if (++v9 >= v8) {
        goto LABEL_16;
      }
    }
    ++v10;
    ++v9;
  }
  while (v9 < v8);
LABEL_16:
  unint64_t v13 = (v8 + v10);
  unsigned int v14 = *(void **)(v7 + 8);
  if (v14 && *v14 != v14[1]) {
    unint64_t v13 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v7 + 8), a2)+ v13;
  }
  *(_DWORD *)(v7 + 32) = v13;
  if (v13 >= 0x80)
  {
    int v4 = v13
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13, a2)+ 1;
    int v3 = *(_DWORD *)(a1 + 104);
    if ((v3 & 8) == 0) {
      goto LABEL_29;
    }
  }
  else
  {
    int v4 = v13 + 2;
    int v3 = *(_DWORD *)(a1 + 104);
    if ((v3 & 8) == 0) {
      goto LABEL_29;
    }
  }
LABEL_23:
  int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 96);
  if ((v15 & 0x80000000) != 0)
  {
    int v16 = 10;
  }
  else if (v15 >= 0x80)
  {
    int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15, a2);
    int v3 = *(_DWORD *)(a1 + 104);
  }
  else
  {
    int v16 = 1;
  }
  v4 += v16 + 1;
LABEL_29:
  if ((v3 & 0x10) == 0)
  {
    int v5 = *(_DWORD *)(a1 + 24);
    int v6 = v5 + v4;
    if (v5 < 1) {
      goto LABEL_61;
    }
    goto LABEL_51;
  }
  uint64_t v17 = *(void *)(a1 + 72);
  if (!v17) {
    uint64_t v17 = *(void *)(qword_100492AC8 + 72);
  }
  int v18 = (*(unsigned __int8 *)(v17 + 76) << 29 >> 31) & 9;
  int v19 = *(_DWORD *)(v17 + 24);
  unsigned int v20 = 8 * v19;
  if (v19 >= 1)
  {
    if (v20 >= 0x80) {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v19), a2)+ 1;
    }
    else {
      int v21 = 2;
    }
    v18 += v21;
  }
  *(_DWORD *)(v17 + 32) = v20;
  unsigned int v22 = v18 + v20;
  int v23 = *(_DWORD *)(v17 + 48);
  unsigned int v24 = 8 * v23;
  if (v23 >= 1)
  {
    if (v24 >= 0x80) {
      int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v23), a2)+ 1;
    }
    else {
      int v25 = 2;
    }
    v22 += v25;
  }
  uint64_t v26 = *(void **)(v17 + 8);
  *(_DWORD *)(v17 + 56) = v24;
  std::string v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v22 + v24);
  if (v26 && *v26 != v26[1]) {
    std::string v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v17 + 8), a2)+ v27);
  }
  *(_DWORD *)(v17 + 72) = v27;
  if (v27 >= 0x80) {
    int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27, a2);
  }
  else {
    int v28 = 1;
  }
  int v5 = *(_DWORD *)(a1 + 24);
  int v6 = v5 + v4 + v27 + v28 + 1;
  if (v5 >= 1)
  {
LABEL_51:
    for (uint64_t i = 0; i < v5; ++i)
    {
      uint64_t v34 = *(void *)(*(void *)(a1 + 16) + 8 * i);
      int v31 = *(unsigned __int8 *)(v34 + 23);
      char v33 = v31;
      uint64_t v32 = *(void *)(v34 + 8);
      if ((v31 & 0x80u) == 0) {
        unint64_t v35 = *(unsigned __int8 *)(v34 + 23);
      }
      else {
        unint64_t v35 = v32;
      }
      if (v35 >= 0x80)
      {
        int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v35, a2);
        int v31 = *(unsigned __int8 *)(v34 + 23);
        uint64_t v32 = *(void *)(v34 + 8);
        int v5 = *(_DWORD *)(a1 + 24);
        char v33 = *(unsigned char *)(v34 + 23);
      }
      else
      {
        int v30 = 1;
      }
      if (v33 < 0) {
        int v31 = v32;
      }
      v6 += v30 + v31;
    }
  }
LABEL_61:
  int v36 = *(_DWORD *)(a1 + 48);
  int v37 = v36 + v6;
  if (v36 >= 1)
  {
    uint64_t v38 = 0;
    do
    {
      uint64_t v40 = *(void *)(*(void *)(a1 + 40) + 8 * v38);
      int v41 = (*(unsigned __int8 *)(v40 + 76) << 29 >> 31) & 9;
      int v42 = *(_DWORD *)(v40 + 24);
      unsigned int v43 = 8 * v42;
      if (v42 >= 1)
      {
        if (v43 >= 0x80) {
          int v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v42), a2)+ 1;
        }
        else {
          int v44 = 2;
        }
        v41 += v44;
      }
      *(_DWORD *)(v40 + 32) = v43;
      unsigned int v45 = v41 + v43;
      int v46 = *(_DWORD *)(v40 + 48);
      unsigned int v47 = 8 * v46;
      if (v46 >= 1)
      {
        if (v47 >= 0x80) {
          int v48 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(8 * v46), a2)+ 1;
        }
        else {
          int v48 = 2;
        }
        v45 += v48;
      }
      unint64_t v49 = *(void **)(v40 + 8);
      *(_DWORD *)(v40 + 56) = v47;
      char v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v45 + v47);
      if (v49 && *v49 != v49[1]) {
        char v50 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(v40 + 8), a2)+ v50);
      }
      *(_DWORD *)(v40 + 72) = v50;
      if (v50 >= 0x80) {
        int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v50, a2);
      }
      else {
        int v39 = 1;
      }
      v37 += v50 + v39;
      ++v38;
    }
    while (v38 < *(int *)(a1 + 48));
  }
  int v51 = *(_DWORD *)(a1 + 88);
  if (v51 < 1)
  {
    uint64_t v56 = (v37 + v51);
    double v57 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
    double v58 = *(void **)(a1 + 8);
    if (!v58) {
      goto LABEL_90;
    }
    goto LABEL_88;
  }
  uint64_t v52 = 0;
  int v53 = 0;
  do
  {
    while (1)
    {
      BOOL v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*(void *)(a1 + 80)
                                                                                             + 4 * v52);
      if (v55 < 0x80) {
        break;
      }
      int v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55, a2);
      int v51 = *(_DWORD *)(a1 + 88);
      v53 += v54;
      if (++v52 >= v51) {
        goto LABEL_85;
      }
    }
    ++v53;
    ++v52;
  }
  while (v52 < v51);
LABEL_85:
  uint64_t v56 = (v53 + v37 + v51);
  double v57 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  double v58 = *(void **)(a1 + 8);
  if (v58)
  {
LABEL_88:
    if (*v58 != v58[1]) {
      uint64_t v56 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v57, a2)+ v56;
    }
  }
LABEL_90:
  *(_DWORD *)(a1 + 100) = v56;
  return v56;
}

uint64_t sub_100377754(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100376794((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100377834(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100377848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10037785C(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_1003778E8(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    return sub_100376794(v4, a2);
  }
  return result;
}

uint64_t sub_100377954(uint64_t a1)
{
  if (*(int *)(a1 + 48) < 1)
  {
LABEL_5:
    if ((*(unsigned char *)(a1 + 104) & 0x10) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 72);
      if (v4)
      {
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 40))(v4);
        if (!result) {
          return result;
        }
      }
      else
      {
        uint64_t result = (*(uint64_t (**)(void))(**(void **)(qword_100492AC8 + 72) + 40))(*(void *)(qword_100492AC8 + 72));
        if (!result) {
          return result;
        }
      }
    }
    return 1;
  }
  uint64_t v2 = 0;
  while (1)
  {
    uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8 * v2);
    if (((*(uint64_t (**)(uint64_t))(*(void *)v3 + 40))(v3) & 1) == 0) {
      return 0;
    }
    if (++v2 >= *(int *)(a1 + 48)) {
      goto LABEL_5;
    }
  }
}

uint64_t sub_100377A50()
{
  uint64_t v0 = qword_10047E800;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1003746C0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E7A8;
}

void sub_100377AE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100377AF4(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
    sub_10037CE10((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), a2 + 16);
    int v4 = *(_DWORD *)(a2 + 112);
    if ((v4 & 0x1FE) == 0) {
      goto LABEL_17;
    }
  }
  else
  {
    sub_10037CE10((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 16), a2 + 16);
    int v4 = *(_DWORD *)(a2 + 112);
    if ((v4 & 0x1FE) == 0) {
      goto LABEL_17;
    }
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 112) |= 2u;
    uint64_t v5 = *(void *)(a1 + 40);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = *(void *)(a2 + 40);
    if (!v6) {
      uint64_t v6 = *(void *)(qword_100492AD0 + 40);
    }
    sub_10003E17C(v5, v6);
    int v4 = *(_DWORD *)(a2 + 112);
  }
  if ((v4 & 4) != 0)
  {
    uint64_t v17 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 112) |= 4u;
    *(void *)(a1 + 4++*(void *)(result + 8) = v17;
    int v4 = *(_DWORD *)(a2 + 112);
    if ((v4 & 8) == 0)
    {
LABEL_12:
      if ((v4 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_39;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_12;
  }
  int v18 = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 112) |= 8u;
  *(_DWORD *)(a1 + 56) = v18;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x10) == 0)
  {
LABEL_13:
    if ((v4 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_40;
  }
LABEL_39:
  int v19 = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a1 + 112) |= 0x10u;
  *(_DWORD *)(a1 + 60) = v19;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x20) == 0)
  {
LABEL_14:
    if ((v4 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_41;
  }
LABEL_40:
  int v20 = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 112) |= 0x20u;
  *(_DWORD *)(a1 + 64) = v20;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x40) == 0)
  {
LABEL_15:
    if ((v4 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_41:
  int v21 = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 112) |= 0x40u;
  *(_DWORD *)(a1 + 6++*(void *)(result + 8) = v21;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x80) != 0)
  {
LABEL_16:
    int v7 = *(_DWORD *)(a2 + 72);
    *(_DWORD *)(a1 + 112) |= 0x80u;
    *(_DWORD *)(a1 + 72) = v7;
    int v4 = *(_DWORD *)(a2 + 112);
  }
LABEL_17:
  if ((v4 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if ((v4 & 0x100) != 0)
  {
    int v8 = *(_DWORD *)(a2 + 76);
    *(_DWORD *)(a1 + 112) |= 0x100u;
    *(_DWORD *)(a1 + 76) = v8;
    int v4 = *(_DWORD *)(a2 + 112);
    if ((v4 & 0x200) == 0)
    {
LABEL_20:
      if ((v4 & 0x400) == 0) {
        goto LABEL_21;
      }
      goto LABEL_28;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_20;
  }
  int v9 = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 112) |= 0x200u;
  *(_DWORD *)(a1 + 80) = v9;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x400) == 0)
  {
LABEL_21:
    if ((v4 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v10 = *(_DWORD *)(a2 + 84);
  *(_DWORD *)(a1 + 112) |= 0x400u;
  *(_DWORD *)(a1 + 84) = v10;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x800) == 0)
  {
LABEL_22:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v11 = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a1 + 112) |= 0x800u;
  *(_DWORD *)(a1 + 8++*(void *)(result + 8) = v11;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x1000) == 0)
  {
LABEL_23:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_24;
    }
LABEL_31:
    int v13 = *(_DWORD *)(a2 + 104);
    *(_DWORD *)(a1 + 112) |= 0x2000u;
    *(_DWORD *)(a1 + 104) = v13;
    if ((*(_DWORD *)(a2 + 112) & 0x4000) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_32;
  }
LABEL_30:
  int v12 = *(_DWORD *)(a2 + 92);
  *(_DWORD *)(a1 + 112) |= 0x1000u;
  *(_DWORD *)(a1 + 92) = v12;
  int v4 = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x2000) != 0) {
    goto LABEL_31;
  }
LABEL_24:
  if ((v4 & 0x4000) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
LABEL_32:
  *(_DWORD *)(a1 + 112) |= 0x4000u;
  unsigned int v14 = *(_DWORD **)(a1 + 96);
  if (!v14) {
    operator new();
  }
  uint64_t v15 = *(void *)(a2 + 96);
  if (!v15) {
    uint64_t v15 = *(void *)(qword_100492AD0 + 96);
  }
  sub_1001B8890(v14, v15);
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_100377E04()
{
}

void sub_100377E28()
{
}

void sub_100377E4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100377E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100377E74(uint64_t a1)
{
  sub_10006DA8C(a1);

  operator delete();
}

uint64_t sub_100377EAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 10++*(void *)(result + 8) = a2;
  return result;
}

void sub_100377EB4()
{
}

void sub_100377F58()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_100377FF4(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(int *)(result + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  int v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 2) != 0)
  {
    uint64_t v11 = *(void *)(v5 + 40);
    if (v11)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v11, a2, a4);
      int v7 = *(_DWORD *)(v5 + 112);
      if ((v7 & 4) != 0) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(void *)(qword_100492AD0 + 40), a2, a4);
      int v7 = *(_DWORD *)(v5 + 112);
      if ((v7 & 4) != 0) {
        goto LABEL_24;
      }
    }
LABEL_6:
    if ((v7 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_25;
  }
  if ((v7 & 4) == 0) {
    goto LABEL_6;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, (int)a2, *(double *)(v5 + 48), a3);
  int v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 8) == 0)
  {
LABEL_7:
    if ((v7 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(_DWORD *)(v5 + 56), a2, a4);
  int v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 0x20) == 0)
  {
LABEL_8:
    if ((v7 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(_DWORD *)(v5 + 64), a2, a4);
  int v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 0x200) == 0)
  {
LABEL_9:
    if ((v7 & 0x800) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(_DWORD *)(v5 + 80), a2, a4);
  int v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 0x800) == 0)
  {
LABEL_10:
    if ((v7 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(_DWORD *)(v5 + 88), a2, a4);
  int v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 0x10) == 0)
  {
LABEL_11:
    if ((v7 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(_DWORD *)(v5 + 60), a2, a4);
  int v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 0x40) == 0)
  {
LABEL_12:
    if ((v7 & 0x400) == 0) {
      goto LABEL_13;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, *(_DWORD *)(v5 + 68), a2, a4);
  int v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 0x400) == 0)
  {
LABEL_13:
    if ((v7 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_32;
  }
LABEL_31:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(_DWORD *)(v5 + 84), a2, a4);
  int v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 0x80) == 0)
  {
LABEL_14:
    if ((v7 & 0x100) == 0) {
      goto LABEL_15;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, *(_DWORD *)(v5 + 72), a2, a4);
  int v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 0x100) == 0)
  {
LABEL_15:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, *(_DWORD *)(v5 + 76), a2, a4);
  int v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 0x1000) == 0)
  {
LABEL_16:
    if ((v7 & 0x2000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, (int)a2, *(float *)(v5 + 92), a3);
  int v7 = *(_DWORD *)(v5 + 112);
  if ((v7 & 0x2000) == 0)
  {
LABEL_17:
    if ((v7 & 0x4000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_36;
  }
LABEL_35:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, (int)a2, *(float *)(v5 + 104), a3);
  if ((*(_DWORD *)(v5 + 112) & 0x4000) == 0)
  {
LABEL_18:
    int v10 = *(void **)(v5 + 8);
    int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v8 = v10;
    if (!v10) {
      return result;
    }
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v12 = *(void *)(v5 + 96);
  if (v12)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, v12, a2, a4);
    int v13 = *(void **)(v5 + 8);
    int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v8 = v13;
    if (!v13) {
      return result;
    }
  }
  else
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, *(void *)(qword_100492AD0 + 96), a2, a4);
    unsigned int v14 = *(void **)(v5 + 8);
    int v9 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    int v8 = v14;
    if (!v14) {
      return result;
    }
  }
LABEL_40:
  if (*v8 != v8[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v9, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100378270(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  if (*((int *)this + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      int v8 = *(unsigned int **)(*((void *)this + 2) + 8 * v6);
      *(unsigned char *)a2 = 10;
      int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8[25];
      if (v9 > 0x7F)
      {
        int v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v9, (int)a2 + 1, a3);
      }
      else
      {
        *((unsigned char *)a2 + 1) = (_BYTE)v9;
        int v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = sub_100376F68((wireless_diagnostics::google::protobuf::internal::WireFormat *)v8, v7, a3, a4);
      ++v6;
    }
    while (v6 < *((int *)this + 6));
  }
  int v10 = *((_DWORD *)this + 28);
  if ((v10 & 2) != 0)
  {
    uint64_t v15 = (unsigned int *)*((void *)this + 5);
    if (v15)
    {
      *(_WORD *)a2 = 386;
      unsigned int v16 = a2 + 2;
      uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15[74];
      if (v17 <= 0x7F) {
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v15 = *(unsigned int **)(qword_100492AD0 + 40);
      *(_WORD *)a2 = 386;
      unsigned int v16 = a2 + 2;
      uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15[74];
      if (v17 <= 0x7F)
      {
LABEL_25:
        *((unsigned char *)a2 + 2) = (_BYTE)v17;
        a2 = sub_1001C669C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v15, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3), a3);
        int v10 = *((_DWORD *)this + 28);
        if ((v10 & 4) != 0) {
          goto LABEL_29;
        }
LABEL_9:
        if ((v10 & 8) == 0) {
          goto LABEL_10;
        }
LABEL_30:
        int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
        *(_WORD *)a2 = 400;
        if (v21 > 0x7F)
        {
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (int)a2 + 2, a3);
          if ((*((unsigned char *)this + 112) & 0x20) != 0) {
            goto LABEL_34;
          }
        }
        else
        {
          *((unsigned char *)a2 + 2) = (_BYTE)v21;
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          if ((*((unsigned char *)this + 112) & 0x20) != 0) {
            goto LABEL_34;
          }
        }
LABEL_11:
        if ((*((unsigned char *)this + 113) & 2) == 0) {
          goto LABEL_12;
        }
LABEL_38:
        int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 20);
        *(_WORD *)a2 = 416;
        if (v23 > 0x7F)
        {
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, (int)a2 + 2, a3);
          if ((*((unsigned char *)this + 113) & 8) != 0) {
            goto LABEL_42;
          }
        }
        else
        {
          *((unsigned char *)a2 + 2) = (_BYTE)v23;
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          if ((*((unsigned char *)this + 113) & 8) != 0) {
            goto LABEL_42;
          }
        }
LABEL_13:
        if ((*((unsigned char *)this + 112) & 0x10) == 0) {
          goto LABEL_14;
        }
LABEL_46:
        int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
        *(_WORD *)a2 = 432;
        if (v25 > 0x7F)
        {
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, (int)a2 + 2, a3);
          if ((*((unsigned char *)this + 112) & 0x40) != 0) {
            goto LABEL_50;
          }
        }
        else
        {
          *((unsigned char *)a2 + 2) = (_BYTE)v25;
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          if ((*((unsigned char *)this + 112) & 0x40) != 0) {
            goto LABEL_50;
          }
        }
LABEL_15:
        if ((*((unsigned char *)this + 113) & 4) == 0) {
          goto LABEL_16;
        }
LABEL_54:
        std::string v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 21);
        *(_WORD *)a2 = 448;
        if (v27 > 0x7F)
        {
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, (int)a2 + 2, a3);
          if ((*((unsigned char *)this + 112) & 0x80) != 0) {
            goto LABEL_58;
          }
        }
        else
        {
          *((unsigned char *)a2 + 2) = (_BYTE)v27;
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          if ((*((unsigned char *)this + 112) & 0x80) != 0) {
            goto LABEL_58;
          }
        }
LABEL_17:
        if ((*((unsigned char *)this + 113) & 1) == 0) {
          goto LABEL_18;
        }
LABEL_62:
        std::bad_cast v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 19);
        *(_WORD *)a2 = 464;
        if (v29 > 0x7F)
        {
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v29, (int)a2 + 2, a3);
          int v11 = *((_DWORD *)this + 28);
          if ((v11 & 0x1000) != 0) {
            goto LABEL_66;
          }
        }
        else
        {
          *((unsigned char *)a2 + 2) = (_BYTE)v29;
          a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          int v11 = *((_DWORD *)this + 28);
          if ((v11 & 0x1000) != 0) {
            goto LABEL_66;
          }
        }
LABEL_19:
        if ((v11 & 0x2000) == 0) {
          goto LABEL_20;
        }
        goto LABEL_67;
      }
    }
    int v18 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v17, v16, a3);
    a2 = sub_1001C669C((wireless_diagnostics::google::protobuf::internal::WireFormat *)v15, v18, v19);
    int v10 = *((_DWORD *)this + 28);
    if ((v10 & 4) != 0) {
      goto LABEL_29;
    }
    goto LABEL_9;
  }
  if ((v10 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_29:
  uint64_t v20 = *((void *)this + 6);
  *(_WORD *)a2 = 393;
  *(void *)((char *)a2 + 2) = v20;
  a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 10);
  if ((*((_DWORD *)this + 28) & 8) != 0) {
    goto LABEL_30;
  }
LABEL_10:
  if ((*((unsigned char *)this + 112) & 0x20) == 0) {
    goto LABEL_11;
  }
LABEL_34:
  unsigned int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
  *(_WORD *)a2 = 408;
  if (v22 > 0x7F)
  {
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, (int)a2 + 2, a3);
    if ((*((unsigned char *)this + 113) & 2) != 0) {
      goto LABEL_38;
    }
  }
  else
  {
    *((unsigned char *)a2 + 2) = (_BYTE)v22;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
    if ((*((unsigned char *)this + 113) & 2) != 0) {
      goto LABEL_38;
    }
  }
LABEL_12:
  if ((*((unsigned char *)this + 113) & 8) == 0) {
    goto LABEL_13;
  }
LABEL_42:
  unsigned int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
  *(_WORD *)a2 = 424;
  if (v24 > 0x7F)
  {
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v24, (int)a2 + 2, a3);
    if ((*((unsigned char *)this + 112) & 0x10) != 0) {
      goto LABEL_46;
    }
  }
  else
  {
    *((unsigned char *)a2 + 2) = (_BYTE)v24;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
    if ((*((unsigned char *)this + 112) & 0x10) != 0) {
      goto LABEL_46;
    }
  }
LABEL_14:
  if ((*((unsigned char *)this + 112) & 0x40) == 0) {
    goto LABEL_15;
  }
LABEL_50:
  uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
  *(_WORD *)a2 = 440;
  if (v26 > 0x7F)
  {
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v26, (int)a2 + 2, a3);
    if ((*((unsigned char *)this + 113) & 4) != 0) {
      goto LABEL_54;
    }
  }
  else
  {
    *((unsigned char *)a2 + 2) = (_BYTE)v26;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
    if ((*((unsigned char *)this + 113) & 4) != 0) {
      goto LABEL_54;
    }
  }
LABEL_16:
  if ((*((unsigned char *)this + 112) & 0x80) == 0) {
    goto LABEL_17;
  }
LABEL_58:
  int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
  *(_WORD *)a2 = 456;
  if (v28 > 0x7F)
  {
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v28, (int)a2 + 2, a3);
    if (*((unsigned char *)this + 113)) {
      goto LABEL_62;
    }
  }
  else
  {
    *((unsigned char *)a2 + 2) = (_BYTE)v28;
    a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
    if (*((unsigned char *)this + 113)) {
      goto LABEL_62;
    }
  }
LABEL_18:
  int v11 = *((_DWORD *)this + 28);
  if ((v11 & 0x1000) == 0) {
    goto LABEL_19;
  }
LABEL_66:
  int v30 = *((_DWORD *)this + 23);
  *(_WORD *)a2 = 477;
  *(_DWORD *)((char *)a2 + 2) = v30;
  a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 6);
  int v11 = *((_DWORD *)this + 28);
  if ((v11 & 0x2000) == 0)
  {
LABEL_20:
    if ((v11 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_68;
  }
LABEL_67:
  int v31 = *((_DWORD *)this + 26);
  *(_WORD *)a2 = 485;
  *(_DWORD *)((char *)a2 + 2) = v31;
  a2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 6);
  if ((*((_DWORD *)this + 28) & 0x4000) == 0)
  {
LABEL_21:
    unsigned int v14 = (void *)*((void *)this + 1);
    int v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    uint64_t v12 = v14;
    if (!v14) {
      return a2;
    }
    goto LABEL_74;
  }
LABEL_68:
  uint64_t v32 = (unsigned int *)*((void *)this + 12);
  if (v32)
  {
    *(_WORD *)a2 = 490;
    unsigned int v33 = a2 + 2;
    uint64_t v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v32[8];
    if (v34 <= 0x7F) {
      goto LABEL_70;
    }
  }
  else
  {
    uint64_t v32 = *(unsigned int **)(qword_100492AD0 + 96);
    *(_WORD *)a2 = 490;
    unsigned int v33 = a2 + 2;
    uint64_t v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v32[8];
    if (v34 <= 0x7F)
    {
LABEL_70:
      *((unsigned char *)a2 + 2) = (_BYTE)v34;
      a2 = sub_1001B9034((wireless_diagnostics::google::protobuf::internal::WireFormat *)v32, (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)a2 + 3), a3);
      unint64_t v35 = (void *)*((void *)this + 1);
      int v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
      uint64_t v12 = v35;
      if (!v35) {
        return a2;
      }
      goto LABEL_74;
    }
  }
  int v36 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v34, v33, a3);
  a2 = sub_1001B9034((wireless_diagnostics::google::protobuf::internal::WireFormat *)v32, v36, v37);
  uint64_t v38 = (void *)*((void *)this + 1);
  int v13 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  uint64_t v12 = v38;
  if (!v38) {
    return a2;
  }
LABEL_74:
  if (*v12 == v12[1]) {
    return a2;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v13, a2, a3);
}

uint64_t sub_10037877C(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 112);
  if ((v3 & 0x1FE) == 0)
  {
    int v4 = 0;
    if ((v3 & 0xFF00) == 0) {
      goto LABEL_78;
    }
    goto LABEL_45;
  }
  if ((v3 & 2) == 0)
  {
    if ((v3 & 4) != 0) {
      int v4 = 10;
    }
    else {
      int v4 = 0;
    }
    if ((v3 & 8) == 0) {
      goto LABEL_23;
    }
LABEL_19:
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 56);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8, a2);
      int v3 = *(_DWORD *)(a1 + 112);
    }
    else
    {
      int v9 = 1;
    }
    v4 += v9 + 2;
    goto LABEL_23;
  }
  uint64_t v5 = *(void *)(a1 + 40);
  if (v5)
  {
    uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C7AA8(v5, a2);
    if (v6 < 0x80)
    {
LABEL_12:
      int v7 = 1;
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001C7AA8(*(void *)(qword_100492AD0 + 40), a2);
    if (v6 < 0x80) {
      goto LABEL_12;
    }
  }
  int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6, a2);
LABEL_15:
  int v3 = *(_DWORD *)(a1 + 112);
  if ((v3 & 4) != 0) {
    int v4 = v6 + v7 + 12;
  }
  else {
    int v4 = v6 + v7 + 2;
  }
  if ((v3 & 8) != 0) {
    goto LABEL_19;
  }
LABEL_23:
  if ((v3 & 0x10) != 0)
  {
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 60);
    if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10, a2);
      int v3 = *(_DWORD *)(a1 + 112);
      v4 += v11 + 2;
      if ((v3 & 0x20) != 0) {
        goto LABEL_33;
      }
    }
    else
    {
      v4 += 3;
      if ((v3 & 0x20) != 0) {
        goto LABEL_33;
      }
    }
LABEL_25:
    if ((v3 & 0x40) == 0) {
      goto LABEL_26;
    }
LABEL_37:
    unsigned int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 68);
    if (v14 >= 0x80)
    {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
      int v3 = *(_DWORD *)(a1 + 112);
      v4 += v15 + 2;
      if ((v3 & 0x80) != 0) {
        goto LABEL_41;
      }
    }
    else
    {
      v4 += 3;
      if ((v3 & 0x80) != 0) {
        goto LABEL_41;
      }
    }
LABEL_27:
    if ((v3 & 0xFF00) == 0) {
      goto LABEL_78;
    }
    goto LABEL_45;
  }
  if ((v3 & 0x20) == 0) {
    goto LABEL_25;
  }
LABEL_33:
  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 64);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
    int v3 = *(_DWORD *)(a1 + 112);
    v4 += v13 + 2;
    if ((v3 & 0x40) != 0) {
      goto LABEL_37;
    }
  }
  else
  {
    v4 += 3;
    if ((v3 & 0x40) != 0) {
      goto LABEL_37;
    }
  }
LABEL_26:
  if ((v3 & 0x80) == 0) {
    goto LABEL_27;
  }
LABEL_41:
  unsigned int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
  if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
    int v3 = *(_DWORD *)(a1 + 112);
    v4 += v17 + 2;
    if ((v3 & 0xFF00) == 0) {
      goto LABEL_78;
    }
  }
  else
  {
    v4 += 3;
    if ((v3 & 0xFF00) == 0) {
      goto LABEL_78;
    }
  }
LABEL_45:
  if ((v3 & 0x100) == 0)
  {
    if ((v3 & 0x200) == 0) {
      goto LABEL_47;
    }
LABEL_54:
    uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 80);
    if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20, a2);
      int v3 = *(_DWORD *)(a1 + 112);
      v4 += v21 + 2;
      if ((v3 & 0x400) != 0) {
        goto LABEL_58;
      }
    }
    else
    {
      v4 += 3;
      if ((v3 & 0x400) != 0) {
        goto LABEL_58;
      }
    }
LABEL_48:
    if ((v3 & 0x800) == 0) {
      goto LABEL_66;
    }
    goto LABEL_62;
  }
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 76);
  if (v18 >= 0x80)
  {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
    int v3 = *(_DWORD *)(a1 + 112);
    v4 += v19 + 2;
    if ((v3 & 0x200) != 0) {
      goto LABEL_54;
    }
  }
  else
  {
    v4 += 3;
    if ((v3 & 0x200) != 0) {
      goto LABEL_54;
    }
  }
LABEL_47:
  if ((v3 & 0x400) == 0) {
    goto LABEL_48;
  }
LABEL_58:
  unsigned int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 84);
  if (v22 >= 0x80)
  {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22, a2);
    int v3 = *(_DWORD *)(a1 + 112);
    v4 += v23 + 2;
    if ((v3 & 0x800) == 0) {
      goto LABEL_66;
    }
  }
  else
  {
    v4 += 3;
    if ((v3 & 0x800) == 0) {
      goto LABEL_66;
    }
  }
LABEL_62:
  unsigned int v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 88);
  if (v24 >= 0x80)
  {
    int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24, a2) + 2;
    int v3 = *(_DWORD *)(a1 + 112);
  }
  else
  {
    int v25 = 3;
  }
  v4 += v25;
LABEL_66:
  int v26 = v4 + 6;
  if ((v3 & 0x1000) == 0) {
    int v26 = v4;
  }
  if ((v3 & 0x2000) != 0) {
    int v4 = v26 + 6;
  }
  else {
    int v4 = v26;
  }
  if ((v3 & 0x4000) != 0)
  {
    uint64_t v27 = *(void *)(a1 + 96);
    if (v27)
    {
      int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001B91A4(v27, a2);
      if (v28 < 0x80)
      {
LABEL_74:
        int v29 = 1;
LABEL_77:
        v4 += v28 + v29 + 2;
        goto LABEL_78;
      }
    }
    else
    {
      int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1001B91A4(*(void *)(qword_100492AD0 + 96), a2);
      if (v28 < 0x80) {
        goto LABEL_74;
      }
    }
    int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28, a2);
    goto LABEL_77;
  }
LABEL_78:
  int v30 = *(_DWORD *)(a1 + 24);
  uint64_t v31 = (v30 + v4);
  if (v30 >= 1)
  {
    uint64_t v32 = 0;
    do
    {
      uint64_t v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_1003772DC(*(void *)(*(void *)(a1 + 16) + 8 * v32), a2);
      int v35 = (int)v34;
      if (v34 >= 0x80) {
        int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v34, a2);
      }
      else {
        int v33 = 1;
      }
      uint64_t v31 = (v35 + v31 + v33);
      ++v32;
    }
    while (v32 < *(int *)(a1 + 24));
  }
  int v36 = *(void **)(a1 + 8);
  if (v36 && *v36 != v36[1]) {
    uint64_t v31 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v31;
  }
  *(_DWORD *)(a1 + 10++*(void *)(result + 8) = v31;
  return v31;
}

uint64_t sub_100378B08(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100377AF4((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_100378BE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100378BFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100378C10(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_100378C9C()
{
  uint64_t v0 = qword_10047E800;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1003746C0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E7B8;
}

void sub_100378D2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100378D40(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
  }
  int v4 = *(_DWORD *)(a2 + 88);
  if (!(_BYTE)v4) {
    goto LABEL_12;
  }
  if (v4)
  {
    uint64_t v5 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 88) |= 1u;
    uint64_t v6 = *(std::string **)(a1 + 16);
    if (v6 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v6, v5);
    int v4 = *(_DWORD *)(a2 + 88);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v7 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 88) |= 2u;
  *(void *)(a1 + ++*(void *)(result + 24) = v7;
  int v4 = *(_DWORD *)(a2 + 88);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v8 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 88) |= 4u;
  *(_DWORD *)(a1 + 32) = v8;
  int v4 = *(_DWORD *)(a2 + 88);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  int v9 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a1 + 88) |= 8u;
  *(_DWORD *)(a1 + 36) = v9;
  int v4 = *(_DWORD *)(a2 + 88);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  int v10 = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 88) |= 0x10u;
  *(_DWORD *)(a1 + 40) = v10;
  int v4 = *(_DWORD *)(a2 + 88);
  if ((v4 & 0x20) == 0)
  {
LABEL_10:
    if ((v4 & 0x40) == 0) {
      goto LABEL_11;
    }
    goto LABEL_22;
  }
LABEL_21:
  int v11 = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 88) |= 0x20u;
  *(_DWORD *)(a1 + 44) = v11;
  int v4 = *(_DWORD *)(a2 + 88);
  if ((v4 & 0x40) != 0)
  {
LABEL_22:
    uint64_t v12 = *(const std::string **)(a2 + 48);
    *(_DWORD *)(a1 + 88) |= 0x40u;
    int v13 = *(std::string **)(a1 + 48);
    if (v13 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v13, v12);
    int v4 = *(_DWORD *)(a2 + 88);
    if ((v4 & 0x80) != 0) {
      goto LABEL_25;
    }
LABEL_12:
    if ((v4 & 0xFF00) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_28;
  }
LABEL_11:
  if ((v4 & 0x80) == 0) {
    goto LABEL_12;
  }
LABEL_25:
  unsigned int v14 = *(const std::string **)(a2 + 56);
  *(_DWORD *)(a1 + 88) |= 0x80u;
  int v15 = *(std::string **)(a1 + 56);
  if (v15 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v15, v14);
  int v4 = *(_DWORD *)(a2 + 88);
  if ((v4 & 0xFF00) == 0) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
LABEL_28:
  if ((v4 & 0x100) != 0)
  {
    int v18 = *(_DWORD *)(a2 + 72);
    *(_DWORD *)(a1 + 88) |= 0x100u;
    *(_DWORD *)(a1 + 72) = v18;
    int v4 = *(_DWORD *)(a2 + 88);
    if ((v4 & 0x200) == 0)
    {
LABEL_30:
      if ((v4 & 0x400) == 0) {
        goto LABEL_31;
      }
LABEL_38:
      int v21 = *(_DWORD *)(a2 + 76);
      *(_DWORD *)(a1 + 88) |= 0x400u;
      *(_DWORD *)(a1 + 76) = v21;
      if ((*(_DWORD *)(a2 + 88) & 0x800) == 0) {
        return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
      }
      goto LABEL_32;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_30;
  }
  int v19 = *(const std::string **)(a2 + 64);
  *(_DWORD *)(a1 + 88) |= 0x200u;
  uint64_t v20 = *(std::string **)(a1 + 64);
  if (v20 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v20, v19);
  int v4 = *(_DWORD *)(a2 + 88);
  if ((v4 & 0x400) != 0) {
    goto LABEL_38;
  }
LABEL_31:
  if ((v4 & 0x800) != 0)
  {
LABEL_32:
    int v16 = *(_DWORD *)(a2 + 80);
    *(_DWORD *)(a1 + 88) |= 0x800u;
    *(_DWORD *)(a1 + 80) = v16;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10037903C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_100379050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_100379064(void *result)
{
  uint64_t v1 = result[2];
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  uint64_t v3 = result[6];
  if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  uint64_t v5 = result[7];
  if ((_UNKNOWN *)v5 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    operator delete();
  }
  uint64_t v7 = result[8];
  if ((_UNKNOWN *)v7 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v7 != 0)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    operator delete();
  }
  return result;
}

void sub_1003791C0(void *a1)
{
  *a1 = off_10046AAA8;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100379064(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_100379220(void *a1)
{
  *a1 = off_10046AAA8;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_100379064(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_100379294(uint64_t result, int a2)
{
  *(_DWORD *)(result + 84) = a2;
  return result;
}

void sub_10037929C()
{
}

void sub_100379320()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100379348(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 88)) {
    goto LABEL_17;
  }
  if ((*(unsigned char *)(a1 + 88) & 1) == 0
    || (uint64_t v1 = *(void *)(a1 + 16), (_UNKNOWN *)v1 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
  {
LABEL_6:
    *(void *)(a1 + ++*(void *)(result + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
    if ((*(unsigned char *)(a1 + 88) & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  if ((*(char *)(v1 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v1 = 0;
    *(unsigned char *)(v1 + 23) = 0;
    goto LABEL_6;
  }
  **(unsigned char **)uint64_t v1 = 0;
  *(void *)(v1 + ++*(void *)(result + 8) = 0;
  *(void *)(a1 + ++*(void *)(result + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  if ((*(unsigned char *)(a1 + 88) & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  uint64_t v2 = *(void *)(a1 + 48);
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
  {
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)uint64_t v2 = 0;
      *(void *)(v2 + ++*(void *)(result + 8) = 0;
    }
    else
    {
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
LABEL_13:
  if ((*(unsigned char *)(a1 + 88) & 0x80) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 56);
    if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)uint64_t v3 = 0;
        *(void *)(v3 + ++*(void *)(result + 8) = 0;
        int v4 = *(_DWORD *)(a1 + 88);
        if ((v4 & 0xFF00) == 0) {
          goto LABEL_26;
        }
        goto LABEL_18;
      }
      *(unsigned char *)uint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_17:
  int v4 = *(_DWORD *)(a1 + 88);
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_26;
  }
LABEL_18:
  *(_DWORD *)(a1 + 72) = 0;
  if ((v4 & 0x200) != 0)
  {
    uint64_t v5 = *(void *)(a1 + 64);
    if ((_UNKNOWN *)v5 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)uint64_t v5 = 0;
        *(void *)(v5 + ++*(void *)(result + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
      }
    }
  }
  *(void *)(a1 + 76) = &_mh_execute_header;
LABEL_26:
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 20) = 0;
  if (v7) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10037947C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v6 = (unsigned int *)(a1 + 32);
  uint64_t v7 = (unsigned int *)(a1 + 36);
  int v8 = (unsigned int *)(a1 + 40);
  int v9 = (unsigned int *)(a1 + 44);
  int v10 = (unsigned int *)(a1 + 72);
  int v11 = (unsigned int *)(a1 + 76);
  uint64_t v12 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  while (2)
  {
    int v13 = (char *)*((void *)this + 1);
    if ((unint64_t)v13 >= *((void *)this + 2) || *v13 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + ++*(void *)(result + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v13;
      *((_DWORD *)this + ++*(void *)(result + 8) = TagFallback;
      *((void *)this + 1) = v13 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v15 = TagFallback & 7;
        if (v15 != 2) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 88) |= 1u;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v17 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v17 >= *((void *)this + 2) || *v17 != 17) {
          continue;
        }
        *((void *)this + 1) = v17 + 1;
LABEL_17:
        unint64_t v43 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v43))
        {
          *(void *)(a1 + ++*(void *)(result + 24) = v43;
          *(_DWORD *)(a1 + 88) |= 2u;
          int v19 = (unsigned char *)*((void *)this + 1);
          unint64_t v18 = *((void *)this + 2);
          if ((unint64_t)v19 < v18 && *v19 == 24)
          {
            uint64_t v20 = v19 + 1;
            *((void *)this + 1) = v20;
LABEL_23:
            if ((unint64_t)v20 >= v18 || *v20 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v6);
              if (!result) {
                return result;
              }
              int v21 = (unsigned char *)*((void *)this + 1);
              unint64_t v18 = *((void *)this + 2);
              *(_DWORD *)(a1 + 88) |= 4u;
              if ((unint64_t)v21 < v18) {
                goto LABEL_93;
              }
            }
            else
            {
              *uint64_t v6 = *v20;
              int v21 = v20 + 1;
              *((void *)this + 1) = v21;
              *(_DWORD *)(a1 + 88) |= 4u;
              if ((unint64_t)v21 < v18)
              {
LABEL_93:
                if (*v21 == 32)
                {
                  unsigned int v22 = v21 + 1;
                  *((void *)this + 1) = v22;
LABEL_95:
                  if ((unint64_t)v22 >= v18 || *v22 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v7);
                    if (!result) {
                      return result;
                    }
                    uint64_t v38 = (unsigned char *)*((void *)this + 1);
                    unint64_t v18 = *((void *)this + 2);
                    *(_DWORD *)(a1 + 88) |= 8u;
                    if ((unint64_t)v38 < v18) {
                      goto LABEL_101;
                    }
                  }
                  else
                  {
                    *uint64_t v7 = *v22;
                    uint64_t v38 = v22 + 1;
                    *((void *)this + 1) = v38;
                    *(_DWORD *)(a1 + 88) |= 8u;
                    if ((unint64_t)v38 < v18)
                    {
LABEL_101:
                      if (*v38 == 40)
                      {
                        int v23 = v38 + 1;
                        *((void *)this + 1) = v23;
LABEL_103:
                        if ((unint64_t)v23 >= v18 || *v23 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v8);
                          if (!result) {
                            return result;
                          }
                          int v39 = (unsigned char *)*((void *)this + 1);
                          unint64_t v18 = *((void *)this + 2);
                          *(_DWORD *)(a1 + 88) |= 0x10u;
                          if ((unint64_t)v39 < v18) {
                            goto LABEL_109;
                          }
                        }
                        else
                        {
                          *int v8 = *v23;
                          int v39 = v23 + 1;
                          *((void *)this + 1) = v39;
                          *(_DWORD *)(a1 + 88) |= 0x10u;
                          if ((unint64_t)v39 < v18)
                          {
LABEL_109:
                            if (*v39 == 48)
                            {
                              unsigned int v24 = v39 + 1;
                              *((void *)this + 1) = v24;
LABEL_111:
                              if ((unint64_t)v24 >= v18 || *v24 < 0)
                              {
                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v9);
                                if (!result) {
                                  return result;
                                }
                                uint64_t v40 = (unsigned char *)*((void *)this + 1);
                                unint64_t v42 = *((void *)this + 2);
                                int v41 = *(_DWORD *)(a1 + 88) | 0x20;
                                *(_DWORD *)(a1 + 8++*(void *)(result + 8) = v41;
                                if ((unint64_t)v40 < v42)
                                {
LABEL_117:
                                  if (*v40 == 58)
                                  {
                                    *((void *)this + 1) = v40 + 1;
                                    *(_DWORD *)(a1 + 8++*(void *)(result + 8) = v41 | 0x40;
                                    if (*(_UNKNOWN **)(a1 + 48) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_35:
                                    }
                                      operator new();
LABEL_36:
                                    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
                                    if (!result) {
                                      return result;
                                    }
                                    int v25 = (unsigned char *)*((void *)this + 1);
                                    if ((unint64_t)v25 < *((void *)this + 2) && *v25 == 66)
                                    {
                                      *((void *)this + 1) = v25 + 1;
LABEL_41:
                                      *(_DWORD *)(a1 + 88) |= 0x80u;
                                      if (*(_UNKNOWN **)(a1 + 56) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
                                        operator new();
                                      }
                                      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
                                      if (!result) {
                                        return result;
                                      }
                                      uint64_t v27 = (unsigned char *)*((void *)this + 1);
                                      unint64_t v26 = *((void *)this + 2);
                                      if ((unint64_t)v27 < v26 && *v27 == 72)
                                      {
                                        int v28 = v27 + 1;
                                        *((void *)this + 1) = v28;
                                        if ((unint64_t)v28 >= v26) {
                                          goto LABEL_71;
                                        }
LABEL_50:
                                        if (*v28 < 0)
                                        {
LABEL_71:
                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v10);
                                          if (!result) {
                                            return result;
                                          }
                                          int v29 = (unsigned char *)*((void *)this + 1);
                                          unint64_t v36 = *((void *)this + 2);
                                          int v30 = *(_DWORD *)(a1 + 88) | 0x100;
                                          *(_DWORD *)(a1 + 8++*(void *)(result + 8) = v30;
                                          if ((unint64_t)v29 < v36)
                                          {
LABEL_73:
                                            if (*v29 == 82)
                                            {
                                              *((void *)this + 1) = v29 + 1;
                                              *(_DWORD *)(a1 + 8++*(void *)(result + 8) = v30 | 0x200;
                                              if (*(_UNKNOWN **)(a1 + 64) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
LABEL_55:
                                              }
                                                operator new();
LABEL_56:
                                              uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
                                              if (!result) {
                                                return result;
                                              }
                                              uint64_t v32 = (unsigned char *)*((void *)this + 1);
                                              unint64_t v31 = *((void *)this + 2);
                                              if ((unint64_t)v32 < v31 && *v32 == 88)
                                              {
                                                int v33 = v32 + 1;
                                                *((void *)this + 1) = v33;
                                                if ((unint64_t)v33 >= v31) {
                                                  goto LABEL_76;
                                                }
LABEL_63:
                                                if (*v33 < 0)
                                                {
LABEL_76:
                                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, v11);
                                                  if (!result) {
                                                    return result;
                                                  }
                                                  uint64_t v34 = (unsigned char *)*((void *)this + 1);
                                                  unint64_t v31 = *((void *)this + 2);
                                                  *(_DWORD *)(a1 + 88) |= 0x400u;
                                                  if ((unint64_t)v34 < v31) {
                                                    goto LABEL_78;
                                                  }
                                                }
                                                else
                                                {
                                                  *int v11 = *v33;
                                                  uint64_t v34 = v33 + 1;
                                                  *((void *)this + 1) = v34;
                                                  *(_DWORD *)(a1 + 88) |= 0x400u;
                                                  if ((unint64_t)v34 < v31)
                                                  {
LABEL_78:
                                                    if (*v34 == 96)
                                                    {
                                                      int v35 = v34 + 1;
                                                      *((void *)this + 1) = v35;
LABEL_80:
                                                      unsigned int v44 = 0;
                                                      if ((unint64_t)v35 >= v31 || *v35 < 0)
                                                      {
                                                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44);
                                                        if (!result) {
                                                          return result;
                                                        }
                                                        signed int v37 = v44;
                                                        if (v44 - 1 <= 1) {
                                                          goto LABEL_83;
                                                        }
LABEL_87:
                                                        wireless_diagnostics::google::protobuf::UnknownFieldSet::AddVarint(v12, 12, v37);
                                                        if (*((void *)this + 1) == *((void *)this + 2)) {
                                                          goto LABEL_88;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        signed int v37 = *v35;
                                                        *((void *)this + 1) = v35 + 1;
                                                        if ((v37 - 1) > 1) {
                                                          goto LABEL_87;
                                                        }
LABEL_83:
                                                        *(_DWORD *)(a1 + 88) |= 0x800u;
                                                        *(_DWORD *)(a1 + 80) = v37;
                                                        if (*((void *)this + 1) == *((void *)this + 2))
                                                        {
LABEL_88:
                                                          if (*((_DWORD *)this + 11)
                                                            || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
                                                          {
                                                            *((_DWORD *)this + ++*(void *)(result + 8) = 0;
                                                            uint64_t result = 1;
                                                            *((unsigned char *)this + 36) = 1;
                                                            return result;
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                        else
                                        {
                                          *int v10 = *v28;
                                          int v29 = v28 + 1;
                                          *((void *)this + 1) = v29;
                                          int v30 = *(_DWORD *)(a1 + 88) | 0x100;
                                          *(_DWORD *)(a1 + 8++*(void *)(result + 8) = v30;
                                          if ((unint64_t)v29 < v26) {
                                            goto LABEL_73;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                              else
                              {
                                unsigned int *v9 = *v24;
                                uint64_t v40 = v24 + 1;
                                *((void *)this + 1) = v40;
                                int v41 = *(_DWORD *)(a1 + 88) | 0x20;
                                *(_DWORD *)(a1 + 8++*(void *)(result + 8) = v41;
                                if ((unint64_t)v40 < v18) {
                                  goto LABEL_117;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 2u:
        int v15 = TagFallback & 7;
        if (v15 == 1) {
          goto LABEL_17;
        }
        goto LABEL_67;
      case 3u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        uint64_t v20 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_23;
      case 4u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        unsigned int v22 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_95;
      case 5u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        int v23 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_103;
      case 6u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        unsigned int v24 = (char *)*((void *)this + 1);
        unint64_t v18 = *((void *)this + 2);
        goto LABEL_111;
      case 7u:
        int v15 = TagFallback & 7;
        if (v15 != 2) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 88) |= 0x40u;
        if (*(_UNKNOWN **)(a1 + 48) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          goto LABEL_35;
        }
        goto LABEL_36;
      case 8u:
        int v15 = TagFallback & 7;
        if (v15 == 2) {
          goto LABEL_41;
        }
        goto LABEL_67;
      case 9u:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        int v28 = (char *)*((void *)this + 1);
        unint64_t v26 = *((void *)this + 2);
        if ((unint64_t)v28 < v26) {
          goto LABEL_50;
        }
        goto LABEL_71;
      case 0xAu:
        int v15 = TagFallback & 7;
        if (v15 != 2) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 88) |= 0x200u;
        if (*(_UNKNOWN **)(a1 + 64) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          goto LABEL_55;
        }
        goto LABEL_56;
      case 0xBu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        int v33 = (char *)*((void *)this + 1);
        unint64_t v31 = *((void *)this + 2);
        if ((unint64_t)v33 < v31) {
          goto LABEL_63;
        }
        goto LABEL_76;
      case 0xCu:
        int v15 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        int v35 = (char *)*((void *)this + 1);
        unint64_t v31 = *((void *)this + 2);
        goto LABEL_80;
      default:
        int v15 = TagFallback & 7;
LABEL_67:
        if (v15 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v12, a4) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t sub_100379C14(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  int v6 = *(_DWORD *)(result + 88);
  if (v6)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v6 = *(_DWORD *)(v5 + 88);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (int)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(_DWORD *)(v5 + 32), a2, a4);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(_DWORD *)(v5 + 36), a2, a4);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(_DWORD *)(v5 + 40), a2, a4);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(_DWORD *)(v5 + 44), a2, a4);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(_DWORD *)(v5 + 72), a2, a4);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(_DWORD *)(v5 + 76), a2, a4);
  if ((*(_DWORD *)(v5 + 88) & 0x800) == 0)
  {
LABEL_13:
    int v9 = *(void **)(v5 + 8);
    int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
    uint64_t v7 = v9;
    if (!v9) {
      return result;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(_DWORD *)(v5 + 80), (int)a2, a4);
  int v10 = *(void **)(v5 + 8);
  int v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v7 = v10;
  if (!v10) {
    return result;
  }
LABEL_27:
  if (*v7 != v7[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v8, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_100379DC8(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  int v4 = a2;
  int v6 = *((_DWORD *)this + 22);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
    goto LABEL_27;
  }
  uint64_t v12 = *((void *)this + 2);
  *(unsigned char *)a2 = 10;
  unsigned int v13 = a2 + 1;
  if (*(char *)(v12 + 23) < 0)
  {
    unsigned int v14 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v12 + 8);
    if (v14 <= 0x7F) {
      goto LABEL_17;
    }
  }
  else
  {
    unsigned int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v12 + 23);
    if (*(unsigned __int8 *)(v12 + 23) <= 0x7Fu)
    {
LABEL_17:
      *((unsigned char *)v4 + 1) = (_BYTE)v14;
      int v15 = v4 + 2;
      goto LABEL_20;
    }
  }
  int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v14, v13, a3);
LABEL_20:
  int v16 = *(char *)(v12 + 23);
  if (v16 >= 0) {
    int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v12;
  }
  else {
    int v17 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v12;
  }
  if (v16 >= 0) {
    unint64_t v18 = (const void *)*(unsigned __int8 *)(v12 + 23);
  }
  else {
    unint64_t v18 = (const void *)*(unsigned int *)(v12 + 8);
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v17, v18, v15, a4);
  int v6 = *((_DWORD *)this + 22);
  if ((v6 & 2) == 0)
  {
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t v19 = *((void *)this + 3);
  *(unsigned char *)int v4 = 17;
  *(void *)((char *)v4 + 1) = v19;
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 22) & 4) == 0)
  {
LABEL_4:
    if ((*((unsigned char *)this + 88) & 8) == 0) {
      goto LABEL_5;
    }
LABEL_32:
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    *(unsigned char *)int v4 = 32;
    if (v21 > 0x7F)
    {
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v21, (int)v4 + 1, a3);
      if ((*((unsigned char *)this + 88) & 0x10) != 0) {
        goto LABEL_36;
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v21;
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      if ((*((unsigned char *)this + 88) & 0x10) != 0) {
        goto LABEL_36;
      }
    }
LABEL_6:
    if ((*((unsigned char *)this + 88) & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_40:
    int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    *(unsigned char *)int v4 = 48;
    if (v23 > 0x7F)
    {
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v23, (int)v4 + 1, a3);
      int v7 = *((_DWORD *)this + 22);
      if ((v7 & 0x40) != 0) {
        goto LABEL_44;
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v23;
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      int v7 = *((_DWORD *)this + 22);
      if ((v7 & 0x40) != 0) {
        goto LABEL_44;
      }
    }
LABEL_8:
    if ((v7 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_56;
  }
LABEL_28:
  uint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  *(unsigned char *)int v4 = 24;
  if (v20 > 0x7F)
  {
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v20, (int)v4 + 1, a3);
    if ((*((unsigned char *)this + 88) & 8) != 0) {
      goto LABEL_32;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v20;
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((*((unsigned char *)this + 88) & 8) != 0) {
      goto LABEL_32;
    }
  }
LABEL_5:
  if ((*((unsigned char *)this + 88) & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_36:
  unsigned int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  *(unsigned char *)int v4 = 40;
  if (v22 > 0x7F)
  {
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, (int)v4 + 1, a3);
    if ((*((unsigned char *)this + 88) & 0x20) != 0) {
      goto LABEL_40;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v22;
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((*((unsigned char *)this + 88) & 0x20) != 0) {
      goto LABEL_40;
    }
  }
LABEL_7:
  int v7 = *((_DWORD *)this + 22);
  if ((v7 & 0x40) == 0) {
    goto LABEL_8;
  }
LABEL_44:
  uint64_t v24 = *((void *)this + 6);
  *(unsigned char *)int v4 = 58;
  if (*(char *)(v24 + 23) < 0)
  {
    int v25 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v24 + 8);
    if (v25 <= 0x7F) {
      goto LABEL_46;
    }
  }
  else
  {
    int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v24 + 23);
    if (*(unsigned __int8 *)(v24 + 23) <= 0x7Fu)
    {
LABEL_46:
      *((unsigned char *)v4 + 1) = (_BYTE)v25;
      int v26 = v4 + 2;
      goto LABEL_49;
    }
  }
  int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v25, (int)v4 + 1, a3);
LABEL_49:
  int v27 = *(char *)(v24 + 23);
  if (v27 >= 0) {
    int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24;
  }
  else {
    int v28 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v24;
  }
  if (v27 >= 0) {
    int v29 = (const void *)*(unsigned __int8 *)(v24 + 23);
  }
  else {
    int v29 = (const void *)*(unsigned int *)(v24 + 8);
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v28, v29, v26, a4);
  int v7 = *((_DWORD *)this + 22);
  if ((v7 & 0x80) == 0)
  {
LABEL_9:
    if ((v7 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_68:
    unint64_t v36 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    *(unsigned char *)int v4 = 72;
    if (v36 > 0x7F)
    {
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v36, (int)v4 + 1, a3);
      int v8 = *((_DWORD *)this + 22);
      if ((v8 & 0x200) != 0) {
        goto LABEL_72;
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v36;
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      int v8 = *((_DWORD *)this + 22);
      if ((v8 & 0x200) != 0) {
        goto LABEL_72;
      }
    }
LABEL_11:
    if ((v8 & 0x400) == 0) {
      goto LABEL_12;
    }
LABEL_84:
    unint64_t v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 19);
    *(unsigned char *)int v4 = 88;
    if (v43 > 0x7F)
    {
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v43, (int)v4 + 1, a3);
      if ((*((unsigned char *)this + 89) & 8) != 0) {
        goto LABEL_88;
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = (_BYTE)v43;
      int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      if ((*((unsigned char *)this + 89) & 8) != 0) {
        goto LABEL_88;
      }
    }
LABEL_13:
    int v11 = (void *)*((void *)this + 1);
    int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v9 = v11;
    if (!v11) {
      return v4;
    }
    goto LABEL_95;
  }
LABEL_56:
  uint64_t v30 = *((void *)this + 7);
  *(unsigned char *)int v4 = 66;
  if (*(char *)(v30 + 23) < 0)
  {
    unint64_t v31 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v30 + 8);
    if (v31 <= 0x7F) {
      goto LABEL_58;
    }
  }
  else
  {
    unint64_t v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v30 + 23);
    if (*(unsigned __int8 *)(v30 + 23) <= 0x7Fu)
    {
LABEL_58:
      *((unsigned char *)v4 + 1) = (_BYTE)v31;
      int v32 = v4 + 2;
      goto LABEL_61;
    }
  }
  int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v31, (int)v4 + 1, a3);
LABEL_61:
  int v33 = *(char *)(v30 + 23);
  if (v33 >= 0) {
    uint64_t v34 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v30;
  }
  else {
    uint64_t v34 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v30;
  }
  if (v33 >= 0) {
    int v35 = (const void *)*(unsigned __int8 *)(v30 + 23);
  }
  else {
    int v35 = (const void *)*(unsigned int *)(v30 + 8);
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v34, v35, v32, a4);
  if ((*((_DWORD *)this + 22) & 0x100) != 0) {
    goto LABEL_68;
  }
LABEL_10:
  int v8 = *((_DWORD *)this + 22);
  if ((v8 & 0x200) == 0) {
    goto LABEL_11;
  }
LABEL_72:
  uint64_t v37 = *((void *)this + 8);
  *(unsigned char *)int v4 = 82;
  if (*(char *)(v37 + 23) < 0)
  {
    uint64_t v38 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v37 + 8);
    if (v38 <= 0x7F) {
      goto LABEL_74;
    }
  }
  else
  {
    uint64_t v38 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v37 + 23);
    if (*(unsigned __int8 *)(v37 + 23) <= 0x7Fu)
    {
LABEL_74:
      *((unsigned char *)v4 + 1) = (_BYTE)v38;
      int v39 = v4 + 2;
      goto LABEL_77;
    }
  }
  int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v38, (int)v4 + 1, a3);
LABEL_77:
  int v40 = *(char *)(v37 + 23);
  if (v40 >= 0) {
    int v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v37;
  }
  else {
    int v41 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v37;
  }
  if (v40 >= 0) {
    unint64_t v42 = (const void *)*(unsigned __int8 *)(v37 + 23);
  }
  else {
    unint64_t v42 = (const void *)*(unsigned int *)(v37 + 8);
  }
  int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v41, v42, v39, a4);
  if ((*((_DWORD *)this + 22) & 0x400) != 0) {
    goto LABEL_84;
  }
LABEL_12:
  if ((*((unsigned char *)this + 89) & 8) == 0) {
    goto LABEL_13;
  }
LABEL_88:
  unsigned int v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((int *)this + 20);
  *(unsigned char *)int v4 = 96;
  unint64_t v45 = (unint64_t)v4 + 1;
  if ((v44 & 0x80000000) != 0)
  {
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64ToArray(v44, v45, a3);
    unsigned int v47 = (void *)*((void *)this + 1);
    int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v9 = v47;
    if (!v47) {
      return v4;
    }
  }
  else if (v44 > 0x7F)
  {
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v44, v45, a3);
    int v48 = (void *)*((void *)this + 1);
    int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v9 = v48;
    if (!v48) {
      return v4;
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = (_BYTE)v44;
    int v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    int v46 = (void *)*((void *)this + 1);
    int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    int v9 = v46;
    if (!v46) {
      return v4;
    }
  }
LABEL_95:
  if (*v9 == v9[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v10, v4, a3);
}

uint64_t sub_10037A248(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  int v3 = *(_DWORD *)(a1 + 88);
  if (!(_BYTE)v3)
  {
    uint64_t v4 = 0;
    if ((v3 & 0xFF00) == 0) {
      goto LABEL_67;
    }
    goto LABEL_63;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) != 0) {
      uint64_t v4 = 9;
    }
    else {
      uint64_t v4 = 0;
    }
    if ((v3 & 4) == 0) {
      goto LABEL_26;
    }
LABEL_22:
    uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 32);
    if (v12 >= 0x80)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12, a2);
      int v3 = *(_DWORD *)(a1 + 88);
    }
    else
    {
      int v13 = 1;
    }
    uint64_t v4 = (v4 + v13 + 1);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  char v7 = v6;
  uint64_t v8 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v9 = v8;
  }
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9, a2);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v8 = *(void *)(v5 + 8);
    int v3 = *(_DWORD *)(a1 + 88);
    char v7 = *(unsigned char *)(v5 + 23);
  }
  else
  {
    int v10 = 1;
  }
  if (v7 < 0) {
    int v6 = v8;
  }
  unsigned int v11 = v10 + v6 + 1;
  if ((v3 & 2) != 0) {
    uint64_t v4 = v11 + 9;
  }
  else {
    uint64_t v4 = v11;
  }
  if ((v3 & 4) != 0) {
    goto LABEL_22;
  }
LABEL_26:
  if ((v3 & 8) != 0)
  {
    unsigned int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 36);
    if (v14 >= 0x80)
    {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14, a2);
      int v3 = *(_DWORD *)(a1 + 88);
      uint64_t v4 = (v4 + v15 + 1);
      if ((v3 & 0x10) != 0) {
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      if ((v3 & 0x10) != 0) {
        goto LABEL_37;
      }
    }
LABEL_28:
    if ((v3 & 0x20) == 0) {
      goto LABEL_29;
    }
LABEL_41:
    unint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 44);
    if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18, a2);
      int v3 = *(_DWORD *)(a1 + 88);
      uint64_t v4 = (v19 + 1 + v4);
      if ((v3 & 0x40) != 0) {
        goto LABEL_45;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      if ((v3 & 0x40) != 0) {
        goto LABEL_45;
      }
    }
LABEL_30:
    if ((v3 & 0x80) == 0) {
      goto LABEL_31;
    }
    goto LABEL_54;
  }
  if ((v3 & 0x10) == 0) {
    goto LABEL_28;
  }
LABEL_37:
  int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 40);
  if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16, a2);
    int v3 = *(_DWORD *)(a1 + 88);
    uint64_t v4 = (v4 + v17 + 1);
    if ((v3 & 0x20) != 0) {
      goto LABEL_41;
    }
  }
  else
  {
    uint64_t v4 = (v4 + 2);
    if ((v3 & 0x20) != 0) {
      goto LABEL_41;
    }
  }
LABEL_29:
  if ((v3 & 0x40) == 0) {
    goto LABEL_30;
  }
LABEL_45:
  uint64_t v20 = *(void *)(a1 + 48);
  int v21 = *(unsigned __int8 *)(v20 + 23);
  char v22 = v21;
  uint64_t v23 = *(void *)(v20 + 8);
  if ((v21 & 0x80u) == 0) {
    unint64_t v24 = *(unsigned __int8 *)(v20 + 23);
  }
  else {
    unint64_t v24 = v23;
  }
  if (v24 >= 0x80)
  {
    int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24, a2);
    int v21 = *(unsigned __int8 *)(v20 + 23);
    uint64_t v23 = *(void *)(v20 + 8);
    int v3 = *(_DWORD *)(a1 + 88);
    char v22 = *(unsigned char *)(v20 + 23);
  }
  else
  {
    int v25 = 1;
  }
  if (v22 < 0) {
    int v21 = v23;
  }
  uint64_t v4 = (v4 + v25 + v21 + 1);
  if ((v3 & 0x80) == 0)
  {
LABEL_31:
    if ((v3 & 0xFF00) == 0) {
      goto LABEL_67;
    }
LABEL_63:
    if ((v3 & 0x100) == 0)
    {
      if ((v3 & 0x200) == 0) {
        goto LABEL_65;
      }
LABEL_73:
      uint64_t v37 = *(void *)(a1 + 64);
      int v38 = *(unsigned __int8 *)(v37 + 23);
      char v39 = v38;
      uint64_t v40 = *(void *)(v37 + 8);
      if ((v38 & 0x80u) == 0) {
        unint64_t v41 = *(unsigned __int8 *)(v37 + 23);
      }
      else {
        unint64_t v41 = v40;
      }
      if (v41 >= 0x80)
      {
        int v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v41, a2);
        int v38 = *(unsigned __int8 *)(v37 + 23);
        uint64_t v40 = *(void *)(v37 + 8);
        int v3 = *(_DWORD *)(a1 + 88);
        char v39 = *(unsigned char *)(v37 + 23);
      }
      else
      {
        int v42 = 1;
      }
      if (v39 < 0) {
        int v38 = v40;
      }
      uint64_t v4 = (v4 + v42 + v38 + 1);
      if ((v3 & 0x400) == 0)
      {
LABEL_66:
        if ((v3 & 0x800) == 0) {
          goto LABEL_67;
        }
        goto LABEL_86;
      }
LABEL_82:
      unint64_t v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 76);
      if (v43 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43, a2)+ 1+ v4;
        if ((*(_DWORD *)(a1 + 88) & 0x800) == 0) {
          goto LABEL_67;
        }
      }
      else
      {
        uint64_t v4 = (v4 + 2);
        if ((v3 & 0x800) == 0) {
          goto LABEL_67;
        }
      }
LABEL_86:
      unsigned int v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 80);
      if ((v44 & 0x80000000) != 0)
      {
        uint64_t v4 = (v4 + 11);
        int v32 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        int v33 = *(void **)(a1 + 8);
        if (!v33) {
          goto LABEL_68;
        }
      }
      else if (v44 >= 0x80)
      {
        uint64_t v4 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v44, a2)+ 1+ v4;
        int v32 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        int v33 = *(void **)(a1 + 8);
        if (!v33) {
          goto LABEL_68;
        }
      }
      else
      {
        uint64_t v4 = (v4 + 2);
        int v32 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        int v33 = *(void **)(a1 + 8);
        if (!v33) {
          goto LABEL_68;
        }
      }
      goto LABEL_93;
    }
    int v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(a1 + 72);
    if (v35 >= 0x80)
    {
      int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35, a2);
      int v3 = *(_DWORD *)(a1 + 88);
      uint64_t v4 = (v36 + 1 + v4);
      if ((v3 & 0x200) != 0) {
        goto LABEL_73;
      }
    }
    else
    {
      uint64_t v4 = (v4 + 2);
      if ((v3 & 0x200) != 0) {
        goto LABEL_73;
      }
    }
LABEL_65:
    if ((v3 & 0x400) == 0) {
      goto LABEL_66;
    }
    goto LABEL_82;
  }
LABEL_54:
  uint64_t v26 = *(void *)(a1 + 56);
  int v27 = *(unsigned __int8 *)(v26 + 23);
  char v28 = v27;
  uint64_t v29 = *(void *)(v26 + 8);
  if ((v27 & 0x80u) == 0) {
    unint64_t v30 = *(unsigned __int8 *)(v26 + 23);
  }
  else {
    unint64_t v30 = v29;
  }
  if (v30 >= 0x80)
  {
    int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v30, a2);
    int v27 = *(unsigned __int8 *)(v26 + 23);
    uint64_t v29 = *(void *)(v26 + 8);
    int v3 = *(_DWORD *)(a1 + 88);
    char v28 = *(unsigned char *)(v26 + 23);
  }
  else
  {
    int v31 = 1;
  }
  if (v28 < 0) {
    int v27 = v29;
  }
  uint64_t v4 = (v4 + v31 + v27 + 1);
  if ((v3 & 0xFF00) != 0) {
    goto LABEL_63;
  }
LABEL_67:
  int v32 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  int v33 = *(void **)(a1 + 8);
  if (!v33)
  {
LABEL_68:
    *(_DWORD *)(a1 + 84) = v4;
    return v4;
  }
LABEL_93:
  if (*v33 == v33[1]) {
    goto LABEL_68;
  }
  uint64_t v45 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v32, a2)
      + v4;
  *(_DWORD *)(a1 + 84) = v45;
  return v45;
}

uint64_t sub_10037A5F8(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_100378D40((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10037A6D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10037A6EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10037A700(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10037A78C()
{
  return 1;
}

uint64_t sub_10037A794()
{
  uint64_t v0 = qword_10047E800;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1003746C0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E7C8;
}

void sub_10037A824(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10037A838(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v4) = *(unsigned char *)(a2 + 60);
  if (!(_BYTE)v4) {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
  }
  if (*(unsigned char *)(a2 + 60))
  {
    char v7 = *(const std::string **)(a2 + 16);
    *(_DWORD *)(a1 + 60) |= 1u;
    uint64_t v8 = *(std::string **)(a1 + 16);
    if (v8 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
      operator new();
    }
    std::string::operator=(v8, v7);
    int v4 = *(_DWORD *)(a2 + 60);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_17;
    }
  }
  else if ((*(unsigned char *)(a2 + 60) & 2) == 0)
  {
    goto LABEL_6;
  }
  unint64_t v9 = *(const std::string **)(a2 + 24);
  *(_DWORD *)(a1 + 60) |= 2u;
  int v10 = *(std::string **)(a1 + 24);
  if (v10 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v10, v9);
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_20:
    uint64_t v13 = *(void *)(a2 + 40);
    *(_DWORD *)(a1 + 60) |= 8u;
    *(void *)(a1 + 40) = v13;
    if ((*(_DWORD *)(a2 + 60) & 0x10) == 0) {
      return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
    }
    goto LABEL_9;
  }
LABEL_17:
  unsigned int v11 = *(const std::string **)(a2 + 32);
  *(_DWORD *)(a1 + 60) |= 4u;
  uint64_t v12 = *(std::string **)(a1 + 32);
  if (v12 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
    operator new();
  }
  std::string::operator=(v12, v11);
  int v4 = *(_DWORD *)(a2 + 60);
  if ((v4 & 8) != 0) {
    goto LABEL_20;
  }
LABEL_8:
  if ((v4 & 0x10) != 0)
  {
LABEL_9:
    uint64_t v5 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 60) |= 0x10u;
    *(void *)(a1 + 4++*(void *)(result + 8) = v5;
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10037AA04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10037AA18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void *sub_10037AA2C(void *result)
{
  uint64_t v1 = result[2];
  if ((_UNKNOWN *)v1 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  uint64_t v3 = result[3];
  if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v3 != 0)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  uint64_t v5 = result[4];
  if ((_UNKNOWN *)v5 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    operator delete();
  }
  return result;
}

void sub_10037AB40(void *a1)
{
  *a1 = off_10046AB58;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_10037AA2C(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10037ABA0(void *a1)
{
  *a1 = off_10046AB58;
  uint64_t v2 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 1);
  sub_10037AA2C(a1);
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet(v2);
  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);

  operator delete();
}

uint64_t sub_10037AC14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 56) = a2;
  return result;
}

void sub_10037AC1C()
{
}

void sub_10037AC8C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10037ACB4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 60)) {
    goto LABEL_19;
  }
  if ((*(unsigned char *)(a1 + 60) & 1) == 0
    || (uint64_t v1 = *(void *)(a1 + 16), (_UNKNOWN *)v1 == &wireless_diagnostics::google::protobuf::internal::kEmptyString))
  {
LABEL_6:
    if ((*(unsigned char *)(a1 + 60) & 2) != 0) {
      goto LABEL_7;
    }
    goto LABEL_13;
  }
  if ((*(char *)(v1 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)uint64_t v1 = 0;
    *(unsigned char *)(v1 + 23) = 0;
    goto LABEL_6;
  }
  **(unsigned char **)uint64_t v1 = 0;
  *(void *)(v1 + ++*(void *)(result + 8) = 0;
  if ((*(unsigned char *)(a1 + 60) & 2) != 0)
  {
LABEL_7:
    uint64_t v2 = *(void *)(a1 + 24);
    if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)uint64_t v2 = 0;
        *(void *)(v2 + ++*(void *)(result + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v2 = 0;
        *(unsigned char *)(v2 + 23) = 0;
      }
    }
  }
LABEL_13:
  if ((*(unsigned char *)(a1 + 60) & 4) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 32);
    if ((_UNKNOWN *)v3 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)uint64_t v3 = 0;
        *(void *)(v3 + ++*(void *)(result + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
      }
    }
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 4++*(void *)(result + 8) = 0;
LABEL_19:
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t result = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8);
  *((_DWORD *)result + 13) = 0;
  if (v5) {
    return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(result);
  }
  return result;
}

uint64_t sub_10037AD7C(uint64_t a1, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  unsigned int v6 = a1 + 8;
  while (2)
  {
    char v7 = (char *)*((void *)this + 1);
    if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
      *((_DWORD *)this + ++*(void *)(result + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)this + ++*(void *)(result + 8) = TagFallback;
      *((void *)this + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 60) |= 1u;
        if (*(_UNKNOWN **)(a1 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result)
        {
          unsigned int v11 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v11 < *((void *)this + 2) && *v11 == 18)
          {
            *((void *)this + 1) = v11 + 1;
            goto LABEL_17;
          }
          continue;
        }
        return result;
      case 2u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_41;
        }
LABEL_17:
        *(_DWORD *)(a1 + 60) |= 2u;
        if (*(_UNKNOWN **)(a1 + 24) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result)
        {
          uint64_t v12 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v12 < *((void *)this + 2) && *v12 == 26)
          {
            *((void *)this + 1) = v12 + 1;
            goto LABEL_24;
          }
          continue;
        }
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_41;
        }
LABEL_24:
        *(_DWORD *)(a1 + 60) |= 4u;
        if (*(_UNKNOWN **)(a1 + 32) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result)
        {
          uint64_t v13 = (unsigned char *)*((void *)this + 1);
          if ((unint64_t)v13 < *((void *)this + 2) && *v13 == 33)
          {
            *((void *)this + 1) = v13 + 1;
            goto LABEL_31;
          }
          continue;
        }
        return result;
      case 4u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_41;
        }
LABEL_31:
        unint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
          goto LABEL_43;
        }
        *(void *)(a1 + 40) = v15;
        *(_DWORD *)(a1 + 60) |= 8u;
        unsigned int v14 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v14 >= *((void *)this + 2) || *v14 != 41) {
          continue;
        }
        *((void *)this + 1) = v14 + 1;
        goto LABEL_36;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_41;
        }
LABEL_36:
        unint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v15) & 1) == 0) {
          goto LABEL_43;
        }
        *(void *)(a1 + 4++*(void *)(result + 8) = v15;
        *(_DWORD *)(a1 + 60) |= 0x10u;
        if (*((void *)this + 1) != *((void *)this + 2)
          || !*((_DWORD *)this + 11) && *((_DWORD *)this + 6) != *((_DWORD *)this + 10))
        {
          continue;
        }
        *((_DWORD *)this + ++*(void *)(result + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)this + 36) = 1;
        break;
      default:
        int v9 = TagFallback & 7;
LABEL_41:
        if (v9 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback, v6, a4))continue; {
LABEL_43:
        }
        uint64_t result = 0;
        break;
    }
    return result;
  }
}

uint64_t sub_10037B0C4(uint64_t result, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = result;
  int v5 = *(_DWORD *)(result + 60);
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    int v5 = *(_DWORD *)(v4 + 60);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v5 = *(_DWORD *)(v4 + 60);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v5 = *(_DWORD *)(v4 + 60);
  if ((v5 & 8) == 0)
  {
LABEL_5:
    if ((v5 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (int)a2, *(double *)(v4 + 40), a3);
  if ((*(_DWORD *)(v4 + 60) & 0x10) == 0)
  {
LABEL_6:
    uint64_t v8 = *(void **)(v4 + 8);
    char v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
    unsigned int v6 = v8;
    if (!v8) {
      return result;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (int)a2, *(double *)(v4 + 48), a3);
  int v9 = *(void **)(v4 + 8);
  char v7 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v4 + 8);
  unsigned int v6 = v9;
  if (!v9) {
    return result;
  }
LABEL_13:
  if (*v6 != v6[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v7, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10037B1B4(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 15);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
    goto LABEL_20;
  }
  uint64_t v10 = *((void *)this + 2);
  *(unsigned char *)a2 = 10;
  unsigned int v11 = a2 + 1;
  if (*(char *)(v10 + 23) < 0)
  {
    uint64_t v12 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v10 + 8);
    if (v12 <= 0x7F) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v10 + 23);
    if (*(unsigned __int8 *)(v10 + 23) <= 0x7Fu)
    {
LABEL_10:
      *((unsigned char *)v4 + 1) = (_BYTE)v12;
      int v13 = v4 + 2;
      goto LABEL_13;
    }
  }
  int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v12, v11, a3);
LABEL_13:
  int v14 = *(char *)(v10 + 23);
  if (v14 >= 0) {
    unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v10;
  }
  else {
    unint64_t v15 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v10;
  }
  if (v14 >= 0) {
    int v16 = (const void *)*(unsigned __int8 *)(v10 + 23);
  }
  else {
    int v16 = (const void *)*(unsigned int *)(v10 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v15, v16, v13, a4);
  int v6 = *((_DWORD *)this + 15);
  if ((v6 & 2) == 0)
  {
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_4;
    }
    goto LABEL_32;
  }
LABEL_20:
  uint64_t v17 = *((void *)this + 3);
  *(unsigned char *)uint64_t v4 = 18;
  if (*(char *)(v17 + 23) < 0)
  {
    unint64_t v18 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v17 + 8);
    if (v18 <= 0x7F) {
      goto LABEL_22;
    }
  }
  else
  {
    unint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v17 + 23);
    if (*(unsigned __int8 *)(v17 + 23) <= 0x7Fu)
    {
LABEL_22:
      *((unsigned char *)v4 + 1) = (_BYTE)v18;
      int v19 = v4 + 2;
      goto LABEL_25;
    }
  }
  int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v18, (int)v4 + 1, a3);
LABEL_25:
  int v20 = *(char *)(v17 + 23);
  if (v20 >= 0) {
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17;
  }
  else {
    int v21 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v17;
  }
  if (v20 >= 0) {
    char v22 = (const void *)*(unsigned __int8 *)(v17 + 23);
  }
  else {
    char v22 = (const void *)*(unsigned int *)(v17 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v21, v22, v19, a4);
  int v6 = *((_DWORD *)this + 15);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_44;
  }
LABEL_32:
  uint64_t v23 = *((void *)this + 4);
  *(unsigned char *)uint64_t v4 = 26;
  if (*(char *)(v23 + 23) < 0)
  {
    unint64_t v24 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v23 + 8);
    if (v24 <= 0x7F) {
      goto LABEL_34;
    }
  }
  else
  {
    unint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v23 + 23);
    if (*(unsigned __int8 *)(v23 + 23) <= 0x7Fu)
    {
LABEL_34:
      *((unsigned char *)v4 + 1) = (_BYTE)v24;
      int v25 = v4 + 2;
      goto LABEL_37;
    }
  }
  int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v24, (int)v4 + 1, a3);
LABEL_37:
  int v26 = *(char *)(v23 + 23);
  if (v26 >= 0) {
    int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v23;
  }
  else {
    int v27 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v23;
  }
  if (v26 >= 0) {
    char v28 = (const void *)*(unsigned __int8 *)(v23 + 23);
  }
  else {
    char v28 = (const void *)*(unsigned int *)(v23 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v27, v28, v25, a4);
  int v6 = *((_DWORD *)this + 15);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t v29 = *((void *)this + 5);
  *(unsigned char *)uint64_t v4 = 33;
  *(void *)((char *)v4 + 1) = v29;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  if ((*((_DWORD *)this + 15) & 0x10) == 0)
  {
LABEL_6:
    int v9 = (void *)*((void *)this + 1);
    uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
    char v7 = v9;
    if (!v9) {
      return v4;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t v30 = *((void *)this + 6);
  *(unsigned char *)uint64_t v4 = 41;
  *(void *)((char *)v4 + 1) = v30;
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 9);
  int v31 = (void *)*((void *)this + 1);
  uint64_t v8 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  char v7 = v31;
  if (!v31) {
    return v4;
  }
LABEL_46:
  if (*v7 == v7[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v8, v4, a3);
}

uint64_t sub_10037B428(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  LOBYTE(v3) = *(unsigned char *)(a1 + 60);
  if ((_BYTE)v3)
  {
    if ((*(unsigned char *)(a1 + 60) & 1) == 0)
    {
      unsigned int v4 = 0;
      if ((*(unsigned char *)(a1 + 60) & 2) == 0) {
        goto LABEL_27;
      }
      goto LABEL_18;
    }
    uint64_t v9 = *(void *)(a1 + 16);
    int v10 = *(unsigned __int8 *)(v9 + 23);
    if ((v10 & 0x80u) == 0) {
      unint64_t v11 = *(unsigned __int8 *)(v9 + 23);
    }
    else {
      unint64_t v11 = *(void *)(v9 + 8);
    }
    if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11, a2);
      int v13 = *(unsigned __int8 *)(v9 + 23);
      int v3 = *(_DWORD *)(a1 + 60);
      if (*(char *)(v9 + 23) < 0) {
        int v13 = *(void *)(v9 + 8);
      }
      unsigned int v4 = v12 + 1 + v13;
      if ((v3 & 2) == 0)
      {
LABEL_27:
        if ((v3 & 4) != 0)
        {
          uint64_t v20 = *(void *)(a1 + 32);
          int v21 = *(unsigned __int8 *)(v20 + 23);
          char v22 = v21;
          uint64_t v23 = *(void *)(v20 + 8);
          if ((v21 & 0x80u) == 0) {
            unint64_t v24 = *(unsigned __int8 *)(v20 + 23);
          }
          else {
            unint64_t v24 = v23;
          }
          if (v24 >= 0x80)
          {
            int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v24, a2);
            int v21 = *(unsigned __int8 *)(v20 + 23);
            uint64_t v23 = *(void *)(v20 + 8);
            int v3 = *(_DWORD *)(a1 + 60);
            char v22 = *(unsigned char *)(v20 + 23);
          }
          else
          {
            int v25 = 1;
          }
          if (v22 < 0) {
            int v21 = v23;
          }
          v4 += v25 + v21 + 1;
        }
        unsigned int v26 = v4 + 9;
        if ((v3 & 8) == 0) {
          unsigned int v26 = v4;
        }
        if ((v3 & 0x10) != 0) {
          uint64_t v5 = v26 + 9;
        }
        else {
          uint64_t v5 = v26;
        }
        int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
        char v7 = *(void **)(a1 + 8);
        if (!v7) {
          goto LABEL_6;
        }
        goto LABEL_43;
      }
    }
    else
    {
      if ((v10 & 0x80u) != 0) {
        int v10 = *(void *)(v9 + 8);
      }
      unsigned int v4 = v10 + 2;
      if ((v3 & 2) == 0) {
        goto LABEL_27;
      }
    }
LABEL_18:
    uint64_t v14 = *(void *)(a1 + 24);
    int v15 = *(unsigned __int8 *)(v14 + 23);
    char v16 = v15;
    uint64_t v17 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      unint64_t v18 = *(unsigned __int8 *)(v14 + 23);
    }
    else {
      unint64_t v18 = v17;
    }
    if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18, a2);
      int v15 = *(unsigned __int8 *)(v14 + 23);
      uint64_t v17 = *(void *)(v14 + 8);
      int v3 = *(_DWORD *)(a1 + 60);
      char v16 = *(unsigned char *)(v14 + 23);
    }
    else
    {
      int v19 = 1;
    }
    if (v16 < 0) {
      int v15 = v17;
    }
    v4 += v19 + v15 + 1;
    goto LABEL_27;
  }
  uint64_t v5 = 0;
  int v6 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8);
  char v7 = *(void **)(a1 + 8);
  if (!v7)
  {
LABEL_6:
    *(_DWORD *)(a1 + 56) = v5;
    return v5;
  }
LABEL_43:
  if (*v7 == v7[1]) {
    goto LABEL_6;
  }
  uint64_t v27 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v6, a2)
      + v5;
  *(_DWORD *)(a1 + 56) = v27;
  return v27;
}

uint64_t sub_10037B5E4(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10037A838((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10037B6C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10037B6D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10037B6EC(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10037B778()
{
  return 1;
}

uint64_t sub_10037B780()
{
  uint64_t v0 = qword_10047E800;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1003746C0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E7D8;
}

void sub_10037B810(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10037B824(uint64_t a1, uint64_t a2)
{
  if (a2 == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  uint64_t v4 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), *(_DWORD *)(a2 + 32) + *(_DWORD *)(a1 + 32));
  if (*(int *)(a2 + 32) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      while (1)
      {
        uint64_t v9 = *(const std::string **)(*(void *)(a2 + 24) + 8 * v5);
        int v10 = *(_DWORD *)(a1 + 36);
        uint64_t v11 = *(int *)(a1 + 32);
        if ((int)v11 >= v10) {
          break;
        }
        uint64_t v12 = *(void *)(a1 + 24);
        *(_DWORD *)(a1 + 32) = v11 + 1;
        uint64_t v4 = std::string::operator=(*(std::string **)(v12 + 8 * v11), v9);
        if (++v5 >= *(int *)(a2 + 32)) {
          goto LABEL_11;
        }
      }
      if (v10 == *(_DWORD *)(a1 + 40))
      {
        uint64_t v4 = (std::string *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 24), v10 + 1);
        int v10 = *(_DWORD *)(a1 + 36);
      }
      *(_DWORD *)(a1 + 36) = v10 + 1;
      int v6 = (std::string *)wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)v4);
      uint64_t v7 = *(void *)(a1 + 24);
      uint64_t v8 = *(int *)(a1 + 32);
      *(_DWORD *)(a1 + 32) = v8 + 1;
      *(void *)(v7 + 8 * v++*(void *)(result + 8) = v6;
      uint64_t v4 = std::string::operator=(v6, v9);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 32));
  }
LABEL_11:
  sub_10037CF7C((wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(a1 + 56), a2 + 56);
  LOBYTE(v13) = *(unsigned char *)(a2 + 84);
  if ((_BYTE)v13)
  {
    if (*(unsigned char *)(a2 + 84))
    {
      uint64_t v14 = *(const std::string **)(a2 + 16);
      *(_DWORD *)(a1 + 84) |= 1u;
      int v15 = *(std::string **)(a1 + 16);
      if (v15 == (std::string *)&wireless_diagnostics::google::protobuf::internal::kEmptyString) {
        operator new();
      }
      std::string::operator=(v15, v14);
      int v13 = *(_DWORD *)(a2 + 84);
    }
    if ((v13 & 4) != 0)
    {
      *(_DWORD *)(a1 + 84) |= 4u;
      uint64_t v16 = *(void *)(a1 + 48);
      if (!v16) {
        operator new();
      }
      uint64_t v17 = *(void *)(a2 + 48);
      if (!v17) {
        uint64_t v17 = *(void *)(qword_100492AE8 + 48);
      }
      sub_100377AF4(v16, v17);
    }
  }
  return wireless_diagnostics::google::protobuf::UnknownFieldSet::MergeFrom((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8), (const wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a2 + 8));
}

void sub_10037BAAC()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10037BAD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10037BAE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10037BAFC(uint64_t a1)
{
  *(void *)a1 = off_10046AC08;
  uint64_t v2 = *(void *)(a1 + 16);
  if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if (qword_100492AE8 != a1)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
  }
  int v5 = *(_DWORD *)(a1 + 68);
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i < v5; ++i)
    {
      uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8 * i);
      if (v7)
      {
        (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        int v5 = *(_DWORD *)(a1 + 68);
      }
    }
  }
  if (*(void *)(a1 + 56)) {
    operator delete[]();
  }
  if (*(int *)(a1 + 36) >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::Delete();
      ++v8;
    }
    while (v8 < *(int *)(a1 + 36));
  }
  if (*(void *)(a1 + 24)) {
    operator delete[]();
  }
  wireless_diagnostics::google::protobuf::UnknownFieldSet::~UnknownFieldSet((wireless_diagnostics::google::protobuf::UnknownFieldSet *)(a1 + 8));

  wireless_diagnostics::google::protobuf::Message::~Message((wireless_diagnostics::google::protobuf::Message *)a1);
}

void sub_10037BC94(uint64_t a1)
{
  sub_10037BAFC(a1);

  operator delete();
}

uint64_t sub_10037BCCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 80) = a2;
  return result;
}

void sub_10037BCD4()
{
}

void sub_10037BD54()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10037BD7C(uint64_t this)
{
  uint64_t v1 = this;
  if (!*(unsigned char *)(this + 84)) {
    goto LABEL_9;
  }
  if (*(unsigned char *)(this + 84))
  {
    uint64_t v2 = *(void *)(this + 16);
    if ((_UNKNOWN *)v2 != &wireless_diagnostics::google::protobuf::internal::kEmptyString)
    {
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)uint64_t v2 = 0;
        *(void *)(v2 + ++*(void *)(result + 8) = 0;
        if ((*(unsigned char *)(this + 84) & 4) == 0) {
          goto LABEL_9;
        }
        goto LABEL_7;
      }
      *(unsigned char *)uint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((*(unsigned char *)(this + 84) & 4) == 0) {
    goto LABEL_9;
  }
LABEL_7:
  this = *(void *)(this + 48);
  if (this) {
    this = sub_100096674(this);
  }
LABEL_9:
  if (*(int *)(v1 + 32) >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      while (1)
      {
        uint64_t v4 = *(void *)(*(void *)(v1 + 24) + 8 * v3);
        if (*(char *)(v4 + 23) < 0) {
          break;
        }
        *(unsigned char *)uint64_t v4 = 0;
        *(unsigned char *)(v4 + 23) = 0;
        if (++v3 >= *(int *)(v1 + 32)) {
          goto LABEL_14;
        }
      }
      **(unsigned char **)uint64_t v4 = 0;
      *(void *)(v4 + ++*(void *)(result + 8) = 0;
      ++v3;
    }
    while (v3 < *(int *)(v1 + 32));
  }
LABEL_14:
  *(_DWORD *)(v1 + 32) = 0;
  if (*(int *)(v1 + 64) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(v1 + 56) + 8 * v5);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 32))(v6);
      ++v5;
    }
    while (v5 < *(int *)(v1 + 64));
  }
  uint64_t v8 = *(void *)(v1 + 8);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)(v1 + 8);
  *((_DWORD *)v7 + 14) = 0;
  *((_DWORD *)v7 + 19) = 0;
  if (v8)
  {
    return wireless_diagnostics::google::protobuf::UnknownFieldSet::ClearFallback(v7);
  }
  return this;
}

uint64_t sub_10037BED0(uint64_t result, wireless_diagnostics::google::protobuf::internal::WireFormat *this, uint64_t a3, wireless_diagnostics::google::protobuf::UnknownFieldSet *a4)
{
  uint64_t v5 = result;
  uint64_t v6 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 24);
  uint64_t v7 = (wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *)(result + 56);
  unsigned int v8 = result + 8;
LABEL_2:
  while (1)
  {
    uint64_t v9 = (unsigned __int8 *)*((void *)this + 1);
    if ((unint64_t)v9 >= *((void *)this + 2) || (char)*v9 < 0) {
      break;
    }
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)*v9;
    *((_DWORD *)this + ++*(void *)(result + 8) = v10;
    *((void *)this + 1) = v9 + 1;
    if (!v10) {
      return 1;
    }
LABEL_7:
    switch(v10 >> 3)
    {
      case 1u:
        int v11 = v10 & 7;
        if (v11 != 2) {
          goto LABEL_25;
        }
        *(_DWORD *)(v5 + 84) |= 1u;
        if (*(_UNKNOWN **)(v5 + 16) == &wireless_diagnostics::google::protobuf::internal::kEmptyString) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        uint64_t v12 = (unsigned char *)*((void *)this + 1);
        if ((unint64_t)v12 >= *((void *)this + 2) || *v12 != 18) {
          continue;
        }
        break;
      case 2u:
        int v11 = v10 & 7;
        if (v11 != 2) {
          goto LABEL_25;
        }
        int v13 = *(_DWORD *)(v5 + 36);
        int v14 = *(_DWORD *)(v5 + 32);
        if (v14 < v13) {
          goto LABEL_18;
        }
        goto LABEL_29;
      case 3u:
        int v11 = v10 & 7;
        if (v11 != 2) {
          goto LABEL_25;
        }
        *(_DWORD *)(v5 + 84) |= 4u;
        uint64_t v15 = *(void *)(v5 + 48);
        if (v15) {
          goto LABEL_22;
        }
        goto LABEL_36;
      case 4u:
        int v11 = v10 & 7;
        if (v11 != 2) {
          goto LABEL_25;
        }
        goto LABEL_48;
      default:
        int v11 = v10 & 7;
LABEL_25:
        if (v11 == 4) {
          return 1;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormat::SkipField(this, v10, v8, a4);
        if ((result & 1) == 0) {
          return 0;
        }
        continue;
    }
    do
    {
      *((void *)this + 1) = v12 + 1;
      int v13 = *(_DWORD *)(v5 + 36);
      int v14 = *(_DWORD *)(v5 + 32);
      if (v14 < v13)
      {
LABEL_18:
        *(_DWORD *)(v5 + 32) = v14 + 1;
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
      }
      else
      {
LABEL_29:
        if (v13 == *(_DWORD *)(v5 + 40))
        {
          uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v13 + 1);
          int v13 = *(_DWORD *)(v5 + 36);
        }
        *(_DWORD *)(v5 + 36) = v13 + 1;
        uint64_t v17 = wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase::New((wireless_diagnostics::google::protobuf::internal::StringTypeHandlerBase *)result);
        uint64_t v18 = *(void *)(v5 + 24);
        uint64_t v19 = *(int *)(v5 + 32);
        *(_DWORD *)(v5 + 32) = v19 + 1;
        *(void *)(v18 + 8 * v19) = v17;
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
      }
      uint64_t v12 = (unsigned char *)*((void *)this + 1);
      if ((unint64_t)v12 >= *((void *)this + 2)) {
        goto LABEL_2;
      }
      int v20 = *v12;
    }
    while (v20 == 18);
    if (v20 == 26)
    {
      *((void *)this + 1) = v12 + 1;
      *(_DWORD *)(v5 + 84) |= 4u;
      uint64_t v15 = *(void *)(v5 + 48);
      if (!v15) {
LABEL_36:
      }
        operator new();
LABEL_22:
      unsigned int v43 = 0;
      uint64_t v16 = (char *)*((void *)this + 1);
      if ((unint64_t)v16 >= *((void *)this + 2) || *v16 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v43))return 0; {
      }
        }
      else
      {
        unsigned int v43 = *v16;
        *((void *)this + 1) = v16 + 1;
      }
      int v21 = *((_DWORD *)this + 14);
      int v22 = *((_DWORD *)this + 15);
      *((_DWORD *)this + 14) = v21 + 1;
      if (v21 >= v22) {
        return 0;
      }
      int v23 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v43);
      if (!sub_100034DB8(v15, this, v24, v25) || !*((unsigned char *)this + 36)) {
        return 0;
      }
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v23);
      int v26 = *((_DWORD *)this + 14);
      BOOL v27 = __OFSUB__(v26, 1);
      int v28 = v26 - 1;
      if (v28 < 0 == v27) {
        *((_DWORD *)this + 14) = v28;
      }
      uint64_t v29 = (unsigned char *)*((void *)this + 1);
      if ((unint64_t)v29 < *((void *)this + 2) && *v29 == 34)
      {
        while (1)
        {
          *((void *)this + 1) = v29 + 1;
LABEL_48:
          int v30 = *(_DWORD *)(v5 + 68);
          uint64_t v31 = *(int *)(v5 + 64);
          if ((int)v31 >= v30)
          {
            if (v30 == *(_DWORD *)(v5 + 72))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v30 + 1);
              int v30 = *(_DWORD *)(v5 + 68);
            }
            *(_DWORD *)(v5 + 6++*(void *)(result + 8) = v30 + 1;
            operator new();
          }
          uint64_t v32 = *(void *)(v5 + 56);
          *(_DWORD *)(v5 + 64) = v31 + 1;
          uint64_t v33 = *(void *)(v32 + 8 * v31);
          unsigned int v44 = 0;
          uint64_t v34 = (char *)*((void *)this + 1);
          if ((unint64_t)v34 >= *((void *)this + 2) || *v34 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v44))return 0; {
          }
            }
          else
          {
            unsigned int v44 = *v34;
            *((void *)this + 1) = v34 + 1;
          }
          int v35 = *((_DWORD *)this + 14);
          int v36 = *((_DWORD *)this + 15);
          *((_DWORD *)this + 14) = v35 + 1;
          if (v35 >= v36) {
            return 0;
          }
          int v37 = wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this, v44);
          if (!sub_10037AD7C(v33, this, v38, v39) || !*((unsigned char *)this + 36)) {
            return 0;
          }
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this, v37);
          int v40 = *((_DWORD *)this + 14);
          BOOL v27 = __OFSUB__(v40, 1);
          int v41 = v40 - 1;
          if (v41 < 0 == v27) {
            *((_DWORD *)this + 14) = v41;
          }
          uint64_t v29 = (unsigned char *)*((void *)this + 1);
          int v42 = (unsigned char *)*((void *)this + 2);
          if (v29 >= v42 || *v29 != 34)
          {
            if (v29 == v42 && (*((_DWORD *)this + 11) || *((_DWORD *)this + 6) == *((_DWORD *)this + 10)))
            {
              *((_DWORD *)this + ++*(void *)(result + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)this + 36) = 1;
              return result;
            }
            goto LABEL_2;
          }
        }
      }
    }
  }
  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(this);
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedInputStream *)result;
  *((_DWORD *)this + ++*(void *)(result + 8) = result;
  if (result) {
    goto LABEL_7;
  }
  return 1;
}

void sub_10037C424()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

void sub_10037C44C()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10037C484(uint64_t result, const wireless_diagnostics::google::protobuf::MessageLite *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = result;
  if (*(unsigned char *)(result + 84)) {
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      ++v6;
    }
    while (v6 < *(int *)(v5 + 32));
  }
  if ((*(unsigned char *)(v5 + 84) & 4) != 0)
  {
    uint64_t v7 = *(void *)(v5 + 48);
    if (!v7) {
      uint64_t v7 = *(void *)(qword_100492AE8 + 48);
    }
    uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  }
  if (*(int *)(v5 + 64) >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(void *)(*(void *)(v5 + 56) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 64));
  }
  int v11 = *(void **)(v5 + 8);
  int v10 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)(v5 + 8);
  uint64_t v9 = v11;
  if (v11 && *v9 != v9[1])
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFields(v10, a2, a3);
  }
  return result;
}

wireless_diagnostics::google::protobuf::UnknownFieldSet *sub_10037C594(wireless_diagnostics::google::protobuf::internal::WireFormat *this, wireless_diagnostics::google::protobuf::UnknownFieldSet *a2, unsigned __int8 *a3, unsigned __int8 *a4)
{
  uint64_t v4 = a2;
  if ((*((unsigned char *)this + 84) & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v6 = *((void *)this + 2);
  *(unsigned char *)a2 = 10;
  unsigned int v7 = a2 + 1;
  if (*(char *)(v6 + 23) < 0)
  {
    uint64_t v8 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v6 + 8);
    if (v8 <= 0x7F) {
      goto LABEL_4;
    }
LABEL_6:
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v8, v7, a3);
    goto LABEL_7;
  }
  uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v6 + 23);
  if (*(unsigned __int8 *)(v6 + 23) > 0x7Fu) {
    goto LABEL_6;
  }
LABEL_4:
  *((unsigned char *)v4 + 1) = (_BYTE)v8;
  int v9 = v4 + 2;
LABEL_7:
  int v10 = *(char *)(v6 + 23);
  if (v10 >= 0) {
    int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v6;
  }
  else {
    int v11 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v6;
  }
  if (v10 >= 0) {
    uint64_t v12 = (const void *)*(unsigned __int8 *)(v6 + 23);
  }
  else {
    uint64_t v12 = (const void *)*(unsigned int *)(v6 + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v11, v12, v9, a4);
LABEL_14:
  if (*((int *)this + 8) >= 1)
  {
    for (uint64_t i = 0; i < *((int *)this + 8); ++i)
    {
      uint64_t v18 = *(void *)(*((void *)this + 3) + 8 * i);
      *(unsigned char *)uint64_t v4 = 18;
      if (*(char *)(v18 + 23) < 0)
      {
        uint64_t v19 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v18 + 8);
        if (v19 <= 0x7F)
        {
LABEL_28:
          *((unsigned char *)v4 + 1) = (_BYTE)v19;
          int v14 = v4 + 2;
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned __int8 *)(v18 + 23);
        if (*(unsigned __int8 *)(v18 + 23) <= 0x7Fu) {
          goto LABEL_28;
        }
      }
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v19, (int)v4 + 1, a3);
LABEL_17:
      int v15 = *(char *)(v18 + 23);
      if (v15 >= 0) {
        uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18;
      }
      else {
        uint64_t v16 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)v18;
      }
      if (v15 >= 0) {
        uint64_t v17 = (const void *)*(unsigned __int8 *)(v18 + 23);
      }
      else {
        uint64_t v17 = (const void *)*(unsigned int *)(v18 + 8);
      }
      uint64_t v4 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteRawToArray(v16, v17, v14, a4);
    }
  }
  if ((*((unsigned char *)this + 84) & 4) != 0)
  {
    int v20 = (unsigned int *)*((void *)this + 6);
    if (v20)
    {
      *(unsigned char *)uint64_t v4 = 26;
      unsigned int v21 = v4 + 1;
      int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20[27];
      if (v22 <= 0x7F)
      {
LABEL_32:
        *((unsigned char *)v4 + 1) = (_BYTE)v22;
        int v23 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_35:
        uint64_t v4 = sub_100378270((wireless_diagnostics::google::protobuf::internal::WireFormat *)v20, v23, a3, a4);
        goto LABEL_36;
      }
    }
    else
    {
      int v20 = *(unsigned int **)(qword_100492AE8 + 48);
      *(unsigned char *)uint64_t v4 = 26;
      unsigned int v21 = v4 + 1;
      int v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v20[27];
      if (v22 <= 0x7F) {
        goto LABEL_32;
      }
    }
    int v23 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v22, v21, a3);
    goto LABEL_35;
  }
LABEL_36:
  if (*((int *)this + 16) >= 1)
  {
    uint64_t v24 = 0;
    do
    {
      int v26 = *(unsigned int **)(*((void *)this + 7) + 8 * v24);
      *(unsigned char *)uint64_t v4 = 34;
      BOOL v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26[14];
      if (v27 > 0x7F)
      {
        int v25 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32FallbackToArray(v27, (int)v4 + 1, a3);
      }
      else
      {
        *((unsigned char *)v4 + 1) = (_BYTE)v27;
        int v25 = (wireless_diagnostics::google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      }
      uint64_t v4 = sub_10037B1B4((wireless_diagnostics::google::protobuf::internal::WireFormat *)v26, v25, a3, a4);
      ++v24;
    }
    while (v24 < *((int *)this + 16));
  }
  int v30 = (void *)*((void *)this + 1);
  uint64_t v29 = (wireless_diagnostics::google::protobuf::internal::WireFormat *)((char *)this + 8);
  int v28 = v30;
  if (!v30 || *v28 == v28[1]) {
    return v4;
  }

  return (wireless_diagnostics::google::protobuf::UnknownFieldSet *)wireless_diagnostics::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(v29, v4, a3);
}

uint64_t sub_10037C7D4(uint64_t a1, const wireless_diagnostics::google::protobuf::UnknownFieldSet *a2)
{
  char v3 = *(unsigned char *)(a1 + 84);
  if (!v3)
  {
    int v4 = 0;
    goto LABEL_23;
  }
  if ((*(unsigned char *)(a1 + 84) & 1) == 0)
  {
    int v4 = 0;
    if ((*(unsigned char *)(a1 + 84) & 4) == 0) {
      goto LABEL_23;
    }
LABEL_17:
    uint64_t v10 = *(void *)(a1 + 48);
    if (v10)
    {
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10037877C(v10, a2);
      if (v11 < 0x80)
      {
LABEL_19:
        int v12 = 1;
LABEL_22:
        v4 += v11 + v12 + 1;
        goto LABEL_23;
      }
    }
    else
    {
      int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10037877C(*(void *)(qword_100492AE8 + 48), a2);
      if (v11 < 0x80) {
        goto LABEL_19;
      }
    }
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11, a2);
    goto LABEL_22;
  }
  uint64_t v5 = *(void *)(a1 + 16);
  int v6 = *(unsigned __int8 *)(v5 + 23);
  if ((v6 & 0x80u) == 0) {
    unint64_t v7 = *(unsigned __int8 *)(v5 + 23);
  }
  else {
    unint64_t v7 = *(void *)(v5 + 8);
  }
  if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v7, a2);
    int v9 = *(unsigned __int8 *)(v5 + 23);
    if (*(char *)(v5 + 23) < 0) {
      int v9 = *(void *)(v5 + 8);
    }
    int v4 = v8 + 1 + v9;
    if ((*(_DWORD *)(a1 + 84) & 4) != 0) {
      goto LABEL_17;
    }
  }
  else
  {
    if ((v6 & 0x80u) != 0) {
      int v6 = *(void *)(v5 + 8);
    }
    int v4 = v6 + 2;
    if ((v3 & 4) != 0) {
      goto LABEL_17;
    }
  }
LABEL_23:
  int v13 = *(_DWORD *)(a1 + 32);
  int v14 = v13 + v4;
  if (v13 >= 1)
  {
    for (uint64_t i = 0; i < v13; ++i)
    {
      uint64_t v20 = *(void *)(*(void *)(a1 + 24) + 8 * i);
      int v17 = *(unsigned __int8 *)(v20 + 23);
      char v19 = v17;
      uint64_t v18 = *(void *)(v20 + 8);
      if ((v17 & 0x80u) == 0) {
        unint64_t v21 = *(unsigned __int8 *)(v20 + 23);
      }
      else {
        unint64_t v21 = v18;
      }
      if (v21 >= 0x80)
      {
        int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v21, a2);
        int v17 = *(unsigned __int8 *)(v20 + 23);
        uint64_t v18 = *(void *)(v20 + 8);
        int v13 = *(_DWORD *)(a1 + 32);
        char v19 = *(unsigned char *)(v20 + 23);
      }
      else
      {
        int v16 = 1;
      }
      if (v19 < 0) {
        int v17 = v18;
      }
      v14 += v16 + v17;
    }
  }
  int v22 = *(_DWORD *)(a1 + 64);
  uint64_t v23 = (v22 + v14);
  if (v22 >= 1)
  {
    uint64_t v24 = 0;
    do
    {
      int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)sub_10037B428(*(void *)(*(void *)(a1 + 56) + 8 * v24), a2);
      int v27 = (int)v26;
      if (v26 >= 0x80) {
        int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26, a2);
      }
      else {
        int v25 = 1;
      }
      uint64_t v23 = (v27 + v23 + v25);
      ++v24;
    }
    while (v24 < *(int *)(a1 + 64));
  }
  int v28 = *(void **)(a1 + 8);
  if (v28 && *v28 != v28[1]) {
    uint64_t v23 = wireless_diagnostics::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize((wireless_diagnostics::google::protobuf::internal::WireFormat *)(a1 + 8), a2)+ v23;
  }
  *(_DWORD *)(a1 + 80) = v23;
  return v23;
}

uint64_t sub_10037C9CC(const wireless_diagnostics::google::protobuf::Message *a1, const wireless_diagnostics::google::protobuf::Message *lpsrc)
{
  if (lpsrc == a1)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (v4) {
    return sub_10037B824((uint64_t)a1, (uint64_t)v4);
  }
  else {
    return wireless_diagnostics::google::protobuf::internal::ReflectionOps::Merge(lpsrc, a1, v5);
  }
}

void sub_10037CAAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void sub_10037CAC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10037CAD4(uint64_t result, uint64_t a2)
{
  if (a2 != result)
  {
    uint64_t v4 = result;
    (*(void (**)(uint64_t))(*(void *)result + 32))(result);
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v4 + 112);
    return v5(v4, a2);
  }
  return result;
}

uint64_t sub_10037CB60(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 84) & 4) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 48);
  if (v1)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 40))(v1);
    if (!result) {
      return result;
    }
    return 1;
  }
  uint64_t result = (*(uint64_t (**)(void))(**(void **)(qword_100492AE8 + 48) + 40))(*(void *)(qword_100492AE8 + 48));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_10037CBEC()
{
  uint64_t v0 = qword_10047E800;
  __dmb(0xBu);
  if (v0 != 2)
  {
    v2[1] = sub_1003746C0;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
  return qword_10047E7E8;
}

void sub_10037CC7C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10037CC90(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_10037CC98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_10037CCA0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 100);
}

uint64_t sub_10037CCA8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 108);
}

uint64_t sub_10037CCB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 84);
}

uint64_t sub_10037CCB8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_10037CCC0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 80);
}

uint64_t sub_10037CCC8(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_1003755DC(*(void *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_10037CDE8()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10037CE10(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_100376794(*(void *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_10037CF54()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10037CF7C(wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase *a1, uint64_t a2)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, *(_DWORD *)(a2 + 8) + *((_DWORD *)a1 + 2));
  if (*(int *)(a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v7 = *(void *)(*(void *)a2 + 8 * v5);
      int v8 = *((_DWORD *)a1 + 3);
      uint64_t v9 = *((int *)a1 + 2);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)a1 + 4))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(a1, v8 + 1);
          int v8 = *((_DWORD *)a1 + 3);
        }
        *((_DWORD *)a1 + 3) = v8 + 1;
        operator new();
      }
      uint64_t v6 = *(void *)a1;
      *((_DWORD *)a1 + 2) = v9 + 1;
      uint64_t result = sub_10037A838(*(void *)(v6 + 8 * v9), v7);
      ++v5;
    }
    while (v5 < *(int *)(a2 + 8));
  }
  return result;
}

void sub_10037D0A4()
{
  wireless_diagnostics::google::protobuf::Message::~Message(v0);
  operator delete();
}

uint64_t sub_10037D0D0(unsigned __int16 *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  id v11 = a4;
  int v12 = v11;
  if (v11 && fabs((double)((*(void *)(a2 + 240) - a5) / 1000000000)) <= 1.25)
  {
    unint64_t v13 = *((void *)a1 + 1);
    if (!(v13 % *a1))
    {
      long long v57 = 0u;
      memset(v58, 0, sizeof(v58));
      long long v56 = 0u;
      memset(v55, 0, sizeof(v55));
      [v11 gpsLocation];
      v53[2] = 0;
      v53[0] = off_10045DAB8;
      v53[1] = 0;
      v54 &= 0xFCu;
      sub_100076484((uint64_t)v53, *(double *)((char *)v55 + 4));
      sub_10007647C((uint64_t)v53, *(double *)((char *)v55 + 12));
      double v14 = *(double *)((char *)&v55[1] + 4);
      uint64_t v15 = v56;
      uint64_t v16 = *(unsigned int *)(a2 + 296);
      id v17 = objc_alloc_init((Class)NSMutableDictionary);
      v59[0] = @"externalLocUnc";
      uint64_t v18 = +[NSNumber numberWithDouble:v14];
      v60[0] = v18;
      v59[1] = @"externalLocType";
      char v19 = +[NSNumber numberWithUnsignedInt:v15];
      v60[1] = v19;
      v59[2] = @"yieldStatus";
      uint64_t v20 = +[NSNumber numberWithInt:v16];
      v60[2] = v20;
      v59[3] = @"pipelinedLocType";
      unint64_t v21 = +[NSNumber numberWithUnsignedInt:a3];
      v60[3] = v21;
      int v22 = +[NSDictionary dictionaryWithObjects:v60 forKeys:v59 count:4];
      [v17 setDictionary:v22];

      if ((*(unsigned char *)(a2 + 755) & 4) != 0)
      {
        uint64_t v23 = +[NSNumber numberWithDouble:(double)sub_10014B1B4(a2 + 40, (uint64_t)v53)];
        [v17 setObject:v23 forKey:@"distance"];

        int v25 = +[NSNumber numberWithDouble:*(double *)(a2 + 280)];
        [v17 setObject:v25 forKey:@"pipelinedUnc"];
      }
      int v26 = +[NSNumber numberWithDouble:*(double *)(a2 + 320)];
      [v17 setObject:v26 forKey:@"prbCoarseIndoorSaysIndoor"];

      if ((*(unsigned char *)(a2 + 757) & 2) != 0)
      {
        int v27 = +[NSNumber numberWithDouble:*(double *)(a2 + 560)];
        [v17 setObject:v27 forKey:@"signedDistToSurveyBound"];
      }
      char v28 = *(unsigned char *)(a2 + 456);
      if ((v28 & 0x20) != 0)
      {
        uint64_t v29 = +[NSNumber numberWithDouble:*(double *)(a2 + 448)];
        [v17 setObject:v29 forKey:@"prbCoarseIndoorSaysIndoorWifiAndGps"];

        char v28 = *(unsigned char *)(a2 + 456);
      }
      if ((v28 & 0x10) != 0)
      {
        int v30 = +[NSNumber numberWithDouble:*(double *)(a2 + 440)];
        [v17 setObject:v30 forKey:@"prbRawCLOutdoorServiceSaysIndoor"];

        char v28 = *(unsigned char *)(a2 + 456);
      }
      if ((v28 & 8) != 0)
      {
        uint64_t v31 = +[NSNumber numberWithDouble:*(double *)(a2 + 432)];
        [v17 setObject:v31 forKey:@"prbZAxisSaysIndoor"];
      }
      uint64_t v32 = *(void *)(a2 + 752);
      if ((v32 & 0x100000000000) != 0)
      {
        uint64_t v33 = +[NSNumber numberWithUnsignedInt:*(unsigned int *)(a2 + 608)];
        [v17 setObject:v33 forKey:@"yieldParticleFilterType"];

        uint64_t v32 = *(void *)(a2 + 752);
      }
      if ((v32 & 0x80) != 0)
      {
        uint64_t v34 = +[NSNumber numberWithInt:*(unsigned int *)(a2 + 128)];
        [v17 setObject:v34 forKey:@"floorOrdinal"];
      }
      if (*a6)
      {
        sub_100085B24(&buf, *a6 + 8);
        int v35 = sub_1001982CC(&buf, (unsigned __int8 ***)&qword_10047ED40);
        int v36 = v48;
        if (v48 && !atomic_fetch_add(&v48->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
          std::__shared_weak_count::__release_weak(v36);
        }
        if (v35)
        {
          sub_1000776C4(v46, *a6);
          sub_100148A04((uint64_t)v46, &buf);
          sub_1001AA12C((uint64_t)v45, (uint64_t)v53);
          sub_1001486EC((uint64_t)&buf, (uint64_t)v45, (uint64_t)v51);
          sub_100148878((uint64_t)v51, (uint64_t)v52);
          nullsub_15(v45);
          int v37 = v50;
          if (v50 && !atomic_fetch_add(&v50->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v37->__on_zero_shared)(v37);
            std::__shared_weak_count::__release_weak(v37);
          }
          uint64_t v38 = v49;
          if (v49 && !atomic_fetch_add(&v49->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
          nullsub_15(&buf);
          sub_100074A24(v46);
          char v39 = (void *)*a6;
          sub_1001A9C7C((uint64_t)v44, (uint64_t)v52);
          double v40 = sub_100370590(v39, (uint64_t)v44, 0, 1, 1, 0.0);
          nullsub_17(v44);
          int v41 = +[NSNumber numberWithDouble:v40];
          [v17 setObject:v41 forKey:@"externalLocSignedDistToSurveyBound"];

          nullsub_17(v52);
        }
      }
      id v43 = v17;
      AnalyticsSendEventLazy();

      nullsub_15(v53);
      unint64_t v13 = *((void *)a1 + 1);
    }
    *((void *)a1 + 1) = v13 + 1;
    uint64_t v24 = 1;
  }
  else
  {
    uint64_t v24 = 0;
  }

  return v24;
}

void sub_10037D830(_Unwind_Exception *a1)
{
  nullsub_15(&STACK[0x870]);
  _Unwind_Resume(a1);
}

id sub_10037D9A4(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_10037D9AC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Daemon");
  uint64_t v2 = (void *)qword_10047BF00;
  qword_10047BF00 = (uint64_t)v1;
}

void sub_10037D9F0()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10037DA68()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10037DAE0()
{
}

void sub_10037DB74(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10037DBD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  uint64_t v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)IndoorServiceTransactionManager;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_10037DC68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10037E1A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_10037E220()
{
  if (qword_10047BEF8 == -1)
  {
    uint64_t v0 = (void *)qword_10047BF00;
  }
  else
  {
    dispatch_once(&qword_10047BEF8, &stru_10046ADB8);
    uint64_t v0 = (void *)qword_10047BF00;
  }
  return v0;
}

void sub_10037E29C(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  uint64_t v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

void sub_10037E2E0(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Daemon");
  uint64_t v2 = (void *)qword_10047BF00;
  qword_10047BF00 = (uint64_t)v1;
}

void sub_10037E354(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10037E48C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10037E5A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  objc_sync_exit(v10);

  _Unwind_Resume(a1);
}

void sub_10037E650(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  _Unwind_Resume(a1);
}

void sub_10037E6C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10037E73C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10037E754(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10037E818(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10037E9A4(_Unwind_Exception *a1)
{
  objc_sync_exit(v4);

  _Unwind_Resume(a1);
}

void sub_10037E9DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10037EA98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10037EB14(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Daemon");
  uint64_t v2 = (void *)qword_10047BF00;
  qword_10047BF00 = (uint64_t)v1;
}

uint64_t sub_10037EB58(uint64_t result, uint64_t a2)
{
  unsigned int v2 = *(_DWORD *)(result + 32);
  if (!v2) {
    *(void *)(result + ++*(void *)(result + 24) = *(void *)(a2 + 240) - *(void *)(result + 8);
  }
  *(double *)(result + 40) = (*(double *)(a2 + 280) + *(double *)(result + 40) * (double)v2) / ((double)v2 + 1.0);
  *(_DWORD *)(result + 32) = v2 + 1;
  if (!*(_DWORD *)(a2 + 524)) {
    ++*(_DWORD *)(result + 36);
  }
  return result;
}

uint64_t sub_10037EBB4(uint64_t a1)
{
  if (qword_10047BED8 != -1) {
    dispatch_once(&qword_10047BED8, &stru_10046AF38);
  }
  unsigned int v2 = (id)qword_10047BEE0;
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    double v3 = (double)(uint64_t)(*(void *)(a1 + 16) - *(void *)(a1 + 8)) / 1000000000.0;
    *(_DWORD *)uint64_t buf = 134351873;
    double v4 = (double)*(uint64_t *)(a1 + 24);
    int v5 = *(_DWORD *)(a1 + 32);
    int v6 = *(_DWORD *)(a1 + 36);
    uint64_t v7 = *(void *)(a1 + 40);
    int v8 = *(_DWORD *)(a1 + 48);
    uint64_t v9 = *(void *)(a1 + 56);
    int v10 = *(_DWORD *)(a1 + 64);
    int v11 = *(_DWORD *)(a1 + 68);
    int v12 = *(_DWORD *)(a1 + 72);
    int v13 = *(_DWORD *)(a1 + 76);
    uint64_t v14 = *(void *)(a1 + 80);
    double v17 = v3;
    __int16 v18 = 2050;
    double v19 = v4 / 1000000000.0;
    __int16 v20 = 1026;
    int v21 = v5;
    __int16 v22 = 1026;
    int v23 = v6;
    __int16 v24 = 2050;
    uint64_t v25 = v7;
    __int16 v26 = 1025;
    int v27 = v8;
    __int16 v28 = 2049;
    uint64_t v29 = v9;
    __int16 v30 = 1026;
    int v31 = v10;
    __int16 v32 = 1026;
    int v33 = v11;
    __int16 v34 = 1026;
    int v35 = v12;
    __int16 v36 = 1025;
    int v37 = v13;
    __int16 v38 = 2049;
    uint64_t v39 = v14;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEBUG, "LocalizationSessionStats, length, %{public}.3lf, ttff, %{public}.3lf, numOfFix, %{public}d, numOfIndoorFix, %{public}d, avgHAcc, %{public}.2lf, changeOfUniverse, %{private}d, avgNumOfSelectedLoc, %{private}.2lf, changeOfLocContext, %{public}d, numOfVL, %{public}d, numOfVIO, %{public}d, numOfWifiScan, %{private}d, avgNumApsPerScan, %{private}.2lf", buf, 0x5Eu);
  }

  AnalyticsSendEventLazy();
  return 1;
}

id sub_10037F648(unsigned int *a1)
{
  v16[0] = @"sessionLength";
  uint64_t v15 = +[NSNumber numberWithInt:a1[8]];
  v17[0] = v15;
  v16[1] = @"ttff";
  uint64_t v14 = +[NSNumber numberWithInt:a1[9]];
  v17[1] = v14;
  void v16[2] = @"numOfFixes";
  int v13 = +[NSNumber numberWithInt:a1[10]];
  void v17[2] = v13;
  double v16[3] = @"numOfIndoorFixes";
  unsigned int v2 = +[NSNumber numberWithInt:a1[11]];
  v17[3] = v2;
  v16[4] = @"avgHAcc";
  double v3 = +[NSNumber numberWithInt:a1[12]];
  v17[4] = v3;
  v16[5] = @"numOfUniverseChange";
  double v4 = +[NSNumber numberWithInt:a1[13]];
  std::exception_ptr v17[5] = v4;
  v16[6] = @"avgNumOfSelectedLocs";
  int v5 = +[NSNumber numberWithInt:a1[14]];
  v17[6] = v5;
  v16[7] = @"numOfLocContextChange";
  int v6 = +[NSNumber numberWithInt:a1[15]];
  v17[7] = v6;
  v16[8] = @"numOfVL";
  uint64_t v7 = +[NSNumber numberWithInt:a1[16]];
  v17[8] = v7;
  v16[9] = @"numOfVIO";
  int v8 = +[NSNumber numberWithInt:a1[17]];
  v17[9] = v8;
  v16[10] = @"numOfWifiScan";
  uint64_t v9 = +[NSNumber numberWithInt:a1[18]];
  v17[10] = v9;
  v16[11] = @"avgNumOfApsInWifiScan";
  int v10 = +[NSNumber numberWithInt:a1[19]];
  void v17[11] = v10;
  int v11 = +[NSDictionary dictionaryWithObjects:v17 forKeys:v16 count:12];

  return v11;
}

void sub_10037F8E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

double sub_10037F98C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  unsigned int v4 = *(_DWORD *)(a1 + 76);
  double result = ((double)(unint64_t)(0x2E8BA2E8BA2E8BA3 * ((uint64_t)(a4[1] - *a4) >> 3))
          + *(double *)(a1 + 80) * (double)v4)
         / ((double)v4 + 1.0);
  *(double *)(a1 + 80) = result;
  *(_DWORD *)(a1 + 76) = v4 + 1;
  return result;
}

void sub_10037F9E0()
{
}

void sub_10037FA50(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  unsigned int v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

void sub_10037FA94()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10037FB0C()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10037FB84()
{
}

void sub_10037FBF4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Daemon");
  unsigned int v2 = (void *)qword_10047BF00;
  qword_10047BF00 = (uint64_t)v1;
}

void sub_10037FC38()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_10037FCB0()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_10037FD28()
{
}

void sub_10037FDFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10037FE84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10037FE9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1003800E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100380290(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003802E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100380470(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003806C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003806D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100380818(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100380828(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10038083C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100380850(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100380BE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, id location)
{
  _Unwind_Resume(a1);
}

void sub_100380CEC(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Daemon");
  unsigned int v2 = (void *)qword_10047BF00;
  qword_10047BF00 = (uint64_t)v1;
}

void sub_100380D30(uint64_t a1)
{
  os_log_t v1 = (id *)(a1 + 32);
  if (qword_10047BEF8 != -1)
  {
    dispatch_once(&qword_10047BEF8, &stru_10046AF78);
    unsigned int v2 = qword_10047BF00;
    if (!os_log_type_enabled((os_log_t)qword_10047BF00, OS_LOG_TYPE_INFO)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  unsigned int v2 = qword_10047BF00;
  if (os_log_type_enabled((os_log_t)qword_10047BF00, OS_LOG_TYPE_INFO))
  {
LABEL_3:
    *(_WORD *)unsigned int v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "Connection invalidated", v4, 2u);
  }
LABEL_4:
  id WeakRetained = objc_loadWeakRetained(v1);
  [WeakRetained setExportedObject:0];
}

void sub_100380DF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100380E00(uint64_t a1, uint64_t a2)
{
}

void sub_100380E0C(uint64_t a1)
{
}

void sub_100380E14()
{
}

void sub_100380E3C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  *((unsigned char *)&v28.__r_.__value_.__s + 23) = 15;
  strcpy((char *)&v28, "ActivityPolicy[");
  unsigned int v4 = std::string::append(&v28, "interval=");
  long long v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
  v29.__r_.__value_.__r.__words[2] = v4->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v29.__r_.__value_.__l.__data_ = v5;
  v4->__r_.__value_.__l.__size_ = 0;
  v4->__r_.__value_.__r.__words[2] = 0;
  v4->__r_.__value_.__r.__words[0] = 0;
  std::to_string(&v27, *(double *)(a1 + 8));
  if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v6 = &v27;
  }
  else {
    int v6 = (std::string *)v27.__r_.__value_.__r.__words[0];
  }
  if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v27.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v27.__r_.__value_.__l.__size_;
  }
  int v8 = std::string::append(&v29, (const std::string::value_type *)v6, size);
  long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
  v30.__r_.__value_.__r.__words[2] = v8->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v9;
  v8->__r_.__value_.__l.__size_ = 0;
  v8->__r_.__value_.__r.__words[2] = 0;
  v8->__r_.__value_.__r.__words[0] = 0;
  int v10 = std::string::append(&v30, ",grace period=");
  long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v31.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  double v12 = *(double *)(a1 + 24);
  if (!*(unsigned char *)(a1 + 16)) {
    double v12 = *(double *)(a1 + 8) * 0.5;
  }
  std::to_string(&v26, v12);
  if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v13 = &v26;
  }
  else {
    int v13 = (std::string *)v26.__r_.__value_.__r.__words[0];
  }
  if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v14 = HIBYTE(v26.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v14 = v26.__r_.__value_.__l.__size_;
  }
  uint64_t v15 = std::string::append(&v31, (const std::string::value_type *)v13, v14);
  long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
  v32.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v32.__r_.__value_.__l.__data_ = v16;
  v15->__r_.__value_.__l.__size_ = 0;
  v15->__r_.__value_.__r.__words[2] = 0;
  v15->__r_.__value_.__r.__words[0] = 0;
  double v17 = std::string::append(&v32, ",delay=");
  long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
  v33.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v33.__r_.__value_.__l.__data_ = v18;
  v17->__r_.__value_.__l.__size_ = 0;
  v17->__r_.__value_.__r.__words[2] = 0;
  v17->__r_.__value_.__r.__words[0] = 0;
  double v19 = *(double *)(a1 + 40);
  if (!*(unsigned char *)(a1 + 32)) {
    double v19 = *(double *)(a1 + 8) * 0.5;
  }
  std::to_string(&__p, v19);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v21 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v21 = __p.__r_.__value_.__l.__size_;
  }
  __int16 v22 = std::string::append(&v33, (const std::string::value_type *)p_p, v21);
  long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
  v34.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v34.__r_.__value_.__l.__data_ = v23;
  v22->__r_.__value_.__l.__size_ = 0;
  v22->__r_.__value_.__r.__words[2] = 0;
  v22->__r_.__value_.__r.__words[0] = 0;
  __int16 v24 = std::string::append(&v34, " ]");
  *a2 = *v24;
  v24->__r_.__value_.__l.__size_ = 0;
  v24->__r_.__value_.__r.__words[2] = 0;
  v24->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v34.__r_.__value_.__l.__data_);
    if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
LABEL_25:
      if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_26;
      }
      goto LABEL_36;
    }
  }
  else if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    goto LABEL_25;
  }
  operator delete(__p.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v33.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_26:
    if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_37;
  }
LABEL_36:
  operator delete(v33.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v32.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_27:
    if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_38;
  }
LABEL_37:
  operator delete(v32.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v26.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_28:
    if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_39;
  }
LABEL_38:
  operator delete(v26.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v31.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_29:
    if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_40;
  }
LABEL_39:
  operator delete(v31.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v30.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_30:
    if ((SHIBYTE(v27.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_41;
  }
LABEL_40:
  operator delete(v30.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v27.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_31:
    if ((SHIBYTE(v29.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_42;
  }
LABEL_41:
  operator delete(v27.__r_.__value_.__l.__data_);
  if ((SHIBYTE(v29.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
LABEL_32:
    if ((SHIBYTE(v28.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
LABEL_43:
    operator delete(v28.__r_.__value_.__l.__data_);
    return;
  }
LABEL_42:
  operator delete(v29.__r_.__value_.__l.__data_);
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
    goto LABEL_43;
  }
}

void sub_100381138(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,void *a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,uint64_t a39,void *a40,uint64_t a41,int a42,__int16 a43,char a44,char a45,uint64_t a46,void *a47,uint64_t a48,int a49,__int16 a50,char a51,char a52)
{
  if (*(char *)(v52 - 41) < 0)
  {
    operator delete(*(void **)(v52 - 64));
    if ((a14 & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v52 - 73) & 0x80000000) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((a14 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(__p);
  if ((*(char *)(v52 - 73) & 0x80000000) == 0)
  {
LABEL_4:
    if ((*(char *)(v52 - 105) & 0x80000000) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  operator delete(*(void **)(v52 - 96));
  if ((*(char *)(v52 - 105) & 0x80000000) == 0)
  {
LABEL_5:
    if ((a20 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  operator delete(*(void **)(v52 - 128));
  if ((a20 & 0x80000000) == 0)
  {
LABEL_6:
    if ((a52 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  operator delete(a15);
  if ((a52 & 0x80000000) == 0)
  {
LABEL_7:
    if ((a45 & 0x80000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  operator delete(a47);
  if ((a45 & 0x80000000) == 0)
  {
LABEL_8:
    if ((a26 & 0x80000000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  operator delete(a40);
  if ((a26 & 0x80000000) == 0)
  {
LABEL_9:
    if ((a38 & 0x80000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_19:
  operator delete(a21);
  if ((a38 & 0x80000000) == 0)
  {
LABEL_10:
    if ((a32 & 0x80000000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_21;
  }
LABEL_20:
  operator delete(a33);
  if ((a32 & 0x80000000) == 0) {
LABEL_11:
  }
    _Unwind_Resume(exception_object);
LABEL_21:
  operator delete(a27);
  _Unwind_Resume(exception_object);
}

void sub_1003812B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    JUMPOUT(0x1003812A4);
  }
  JUMPOUT(0x10038118CLL);
}

unsigned char *sub_1003812C4(unsigned char *result)
{
  if (result[32]) {
    result[32] = 0;
  }
  if (result[16]) {
    result[16] = 0;
  }
  if (*result) {
    *double result = 0;
  }
  return result;
}

void sub_10038131C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003813B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003815B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  long long v18 = v16;
  objc_destroyWeak(v18);
  objc_destroyWeak((id *)&a9);
  objc_destroyWeak(&location);
  objc_destroyWeak(v15);
  objc_destroyWeak((id *)(v17 - 56));
  _Unwind_Resume(a1);
}

void sub_1003815EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v16 - 56));
  _Unwind_Resume(a1);
}

void sub_100381610(uint64_t a1, void *a2)
{
  unsigned int v2 = (id *)(a1 + 32);
  double v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  if (!WeakRetained) {
    goto LABEL_12;
  }
  xpc_activity_state_t state = xpc_activity_get_state(v3);
  if (!state)
  {
    if (qword_10047BEF8 == -1)
    {
      uint64_t v7 = qword_10047BF00;
      if (!os_log_type_enabled((os_log_t)qword_10047BF00, OS_LOG_TYPE_DEFAULT))
      {
LABEL_11:
        [WeakRetained handleTileCleanupCheckIn:v3];
        goto LABEL_12;
      }
    }
    else
    {
      dispatch_once(&qword_10047BEF8, &stru_10046B028);
      uint64_t v7 = qword_10047BF00;
      if (!os_log_type_enabled((os_log_t)qword_10047BF00, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
    }
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "@CtsClear, CHECK_IN", buf, 2u);
    goto LABEL_11;
  }
  if (state == 2)
  {
    if (qword_10047BEF8 == -1)
    {
      int v6 = qword_10047BF00;
      if (!os_log_type_enabled((os_log_t)qword_10047BF00, OS_LOG_TYPE_DEFAULT))
      {
LABEL_7:
        [WeakRetained handleTileCleanup:v3];
        goto LABEL_12;
      }
    }
    else
    {
      dispatch_once(&qword_10047BEF8, &stru_10046B028);
      int v6 = qword_10047BF00;
      if (!os_log_type_enabled((os_log_t)qword_10047BF00, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_7;
      }
    }
    *(_WORD *)int v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "@CtsClear, RUN", v8, 2u);
    goto LABEL_7;
  }
LABEL_12:
}

void sub_10038179C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003817B4(uint64_t a1, uint64_t a2)
{
}

void sub_1003817C0(uint64_t a1)
{
}

void sub_1003817C8(uint64_t a1, void *a2)
{
  unsigned int v2 = (id *)(a1 + 32);
  double v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  if (!WeakRetained) {
    goto LABEL_12;
  }
  xpc_activity_state_t state = xpc_activity_get_state(v3);
  if (!state)
  {
    if (qword_10047BEF8 == -1)
    {
      uint64_t v7 = qword_10047BF00;
      if (!os_log_type_enabled((os_log_t)qword_10047BF00, OS_LOG_TYPE_DEFAULT))
      {
LABEL_11:
        [WeakRetained handleVacuumDBsCheckIn:v3];
        goto LABEL_12;
      }
    }
    else
    {
      dispatch_once(&qword_10047BEF8, &stru_10046B028);
      uint64_t v7 = qword_10047BF00;
      if (!os_log_type_enabled((os_log_t)qword_10047BF00, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_11;
      }
    }
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "@CtsVacuum, CHECK_IN", buf, 2u);
    goto LABEL_11;
  }
  if (state == 2)
  {
    if (qword_10047BEF8 == -1)
    {
      int v6 = qword_10047BF00;
      if (!os_log_type_enabled((os_log_t)qword_10047BF00, OS_LOG_TYPE_DEFAULT))
      {
LABEL_7:
        [WeakRetained handleVacuumDBs:v3];
        goto LABEL_12;
      }
    }
    else
    {
      dispatch_once(&qword_10047BEF8, &stru_10046B028);
      int v6 = qword_10047BF00;
      if (!os_log_type_enabled((os_log_t)qword_10047BF00, OS_LOG_TYPE_DEFAULT)) {
        goto LABEL_7;
      }
    }
    *(_WORD *)int v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "@CtsVacuum, RUN", v8, 2u);
    goto LABEL_7;
  }
LABEL_12:
}

void sub_100381954(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10038196C(uint64_t a1, uint64_t a2)
{
}

void sub_100381978(uint64_t a1)
{
}

void sub_100381DA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100381E0C(uint64_t a1, void *a2)
{
  xpc_object_t xdict = a2;
  if (*(unsigned char *)a1) {
    xpc_dictionary_set_double(xdict, XPC_ACTIVITY_INTERVAL, *(double *)(a1 + 8));
  }
  if (*(unsigned char *)(a1 + 16)) {
    xpc_dictionary_set_double(xdict, XPC_ACTIVITY_GRACE_PERIOD, *(double *)(a1 + 24));
  }
  if (*(unsigned char *)(a1 + 32)) {
    xpc_dictionary_set_double(xdict, XPC_ACTIVITY_DELAY, *(double *)(a1 + 40));
  }
  double v3 = *(const char **)(a1 + 48);
  if (v3) {
    xpc_dictionary_set_string(xdict, XPC_ACTIVITY_PRIORITY, v3);
  }
  int v4 = *(_DWORD *)(a1 + 56);
  if (v4 == 1)
  {
    long long v5 = (const char **)&XPC_ACTIVITY_REQUIRES_CLASS_B;
  }
  else
  {
    if (v4 != 2) {
      goto LABEL_14;
    }
    long long v5 = (const char **)&XPC_ACTIVITY_REQUIRES_CLASS_C;
  }
  xpc_dictionary_set_BOOL(xdict, *v5, 1);
LABEL_14:
}

void sub_100381F04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100381F18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100381F2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100381F40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100381F54(uint64_t a1, void *a2)
{
  id v6 = a2;
  uint64_t v7 = xpc_dictionary_get_value(v6, XPC_ACTIVITY_INTERVAL);
  int v8 = v7;
  if (v7) {
    double value = xpc_double_get_value(v7);
  }

  long long v9 = xpc_dictionary_get_value(v6, XPC_ACTIVITY_GRACE_PERIOD);
  int v10 = v9;
  if (v9) {
    double v3 = xpc_double_get_value(v9);
  }

  long long v11 = xpc_dictionary_get_value(v6, XPC_ACTIVITY_DELAY);
  double v12 = v11;
  if (v11) {
    double v4 = xpc_double_get_value(v11);
  }

  string = xpc_dictionary_get_string(v6, XPC_ACTIVITY_PRIORITY);
  *(unsigned char *)a1 = 0;
  if (v8)
  {
    *(double *)(a1 + ++*(void *)(result + 8) = value;
    *(unsigned char *)a1 = 1;
  }
  *(unsigned char *)(a1 + 16) = 0;
  if (v10)
  {
    *(double *)(a1 + ++*(void *)(result + 24) = v3;
    *(unsigned char *)(a1 + 16) = 1;
  }
  *(unsigned char *)(a1 + 32) = 0;
  if (v12)
  {
    *(double *)(a1 + 40) = v4;
    *(unsigned char *)(a1 + 32) = 1;
  }
  *(void *)(a1 + 4++*(void *)(result + 8) = string;
  *(_DWORD *)(a1 + 56) = 0;

  return a1;
}

void sub_100382094(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003820A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003820BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003820D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003820E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003820F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100382100(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003822F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  uint64_t v17 = v16;

  _Unwind_Resume(a1);
}

void sub_10038231C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10038232C(uint64_t a1)
{
  if (!xpc_activity_set_state(*(xpc_activity_t *)(a1 + 32), 5))
  {
    if (qword_10047BEF8 != -1) {
      dispatch_once(&qword_10047BEF8, &stru_10046B028);
    }
    unsigned int v2 = (id)qword_10047BF00;
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    {
      xpc_activity_state_t state = xpc_activity_get_state(*(xpc_activity_t *)(a1 + 32));
      int v4 = 134349056;
      xpc_activity_state_t v5 = state;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "failed to mark vacuum db activity as done.  current state is %{public}ld", (uint8_t *)&v4, 0xCu);
    }
  }
}

void sub_100382414(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100382598(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003828C4(_Unwind_Exception *a1)
{
  int v4 = v3;

  _Unwind_Resume(a1);
}

void sub_100382944(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Daemon");
  unsigned int v2 = (void *)qword_10047BF00;
  qword_10047BF00 = (uint64_t)v1;
}

void sub_100382988()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_100382A00()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_100382A78()
{
  qword_10047E818 = 0x40E5180000000000;
  byte_10047E810 = 1;
  byte_10047E820 = 0;
  byte_10047E830 = 0;
  qword_10047E840 = (uint64_t)XPC_ACTIVITY_PRIORITY_MAINTENANCE;
  dword_10047E848 = 2;
  __cxa_atexit((void (*)(void *))sub_1003812C4, &byte_10047E810, (void *)&_mh_execute_header);
  qword_10047E858 = 0x411FA40000000000;
  byte_10047E850 = 1;
  byte_10047E860 = 0;
  byte_10047E870 = 0;
  qword_10047E880 = (uint64_t)XPC_ACTIVITY_PRIORITY_MAINTENANCE;
  dword_10047E888 = 2;
  __cxa_atexit((void (*)(void *))sub_1003812C4, &byte_10047E850, (void *)&_mh_execute_header);
  byte_10047E890 = 1;
  qword_10047E898 = 0x40C5180000000000;
  byte_10047E8A0 = 0;
  byte_10047E8B0 = 0;
  qword_10047E8C0 = (uint64_t)XPC_ACTIVITY_PRIORITY_MAINTENANCE;
  dword_10047E8C8 = 2;
  __cxa_atexit((void (*)(void *))sub_1003812C4, &byte_10047E890, (void *)&_mh_execute_header);
}

void sub_100382C44(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100382D78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100382D8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100382DA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100382E04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100382E80(uint64_t a1)
{
  *(void *)a1 = off_10045A508;
  *(_OWORD *)(a1 + ++*(void *)(result + 8) = 0u;
  *(_OWORD *)(a1 + ++*(void *)(result + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 6++*(void *)(result + 8) = 0u;
  *(_OWORD *)(a1 + 8++*(void *)(result + 8) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 16++*(void *)(result + 8) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 225) = 0u;
  *(void *)(a1 + 24++*(void *)(result + 8) = off_10045A4C8;
  *(void *)(a1 + 256) = 0;
  *(_DWORD *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  *(unsigned char *)(a1 + 280) &= 0xF0u;
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 28++*(void *)(result + 8) = off_10045A4E8;
  *(void *)(a1 + 296) = a1 + 304;
  *(void *)(a1 + 32++*(void *)(result + 8) = 0;
  *(void *)(a1 + 336) = 0;
  *(_DWORD *)(a1 + 344) = 0;
  *(void *)(a1 + 320) = 0;
  *(unsigned char *)(a1 + 348) &= 0xF8u;
  *(void *)(a1 + 384) = 0;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 376) = 0;
  *(_DWORD *)(a1 + 36++*(void *)(result + 8) = 0;
  unsigned __int8 v1 = *(unsigned char *)(a1 + 402);
  *(void *)(a1 + 352) = 0;
  *(void *)(a1 + 360) = 0;
  *(_WORD *)(a1 + 400) = 0;
  *(unsigned char *)(a1 + 402) = ((v1 >> 2 << 18) | 0x10000u) >> 16;
  sub_100170CDC(7, &v2);
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  sub_1000DBAD0();
}

void sub_100383284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1000DB9E0((uint64_t)va);
  sub_1000DB938(v5 - 48);
  sub_1000BA884(v5 - 32);
  sub_1000A318C(v4);
  _Unwind_Resume(a1);
}

void sub_1003832D0(_Unwind_Exception *a1)
{
  sub_1000A318C(v1);
  _Unwind_Resume(a1);
}

void sub_1003832E4(uint64_t a1)
{
  char v2 = 20;
  strcpy(__p, "datarun_metadata.bin");
  if (*(char *)(a1 + 23) < 0) {
    sub_1000559FC(&__dst, *(void **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __dst = *(std::string *)a1;
  }
  sub_1000512AC(&__dst, (uint64_t)__p);
  if (v2 < 0) {
    operator delete(*(void **)__p);
  }
  sub_100382E80((uint64_t)__p);
}

void sub_1003835E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *__p,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a40 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1003836A4(uint64_t a1, uint64_t a2, void *__src, int a4)
{
  size_t v7 = __src[2];
  size_t __n = v7;
  __srca[0] = 0;
  if (v7 < 0x11)
  {
    memcpy(__srca, __src, v7);
    size_t v13 = __n;
    v12[0] = 0;
    if (__n < 0x11)
    {
      memcpy(v12, __srca, __n);
      __dst[2] = v13;
      __dst[0] = 0;
      if (v13 <= 0x10)
      {
        memcpy(__dst, v12, v13);
        int v11 = a4;
        sub_100383FD8(a1, a2, (uint64_t)__dst);
      }
      operator new[]();
    }
    operator new[]();
  }
  operator new[]();
}

void sub_100383880(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  if (a17) {
    operator delete[]();
  }
  if (v17 >= 0x11)
  {
    if (a10) {
      operator delete[]();
    }
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_1003838F0(std::string *__dst, long long *a2, int a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000559FC(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    __dst->__r_.__value_.__r.__words[2] = *((void *)a2 + 2);
    *(_OWORD *)&__dst->__r_.__value_.__l.__data_ = v5;
  }
  *((unsigned char *)&__p.__r_.__value_.__s + 23) = 12;
  strcpy((char *)&__p, "hybridlogger");
  if (SHIBYTE(__dst->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_1000559FC(&__dst[1], __dst->__r_.__value_.__l.__data_, __dst->__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&__dst[1].__r_.__value_.__l.__data_ = *(_OWORD *)&__dst->__r_.__value_.__l.__data_;
    __dst[1].__r_.__value_.__r.__words[2] = __dst->__r_.__value_.__r.__words[2];
  }
  sub_1000512AC(__dst + 1, (uint64_t)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  *((unsigned char *)&__p.__r_.__value_.__s + 23) = 11;
  strcpy((char *)&__p, "unprocessed");
  if (SHIBYTE(__dst->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_1000559FC(&__dst[2], __dst->__r_.__value_.__l.__data_, __dst->__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)&__dst[2].__r_.__value_.__l.__data_ = *(_OWORD *)&__dst->__r_.__value_.__l.__data_;
    __dst[2].__r_.__value_.__r.__words[2] = __dst->__r_.__value_.__r.__words[2];
  }
  sub_1000512AC(__dst + 2, (uint64_t)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  __dst[3].__r_.__value_.__s.__data_[0] = a3;
  sub_1000521C4(__dst);
  if (!v6)
  {
    sub_1000AE4B0(v9, "");
    sub_1001661BC("Need absolute directory for datarundb", &__p);
    sub_10016A2C4((uint64_t)v9, (uint64_t)&__p, 1);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if (v10 < 0) {
      operator delete(v9[0]);
    }
    sub_1000D11E0((uint64_t)v8);
  }
  if (a3)
  {
    sub_100056B28((const char *)&__dst[2], 0, (int *)&__p);
    if (LODWORD(__p.__r_.__value_.__l.__data_) == 3)
    {
      sub_10003F5E8((uint64_t)&__dst[1], 0);
      goto LABEL_18;
    }
    sub_1000AE4B0(v9, "");
    sub_10029A2BC("Couldn't find unprocessed directory @ ", &__p);
    sub_1000DA214((uint64_t)&__dst[2], &v12);
    sub_10016A2C4((uint64_t)v9, (uint64_t)&__p, 2);
    if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v12.__r_.__value_.__l.__data_);
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_31:
        if ((v10 & 0x80000000) == 0) {
          goto LABEL_32;
        }
LABEL_38:
        operator delete(v9[0]);
LABEL_32:
        sub_1000D11E0((uint64_t)v8);
      }
    }
    else if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_31;
    }
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((v10 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_38;
  }
LABEL_18:
  sub_100056B28((const char *)&__dst[1], 0, (int *)&__p);
  if (LODWORD(__p.__r_.__value_.__l.__data_) != 3)
  {
    sub_1000AE4B0(v9, "");
    sub_1000DB8E8("Couldn't find rootdir @ ", &__p);
    sub_1000DA214((uint64_t)&__dst[1], &v12);
    sub_10016A2C4((uint64_t)v9, (uint64_t)&__p, 2);
    if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(v12.__r_.__value_.__l.__data_);
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_27:
        if ((v10 & 0x80000000) == 0) {
          goto LABEL_28;
        }
LABEL_35:
        operator delete(v9[0]);
LABEL_28:
        sub_1000D11E0((uint64_t)v8);
      }
    }
    else if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
    {
      goto LABEL_27;
    }
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((v10 & 0x80000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_35;
  }
  return __dst;
}

void sub_100383C70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v27 + 71) < 0) {
    operator delete(*v29);
  }
  if (*(char *)(v27 + 47) < 0) {
    operator delete(*v28);
  }
  if (*(char *)(v27 + 23) < 0) {
    operator delete(*(void **)v27);
  }
  _Unwind_Resume(exception_object);
}

void ***sub_100383D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  v19[0] = 0;
  v19[1] = 0;
  uint64_t v20 = 0;
  long long v18 = 0;
  sub_1000AE7E8(&v18, a1 + 24, 0, v19);
  unint64_t v17 = 0;
  long long v5 = v18;
  if (v18)
  {
    uint64_t v6 = 0;
    do
    {
      if ((!v5 || v5[1] == v5[2]) && (!v6 || v6[1] == v6[2])) {
        break;
      }
      if ((v20 & 1) == 0 || (v20 == 1 ? (BOOL v8 = LODWORD(v19[0]) == 0) : (BOOL v8 = 0), v8))
      {
        sub_100056AA4(*((void *)v5[2] - 1) + 8, 0, &v16);
        if (LODWORD(v16) == 3)
        {
          sub_10009BB3C((unsigned char *)(*((void *)v18[2] - 1) + 8), v14);
          if (*(char *)(a2 + 23) < 0)
          {
            sub_1000559FC(__p, *(void **)a2, *(void *)(a2 + 8));
          }
          else
          {
            *(_OWORD *)std::string __p = *(_OWORD *)a2;
            uint64_t v13 = *(void *)(a2 + 16);
          }
          int v9 = sub_10004008C((unint64_t)v14, (unint64_t)__p);
          if (SHIBYTE(v13) < 0)
          {
            operator delete(__p[0]);
            if (v15 < 0)
            {
LABEL_24:
              operator delete(v14[0]);
              if (!v9) {
LABEL_28:
              }
                sub_1003832E4(*((void *)v18[2] - 1) + 8);
              goto LABEL_25;
            }
          }
          else if (v15 < 0)
          {
            goto LABEL_24;
          }
          if (!v9) {
            goto LABEL_28;
          }
        }
      }
LABEL_25:
      sub_1000AEBE4(&v18, v19);
      char v10 = v18;
      __p[0] = v18;
      if (v18)
      {
        atomic_fetch_add((atomic_uint *volatile)v18, 1u);
        char v10 = (void **)__p[0];
        size_t v7 = v18;
      }
      else
      {
        size_t v7 = 0;
      }
      __p[0] = v7;
      long long v18 = v10;
      sub_1000AFCEC((void ***)__p);
      uint64_t v6 = v17;
      long long v5 = v18;
    }
    while (v18 != v17);
  }
  sub_1000AFCEC(&v17);
  double result = sub_1000AFCEC(&v18);
  *a3 = 0;
  return result;
}

void sub_100383F70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  sub_1000AFCEC((void ***)(v21 - 72));
  sub_1000AFCEC((void ***)(v21 - 64));
  _Unwind_Resume(a1);
}

void sub_100383FD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v4 = *(char *)(a2 + 23);
  BOOL v5 = v4 < 0;
  if (v4 >= 0) {
    uint64_t v6 = a2;
  }
  else {
    uint64_t v6 = *(void *)a2;
  }
  uint64_t v7 = *(unsigned __int8 *)(a2 + 23);
  if (v5) {
    uint64_t v7 = *(void *)(a2 + 8);
  }
  uint64_t v8 = v6 + v7;
  size_t v9 = *(void *)(a3 + 16);
  v11[2] = v9;
  v11[0] = 0;
  if (v9 < 0x11)
  {
    memcpy(v11, (const void *)a3, v9);
    int v12 = *(_DWORD *)(a3 + 24);
    sub_1003844F4(v10, v6, v8, (uint64_t)v11);
  }
  operator new[]();
}

void sub_1003843A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  if (a2) {
    sub_1000A6954(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_10038444C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    if ((v2 & 1) == 0)
    {
      uint64_t v3 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v2 & 0xFFFFFFFFFFFFFFFELL);
      if (v3) {
        v3(a1 + 1, a1 + 1, 2);
      }
    }
    *a1 = 0;
  }
  return a1;
}

uint64_t *sub_1003844A0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    if ((v2 & 1) == 0)
    {
      uint64_t v3 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v2 & 0xFFFFFFFFFFFFFFFELL);
      if (v3) {
        v3(a1 + 1, a1 + 1, 2);
      }
    }
    *a1 = 0;
  }
  return a1;
}

void sub_1003844F4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  size_t v6 = *(void *)(a4 + 16);
  v7[2] = v6;
  v7[0] = 0;
  if (v6 < 0x11)
  {
    memcpy(v7, (const void *)a4, v6);
    int v8 = *(_DWORD *)(a4 + 24);
    sub_1003846BC(a1, (uint64_t)v7);
  }
  operator new[]();
}

void sub_10038466C(_Unwind_Exception *a1)
{
  sub_100384870(v1);
  _Unwind_Resume(a1);
}

void sub_100384680(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  if (a12 >= 0x11)
  {
    if (a10) {
      operator delete[]();
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_1003846BC(void *a1, uint64_t a2)
{
  size_t v4 = *(void *)(a2 + 16);
  size_t __n = v4;
  __src[0] = 0;
  if (v4 < 0x11)
  {
    memcpy(__src, (const void *)a2, v4);
    int v5 = *(_DWORD *)(a2 + 24);
    int v8 = v5;
    *a1 = 0;
    void v9[2] = __n;
    v9[0] = 0;
    if (__n < 0x11)
    {
      memcpy(v9, __src, __n);
      int v10 = v5;
      sub_1003848C4((uint64_t)a1, (uint64_t)v9);
    }
    operator new[]();
  }
  operator new[]();
}

void sub_100384818(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16)
{
  if (a10) {
    operator delete[]();
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_100384870(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    if ((v2 & 1) == 0)
    {
      uint64_t v3 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v2 & 0xFFFFFFFFFFFFFFFELL);
      if (v3) {
        v3(a1 + 1, a1 + 1, 2);
      }
    }
    *a1 = 0;
  }
  return a1;
}

void sub_1003848C4(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void *)(a2 + 16);
  size_t __n = v3;
  __src[0] = 0;
  if (v3 < 0x11)
  {
    memcpy(__src, (const void *)a2, v3);
    int v4 = *(_DWORD *)(a2 + 24);
    int v7 = v4;
    void v8[2] = __n;
    v8[0] = 0;
    if (__n < 0x11)
    {
      memcpy(v8, __src, __n);
      int v9 = v4;
      sub_100384A98((uint64_t)off_10046B060, (uint64_t)v8);
    }
    operator new[]();
  }
  operator new[]();
}

void sub_100384A38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16)
{
  if (a10) {
    operator delete[]();
  }
  _Unwind_Resume(exception_object);
}

char *sub_100384A90(void **a1, char *a2, char *a3)
{
  return sub_100252AEC(*a1, a2, a3);
}

void sub_100384A98(uint64_t a1, uint64_t a2)
{
  size_t v3 = *(void *)(a2 + 16);
  __src[2] = v3;
  __src[0] = 0;
  if (v3 < 0x11)
  {
    memcpy(__src, (const void *)a2, v3);
    int v5 = *(_DWORD *)(a2 + 24);
    operator new();
  }
  operator new[]();
}

void sub_100384BE4()
{
}

void *sub_100384C38(void *a1, uint64_t a2, uint64_t *a3)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  uint64_t v19 = 0;
  uint64_t v6 = *(void *)a2;
  if (*(void *)a2)
  {
    uint64_t v19 = *(void *)a2;
    if (v6)
    {
      long long v20 = *(_OWORD *)(a2 + 8);
      uint64_t v21 = *(void *)(a2 + 24);
    }
    else
    {
      (*(void (**)(uint64_t, long long *, void))(v6 & 0xFFFFFFFFFFFFFFFELL))(a2 + 8, &v20, 0);
    }
  }
  long long v7 = *(_OWORD *)(a2 + 48);
  long long v22 = *(_OWORD *)(a2 + 32);
  long long v23 = v7;
  char v24 = *(unsigned char *)(a2 + 64);
  uint64_t v13 = 0;
  uint64_t v8 = *a3;
  if (*a3)
  {
    uint64_t v13 = *a3;
    if (v8)
    {
      long long v14 = *(_OWORD *)(a3 + 1);
      uint64_t v15 = a3[3];
    }
    else
    {
      (*(void (**)(uint64_t *, long long *, void))(v8 & 0xFFFFFFFFFFFFFFFELL))(a3 + 1, &v14, 0);
    }
  }
  long long v9 = *((_OWORD *)a3 + 3);
  long long v16 = *((_OWORD *)a3 + 2);
  long long v17 = v9;
  char v18 = *((unsigned char *)a3 + 64);
  sub_100384DC8((uint64_t)a1, &v19, (uint64_t)&v13);
  if (v13)
  {
    if ((v13 & 1) == 0)
    {
      int v10 = *(void (**)(long long *, long long *, uint64_t))(v13 & 0xFFFFFFFFFFFFFFFELL);
      if (v10) {
        v10(&v14, &v14, 2);
      }
    }
    uint64_t v13 = 0;
  }
  if (v19)
  {
    if ((v19 & 1) == 0)
    {
      int v11 = *(void (**)(long long *, long long *, uint64_t))(v19 & 0xFFFFFFFFFFFFFFFELL);
      if (v11) {
        v11(&v20, &v20, 2);
      }
    }
  }
  return a1;
}

void sub_100384D98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  sub_1003844A0((uint64_t *)va);
  _Unwind_Resume(a1);
}

void sub_100384DAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
}

uint64_t sub_100384DC8(uint64_t result, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = result;
  uint64_t v34 = result;
  char v35 = 0;
  uint64_t v6 = a2 + 1;
  while (1)
  {
    BOOL v7 = *a2 && *((unsigned char *)a2 + 64) == 0;
    int v8 = !v7;
    if (*(void *)a3) {
      break;
    }
    if (v8) {
      return result;
    }
LABEL_19:
    uint64_t v13 = a2[4];
    int v12 = (char *)a2[5];
    unint64_t v14 = (unint64_t)&v12[-v13];
    if ((unint64_t)&v12[-v13] >= 0x7FFFFFFFFFFFFFF8) {
      sub_1000A6968();
    }
    if (v14 > 0x16)
    {
      uint64_t v22 = (v14 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v14 | 7) != 0x17) {
        uint64_t v22 = v14 | 7;
      }
      uint64_t v23 = v22 + 1;
      uint64_t v15 = operator new(v22 + 1);
      __p[1] = &v12[-v13];
      unint64_t v33 = v23 | 0x8000000000000000;
      __p[0] = v15;
      if ((char *)v13 == v12)
      {
LABEL_31:
        long long v16 = v15;
        goto LABEL_34;
      }
    }
    else
    {
      HIBYTE(v33) = (_BYTE)v12 - v13;
      uint64_t v15 = __p;
      if ((char *)v13 == v12) {
        goto LABEL_31;
      }
    }
    if (v14 < 0x20 || (unint64_t)v15 - v13 < 0x20)
    {
      long long v16 = v15;
      long long v17 = (char *)v13;
      do
      {
LABEL_33:
        char v24 = *v17++;
        *v16++ = v24;
      }
      while (v17 != v12);
      goto LABEL_34;
    }
    long long v16 = (char *)v15 + (v14 & 0xFFFFFFFFFFFFFFE0);
    long long v17 = (char *)(v13 + (v14 & 0xFFFFFFFFFFFFFFE0));
    char v18 = (long long *)(v13 + 16);
    uint64_t v19 = v15 + 1;
    unint64_t v20 = v14 & 0xFFFFFFFFFFFFFFE0;
    do
    {
      long long v21 = *v18;
      *(v19 - 1) = *(v18 - 1);
      *uint64_t v19 = v21;
      v18 += 2;
      v19 += 2;
      v20 -= 32;
    }
    while (v20);
    if (v14 != (v14 & 0xFFFFFFFFFFFFFFE0)) {
      goto LABEL_33;
    }
LABEL_34:
    *long long v16 = 0;
    unint64_t v25 = *(void *)(v5 + 8);
    if (v25 >= *(void *)(v5 + 16))
    {
      std::string v29 = sub_10008CF94((void **)v5, (uint64_t)__p);
      int v30 = SHIBYTE(v33);
      *(void *)(v5 + ++*(void *)(result + 8) = v29;
      if (v30 < 0)
      {
        operator delete(__p[0]);
        uint64_t v27 = a2[7];
        uint64_t v28 = *a2;
        if (*a2)
        {
LABEL_39:
          double result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))((v28 & 0xFFFFFFFFFFFFFFFELL) + 8))(v6, a2[6], v27);
          uint64_t v27 = a2[7];
          if (result != v27) {
            goto LABEL_2;
          }
          goto LABEL_43;
        }
      }
      else
      {
        uint64_t v27 = a2[7];
        uint64_t v28 = *a2;
        if (*a2) {
          goto LABEL_39;
        }
      }
    }
    else
    {
      long long v26 = *(_OWORD *)__p;
      *(void *)(v25 + 16) = v33;
      *(_OWORD *)unint64_t v25 = v26;
      *(void *)(v5 + ++*(void *)(result + 8) = v25 + 24;
      uint64_t v27 = a2[7];
      uint64_t v28 = *a2;
      if (*a2) {
        goto LABEL_39;
      }
    }
    uint64_t v31 = v27;
    double result = v27;
LABEL_43:
    if (v31 == v27 && a2[5] == v27) {
      *((unsigned char *)a2 + 64) = 1;
    }
LABEL_2:
    a2[4] = a2[6];
    a2[5] = result;
    a2[6] = v31;
  }
  if (((*(unsigned char *)(a3 + 64) == 0) & ~v8) == 0)
  {
    if (((v8 ^ (*(unsigned char *)(a3 + 64) != 0)) & 1) == 0) {
      return result;
    }
    goto LABEL_19;
  }
  long long v9 = (const void *)a2[4];
  int v10 = *(const void **)(a3 + 32);
  size_t v11 = a2[5] - (void)v9;
  if (v11 != *(void *)(a3 + 40) - (void)v10) {
    goto LABEL_19;
  }
  double result = memcmp(v9, v10, v11);
  if (result || a2[6] != *(void *)(a3 + 48) || a2[7] != *(void *)(a3 + 56)) {
    goto LABEL_19;
  }
  return result;
}

void sub_100385058(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void **a16)
{
}

void sub_100385098(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_10046B080;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1003850B8(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)off_10046B080;
  std::__shared_weak_count::~__shared_weak_count(a1);

  operator delete();
}

uint64_t sub_10038510C(uint64_t a1)
{
  return (**(uint64_t (***)(void))(a1 + 24))();
}

void sub_100385134()
{
  if ((byte_10047BF40 & 1) == 0)
  {
    byte_10047BF40 = 1;
    sub_1000A6120(qword_10047BF30);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF30, (void *)&_mh_execute_header);
  }
}

void sub_1003851AC()
{
  if ((byte_10047BF58 & 1) == 0)
  {
    byte_10047BF58 = 1;
    sub_1000A6530(qword_10047BF48);
    __cxa_atexit((void (*)(void *))sub_1000A6488, qword_10047BF48, (void *)&_mh_execute_header);
  }
}

void sub_1003853E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003853FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_100385434(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100385674(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_100385818(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10038582C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10038583C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100385D10(_Unwind_Exception *a1)
{
  sub_100198250((uint64_t)&STACK[0x3E0]);

  _Unwind_Resume(a1);
}

void sub_100385D2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100385D40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100385D50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100385D68(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100385D80(int a1)
{
  if (a1 == 4) {
    return 11;
  }
  if (a1 == 1 || a1 == 3)
  {
    __cxa_allocate_exception(0x40uLL);
    sub_1000AE4B0(&v3, "Yield source not viable for location type conversion");
    std::runtime_error::runtime_error(&v4, &v3);
    v4.__vftable = (std::runtime_error_vtbl *)&off_100453630;
    sub_10018E868((uint64_t)v2);
    sub_1000CC8F4(&v4, (uint64_t)"CLLocationType getLocationTypeFromPoseEstimate(const PoseEstimate &)", (uint64_t)"/Library/Caches/com.apple.xbs/Sources/purpleslam/daemon/indoorservice/CLIndoorProvider.mm", 193, (uint64_t)v2);
  }
  return 10;
}

void sub_100385E78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, std::runtime_error a18)
{
  if (__p) {
    operator delete(__p);
  }
  std::runtime_error::~runtime_error(&a18);
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(a1);
}

void sub_100385F30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100385F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  BOOL v7 = *(NSObject **)(a1 + 40);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_10038B5A4;
  block[3] = &unk_10046B250;
  objc_copyWeak(&v11, (id *)(a1 + 32));
  sub_1001A39A4(v12, a3);
  int v8 = (std::__shared_weak_count *)a5[1];
  uint64_t v13 = *a5;
  unint64_t v14 = v8;
  if (v8) {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  objc_copyWeak(&v16, &v11);
  sub_1001A39A4(v17, v12);
  v17[95] = v13;
  char v18 = v14;
  if (v14) {
    atomic_fetch_add_explicit(&v14->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  dispatch_async(v7, block);
  long long v9 = v14;
  if (v14 && !atomic_fetch_add(&v14->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
    std::__shared_weak_count::__release_weak(v9);
  }
  sub_1001A0B70(v12);
  objc_destroyWeak(&v11);
  int v10 = v18;
  if (v18 && !atomic_fetch_add(&v18->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v10);
  }
  sub_1001A0B70(v17);
  objc_destroyWeak(&v16);
}

void sub_100386104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
  objc_destroyWeak(v9);
  if (STACK[0x308]) {
    sub_1003A381C(STACK[0x308]);
  }
  sub_1001A0B70(v10);
  objc_destroyWeak(&a9);
  _Unwind_Resume(a1);
}

void sub_100386134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
}

void sub_100386148(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);

  objc_destroyWeak(v1);
}

uint64_t sub_100386184(uint64_t a1)
{
  return a1;
}

void sub_1003861B0(uint64_t a1, char a2, int a3)
{
  uint64_t v5 = *(NSObject **)(a1 + 40);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3321888768;
  block[2] = sub_10038B76C;
  block[3] = &unk_10046B2D0;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  LOBYTE(v7) = a2;
  HIDWORD(v7) = a3;
  objc_copyWeak(v9, &v6);
  v9[1] = v7;
  dispatch_async(v5, block);
  objc_destroyWeak(&v6);
  objc_destroyWeak(v9);
}

void sub_100386274(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);

  objc_destroyWeak(v1);
}

uint64_t sub_1003862B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_100386304(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8))
  {
    sub_100091F70(a1 + 16);
    *(unsigned char *)(a1 + ++*(void *)(result + 8) = 0;
  }

  return a1;
}

void sub_10038688C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54)
{
  if (a54 < 0) {
    operator delete(*(void **)(v57 + 160));
  }

  _Unwind_Resume(a1);
}

void sub_100386A1C(void *a1)
{
}

void sub_100386C30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)CLIndoorProvider;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_10038721C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  std::__shared_weak_count::__release_weak(v21);

  _Unwind_Resume(a1);
}

void sub_10038750C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100387520(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100387530(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100387738(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100387900(void *a1)
{
}

void sub_100387910(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100387924(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100387938(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  std::string v3 = [WeakRetained xpcConnection];
  [WeakRetained notify:v3 failedWithReason:*(void *)(a1 + 32)];
}

void sub_1003879BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1003879D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100387A48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100387A60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100387B70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100387D3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_100387D88(id a1, CLPrefetchFloorRequest *a2, unint64_t a3, BOOL *a4)
{
  std::runtime_error v4 = a2;
  BOOL v5 = !+[CLLocationContextUtil isRegional:[(CLPrefetchFloorRequest *)v4 locationContext]];

  return v5;
}

void sub_100387DD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100387EC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003881C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100388210(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 856);
    id v4 = [*(id *)(a1 + 40) floorUuid];
    sub_1000900D0(&v9, (const char *)[v4 UTF8String]);
    char v5 = (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v3 + 64))(v3, &v9);
    id v6 = v10;
    if (v10 && !atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);

      if (v5) {
        goto LABEL_5;
      }
    }
    else
    {

      if (v5)
      {
LABEL_5:
        [WeakRetained foregroundRequestCompleted:*(void *)(a1 + 40)];
        goto LABEL_11;
      }
    }
    BOOL v7 = [WeakRetained currentForegroundFetchRequest];
    [v7 requestDidComplete:*(void *)(a1 + 40) withError:*(void *)(a1 + 48)];

    if (+[IndoorRequestInfo isMetadata:](IndoorRequestInfo, "isMetadata:", [*(id *)(a1 + 40) kind])|| (objc_msgSend(*(id *)(a1 + 40), "allowCellularDownloadTile") & 1) != 0)
    {
      [WeakRetained notifyProxyOfDownloadError];
    }
    else
    {
      int v8 = +[CLIndoorProvider makeReason:@"wifi-only download request failed" withCode:4 withFailure:0];
      [WeakRetained notifyProxyOfDownloadError:v8];
    }
  }
LABEL_11:
}

void sub_1003883A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003883CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_100198250((uint64_t)&a9);

  _Unwind_Resume(a1);
}

void sub_1003883E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1003883F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10038840C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void **sub_10038841C(void **a1)
{
  uint64_t v2 = (void **)*a1;
  if (*a1)
  {
    uint64_t v3 = (void **)a1[1];
    id v4 = *a1;
    if (v3 == v2)
    {
LABEL_11:
      a1[1] = v2;
      operator delete(v4);
      return a1;
    }
    while (1)
    {
      if (*((char *)v3 - 9) < 0)
      {
        operator delete(*(v3 - 4));
        if (*((char *)v3 - 33) < 0) {
LABEL_9:
        }
          operator delete(*(v3 - 7));
      }
      else if (*((char *)v3 - 33) < 0)
      {
        goto LABEL_9;
      }
      v3 -= 7;
      if (v3 == v2)
      {
        id v4 = *a1;
        goto LABEL_11;
      }
    }
  }
  return a1;
}

void sub_100388C54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, std::runtime_error a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,void *a50,uint64_t a51,int a52,__int16 a53,char a54,char a55)
{
  if (a19 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_100388EB8(uint64_t a1)
{
  if ((*(char *)(a1 + 71) & 0x80000000) == 0)
  {
    if ((*(char *)(a1 + 47) & 0x80000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    operator delete(*(void **)(a1 + 24));
    if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
      return a1;
    }
    goto LABEL_7;
  }
  operator delete(*(void **)(a1 + 48));
  if (*(char *)(a1 + 47) < 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
    return a1;
  }
LABEL_7:
  operator delete(*(void **)a1);
  return a1;
}

void sub_100389414(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34)
{
  if (a32 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void sub_100389954(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  if (a14 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

uint64_t sub_1003899D8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 32) = *(void *)(a2 + 32);
  return result;
}

void sub_100389FC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  if (a22) {
    sub_1003A381C(a22);
  }
  _Unwind_Resume(exception_object);
}

id *sub_10038A014(id *result, id *a2, int a3, char a4)
{
  std::string v29 = result;
  if (!a3 || (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (qword_10047BEF8 != -1)
  {
    dispatch_once(&qword_10047BEF8, &stru_10046B230);
    char v5 = qword_10047BF00;
    if (!os_log_type_enabled((os_log_t)qword_10047BF00, OS_LOG_TYPE_INFO)) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v5 = qword_10047BF00;
  if (os_log_type_enabled((os_log_t)qword_10047BF00, OS_LOG_TYPE_INFO))
  {
LABEL_5:
    *(_WORD *)uint64_t buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "updateUniverse calling changeLocationGroup with the new universe", buf, 2u);
  }
LABEL_6:
  double result = (id *)[v29[4] changeLocationGroups:*a2];
LABEL_7:
  if (!*((void *)v29[4] + 31)) {
    return result;
  }
  *(void *)uint64_t buf = off_10045D848;
  uint64_t v40 = 0;
  uint64_t v42 = 0;
  uint64_t v43 = 0;
  int v41 = off_10045DAB8;
  v44 &= 0xFCu;
  long long v45 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
  char v48 = 0;
  long long v49 = 0u;
  long long v50 = 0u;
  long long v51 = 0u;
  v52 &= 0xFE00u;
  sub_100041B18((uint64_t)buf, (uint64_t)a2[1]);
  v37[1] = 0;
  v37[2] = 0;
  v37[0] = off_10045DAB8;
  v38 &= 0xFCu;
  sub_100076484((uint64_t)v37, *(double *)((char *)a2 + 116));
  sub_10007647C((uint64_t)v37, *(double *)((char *)a2 + 124));
  sub_1001A3D00((uint64_t)buf, (uint64_t)v37);
  long long v35 = 0u;
  long long v36 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  id obj = *a2;
  id v6 = [obj countByEnumeratingWithState:&v33 objects:v53 count:16];
  if (!v6) {
    goto LABEL_46;
  }
  uint64_t v7 = *(void *)v34;
  do
  {
    int v8 = 0;
    do
    {
      if (*(void *)v34 != v7) {
        objc_enumerationMutation(obj);
      }
      id v9 = *(id *)(*((void *)&v33 + 1) + 8 * (void)v8);
      uint64_t v10 = (const char *)[v9 UTF8String];
      size_t v11 = strlen(v10);
      if (v11 >= 0x7FFFFFFFFFFFFFF8) {
        sub_1000A6968();
      }
      size_t v12 = v11;
      if (v11 >= 0x17)
      {
        uint64_t v17 = (v11 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v11 | 7) != 0x17) {
          uint64_t v17 = v11 | 7;
        }
        uint64_t v18 = v17 + 1;
        p_dst = (long long *)operator new(v17 + 1);
        *((void *)&__dst + 1) = v12;
        unint64_t v32 = v18 | 0x8000000000000000;
        *(void *)&long long __dst = p_dst;
      }
      else
      {
        HIBYTE(v32) = v11;
        p_dst = &__dst;
        if (!v11)
        {
          LOBYTE(__dst) = 0;
          uint64_t v15 = (void **)*((void *)&v45 + 1);
          uint64_t v14 = v46;
          if (*((void *)&v45 + 1) < (unint64_t)v46) {
            goto LABEL_17;
          }
          goto LABEL_22;
        }
      }
      memmove(p_dst, v10, v12);
      *((unsigned char *)p_dst + v12) = 0;
      uint64_t v15 = (void **)*((void *)&v45 + 1);
      uint64_t v14 = v46;
      if (*((void *)&v45 + 1) < (unint64_t)v46)
      {
LABEL_17:
        long long v16 = __dst;
        v15[2] = (void *)v32;
        *(_OWORD *)uint64_t v15 = v16;
        *((void *)&v45 + 1) = v15 + 3;
        goto LABEL_44;
      }
LABEL_22:
      uint64_t v19 = (void **)v45;
      unint64_t v20 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)((uint64_t)v15 - v45) >> 3);
      unint64_t v21 = v20 + 1;
      if (v20 + 1 > 0xAAAAAAAAAAAAAAALL) {
        sub_1000A9108();
      }
      unint64_t v22 = 0xAAAAAAAAAAAAAAABLL * ((v14 - (uint64_t)v45) >> 3);
      if (2 * v22 > v21) {
        unint64_t v21 = 2 * v22;
      }
      if (v22 >= 0x555555555555555) {
        unint64_t v23 = 0xAAAAAAAAAAAAAAALL;
      }
      else {
        unint64_t v23 = v21;
      }
      if (v23)
      {
        if (v23 > 0xAAAAAAAAAAAAAAALL) {
          sub_1000A6A10();
        }
        char v24 = (char *)operator new(24 * v23);
      }
      else
      {
        char v24 = 0;
      }
      unint64_t v25 = &v24[24 * v20];
      *(_OWORD *)unint64_t v25 = __dst;
      *((void *)v25 + 2) = v32;
      unint64_t v32 = 0;
      long long __dst = 0uLL;
      long long v26 = v25 + 24;
      if (v15 == v19)
      {
        *(void *)&long long v45 = v25;
        *((void *)&v45 + 1) = v25 + 24;
        *(void *)&long long v46 = &v24[24 * v23];
      }
      else
      {
        do
        {
          long long v27 = *(_OWORD *)(v15 - 3);
          *((void *)v25 - 1) = *(v15 - 1);
          *(_OWORD *)(v25 - ++*(void *)(result + 24) = v27;
          v25 -= 24;
          *(v15 - 2) = 0;
          *(v15 - 1) = 0;
          *(v15 - 3) = 0;
          v15 -= 3;
        }
        while (v15 != v19);
        uint64_t v28 = (void **)*((void *)&v45 + 1);
        uint64_t v15 = (void **)v45;
        *(void *)&long long v45 = v25;
        *((void *)&v45 + 1) = v26;
        *(void *)&long long v46 = &v24[24 * v23];
        while (v28 != v15)
        {
          if (*((char *)v28 - 1) < 0) {
            operator delete(*(v28 - 3));
          }
          v28 -= 3;
        }
      }
      if (v15) {
        operator delete(v15);
      }
      *((void *)&v45 + 1) = v26;
      if (SHIBYTE(v32) < 0) {
        operator delete((void *)__dst);
      }
LABEL_44:

      int v8 = (char *)v8 + 1;
    }
    while (v8 != v6);
    id v6 = [obj countByEnumeratingWithState:&v33 objects:v53 count:16];
  }
  while (v6);
LABEL_46:

  sub_10015B214(*((void *)v29[4] + 31), (uint64_t)buf);
  nullsub_15(v37);
  return (id *)sub_1001A3CC4(buf);
}

void sub_10038A4D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  nullsub_15(&a26);
  sub_1001A3CC4(&a30);
  _Unwind_Resume(a1);
}

id sub_10038A568(uint64_t a1, uint64_t a2)
{
  id result = *(id *)(a2 + 32);
  *(void *)(a1 + 32) = result;
  return result;
}

void sub_10038A594(uint64_t a1)
{
}

void sub_10038A94C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35)
{
  sub_1000FE82C(&a35);
  sub_1000428B0(v36 - 120);

  _Unwind_Resume(a1);
}

void sub_10038AC78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36)
{
  sub_1000EF770(&a36);
  sub_1000428B0(v37 - 120);

  _Unwind_Resume(a1);
}

void sub_10038AFA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,char a32)
{
  sub_1000FA868(&a32);
  sub_1000428B0(v33 - 120);

  _Unwind_Resume(a1);
}

void sub_10038B560(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Daemon");
  uint64_t v2 = (void *)qword_10047BF00;
  qword_10047BF00 = (uint64_t)v1;
}

void sub_10038B5A4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained onQueueNotify:a1 + 40 onFloor:a1 + 800];
}

void sub_10038B5F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10038B60C(uint64_t a1, uint64_t a2)
{
  objc_copyWeak((id *)(a1 + 32), (id *)(a2 + 32));
  uint64_t result = sub_1001A39A4(a1 + 40, a2 + 40);
  *(void *)(a1 + 800) = *(void *)(a2 + 800);
  uint64_t v5 = *(void *)(a2 + 808);
  *(void *)(a1 + 80++*(void *)(result + 8) = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return result;
}

void sub_10038B674(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10038B688(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 808);
  if (v2 && !atomic_fetch_add(&v2->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
  sub_1001A0B70(a1 + 40);

  objc_destroyWeak((id *)(a1 + 32));
}

void sub_10038B710(uint64_t a1)
{
  operator delete();
}

uint64_t sub_10038B75C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 8) + 16))();
}

void sub_10038B76C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained onQueueNotifyLocationContext:*(unsigned __int8 *)(a1 + 40) withLocationContext:*(unsigned int *)(a1 + 44)];
}

void sub_10038B7C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10038B7D4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
}

void sub_10038B80C(uint64_t a1)
{
}

void sub_10038B814(uint64_t a1)
{
  operator delete();
}

uint64_t sub_10038B860(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 8) + 16))();
}

void sub_10038B870()
{
}

uint64_t sub_10038B884()
{
  return 0;
}

void sub_10038B88C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)a1)
  {
    if (*(unsigned char *)a2)
    {
      id v4 = (long long *)(a2 + 8);
      uint64_t v5 = (void **)(a1 + 8);
      if (*(char *)(a1 + 31) < 0) {
        operator delete(*v5);
      }
      long long v6 = *v4;
      *(void *)(a1 + ++*(void *)(result + 24) = *(void *)(a2 + 24);
      *(_OWORD *)uint64_t v5 = v6;
      *(unsigned char *)(a2 + 31) = 0;
      *(unsigned char *)(a2 + ++*(void *)(result + 8) = 0;
      long long v7 = *(_OWORD *)(a2 + 32);
      *(void *)(a2 + 32) = 0;
      *(void *)(a2 + 40) = 0;
      int v8 = *(std::__shared_weak_count **)(a1 + 40);
      *(_OWORD *)(a1 + 32) = v7;
      if (v8)
      {
        if (!atomic_fetch_add(&v8->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
      *(_DWORD *)(a1 + 4++*(void *)(result + 8) = *(_DWORD *)(a2 + 48);
      return;
    }
    uint64_t v10 = *(std::__shared_weak_count **)(a1 + 40);
    if (v10 && !atomic_fetch_add(&v10->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
      if ((*(char *)(a1 + 31) & 0x80000000) == 0) {
        goto LABEL_15;
      }
    }
    else if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    {
LABEL_15:
      *(unsigned char *)a1 = 0;
      return;
    }
    operator delete(*(void **)(a1 + 8));
    *(unsigned char *)a1 = 0;
    return;
  }
  if (*(unsigned char *)a2)
  {
    long long v9 = *(_OWORD *)(a2 + 8);
    *(void *)(a1 + ++*(void *)(result + 24) = *(void *)(a2 + 24);
    *(_OWORD *)(a1 + ++*(void *)(result + 8) = v9;
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + ++*(void *)(result + 24) = 0;
    *(void *)(a2 + ++*(void *)(result + 8) = 0;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a2 + 32) = 0;
    *(void *)(a2 + 40) = 0;
    *(_DWORD *)(a1 + 4++*(void *)(result + 8) = *(_DWORD *)(a2 + 48);
    *(unsigned char *)a1 = 1;
  }
}

id sub_10038BA24()
{
  if (qword_10047BED8 == -1)
  {
    uint64_t v0 = (void *)qword_10047BEE0;
  }
  else
  {
    dispatch_once(&qword_10047BED8, &stru_10046B3D8);
    uint64_t v0 = (void *)qword_10047BEE0;
  }
  return v0;
}

void sub_10038BA94(id a1)
{
  os_log_t v1 = os_log_create("com.apple.locationd.Pipeline", "Generic");
  uint64_t v2 = (void *)qword_10047BEE0;
  qword_10047BEE0 = (uint64_t)v1;
}

void **sub_10038BAD8(void **a1)
{
  uint64_t v2 = (void **)*a1;
  if (*a1)
  {
    uint64_t v3 = (void **)a1[1];
    id v4 = *a1;
    if (v3 != v2)
    {
      do
      {
        if (*((char *)v3 - 17) < 0) {
          operator delete(*(v3 - 5));
        }
        v3 -= 5;
      }
      while (v3 != v2);
      id v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

uint64_t sub_10038BB4C(uint64_t a1)
{
  uint64_t v3 = *(void ***)(a1 + 8);
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != v3)
  {
    do
    {
      uint64_t v5 = v2 - 5;
      *(void *)(a1 + 16) = v2 - 5;
      if (*((char *)v2 - 17) < 0)
      {
        operator delete(*v5);
        uint64_t v5 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != v3);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_10038BBCC(unint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    uint64_t v19 = v2;
    uint64_t v20 = v3;
    unint64_t v5 = a1;
    unint64_t v6 = a1 + 40;
    if (a1 + 40 != a2)
    {
      long long v7 = (void *)(a1 + 72);
      do
      {
        unint64_t v10 = v6;
        if ((sub_10004008C(v5, v6) & 0x80000000) != 0)
        {
          long long v16 = *(_OWORD *)v10;
          uint64_t v17 = *(void *)(v10 + 16);
          *(void *)(v10 + ++*(void *)(result + 8) = 0;
          *(void *)(v10 + 16) = 0;
          *(void *)unint64_t v10 = 0;
          long long v18 = *(_OWORD *)(v5 + 64);
          size_t v11 = v7;
          do
          {
            uint64_t v15 = (void **)(v11 - 4);
            if (*((char *)v11 - 9) < 0) {
              operator delete(*v15);
            }
            *(_OWORD *)uint64_t v15 = *(_OWORD *)(v11 - 9);
            *(v11 - 2) = *(v11 - 7);
            *((unsigned char *)v11 - 49) = 0;
            *((unsigned char *)v11 - 72) = 0;
            size_t v12 = v11 - 5;
            uint64_t v13 = *(v11 - 5);
            *(v11 - 1) = *(v11 - 6);
            *size_t v11 = v13;
            int v14 = sub_10004008C((unint64_t)(v11 - 14), (unint64_t)&v16);
            v11 -= 5;
          }
          while (v14 < 0);
          int v8 = (void **)(v12 - 4);
          if (*((char *)v12 - 9) < 0) {
            operator delete(*v8);
          }
          *(_OWORD *)int v8 = v16;
          *(v12 - 2) = v17;
          uint64_t v9 = *((void *)&v18 + 1);
          *(v12 - 1) = v18;
          *size_t v12 = v9;
        }
        unint64_t v6 = v10 + 40;
        v7 += 5;
        unint64_t v5 = v10;
      }
      while (v10 + 40 != a2);
    }
  }
}

uint64_t sub_10038BD00(unint64_t a1, unint64_t a2, unint64_t a3)
{
  int v6 = sub_10004008C(a1, a2);
  int v7 = sub_10004008C(a2, a3);
  if ((v6 & 0x80000000) == 0)
  {
    if ((v7 & 0x80000000) == 0) {
      return 0;
    }
    long long v18 = *(void **)a2;
    *(void *)uint64_t v37 = *(void *)(a2 + 8);
    *(void *)&v37[7] = *(void *)(a2 + 15);
    char v19 = *(unsigned char *)(a2 + 23);
    *(void *)(a2 + 16) = 0;
    *(void *)(a2 + ++*(void *)(result + 8) = 0;
    *(void *)a2 = 0;
    long long v20 = *(_OWORD *)(a2 + 24);
    uint64_t v21 = *(void *)(a3 + 16);
    *(_OWORD *)a2 = *(_OWORD *)a3;
    *(void *)(a2 + 16) = v21;
    *(unsigned char *)(a3 + 23) = 0;
    *(unsigned char *)a3 = 0;
    *(void *)(a2 + ++*(void *)(result + 24) = *(void *)(a3 + 24);
    *(void *)(a2 + 32) = *(void *)(a3 + 32);
    if (*(char *)(a3 + 23) < 0)
    {
      long long v32 = v20;
      operator delete(*(void **)a3);
      long long v20 = v32;
    }
    *(void *)a3 = v18;
    *(void *)(a3 + ++*(void *)(result + 8) = *(void *)v37;
    *(void *)(a3 + 15) = *(void *)&v37[7];
    *(unsigned char *)(a3 + 23) = v19;
    *(_OWORD *)(a3 + ++*(void *)(result + 24) = v20;
    if ((sub_10004008C(a1, a2) & 0x80000000) == 0) {
      return 1;
    }
    uint64_t v26 = *(void *)a1;
    *(void *)uint64_t v39 = *(void *)(a1 + 8);
    *(void *)&v39[7] = *(void *)(a1 + 15);
    char v27 = *(unsigned char *)(a1 + 23);
    *(void *)(a1 + ++*(void *)(result + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    long long v28 = *(_OWORD *)(a1 + 24);
    uint64_t v29 = *(void *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = v29;
    *(unsigned char *)(a2 + 23) = 0;
    *(unsigned char *)a2 = 0;
    *(void *)(a1 + ++*(void *)(result + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    if (*(char *)(a2 + 23) < 0)
    {
      long long v34 = v28;
      operator delete(*(void **)a2);
      long long v28 = v34;
    }
    *(void *)a2 = v26;
    *(void *)(a2 + ++*(void *)(result + 8) = *(void *)v39;
    *(void *)(a2 + 15) = *(void *)&v39[7];
    *(unsigned char *)(a2 + 23) = v27;
    *(_OWORD *)(a2 + ++*(void *)(result + 24) = v28;
    return 2;
  }
  uint64_t v9 = (void *)(a1 + 8);
  if ((v7 & 0x80000000) == 0)
  {
    uint64_t v10 = *(void *)a1;
    *(void *)long long v35 = *v9;
    *(void *)&v35[7] = *(void *)(a1 + 15);
    char v11 = *(unsigned char *)(a1 + 23);
    *(void *)(a1 + ++*(void *)(result + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    long long v12 = *(_OWORD *)(a1 + 24);
    uint64_t v13 = *(void *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = v13;
    *(unsigned char *)(a2 + 23) = 0;
    *(unsigned char *)a2 = 0;
    *(void *)(a1 + ++*(void *)(result + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    if (*(char *)(a2 + 23) < 0)
    {
      long long v30 = v12;
      operator delete(*(void **)a2);
      long long v12 = v30;
    }
    *(void *)a2 = v10;
    *(void *)(a2 + ++*(void *)(result + 8) = *(void *)v35;
    *(void *)(a2 + 15) = *(void *)&v35[7];
    *(unsigned char *)(a2 + 23) = v11;
    *(_OWORD *)(a2 + ++*(void *)(result + 24) = v12;
    if ((sub_10004008C(a2, a3) & 0x80000000) == 0) {
      return 1;
    }
    int v14 = *(void **)a2;
    *(void *)uint64_t v36 = *(void *)(a2 + 8);
    *(void *)&v36[7] = *(void *)(a2 + 15);
    char v15 = *(unsigned char *)(a2 + 23);
    *(void *)(a2 + ++*(void *)(result + 8) = 0;
    *(void *)(a2 + 16) = 0;
    *(void *)a2 = 0;
    long long v16 = *(_OWORD *)(a2 + 24);
    uint64_t v17 = *(void *)(a3 + 16);
    *(_OWORD *)a2 = *(_OWORD *)a3;
    *(void *)(a2 + 16) = v17;
    *(unsigned char *)(a3 + 23) = 0;
    *(unsigned char *)a3 = 0;
    *(void *)(a2 + ++*(void *)(result + 24) = *(void *)(a3 + 24);
    *(void *)(a2 + 32) = *(void *)(a3 + 32);
    if (*(char *)(a3 + 23) < 0)
    {
      long long v31 = v16;
      operator delete(*(void **)a3);
      long long v16 = v31;
    }
    *(void *)a3 = v14;
    *(void *)(a3 + ++*(void *)(result + 8) = *(void *)v36;
    *(void *)(a3 + 15) = *(void *)&v36[7];
    *(unsigned char *)(a3 + 23) = v15;
    *(_OWORD *)(a3 + ++*(void *)(result + 24) = v16;
    return 2;
  }
  uint64_t v22 = *(void *)a1;
  *(void *)char v38 = *v9;
  *(void *)&v38[7] = *(void *)(a1 + 15);
  char v23 = *(unsigned char *)(a1 + 23);
  *(void *)(a1 + ++*(void *)(result + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  long long v24 = *(_OWORD *)(a1 + 24);
  uint64_t v25 = *(void *)(a3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(void *)(a1 + 16) = v25;
  *(unsigned char *)(a3 + 23) = 0;
  *(unsigned char *)a3 = 0;
  *(void *)(a1 + ++*(void *)(result + 24) = *(void *)(a3 + 24);
  *(void *)(a1 + 32) = *(void *)(a3 + 32);
  if (*(char *)(a3 + 23) < 0)
  {
    long long v33 = v24;
    operator delete(*(void **)a3);
    long long v24 = v33;
  }
  *(void *)a3 = v22;
  *(void *)(a3 + ++*(void *)(result + 8) = *(void *)v38;
  *(void *)(a3 + 15) = *(void *)&v38[7];
  *(unsigned char *)(a3 + 23) = v23;
  *(_OWORD *)(a3 + ++*(void *)(result + 24) = v24;
  return 1;
}

unint64_t sub_10038C04C(unint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2;
  *(_OWORD *)std::string __p = *(_OWORD *)a1;
  uint64_t v18 = *(void *)(a1 + 16);
  *(void *)(a1 + ++*(void *)(result + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  long long v19 = *(_OWORD *)(a1 + 24);
  if ((sub_10004008C(a2 - 40, (unint64_t)__p) & 0x80000000) != 0)
  {
    unint64_t v5 = a1;
    do
      v5 += 40;
    while ((sub_10004008C(v5, (unint64_t)__p) & 0x80000000) == 0);
  }
  else
  {
    unint64_t v4 = a1 + 40;
    do
    {
      unint64_t v5 = v4;
      if (v4 >= v2) {
        break;
      }
      int v6 = sub_10004008C(v4, (unint64_t)__p);
      unint64_t v4 = v5 + 40;
    }
    while ((v6 & 0x80000000) == 0);
  }
  if (v5 < v2)
  {
    do
      v2 -= 40;
    while ((sub_10004008C(v2, (unint64_t)__p) & 0x80000000) != 0);
  }
  while (v5 < v2)
  {
    uint64_t v7 = *(void *)v5;
    v20[0] = *(void *)(v5 + 8);
    *(void *)((char *)v20 + 7) = *(void *)(v5 + 15);
    char v8 = *(unsigned char *)(v5 + 23);
    *(void *)(v5 + ++*(void *)(result + 8) = 0;
    *(void *)(v5 + 16) = 0;
    *(void *)unint64_t v5 = 0;
    long long v9 = *(_OWORD *)(v5 + 24);
    uint64_t v10 = *(void *)(v2 + 16);
    *(_OWORD *)unint64_t v5 = *(_OWORD *)v2;
    *(void *)(v5 + 16) = v10;
    *(unsigned char *)(v2 + 23) = 0;
    *(unsigned char *)unint64_t v2 = 0;
    *(void *)(v5 + ++*(void *)(result + 24) = *(void *)(v2 + 24);
    *(void *)(v5 + 32) = *(void *)(v2 + 32);
    if (*(char *)(v2 + 23) < 0)
    {
      long long v16 = v9;
      operator delete(*(void **)v2);
      long long v9 = v16;
    }
    *(void *)unint64_t v2 = v7;
    uint64_t v11 = *(void *)((char *)v20 + 7);
    *(void *)(v2 + ++*(void *)(result + 8) = v20[0];
    *(void *)(v2 + 15) = v11;
    *(unsigned char *)(v2 + 23) = v8;
    *(_OWORD *)(v2 + ++*(void *)(result + 24) = v9;
    do
      v5 += 40;
    while ((sub_10004008C(v5, (unint64_t)__p) & 0x80000000) == 0);
    do
      v2 -= 40;
    while ((sub_10004008C(v2, (unint64_t)__p) & 0x80000000) != 0);
  }
  long long v12 = (void **)(v5 - 40);
  if (v5 - 40 != a1)
  {
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    long long v13 = *(_OWORD *)v12;
    *(void *)(a1 + 16) = *(void *)(v5 - 24);
    *(_OWORD *)a1 = v13;
    *(unsigned char *)(v5 - 17) = 0;
    *(unsigned char *)(v5 - 40) = 0;
    *(void *)(a1 + ++*(void *)(result + 24) = *(void *)(v5 - 16);
    *(void *)(a1 + 32) = *(void *)(v5 - 8);
  }
  if (*(char *)(v5 - 17) < 0) {
    operator delete(*v12);
  }
  long long v14 = *(_OWORD *)__p;
  *(void *)(v5 - ++*(void *)(result + 24) = v18;
  *(_OWORD *)long long v12 = v14;
  HIBYTE(v1++*(void *)(result + 8) = 0;
  LOBYTE(__p[0]) = 0;
  *(_OWORD *)(v5 - 16) = v19;
  if (SHIBYTE(v18) < 0) {
    operator delete(__p[0]);
  }
  return v5;
}

unint64_t sub_10038C280(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = 0;
  *(_OWORD *)std::string __p = *(_OWORD *)a1;
  uint64_t v20 = *(void *)(a1 + 16);
  *(void *)(a1 + ++*(void *)(result + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = 0;
  long long v21 = *(_OWORD *)(a1 + 24);
  do
    v4 += 40;
  while ((sub_10004008C((unint64_t)__p, v4 + a1) & 0x80000000) != 0);
  unint64_t v5 = a1 + v4;
  if (v4 == 40)
  {
    do
    {
      if (v5 >= a2) {
        break;
      }
      a2 -= 40;
    }
    while ((sub_10004008C((unint64_t)__p, a2) & 0x80000000) == 0);
  }
  else
  {
    do
      a2 -= 40;
    while ((sub_10004008C((unint64_t)__p, a2) & 0x80000000) == 0);
  }
  unint64_t v6 = a1 + v4;
  if (v5 < a2)
  {
    unint64_t v7 = a2;
    do
    {
      uint64_t v9 = *(void *)v6;
      uint64_t v8 = *(void *)(v6 + 8);
      *(void *)&unsigned char v22[7] = *(void *)(v6 + 15);
      *(void *)uint64_t v22 = v8;
      char v10 = *(unsigned char *)(v6 + 23);
      *(void *)(v6 + ++*(void *)(result + 8) = 0;
      *(void *)(v6 + 16) = 0;
      *(void *)unint64_t v6 = 0;
      long long v11 = *(_OWORD *)(v6 + 24);
      uint64_t v12 = *(void *)(v7 + 16);
      *(_OWORD *)unint64_t v6 = *(_OWORD *)v7;
      *(void *)(v6 + 16) = v12;
      *(unsigned char *)(v7 + 23) = 0;
      *(unsigned char *)unint64_t v7 = 0;
      *(void *)(v6 + ++*(void *)(result + 24) = *(void *)(v7 + 24);
      *(void *)(v6 + 32) = *(void *)(v7 + 32);
      if (*(char *)(v7 + 23) < 0)
      {
        long long v18 = v11;
        operator delete(*(void **)v7);
        long long v11 = v18;
      }
      *(void *)unint64_t v7 = v9;
      uint64_t v13 = *(void *)&v22[7];
      *(void *)(v7 + ++*(void *)(result + 8) = *(void *)v22;
      *(void *)(v7 + 15) = v13;
      *(unsigned char *)(v7 + 23) = v10;
      *(_OWORD *)(v7 + ++*(void *)(result + 24) = v11;
      do
        v6 += 40;
      while ((sub_10004008C((unint64_t)__p, v6) & 0x80000000) != 0);
      do
        v7 -= 40;
      while ((sub_10004008C((unint64_t)__p, v7) & 0x80000000) == 0);
    }
    while (v6 < v7);
  }
  long long v14 = (void **)(v6 - 40);
  if (v6 - 40 != a1)
  {
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    long long v15 = *(_OWORD *)v14;
    *(void *)(a1 + 16) = *(void *)(v6 - 24);
    *(_OWORD *)a1 = v15;
    *(unsigned char *)(v6 - 17) = 0;
    *(unsigned char *)(v6 - 40) = 0;
    *(void *)(a1 + ++*(void *)(result + 24) = *(void *)(v6 - 16);
    *(void *)(a1 + 32) = *(void *)(v6 - 8);
  }
  if (*(char *)(v6 - 17) < 0) {
    operator delete(*v14);
  }
  long long v16 = *(_OWORD *)__p;
  *(void *)(v6 - ++*(void *)(result + 24) = v20;
  *(_OWORD *)long long v14 = v16;
  HIBYTE(v20) = 0;
  LOBYTE(__p[0]) = 0;
  *(_OWORD *)(v6 - 16) = v21;
  if (SHIBYTE(v20) < 0) {
    operator delete(__p[0]);
  }
  return v6 - 40;
}

BOOL sub_10038C4BC(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = (uint64_t)(a2 - a1) >> 3;
  BOOL result = 1;
  switch(0xCCCCCCCCCCCCCCCDLL * v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      unint64_t v6 = (void **)(a2 - 40);
      if ((sub_10004008C(a1, a2 - 40) & 0x80000000) != 0)
      {
        uint64_t v7 = *(void *)a1;
        *(void *)&long long v24 = *(void *)(a1 + 8);
        *(void *)((char *)&v24 + 7) = *(void *)(a1 + 15);
        char v8 = *(unsigned char *)(a1 + 23);
        *(void *)(a1 + ++*(void *)(result + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)a1 = 0;
        long long v9 = *(_OWORD *)(a1 + 24);
        uint64_t v10 = *(void *)(a2 - 24);
        *(_OWORD *)a1 = *(_OWORD *)v6;
        *(void *)(a1 + 16) = v10;
        *(unsigned char *)(a2 - 17) = 0;
        *(unsigned char *)(a2 - 40) = 0;
        *(void *)(a1 + ++*(void *)(result + 24) = *(void *)(a2 - 16);
        *(void *)(a1 + 32) = *(void *)(a2 - 8);
        if (*(char *)(a2 - 17) < 0)
        {
          long long v23 = v9;
          operator delete(*v6);
          long long v9 = v23;
        }
        uint64_t v11 = v24;
        *(void *)(a2 - 40) = v7;
        *(void *)(a2 - 32) = v11;
        *(void *)(a2 - 25) = *(void *)((char *)&v24 + 7);
        *(unsigned char *)(a2 - 17) = v8;
        *(_OWORD *)(a2 - 16) = v9;
      }
      return 1;
    case 3uLL:
      sub_10038BD00(a1, a1 + 40, a2 - 40);
      return 1;
    case 4uLL:
      sub_10038C7BC(a1, a1 + 40, a1 + 80, a2 - 40);
      return 1;
    case 5uLL:
      sub_10038C9F4(a1, a1 + 40, a1 + 80, a1 + 120, a2 - 40);
      return 1;
    default:
      unint64_t v12 = a1 + 80;
      sub_10038BD00(a1, a1 + 40, a1 + 80);
      unint64_t v13 = a1 + 120;
      if (a1 + 120 == a2) {
        return 1;
      }
      uint64_t v14 = 0;
      int v15 = 0;
      break;
  }
  while (1)
  {
    if ((sub_10004008C(v12, v13) & 0x80000000) != 0)
    {
      long long v24 = *(_OWORD *)v13;
      uint64_t v25 = *(void *)(v13 + 16);
      *(void *)(v13 + ++*(void *)(result + 8) = 0;
      *(void *)(v13 + 16) = 0;
      *(void *)unint64_t v13 = 0;
      long long v26 = *(_OWORD *)(v13 + 24);
      uint64_t v17 = v14;
      while (1)
      {
        uint64_t v18 = a1 + v17;
        long long v19 = (void **)(a1 + v17 + 120);
        if (*(char *)(a1 + v17 + 143) < 0) {
          operator delete(*v19);
        }
        *(_OWORD *)long long v19 = *(_OWORD *)(v18 + 80);
        *(void *)(a1 + v17 + 136) = *(void *)(v18 + 96);
        *(unsigned char *)(v18 + 103) = 0;
        *(unsigned char *)(v18 + 80) = 0;
        uint64_t v20 = *(void *)(v18 + 112);
        *(void *)(v18 + 144) = *(void *)(v18 + 104);
        *(void *)(v18 + 152) = v20;
        if (v17 == -80) {
          break;
        }
        int v21 = sub_10004008C(a1 + v17 + 40, (unint64_t)&v24);
        v17 -= 40;
        if ((v21 & 0x80000000) == 0)
        {
          uint64_t v22 = a1 + v17 + 120;
          if ((*(char *)(v22 + 23) & 0x80000000) == 0) {
            goto LABEL_8;
          }
          goto LABEL_19;
        }
      }
      uint64_t v22 = a1;
      if ((*(char *)(a1 + 23) & 0x80000000) == 0) {
        goto LABEL_8;
      }
LABEL_19:
      operator delete(*(void **)v22);
LABEL_8:
      *(_OWORD *)uint64_t v22 = v24;
      *(void *)(v22 + 16) = v25;
      HIBYTE(v25) = 0;
      LOBYTE(v++*(void *)(result + 24) = 0;
      uint64_t v16 = *((void *)&v26 + 1);
      *(void *)(v22 + ++*(void *)(result + 24) = v26;
      *(void *)(v22 + 32) = v16;
      if (++v15 == 8) {
        return v13 + 40 == a2;
      }
    }
    unint64_t v12 = v13;
    v14 += 40;
    v13 += 40;
    if (v13 == a2) {
      return 1;
    }
  }
}

void sub_10038C7BC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  sub_10038BD00(a1, a2, a3);
  if ((sub_10004008C(a3, a4) & 0x80000000) != 0)
  {
    char v8 = *(void **)a3;
    *(void *)long long v23 = *(void *)(a3 + 8);
    *(void *)&v23[7] = *(void *)(a3 + 15);
    char v9 = *(unsigned char *)(a3 + 23);
    *(void *)(a3 + 16) = 0;
    *(void *)(a3 + ++*(void *)(result + 8) = 0;
    *(void *)a3 = 0;
    long long v10 = *(_OWORD *)(a3 + 24);
    uint64_t v11 = *(void *)(a4 + 16);
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *(void *)(a3 + 16) = v11;
    *(unsigned char *)(a4 + 23) = 0;
    *(unsigned char *)a4 = 0;
    *(void *)(a3 + ++*(void *)(result + 24) = *(void *)(a4 + 24);
    *(void *)(a3 + 32) = *(void *)(a4 + 32);
    if (*(char *)(a4 + 23) < 0)
    {
      long long v20 = v10;
      operator delete(*(void **)a4);
      long long v10 = v20;
    }
    *(void *)a4 = v8;
    *(void *)(a4 + ++*(void *)(result + 8) = *(void *)v23;
    *(void *)(a4 + 15) = *(void *)&v23[7];
    *(unsigned char *)(a4 + 23) = v9;
    *(_OWORD *)(a4 + ++*(void *)(result + 24) = v10;
    if ((sub_10004008C(a2, a3) & 0x80000000) != 0)
    {
      unint64_t v12 = *(void **)a2;
      *(void *)long long v24 = *(void *)(a2 + 8);
      *(void *)&v24[7] = *(void *)(a2 + 15);
      char v13 = *(unsigned char *)(a2 + 23);
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + ++*(void *)(result + 8) = 0;
      *(void *)a2 = 0;
      long long v14 = *(_OWORD *)(a2 + 24);
      uint64_t v15 = *(void *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(void *)(a2 + 16) = v15;
      *(unsigned char *)(a3 + 23) = 0;
      *(unsigned char *)a3 = 0;
      *(void *)(a2 + ++*(void *)(result + 24) = *(void *)(a3 + 24);
      *(void *)(a2 + 32) = *(void *)(a3 + 32);
      if (*(char *)(a3 + 23) < 0)
      {
        long long v21 = v14;
        operator delete(*(void **)a3);
        long long v14 = v21;
      }
      *(void *)a3 = v12;
      *(void *)(a3 + ++*(void *)(result + 8) = *(void *)v24;
      *(void *)(a3 + 15) = *(void *)&v24[7];
      *(unsigned char *)(a3 + 23) = v13;
      *(_OWORD *)(a3 + ++*(void *)(result + 24) = v14;
      if ((sub_10004008C(a1, a2) & 0x80000000) != 0)
      {
        uint64_t v16 = *(void *)a1;
        *(void *)uint64_t v25 = *(void *)(a1 + 8);
        *(void *)&v25[7] = *(void *)(a1 + 15);
        char v17 = *(unsigned char *)(a1 + 23);
        *(void *)(a1 + ++*(void *)(result + 8) = 0;
        *(void *)(a1 + 16) = 0;
        *(void *)a1 = 0;
        long long v18 = *(_OWORD *)(a1 + 24);
        uint64_t v19 = *(void *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(void *)(a1 + 16) = v19;
        *(unsigned char *)(a2 + 23) = 0;
        *(unsigned char *)a2 = 0;
        *(void *)(a1 + ++*(void *)(result + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        if (*(char *)(a2 + 23) < 0)
        {
          long long v22 = v18;
          operator delete(*(void **)a2);
          long long v18 = v22;
        }
        *(void *)a2 = v16;
        *(void *)(a2 + ++*(void *)(result + 8) = *(void *)v25;
        *(void *)(a2 + 15) = *(void *)&v25[7];
        *(unsigned char *)(a2 + 23) = v17;
        *(_OWORD *)(a2 + ++*(void *)(result + 24) = v18;
      }
    }
  }
}